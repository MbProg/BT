	.text
	.file	"bt/A/bt.A.bc"
	.file	1 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/bt.c"
	.file	2 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/../common/type.h"
	.file	3 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/../common/type.h"
	.file	4 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/c_timers.c"
	.file	5 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/../common/wtime.c"
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI0_0:
	.quad	4613937818241073152     # double 3
.LCPI0_1:
	.quad	4517329193108106637     # double 9.9999999999999995E-7
.LCPI0_2:
	.quad	4659868377175136666     # double 3478.8000000000002
.LCPI0_3:
	.quad	-4552789661037310771    # double -17655.700000000001
.LCPI0_4:
	.quad	4673432309956660429     # double 28023.700000000001
.LCPI0_5:
	.quad	4607182418800017408     # double 1
.LCPI0_6:
	.quad	4636737291354636288     # double 100
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin0:
	.loc	1 93 0                  # bt.c:93:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	1 107 13 prologue_end   # bt.c:107:13
	pushq	%rbx
.Ltmp0:
	.cfi_def_cfa_offset 16
	subq	$384, %rsp              # imm = 0x180
.Ltmp1:
	.cfi_def_cfa_offset 400
.Ltmp2:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: main:argc <- %EDI
	#DEBUG_VALUE: main:argv <- %RSI
	movl	$.L.str, %edi
.Ltmp3:
	movl	$.L.str.1, %esi
.Ltmp4:
	callq	fopen
.Ltmp5:
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 107 39 is_stmt 0      # bt.c:107:39
	testq	%rax, %rax
.Ltmp6:
	.loc	1 107 7                 # bt.c:107:7
	je	.LBB0_2
.Ltmp7:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 108 13 is_stmt 1      # bt.c:108:13
	movl	$1, timeron(%rip)
	.loc	1 109 22                # bt.c:109:22
	movl	$.L.str.3, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.2, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 296(%rsp)
	.loc	1 111 21                # bt.c:111:21
	movl	$.L.str.5, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.4, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 312(%rsp)
	.loc	1 113 20                # bt.c:113:20
	movl	$.L.str.7, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.6, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 328(%rsp)
	.loc	1 115 23                # bt.c:115:23
	movl	$.L.str.9, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.8, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 344(%rsp)
	.loc	1 117 22                # bt.c:117:22
	movl	$.L.str.11, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.10, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 360(%rsp)
	.loc	1 119 20                # bt.c:119:20
	movq	$.L.str.12, 376(%rsp)
	.loc	1 120 5                 # bt.c:120:5
	movq	%rax, %rdi
	callq	fclose
.Ltmp8:
	jmp	.LBB0_3
.Ltmp9:
.LBB0_2:                                # %if.else
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 122 13                # bt.c:122:13
	movl	$0, timeron(%rip)
.Ltmp10:
.LBB0_3:                                # %if.end
	.loc	1 125 3                 # bt.c:125:3
	movl	$.Lstr, %edi
	callq	puts
.Ltmp11:
	.loc	1 127 13                # bt.c:127:13
	movl	$.L.str.14, %edi
	movl	$.L.str.1, %esi
	callq	fopen
	movq	%rax, %rbx
.Ltmp12:
	#DEBUG_VALUE: main:fp <- %RBX
	.loc	1 127 41 is_stmt 0      # bt.c:127:41
	testq	%rbx, %rbx
.Ltmp13:
	.loc	1 127 7                 # bt.c:127:7
	je	.LBB0_9
.Ltmp14:
# BB#4:                                 # %if.then15
	#DEBUG_VALUE: main:fp <- %RBX
	.loc	1 129 5 is_stmt 1       # bt.c:129:5
	movl	$.Lstr.42, %edi
	callq	puts
	leaq	96(%rsp), %rdx
.Ltmp15:
	#DEBUG_VALUE: main:niter <- [%RDX+0]
	.loc	1 130 14                # bt.c:130:14
	movl	$.L.str.16, %esi
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
.Ltmp16:
	#DEBUG_VALUE: result <- 0
	.p2align	4, 0x90
.LBB0_5:                                # %while.cond
                                        # =>This Inner Loop Header: Depth=1
	.loc	1 131 12 discriminator 1 # bt.c:131:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	1 131 5 is_stmt 0 discriminator 1 # bt.c:131:5
	cmpl	$10, %eax
	jne	.LBB0_5
# BB#6:                                 # %while.end
	.loc	1 132 14 is_stmt 1      # bt.c:132:14
	movl	$.L.str.17, %esi
	movl	$dt, %edx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: result <- 0
	.p2align	4, 0x90
.LBB0_7:                                # %while.cond21
                                        # =>This Inner Loop Header: Depth=1
	.loc	1 133 12 discriminator 1 # bt.c:133:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	1 133 5 is_stmt 0 discriminator 1 # bt.c:133:5
	cmpl	$10, %eax
	jne	.LBB0_7
# BB#8:                                 # %while.end25
	.loc	1 134 14 is_stmt 1      # bt.c:134:14
	movl	$.L.str.18, %esi
	movl	$grid_points, %edx
	movl	$grid_points+4, %ecx
	movl	$grid_points+8, %r8d
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: result <- 0
	.loc	1 136 5                 # bt.c:136:5
	movq	%rbx, %rdi
	callq	fclose
.Ltmp17:
	.loc	1 147 7                 # bt.c:147:7
	movl	grid_points(%rip), %esi
	.loc	1 147 23 is_stmt 0      # bt.c:147:23
	movl	grid_points+4(%rip), %edx
	.loc	1 147 39                # bt.c:147:39
	movl	grid_points+8(%rip), %ecx
	jmp	.LBB0_10
.LBB0_9:                                # %if.else28
.Ltmp18:
	#DEBUG_VALUE: main:fp <- %RBX
	.loc	1 138 5 is_stmt 1       # bt.c:138:5
	movl	$.Lstr.39, %edi
	callq	puts
.Ltmp19:
	#DEBUG_VALUE: main:niter <- 200
	.loc	1 139 11                # bt.c:139:11
	movl	$200, 96(%rsp)
	.loc	1 140 11                # bt.c:140:11
	movabsq	$4560517920901055277, %rax # imm = 0x3F4A36E2EB1C432D
	movq	%rax, dt(%rip)
	.loc	1 141 20                # bt.c:141:20
	movabsq	$274877907008, %rax     # imm = 0x4000000040
	movq	%rax, grid_points(%rip)
	.loc	1 143 20                # bt.c:143:20
	movl	$64, grid_points+8(%rip)
	movl	$64, %ecx
.Ltmp20:
	.loc	1 147 23                # bt.c:147:23
	movl	$64, %edx
	.loc	1 147 7 is_stmt 0       # bt.c:147:7
	movl	$64, %esi
.Ltmp21:
.LBB0_10:                               # %if.end30
	.loc	1 146 3 is_stmt 1       # bt.c:146:3
	movl	$.L.str.20, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	1 148 46                # bt.c:148:46
	movl	96(%rsp), %esi
.Ltmp22:
	#DEBUG_VALUE: main:niter <- %ESI
	.loc	1 148 53 is_stmt 0      # bt.c:148:53
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	1 148 3                 # bt.c:148:3
	movl	$.L.str.21, %edi
	movb	$1, %al
	callq	printf
	.loc	1 149 3 is_stmt 1       # bt.c:149:3
	movl	$10, %edi
	callq	putchar
.Ltmp23:
	.loc	1 151 9                 # bt.c:151:9
	movl	grid_points(%rip), %esi
.Ltmp24:
	.loc	1 151 24 is_stmt 0      # bt.c:151:24
	cmpl	$64, %esi
	.loc	1 152 9 is_stmt 1       # bt.c:152:9
	movl	grid_points+4(%rip), %edx
	.loc	1 153 9                 # bt.c:153:9
	movl	grid_points+8(%rip), %ecx
	jg	.LBB0_13
.Ltmp25:
# BB#11:                                # %if.end30
	cmpl	$64, %edx
	jg	.LBB0_13
# BB#12:                                # %if.end30
	cmpl	$65, %ecx
	jge	.LBB0_13
# BB#15:                                # %if.end41
	xorl	%ebx, %ebx
	.loc	1 159 3                 # bt.c:159:3
	xorl	%eax, %eax
	callq	set_constants
.Ltmp26:
	#DEBUG_VALUE: main:i <- 1
	.loc	1 162 5                 # bt.c:162:5
	movl	$1, %edi
	callq	timer_clear
.Ltmp27:
	#DEBUG_VALUE: main:i <- 2
	movl	$2, %edi
	callq	timer_clear
	movl	$3, %edi
	callq	timer_clear
	movl	$4, %edi
	callq	timer_clear
	movl	$5, %edi
	callq	timer_clear
	movl	$6, %edi
	callq	timer_clear
	movl	$7, %edi
	callq	timer_clear
	movl	$8, %edi
	callq	timer_clear
	movl	$9, %edi
	callq	timer_clear
	movl	$10, %edi
	callq	timer_clear
	movl	$11, %edi
	callq	timer_clear
.Ltmp28:
	.loc	1 165 3                 # bt.c:165:3
	xorl	%eax, %eax
	callq	initialize
	.loc	1 167 3                 # bt.c:167:3
	xorl	%eax, %eax
	callq	exact_rhs
	.loc	1 172 3                 # bt.c:172:3
	xorl	%eax, %eax
	callq	adi
	.loc	1 173 3                 # bt.c:173:3
	xorl	%eax, %eax
	callq	initialize
.Ltmp29:
	#DEBUG_VALUE: main:i <- 1
	.loc	1 176 5                 # bt.c:176:5
	movl	$1, %edi
	callq	timer_clear
.Ltmp30:
	#DEBUG_VALUE: main:i <- 2
	movl	$2, %edi
	callq	timer_clear
	movl	$3, %edi
	callq	timer_clear
	movl	$4, %edi
	callq	timer_clear
	movl	$5, %edi
	callq	timer_clear
	movl	$6, %edi
	callq	timer_clear
	movl	$7, %edi
	callq	timer_clear
	movl	$8, %edi
	callq	timer_clear
	movl	$9, %edi
	callq	timer_clear
	movl	$10, %edi
	callq	timer_clear
	movl	$11, %edi
	callq	timer_clear
.Ltmp31:
	.loc	1 178 3                 # bt.c:178:3
	movl	$1, %edi
	callq	timer_start
.Ltmp32:
	#DEBUG_VALUE: main:step <- 1
	.loc	1 180 23 discriminator 1 # bt.c:180:23
	cmpl	$0, 96(%rsp)
	jle	.LBB0_20
	.p2align	4, 0x90
.LBB0_16:                               # %for.body51
                                        # =>This Inner Loop Header: Depth=1
	movl	%ebx, %eax
.Ltmp33:
	.loc	1 181 15                # bt.c:181:15
	leal	1(%rax), %ebx
	movslq	%ebx, %rcx
	imulq	$1717986919, %rcx, %rcx # imm = 0x66666667
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$35, %rcx
	addl	%edx, %ecx
	shll	$2, %ecx
	leal	(%rcx,%rcx,4), %ecx
	negl	%ecx
	.loc	1 181 34 is_stmt 0 discriminator 1 # bt.c:181:34
	testl	%eax, %eax
	je	.LBB0_18
# BB#17:                                # %for.body51
                                        #   in Loop: Header=BB0_16 Depth=1
	.loc	1 181 15                # bt.c:181:15
	leal	1(%rax,%rcx), %eax
	testl	%eax, %eax
	jne	.LBB0_19
.LBB0_18:                               # %if.then55
                                        #   in Loop: Header=BB0_16 Depth=1
.Ltmp34:
	.loc	1 182 7 is_stmt 1       # bt.c:182:7
	movl	$.L.str.25, %edi
	xorl	%eax, %eax
	movl	%ebx, %esi
	callq	printf
.Ltmp35:
.LBB0_19:                               # %if.end57
                                        #   in Loop: Header=BB0_16 Depth=1
	.loc	1 185 5                 # bt.c:185:5
	xorl	%eax, %eax
	callq	adi
.Ltmp36:
	.loc	1 180 23 discriminator 1 # bt.c:180:23
	cmpl	96(%rsp), %ebx
	jl	.LBB0_16
.Ltmp37:
.LBB0_20:                               # %for.end60
	.loc	1 188 3                 # bt.c:188:3
	movl	$1, %edi
	callq	timer_stop
	.loc	1 189 10                # bt.c:189:10
	movl	$1, %edi
	callq	timer_read
	movsd	%xmm0, 104(%rsp)        # 8-byte Spill
.Ltmp38:
	#DEBUG_VALUE: main:tmax <- [%RSP+104]
	.loc	1 191 10                # bt.c:191:10
	movl	96(%rsp), %edi
.Ltmp39:
	#DEBUG_VALUE: main:niter <- %EDI
	leaq	103(%rsp), %rsi
.Ltmp40:
	#DEBUG_VALUE: main:Class <- [%RSI+0]
	leaq	164(%rsp), %rdx
.Ltmp41:
	#DEBUG_VALUE: main:verified <- [%RDX+0]
	.loc	1 191 3 is_stmt 0       # bt.c:191:3
	callq	verify
.Ltmp42:
	movsd	104(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
.Ltmp43:
	#DEBUG_VALUE: main:tmax <- %XMM0
	.loc	1 202 30 is_stmt 1      # bt.c:202:30
	movl	grid_points(%rip), %edx
.Ltmp44:
	.loc	1 203 17                # bt.c:203:17
	movl	grid_points+4(%rip), %ecx
	.loc	1 203 33 is_stmt 0      # bt.c:203:33
	movl	grid_points+8(%rip), %r8d
.Ltmp45:
	.loc	1 195 11 is_stmt 1      # bt.c:195:11
	pxor	%xmm1, %xmm1
.Ltmp46:
	.loc	1 195 6 is_stmt 0       # bt.c:195:6
	ucomisd	%xmm1, %xmm0
	jne	.LBB0_22
	jp	.LBB0_22
	jmp	.LBB0_21
.Ltmp47:
.LBB0_22:                               # %if.then70
	#DEBUG_VALUE: main:tmax <- %XMM0
	#DEBUG_VALUE: main:Class <- [%RSI+0]
	#DEBUG_VALUE: main:niter <- %EDI
	.loc	1 194 25 is_stmt 1      # bt.c:194:25
	leal	(%rcx,%rdx), %eax
	.loc	1 194 40 is_stmt 0      # bt.c:194:40
	addl	%r8d, %eax
	.loc	1 194 10                # bt.c:194:10
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	1 194 56                # bt.c:194:56
	divsd	.LCPI0_0(%rip), %xmm1
.Ltmp48:
	#DEBUG_VALUE: main:navg <- %XMM1
	.loc	1 193 12 is_stmt 1      # bt.c:193:12
	cvtsi2sdl	%edx, %xmm3
	.loc	1 193 27 is_stmt 0      # bt.c:193:27
	cvtsi2sdl	%ecx, %xmm2
	.loc	1 193 26                # bt.c:193:26
	mulsd	%xmm3, %xmm2
	.loc	1 193 42                # bt.c:193:42
	cvtsi2sdl	%r8d, %xmm4
	.loc	1 193 41                # bt.c:193:41
	mulsd	%xmm2, %xmm4
.Ltmp49:
	#DEBUG_VALUE: main:n3 <- %XMM4
	.loc	1 196 31 is_stmt 1      # bt.c:196:31
	movl	96(%rsp), %r9d
.Ltmp50:
	#DEBUG_VALUE: main:niter <- %R9D
	.loc	1 196 23 is_stmt 0      # bt.c:196:23
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%r9d, %xmm2
	.loc	1 196 21                # bt.c:196:21
	mulsd	.LCPI0_1(%rip), %xmm2
	.loc	1 197 15 is_stmt 1      # bt.c:197:15
	mulsd	.LCPI0_2(%rip), %xmm4
.Ltmp51:
	.loc	1 197 37 is_stmt 0      # bt.c:197:37
	movapd	%xmm1, %xmm3
	mulsd	%xmm3, %xmm3
	.loc	1 197 30                # bt.c:197:30
	mulsd	.LCPI0_3(%rip), %xmm3
	.loc	1 197 20                # bt.c:197:20
	addsd	%xmm4, %xmm3
	.loc	1 197 54                # bt.c:197:54
	mulsd	.LCPI0_4(%rip), %xmm1
.Ltmp52:
	.loc	1 197 44                # bt.c:197:44
	addsd	%xmm3, %xmm1
	.loc	1 196 37 is_stmt 1      # bt.c:196:37
	mulsd	%xmm2, %xmm1
	.loc	1 198 7                 # bt.c:198:7
	divsd	%xmm0, %xmm1
.Ltmp53:
	#DEBUG_VALUE: main:mflops <- %XMM1
	jmp	.LBB0_23
.Ltmp54:
.LBB0_13:                               # %if.then38
	.loc	1 154 5                 # bt.c:154:5
	movl	$.L.str.23, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	1 155 5                 # bt.c:155:5
	movl	$.Lstr.41, %edi
	callq	puts
	jmp	.LBB0_14
.Ltmp55:
.LBB0_21:                               # %for.end60.if.end81_crit_edge
	#DEBUG_VALUE: main:tmax <- %XMM0
	#DEBUG_VALUE: main:Class <- [%RSI+0]
	#DEBUG_VALUE: main:niter <- %EDI
	.loc	1 203 49                # bt.c:203:49
	movl	96(%rsp), %r9d
.Ltmp56:
.LBB0_23:                               # %if.end81
	#DEBUG_VALUE: main:Class <- [%RSI+0]
	#DEBUG_VALUE: main:tmax <- %XMM0
	.loc	1 205 17                # bt.c:205:17
	movl	164(%rsp), %eax
.Ltmp57:
	#DEBUG_VALUE: main:verified <- %EAX
	.loc	1 202 3                 # bt.c:202:3
	movsbl	103(%rsp), %esi
.Ltmp58:
	movl	%eax, 8(%rsp)
	movq	$.L.str.30, 80(%rsp)
	movq	$.L.str.30, 72(%rsp)
	movq	$.L.str.30, 64(%rsp)
	movq	$.L.str.31, 56(%rsp)
	movq	$.L.str.30, 48(%rsp)
	movq	$.L.str.30, 40(%rsp)
	movq	$.L.str.30, 32(%rsp)
	movq	$.L.str.29, 24(%rsp)
	movq	$.L.str.28, 16(%rsp)
	movq	$.L.str.27, (%rsp)
.Ltmp59:
	#DEBUG_VALUE: main:niter <- %R9D
	movl	$.L.str.26, %edi
	callq	print_results
.Ltmp60:
	.loc	1 211 7                 # bt.c:211:7
	cmpl	$0, timeron(%rip)
	je	.LBB0_14
.Ltmp61:
# BB#24:                                # %for.body86.preheader
	#DEBUG_VALUE: main:tmax <- %XMM0
	#DEBUG_VALUE: main:niter <- %R9D
	#DEBUG_VALUE: main:verified <- %EAX
	.loc	1 213 18                # bt.c:213:18
	movl	$1, %edi
	callq	timer_read
.Ltmp62:
	.loc	1 213 16 is_stmt 0      # bt.c:213:16
	movsd	%xmm0, 168(%rsp)        # 8-byte Spill
	movsd	%xmm0, 200(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$2, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 208(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$3, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 152(%rsp)        # 8-byte Spill
	movsd	%xmm0, 216(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$4, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 144(%rsp)        # 8-byte Spill
	movsd	%xmm0, 224(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$5, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 128(%rsp)        # 8-byte Spill
	movsd	%xmm0, 232(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$6, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 240(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$7, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 248(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$8, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 120(%rsp)        # 8-byte Spill
	movsd	%xmm0, 256(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$9, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 112(%rsp)        # 8-byte Spill
	movsd	%xmm0, 264(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$10, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 136(%rsp)        # 8-byte Spill
	movsd	%xmm0, 272(%rsp)
	.loc	1 213 18                # bt.c:213:18
	movl	$11, %edi
	callq	timer_read
	.loc	1 213 16                # bt.c:213:16
	movsd	%xmm0, 280(%rsp)
.Ltmp63:
	.loc	1 216 14 is_stmt 1      # bt.c:216:14
	xorpd	%xmm0, %xmm0
.Ltmp64:
	#DEBUG_VALUE: main:tmax <- 1.000000e+00
	movsd	104(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
.Ltmp65:
	.loc	1 216 9 is_stmt 0       # bt.c:216:9
	movapd	%xmm1, %xmm2
	cmpeqsd	%xmm0, %xmm2
	movsd	.LCPI0_5(%rip), %xmm0   # xmm0 = mem[0],zero
	andpd	%xmm2, %xmm0
	andnpd	%xmm1, %xmm2
	orpd	%xmm0, %xmm2
	.loc	1 217 5 is_stmt 1       # bt.c:217:5
	movsd	%xmm2, 104(%rsp)        # 8-byte Spill
	movl	$.Lstr.40, %edi
	callq	puts
.Ltmp66:
	movsd	168(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
.Ltmp67:
	#DEBUG_VALUE: main:i <- 1
	movsd	152(%rsp), %xmm3        # 8-byte Reload
                                        # xmm3 = mem[0],zero
.Ltmp68:
	.loc	1 222 27                # bt.c:222:27
	addsd	208(%rsp), %xmm3
	.loc	1 222 43 is_stmt 0      # bt.c:222:43
	addsd	144(%rsp), %xmm3        # 8-byte Folded Reload
.Ltmp69:
	#DEBUG_VALUE: main:t <- %XMM3
	.loc	1 223 65 is_stmt 1      # bt.c:223:65
	movsd	%xmm3, 152(%rsp)        # 8-byte Spill
	movsd	.LCPI0_6(%rip), %xmm1   # xmm1 = mem[0],zero
	movapd	%xmm3, %xmm2
	mulsd	%xmm1, %xmm2
	movsd	104(%rsp), %xmm5        # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	1 223 70 is_stmt 0      # bt.c:223:70
	divsd	%xmm5, %xmm2
	movsd	%xmm2, 144(%rsp)        # 8-byte Spill
	movsd	128(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	1 224 26 is_stmt 1      # bt.c:224:26
	subsd	%xmm3, %xmm2
.Ltmp70:
	#DEBUG_VALUE: main:t <- %XMM2
	.loc	1 225 66                # bt.c:225:66
	movsd	%xmm2, 128(%rsp)        # 8-byte Spill
.Ltmp71:
	#DEBUG_VALUE: main:t <- [%RSP+128]
	mulsd	%xmm1, %xmm2
	.loc	1 225 71 is_stmt 0      # bt.c:225:71
	divsd	%xmm5, %xmm2
	movsd	%xmm2, 184(%rsp)        # 8-byte Spill
	movsd	120(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	112(%rsp), %xmm3        # 8-byte Reload
                                        # xmm3 = mem[0],zero
.Ltmp72:
	.loc	1 227 29 is_stmt 1      # bt.c:227:29
	subsd	%xmm3, %xmm2
	movsd	136(%rsp), %xmm4        # 8-byte Reload
                                        # xmm4 = mem[0],zero
	.loc	1 227 46 is_stmt 0      # bt.c:227:46
	subsd	%xmm4, %xmm2
.Ltmp73:
	#DEBUG_VALUE: main:t <- %XMM2
	.loc	1 228 66 is_stmt 1      # bt.c:228:66
	movsd	%xmm2, 120(%rsp)        # 8-byte Spill
.Ltmp74:
	#DEBUG_VALUE: main:t <- [%RSP+120]
	mulsd	%xmm1, %xmm2
	.loc	1 228 71 is_stmt 0      # bt.c:228:71
	divsd	%xmm5, %xmm2
	movsd	%xmm2, 176(%rsp)        # 8-byte Spill
	movapd	%xmm3, %xmm2
.Ltmp75:
	.loc	1 230 28 is_stmt 1      # bt.c:230:28
	addsd	%xmm4, %xmm2
.Ltmp76:
	#DEBUG_VALUE: main:t <- %XMM2
	.loc	1 231 64                # bt.c:231:64
	movsd	%xmm2, 112(%rsp)        # 8-byte Spill
.Ltmp77:
	#DEBUG_VALUE: main:t <- [%RSP+112]
	mulsd	%xmm1, %xmm2
	.loc	1 231 69 is_stmt 0      # bt.c:231:69
	divsd	%xmm5, %xmm2
	movsd	%xmm2, 136(%rsp)        # 8-byte Spill
	movl	$.L.str.2, %esi
	movl	$2, %ebx
	jmp	.LBB0_25
.Ltmp78:
	.p2align	4, 0x90
.LBB0_33:                               # %for.inc151.for.body100_crit_edge
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 220 11 is_stmt 1      # bt.c:220:11
	movq	288(%rsp,%rbx,8), %rsi
	.loc	1 220 23 is_stmt 0      # bt.c:220:23
	movsd	192(%rsp,%rbx,8), %xmm0 # xmm0 = mem[0],zero
.Ltmp79:
	.loc	1 218 5 is_stmt 1 discriminator 1 # bt.c:218:5
	incq	%rbx
.LBB0_25:                               # %for.body100
                                        # =>This Inner Loop Header: Depth=1
.Ltmp80:
	.loc	1 220 41                # bt.c:220:41
	movapd	%xmm0, %xmm1
	mulsd	.LCPI0_6(%rip), %xmm1
	.loc	1 220 46 is_stmt 0      # bt.c:220:46
	divsd	104(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	1 219 7 is_stmt 1       # bt.c:219:7
	movl	$.L.str.33, %edi
	movb	$2, %al
	callq	printf
	.loc	1 221 11                # bt.c:221:11
	leal	-1(%rbx), %eax
	cmpl	$10, %eax
	je	.LBB0_30
# BB#26:                                # %for.body100
                                        #   in Loop: Header=BB0_25 Depth=1
	cmpl	$8, %eax
	je	.LBB0_29
# BB#27:                                # %for.body100
                                        #   in Loop: Header=BB0_25 Depth=1
	cmpl	$5, %eax
	jne	.LBB0_32
# BB#28:                                # %if.then112
                                        #   in Loop: Header=BB0_25 Depth=1
.Ltmp81:
	.loc	1 223 9                 # bt.c:223:9
	movl	$.L.str.34, %edi
	movl	$.L.str.35, %esi
	movb	$2, %al
	movsd	152(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	144(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	printf
	.loc	1 225 9                 # bt.c:225:9
	movl	$.L.str.34, %edi
	movl	$.L.str.36, %esi
	movb	$2, %al
	movsd	128(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	184(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	jmp	.LBB0_31
.Ltmp82:
	.p2align	4, 0x90
.LBB0_30:                               # %if.then141
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 231 9                 # bt.c:231:9
	movl	$.L.str.34, %edi
	movl	$.L.str.38, %esi
	movb	$2, %al
	movsd	112(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	136(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	jmp	.LBB0_31
.Ltmp83:
	.p2align	4, 0x90
.LBB0_29:                               # %if.then129
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 228 9                 # bt.c:228:9
	movl	$.L.str.34, %edi
	movl	$.L.str.37, %esi
	movb	$2, %al
	movsd	120(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	176(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
.Ltmp84:
.LBB0_31:                               # %for.inc151
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 231 9                 # bt.c:231:9
	callq	printf
.Ltmp85:
.LBB0_32:                               # %for.inc151
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 218 5 discriminator 1 # bt.c:218:5
	cmpq	$12, %rbx
	jne	.LBB0_33
.Ltmp86:
.LBB0_14:                               # %cleanup
	.loc	1 237 1                 # bt.c:237:1
	xorl	%eax, %eax
	addq	$384, %rsp              # imm = 0x180
	popq	%rbx
	retq
.Ltmp87:
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI1_0:
	.quad	4616189618054758400     # double 4
	.quad	4617315517961601024     # double 5
.LCPI1_1:
	.quad	4613937818241073152     # double 3
	.quad	4602678819172646912     # double 0.5
.LCPI1_2:
	.quad	4581421828931458171     # double 0.02
	.quad	4576918229304087675     # double 0.01
.LCPI1_3:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4602678819172646912     # double 0.5
.LCPI1_4:
	.quad	4600877379321698714     # double 0.40000000000000002
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI1_5:
	.quad	4607182418800017408     # double 1
	.quad	4611686018427387904     # double 2
.LCPI1_6:
	.quad	4613937818241073152     # double 3
	.quad	4576918229304087675     # double 0.01
.LCPI1_7:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4581421828931458171     # double 0.02
.LCPI1_8:
	.quad	4602678819172646912     # double 0.5
	.quad	4611686018427387904     # double 2
.LCPI1_9:
	.quad	4611686018427387904     # double 2
	.quad	4613937818241073152     # double 3
.LCPI1_10:
	.quad	4585925428558828667     # double 0.040000000000000001
	.quad	4584304132692975288     # double 0.029999999999999999
.LCPI1_11:
	.quad	4587366580439587226     # double 0.050000000000000003
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI1_12:
	.quad	4602678819172646912     # double 0.5
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI1_13:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4587366580439587226     # double 0.050000000000000003
.LCPI1_14:
	.quad	4585925428558828667     # double 0.040000000000000001
	.quad	4596373779694328218     # double 0.20000000000000001
.LCPI1_15:
	.quad	4591870180066957722     # double 0.10000000000000001
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI1_16:
	.quad	4617315517961601024     # double 5
	.quad	4616189618054758400     # double 4
.LCPI1_17:
	.quad	4613937818241073152     # double 3
	.quad	4611686018427387904     # double 2
.LCPI1_18:
	.quad	4591870180066957722     # double 0.10000000000000001
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI1_19:
	.quad	4587366580439587226     # double 0.050000000000000003
	.quad	4585925428558828667     # double 0.040000000000000001
.LCPI1_20:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI1_21:
	.quad	4599075939470750515     # double 0.29999999999999999
	.quad	4596373779694328218     # double 0.20000000000000001
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI1_22:
	.quad	4607182418800017408     # double 1
.LCPI1_23:
	.quad	4598175219545276416     # double 0.25
.LCPI1_24:
	.quad	4616189618054758400     # double 4
.LCPI1_25:
	.quad	4617315517961601024     # double 5
.LCPI1_26:
	.quad	4618441417868443648     # double 6
.LCPI1_27:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI1_28:
	.quad	4604930618986332160     # double 0.75
.LCPI1_29:
	.quad	4608683618675807573     # double 1.3333333333333333
.LCPI1_30:
	.quad	4595172819793696085     # double 0.16666666666666666
	.text
	.globl	set_constants
	.p2align	4, 0x90
	.type	set_constants,@function
set_constants:                          # @set_constants
.Lfunc_begin1:
	.file	6 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/set_constants.c"
	.loc	6 37 0                  # set_constants.c:37:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	6 38 13 prologue_end    # set_constants.c:38:13
	movabsq	$4611686018427387904, %rcx # imm = 0x4000000000000000
	movq	%rcx, ce(%rip)
	.loc	6 40 13                 # set_constants.c:40:13
	xorps	%xmm0, %xmm0
	movups	%xmm0, ce+8(%rip)
	.loc	6 41 13                 # set_constants.c:41:13
	movaps	.LCPI1_0(%rip), %xmm1   # xmm1 = [4.000000e+00,5.000000e+00]
	movups	%xmm1, ce+24(%rip)
	.loc	6 43 13                 # set_constants.c:43:13
	movaps	.LCPI1_1(%rip), %xmm1   # xmm1 = [3.000000e+00,5.000000e-01]
	movups	%xmm1, ce+40(%rip)
	.loc	6 45 13                 # set_constants.c:45:13
	movaps	.LCPI1_2(%rip), %xmm1   # xmm1 = [2.000000e-02,1.000000e-02]
	movups	%xmm1, ce+56(%rip)
	.loc	6 47 13                 # set_constants.c:47:13
	movaps	.LCPI1_3(%rip), %xmm1   # xmm1 = [3.000000e-02,5.000000e-01]
	movups	%xmm1, ce+72(%rip)
	.loc	6 49 13                 # set_constants.c:49:13
	movaps	.LCPI1_4(%rip), %xmm1   # xmm1 = [4.000000e-01,3.000000e-01]
	movups	%xmm1, ce+88(%rip)
	.loc	6 52 13                 # set_constants.c:52:13
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, ce+104(%rip)
	.loc	6 54 13                 # set_constants.c:54:13
	movaps	%xmm0, ce+112(%rip)
	movq	$0, ce+128(%rip)
	.loc	6 56 13                 # set_constants.c:56:13
	movaps	.LCPI1_5(%rip), %xmm2   # xmm2 = [1.000000e+00,2.000000e+00]
	movups	%xmm2, ce+136(%rip)
	.loc	6 58 13                 # set_constants.c:58:13
	movaps	.LCPI1_6(%rip), %xmm2   # xmm2 = [3.000000e+00,1.000000e-02]
	movups	%xmm2, ce+152(%rip)
	.loc	6 60 13                 # set_constants.c:60:13
	movaps	.LCPI1_7(%rip), %xmm2   # xmm2 = [3.000000e-02,2.000000e-02]
	movups	%xmm2, ce+168(%rip)
	.loc	6 62 13                 # set_constants.c:62:13
	movups	%xmm1, ce+184(%rip)
	.loc	6 64 13                 # set_constants.c:64:13
	movaps	.LCPI1_8(%rip), %xmm1   # xmm1 = [5.000000e-01,2.000000e+00]
	movups	%xmm1, ce+200(%rip)
	.loc	6 67 13                 # set_constants.c:67:13
	movq	%rcx, ce+216(%rip)
	.loc	6 69 13                 # set_constants.c:69:13
	movaps	%xmm0, ce+224(%rip)
	movq	$0, ce+240(%rip)
	.loc	6 71 13                 # set_constants.c:71:13
	movaps	.LCPI1_9(%rip), %xmm1   # xmm1 = [2.000000e+00,3.000000e+00]
	movups	%xmm1, ce+248(%rip)
	.loc	6 73 13                 # set_constants.c:73:13
	movaps	.LCPI1_10(%rip), %xmm2  # xmm2 = [4.000000e-02,3.000000e-02]
	movups	%xmm2, ce+264(%rip)
	.loc	6 75 13                 # set_constants.c:75:13
	movaps	.LCPI1_11(%rip), %xmm2  # xmm2 = [5.000000e-02,3.000000e-01]
	movups	%xmm2, ce+280(%rip)
	.loc	6 77 13                 # set_constants.c:77:13
	movaps	.LCPI1_12(%rip), %xmm2  # xmm2 = [5.000000e-01,4.000000e-01]
	movups	%xmm2, ce+296(%rip)
	.loc	6 80 13                 # set_constants.c:80:13
	movq	%rcx, ce+312(%rip)
	.loc	6 81 13                 # set_constants.c:81:13
	movq	%rcx, ce+320(%rip)
	.loc	6 83 13                 # set_constants.c:83:13
	movups	%xmm0, ce+328(%rip)
	movq	$0, ce+344(%rip)
	.loc	6 85 13                 # set_constants.c:85:13
	movaps	%xmm1, ce+352(%rip)
	.loc	6 87 13                 # set_constants.c:87:13
	movaps	.LCPI1_13(%rip), %xmm0  # xmm0 = [3.000000e-02,5.000000e-02]
	movaps	%xmm0, ce+368(%rip)
	.loc	6 89 12                 # set_constants.c:89:12
	movaps	.LCPI1_14(%rip), %xmm0  # xmm0 = [4.000000e-02,2.000000e-01]
	movaps	%xmm0, ce+384(%rip)
	.loc	6 91 13                 # set_constants.c:91:13
	movaps	.LCPI1_15(%rip), %xmm0  # xmm0 = [1.000000e-01,3.000000e-01]
	movaps	%xmm0, ce+400(%rip)
	.loc	6 94 13                 # set_constants.c:94:13
	movaps	.LCPI1_16(%rip), %xmm0  # xmm0 = [5.000000e+00,4.000000e+00]
	movaps	%xmm0, ce+416(%rip)
	.loc	6 96 13                 # set_constants.c:96:13
	movaps	.LCPI1_17(%rip), %xmm0  # xmm0 = [3.000000e+00,2.000000e+00]
	movaps	%xmm0, ce+432(%rip)
	.loc	6 98 13                 # set_constants.c:98:13
	movaps	.LCPI1_18(%rip), %xmm0  # xmm0 = [1.000000e-01,4.000000e-01]
	movaps	%xmm0, ce+448(%rip)
	.loc	6 49 13                 # set_constants.c:49:13
	movabsq	$4599075939470750515, %rcx # imm = 0x3FD3333333333333
	.loc	6 100 13                # set_constants.c:100:13
	movq	%rcx, ce+464(%rip)
	.loc	6 101 13                # set_constants.c:101:13
	movaps	.LCPI1_19(%rip), %xmm0  # xmm0 = [5.000000e-02,4.000000e-02]
	movups	%xmm0, ce+472(%rip)
	.loc	6 103 12                # set_constants.c:103:12
	movaps	.LCPI1_20(%rip), %xmm0  # xmm0 = [3.000000e-02,1.000000e-01]
	movups	%xmm0, ce+488(%rip)
	.loc	6 105 13                # set_constants.c:105:13
	movaps	.LCPI1_21(%rip), %xmm0  # xmm0 = [3.000000e-01,2.000000e-01]
	movups	%xmm0, ce+504(%rip)
	.loc	6 108 6                 # set_constants.c:108:6
	movabsq	$4608983858650965606, %rcx # imm = 0x3FF6666666666666
	movq	%rcx, c1(%rip)
	.loc	6 49 13                 # set_constants.c:49:13
	movabsq	$4600877379321698714, %rdx # imm = 0x3FD999999999999A
	.loc	6 109 6                 # set_constants.c:109:6
	movq	%rdx, c2(%rip)
	.loc	6 91 13                 # set_constants.c:91:13
	movabsq	$4591870180066957722, %rdx # imm = 0x3FB999999999999A
	.loc	6 110 6                 # set_constants.c:110:6
	movq	%rdx, c3(%rip)
	.loc	6 111 6                 # set_constants.c:111:6
	movq	%rax, c4(%rip)
	.loc	6 112 6                 # set_constants.c:112:6
	movq	%rcx, c5(%rip)
	.loc	6 114 26                # set_constants.c:114:26
	movl	grid_points(%rip), %ecx
	.loc	6 114 40 is_stmt 0      # set_constants.c:114:40
	decl	%ecx
	.loc	6 114 17                # set_constants.c:114:17
	cvtsi2sdl	%ecx, %xmm2
	.loc	6 52 13 is_stmt 1       # set_constants.c:52:13
	movsd	.LCPI1_22(%rip), %xmm0  # xmm0 = mem[0],zero
	.loc	6 114 15                # set_constants.c:114:15
	movapd	%xmm0, %xmm1
	divsd	%xmm2, %xmm1
	.loc	6 114 9 is_stmt 0       # set_constants.c:114:9
	movsd	%xmm1, dnxm1(%rip)
	.loc	6 115 26 is_stmt 1      # set_constants.c:115:26
	movl	grid_points+4(%rip), %ecx
	.loc	6 115 40 is_stmt 0      # set_constants.c:115:40
	decl	%ecx
	.loc	6 115 17                # set_constants.c:115:17
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%ecx, %xmm2
	.loc	6 115 15                # set_constants.c:115:15
	movapd	%xmm0, %xmm5
	divsd	%xmm2, %xmm5
	.loc	6 115 9                 # set_constants.c:115:9
	movsd	%xmm5, dnym1(%rip)
	.loc	6 116 26 is_stmt 1      # set_constants.c:116:26
	movl	grid_points+8(%rip), %ecx
	.loc	6 116 40 is_stmt 0      # set_constants.c:116:40
	decl	%ecx
	.loc	6 116 17                # set_constants.c:116:17
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%ecx, %xmm2
	.loc	6 116 15                # set_constants.c:116:15
	movapd	%xmm0, %xmm3
	divsd	%xmm2, %xmm3
	.loc	6 116 9                 # set_constants.c:116:9
	movsd	%xmm3, dnzm1(%rip)
	.loc	6 118 8 is_stmt 1       # set_constants.c:118:8
	movabsq	$4603219251127931371, %rcx # imm = 0x3FE1EB851EB851EB
	movq	%rcx, c1c2(%rip)
	.loc	6 119 8                 # set_constants.c:119:8
	movabsq	$4611505874442293083, %rcx # imm = 0x3FFF5C28F5C28F5B
	movq	%rcx, c1c5(%rip)
	.loc	6 120 8                 # set_constants.c:120:8
	movq	%rdx, c3c4(%rip)
	.loc	6 121 9                 # set_constants.c:121:9
	movabsq	$4596229664506252361, %rcx # imm = 0x3FC916872B020C49
	movq	%rcx, c1345(%rip)
	.loc	6 123 9                 # set_constants.c:123:9
	movabsq	$-4616549906024948042, %rcx # imm = 0xBFEEB851EB851EB6
	movq	%rcx, conz1(%rip)
	.loc	6 125 22                # set_constants.c:125:22
	movapd	%xmm1, %xmm4
	mulsd	%xmm4, %xmm4
	.loc	6 125 13 is_stmt 0      # set_constants.c:125:13
	movapd	%xmm0, %xmm10
	divsd	%xmm4, %xmm10
	.loc	6 125 7                 # set_constants.c:125:7
	movsd	%xmm10, tx1(%rip)
	.loc	6 127 13 is_stmt 1      # set_constants.c:127:13
	movapd	%xmm0, %xmm8
	divsd	%xmm1, %xmm8
	.loc	6 126 20                # set_constants.c:126:20
	addsd	%xmm1, %xmm1
	.loc	6 126 13 is_stmt 0      # set_constants.c:126:13
	movapd	%xmm0, %xmm6
	divsd	%xmm1, %xmm6
	.loc	6 126 7                 # set_constants.c:126:7
	movsd	%xmm6, tx2(%rip)
	.loc	6 127 7 is_stmt 1       # set_constants.c:127:7
	movsd	%xmm8, tx3(%rip)
	.loc	6 129 22                # set_constants.c:129:22
	movapd	%xmm5, %xmm1
	mulsd	%xmm1, %xmm1
	.loc	6 129 13 is_stmt 0      # set_constants.c:129:13
	movapd	%xmm0, %xmm4
	divsd	%xmm1, %xmm4
	.loc	6 129 7                 # set_constants.c:129:7
	movsd	%xmm4, ty1(%rip)
	.loc	6 131 13 is_stmt 1      # set_constants.c:131:13
	movapd	%xmm0, %xmm1
	divsd	%xmm5, %xmm1
	.loc	6 130 20                # set_constants.c:130:20
	addsd	%xmm5, %xmm5
	.loc	6 130 13 is_stmt 0      # set_constants.c:130:13
	movapd	%xmm0, %xmm7
	divsd	%xmm5, %xmm7
	.loc	6 130 7                 # set_constants.c:130:7
	movsd	%xmm7, ty2(%rip)
	.loc	6 131 7 is_stmt 1       # set_constants.c:131:7
	movsd	%xmm1, ty3(%rip)
	.loc	6 133 13                # set_constants.c:133:13
	movapd	%xmm0, %xmm9
	.loc	6 134 20                # set_constants.c:134:20
	movapd	%xmm3, %xmm2
	.loc	6 134 13 is_stmt 0      # set_constants.c:134:13
	movapd	%xmm0, %xmm5
	.loc	6 135 13 is_stmt 1      # set_constants.c:135:13
	divsd	%xmm3, %xmm0
	.loc	6 133 22                # set_constants.c:133:22
	mulsd	%xmm3, %xmm3
	.loc	6 133 13 is_stmt 0      # set_constants.c:133:13
	divsd	%xmm3, %xmm9
	.loc	6 133 7                 # set_constants.c:133:7
	movsd	%xmm9, tz1(%rip)
	.loc	6 134 20 is_stmt 1      # set_constants.c:134:20
	addsd	%xmm2, %xmm2
	.loc	6 134 13 is_stmt 0      # set_constants.c:134:13
	divsd	%xmm2, %xmm5
	.loc	6 134 7                 # set_constants.c:134:7
	movsd	%xmm5, tz2(%rip)
	.loc	6 135 7 is_stmt 1       # set_constants.c:135:7
	movsd	%xmm0, tz3(%rip)
	.loc	6 137 7                 # set_constants.c:137:7
	movabsq	$4604930618986332160, %rcx # imm = 0x3FE8000000000000
	movq	%rcx, dx1(%rip)
	.loc	6 138 7                 # set_constants.c:138:7
	movq	%rcx, dx2(%rip)
	.loc	6 139 7                 # set_constants.c:139:7
	movq	%rcx, dx3(%rip)
	.loc	6 140 7                 # set_constants.c:140:7
	movq	%rcx, dx4(%rip)
	.loc	6 141 7                 # set_constants.c:141:7
	movq	%rcx, dx5(%rip)
	.loc	6 143 7                 # set_constants.c:143:7
	movq	%rcx, dy1(%rip)
	.loc	6 144 7                 # set_constants.c:144:7
	movq	%rcx, dy2(%rip)
	.loc	6 145 7                 # set_constants.c:145:7
	movq	%rcx, dy3(%rip)
	.loc	6 146 7                 # set_constants.c:146:7
	movq	%rcx, dy4(%rip)
	.loc	6 147 7                 # set_constants.c:147:7
	movq	%rcx, dy5(%rip)
	.loc	6 149 7                 # set_constants.c:149:7
	movq	%rax, dz1(%rip)
	.loc	6 150 7                 # set_constants.c:150:7
	movq	%rax, dz2(%rip)
	.loc	6 151 7                 # set_constants.c:151:7
	movq	%rax, dz3(%rip)
	.loc	6 152 7                 # set_constants.c:152:7
	movq	%rax, dz4(%rip)
	.loc	6 153 7                 # set_constants.c:153:7
	movq	%rax, dz5(%rip)
	.loc	6 155 9 discriminator 3 # set_constants.c:155:9
	movq	%rcx, dxmax(%rip)
	.loc	6 156 9 discriminator 3 # set_constants.c:156:9
	movq	%rcx, dymax(%rip)
	.loc	6 157 9 discriminator 3 # set_constants.c:157:9
	movq	%rax, dzmax(%rip)
	.loc	6 159 8 discriminator 9 # set_constants.c:159:8
	movabsq	$4598175219545276416, %rcx # imm = 0x3FD0000000000000
	movq	%rcx, dssp(%rip)
	.loc	6 161 10                # set_constants.c:161:10
	movq	%rax, c4dssp(%rip)
	.loc	6 162 10                # set_constants.c:162:10
	movabsq	$4608308318706860032, %rax # imm = 0x3FF4000000000000
	movq	%rax, c5dssp(%rip)
	.loc	6 164 11                # set_constants.c:164:11
	movsd	dt(%rip), %xmm2         # xmm2 = mem[0],zero
	.loc	6 164 13 is_stmt 0      # set_constants.c:164:13
	movapd	%xmm2, %xmm3
	mulsd	%xmm10, %xmm3
	.loc	6 164 9                 # set_constants.c:164:9
	movsd	%xmm3, dttx1(%rip)
	.loc	6 165 13 is_stmt 1      # set_constants.c:165:13
	mulsd	%xmm2, %xmm6
	.loc	6 165 9 is_stmt 0       # set_constants.c:165:9
	movsd	%xmm6, dttx2(%rip)
	.loc	6 166 13 is_stmt 1      # set_constants.c:166:13
	movapd	%xmm2, %xmm6
	mulsd	%xmm4, %xmm6
	.loc	6 166 9 is_stmt 0       # set_constants.c:166:9
	movsd	%xmm6, dtty1(%rip)
	.loc	6 167 13 is_stmt 1      # set_constants.c:167:13
	mulsd	%xmm2, %xmm7
	.loc	6 167 9 is_stmt 0       # set_constants.c:167:9
	movsd	%xmm7, dtty2(%rip)
	.loc	6 168 13 is_stmt 1      # set_constants.c:168:13
	movapd	%xmm2, %xmm7
	mulsd	%xmm9, %xmm7
	.loc	6 168 9 is_stmt 0       # set_constants.c:168:9
	movsd	%xmm7, dttz1(%rip)
	.loc	6 169 13 is_stmt 1      # set_constants.c:169:13
	mulsd	%xmm2, %xmm5
	.loc	6 169 9 is_stmt 0       # set_constants.c:169:9
	movsd	%xmm5, dttz2(%rip)
	.loc	6 171 16 is_stmt 1      # set_constants.c:171:16
	addsd	%xmm3, %xmm3
	.loc	6 171 11 is_stmt 0      # set_constants.c:171:11
	movsd	%xmm3, c2dttx1(%rip)
	.loc	6 172 16 is_stmt 1      # set_constants.c:172:16
	addsd	%xmm6, %xmm6
	.loc	6 172 11 is_stmt 0      # set_constants.c:172:11
	movsd	%xmm6, c2dtty1(%rip)
	.loc	6 173 16 is_stmt 1      # set_constants.c:173:16
	addsd	%xmm7, %xmm7
	.loc	6 173 11 is_stmt 0      # set_constants.c:173:11
	movsd	%xmm7, c2dttz1(%rip)
	.loc	6 175 14 is_stmt 1      # set_constants.c:175:14
	mulsd	.LCPI1_23(%rip), %xmm2
	.loc	6 175 10 is_stmt 0      # set_constants.c:175:10
	movsd	%xmm2, dtdssp(%rip)
	.loc	6 177 10 is_stmt 1      # set_constants.c:177:10
	movsd	%xmm2, comz1(%rip)
	movsd	.LCPI1_24(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	6 178 15                # set_constants.c:178:15
	mulsd	%xmm2, %xmm3
	.loc	6 178 10 is_stmt 0      # set_constants.c:178:10
	movsd	%xmm3, comz4(%rip)
	movsd	.LCPI1_25(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	6 179 15 is_stmt 1      # set_constants.c:179:15
	mulsd	%xmm2, %xmm3
	.loc	6 179 10 is_stmt 0      # set_constants.c:179:10
	movsd	%xmm3, comz5(%rip)
	.loc	6 180 15 is_stmt 1      # set_constants.c:180:15
	mulsd	.LCPI1_26(%rip), %xmm2
	.loc	6 180 10 is_stmt 0      # set_constants.c:180:10
	movsd	%xmm2, comz6(%rip)
	.loc	6 91 13 is_stmt 1       # set_constants.c:91:13
	movsd	.LCPI1_27(%rip), %xmm2  # xmm2 = mem[0],zero
	.loc	6 182 17                # set_constants.c:182:17
	movapd	%xmm8, %xmm6
	mulsd	%xmm2, %xmm6
	.loc	6 182 11 is_stmt 0      # set_constants.c:182:11
	movsd	%xmm6, c3c4tx3(%rip)
	.loc	6 183 17 is_stmt 1      # set_constants.c:183:17
	mulsd	%xmm2, %xmm1
	.loc	6 183 11 is_stmt 0      # set_constants.c:183:11
	movsd	%xmm1, c3c4ty3(%rip)
	.loc	6 184 17 is_stmt 1      # set_constants.c:184:17
	mulsd	%xmm2, %xmm0
	.loc	6 184 11 is_stmt 0      # set_constants.c:184:11
	movsd	%xmm0, c3c4tz3(%rip)
	.loc	6 137 7 is_stmt 1       # set_constants.c:137:7
	movsd	.LCPI1_28(%rip), %xmm2  # xmm2 = mem[0],zero
	.loc	6 186 15                # set_constants.c:186:15
	mulsd	%xmm2, %xmm10
	.loc	6 186 10 is_stmt 0      # set_constants.c:186:10
	movsd	%xmm10, dx1tx1(%rip)
	.loc	6 187 10 is_stmt 1      # set_constants.c:187:10
	movsd	%xmm10, dx2tx1(%rip)
	.loc	6 188 10                # set_constants.c:188:10
	movsd	%xmm10, dx3tx1(%rip)
	.loc	6 189 10                # set_constants.c:189:10
	movsd	%xmm10, dx4tx1(%rip)
	.loc	6 190 10                # set_constants.c:190:10
	movsd	%xmm10, dx5tx1(%rip)
	.loc	6 192 15                # set_constants.c:192:15
	mulsd	%xmm2, %xmm4
	.loc	6 192 10 is_stmt 0      # set_constants.c:192:10
	movsd	%xmm4, dy1ty1(%rip)
	.loc	6 193 10 is_stmt 1      # set_constants.c:193:10
	movsd	%xmm4, dy2ty1(%rip)
	.loc	6 194 10                # set_constants.c:194:10
	movsd	%xmm4, dy3ty1(%rip)
	.loc	6 195 10                # set_constants.c:195:10
	movsd	%xmm4, dy4ty1(%rip)
	.loc	6 196 10                # set_constants.c:196:10
	movsd	%xmm4, dy5ty1(%rip)
	.loc	6 198 10                # set_constants.c:198:10
	movsd	%xmm9, dz1tz1(%rip)
	.loc	6 199 10                # set_constants.c:199:10
	movsd	%xmm9, dz2tz1(%rip)
	.loc	6 200 10                # set_constants.c:200:10
	movsd	%xmm9, dz3tz1(%rip)
	.loc	6 201 10                # set_constants.c:201:10
	movsd	%xmm9, dz4tz1(%rip)
	.loc	6 202 10                # set_constants.c:202:10
	movsd	%xmm9, dz5tz1(%rip)
	.loc	6 204 9                 # set_constants.c:204:9
	movabsq	$4612811918334230528, %rax # imm = 0x4004000000000000
	movq	%rax, c2iv(%rip)
	.loc	6 205 9                 # set_constants.c:205:9
	movabsq	$4608683618675807573, %rax # imm = 0x3FF5555555555555
	movq	%rax, con43(%rip)
	.loc	6 206 9                 # set_constants.c:206:9
	movabsq	$4595172819793696085, %rax # imm = 0x3FC5555555555555
	movq	%rax, con16(%rip)
	.loc	6 205 9                 # set_constants.c:205:9
	movsd	.LCPI1_29(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	6 208 19                # set_constants.c:208:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm3, %xmm2
	.loc	6 208 25 is_stmt 0      # set_constants.c:208:25
	mulsd	%xmm8, %xmm2
	.loc	6 208 10                # set_constants.c:208:10
	movsd	%xmm2, xxcon1(%rip)
	.loc	6 209 19 is_stmt 1      # set_constants.c:209:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm8, %xmm2
	.loc	6 209 10 is_stmt 0      # set_constants.c:209:10
	movsd	%xmm2, xxcon2(%rip)
	.loc	6 210 20 is_stmt 1      # set_constants.c:210:20
	movsd	conz1(%rip), %xmm4      # xmm4 = mem[0],zero
	.loc	6 210 19 is_stmt 0      # set_constants.c:210:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm4, %xmm2
	.loc	6 210 25                # set_constants.c:210:25
	mulsd	%xmm8, %xmm2
	.loc	6 210 10                # set_constants.c:210:10
	movsd	%xmm2, xxcon3(%rip)
	.loc	6 206 9 is_stmt 1       # set_constants.c:206:9
	movsd	.LCPI1_30(%rip), %xmm5  # xmm5 = mem[0],zero
	.loc	6 211 19                # set_constants.c:211:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm5, %xmm2
	.loc	6 211 25 is_stmt 0      # set_constants.c:211:25
	mulsd	%xmm8, %xmm2
	.loc	6 211 10                # set_constants.c:211:10
	movsd	%xmm2, xxcon4(%rip)
	.loc	6 212 20 is_stmt 1      # set_constants.c:212:20
	movsd	c1c5(%rip), %xmm2       # xmm2 = mem[0],zero
	.loc	6 212 19 is_stmt 0      # set_constants.c:212:19
	mulsd	%xmm2, %xmm6
	.loc	6 212 24                # set_constants.c:212:24
	mulsd	tx3(%rip), %xmm6
	.loc	6 212 10                # set_constants.c:212:10
	movsd	%xmm6, xxcon5(%rip)
	.loc	6 214 19 is_stmt 1      # set_constants.c:214:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm3, %xmm6
	.loc	6 214 26 is_stmt 0      # set_constants.c:214:26
	movsd	ty3(%rip), %xmm7        # xmm7 = mem[0],zero
	.loc	6 214 25                # set_constants.c:214:25
	mulsd	%xmm7, %xmm6
	.loc	6 214 10                # set_constants.c:214:10
	movsd	%xmm6, yycon1(%rip)
	.loc	6 215 19 is_stmt 1      # set_constants.c:215:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	6 215 10 is_stmt 0      # set_constants.c:215:10
	movsd	%xmm6, yycon2(%rip)
	.loc	6 216 19 is_stmt 1      # set_constants.c:216:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm4, %xmm6
	.loc	6 216 25 is_stmt 0      # set_constants.c:216:25
	mulsd	%xmm7, %xmm6
	.loc	6 216 10                # set_constants.c:216:10
	movsd	%xmm6, yycon3(%rip)
	.loc	6 217 19 is_stmt 1      # set_constants.c:217:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm5, %xmm6
	.loc	6 217 25 is_stmt 0      # set_constants.c:217:25
	mulsd	%xmm7, %xmm6
	.loc	6 217 10                # set_constants.c:217:10
	movsd	%xmm6, yycon4(%rip)
	.loc	6 218 19 is_stmt 1      # set_constants.c:218:19
	mulsd	%xmm2, %xmm1
	.loc	6 218 24 is_stmt 0      # set_constants.c:218:24
	mulsd	%xmm7, %xmm1
	.loc	6 218 10                # set_constants.c:218:10
	movsd	%xmm1, yycon5(%rip)
	.loc	6 220 19 is_stmt 1      # set_constants.c:220:19
	mulsd	%xmm0, %xmm3
	.loc	6 220 26 is_stmt 0      # set_constants.c:220:26
	movsd	tz3(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	6 220 25                # set_constants.c:220:25
	mulsd	%xmm1, %xmm3
	.loc	6 220 10                # set_constants.c:220:10
	movsd	%xmm3, zzcon1(%rip)
	.loc	6 221 19 is_stmt 1      # set_constants.c:221:19
	movapd	%xmm0, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	6 221 10 is_stmt 0      # set_constants.c:221:10
	movsd	%xmm3, zzcon2(%rip)
	.loc	6 222 19 is_stmt 1      # set_constants.c:222:19
	mulsd	%xmm0, %xmm4
	.loc	6 222 25 is_stmt 0      # set_constants.c:222:25
	mulsd	%xmm1, %xmm4
	.loc	6 222 10                # set_constants.c:222:10
	movsd	%xmm4, zzcon3(%rip)
	.loc	6 223 19 is_stmt 1      # set_constants.c:223:19
	mulsd	%xmm0, %xmm5
	.loc	6 223 25 is_stmt 0      # set_constants.c:223:25
	mulsd	%xmm1, %xmm5
	.loc	6 223 10                # set_constants.c:223:10
	movsd	%xmm5, zzcon4(%rip)
	.loc	6 224 19 is_stmt 1      # set_constants.c:224:19
	mulsd	%xmm2, %xmm0
	.loc	6 224 24 is_stmt 0      # set_constants.c:224:24
	mulsd	%xmm1, %xmm0
	.loc	6 224 10                # set_constants.c:224:10
	movsd	%xmm0, zzcon5(%rip)
	.loc	6 225 1 is_stmt 1       # set_constants.c:225:1
	retq
.Ltmp88:
.Lfunc_end1:
	.size	set_constants, .Lfunc_end1-set_constants
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI2_0:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI2_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	initialize
	.p2align	4, 0x90
	.type	initialize,@function
initialize:                             # @initialize
.Lfunc_begin2:
	.file	7 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/initialize.c"
	.loc	7 41 0                  # initialize.c:41:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	7 55 11 prologue_end    # initialize.c:55:11
	pushq	%rbp
.Ltmp89:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp90:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp91:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp92:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp93:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp94:
	.cfi_def_cfa_offset 56
	subq	$472, %rsp              # imm = 0x1D8
.Ltmp95:
	.cfi_def_cfa_offset 528
.Ltmp96:
	.cfi_offset %rbx, -56
.Ltmp97:
	.cfi_offset %r12, -48
.Ltmp98:
	.cfi_offset %r13, -40
.Ltmp99:
	.cfi_offset %r14, -32
.Ltmp100:
	.cfi_offset %r15, -24
.Ltmp101:
	.cfi_offset %rbp, -16
	movslq	grid_points+8(%rip), %r8
.Ltmp102:
	#DEBUG_VALUE: initialize:k <- 0
	.loc	7 64 20 discriminator 1 # initialize.c:64:20
	testq	%r8, %r8
	jle	.LBB2_44
.Ltmp103:
# BB#1:                                 # %for.cond1.preheader.lr.ph
	.loc	7 52 22 discriminator 1 # initialize.c:52:22
	movl	grid_points+4(%rip), %r11d
	.loc	7 52 5 is_stmt 0 discriminator 1 # initialize.c:52:5
	testl	%r11d, %r11d
	jle	.LBB2_6
# BB#2:                                 # %for.cond5.preheader.lr.ph.us.preheader
.Ltmp104:
	.loc	7 53 24 is_stmt 1 discriminator 1 # initialize.c:53:24
	movl	grid_points(%rip), %edi
	.loc	7 53 7 is_stmt 0 discriminator 1 # initialize.c:53:7
	movl	%edi, %r14d
	andl	$1, %r14d
	xorl	%r10d, %r10d
	movl	$u+40, %r9d
.Ltmp105:
	.loc	7 55 25 is_stmt 1       # initialize.c:55:25
	movapd	.LCPI2_0(%rip), %xmm0   # xmm0 = [1.000000e+00,1.000000e+00]
	movabsq	$4607182418800017408, %rbx # imm = 0x3FF0000000000000
	.p2align	4, 0x90
.LBB2_3:                                # %for.cond5.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_59 Depth 2
                                        #       Child Loop BB2_63 Depth 3
	testl	%edi, %edi
	movq	%r9, %rsi
	movl	$0, %ebp
	jle	.LBB2_4
	.p2align	4, 0x90
.LBB2_59:                               # %for.cond9.preheader.lr.ph.us.us
                                        #   Parent Loop BB2_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB2_63 Depth 3
	testl	%r14d, %r14d
	movl	$0, %eax
	je	.LBB2_61
# BB#60:                                # %for.cond9.preheader.us.us.prol
                                        #   in Loop: Header=BB2_59 Depth=2
	.loc	7 55 11 is_stmt 0       # initialize.c:55:11
	imulq	$2600, %rbp, %rax       # imm = 0xA28
	imulq	$169000, %r10, %rcx     # imm = 0x29428
	.loc	7 55 25                 # initialize.c:55:25
	movupd	%xmm0, u(%rcx,%rax)
	movupd	%xmm0, u+16(%rcx,%rax)
	movq	%rbx, u+32(%rcx,%rax)
	movl	$1, %eax
.Ltmp106:
.LBB2_61:                               # %for.cond9.preheader.lr.ph.us.us.split
                                        #   in Loop: Header=BB2_59 Depth=2
	cmpl	$1, %edi
	je	.LBB2_64
# BB#62:                                # %for.cond9.preheader.lr.ph.us.us.split.split
                                        #   in Loop: Header=BB2_59 Depth=2
	.loc	7 53 7 is_stmt 1 discriminator 1 # initialize.c:53:7
	movl	%edi, %edx
	subl	%eax, %edx
	shlq	$3, %rax
	leaq	(%rax,%rax,4), %rcx
	movq	%rsi, %rax
	.p2align	4, 0x90
.LBB2_63:                               # %for.cond9.preheader.us.us
                                        #   Parent Loop BB2_3 Depth=1
                                        #     Parent Loop BB2_59 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp107:
	.loc	7 55 25                 # initialize.c:55:25
	movupd	%xmm0, -40(%rcx,%rax)
	movupd	%xmm0, -24(%rcx,%rax)
	movq	%rbx, -8(%rcx,%rax)
	movupd	%xmm0, (%rcx,%rax)
	movupd	%xmm0, 16(%rcx,%rax)
	movq	%rbx, 32(%rcx,%rax)
.Ltmp108:
	.loc	7 53 7 discriminator 1  # initialize.c:53:7
	addq	$80, %rax
	addl	$-2, %edx
	jne	.LBB2_63
.Ltmp109:
.LBB2_64:                               # %for.cond5.for.inc21_crit_edge.us.us
                                        #   in Loop: Header=BB2_59 Depth=2
	.loc	7 52 5 discriminator 1  # initialize.c:52:5
	incq	%rbp
	addq	$2600, %rsi             # imm = 0xA28
	cmpl	%r11d, %ebp
	jne	.LBB2_59
.Ltmp110:
.LBB2_4:                                # %for.cond1.for.inc24_crit_edge.us
                                        #   in Loop: Header=BB2_3 Depth=1
	.loc	7 51 3 discriminator 1  # initialize.c:51:3
	incq	%r10
	addq	$169000, %r9            # imm = 0x29428
	.loc	7 51 17 is_stmt 0 discriminator 1 # initialize.c:51:17
	cmpq	%r8, %r10
	jl	.LBB2_3
.Ltmp111:
# BB#5:                                 # %for.cond27.preheader
	.loc	7 64 3 is_stmt 1 discriminator 1 # initialize.c:64:3
	testl	%r8d, %r8d
	jle	.LBB2_44
.LBB2_6:                                # %for.body30.preheader
.Ltmp112:
	.loc	7 66 22 discriminator 1 # initialize.c:66:22
	movl	grid_points+4(%rip), %r9d
.Ltmp113:
	.loc	7 84 26                 # initialize.c:84:26
	leaq	344(%rsp), %r12
.Ltmp114:
	.loc	7 76 50                 # initialize.c:76:50
	leaq	264(%rsp), %r13
	leaq	384(%rsp), %rbx
.Ltmp115:
	.loc	7 80 48                 # initialize.c:80:48
	leaq	304(%rsp), %rbp
	leaq	424(%rsp), %rsi
	xorl	%edx, %edx
	movl	$u+32, %eax
.Ltmp116:
	.loc	7 86 47                 # initialize.c:86:47
	movq	%rax, 56(%rsp)          # 8-byte Spill
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
	leaq	224(%rsp), %rdi
.Ltmp117:
	.p2align	4, 0x90
.LBB2_7:                                # %for.body30
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_9 Depth 2
                                        #       Child Loop BB2_11 Depth 3
	#DEBUG_VALUE: initialize:j <- 0
	.loc	7 66 5 discriminator 1  # initialize.c:66:5
	testl	%r9d, %r9d
	jle	.LBB2_15
.Ltmp118:
# BB#8:                                 # %for.body35.lr.ph
                                        #   in Loop: Header=BB2_7 Depth=1
	movq	%rsi, %r10
	movq	%r13, %r14
	movq	%r12, %r11
	.loc	7 65 12                 # initialize.c:65:12
	cvtsi2sdl	%edx, %xmm2
	movq	%rdx, 104(%rsp)         # 8-byte Spill
	.loc	7 65 24 is_stmt 0       # initialize.c:65:24
	mulsd	dnzm1(%rip), %xmm2
.Ltmp119:
	#DEBUG_VALUE: initialize:zeta <- %XMM2
	.loc	7 86 47 is_stmt 1       # initialize.c:86:47
	movapd	%xmm2, 64(%rsp)         # 16-byte Spill
	movapd	%xmm0, %xmm1
	subsd	%xmm2, %xmm1
.Ltmp120:
	.loc	7 68 24 discriminator 1 # initialize.c:68:24
	movapd	%xmm1, 160(%rsp)        # 16-byte Spill
	movl	grid_points(%rip), %eax
.Ltmp121:
	.loc	7 86 24                 # initialize.c:86:24
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	.loc	7 86 54 is_stmt 0       # initialize.c:86:54
	movaps	%xmm3, 144(%rsp)        # 16-byte Spill
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 128(%rsp)        # 16-byte Spill
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	%rdx, %rcx
	xorl	%esi, %esi
.Ltmp122:
	.p2align	4, 0x90
.LBB2_9:                                # %for.body35
                                        #   Parent Loop BB2_7 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB2_11 Depth 3
	#DEBUG_VALUE: initialize:i <- 0
	.loc	7 68 7 is_stmt 1 discriminator 1 # initialize.c:68:7
	testl	%eax, %eax
	jle	.LBB2_13
.Ltmp123:
# BB#10:                                # %for.body42.lr.ph
                                        #   in Loop: Header=BB2_9 Depth=2
	.loc	7 67 13                 # initialize.c:67:13
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%esi, %xmm1
	movq	%rsi, 112(%rsp)         # 8-byte Spill
	.loc	7 67 25 is_stmt 0       # initialize.c:67:25
	mulsd	dnym1(%rip), %xmm1
.Ltmp124:
	#DEBUG_VALUE: initialize:eta <- %XMM1
	.loc	7 85 47 is_stmt 1       # initialize.c:85:47
	movapd	%xmm1, 80(%rsp)         # 16-byte Spill
	movapd	%xmm0, %xmm3
	subsd	%xmm1, %xmm3
	.loc	7 85 24 is_stmt 0       # initialize.c:85:24
	movapd	%xmm3, 208(%rsp)        # 16-byte Spill
	movapd	%xmm1, %xmm4
	movapd	%xmm1, %xmm7
.Ltmp125:
	#DEBUG_VALUE: initialize:eta <- %XMM7
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movaps	%xmm4, 192(%rsp)        # 16-byte Spill
	.loc	7 85 54                 # initialize.c:85:54
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 176(%rsp)        # 16-byte Spill
	movq	%rcx, %r14
	movq	%r14, 120(%rsp)         # 8-byte Spill
	xorl	%r15d, %r15d
	movq	%r10, %r12
.Ltmp126:
	.p2align	4, 0x90
.LBB2_11:                               # %for.body42
                                        #   Parent Loop BB2_7 Depth=1
                                        #     Parent Loop BB2_9 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 69 28 is_stmt 1       # initialize.c:69:28
	movsd	dnxm1(%rip), %xmm0      # xmm0 = mem[0],zero
.Ltmp127:
	#DEBUG_VALUE: initialize:ix <- 0
	.loc	7 72 11                 # initialize.c:72:11
	movsd	%xmm0, (%rsp)           # 8-byte Spill
	xorpd	%xmm0, %xmm0
	movapd	%xmm7, %xmm1
	movq	%rdi, %r13
	callq	exact_solution
.Ltmp128:
	.loc	7 86 47                 # initialize.c:86:47
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
.Ltmp129:
	.loc	7 72 11                 # initialize.c:72:11
	movaps	80(%rsp), %xmm1         # 16-byte Reload
	movaps	64(%rsp), %xmm2         # 16-byte Reload
.Ltmp130:
	.loc	7 84 26                 # initialize.c:84:26
	leaq	344(%rsp), %rdi
.Ltmp131:
	.loc	7 72 11                 # initialize.c:72:11
	callq	exact_solution
.Ltmp132:
	.loc	7 69 14                 # initialize.c:69:14
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 69 26 is_stmt 0       # initialize.c:69:26
	mulsd	(%rsp), %xmm0           # 8-byte Folded Reload
.Ltmp133:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	7 76 11 is_stmt 1       # initialize.c:76:11
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	xorps	%xmm1, %xmm1
.Ltmp134:
	#DEBUG_VALUE: initialize:xi <- [%RSP+0]
	movaps	64(%rsp), %xmm2         # 16-byte Reload
	.loc	7 76 50 is_stmt 0       # initialize.c:76:50
	leaq	264(%rsp), %rdi
	.loc	7 76 11                 # initialize.c:76:11
	callq	exact_solution
.Ltmp135:
	movaps	(%rsp), %xmm0           # 16-byte Reload
.Ltmp136:
	.loc	7 86 47 is_stmt 1       # initialize.c:86:47
	movsd	.LCPI2_1(%rip), %xmm1   # xmm1 = mem[0],zero
.Ltmp137:
	.loc	7 76 11                 # initialize.c:76:11
	movaps	64(%rsp), %xmm2         # 16-byte Reload
	movq	%rbx, %rdi
	callq	exact_solution
.Ltmp138:
	.loc	7 80 11                 # initialize.c:80:11
	xorps	%xmm2, %xmm2
	movaps	(%rsp), %xmm0           # 16-byte Reload
	movaps	80(%rsp), %xmm1         # 16-byte Reload
	movq	%rbp, %rdi
	callq	exact_solution
	movaps	(%rsp), %xmm0           # 16-byte Reload
	movaps	80(%rsp), %xmm1         # 16-byte Reload
.Ltmp139:
	.loc	7 86 47                 # initialize.c:86:47
	movsd	.LCPI2_1(%rip), %xmm2   # xmm2 = mem[0],zero
.Ltmp140:
	.loc	7 80 11                 # initialize.c:80:11
	movq	%r12, %rdi
	callq	exact_solution
	movapd	128(%rsp), %xmm9        # 16-byte Reload
	movapd	144(%rsp), %xmm8        # 16-byte Reload
	movq	%r13, %rdi
.Ltmp141:
	.loc	7 86 47                 # initialize.c:86:47
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	(%rsp), %xmm1           # 16-byte Reload
.Ltmp142:
	#DEBUG_VALUE: initialize:xi <- %XMM1
	.loc	7 84 47                 # initialize.c:84:47
	subsd	%xmm1, %xmm0
	.loc	7 84 26 is_stmt 0       # initialize.c:84:26
	movupd	344(%rsp), %xmm3
	.loc	7 84 24                 # initialize.c:84:24
	movapd	%xmm1, %xmm2
	movapd	%xmm1, %xmm12
.Ltmp143:
	#DEBUG_VALUE: initialize:xi <- %XMM12
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm3
	.loc	7 84 54                 # initialize.c:84:54
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movapd	224(%rsp), %xmm4
	mulpd	%xmm1, %xmm4
	.loc	7 84 41                 # initialize.c:84:41
	addpd	%xmm3, %xmm4
	movapd	384(%rsp), %xmm3
	movapd	192(%rsp), %xmm10       # 16-byte Reload
	.loc	7 85 24 is_stmt 1       # initialize.c:85:24
	mulpd	%xmm10, %xmm3
	.loc	7 85 56 is_stmt 0       # initialize.c:85:56
	movupd	264(%rsp), %xmm5
	movapd	176(%rsp), %xmm11       # 16-byte Reload
	.loc	7 85 54                 # initialize.c:85:54
	mulpd	%xmm11, %xmm5
	.loc	7 85 41                 # initialize.c:85:41
	addpd	%xmm3, %xmm5
	.loc	7 86 26 is_stmt 1       # initialize.c:86:26
	movupd	424(%rsp), %xmm3
	.loc	7 86 24 is_stmt 0       # initialize.c:86:24
	mulpd	%xmm8, %xmm3
	movapd	304(%rsp), %xmm6
	.loc	7 86 54                 # initialize.c:86:54
	mulpd	%xmm9, %xmm6
	.loc	7 86 41                 # initialize.c:86:41
	addpd	%xmm3, %xmm6
	.loc	7 88 31 is_stmt 1       # initialize.c:88:31
	movapd	%xmm4, %xmm3
	addpd	%xmm5, %xmm3
	.loc	7 88 38 is_stmt 0       # initialize.c:88:38
	addpd	%xmm6, %xmm3
	.loc	7 89 30 is_stmt 1       # initialize.c:89:30
	movapd	%xmm4, %xmm7
	mulpd	%xmm5, %xmm7
	.loc	7 88 46                 # initialize.c:88:46
	subpd	%xmm7, %xmm3
	.loc	7 89 41                 # initialize.c:89:41
	mulpd	%xmm6, %xmm4
	.loc	7 89 36 is_stmt 0       # initialize.c:89:36
	subpd	%xmm4, %xmm3
	.loc	7 89 54                 # initialize.c:89:54
	mulpd	%xmm6, %xmm5
	.loc	7 89 48                 # initialize.c:89:48
	subpd	%xmm5, %xmm3
	.loc	7 90 35 is_stmt 1       # initialize.c:90:35
	mulpd	%xmm6, %xmm7
	movapd	160(%rsp), %xmm6        # 16-byte Reload
	.loc	7 89 61                 # initialize.c:89:61
	addpd	%xmm3, %xmm7
	.loc	7 88 25                 # initialize.c:88:25
	movupd	%xmm7, -32(%r14)
	.loc	7 84 26                 # initialize.c:84:26
	movupd	360(%rsp), %xmm3
	.loc	7 84 24 is_stmt 0       # initialize.c:84:24
	mulpd	%xmm2, %xmm3
	.loc	7 84 54                 # initialize.c:84:54
	mulpd	240(%rsp), %xmm1
	.loc	7 84 41                 # initialize.c:84:41
	addpd	%xmm3, %xmm1
	movapd	400(%rsp), %xmm2
	.loc	7 85 24 is_stmt 1       # initialize.c:85:24
	mulpd	%xmm10, %xmm2
	.loc	7 85 56 is_stmt 0       # initialize.c:85:56
	movupd	280(%rsp), %xmm3
	.loc	7 85 54                 # initialize.c:85:54
	mulpd	%xmm11, %xmm3
	.loc	7 85 41                 # initialize.c:85:41
	addpd	%xmm2, %xmm3
	.loc	7 86 26 is_stmt 1       # initialize.c:86:26
	movupd	440(%rsp), %xmm2
	.loc	7 86 24 is_stmt 0       # initialize.c:86:24
	mulpd	%xmm8, %xmm2
	movapd	320(%rsp), %xmm4
	.loc	7 86 54                 # initialize.c:86:54
	mulpd	%xmm9, %xmm4
	.loc	7 86 41                 # initialize.c:86:41
	addpd	%xmm2, %xmm4
	.loc	7 88 31 is_stmt 1       # initialize.c:88:31
	movapd	%xmm1, %xmm2
	addpd	%xmm3, %xmm2
	.loc	7 88 38 is_stmt 0       # initialize.c:88:38
	addpd	%xmm4, %xmm2
	.loc	7 89 30 is_stmt 1       # initialize.c:89:30
	movapd	%xmm1, %xmm5
	mulpd	%xmm3, %xmm5
	.loc	7 88 46                 # initialize.c:88:46
	subpd	%xmm5, %xmm2
	.loc	7 89 41                 # initialize.c:89:41
	mulpd	%xmm4, %xmm1
	.loc	7 89 36 is_stmt 0       # initialize.c:89:36
	subpd	%xmm1, %xmm2
	.loc	7 89 54                 # initialize.c:89:54
	mulpd	%xmm4, %xmm3
	.loc	7 89 48                 # initialize.c:89:48
	subpd	%xmm3, %xmm2
	.loc	7 90 35 is_stmt 1       # initialize.c:90:35
	mulpd	%xmm4, %xmm5
	.loc	7 89 61                 # initialize.c:89:61
	addpd	%xmm2, %xmm5
	.loc	7 88 25                 # initialize.c:88:25
	movupd	%xmm5, -16(%r14)
	movapd	64(%rsp), %xmm2         # 16-byte Reload
	.loc	7 84 24                 # initialize.c:84:24
	mulsd	376(%rsp), %xmm12
.Ltmp144:
	.loc	7 84 54 is_stmt 0       # initialize.c:84:54
	mulsd	256(%rsp), %xmm0
	.loc	7 84 41                 # initialize.c:84:41
	addsd	%xmm12, %xmm0
	movsd	416(%rsp), %xmm1        # xmm1 = mem[0],zero
	movapd	80(%rsp), %xmm3         # 16-byte Reload
	.loc	7 85 24 is_stmt 1       # initialize.c:85:24
	mulsd	%xmm3, %xmm1
	movapd	%xmm3, %xmm7
	movsd	296(%rsp), %xmm5        # xmm5 = mem[0],zero
	.loc	7 85 54 is_stmt 0       # initialize.c:85:54
	mulsd	208(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	7 85 41                 # initialize.c:85:41
	addsd	%xmm1, %xmm5
	movsd	456(%rsp), %xmm1        # xmm1 = mem[0],zero
	.loc	7 86 24 is_stmt 1       # initialize.c:86:24
	mulsd	%xmm2, %xmm1
	movsd	336(%rsp), %xmm3        # xmm3 = mem[0],zero
	.loc	7 86 54 is_stmt 0       # initialize.c:86:54
	mulsd	%xmm6, %xmm3
	.loc	7 86 41                 # initialize.c:86:41
	addsd	%xmm1, %xmm3
	.loc	7 88 31 is_stmt 1       # initialize.c:88:31
	movapd	%xmm0, %xmm1
	addsd	%xmm5, %xmm1
	.loc	7 88 38 is_stmt 0       # initialize.c:88:38
	addsd	%xmm3, %xmm1
	.loc	7 89 30 is_stmt 1       # initialize.c:89:30
	movapd	%xmm0, %xmm4
	mulsd	%xmm5, %xmm4
	.loc	7 88 46                 # initialize.c:88:46
	subsd	%xmm4, %xmm1
	.loc	7 89 41                 # initialize.c:89:41
	mulsd	%xmm3, %xmm0
	.loc	7 89 36 is_stmt 0       # initialize.c:89:36
	subsd	%xmm0, %xmm1
	.loc	7 89 54                 # initialize.c:89:54
	mulsd	%xmm3, %xmm5
	.loc	7 89 48                 # initialize.c:89:48
	subsd	%xmm5, %xmm1
	.loc	7 90 35 is_stmt 1       # initialize.c:90:35
	mulsd	%xmm3, %xmm4
	.loc	7 89 61                 # initialize.c:89:61
	addsd	%xmm1, %xmm4
	.loc	7 88 25                 # initialize.c:88:25
	movsd	%xmm4, (%r14)
.Ltmp145:
	.loc	7 68 7 discriminator 1  # initialize.c:68:7
	incq	%r15
	.loc	7 68 21 is_stmt 0 discriminator 1 # initialize.c:68:21
	movslq	grid_points(%rip), %rax
	addq	$40, %r14
	cmpq	%rax, %r15
	.loc	7 68 7 discriminator 1  # initialize.c:68:7
	jl	.LBB2_11
# BB#12:                                # %for.inc145.loopexit
                                        #   in Loop: Header=BB2_9 Depth=2
	movq	%r12, %r10
.Ltmp146:
	.loc	7 76 50 is_stmt 1       # initialize.c:76:50
	leaq	264(%rsp), %r14
.Ltmp147:
	.loc	7 84 26                 # initialize.c:84:26
	leaq	344(%rsp), %r11
.Ltmp148:
	.loc	7 66 22 discriminator 1 # initialize.c:66:22
	movl	grid_points+4(%rip), %r9d
.Ltmp149:
	.loc	7 86 47                 # initialize.c:86:47
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
.Ltmp150:
.LBB2_13:                               # %for.inc145
                                        #   in Loop: Header=BB2_9 Depth=2
	.loc	7 66 5 discriminator 1  # initialize.c:66:5
	incq	%rsi
	.loc	7 66 19 is_stmt 0 discriminator 1 # initialize.c:66:19
	movslq	%r9d, %rdx
	.loc	7 66 5 discriminator 1  # initialize.c:66:5
	addq	$2600, %rcx             # imm = 0xA28
	.loc	7 66 19 discriminator 1 # initialize.c:66:19
	cmpq	%rdx, %rsi
	jl	.LBB2_9
.Ltmp151:
# BB#14:                                # %for.inc148.loopexit
                                        #   in Loop: Header=BB2_7 Depth=1
	.loc	7 64 20 is_stmt 1 discriminator 1 # initialize.c:64:20
	movl	grid_points+8(%rip), %r8d
	movq	%r11, %r12
	movq	%r14, %r13
	movq	%r10, %rsi
	movq	104(%rsp), %rdx         # 8-byte Reload
.LBB2_15:                               # %for.inc148
                                        #   in Loop: Header=BB2_7 Depth=1
	.loc	7 64 3 is_stmt 0 discriminator 1 # initialize.c:64:3
	incq	%rdx
	.loc	7 64 17 discriminator 1 # initialize.c:64:17
	movslq	%r8d, %rax
	.loc	7 64 3 discriminator 1  # initialize.c:64:3
	addq	$169000, 56(%rsp)       # 8-byte Folded Spill
                                        # imm = 0x29428
	.loc	7 64 17 discriminator 1 # initialize.c:64:17
	cmpq	%rax, %rdx
	jl	.LBB2_7
.Ltmp152:
# BB#16:                                # %for.cond151.preheader
	.loc	7 105 3 is_stmt 1 discriminator 1 # initialize.c:105:3
	testl	%r8d, %r8d
	jle	.LBB2_44
# BB#17:                                # %for.body155.lr.ph
	movl	$u, %r14d
	xorl	%r15d, %r15d
.Ltmp153:
	.loc	7 107 22 discriminator 1 # initialize.c:107:22
	movl	grid_points+4(%rip), %eax
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB2_18:                               # %for.body155
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_20 Depth 2
	#DEBUG_VALUE: initialize:j <- 0
	.loc	7 107 5 is_stmt 0 discriminator 1 # initialize.c:107:5
	testl	%eax, %eax
	jle	.LBB2_22
.Ltmp154:
# BB#19:                                #   in Loop: Header=BB2_18 Depth=1
	.loc	7 106 12 is_stmt 1      # initialize.c:106:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 106 24 is_stmt 0      # initialize.c:106:24
	mulsd	dnzm1(%rip), %xmm0
.Ltmp155:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp156:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp157:
	.p2align	4, 0x90
.LBB2_20:                               # %for.body162
                                        #   Parent Loop BB2_18 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	7 108 13 is_stmt 1      # initialize.c:108:13
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%ebx, %xmm1
	.loc	7 108 25 is_stmt 0      # initialize.c:108:25
	mulsd	dnym1(%rip), %xmm1
.Ltmp158:
	#DEBUG_VALUE: initialize:eta <- %XMM1
	.loc	7 109 7 is_stmt 1       # initialize.c:109:7
	xorpd	%xmm0, %xmm0
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
.Ltmp159:
	#DEBUG_VALUE: initialize:m <- 0
	.loc	7 111 23                # initialize.c:111:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
	movaps	32(%rsp), %xmm1
.Ltmp160:
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp161:
	.loc	7 107 41 discriminator 2 # initialize.c:107:41
	incl	%ebx
.Ltmp162:
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	7 107 22 is_stmt 0 discriminator 1 # initialize.c:107:22
	movl	grid_points+4(%rip), %eax
	.loc	7 107 19 discriminator 1 # initialize.c:107:19
	addq	$2600, %rbp             # imm = 0xA28
	cmpl	%eax, %ebx
	.loc	7 107 5 discriminator 1 # initialize.c:107:5
	jl	.LBB2_20
.Ltmp163:
# BB#21:                                # %for.inc185.loopexit
                                        #   in Loop: Header=BB2_18 Depth=1
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	7 105 20 is_stmt 1 discriminator 1 # initialize.c:105:20
	movl	grid_points+8(%rip), %r8d
.Ltmp164:
.LBB2_22:                               # %for.inc185
                                        #   in Loop: Header=BB2_18 Depth=1
	.loc	7 105 39 is_stmt 0 discriminator 2 # initialize.c:105:39
	incl	%r15d
.Ltmp165:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	7 105 3 discriminator 1 # initialize.c:105:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	7 105 17 discriminator 1 # initialize.c:105:17
	cmpl	%r8d, %r15d
	jl	.LBB2_18
.Ltmp166:
# BB#23:                                # %for.end187
	#DEBUG_VALUE: initialize:k <- %R15D
	#DEBUG_VALUE: initialize:k <- 0
	#DEBUG_VALUE: initialize:xi <- 1.000000e+00
	.loc	7 121 3 is_stmt 1 discriminator 1 # initialize.c:121:3
	testl	%r8d, %r8d
	jle	.LBB2_44
# BB#24:                                # %for.body193.lr.ph
.Ltmp167:
	.loc	7 127 9                 # initialize.c:127:9
	movslq	grid_points(%rip), %rax
.Ltmp168:
	.loc	7 119 21                # initialize.c:119:21
	leaq	(%rax,%rax,4), %rcx
.Ltmp169:
	.loc	7 123 22 discriminator 1 # initialize.c:123:22
	movl	grid_points+4(%rip), %eax
.Ltmp170:
	.loc	7 121 3 discriminator 1 # initialize.c:121:3
	leaq	u-40(,%rcx,8), %r14
	xorl	%r15d, %r15d
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB2_25:                               # %for.body193
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_27 Depth 2
.Ltmp171:
	#DEBUG_VALUE: initialize:j <- 0
	.loc	7 123 5 discriminator 1 # initialize.c:123:5
	testl	%eax, %eax
	jle	.LBB2_29
.Ltmp172:
# BB#26:                                #   in Loop: Header=BB2_25 Depth=1
	.loc	7 122 12                # initialize.c:122:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 122 24 is_stmt 0      # initialize.c:122:24
	mulsd	dnzm1(%rip), %xmm0
.Ltmp173:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp174:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp175:
	.p2align	4, 0x90
.LBB2_27:                               # %for.body200
                                        #   Parent Loop BB2_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	7 124 13 is_stmt 1      # initialize.c:124:13
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%ebx, %xmm1
	.loc	7 124 25 is_stmt 0      # initialize.c:124:25
	mulsd	dnym1(%rip), %xmm1
.Ltmp176:
	#DEBUG_VALUE: initialize:eta <- %XMM1
	.loc	7 125 7 is_stmt 1       # initialize.c:125:7
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp177:
	.loc	7 127 23                # initialize.c:127:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
	movaps	32(%rsp), %xmm1
.Ltmp178:
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp179:
	.loc	7 123 41 discriminator 2 # initialize.c:123:41
	incl	%ebx
.Ltmp180:
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	7 123 22 is_stmt 0 discriminator 1 # initialize.c:123:22
	movl	grid_points+4(%rip), %eax
	.loc	7 123 19 discriminator 1 # initialize.c:123:19
	addq	$2600, %rbp             # imm = 0xA28
	cmpl	%eax, %ebx
	.loc	7 123 5 discriminator 1 # initialize.c:123:5
	jl	.LBB2_27
.Ltmp181:
# BB#28:                                # %for.inc224.loopexit
                                        #   in Loop: Header=BB2_25 Depth=1
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	7 121 20 is_stmt 1 discriminator 1 # initialize.c:121:20
	movl	grid_points+8(%rip), %r8d
.Ltmp182:
.LBB2_29:                               # %for.inc224
                                        #   in Loop: Header=BB2_25 Depth=1
	.loc	7 121 39 is_stmt 0 discriminator 2 # initialize.c:121:39
	incl	%r15d
.Ltmp183:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	7 121 3 discriminator 1 # initialize.c:121:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	7 121 17 discriminator 1 # initialize.c:121:17
	cmpl	%r8d, %r15d
	jl	.LBB2_25
.Ltmp184:
# BB#30:                                # %for.cond227.preheader
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	7 137 3 is_stmt 1 discriminator 1 # initialize.c:137:3
	testl	%r8d, %r8d
	jle	.LBB2_44
.Ltmp185:
# BB#31:                                # %for.body231.lr.ph
	#DEBUG_VALUE: initialize:k <- %R15D
	movl	$u, %r14d
	xorl	%r15d, %r15d
.Ltmp186:
	.loc	7 139 22 discriminator 1 # initialize.c:139:22
	movl	grid_points(%rip), %eax
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB2_32:                               # %for.body231
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_34 Depth 2
	#DEBUG_VALUE: initialize:i <- 0
	.loc	7 139 5 is_stmt 0 discriminator 1 # initialize.c:139:5
	testl	%eax, %eax
	jle	.LBB2_36
.Ltmp187:
# BB#33:                                #   in Loop: Header=BB2_32 Depth=1
	.loc	7 138 12 is_stmt 1      # initialize.c:138:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 138 24 is_stmt 0      # initialize.c:138:24
	mulsd	dnzm1(%rip), %xmm0
.Ltmp188:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp189:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp190:
	.p2align	4, 0x90
.LBB2_34:                               # %for.body238
                                        #   Parent Loop BB2_32 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	7 140 12 is_stmt 1      # initialize.c:140:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	7 140 24 is_stmt 0      # initialize.c:140:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp191:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	7 141 7 is_stmt 1       # initialize.c:141:7
	xorps	%xmm1, %xmm1
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp192:
	.loc	7 143 23                # initialize.c:143:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp193:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp194:
	.loc	7 139 41 discriminator 2 # initialize.c:139:41
	incl	%ebx
.Ltmp195:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 139 22 is_stmt 0 discriminator 1 # initialize.c:139:22
	movl	grid_points(%rip), %eax
	.loc	7 139 19 discriminator 1 # initialize.c:139:19
	addq	$40, %rbp
	cmpl	%eax, %ebx
	.loc	7 139 5 discriminator 1 # initialize.c:139:5
	jl	.LBB2_34
.Ltmp196:
# BB#35:                                # %for.inc262.loopexit
                                        #   in Loop: Header=BB2_32 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 137 20 is_stmt 1 discriminator 1 # initialize.c:137:20
	movl	grid_points+8(%rip), %r8d
.Ltmp197:
.LBB2_36:                               # %for.inc262
                                        #   in Loop: Header=BB2_32 Depth=1
	.loc	7 137 39 is_stmt 0 discriminator 2 # initialize.c:137:39
	incl	%r15d
.Ltmp198:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	7 137 3 discriminator 1 # initialize.c:137:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	7 137 17 discriminator 1 # initialize.c:137:17
	cmpl	%r8d, %r15d
	jl	.LBB2_32
.Ltmp199:
# BB#37:                                # %for.end264
	#DEBUG_VALUE: initialize:k <- %R15D
	#DEBUG_VALUE: initialize:k <- 0
	#DEBUG_VALUE: initialize:eta <- 1.000000e+00
	.loc	7 153 3 is_stmt 1 discriminator 1 # initialize.c:153:3
	testl	%r8d, %r8d
	jle	.LBB2_44
# BB#38:                                # %for.body270.lr.ph
.Ltmp200:
	.loc	7 159 9                 # initialize.c:159:9
	movslq	grid_points+4(%rip), %rax
.Ltmp201:
	.loc	7 151 21                # initialize.c:151:21
	imulq	$2600, %rax, %rcx       # imm = 0xA28
.Ltmp202:
	.loc	7 155 22 discriminator 1 # initialize.c:155:22
	movl	grid_points(%rip), %eax
.Ltmp203:
	.loc	7 153 3 discriminator 1 # initialize.c:153:3
	leaq	u-2600(%rcx), %r14
	xorl	%r15d, %r15d
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB2_39:                               # %for.body270
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_41 Depth 2
.Ltmp204:
	#DEBUG_VALUE: initialize:i <- 0
	.loc	7 155 5 discriminator 1 # initialize.c:155:5
	testl	%eax, %eax
	jle	.LBB2_43
.Ltmp205:
# BB#40:                                #   in Loop: Header=BB2_39 Depth=1
	.loc	7 154 12                # initialize.c:154:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 154 24 is_stmt 0      # initialize.c:154:24
	mulsd	dnzm1(%rip), %xmm0
.Ltmp206:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp207:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp208:
	.p2align	4, 0x90
.LBB2_41:                               # %for.body277
                                        #   Parent Loop BB2_39 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	7 156 12 is_stmt 1      # initialize.c:156:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	7 156 24 is_stmt 0      # initialize.c:156:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp209:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	7 157 7 is_stmt 1       # initialize.c:157:7
	movsd	.LCPI2_1(%rip), %xmm1   # xmm1 = mem[0],zero
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp210:
	.loc	7 159 23                # initialize.c:159:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp211:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp212:
	.loc	7 155 41 discriminator 2 # initialize.c:155:41
	incl	%ebx
.Ltmp213:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 155 22 is_stmt 0 discriminator 1 # initialize.c:155:22
	movl	grid_points(%rip), %eax
	.loc	7 155 19 discriminator 1 # initialize.c:155:19
	addq	$40, %rbp
	cmpl	%eax, %ebx
	.loc	7 155 5 discriminator 1 # initialize.c:155:5
	jl	.LBB2_41
.Ltmp214:
# BB#42:                                # %for.inc301.loopexit
                                        #   in Loop: Header=BB2_39 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 153 20 is_stmt 1 discriminator 1 # initialize.c:153:20
	movl	grid_points+8(%rip), %r8d
.Ltmp215:
.LBB2_43:                               # %for.inc301
                                        #   in Loop: Header=BB2_39 Depth=1
	.loc	7 153 39 is_stmt 0 discriminator 2 # initialize.c:153:39
	incl	%r15d
.Ltmp216:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	7 153 3 discriminator 1 # initialize.c:153:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	7 153 17 discriminator 1 # initialize.c:153:17
	cmpl	%r8d, %r15d
	jl	.LBB2_39
.Ltmp217:
.LBB2_44:                               # %for.cond304.preheader
	.loc	7 169 20 is_stmt 1 discriminator 1 # initialize.c:169:20
	movl	grid_points+4(%rip), %eax
	.loc	7 169 3 is_stmt 0 discriminator 1 # initialize.c:169:3
	testl	%eax, %eax
	jle	.LBB2_58
# BB#45:                                # %for.body308.lr.ph
	movl	$u, %r14d
	xorl	%r15d, %r15d
.Ltmp218:
	.loc	7 171 21 is_stmt 1 discriminator 1 # initialize.c:171:21
	movl	grid_points(%rip), %ecx
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB2_46:                               # %for.body308
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_48 Depth 2
.Ltmp219:
	#DEBUG_VALUE: initialize:i <- 0
	.loc	7 171 5 is_stmt 0 discriminator 1 # initialize.c:171:5
	testl	%ecx, %ecx
	jle	.LBB2_50
.Ltmp220:
# BB#47:                                #   in Loop: Header=BB2_46 Depth=1
	.loc	7 170 11 is_stmt 1      # initialize.c:170:11
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 170 23 is_stmt 0      # initialize.c:170:23
	mulsd	dnym1(%rip), %xmm0
.Ltmp221:
	#DEBUG_VALUE: initialize:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp222:
	#DEBUG_VALUE: initialize:eta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp223:
	.p2align	4, 0x90
.LBB2_48:                               # %for.body315
                                        #   Parent Loop BB2_46 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	7 172 12 is_stmt 1      # initialize.c:172:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	7 172 24 is_stmt 0      # initialize.c:172:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp224:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	7 173 7 is_stmt 1       # initialize.c:173:7
	xorpd	%xmm2, %xmm2
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp225:
	.loc	7 175 23                # initialize.c:175:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp226:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp227:
	.loc	7 171 40 discriminator 2 # initialize.c:171:40
	incl	%ebx
.Ltmp228:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 171 21 is_stmt 0 discriminator 1 # initialize.c:171:21
	movl	grid_points(%rip), %ecx
	.loc	7 171 18 discriminator 1 # initialize.c:171:18
	addq	$40, %rbp
	cmpl	%ecx, %ebx
	.loc	7 171 5 discriminator 1 # initialize.c:171:5
	jl	.LBB2_48
.Ltmp229:
# BB#49:                                # %for.inc339.loopexit
                                        #   in Loop: Header=BB2_46 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 169 20 is_stmt 1 discriminator 1 # initialize.c:169:20
	movl	grid_points+4(%rip), %eax
.Ltmp230:
.LBB2_50:                               # %for.inc339
                                        #   in Loop: Header=BB2_46 Depth=1
	.loc	7 169 39 is_stmt 0 discriminator 2 # initialize.c:169:39
	incl	%r15d
.Ltmp231:
	#DEBUG_VALUE: initialize:j <- %R15D
	.loc	7 169 3 discriminator 1 # initialize.c:169:3
	addq	$2600, %r14             # imm = 0xA28
	.loc	7 169 17 discriminator 1 # initialize.c:169:17
	cmpl	%eax, %r15d
	jl	.LBB2_46
.Ltmp232:
# BB#51:                                # %for.end341
	#DEBUG_VALUE: initialize:j <- %R15D
	#DEBUG_VALUE: initialize:j <- 0
	#DEBUG_VALUE: initialize:zeta <- 1.000000e+00
	.loc	7 185 3 is_stmt 1 discriminator 1 # initialize.c:185:3
	testl	%eax, %eax
	jle	.LBB2_58
# BB#52:                                # %for.body347.lr.ph
.Ltmp233:
	.loc	7 191 9                 # initialize.c:191:9
	movslq	grid_points+8(%rip), %rcx
.Ltmp234:
	.loc	7 183 21                # initialize.c:183:21
	imulq	$169000, %rcx, %rdx     # imm = 0x29428
.Ltmp235:
	.loc	7 187 22 discriminator 1 # initialize.c:187:22
	movl	grid_points(%rip), %ecx
.Ltmp236:
	.loc	7 185 3 discriminator 1 # initialize.c:185:3
	leaq	u-169000(%rdx), %r14
	xorl	%r15d, %r15d
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB2_53:                               # %for.body347
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_55 Depth 2
.Ltmp237:
	#DEBUG_VALUE: initialize:i <- 0
	.loc	7 187 5 discriminator 1 # initialize.c:187:5
	testl	%ecx, %ecx
	jle	.LBB2_57
.Ltmp238:
# BB#54:                                #   in Loop: Header=BB2_53 Depth=1
	.loc	7 186 11                # initialize.c:186:11
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 186 23 is_stmt 0      # initialize.c:186:23
	mulsd	dnym1(%rip), %xmm0
.Ltmp239:
	#DEBUG_VALUE: initialize:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp240:
	#DEBUG_VALUE: initialize:eta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp241:
	.p2align	4, 0x90
.LBB2_55:                               # %for.body354
                                        #   Parent Loop BB2_53 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	7 188 12 is_stmt 1      # initialize.c:188:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	7 188 24 is_stmt 0      # initialize.c:188:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp242:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	7 189 7 is_stmt 1       # initialize.c:189:7
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	.LCPI2_1(%rip), %xmm2   # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp243:
	.loc	7 191 23                # initialize.c:191:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp244:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp245:
	.loc	7 187 41 discriminator 2 # initialize.c:187:41
	incl	%ebx
.Ltmp246:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 187 22 is_stmt 0 discriminator 1 # initialize.c:187:22
	movl	grid_points(%rip), %ecx
	.loc	7 187 19 discriminator 1 # initialize.c:187:19
	addq	$40, %rbp
	cmpl	%ecx, %ebx
	.loc	7 187 5 discriminator 1 # initialize.c:187:5
	jl	.LBB2_55
.Ltmp247:
# BB#56:                                # %for.inc378.loopexit
                                        #   in Loop: Header=BB2_53 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	7 185 20 is_stmt 1 discriminator 1 # initialize.c:185:20
	movl	grid_points+4(%rip), %eax
.Ltmp248:
.LBB2_57:                               # %for.inc378
                                        #   in Loop: Header=BB2_53 Depth=1
	.loc	7 185 39 is_stmt 0 discriminator 2 # initialize.c:185:39
	incl	%r15d
.Ltmp249:
	#DEBUG_VALUE: initialize:j <- %R15D
	.loc	7 185 3 discriminator 1 # initialize.c:185:3
	addq	$2600, %r14             # imm = 0xA28
	.loc	7 185 17 discriminator 1 # initialize.c:185:17
	cmpl	%eax, %r15d
	jl	.LBB2_53
.Ltmp250:
.LBB2_58:                               # %for.end380
	.loc	7 195 1 is_stmt 1       # initialize.c:195:1
	addq	$472, %rsp              # imm = 0x1D8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp251:
.Lfunc_end2:
	.size	initialize, .Lfunc_end2-initialize
	.cfi_endproc

	.globl	exact_solution
	.p2align	4, 0x90
	.type	exact_solution,@function
exact_solution:                         # @exact_solution
.Lfunc_begin3:
	.file	8 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/exact_solution.c"
	.loc	8 40 0                  # exact_solution.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: exact_solution:xi <- %XMM0
	#DEBUG_VALUE: exact_solution:eta <- %XMM1
	#DEBUG_VALUE: exact_solution:zeta <- %XMM2
	#DEBUG_VALUE: exact_solution:dtemp <- %RDI
	movq	$-520, %rax             # imm = 0xFFFFFFFFFFFFFDF8
.Ltmp252:
	#DEBUG_VALUE: exact_solution:m <- 0
	.p2align	4, 0x90
.LBB3_1:                                # %for.body
                                        # =>This Inner Loop Header: Depth=1
	movsd	ce+600(%rax), %xmm3     # xmm3 = mem[0],zero
.Ltmp253:
	.loc	8 45 54 prologue_end    # exact_solution.c:45:54
	mulsd	%xmm0, %xmm3
	.loc	8 45 50 is_stmt 0       # exact_solution.c:45:50
	addsd	ce+576(%rax), %xmm3
	.loc	8 45 39                 # exact_solution.c:45:39
	mulsd	%xmm0, %xmm3
	.loc	8 45 35                 # exact_solution.c:45:35
	addsd	ce+552(%rax), %xmm3
	.loc	8 45 24                 # exact_solution.c:45:24
	mulsd	%xmm0, %xmm3
	.loc	8 45 20                 # exact_solution.c:45:20
	addsd	ce+528(%rax), %xmm3
	.loc	8 45 9                  # exact_solution.c:45:9
	mulsd	%xmm0, %xmm3
	.loc	8 44 26 is_stmt 1       # exact_solution.c:44:26
	addsd	ce+520(%rax), %xmm3
	movsd	ce+608(%rax), %xmm4     # xmm4 = mem[0],zero
	.loc	8 46 58                 # exact_solution.c:46:58
	mulsd	%xmm1, %xmm4
	.loc	8 46 53 is_stmt 0       # exact_solution.c:46:53
	addsd	ce+584(%rax), %xmm4
	.loc	8 46 42                 # exact_solution.c:46:42
	mulsd	%xmm1, %xmm4
	.loc	8 46 37                 # exact_solution.c:46:37
	addsd	ce+560(%rax), %xmm4
	.loc	8 46 26                 # exact_solution.c:46:26
	mulsd	%xmm1, %xmm4
	.loc	8 46 21                 # exact_solution.c:46:21
	addsd	ce+536(%rax), %xmm4
	.loc	8 46 10                 # exact_solution.c:46:10
	mulsd	%xmm1, %xmm4
	.loc	8 45 68 is_stmt 1       # exact_solution.c:45:68
	addsd	%xmm3, %xmm4
	movsd	ce+616(%rax), %xmm3     # xmm3 = mem[0],zero
	.loc	8 48 11                 # exact_solution.c:48:11
	mulsd	%xmm2, %xmm3
	.loc	8 47 56                 # exact_solution.c:47:56
	addsd	ce+592(%rax), %xmm3
	.loc	8 47 45 is_stmt 0       # exact_solution.c:47:45
	mulsd	%xmm2, %xmm3
	.loc	8 47 39                 # exact_solution.c:47:39
	addsd	ce+568(%rax), %xmm3
	.loc	8 47 28                 # exact_solution.c:47:28
	mulsd	%xmm2, %xmm3
	.loc	8 47 22                 # exact_solution.c:47:22
	addsd	ce+544(%rax), %xmm3
	.loc	8 47 11                 # exact_solution.c:47:11
	mulsd	%xmm2, %xmm3
	.loc	8 46 71 is_stmt 1       # exact_solution.c:46:71
	addsd	%xmm4, %xmm3
	.loc	8 44 14                 # exact_solution.c:44:14
	movsd	%xmm3, (%rdi)
.Ltmp254:
	.loc	8 43 3 discriminator 1  # exact_solution.c:43:3
	addq	$8, %rdi
	addq	$104, %rax
	jne	.LBB3_1
.Ltmp255:
# BB#2:                                 # %for.end
	.loc	8 50 1                  # exact_solution.c:50:1
	retq
.Ltmp256:
.Lfunc_end3:
	.size	exact_solution, .Lfunc_end3-exact_solution
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI4_0:
	.quad	4607182418800017408     # double 1
.LCPI4_1:
	.quad	4602678819172646912     # double 0.5
.LCPI4_2:
	.quad	-4611686018427387904    # double -2
.LCPI4_3:
	.quad	4616189618054758400     # double 4
.LCPI4_4:
	.quad	4618441417868443648     # double 6
.LCPI4_8:
	.quad	4617315517961601024     # double 5
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI4_5:
	.quad	4617315517961601024     # double 5
	.quad	4617315517961601024     # double 5
.LCPI4_6:
	.quad	4616189618054758400     # double 4
	.quad	4616189618054758400     # double 4
.LCPI4_7:
	.quad	4618441417868443648     # double 6
	.quad	4618441417868443648     # double 6
.LCPI4_9:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	exact_rhs
	.p2align	4, 0x90
	.type	exact_rhs,@function
exact_rhs:                              # @exact_rhs
.Lfunc_begin4:
	.file	9 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/exact_rhs.c"
	.loc	9 40 0                  # exact_rhs.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	9 60 20 prologue_end discriminator 1 # exact_rhs.c:60:20
	pushq	%rbp
.Ltmp257:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp258:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp259:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp260:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp261:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp262:
	.cfi_def_cfa_offset 56
	subq	$296, %rsp              # imm = 0x128
.Ltmp263:
	.cfi_def_cfa_offset 352
.Ltmp264:
	.cfi_offset %rbx, -56
.Ltmp265:
	.cfi_offset %r12, -48
.Ltmp266:
	.cfi_offset %r13, -40
.Ltmp267:
	.cfi_offset %r14, -32
.Ltmp268:
	.cfi_offset %r15, -24
.Ltmp269:
	.cfi_offset %rbp, -16
.Ltmp270:
	#DEBUG_VALUE: exact_rhs:k <- 0
	movl	grid_points+8(%rip), %r12d
.Ltmp271:
	.loc	9 47 3 discriminator 1  # exact_rhs.c:47:3
	testl	%r12d, %r12d
	jle	.LBB4_10
# BB#1:                                 # %for.cond1.preheader.lr.ph
.Ltmp272:
	.loc	9 48 22 discriminator 1 # exact_rhs.c:48:22
	movl	grid_points+4(%rip), %ecx
	.loc	9 48 5 is_stmt 0 discriminator 1 # exact_rhs.c:48:5
	testl	%ecx, %ecx
	jle	.LBB4_10
# BB#2:                                 # %for.cond5.preheader.lr.ph.us.preheader
.Ltmp273:
	.loc	9 49 24 is_stmt 1 discriminator 1 # exact_rhs.c:49:24
	movl	grid_points(%rip), %eax
.Ltmp274:
	.loc	9 51 11                 # exact_rhs.c:51:11
	movq	%rax, 48(%rsp)          # 8-byte Spill
	leal	-1(%rax), %eax
	leaq	(%rax,%rax,4), %rax
	leaq	40(,%rax,8), %r15
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	leal	-1(%rcx), %eax
.Ltmp275:
	.loc	9 49 7 discriminator 1  # exact_rhs.c:49:7
	movl	%eax, 24(%rsp)          # 4-byte Spill
	andl	$7, %ecx
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	movl	$forcing, %eax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	xorl	%eax, %eax
	movl	$forcing+18200, %ecx
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	.p2align	4, 0x90
.LBB4_3:                                # %for.cond5.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_5 Depth 2
                                        #     Child Loop BB4_8 Depth 2
	movq	%rax, (%rsp)            # 8-byte Spill
	movq	48(%rsp), %rax          # 8-byte Reload
	testl	%eax, %eax
	jle	.LBB4_9
# BB#4:                                 # %for.cond9.preheader.lr.ph.us.us.preheader
                                        #   in Loop: Header=BB4_3 Depth=1
	movq	176(%rsp), %r14         # 8-byte Reload
	testl	%r14d, %r14d
	movq	16(%rsp), %rbx          # 8-byte Reload
	movl	$0, %ebp
	je	.LBB4_6
	.p2align	4, 0x90
.LBB4_5:                                # %for.cond9.preheader.lr.ph.us.us.prol
                                        #   Parent Loop BB4_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp276:
	.loc	9 51 31                 # exact_rhs.c:51:31
	xorl	%esi, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	memset
.Ltmp277:
	.loc	9 48 5 discriminator 1  # exact_rhs.c:48:5
	incq	%rbp
	addq	$2600, %rbx             # imm = 0xA28
	cmpl	%ebp, %r14d
	jne	.LBB4_5
.LBB4_6:                                # %for.cond9.preheader.lr.ph.us.us.preheader.split
                                        #   in Loop: Header=BB4_3 Depth=1
	cmpl	$7, 24(%rsp)            # 4-byte Folded Reload
	jb	.LBB4_9
# BB#7:                                 # %for.cond9.preheader.lr.ph.us.us.preheader.split.split
                                        #   in Loop: Header=BB4_3 Depth=1
.Ltmp278:
	.loc	9 49 7 discriminator 1  # exact_rhs.c:49:7
	movq	160(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ebx
	subl	%ebp, %ebx
	imulq	$2600, %rbp, %rbp       # imm = 0xA28
	movq	32(%rsp), %r13          # 8-byte Reload
	.p2align	4, 0x90
.LBB4_8:                                # %for.cond9.preheader.lr.ph.us.us
                                        #   Parent Loop BB4_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp279:
	.loc	9 51 31                 # exact_rhs.c:51:31
	leaq	(%r13,%rbp), %r14
	leaq	-18200(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-15600(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-13000(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-10400(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-7800(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-5200(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-2600(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	xorl	%esi, %esi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	memset
.Ltmp280:
	.loc	9 48 5 discriminator 1  # exact_rhs.c:48:5
	addq	$20800, %r13            # imm = 0x5140
	addl	$-8, %ebx
	jne	.LBB4_8
.Ltmp281:
.LBB4_9:                                # %for.cond1.for.inc24_crit_edge.us
                                        #   in Loop: Header=BB4_3 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	.loc	9 47 39 discriminator 2 # exact_rhs.c:47:39
	incl	%eax
.Ltmp282:
	#DEBUG_VALUE: exact_rhs:k <- %EAX
	.loc	9 47 3 is_stmt 0 discriminator 1 # exact_rhs.c:47:3
	addq	$169000, 16(%rsp)       # 8-byte Folded Spill
                                        # imm = 0x29428
	addq	$169000, 32(%rsp)       # 8-byte Folded Spill
                                        # imm = 0x29428
	.loc	9 47 17 discriminator 1 # exact_rhs.c:47:17
	cmpl	%r12d, %eax
	jl	.LBB4_3
.Ltmp283:
.LBB4_10:                               # %for.cond27.preheader
	.loc	9 60 17 is_stmt 1 discriminator 1 # exact_rhs.c:60:17
	movl	%r12d, %eax
	addl	$-2, %eax
	jle	.LBB4_27
# BB#11:                                # %for.body30.lr.ph
.Ltmp284:
	.loc	9 62 22 discriminator 1 # exact_rhs.c:62:22
	movl	grid_points+4(%rip), %eax
	movl	$1, %ecx
	movq	%rcx, 96(%rsp)          # 8-byte Spill
	movl	$forcing+171672, %esi
	movl	$forcing+171752, %edi
	leaq	112(%rsp), %rbx
	.p2align	4, 0x90
.LBB4_12:                               # %for.body30
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_14 Depth 2
                                        #       Child Loop BB4_16 Depth 3
                                        #       Child Loop BB4_19 Depth 3
                                        #       Child Loop BB4_22 Depth 3
.Ltmp285:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	9 62 19 is_stmt 0 discriminator 1 # exact_rhs.c:62:19
	movl	%eax, %ecx
	addl	$-2, %ecx
	jle	.LBB4_26
.Ltmp286:
# BB#13:                                # %for.body35.lr.ph
                                        #   in Loop: Header=BB4_12 Depth=1
	.loc	9 61 12 is_stmt 1       # exact_rhs.c:61:12
	movq	96(%rsp), %rax          # 8-byte Reload
	cvtsi2sdl	%eax, %xmm5
	.loc	9 61 24 is_stmt 0       # exact_rhs.c:61:24
	mulsd	dnzm1(%rip), %xmm5
.Ltmp287:
	#DEBUG_VALUE: exact_rhs:zeta <- %XMM5
	.loc	9 65 24 is_stmt 1 discriminator 1 # exact_rhs.c:65:24
	movsd	%xmm5, 16(%rsp)         # 8-byte Spill
	movl	grid_points(%rip), %edx
	movq	%rdi, 192(%rsp)         # 8-byte Spill
	movq	%rdi, %r13
	movq	%rsi, %r12
	movq	%rsi, 80(%rsp)          # 8-byte Spill
	movl	$1, %r15d
.Ltmp288:
	.p2align	4, 0x90
.LBB4_14:                               # %for.body35
                                        #   Parent Loop BB4_12 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB4_16 Depth 3
                                        #       Child Loop BB4_19 Depth 3
                                        #       Child Loop BB4_22 Depth 3
	#DEBUG_VALUE: exact_rhs:i <- 0
	.loc	9 65 21 is_stmt 0 discriminator 1 # exact_rhs.c:65:21
	testl	%edx, %edx
	jle	.LBB4_17
.Ltmp289:
# BB#15:                                #   in Loop: Header=BB4_14 Depth=2
	.loc	9 63 13 is_stmt 1       # exact_rhs.c:63:13
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 63 25 is_stmt 0       # exact_rhs.c:63:25
	mulsd	dnym1(%rip), %xmm0
.Ltmp290:
	#DEBUG_VALUE: exact_rhs:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp291:
	#DEBUG_VALUE: exact_rhs:eta <- [%RSP+0]
	xorl	%ebp, %ebp
	xorl	%r14d, %r14d
.Ltmp292:
	.p2align	4, 0x90
.LBB4_16:                               # %for.body42
                                        #   Parent Loop BB4_12 Depth=1
                                        #     Parent Loop BB4_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 66 14 is_stmt 1       # exact_rhs.c:66:14
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r14d, %xmm0
	.loc	9 66 26 is_stmt 0       # exact_rhs.c:66:26
	mulsd	dnxm1(%rip), %xmm0
.Ltmp293:
	#DEBUG_VALUE: exact_rhs:xi <- %XMM0
	.loc	9 68 9 is_stmt 1        # exact_rhs.c:68:9
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movapd	%xmm5, %xmm2
	movq	%rbx, %rdi
	callq	exact_solution
.Ltmp294:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 73 20                 # exact_rhs.c:73:20
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
.Ltmp295:
	movapd	%xmm0, %xmm2
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
.Ltmp296:
	.loc	9 70 20                 # exact_rhs.c:70:20
	movq	144(%rsp), %rax
	movq	%rax, ue+32(%rbp)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
	movups	%xmm1, ue+16(%rbp)
	movups	%xmm0, ue(%rbp)
.Ltmp297:
	.loc	9 73 20                 # exact_rhs.c:73:20
	movapd	%xmm2, %xmm0
	divsd	112(%rsp), %xmm0
.Ltmp298:
	#DEBUG_VALUE: exact_rhs:dtpp <- %XMM0
	#DEBUG_VALUE: exact_rhs:m <- 1
	.loc	9 76 30                 # exact_rhs.c:76:30
	movupd	120(%rsp), %xmm1
	.loc	9 76 28 is_stmt 0       # exact_rhs.c:76:28
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp299:
	mulpd	%xmm0, %xmm1
	.loc	9 76 21                 # exact_rhs.c:76:21
	movupd	%xmm1, buf+8(%rbp)
	.loc	9 76 30                 # exact_rhs.c:76:30
	movupd	136(%rsp), %xmm2
	.loc	9 76 28                 # exact_rhs.c:76:28
	mulpd	%xmm0, %xmm2
	.loc	9 76 21                 # exact_rhs.c:76:21
	movupd	%xmm2, buf+24(%rbp)
.Ltmp300:
	.loc	9 80 40 is_stmt 1       # exact_rhs.c:80:40
	movapd	%xmm1, %xmm0
	movsd	ue+8(%rbp), %xmm3       # xmm3 = mem[0],zero
	.loc	9 81 30                 # exact_rhs.c:81:30
	mulsd	%xmm1, %xmm3
	.loc	9 79 31                 # exact_rhs.c:79:31
	mulsd	%xmm1, %xmm1
	.loc	9 79 19 is_stmt 0       # exact_rhs.c:79:19
	movsd	%xmm1, cuf(,%r14,8)
	.loc	9 80 40 is_stmt 1       # exact_rhs.c:80:40
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	movsd	ue+16(%rbp), %xmm4      # xmm4 = mem[0],zero
	.loc	9 81 51                 # exact_rhs.c:81:51
	mulsd	%xmm0, %xmm4
	.loc	9 80 40                 # exact_rhs.c:80:40
	mulsd	%xmm0, %xmm0
	.loc	9 80 28 is_stmt 0       # exact_rhs.c:80:28
	addsd	%xmm1, %xmm0
	movsd	ue+24(%rbp), %xmm1      # xmm1 = mem[0],zero
	.loc	9 82 30 is_stmt 1       # exact_rhs.c:82:30
	mulsd	%xmm2, %xmm1
	.loc	9 80 64                 # exact_rhs.c:80:64
	mulsd	%xmm2, %xmm2
	.loc	9 80 52 is_stmt 0       # exact_rhs.c:80:52
	addsd	%xmm0, %xmm2
	movsd	.LCPI4_1(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	9 80 19                 # exact_rhs.c:80:19
	movsd	%xmm2, buf(%rbp)
	.loc	9 81 40 is_stmt 1       # exact_rhs.c:81:40
	addsd	%xmm3, %xmm4
	.loc	9 81 61 is_stmt 0       # exact_rhs.c:81:61
	addsd	%xmm4, %xmm1
	.loc	9 81 19                 # exact_rhs.c:81:19
	mulsd	%xmm0, %xmm1
	.loc	9 81 14                 # exact_rhs.c:81:14
	movsd	%xmm1, q(,%r14,8)
.Ltmp301:
	.loc	9 65 7 is_stmt 1 discriminator 1 # exact_rhs.c:65:7
	incq	%r14
	.loc	9 65 21 is_stmt 0 discriminator 1 # exact_rhs.c:65:21
	movslq	grid_points(%rip), %rdx
	addq	$40, %rbp
	cmpq	%rdx, %r14
	jl	.LBB4_16
.Ltmp302:
.LBB4_17:                               # %for.cond131.preheader
                                        #   in Loop: Header=BB4_14 Depth=2
	.loc	9 85 21 is_stmt 1 discriminator 1 # exact_rhs.c:85:21
	addl	$-2, %edx
	movsd	.LCPI4_2(%rip), %xmm0   # xmm0 = mem[0],zero
	jle	.LBB4_20
# BB#18:                                # %for.body135.lr.ph
                                        #   in Loop: Header=BB4_14 Depth=2
.Ltmp303:
	.loc	9 90 11                 # exact_rhs.c:90:11
	movsd	tx2(%rip), %xmm15       # xmm15 = mem[0],zero
	.loc	9 94 37                 # exact_rhs.c:94:37
	movsd	c2(%rip), %xmm13        # xmm13 = mem[0],zero
	.loc	9 110 26                # exact_rhs.c:110:26
	movsd	c1(%rip), %xmm6         # xmm6 = mem[0],zero
	movsd	xxcon3(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	9 112 14                # exact_rhs.c:112:14
	mulsd	.LCPI4_1(%rip), %xmm1
	movsd	%xmm1, (%rsp)           # 8-byte Spill
	.loc	9 114 11                # exact_rhs.c:114:11
	movsd	xxcon4(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	9 115 11                # exact_rhs.c:115:11
	movsd	%xmm1, 32(%rsp)         # 8-byte Spill
	movsd	xxcon5(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	9 116 11                # exact_rhs.c:116:11
	movsd	%xmm1, 48(%rsp)         # 8-byte Spill
	movsd	dx5tx1(%rip), %xmm1     # xmm1 = mem[0],zero
.Ltmp304:
	.loc	9 85 7 discriminator 1  # exact_rhs.c:85:7
	movsd	%xmm1, 24(%rsp)         # 8-byte Spill
	movslq	%edx, %rax
.Ltmp305:
	.loc	9 95 41                 # exact_rhs.c:95:41
	movsd	ue+32(%rip), %xmm5      # xmm5 = mem[0],zero
	.loc	9 96 35                 # exact_rhs.c:96:35
	movsd	buf+48(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	9 90 14                 # exact_rhs.c:90:14
	movapd	%xmm15, %xmm1
	movhpd	xxcon1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 176(%rsp)        # 16-byte Spill
	.loc	9 91 17                 # exact_rhs.c:91:17
	movsd	dx1tx1(%rip), %xmm1     # xmm1 = mem[0],zero
	movhpd	dx2tx1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 160(%rsp)        # 16-byte Spill
	.loc	9 99 57                 # exact_rhs.c:99:57
	movapd	%xmm15, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 240(%rsp)        # 16-byte Spill
	.loc	9 101 17                # exact_rhs.c:101:17
	movsd	xxcon2(%rip), %xmm1     # xmm1 = mem[0],zero
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 224(%rsp)        # 16-byte Spill
	.loc	9 102 17                # exact_rhs.c:102:17
	movsd	dx3tx1(%rip), %xmm1     # xmm1 = mem[0],zero
	movhpd	dx4tx1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 208(%rsp)        # 16-byte Spill
	.loc	9 96 35                 # exact_rhs.c:96:35
	movl	$0, %ecx
	movq	%r12, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB4_19:                               # %for.body135
                                        #   Parent Loop BB4_12 Depth=1
                                        #     Parent Loop BB4_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 90 17                 # exact_rhs.c:90:17
	movsd	ue+88(%rcx), %xmm12     # xmm12 = mem[0],zero
	.loc	9 90 28 is_stmt 0       # exact_rhs.c:90:28
	movsd	ue+8(%rcx), %xmm11      # xmm11 = mem[0],zero
	.loc	9 94 25 is_stmt 1       # exact_rhs.c:94:25
	movsd	buf+88(%rcx), %xmm10    # xmm10 = mem[0],zero
	.loc	9 94 24 is_stmt 0       # exact_rhs.c:94:24
	movapd	%xmm12, %xmm3
	mulsd	%xmm10, %xmm3
	.loc	9 94 41                 # exact_rhs.c:94:41
	movsd	ue+112(%rcx), %xmm7     # xmm7 = mem[0],zero
	.loc	9 94 52                 # exact_rhs.c:94:52
	movsd	q+16(,%rsi,8), %xmm14   # xmm14 = mem[0],zero
	.loc	9 94 51                 # exact_rhs.c:94:51
	movapd	%xmm7, %xmm2
	subsd	%xmm14, %xmm2
	.loc	9 94 39                 # exact_rhs.c:94:39
	mulsd	%xmm13, %xmm2
	.loc	9 94 36                 # exact_rhs.c:94:36
	addsd	%xmm3, %xmm2
	.loc	9 95 25 is_stmt 1       # exact_rhs.c:95:25
	movsd	buf+8(%rcx), %xmm8      # xmm8 = mem[0],zero
	.loc	9 95 24 is_stmt 0       # exact_rhs.c:95:24
	movapd	%xmm11, %xmm3
	mulsd	%xmm8, %xmm3
	.loc	9 95 52                 # exact_rhs.c:95:52
	movsd	q(,%rsi,8), %xmm9       # xmm9 = mem[0],zero
	.loc	9 95 51                 # exact_rhs.c:95:51
	subsd	%xmm9, %xmm5
	.loc	9 95 39                 # exact_rhs.c:95:39
	mulsd	%xmm13, %xmm5
	.loc	9 95 36                 # exact_rhs.c:95:36
	addsd	%xmm3, %xmm5
	.loc	9 91 29 is_stmt 1       # exact_rhs.c:91:29
	movsd	ue+80(%rcx), %xmm3      # xmm3 = mem[0],zero
	unpcklpd	%xmm12, %xmm3   # xmm3 = xmm3[0],xmm12[0]
	.loc	9 94 60                 # exact_rhs.c:94:60
	subsd	%xmm5, %xmm2
	.loc	9 93 31                 # exact_rhs.c:93:31
	movsd	-24(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	9 93 57 is_stmt 0       # exact_rhs.c:93:57
	mulsd	%xmm15, %xmm2
	.loc	9 93 51                 # exact_rhs.c:93:51
	subsd	%xmm2, %xmm5
	.loc	9 91 42 is_stmt 1       # exact_rhs.c:91:42
	movsd	ue(%rcx), %xmm2         # xmm2 = mem[0],zero
	unpcklpd	%xmm11, %xmm2   # xmm2 = xmm2[0],xmm11[0]
	.loc	9 96 34                 # exact_rhs.c:96:34
	mulsd	%xmm0, %xmm4
	.loc	9 96 30 is_stmt 0       # exact_rhs.c:96:30
	addsd	%xmm10, %xmm4
	.loc	9 90 27 is_stmt 1       # exact_rhs.c:90:27
	unpcklpd	%xmm8, %xmm12   # xmm12 = xmm12[0],xmm8[0]
	unpcklpd	%xmm4, %xmm11   # xmm11 = xmm11[0],xmm4[0]
	movapd	%xmm12, %xmm4
	subpd	%xmm11, %xmm4
	addpd	%xmm12, %xmm11
	movsd	%xmm4, %xmm11           # xmm11 = xmm4[0],xmm11[1]
	.loc	9 89 51                 # exact_rhs.c:89:51
	movsd	-32(%rdx), %xmm4        # xmm4 = mem[0],zero
	.loc	9 90 14                 # exact_rhs.c:90:14
	mulpd	176(%rsp), %xmm11       # 16-byte Folded Reload
	.loc	9 89 51                 # exact_rhs.c:89:51
	unpcklpd	%xmm5, %xmm4    # xmm4 = xmm4[0],xmm5[0]
	movapd	%xmm4, %xmm5
	subpd	%xmm11, %xmm5
	addpd	%xmm11, %xmm4
	movsd	%xmm5, %xmm4            # xmm4 = xmm5[0],xmm4[1]
	.loc	9 91 34                 # exact_rhs.c:91:34
	movupd	ue+40(%rcx), %xmm5
	.loc	9 91 33 is_stmt 0       # exact_rhs.c:91:33
	addpd	%xmm5, %xmm5
	.loc	9 91 29                 # exact_rhs.c:91:29
	subpd	%xmm5, %xmm3
	.loc	9 91 42                 # exact_rhs.c:91:42
	addpd	%xmm3, %xmm2
	.loc	9 91 17                 # exact_rhs.c:91:17
	mulpd	160(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	9 90 40 is_stmt 1       # exact_rhs.c:90:40
	addpd	%xmm4, %xmm2
	.loc	9 89 29                 # exact_rhs.c:89:29
	movupd	%xmm2, -32(%rdx)
	.loc	9 99 31                 # exact_rhs.c:99:31
	movupd	-16(%rdx), %xmm5
	.loc	9 100 13                # exact_rhs.c:100:13
	movupd	ue+96(%rcx), %xmm4
	.loc	9 100 23 is_stmt 0      # exact_rhs.c:100:23
	movapd	%xmm10, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm4, %xmm2
	.loc	9 111 29 is_stmt 1      # exact_rhs.c:111:29
	movsd	ue+32(%rcx), %xmm12     # xmm12 = mem[0],zero
	movapd	%xmm0, %xmm11
	movapd	%xmm6, %xmm3
	.loc	9 111 28 is_stmt 0      # exact_rhs.c:111:28
	movapd	%xmm3, %xmm0
	mulsd	%xmm12, %xmm0
	.loc	9 111 42                # exact_rhs.c:111:42
	mulsd	%xmm13, %xmm9
	.loc	9 111 39                # exact_rhs.c:111:39
	subsd	%xmm9, %xmm0
	.loc	9 100 36 is_stmt 1      # exact_rhs.c:100:36
	movupd	ue+16(%rcx), %xmm1
	.loc	9 111 24                # exact_rhs.c:111:24
	mulsd	%xmm8, %xmm0
	.loc	9 100 46                # exact_rhs.c:100:46
	movlhps	%xmm8, %xmm8            # xmm8 = xmm8[0,0]
	mulpd	%xmm1, %xmm8
	.loc	9 100 35 is_stmt 0      # exact_rhs.c:100:35
	subpd	%xmm8, %xmm2
	.loc	9 99 57 is_stmt 1       # exact_rhs.c:99:57
	mulpd	240(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	9 99 51 is_stmt 0       # exact_rhs.c:99:51
	subpd	%xmm2, %xmm5
	.loc	9 101 19 is_stmt 1      # exact_rhs.c:101:19
	movupd	buf+96(%rcx), %xmm2
	.loc	9 101 35 is_stmt 0      # exact_rhs.c:101:35
	movupd	buf+56(%rcx), %xmm6
	.loc	9 101 34                # exact_rhs.c:101:34
	addpd	%xmm6, %xmm6
	.loc	9 101 30                # exact_rhs.c:101:30
	subpd	%xmm6, %xmm2
	.loc	9 101 45                # exact_rhs.c:101:45
	movupd	buf+16(%rcx), %xmm6
	.loc	9 101 44                # exact_rhs.c:101:44
	addpd	%xmm2, %xmm6
	.loc	9 101 17                # exact_rhs.c:101:17
	mulpd	224(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	9 100 59 is_stmt 1      # exact_rhs.c:100:59
	addpd	%xmm5, %xmm6
	.loc	9 102 35                # exact_rhs.c:102:35
	movupd	ue+56(%rcx), %xmm2
	.loc	9 102 34 is_stmt 0      # exact_rhs.c:102:34
	addpd	%xmm2, %xmm2
	.loc	9 102 30                # exact_rhs.c:102:30
	subpd	%xmm2, %xmm4
	.loc	9 102 44                # exact_rhs.c:102:44
	addpd	%xmm1, %xmm4
	.loc	9 102 17                # exact_rhs.c:102:17
	mulpd	208(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	9 101 57 is_stmt 1      # exact_rhs.c:101:57
	addpd	%xmm6, %xmm4
	.loc	9 110 28                # exact_rhs.c:110:28
	movapd	%xmm3, %xmm1
	movapd	%xmm3, %xmm6
	mulsd	%xmm7, %xmm1
	.loc	9 110 42 is_stmt 0      # exact_rhs.c:110:42
	mulsd	%xmm13, %xmm14
	.loc	9 110 39                # exact_rhs.c:110:39
	subsd	%xmm14, %xmm1
	.loc	9 110 24                # exact_rhs.c:110:24
	mulsd	%xmm10, %xmm1
	.loc	9 99 29 is_stmt 1       # exact_rhs.c:99:29
	movupd	%xmm4, -16(%rdx)
	.loc	9 109 31                # exact_rhs.c:109:31
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	9 110 50                # exact_rhs.c:110:50
	subsd	%xmm0, %xmm1
	.loc	9 109 56                # exact_rhs.c:109:56
	mulsd	%xmm15, %xmm1
	.loc	9 109 51 is_stmt 0      # exact_rhs.c:109:51
	subsd	%xmm1, %xmm2
	.loc	9 112 23 is_stmt 1      # exact_rhs.c:112:23
	movsd	buf+80(%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	9 112 39 is_stmt 0      # exact_rhs.c:112:39
	movsd	buf+40(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	9 112 38                # exact_rhs.c:112:38
	addsd	%xmm1, %xmm1
	.loc	9 112 34                # exact_rhs.c:112:34
	subsd	%xmm1, %xmm0
	.loc	9 112 48                # exact_rhs.c:112:48
	addsd	buf(%rcx), %xmm0
	.loc	9 112 21                # exact_rhs.c:112:21
	mulsd	(%rsp), %xmm0           # 8-byte Folded Reload
	.loc	9 111 51 is_stmt 1      # exact_rhs.c:111:51
	addsd	%xmm2, %xmm0
	.loc	9 114 19                # exact_rhs.c:114:19
	movsd	cuf+16(,%rsi,8), %xmm1  # xmm1 = mem[0],zero
	.loc	9 114 32 is_stmt 0      # exact_rhs.c:114:32
	movsd	cuf+8(,%rsi,8), %xmm2   # xmm2 = mem[0],zero
	.loc	9 114 31                # exact_rhs.c:114:31
	addsd	%xmm2, %xmm2
	.loc	9 114 27                # exact_rhs.c:114:27
	subsd	%xmm2, %xmm1
	.loc	9 114 38                # exact_rhs.c:114:38
	addsd	cuf(,%rsi,8), %xmm1
	.loc	9 114 17                # exact_rhs.c:114:17
	mulsd	32(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	9 113 27 is_stmt 1      # exact_rhs.c:113:27
	addsd	%xmm0, %xmm1
	.loc	9 115 19                # exact_rhs.c:115:19
	movsd	buf+112(%rcx), %xmm0    # xmm0 = mem[0],zero
	.loc	9 115 35 is_stmt 0      # exact_rhs.c:115:35
	movsd	buf+72(%rcx), %xmm2     # xmm2 = mem[0],zero
	.loc	9 115 34                # exact_rhs.c:115:34
	addsd	%xmm2, %xmm2
	.loc	9 115 30                # exact_rhs.c:115:30
	subsd	%xmm2, %xmm0
	.loc	9 115 44                # exact_rhs.c:115:44
	addsd	buf+32(%rcx), %xmm0
	.loc	9 115 17                # exact_rhs.c:115:17
	mulsd	48(%rsp), %xmm0         # 8-byte Folded Reload
	.loc	9 114 48 is_stmt 1      # exact_rhs.c:114:48
	addsd	%xmm1, %xmm0
	.loc	9 116 36                # exact_rhs.c:116:36
	movsd	ue+72(%rcx), %xmm5      # xmm5 = mem[0],zero
	.loc	9 116 34 is_stmt 0      # exact_rhs.c:116:34
	movapd	%xmm5, %xmm1
	addsd	%xmm1, %xmm1
	.loc	9 116 30                # exact_rhs.c:116:30
	subsd	%xmm1, %xmm7
	.loc	9 116 44                # exact_rhs.c:116:44
	addsd	%xmm12, %xmm7
	.loc	9 116 17                # exact_rhs.c:116:17
	mulsd	24(%rsp), %xmm7         # 8-byte Folded Reload
	.loc	9 115 57 is_stmt 1      # exact_rhs.c:115:57
	addsd	%xmm0, %xmm7
	movapd	%xmm11, %xmm0
	.loc	9 109 29                # exact_rhs.c:109:29
	movsd	%xmm7, (%rdx)
	.loc	9 96 35                 # exact_rhs.c:96:35
	movapd	%xmm10, %xmm4
.Ltmp306:
	.loc	9 85 21 discriminator 1 # exact_rhs.c:85:21
	incq	%rsi
	addq	$40, %rdx
	addq	$40, %rcx
	cmpq	%rax, %rsi
	jl	.LBB4_19
.Ltmp307:
.LBB4_20:                               # %for.cond466.preheader
                                        #   in Loop: Header=BB4_14 Depth=2
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	9 124 31                # exact_rhs.c:124:31
	imulq	$2600, %r15, %rax       # imm = 0xA28
	imulq	$169000, 96(%rsp), %rcx # 8-byte Folded Reload
                                        # imm = 0x29428
	.loc	9 125 16                # exact_rhs.c:125:16
	movupd	ue+40(%rip), %xmm6
	.loc	9 128 16                # exact_rhs.c:128:16
	movapd	%xmm6, %xmm0
	movsd	.LCPI4_3(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	.loc	9 125 31                # exact_rhs.c:125:31
	movapd	ue+80(%rip), %xmm4
	.loc	9 128 33                # exact_rhs.c:128:33
	movapd	%xmm4, (%rsp)           # 16-byte Spill
	movapd	%xmm4, %xmm14
	movsd	.LCPI4_4(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm14
	.loc	9 128 16 is_stmt 0      # exact_rhs.c:128:16
	subsd	%xmm0, %xmm14
	.loc	9 125 43 is_stmt 1      # exact_rhs.c:125:43
	movupd	ue+120(%rip), %xmm9
.Ltmp308:
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	9 124 31                # exact_rhs.c:124:31
	movupd	forcing+40(%rcx,%rax), %xmm1
	.loc	9 125 15                # exact_rhs.c:125:15
	movapd	%xmm6, %xmm3
	movapd	.LCPI4_5(%rip), %xmm0   # xmm0 = [5.000000e+00,5.000000e+00]
	movapd	%xmm0, %xmm15
	mulpd	%xmm15, %xmm3
	.loc	9 125 30 is_stmt 0      # exact_rhs.c:125:30
	movapd	%xmm4, %xmm2
	movapd	.LCPI4_6(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	mulpd	%xmm10, %xmm2
	.loc	9 125 25                # exact_rhs.c:125:25
	subpd	%xmm2, %xmm3
	.loc	9 125 42                # exact_rhs.c:125:42
	addpd	%xmm9, %xmm3
	.loc	9 124 58 is_stmt 1      # exact_rhs.c:124:58
	movsd	dssp(%rip), %xmm2       # xmm2 = mem[0],zero
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm3
	.loc	9 124 51 is_stmt 0      # exact_rhs.c:124:51
	subpd	%xmm3, %xmm1
	.loc	9 124 29                # exact_rhs.c:124:29
	movupd	%xmm1, forcing+40(%rcx,%rax)
.Ltmp309:
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	9 129 34 is_stmt 1      # exact_rhs.c:129:34
	movsd	ue+168(%rip), %xmm13    # xmm13 = mem[0],zero
.Ltmp310:
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	9 125 16                # exact_rhs.c:125:16
	movupd	ue+56(%rip), %xmm5
	.loc	9 125 31 is_stmt 0      # exact_rhs.c:125:31
	movapd	ue+96(%rip), %xmm8
	.loc	9 125 43                # exact_rhs.c:125:43
	movupd	ue+136(%rip), %xmm11
.Ltmp311:
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	9 127 31 is_stmt 1      # exact_rhs.c:127:31
	movupd	forcing+88(%rcx,%rax), %xmm1
	.loc	9 128 16                # exact_rhs.c:128:16
	movapd	%xmm6, %xmm3
	shufpd	$1, %xmm5, %xmm3        # xmm3 = xmm3[1],xmm5[0]
	mulpd	%xmm10, %xmm3
	.loc	9 128 33 is_stmt 0      # exact_rhs.c:128:33
	movapd	%xmm4, %xmm7
	shufpd	$1, %xmm8, %xmm7        # xmm7 = xmm7[1],xmm8[0]
	movapd	.LCPI4_7(%rip), %xmm4   # xmm4 = [6.000000e+00,6.000000e+00]
	mulpd	%xmm4, %xmm7
	.loc	9 128 16                # exact_rhs.c:128:16
	subpd	%xmm3, %xmm7
	.loc	9 129 16 is_stmt 1      # exact_rhs.c:129:16
	movapd	%xmm9, %xmm3
	shufpd	$1, %xmm11, %xmm3       # xmm3 = xmm3[1],xmm11[0]
	mulpd	%xmm10, %xmm3
	.loc	9 128 43                # exact_rhs.c:128:43
	subpd	%xmm3, %xmm7
	.loc	9 129 34                # exact_rhs.c:129:34
	movapd	ue+176(%rip), %xmm12
	.loc	9 129 28 is_stmt 0      # exact_rhs.c:129:28
	movapd	%xmm13, %xmm3
	unpcklpd	%xmm12, %xmm3   # xmm3 = xmm3[0],xmm12[0]
	addpd	%xmm7, %xmm3
	.loc	9 127 58 is_stmt 1      # exact_rhs.c:127:58
	mulpd	%xmm2, %xmm3
	.loc	9 127 51 is_stmt 0      # exact_rhs.c:127:51
	subpd	%xmm3, %xmm1
	.loc	9 127 29                # exact_rhs.c:127:29
	movupd	%xmm1, forcing+88(%rcx,%rax)
.Ltmp312:
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	9 124 31 is_stmt 1      # exact_rhs.c:124:31
	movupd	forcing+56(%rcx,%rax), %xmm1
	.loc	9 125 15                # exact_rhs.c:125:15
	movapd	%xmm5, %xmm3
	mulpd	%xmm15, %xmm3
	.loc	9 125 30 is_stmt 0      # exact_rhs.c:125:30
	movapd	%xmm8, %xmm7
	mulpd	%xmm10, %xmm7
	.loc	9 125 25                # exact_rhs.c:125:25
	subpd	%xmm7, %xmm3
	.loc	9 125 42                # exact_rhs.c:125:42
	addpd	%xmm11, %xmm3
	.loc	9 124 58 is_stmt 1      # exact_rhs.c:124:58
	mulpd	%xmm2, %xmm3
	.loc	9 124 51 is_stmt 0      # exact_rhs.c:124:51
	subpd	%xmm3, %xmm1
	.loc	9 124 29                # exact_rhs.c:124:29
	movupd	%xmm1, forcing+56(%rcx,%rax)
.Ltmp313:
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	9 124 31                # exact_rhs.c:124:31
	movupd	forcing+72(%rcx,%rax), %xmm3
	.loc	9 125 16 is_stmt 1      # exact_rhs.c:125:16
	movsd	ue+72(%rip), %xmm7      # xmm7 = mem[0],zero
	.loc	9 125 15 is_stmt 0      # exact_rhs.c:125:15
	movapd	%xmm7, %xmm4
	movsd	.LCPI4_8(%rip), %xmm0   # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm4
	.loc	9 125 31                # exact_rhs.c:125:31
	movsd	ue+112(%rip), %xmm15    # xmm15 = mem[0],zero
	.loc	9 125 25                # exact_rhs.c:125:25
	unpcklpd	%xmm14, %xmm4   # xmm4 = xmm4[0],xmm14[0]
	.loc	9 125 30                # exact_rhs.c:125:30
	movapd	%xmm15, %xmm1
	unpcklpd	%xmm9, %xmm1    # xmm1 = xmm1[0],xmm9[0]
	mulpd	%xmm10, %xmm1
	.loc	9 125 25                # exact_rhs.c:125:25
	subpd	%xmm1, %xmm4
	.loc	9 125 43                # exact_rhs.c:125:43
	movupd	ue+152(%rip), %xmm1
	.loc	9 125 42                # exact_rhs.c:125:42
	addpd	%xmm1, %xmm4
	.loc	9 124 58 is_stmt 1      # exact_rhs.c:124:58
	mulpd	%xmm2, %xmm4
	.loc	9 124 51 is_stmt 0      # exact_rhs.c:124:51
	subpd	%xmm4, %xmm3
	.loc	9 128 16 is_stmt 1      # exact_rhs.c:128:16
	movapd	%xmm5, %xmm4
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	.loc	9 124 29                # exact_rhs.c:124:29
	movupd	%xmm3, forcing+72(%rcx,%rax)
	.loc	9 128 33                # exact_rhs.c:128:33
	movapd	%xmm8, %xmm3
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	.loc	9 128 16 is_stmt 0      # exact_rhs.c:128:16
	unpcklpd	%xmm7, %xmm4    # xmm4 = xmm4[0],xmm7[0]
	mulpd	%xmm10, %xmm4
	.loc	9 128 33                # exact_rhs.c:128:33
	unpcklpd	%xmm15, %xmm3   # xmm3 = xmm3[0],xmm15[0]
	mulpd	.LCPI4_7(%rip), %xmm3
	.loc	9 128 16                # exact_rhs.c:128:16
	subpd	%xmm4, %xmm3
	.loc	9 129 16 is_stmt 1      # exact_rhs.c:129:16
	movapd	%xmm11, %xmm4
	shufpd	$1, %xmm1, %xmm4        # xmm4 = xmm4[1],xmm1[0]
	mulpd	%xmm10, %xmm4
	.loc	9 128 43                # exact_rhs.c:128:43
	subpd	%xmm4, %xmm3
	.loc	9 129 28                # exact_rhs.c:129:28
	movapd	%xmm12, %xmm1
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
.Ltmp314:
	#DEBUG_VALUE: exact_rhs:i <- 1
	movhpd	ue+192(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	addpd	%xmm3, %xmm1
	.loc	9 127 58                # exact_rhs.c:127:58
	mulpd	%xmm2, %xmm1
	.loc	9 127 31 is_stmt 0      # exact_rhs.c:127:31
	movupd	forcing+104(%rcx,%rax), %xmm2
	.loc	9 127 51                # exact_rhs.c:127:51
	subpd	%xmm1, %xmm2
	.loc	9 127 29                # exact_rhs.c:127:29
	movupd	%xmm2, forcing+104(%rcx,%rax)
.Ltmp315:
	.loc	9 132 7 is_stmt 1 discriminator 1 # exact_rhs.c:132:7
	movslq	grid_points(%rip), %rdx
	.loc	9 132 38 is_stmt 0 discriminator 1 # exact_rhs.c:132:38
	movq	%rdx, %rsi
	addq	$-4, %rsi
.Ltmp316:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 132 21 discriminator 1 # exact_rhs.c:132:21
	cmpl	$3, %esi
	jl	.LBB4_24
.Ltmp317:
# BB#21:                                # %for.cond557.preheader.lr.ph
                                        #   in Loop: Header=BB4_14 Depth=2
	movapd	(%rsp), %xmm1           # 16-byte Reload
.Ltmp318:
	.loc	9 128 33 is_stmt 1      # exact_rhs.c:128:33
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	.loc	9 128 16 is_stmt 0      # exact_rhs.c:128:16
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
.Ltmp319:
	.loc	9 134 55 is_stmt 1      # exact_rhs.c:134:55
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	9 136 33                # exact_rhs.c:136:33
	movapd	%xmm0, 32(%rsp)         # 16-byte Spill
	movsd	ue+160(%rip), %xmm2     # xmm2 = mem[0],zero
	unpcklpd	%xmm13, %xmm2   # xmm2 = xmm2[0],xmm13[0]
	.loc	9 136 18 is_stmt 0      # exact_rhs.c:136:18
	movlpd	ue+120(%rip), %xmm9     # xmm9 = mem[0],xmm9[1]
	.loc	9 134 59 is_stmt 1      # exact_rhs.c:134:59
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movapd	%xmm11, %xmm13
	movapd	%xmm8, %xmm11
	movaps	%xmm0, %xmm8
	.loc	9 135 31                # exact_rhs.c:135:31
	movl	$ue+232, %edx
	movq	%r13, %rdi
	movl	$2, %ebp
.Ltmp320:
	.loc	9 125 30                # exact_rhs.c:125:30
	movapd	.LCPI4_6(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	.loc	9 128 33                # exact_rhs.c:128:33
	movapd	.LCPI4_7(%rip), %xmm0   # xmm0 = [6.000000e+00,6.000000e+00]
	movapd	%xmm12, %xmm14
	movapd	%xmm0, %xmm12
	movapd	%xmm1, %xmm0
.Ltmp321:
	.p2align	4, 0x90
.LBB4_22:                               # %for.cond557.preheader
                                        #   Parent Loop BB4_12 Depth=1
                                        #     Parent Loop BB4_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 135 25                # exact_rhs.c:135:25
	movsd	-192(%rdx), %xmm1       # xmm1 = mem[0],zero
	unpcklpd	%xmm6, %xmm1    # xmm1 = xmm1[0],xmm6[0]
	.loc	9 135 31 is_stmt 0      # exact_rhs.c:135:31
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	movapd	%xmm15, %xmm6
	.loc	9 134 33 is_stmt 1      # exact_rhs.c:134:33
	movupd	-32(%rdi), %xmm4
	.loc	9 135 30                # exact_rhs.c:135:30
	movsd	-152(%rdx), %xmm3       # xmm3 = mem[0],zero
	unpcklpd	%xmm0, %xmm3    # xmm3 = xmm3[0],xmm0[0]
	mulpd	%xmm10, %xmm3
	.loc	9 135 25 is_stmt 0      # exact_rhs.c:135:25
	subpd	%xmm3, %xmm1
	.loc	9 136 17 is_stmt 1      # exact_rhs.c:136:17
	movapd	%xmm9, %xmm0
	mulpd	%xmm12, %xmm0
	.loc	9 135 42                # exact_rhs.c:135:42
	addpd	%xmm1, %xmm0
	.loc	9 136 32                # exact_rhs.c:136:32
	movapd	%xmm2, %xmm1
	mulpd	%xmm10, %xmm1
	.loc	9 136 27 is_stmt 0      # exact_rhs.c:136:27
	subpd	%xmm1, %xmm0
	.loc	9 136 46                # exact_rhs.c:136:46
	movupd	-32(%rdx), %xmm3
	.loc	9 136 44                # exact_rhs.c:136:44
	addpd	%xmm3, %xmm0
	.loc	9 134 59 is_stmt 1      # exact_rhs.c:134:59
	mulpd	%xmm8, %xmm0
	.loc	9 134 53 is_stmt 0      # exact_rhs.c:134:53
	subpd	%xmm0, %xmm4
	.loc	9 134 31                # exact_rhs.c:134:31
	movupd	%xmm4, -32(%rdi)
	.loc	9 134 33                # exact_rhs.c:134:33
	movupd	-16(%rdi), %xmm0
	.loc	9 135 30 is_stmt 1      # exact_rhs.c:135:30
	movapd	%xmm11, %xmm1
	mulpd	%xmm10, %xmm1
	.loc	9 135 25 is_stmt 0      # exact_rhs.c:135:25
	subpd	%xmm1, %xmm5
	.loc	9 136 17 is_stmt 1      # exact_rhs.c:136:17
	movapd	%xmm13, %xmm1
	mulpd	%xmm12, %xmm1
	.loc	9 135 42                # exact_rhs.c:135:42
	addpd	%xmm5, %xmm1
	.loc	9 136 32                # exact_rhs.c:136:32
	movapd	%xmm14, %xmm4
	mulpd	%xmm10, %xmm4
	.loc	9 136 27 is_stmt 0      # exact_rhs.c:136:27
	subpd	%xmm4, %xmm1
	.loc	9 136 46                # exact_rhs.c:136:46
	movupd	-16(%rdx), %xmm4
	.loc	9 136 44                # exact_rhs.c:136:44
	addpd	%xmm4, %xmm1
	.loc	9 134 59 is_stmt 1      # exact_rhs.c:134:59
	mulpd	%xmm8, %xmm1
	.loc	9 134 53 is_stmt 0      # exact_rhs.c:134:53
	subpd	%xmm1, %xmm0
	.loc	9 134 31                # exact_rhs.c:134:31
	movupd	%xmm0, -16(%rdi)
	.loc	9 135 30 is_stmt 1      # exact_rhs.c:135:30
	movapd	%xmm6, %xmm0
	movsd	.LCPI4_3(%rip), %xmm1   # xmm1 = mem[0],zero
	movapd	%xmm1, %xmm5
	mulsd	%xmm5, %xmm0
	.loc	9 135 25 is_stmt 0      # exact_rhs.c:135:25
	subsd	%xmm0, %xmm7
	.loc	9 136 18 is_stmt 1      # exact_rhs.c:136:18
	movsd	-80(%rdx), %xmm15       # xmm15 = mem[0],zero
	.loc	9 136 17 is_stmt 0      # exact_rhs.c:136:17
	movapd	%xmm15, %xmm0
	mulsd	.LCPI4_4(%rip), %xmm0
	.loc	9 135 42 is_stmt 1      # exact_rhs.c:135:42
	addsd	%xmm7, %xmm0
	movsd	-40(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	9 136 32                # exact_rhs.c:136:32
	mulsd	%xmm5, %xmm1
	.loc	9 136 27 is_stmt 0      # exact_rhs.c:136:27
	subsd	%xmm1, %xmm0
	.loc	9 134 33 is_stmt 1      # exact_rhs.c:134:33
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	9 136 44                # exact_rhs.c:136:44
	addsd	(%rdx), %xmm0
	.loc	9 134 59                # exact_rhs.c:134:59
	mulsd	32(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	9 134 53 is_stmt 0      # exact_rhs.c:134:53
	subsd	%xmm0, %xmm1
	.loc	9 134 31                # exact_rhs.c:134:31
	movsd	%xmm1, (%rdi)
.Ltmp322:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 132 7 is_stmt 1 discriminator 1 # exact_rhs.c:132:7
	shufpd	$1, %xmm9, %xmm9        # xmm9 = xmm9[1,0]
.Ltmp323:
	.loc	9 135 31                # exact_rhs.c:135:31
	movapd	%xmm9, %xmm0
	.loc	9 136 18                # exact_rhs.c:136:18
	movapd	%xmm2, %xmm9
	.loc	9 135 14                # exact_rhs.c:135:14
	movapd	%xmm11, %xmm5
	.loc	9 135 31 is_stmt 0      # exact_rhs.c:135:31
	movapd	%xmm13, %xmm11
	.loc	9 136 18 is_stmt 1      # exact_rhs.c:136:18
	movapd	%xmm14, %xmm13
	.loc	9 135 14                # exact_rhs.c:135:14
	movapd	(%rsp), %xmm1           # 16-byte Reload
.Ltmp324:
	.loc	9 132 21 discriminator 1 # exact_rhs.c:132:21
	incq	%rbp
	addq	$40, %rdi
	addq	$40, %rdx
	cmpq	%rsi, %rbp
.Ltmp325:
	.loc	9 135 14                # exact_rhs.c:135:14
	movapd	%xmm6, %xmm7
	movapd	%xmm1, %xmm6
	.loc	9 136 33                # exact_rhs.c:136:33
	movapd	%xmm3, %xmm2
	movapd	%xmm4, %xmm14
.Ltmp326:
	.loc	9 132 7 discriminator 1 # exact_rhs.c:132:7
	jl	.LBB4_22
.Ltmp327:
# BB#23:                                # %for.cond616.preheader.loopexit
                                        #   in Loop: Header=BB4_14 Depth=2
	.loc	9 141 13                # exact_rhs.c:141:13
	movl	grid_points(%rip), %edx
	movsd	.LCPI4_8(%rip), %xmm0   # xmm0 = mem[0],zero
.LBB4_24:                               # %for.body619
                                        #   in Loop: Header=BB4_14 Depth=2
	movapd	%xmm0, %xmm9
	.loc	9 142 53                # exact_rhs.c:142:53
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	9 144 31                # exact_rhs.c:144:31
	movslq	%edx, %rdi
	.loc	9 144 35 is_stmt 0      # exact_rhs.c:144:35
	shlq	$3, %rdi
	.loc	9 142 31 is_stmt 1      # exact_rhs.c:142:31
	leaq	forcing(%rcx,%rax), %rax
	leaq	-120(%rdi,%rdi,4), %rsi
	movsd	(%rax,%rsi), %xmm1      # xmm1 = mem[0],zero
	.loc	9 143 12                # exact_rhs.c:143:12
	movsd	ue-200(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 143 29 is_stmt 0      # exact_rhs.c:143:29
	movsd	ue-160(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 143 28                # exact_rhs.c:143:28
	movapd	%xmm3, %xmm4
	movsd	.LCPI4_3(%rip), %xmm7   # xmm7 = mem[0],zero
	mulsd	%xmm7, %xmm4
	.loc	9 143 23                # exact_rhs.c:143:23
	subsd	%xmm4, %xmm2
	.loc	9 144 16 is_stmt 1      # exact_rhs.c:144:16
	movsd	ue-120(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 144 15 is_stmt 0      # exact_rhs.c:144:15
	movapd	%xmm4, %xmm5
	movsd	.LCPI4_4(%rip), %xmm8   # xmm8 = mem[0],zero
	mulsd	%xmm8, %xmm5
	.loc	9 143 40 is_stmt 1      # exact_rhs.c:143:40
	addsd	%xmm2, %xmm5
	.loc	9 144 31                # exact_rhs.c:144:31
	leaq	-80(%rdi,%rdi,4), %rcx
	movsd	ue-80(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 144 30 is_stmt 0      # exact_rhs.c:144:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	9 144 25                # exact_rhs.c:144:25
	subsd	%xmm6, %xmm5
	.loc	9 142 58 is_stmt 1      # exact_rhs.c:142:58
	mulsd	%xmm0, %xmm5
	.loc	9 142 51 is_stmt 0      # exact_rhs.c:142:51
	subsd	%xmm5, %xmm1
	.loc	9 142 29                # exact_rhs.c:142:29
	movsd	%xmm1, (%rax,%rsi)
	.loc	9 146 31 is_stmt 1      # exact_rhs.c:146:31
	movsd	(%rax,%rcx), %xmm1      # xmm1 = mem[0],zero
	.loc	9 147 28                # exact_rhs.c:147:28
	mulsd	%xmm7, %xmm4
	.loc	9 147 23 is_stmt 0      # exact_rhs.c:147:23
	subsd	%xmm4, %xmm3
	.loc	9 147 45                # exact_rhs.c:147:45
	mulsd	%xmm9, %xmm2
	.loc	9 147 40                # exact_rhs.c:147:40
	addsd	%xmm3, %xmm2
	.loc	9 146 58 is_stmt 1      # exact_rhs.c:146:58
	mulsd	%xmm0, %xmm2
	.loc	9 146 51 is_stmt 0      # exact_rhs.c:146:51
	subsd	%xmm2, %xmm1
	.loc	9 146 29                # exact_rhs.c:146:29
	movsd	%xmm1, (%rax,%rcx)
	.loc	9 142 31 is_stmt 1      # exact_rhs.c:142:31
	movsd	8(%rax,%rsi), %xmm1     # xmm1 = mem[0],zero
	.loc	9 143 12                # exact_rhs.c:143:12
	movsd	ue-192(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 143 29 is_stmt 0      # exact_rhs.c:143:29
	movsd	ue-152(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 143 28                # exact_rhs.c:143:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	9 143 23                # exact_rhs.c:143:23
	subsd	%xmm4, %xmm2
	.loc	9 144 16 is_stmt 1      # exact_rhs.c:144:16
	movsd	ue-112(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 144 15 is_stmt 0      # exact_rhs.c:144:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	9 143 40 is_stmt 1      # exact_rhs.c:143:40
	addsd	%xmm2, %xmm5
	.loc	9 144 31                # exact_rhs.c:144:31
	movsd	ue-72(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 144 30 is_stmt 0      # exact_rhs.c:144:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	9 144 25                # exact_rhs.c:144:25
	subsd	%xmm6, %xmm5
	.loc	9 142 58 is_stmt 1      # exact_rhs.c:142:58
	mulsd	%xmm0, %xmm5
	.loc	9 142 51 is_stmt 0      # exact_rhs.c:142:51
	subsd	%xmm5, %xmm1
	.loc	9 142 29                # exact_rhs.c:142:29
	movsd	%xmm1, 8(%rax,%rsi)
	.loc	9 146 31 is_stmt 1      # exact_rhs.c:146:31
	movsd	8(%rax,%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	9 147 28                # exact_rhs.c:147:28
	mulsd	%xmm7, %xmm4
	.loc	9 147 23 is_stmt 0      # exact_rhs.c:147:23
	subsd	%xmm4, %xmm3
	.loc	9 147 45                # exact_rhs.c:147:45
	mulsd	%xmm9, %xmm2
	.loc	9 147 40                # exact_rhs.c:147:40
	addsd	%xmm3, %xmm2
	.loc	9 146 58 is_stmt 1      # exact_rhs.c:146:58
	mulsd	%xmm0, %xmm2
	.loc	9 146 51 is_stmt 0      # exact_rhs.c:146:51
	subsd	%xmm2, %xmm1
	.loc	9 146 29                # exact_rhs.c:146:29
	movsd	%xmm1, 8(%rax,%rcx)
	.loc	9 142 31 is_stmt 1      # exact_rhs.c:142:31
	movsd	16(%rax,%rsi), %xmm1    # xmm1 = mem[0],zero
	.loc	9 143 12                # exact_rhs.c:143:12
	movsd	ue-184(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 143 29 is_stmt 0      # exact_rhs.c:143:29
	movsd	ue-144(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 143 28                # exact_rhs.c:143:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	9 143 23                # exact_rhs.c:143:23
	subsd	%xmm4, %xmm2
	.loc	9 144 16 is_stmt 1      # exact_rhs.c:144:16
	movsd	ue-104(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 144 15 is_stmt 0      # exact_rhs.c:144:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	9 143 40 is_stmt 1      # exact_rhs.c:143:40
	addsd	%xmm2, %xmm5
	.loc	9 144 31                # exact_rhs.c:144:31
	movsd	ue-64(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 144 30 is_stmt 0      # exact_rhs.c:144:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	9 144 25                # exact_rhs.c:144:25
	subsd	%xmm6, %xmm5
	.loc	9 142 58 is_stmt 1      # exact_rhs.c:142:58
	mulsd	%xmm0, %xmm5
	.loc	9 142 51 is_stmt 0      # exact_rhs.c:142:51
	subsd	%xmm5, %xmm1
	.loc	9 142 29                # exact_rhs.c:142:29
	movsd	%xmm1, 16(%rax,%rsi)
	.loc	9 146 31 is_stmt 1      # exact_rhs.c:146:31
	movsd	16(%rax,%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	9 147 28                # exact_rhs.c:147:28
	mulsd	%xmm7, %xmm4
	.loc	9 147 23 is_stmt 0      # exact_rhs.c:147:23
	subsd	%xmm4, %xmm3
	.loc	9 147 45                # exact_rhs.c:147:45
	mulsd	%xmm9, %xmm2
	.loc	9 147 40                # exact_rhs.c:147:40
	addsd	%xmm3, %xmm2
	.loc	9 146 58 is_stmt 1      # exact_rhs.c:146:58
	mulsd	%xmm0, %xmm2
	.loc	9 146 51 is_stmt 0      # exact_rhs.c:146:51
	subsd	%xmm2, %xmm1
	.loc	9 146 29                # exact_rhs.c:146:29
	movsd	%xmm1, 16(%rax,%rcx)
	.loc	9 142 31 is_stmt 1      # exact_rhs.c:142:31
	movsd	24(%rax,%rsi), %xmm1    # xmm1 = mem[0],zero
	.loc	9 143 12                # exact_rhs.c:143:12
	movsd	ue-176(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 143 29 is_stmt 0      # exact_rhs.c:143:29
	movsd	ue-136(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 143 28                # exact_rhs.c:143:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	9 143 23                # exact_rhs.c:143:23
	subsd	%xmm4, %xmm2
	.loc	9 144 16 is_stmt 1      # exact_rhs.c:144:16
	movsd	ue-96(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 144 15 is_stmt 0      # exact_rhs.c:144:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	9 143 40 is_stmt 1      # exact_rhs.c:143:40
	addsd	%xmm2, %xmm5
	.loc	9 144 31                # exact_rhs.c:144:31
	movsd	ue-56(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 144 30 is_stmt 0      # exact_rhs.c:144:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	9 144 25                # exact_rhs.c:144:25
	subsd	%xmm6, %xmm5
	.loc	9 142 58 is_stmt 1      # exact_rhs.c:142:58
	mulsd	%xmm0, %xmm5
	.loc	9 142 51 is_stmt 0      # exact_rhs.c:142:51
	subsd	%xmm5, %xmm1
	.loc	9 142 29                # exact_rhs.c:142:29
	movsd	%xmm1, 24(%rax,%rsi)
	.loc	9 146 31 is_stmt 1      # exact_rhs.c:146:31
	movsd	24(%rax,%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	9 147 28                # exact_rhs.c:147:28
	mulsd	%xmm7, %xmm4
	.loc	9 147 23 is_stmt 0      # exact_rhs.c:147:23
	subsd	%xmm4, %xmm3
	.loc	9 147 45                # exact_rhs.c:147:45
	mulsd	%xmm9, %xmm2
	.loc	9 147 40                # exact_rhs.c:147:40
	addsd	%xmm3, %xmm2
	.loc	9 146 58 is_stmt 1      # exact_rhs.c:146:58
	mulsd	%xmm0, %xmm2
	.loc	9 146 51 is_stmt 0      # exact_rhs.c:146:51
	subsd	%xmm2, %xmm1
	.loc	9 146 29                # exact_rhs.c:146:29
	movsd	%xmm1, 24(%rax,%rcx)
	.loc	9 142 31 is_stmt 1      # exact_rhs.c:142:31
	movsd	32(%rax,%rsi), %xmm1    # xmm1 = mem[0],zero
	.loc	9 143 12                # exact_rhs.c:143:12
	movsd	ue-168(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 143 29 is_stmt 0      # exact_rhs.c:143:29
	movsd	ue-128(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 143 28                # exact_rhs.c:143:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	9 143 23                # exact_rhs.c:143:23
	subsd	%xmm4, %xmm2
	.loc	9 144 16 is_stmt 1      # exact_rhs.c:144:16
	movsd	ue-88(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 144 15 is_stmt 0      # exact_rhs.c:144:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	9 143 40 is_stmt 1      # exact_rhs.c:143:40
	addsd	%xmm2, %xmm5
	.loc	9 144 31                # exact_rhs.c:144:31
	movsd	ue-48(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 144 30 is_stmt 0      # exact_rhs.c:144:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	9 144 25                # exact_rhs.c:144:25
	subsd	%xmm6, %xmm5
	.loc	9 142 58 is_stmt 1      # exact_rhs.c:142:58
	mulsd	%xmm0, %xmm5
	.loc	9 142 51 is_stmt 0      # exact_rhs.c:142:51
	subsd	%xmm5, %xmm1
	.loc	9 142 29                # exact_rhs.c:142:29
	movsd	%xmm1, 32(%rax,%rsi)
	.loc	9 146 31 is_stmt 1      # exact_rhs.c:146:31
	movsd	32(%rax,%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	9 147 28                # exact_rhs.c:147:28
	mulsd	%xmm7, %xmm4
	.loc	9 147 23 is_stmt 0      # exact_rhs.c:147:23
	subsd	%xmm4, %xmm3
	.loc	9 147 45                # exact_rhs.c:147:45
	mulsd	%xmm9, %xmm2
	.loc	9 147 40                # exact_rhs.c:147:40
	addsd	%xmm3, %xmm2
	.loc	9 146 58 is_stmt 1      # exact_rhs.c:146:58
	mulsd	%xmm0, %xmm2
	.loc	9 146 51 is_stmt 0      # exact_rhs.c:146:51
	subsd	%xmm2, %xmm1
	.loc	9 146 29                # exact_rhs.c:146:29
	movsd	%xmm1, 32(%rax,%rcx)
.Ltmp328:
	.loc	9 62 19 is_stmt 1 discriminator 1 # exact_rhs.c:62:19
	movslq	grid_points+4(%rip), %rax
	.loc	9 62 36 is_stmt 0 discriminator 1 # exact_rhs.c:62:36
	leaq	-2(%rax), %rcx
	.loc	9 62 5 discriminator 1  # exact_rhs.c:62:5
	addq	$2600, %r12             # imm = 0xA28
	addq	$2600, %r13             # imm = 0xA28
	.loc	9 62 19 discriminator 1 # exact_rhs.c:62:19
	cmpq	%rcx, %r15
	.loc	9 62 5 discriminator 1  # exact_rhs.c:62:5
	leaq	1(%r15), %r15
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	jl	.LBB4_14
.Ltmp329:
# BB#25:                                # %for.inc707.loopexit
                                        #   in Loop: Header=BB4_12 Depth=1
	.loc	9 60 20 is_stmt 1 discriminator 1 # exact_rhs.c:60:20
	movl	grid_points+8(%rip), %r12d
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	192(%rsp), %rdi         # 8-byte Reload
.LBB4_26:                               # %for.inc707
                                        #   in Loop: Header=BB4_12 Depth=1
	.loc	9 60 34 is_stmt 0 discriminator 1 # exact_rhs.c:60:34
	leal	-2(%r12), %ecx
	.loc	9 60 17 discriminator 1 # exact_rhs.c:60:17
	movslq	%ecx, %rcx
	.loc	9 60 3 discriminator 1  # exact_rhs.c:60:3
	addq	$169000, %rsi           # imm = 0x29428
	addq	$169000, %rdi           # imm = 0x29428
	movq	96(%rsp), %rdx          # 8-byte Reload
	.loc	9 60 17 discriminator 1 # exact_rhs.c:60:17
	cmpq	%rcx, %rdx
	.loc	9 60 3 discriminator 1  # exact_rhs.c:60:3
	leaq	1(%rdx), %rdx
	movq	%rdx, 96(%rsp)          # 8-byte Spill
	jl	.LBB4_12
.Ltmp330:
.LBB4_27:                               # %for.cond710.preheader
	.loc	9 155 17 is_stmt 1 discriminator 1 # exact_rhs.c:155:17
	movl	%r12d, %eax
	addl	$-2, %eax
	jle	.LBB4_44
# BB#28:                                # %for.body714.lr.ph
.Ltmp331:
	.loc	9 157 22 discriminator 1 # exact_rhs.c:157:22
	movl	grid_points(%rip), %eax
	movl	$1, %ecx
	movq	%rcx, 80(%rsp)          # 8-byte Spill
	movl	$forcing+171672, %esi
	movl	$forcing+176872, %edi
	leaq	112(%rsp), %rbx
	.p2align	4, 0x90
.LBB4_29:                               # %for.body714
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_31 Depth 2
                                        #       Child Loop BB4_33 Depth 3
                                        #       Child Loop BB4_36 Depth 3
                                        #       Child Loop BB4_39 Depth 3
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	9 157 19 is_stmt 0 discriminator 1 # exact_rhs.c:157:19
	movl	%eax, %ecx
	addl	$-2, %ecx
	jle	.LBB4_43
.Ltmp332:
# BB#30:                                # %for.body721.lr.ph
                                        #   in Loop: Header=BB4_29 Depth=1
	.loc	9 156 12 is_stmt 1      # exact_rhs.c:156:12
	movq	80(%rsp), %rax          # 8-byte Reload
	cvtsi2sdl	%eax, %xmm5
	.loc	9 156 24 is_stmt 0      # exact_rhs.c:156:24
	mulsd	dnzm1(%rip), %xmm5
.Ltmp333:
	#DEBUG_VALUE: exact_rhs:zeta <- %XMM5
	.loc	9 160 24 is_stmt 1 discriminator 1 # exact_rhs.c:160:24
	movsd	%xmm5, 16(%rsp)         # 8-byte Spill
	movl	grid_points+4(%rip), %ecx
	movq	%rdi, 256(%rsp)         # 8-byte Spill
	movq	%rdi, %r13
	movq	%rsi, %r12
	movq	%rsi, 192(%rsp)         # 8-byte Spill
	movl	$1, %r15d
.Ltmp334:
	.p2align	4, 0x90
.LBB4_31:                               # %for.body721
                                        #   Parent Loop BB4_29 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB4_33 Depth 3
                                        #       Child Loop BB4_36 Depth 3
                                        #       Child Loop BB4_39 Depth 3
	#DEBUG_VALUE: exact_rhs:j <- 0
	.loc	9 160 21 is_stmt 0 discriminator 1 # exact_rhs.c:160:21
	testl	%ecx, %ecx
	jle	.LBB4_34
.Ltmp335:
# BB#32:                                #   in Loop: Header=BB4_31 Depth=2
	.loc	9 158 12 is_stmt 1      # exact_rhs.c:158:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 158 24 is_stmt 0      # exact_rhs.c:158:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp336:
	#DEBUG_VALUE: exact_rhs:xi <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp337:
	#DEBUG_VALUE: exact_rhs:xi <- [%RSP+0]
	xorl	%ebp, %ebp
	xorl	%r14d, %r14d
.Ltmp338:
	.p2align	4, 0x90
.LBB4_33:                               # %for.body728
                                        #   Parent Loop BB4_29 Depth=1
                                        #     Parent Loop BB4_31 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 161 15 is_stmt 1      # exact_rhs.c:161:15
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%r14d, %xmm1
	.loc	9 161 27 is_stmt 0      # exact_rhs.c:161:27
	mulsd	dnym1(%rip), %xmm1
.Ltmp339:
	#DEBUG_VALUE: exact_rhs:eta <- %XMM1
	.loc	9 163 9 is_stmt 1       # exact_rhs.c:163:9
	movsd	(%rsp), %xmm0           # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movapd	%xmm5, %xmm2
	movq	%rbx, %rdi
	callq	exact_solution
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 168 19                # exact_rhs.c:168:19
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm2
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
.Ltmp340:
	.loc	9 165 20                # exact_rhs.c:165:20
	movq	144(%rsp), %rax
	movq	%rax, ue+32(%rbp)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
.Ltmp341:
	movups	%xmm1, ue+16(%rbp)
	movups	%xmm0, ue(%rbp)
.Ltmp342:
	.loc	9 168 19                # exact_rhs.c:168:19
	movapd	%xmm2, %xmm0
	divsd	112(%rsp), %xmm0
.Ltmp343:
	#DEBUG_VALUE: exact_rhs:dtpp <- %XMM0
	#DEBUG_VALUE: exact_rhs:m <- 1
	.loc	9 171 30                # exact_rhs.c:171:30
	movupd	120(%rsp), %xmm1
	.loc	9 171 28 is_stmt 0      # exact_rhs.c:171:28
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp344:
	mulpd	%xmm0, %xmm1
	.loc	9 171 21                # exact_rhs.c:171:21
	movupd	%xmm1, buf+8(%rbp)
	.loc	9 171 30                # exact_rhs.c:171:30
	movupd	136(%rsp), %xmm2
	.loc	9 171 28                # exact_rhs.c:171:28
	mulpd	%xmm0, %xmm2
	.loc	9 171 21                # exact_rhs.c:171:21
	movupd	%xmm2, buf+24(%rbp)
.Ltmp345:
	.loc	9 175 40 is_stmt 1      # exact_rhs.c:175:40
	movapd	%xmm1, %xmm0
	movsd	ue+8(%rbp), %xmm3       # xmm3 = mem[0],zero
	.loc	9 176 30                # exact_rhs.c:176:30
	mulsd	%xmm1, %xmm3
	.loc	9 174 31                # exact_rhs.c:174:31
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	movsd	ue+16(%rbp), %xmm4      # xmm4 = mem[0],zero
	.loc	9 176 51                # exact_rhs.c:176:51
	mulsd	%xmm1, %xmm4
	.loc	9 174 31                # exact_rhs.c:174:31
	mulsd	%xmm1, %xmm1
	.loc	9 174 19 is_stmt 0      # exact_rhs.c:174:19
	movsd	%xmm1, cuf(,%r14,8)
	.loc	9 175 40 is_stmt 1      # exact_rhs.c:175:40
	mulsd	%xmm0, %xmm0
	.loc	9 175 28 is_stmt 0      # exact_rhs.c:175:28
	addsd	%xmm1, %xmm0
	movsd	ue+24(%rbp), %xmm1      # xmm1 = mem[0],zero
	.loc	9 177 30 is_stmt 1      # exact_rhs.c:177:30
	mulsd	%xmm2, %xmm1
	.loc	9 175 64                # exact_rhs.c:175:64
	mulsd	%xmm2, %xmm2
	.loc	9 175 52 is_stmt 0      # exact_rhs.c:175:52
	addsd	%xmm0, %xmm2
	movsd	.LCPI4_1(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	9 175 19                # exact_rhs.c:175:19
	movsd	%xmm2, buf(%rbp)
	.loc	9 176 40 is_stmt 1      # exact_rhs.c:176:40
	addsd	%xmm3, %xmm4
	.loc	9 176 61 is_stmt 0      # exact_rhs.c:176:61
	addsd	%xmm4, %xmm1
	.loc	9 176 19                # exact_rhs.c:176:19
	mulsd	%xmm0, %xmm1
	.loc	9 176 14                # exact_rhs.c:176:14
	movsd	%xmm1, q(,%r14,8)
.Ltmp346:
	.loc	9 160 7 is_stmt 1 discriminator 1 # exact_rhs.c:160:7
	incq	%r14
	.loc	9 160 21 is_stmt 0 discriminator 1 # exact_rhs.c:160:21
	movslq	grid_points+4(%rip), %rcx
	addq	$40, %rbp
	cmpq	%rcx, %r14
	jl	.LBB4_33
.Ltmp347:
.LBB4_34:                               # %for.cond820.preheader
                                        #   in Loop: Header=BB4_31 Depth=2
	.loc	9 180 21 is_stmt 1 discriminator 1 # exact_rhs.c:180:21
	addl	$-2, %ecx
	movsd	.LCPI4_2(%rip), %xmm14  # xmm14 = mem[0],zero
	jle	.LBB4_37
# BB#35:                                # %for.body824.lr.ph
                                        #   in Loop: Header=BB4_31 Depth=2
.Ltmp348:
	.loc	9 185 11                # exact_rhs.c:185:11
	movsd	ty2(%rip), %xmm13       # xmm13 = mem[0],zero
	.loc	9 194 37                # exact_rhs.c:194:37
	movsd	c2(%rip), %xmm15        # xmm15 = mem[0],zero
	.loc	9 205 26                # exact_rhs.c:205:26
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	movsd	yycon3(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	9 207 14                # exact_rhs.c:207:14
	mulsd	.LCPI4_1(%rip), %xmm0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
	.loc	9 209 11                # exact_rhs.c:209:11
	movsd	yycon4(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	9 210 11                # exact_rhs.c:210:11
	movsd	%xmm0, 48(%rsp)         # 8-byte Spill
	movsd	yycon5(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	9 211 11                # exact_rhs.c:211:11
	movsd	%xmm0, 24(%rsp)         # 8-byte Spill
	movsd	dy5ty1(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp349:
	.loc	9 180 7 discriminator 1 # exact_rhs.c:180:7
	movsd	%xmm0, 176(%rsp)        # 8-byte Spill
	movslq	%ecx, %rax
.Ltmp350:
	.loc	9 195 41                # exact_rhs.c:195:41
	movsd	ue+32(%rip), %xmm7      # xmm7 = mem[0],zero
	.loc	9 196 35                # exact_rhs.c:196:35
	movsd	buf+56(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	9 185 14                # exact_rhs.c:185:14
	movsd	yycon2(%rip), %xmm0     # xmm0 = mem[0],zero
	movapd	%xmm13, %xmm2
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	movapd	%xmm2, 160(%rsp)        # 16-byte Spill
	.loc	9 186 17                # exact_rhs.c:186:17
	movsd	dy1ty1(%rip), %xmm2     # xmm2 = mem[0],zero
	movhpd	dy2ty1(%rip), %xmm2     # xmm2 = xmm2[0],mem[0]
	movapd	%xmm2, 240(%rsp)        # 16-byte Spill
	.loc	9 193 56                # exact_rhs.c:193:56
	movapd	%xmm13, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 224(%rsp)        # 16-byte Spill
	.loc	9 196 17                # exact_rhs.c:196:17
	movsd	yycon1(%rip), %xmm1     # xmm1 = mem[0],zero
	unpcklpd	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movapd	%xmm1, 208(%rsp)        # 16-byte Spill
	.loc	9 197 17                # exact_rhs.c:197:17
	movsd	dy3ty1(%rip), %xmm0     # xmm0 = mem[0],zero
	movhpd	dy4ty1(%rip), %xmm0     # xmm0 = xmm0[0],mem[0]
	movapd	%xmm0, 96(%rsp)         # 16-byte Spill
	.loc	9 196 35                # exact_rhs.c:196:35
	movl	$0, %ecx
	movq	%r12, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB4_36:                               # %for.body824
                                        #   Parent Loop BB4_29 Depth=1
                                        #     Parent Loop BB4_31 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 188 31                # exact_rhs.c:188:31
	movsd	-24(%rdx), %xmm3        # xmm3 = mem[0],zero
	.loc	9 186 19                # exact_rhs.c:186:19
	movupd	ue+80(%rcx), %xmm2
	.loc	9 189 23                # exact_rhs.c:189:23
	movapd	%xmm2, %xmm5
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
	.loc	9 189 24 is_stmt 0      # exact_rhs.c:189:24
	movupd	buf+96(%rcx), %xmm6
	.loc	9 189 23                # exact_rhs.c:189:23
	mulsd	%xmm6, %xmm5
	.loc	9 186 43 is_stmt 1      # exact_rhs.c:186:43
	movupd	ue(%rcx), %xmm0
	.loc	9 186 34 is_stmt 0      # exact_rhs.c:186:34
	movupd	ue+40(%rcx), %xmm1
	.loc	9 186 33                # exact_rhs.c:186:33
	addpd	%xmm1, %xmm1
	.loc	9 186 29                # exact_rhs.c:186:29
	subpd	%xmm1, %xmm2
	.loc	9 186 42                # exact_rhs.c:186:42
	addpd	%xmm0, %xmm2
	.loc	9 189 46 is_stmt 1      # exact_rhs.c:189:46
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	9 189 47 is_stmt 0      # exact_rhs.c:189:47
	movupd	buf+16(%rcx), %xmm8
	.loc	9 189 46                # exact_rhs.c:189:46
	mulsd	%xmm8, %xmm0
	.loc	9 189 35                # exact_rhs.c:189:35
	subsd	%xmm0, %xmm5
	.loc	9 188 56 is_stmt 1      # exact_rhs.c:188:56
	mulsd	%xmm13, %xmm5
	.loc	9 188 51 is_stmt 0      # exact_rhs.c:188:51
	subsd	%xmm5, %xmm3
	movsd	buf+48(%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	9 190 34 is_stmt 1      # exact_rhs.c:190:34
	mulsd	%xmm14, %xmm0
	.loc	9 190 30 is_stmt 0      # exact_rhs.c:190:30
	addsd	buf+88(%rcx), %xmm0
	.loc	9 185 17 is_stmt 1      # exact_rhs.c:185:17
	movupd	ue+96(%rcx), %xmm9
	.loc	9 185 27 is_stmt 0      # exact_rhs.c:185:27
	movapd	%xmm9, %xmm1
	movhpd	buf+8(%rcx), %xmm1      # xmm1 = xmm1[0],mem[0]
	.loc	9 185 28                # exact_rhs.c:185:28
	movupd	ue+16(%rcx), %xmm12
	.loc	9 185 27                # exact_rhs.c:185:27
	movapd	%xmm12, %xmm5
	unpcklpd	%xmm0, %xmm5    # xmm5 = xmm5[0],xmm0[0]
	movapd	%xmm1, %xmm0
	subpd	%xmm5, %xmm0
	addpd	%xmm1, %xmm5
	.loc	9 184 51 is_stmt 1      # exact_rhs.c:184:51
	movsd	-32(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	9 185 27                # exact_rhs.c:185:27
	movsd	%xmm0, %xmm5            # xmm5 = xmm0[0],xmm5[1]
	.loc	9 185 14 is_stmt 0      # exact_rhs.c:185:14
	mulpd	160(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	9 184 51 is_stmt 1      # exact_rhs.c:184:51
	unpcklpd	%xmm3, %xmm1    # xmm1 = xmm1[0],xmm3[0]
	movapd	%xmm1, %xmm0
	subpd	%xmm5, %xmm0
	addpd	%xmm5, %xmm1
	movsd	%xmm0, %xmm1            # xmm1 = xmm0[0],xmm1[1]
	.loc	9 186 17                # exact_rhs.c:186:17
	mulpd	240(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	9 185 40                # exact_rhs.c:185:40
	addpd	%xmm1, %xmm2
	.loc	9 184 29                # exact_rhs.c:184:29
	movupd	%xmm2, -32(%rdx)
	.loc	9 194 24                # exact_rhs.c:194:24
	movapd	%xmm9, %xmm0
	mulsd	%xmm6, %xmm0
	.loc	9 194 41 is_stmt 0      # exact_rhs.c:194:41
	movsd	ue+112(%rcx), %xmm5     # xmm5 = mem[0],zero
	.loc	9 194 52                # exact_rhs.c:194:52
	movsd	q+16(,%rsi,8), %xmm11   # xmm11 = mem[0],zero
	.loc	9 194 51                # exact_rhs.c:194:51
	movapd	%xmm5, %xmm3
	subsd	%xmm11, %xmm3
	.loc	9 194 39                # exact_rhs.c:194:39
	mulsd	%xmm15, %xmm3
	.loc	9 194 36                # exact_rhs.c:194:36
	addsd	%xmm0, %xmm3
	.loc	9 195 24 is_stmt 1      # exact_rhs.c:195:24
	movapd	%xmm12, %xmm0
	mulsd	%xmm8, %xmm0
	.loc	9 195 52 is_stmt 0      # exact_rhs.c:195:52
	movsd	q(,%rsi,8), %xmm10      # xmm10 = mem[0],zero
	.loc	9 195 51                # exact_rhs.c:195:51
	subsd	%xmm10, %xmm7
	.loc	9 195 39                # exact_rhs.c:195:39
	mulsd	%xmm15, %xmm7
	.loc	9 195 36                # exact_rhs.c:195:36
	addsd	%xmm0, %xmm7
	.loc	9 200 23 is_stmt 1      # exact_rhs.c:200:23
	movapd	%xmm9, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	mulsd	%xmm6, %xmm0
	.loc	9 194 60                # exact_rhs.c:194:60
	unpcklpd	%xmm0, %xmm3    # xmm3 = xmm3[0],xmm0[0]
	.loc	9 197 35                # exact_rhs.c:197:35
	movupd	ue+56(%rcx), %xmm0
	.loc	9 197 34 is_stmt 0      # exact_rhs.c:197:34
	addpd	%xmm0, %xmm0
	.loc	9 197 30                # exact_rhs.c:197:30
	subpd	%xmm0, %xmm9
	.loc	9 197 44                # exact_rhs.c:197:44
	addpd	%xmm12, %xmm9
	.loc	9 200 46 is_stmt 1      # exact_rhs.c:200:46
	shufpd	$1, %xmm12, %xmm12      # xmm12 = xmm12[1,0]
	mulsd	%xmm8, %xmm12
	.loc	9 194 60                # exact_rhs.c:194:60
	unpcklpd	%xmm12, %xmm7   # xmm7 = xmm7[0],xmm12[0]
	subpd	%xmm7, %xmm3
	.loc	9 193 31                # exact_rhs.c:193:31
	movupd	-16(%rdx), %xmm0
	.loc	9 193 56 is_stmt 0      # exact_rhs.c:193:56
	mulpd	224(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	9 193 51                # exact_rhs.c:193:51
	subpd	%xmm3, %xmm0
	.loc	9 196 34 is_stmt 1      # exact_rhs.c:196:34
	movhpd	buf+64(%rcx), %xmm4     # xmm4 = xmm4[0],mem[0]
	addpd	%xmm4, %xmm4
	.loc	9 196 30 is_stmt 0      # exact_rhs.c:196:30
	movapd	%xmm6, %xmm1
	subpd	%xmm4, %xmm1
	.loc	9 196 44                # exact_rhs.c:196:44
	addpd	%xmm8, %xmm1
	.loc	9 196 17                # exact_rhs.c:196:17
	mulpd	208(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	9 195 61 is_stmt 1      # exact_rhs.c:195:61
	addpd	%xmm0, %xmm1
	.loc	9 197 17                # exact_rhs.c:197:17
	mulpd	96(%rsp), %xmm9         # 16-byte Folded Reload
	.loc	9 196 57                # exact_rhs.c:196:57
	addpd	%xmm1, %xmm9
	.loc	9 193 29                # exact_rhs.c:193:29
	movupd	%xmm9, -16(%rdx)
	movsd	32(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	9 205 28                # exact_rhs.c:205:28
	movapd	%xmm1, %xmm0
	mulsd	%xmm5, %xmm0
	.loc	9 205 42 is_stmt 0      # exact_rhs.c:205:42
	mulsd	%xmm15, %xmm11
	.loc	9 205 39                # exact_rhs.c:205:39
	subsd	%xmm11, %xmm0
	.loc	9 206 29 is_stmt 1      # exact_rhs.c:206:29
	movsd	ue+32(%rcx), %xmm4      # xmm4 = mem[0],zero
	.loc	9 206 28 is_stmt 0      # exact_rhs.c:206:28
	mulsd	%xmm4, %xmm1
	.loc	9 206 42                # exact_rhs.c:206:42
	mulsd	%xmm15, %xmm10
	.loc	9 206 39                # exact_rhs.c:206:39
	subsd	%xmm10, %xmm1
	.loc	9 206 24                # exact_rhs.c:206:24
	mulsd	%xmm8, %xmm1
	.loc	9 204 31 is_stmt 1      # exact_rhs.c:204:31
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	9 205 24                # exact_rhs.c:205:24
	mulsd	%xmm6, %xmm0
	.loc	9 205 50 is_stmt 0      # exact_rhs.c:205:50
	subsd	%xmm1, %xmm0
	.loc	9 204 56 is_stmt 1      # exact_rhs.c:204:56
	mulsd	%xmm13, %xmm0
	.loc	9 204 51 is_stmt 0      # exact_rhs.c:204:51
	subsd	%xmm0, %xmm2
	.loc	9 207 23 is_stmt 1      # exact_rhs.c:207:23
	movsd	buf+80(%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	9 207 39 is_stmt 0      # exact_rhs.c:207:39
	movsd	buf+40(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	9 207 38                # exact_rhs.c:207:38
	addsd	%xmm1, %xmm1
	.loc	9 207 34                # exact_rhs.c:207:34
	subsd	%xmm1, %xmm0
	.loc	9 207 48                # exact_rhs.c:207:48
	addsd	buf(%rcx), %xmm0
	.loc	9 207 21                # exact_rhs.c:207:21
	mulsd	(%rsp), %xmm0           # 8-byte Folded Reload
	.loc	9 206 51 is_stmt 1      # exact_rhs.c:206:51
	addsd	%xmm2, %xmm0
	.loc	9 209 19                # exact_rhs.c:209:19
	movsd	cuf+16(,%rsi,8), %xmm1  # xmm1 = mem[0],zero
	.loc	9 209 32 is_stmt 0      # exact_rhs.c:209:32
	movsd	cuf+8(,%rsi,8), %xmm2   # xmm2 = mem[0],zero
	.loc	9 209 31                # exact_rhs.c:209:31
	addsd	%xmm2, %xmm2
	.loc	9 209 27                # exact_rhs.c:209:27
	subsd	%xmm2, %xmm1
	.loc	9 209 38                # exact_rhs.c:209:38
	addsd	cuf(,%rsi,8), %xmm1
	.loc	9 209 17                # exact_rhs.c:209:17
	mulsd	48(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	9 208 27 is_stmt 1      # exact_rhs.c:208:27
	addsd	%xmm0, %xmm1
	.loc	9 210 19                # exact_rhs.c:210:19
	movsd	buf+112(%rcx), %xmm0    # xmm0 = mem[0],zero
	.loc	9 210 35 is_stmt 0      # exact_rhs.c:210:35
	movsd	buf+72(%rcx), %xmm2     # xmm2 = mem[0],zero
	.loc	9 210 34                # exact_rhs.c:210:34
	addsd	%xmm2, %xmm2
	.loc	9 210 30                # exact_rhs.c:210:30
	subsd	%xmm2, %xmm0
	.loc	9 210 44                # exact_rhs.c:210:44
	addsd	buf+32(%rcx), %xmm0
	.loc	9 210 17                # exact_rhs.c:210:17
	mulsd	24(%rsp), %xmm0         # 8-byte Folded Reload
	.loc	9 209 48 is_stmt 1      # exact_rhs.c:209:48
	addsd	%xmm1, %xmm0
	.loc	9 211 34                # exact_rhs.c:211:34
	movsd	ue+72(%rcx), %xmm7      # xmm7 = mem[0],zero
	.loc	9 211 33 is_stmt 0      # exact_rhs.c:211:33
	movapd	%xmm7, %xmm1
	addsd	%xmm1, %xmm1
	.loc	9 211 29                # exact_rhs.c:211:29
	subsd	%xmm1, %xmm5
	.loc	9 211 42                # exact_rhs.c:211:42
	addsd	%xmm4, %xmm5
	.loc	9 211 17                # exact_rhs.c:211:17
	mulsd	176(%rsp), %xmm5        # 8-byte Folded Reload
	.loc	9 210 57 is_stmt 1      # exact_rhs.c:210:57
	addsd	%xmm0, %xmm5
	.loc	9 204 29                # exact_rhs.c:204:29
	movsd	%xmm5, (%rdx)
.Ltmp351:
	.loc	9 180 21 discriminator 1 # exact_rhs.c:180:21
	incq	%rsi
	addq	$2600, %rdx             # imm = 0xA28
	addq	$40, %rcx
	cmpq	%rax, %rsi
.Ltmp352:
	.loc	9 196 35                # exact_rhs.c:196:35
	movapd	%xmm6, %xmm4
	jl	.LBB4_36
.Ltmp353:
.LBB4_37:                               # %for.cond1155.preheader
                                        #   in Loop: Header=BB4_31 Depth=2
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	9 219 53                # exact_rhs.c:219:53
	movsd	dssp(%rip), %xmm9       # xmm9 = mem[0],zero
	.loc	9 219 31 is_stmt 0      # exact_rhs.c:219:31
	leaq	(%r15,%r15,4), %rcx
	imulq	$169000, 80(%rsp), %rax # 8-byte Folded Reload
                                        # imm = 0x29428
.Ltmp354:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	9 220 16 is_stmt 1      # exact_rhs.c:220:16
	movupd	ue+40(%rip), %xmm13
	.loc	9 220 31 is_stmt 0      # exact_rhs.c:220:31
	movapd	ue+80(%rip), %xmm1
	.loc	9 220 43                # exact_rhs.c:220:43
	movapd	%xmm1, (%rsp)           # 16-byte Spill
	movupd	ue+120(%rip), %xmm15
.Ltmp355:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	9 219 31 is_stmt 1      # exact_rhs.c:219:31
	movupd	forcing+2600(%rax,%rcx,8), %xmm11
	.loc	9 220 15                # exact_rhs.c:220:15
	movapd	%xmm13, %xmm4
	movapd	.LCPI4_5(%rip), %xmm6   # xmm6 = [5.000000e+00,5.000000e+00]
	mulpd	%xmm6, %xmm4
	.loc	9 220 30 is_stmt 0      # exact_rhs.c:220:30
	movapd	.LCPI4_6(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	mulpd	%xmm10, %xmm1
	.loc	9 220 25                # exact_rhs.c:220:25
	subpd	%xmm1, %xmm4
	.loc	9 220 42                # exact_rhs.c:220:42
	addpd	%xmm15, %xmm4
	.loc	9 220 16                # exact_rhs.c:220:16
	movsd	ue+72(%rip), %xmm3      # xmm3 = mem[0],zero
	.loc	9 220 15                # exact_rhs.c:220:15
	movapd	%xmm3, %xmm12
	movsd	.LCPI4_8(%rip), %xmm0   # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm12
	.loc	9 220 31                # exact_rhs.c:220:31
	movsd	ue+112(%rip), %xmm7     # xmm7 = mem[0],zero
	.loc	9 220 30                # exact_rhs.c:220:30
	movapd	%xmm7, %xmm1
	movsd	.LCPI4_3(%rip), %xmm8   # xmm8 = mem[0],zero
	mulsd	%xmm8, %xmm1
	.loc	9 220 25                # exact_rhs.c:220:25
	subsd	%xmm1, %xmm12
	.loc	9 220 43                # exact_rhs.c:220:43
	movsd	ue+152(%rip), %xmm5     # xmm5 = mem[0],zero
	.loc	9 220 42                # exact_rhs.c:220:42
	addsd	%xmm5, %xmm12
	.loc	9 219 58 is_stmt 1      # exact_rhs.c:219:58
	mulsd	%xmm9, %xmm12
	.loc	9 223 16                # exact_rhs.c:223:16
	movapd	%xmm3, %xmm2
	mulsd	%xmm8, %xmm2
	.loc	9 223 33 is_stmt 0      # exact_rhs.c:223:33
	movapd	%xmm7, %xmm0
	movsd	.LCPI4_4(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	.loc	9 223 16                # exact_rhs.c:223:16
	subsd	%xmm2, %xmm0
	.loc	9 224 15 is_stmt 1      # exact_rhs.c:224:15
	mulsd	%xmm8, %xmm5
	.loc	9 223 43                # exact_rhs.c:223:43
	subsd	%xmm5, %xmm0
	.loc	9 224 27                # exact_rhs.c:224:27
	addsd	ue+192(%rip), %xmm0
	.loc	9 222 58                # exact_rhs.c:222:58
	mulsd	%xmm9, %xmm0
	.loc	9 219 58                # exact_rhs.c:219:58
	movlhps	%xmm9, %xmm9            # xmm9 = xmm9[0,0]
	mulpd	%xmm9, %xmm4
	.loc	9 219 51 is_stmt 0      # exact_rhs.c:219:51
	subpd	%xmm4, %xmm11
	.loc	9 219 29                # exact_rhs.c:219:29
	movupd	%xmm11, forcing+2600(%rax,%rcx,8)
.Ltmp356:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	9 222 31 is_stmt 1      # exact_rhs.c:222:31
	movupd	forcing+5200(%rax,%rcx,8), %xmm4
	.loc	9 223 16                # exact_rhs.c:223:16
	movapd	%xmm13, %xmm2
	mulpd	%xmm10, %xmm2
	.loc	9 223 33 is_stmt 0      # exact_rhs.c:223:33
	movapd	(%rsp), %xmm5           # 16-byte Reload
	movapd	.LCPI4_7(%rip), %xmm1   # xmm1 = [6.000000e+00,6.000000e+00]
	mulpd	%xmm1, %xmm5
	.loc	9 223 16                # exact_rhs.c:223:16
	subpd	%xmm2, %xmm5
	.loc	9 224 15 is_stmt 1      # exact_rhs.c:224:15
	movapd	%xmm15, %xmm2
	mulpd	%xmm10, %xmm2
	.loc	9 223 43                # exact_rhs.c:223:43
	subpd	%xmm2, %xmm5
	.loc	9 224 35                # exact_rhs.c:224:35
	movapd	ue+160(%rip), %xmm2
	.loc	9 224 27 is_stmt 0      # exact_rhs.c:224:27
	addpd	%xmm2, %xmm5
	.loc	9 222 58 is_stmt 1      # exact_rhs.c:222:58
	mulpd	%xmm9, %xmm5
	.loc	9 222 51 is_stmt 0      # exact_rhs.c:222:51
	subpd	%xmm5, %xmm4
	.loc	9 222 29                # exact_rhs.c:222:29
	movupd	%xmm4, forcing+5200(%rax,%rcx,8)
.Ltmp357:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	9 220 16 is_stmt 1      # exact_rhs.c:220:16
	movupd	ue+56(%rip), %xmm4
	.loc	9 220 31 is_stmt 0      # exact_rhs.c:220:31
	movapd	ue+96(%rip), %xmm11
	.loc	9 220 43                # exact_rhs.c:220:43
	movupd	ue+136(%rip), %xmm14
.Ltmp358:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	9 220 15                # exact_rhs.c:220:15
	movapd	%xmm4, %xmm5
	mulpd	%xmm6, %xmm5
	.loc	9 220 30                # exact_rhs.c:220:30
	movapd	%xmm11, %xmm6
	mulpd	%xmm10, %xmm6
	.loc	9 220 25                # exact_rhs.c:220:25
	subpd	%xmm6, %xmm5
	.loc	9 219 31 is_stmt 1      # exact_rhs.c:219:31
	movupd	forcing+2616(%rax,%rcx,8), %xmm6
	.loc	9 220 42                # exact_rhs.c:220:42
	addpd	%xmm14, %xmm5
	.loc	9 219 58                # exact_rhs.c:219:58
	mulpd	%xmm9, %xmm5
	.loc	9 219 51 is_stmt 0      # exact_rhs.c:219:51
	subpd	%xmm5, %xmm6
	.loc	9 219 29                # exact_rhs.c:219:29
	movupd	%xmm6, forcing+2616(%rax,%rcx,8)
	.loc	9 223 16 is_stmt 1      # exact_rhs.c:223:16
	movapd	%xmm4, %xmm5
	mulpd	%xmm10, %xmm5
	.loc	9 223 33 is_stmt 0      # exact_rhs.c:223:33
	movapd	%xmm11, %xmm6
	mulpd	%xmm1, %xmm6
	.loc	9 223 16                # exact_rhs.c:223:16
	subpd	%xmm5, %xmm6
	.loc	9 224 15 is_stmt 1      # exact_rhs.c:224:15
	movapd	%xmm14, %xmm5
	mulpd	%xmm10, %xmm5
	.loc	9 223 43                # exact_rhs.c:223:43
	subpd	%xmm5, %xmm6
	.loc	9 224 35                # exact_rhs.c:224:35
	movapd	ue+176(%rip), %xmm5
.Ltmp359:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	9 224 27 is_stmt 0      # exact_rhs.c:224:27
	addpd	%xmm5, %xmm6
	.loc	9 222 58 is_stmt 1      # exact_rhs.c:222:58
	mulpd	%xmm9, %xmm6
	movsd	.LCPI4_8(%rip), %xmm9   # xmm9 = mem[0],zero
	.loc	9 222 31 is_stmt 0      # exact_rhs.c:222:31
	movupd	forcing+5216(%rax,%rcx,8), %xmm1
	.loc	9 222 51                # exact_rhs.c:222:51
	subpd	%xmm6, %xmm1
	.loc	9 222 29                # exact_rhs.c:222:29
	movupd	%xmm1, forcing+5216(%rax,%rcx,8)
	.loc	9 219 31 is_stmt 1      # exact_rhs.c:219:31
	movsd	forcing+2632(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	9 219 51 is_stmt 0      # exact_rhs.c:219:51
	subsd	%xmm12, %xmm1
	.loc	9 219 29                # exact_rhs.c:219:29
	movsd	%xmm1, forcing+2632(%rax,%rcx,8)
.Ltmp360:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	9 222 31 is_stmt 1      # exact_rhs.c:222:31
	movsd	forcing+5232(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	9 222 51 is_stmt 0      # exact_rhs.c:222:51
	subsd	%xmm0, %xmm1
	.loc	9 222 29                # exact_rhs.c:222:29
	movsd	%xmm1, forcing+5232(%rax,%rcx,8)
.Ltmp361:
	.loc	9 227 7 is_stmt 1 discriminator 1 # exact_rhs.c:227:7
	movslq	grid_points+4(%rip), %rcx
	.loc	9 227 38 is_stmt 0 discriminator 1 # exact_rhs.c:227:38
	movq	%rcx, %rdx
	addq	$-4, %rdx
.Ltmp362:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 227 21 discriminator 1 # exact_rhs.c:227:21
	cmpl	$3, %edx
	jl	.LBB4_41
# BB#38:                                # %for.cond1246.preheader.lr.ph
                                        #   in Loop: Header=BB4_31 Depth=2
.Ltmp363:
	.loc	9 229 55 is_stmt 1      # exact_rhs.c:229:55
	movsd	dssp(%rip), %xmm12      # xmm12 = mem[0],zero
	.loc	9 231 33                # exact_rhs.c:231:33
	movapd	%xmm12, 32(%rsp)        # 16-byte Spill
	movlpd	ue+160(%rip), %xmm2     # xmm2 = mem[0],xmm2[1]
	.loc	9 231 18 is_stmt 0      # exact_rhs.c:231:18
	movlpd	ue+120(%rip), %xmm15    # xmm15 = mem[0],xmm15[1]
.Ltmp364:
	.loc	9 227 7 is_stmt 1 discriminator 1 # exact_rhs.c:227:7
	shufpd	$1, %xmm13, %xmm13      # xmm13 = xmm13[1,0]
	movapd	(%rsp), %xmm0           # 16-byte Reload
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
.Ltmp365:
	.loc	9 229 59                # exact_rhs.c:229:59
	movlhps	%xmm12, %xmm12          # xmm12 = xmm12[0,0]
	.loc	9 230 31                # exact_rhs.c:230:31
	movl	$ue+232, %ecx
	movq	%r13, %rsi
	movl	$2, %edi
.Ltmp366:
	.loc	9 220 30                # exact_rhs.c:220:30
	movapd	.LCPI4_6(%rip), %xmm9   # xmm9 = [4.000000e+00,4.000000e+00]
	.loc	9 223 33                # exact_rhs.c:223:33
	movapd	.LCPI4_7(%rip), %xmm10  # xmm10 = [6.000000e+00,6.000000e+00]
.Ltmp367:
	.p2align	4, 0x90
.LBB4_39:                               # %for.cond1246.preheader
                                        #   Parent Loop BB4_29 Depth=1
                                        #     Parent Loop BB4_31 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 230 25                # exact_rhs.c:230:25
	movsd	-192(%rcx), %xmm1       # xmm1 = mem[0],zero
	unpcklpd	%xmm13, %xmm1   # xmm1 = xmm1[0],xmm13[0]
	.loc	9 230 31 is_stmt 0      # exact_rhs.c:230:31
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	movapd	%xmm7, %xmm13
	.loc	9 229 33 is_stmt 1      # exact_rhs.c:229:33
	movupd	-32(%rsi), %xmm7
	.loc	9 230 30                # exact_rhs.c:230:30
	movsd	-152(%rcx), %xmm6       # xmm6 = mem[0],zero
	unpcklpd	%xmm0, %xmm6    # xmm6 = xmm6[0],xmm0[0]
	mulpd	%xmm9, %xmm6
	.loc	9 230 25 is_stmt 0      # exact_rhs.c:230:25
	subpd	%xmm6, %xmm1
	.loc	9 231 17 is_stmt 1      # exact_rhs.c:231:17
	movapd	%xmm15, %xmm0
	mulpd	%xmm10, %xmm0
	.loc	9 230 42                # exact_rhs.c:230:42
	addpd	%xmm1, %xmm0
	.loc	9 231 32                # exact_rhs.c:231:32
	movapd	%xmm2, %xmm1
	mulpd	%xmm9, %xmm1
	.loc	9 231 27 is_stmt 0      # exact_rhs.c:231:27
	subpd	%xmm1, %xmm0
	.loc	9 231 46                # exact_rhs.c:231:46
	movupd	-32(%rcx), %xmm6
	.loc	9 231 44                # exact_rhs.c:231:44
	addpd	%xmm6, %xmm0
	.loc	9 229 59 is_stmt 1      # exact_rhs.c:229:59
	mulpd	%xmm12, %xmm0
	.loc	9 229 53 is_stmt 0      # exact_rhs.c:229:53
	subpd	%xmm0, %xmm7
	.loc	9 229 31                # exact_rhs.c:229:31
	movupd	%xmm7, -32(%rsi)
	.loc	9 229 33                # exact_rhs.c:229:33
	movupd	-16(%rsi), %xmm0
	.loc	9 230 30 is_stmt 1      # exact_rhs.c:230:30
	movapd	%xmm11, %xmm1
	mulpd	%xmm9, %xmm1
	.loc	9 230 25 is_stmt 0      # exact_rhs.c:230:25
	subpd	%xmm1, %xmm4
	.loc	9 231 17 is_stmt 1      # exact_rhs.c:231:17
	movapd	%xmm14, %xmm7
	mulpd	%xmm10, %xmm7
	.loc	9 230 42                # exact_rhs.c:230:42
	addpd	%xmm4, %xmm7
	.loc	9 231 32                # exact_rhs.c:231:32
	movapd	%xmm5, %xmm1
	mulpd	%xmm9, %xmm1
	.loc	9 231 27 is_stmt 0      # exact_rhs.c:231:27
	subpd	%xmm1, %xmm7
	.loc	9 231 46                # exact_rhs.c:231:46
	movupd	-16(%rcx), %xmm1
	.loc	9 231 44                # exact_rhs.c:231:44
	addpd	%xmm1, %xmm7
	.loc	9 229 59 is_stmt 1      # exact_rhs.c:229:59
	mulpd	%xmm12, %xmm7
	.loc	9 229 53 is_stmt 0      # exact_rhs.c:229:53
	subpd	%xmm7, %xmm0
	.loc	9 229 31                # exact_rhs.c:229:31
	movupd	%xmm0, -16(%rsi)
	.loc	9 230 30 is_stmt 1      # exact_rhs.c:230:30
	movapd	%xmm13, %xmm0
	mulsd	%xmm8, %xmm0
	.loc	9 230 25 is_stmt 0      # exact_rhs.c:230:25
	subsd	%xmm0, %xmm3
	.loc	9 231 18 is_stmt 1      # exact_rhs.c:231:18
	movsd	-80(%rcx), %xmm7        # xmm7 = mem[0],zero
	.loc	9 231 17 is_stmt 0      # exact_rhs.c:231:17
	movapd	%xmm7, %xmm0
	mulsd	.LCPI4_4(%rip), %xmm0
	.loc	9 230 42 is_stmt 1      # exact_rhs.c:230:42
	addsd	%xmm3, %xmm0
	movsd	-40(%rcx), %xmm3        # xmm3 = mem[0],zero
	.loc	9 231 32                # exact_rhs.c:231:32
	mulsd	%xmm8, %xmm3
	.loc	9 231 27 is_stmt 0      # exact_rhs.c:231:27
	subsd	%xmm3, %xmm0
	.loc	9 229 33 is_stmt 1      # exact_rhs.c:229:33
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	9 231 44                # exact_rhs.c:231:44
	addsd	(%rcx), %xmm0
	.loc	9 229 59                # exact_rhs.c:229:59
	mulsd	32(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	9 229 53 is_stmt 0      # exact_rhs.c:229:53
	subsd	%xmm0, %xmm3
	.loc	9 229 31                # exact_rhs.c:229:31
	movsd	%xmm3, (%rsi)
.Ltmp368:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 227 7 is_stmt 1 discriminator 1 # exact_rhs.c:227:7
	shufpd	$1, %xmm15, %xmm15      # xmm15 = xmm15[1,0]
.Ltmp369:
	.loc	9 230 31                # exact_rhs.c:230:31
	movapd	%xmm15, %xmm0
	.loc	9 231 18                # exact_rhs.c:231:18
	movapd	%xmm2, %xmm15
	.loc	9 230 14                # exact_rhs.c:230:14
	movapd	%xmm11, %xmm4
	.loc	9 230 31 is_stmt 0      # exact_rhs.c:230:31
	movapd	%xmm14, %xmm11
	.loc	9 231 18 is_stmt 1      # exact_rhs.c:231:18
	movapd	%xmm5, %xmm14
	.loc	9 230 14                # exact_rhs.c:230:14
	movapd	(%rsp), %xmm2           # 16-byte Reload
.Ltmp370:
	.loc	9 227 21 discriminator 1 # exact_rhs.c:227:21
	incq	%rdi
	addq	$2600, %rsi             # imm = 0xA28
	addq	$40, %rcx
	cmpq	%rdx, %rdi
.Ltmp371:
	.loc	9 230 14                # exact_rhs.c:230:14
	movapd	%xmm13, %xmm3
	movapd	%xmm2, %xmm13
	.loc	9 231 33                # exact_rhs.c:231:33
	movapd	%xmm6, %xmm2
	movapd	%xmm1, %xmm5
.Ltmp372:
	.loc	9 227 7 discriminator 1 # exact_rhs.c:227:7
	jl	.LBB4_39
.Ltmp373:
# BB#40:                                # %for.cond1305.preheader.loopexit
                                        #   in Loop: Header=BB4_31 Depth=2
	.loc	9 236 13                # exact_rhs.c:236:13
	movl	grid_points+4(%rip), %ecx
	movsd	.LCPI4_8(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm9
.LBB4_41:                               # %for.body1308
                                        #   in Loop: Header=BB4_31 Depth=2
	.loc	9 239 31                # exact_rhs.c:239:31
	movslq	%ecx, %rdi
	.loc	9 236 27                # exact_rhs.c:236:27
	imulq	$2600, %rdi, %rdx       # imm = 0xA28
	.loc	9 237 53                # exact_rhs.c:237:53
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	9 238 33                # exact_rhs.c:238:33
	leaq	(,%rdi,8), %rsi
	.loc	9 237 31                # exact_rhs.c:237:31
	leaq	forcing(%rdx,%rax), %rax
	leaq	(,%r15,8), %rdx
	leaq	(%rdx,%rdx,4), %rdx
	movsd	-7800(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 238 12                # exact_rhs.c:238:12
	movsd	ue-200(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 238 29 is_stmt 0      # exact_rhs.c:238:29
	movsd	ue-160(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 238 28                # exact_rhs.c:238:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 238 23                # exact_rhs.c:238:23
	subsd	%xmm4, %xmm2
	.loc	9 239 16 is_stmt 1      # exact_rhs.c:239:16
	movsd	ue-120(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 239 15 is_stmt 0      # exact_rhs.c:239:15
	movapd	%xmm4, %xmm5
	movsd	.LCPI4_4(%rip), %xmm7   # xmm7 = mem[0],zero
	mulsd	%xmm7, %xmm5
	.loc	9 238 40 is_stmt 1      # exact_rhs.c:238:40
	addsd	%xmm2, %xmm5
	.loc	9 239 31                # exact_rhs.c:239:31
	leaq	-16(,%rdi,8), %rdi
	movsd	ue(%rdi,%rdi,4), %xmm2  # xmm2 = mem[0],zero
	.loc	9 239 30 is_stmt 0      # exact_rhs.c:239:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 239 25                # exact_rhs.c:239:25
	subsd	%xmm6, %xmm5
	.loc	9 237 58 is_stmt 1      # exact_rhs.c:237:58
	mulsd	%xmm0, %xmm5
	.loc	9 237 51 is_stmt 0      # exact_rhs.c:237:51
	subsd	%xmm5, %xmm1
	.loc	9 237 29                # exact_rhs.c:237:29
	movsd	%xmm1, -7800(%rax,%rdx)
	.loc	9 241 31 is_stmt 1      # exact_rhs.c:241:31
	movsd	-5200(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 242 28                # exact_rhs.c:242:28
	mulsd	%xmm8, %xmm4
	.loc	9 242 23 is_stmt 0      # exact_rhs.c:242:23
	subsd	%xmm4, %xmm3
	.loc	9 242 45                # exact_rhs.c:242:45
	mulsd	%xmm9, %xmm2
	.loc	9 242 40                # exact_rhs.c:242:40
	addsd	%xmm3, %xmm2
	.loc	9 241 58 is_stmt 1      # exact_rhs.c:241:58
	mulsd	%xmm0, %xmm2
	.loc	9 241 51 is_stmt 0      # exact_rhs.c:241:51
	subsd	%xmm2, %xmm1
	.loc	9 241 29                # exact_rhs.c:241:29
	movsd	%xmm1, -5200(%rax,%rdx)
	.loc	9 237 31 is_stmt 1      # exact_rhs.c:237:31
	movsd	-7792(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 238 12                # exact_rhs.c:238:12
	movsd	ue-192(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 238 29 is_stmt 0      # exact_rhs.c:238:29
	movsd	ue-152(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 238 28                # exact_rhs.c:238:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 238 23                # exact_rhs.c:238:23
	subsd	%xmm4, %xmm2
	.loc	9 239 16 is_stmt 1      # exact_rhs.c:239:16
	movsd	ue-112(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 239 15 is_stmt 0      # exact_rhs.c:239:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 238 40 is_stmt 1      # exact_rhs.c:238:40
	addsd	%xmm2, %xmm5
	.loc	9 239 31                # exact_rhs.c:239:31
	movsd	ue+8(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 239 30 is_stmt 0      # exact_rhs.c:239:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 239 25                # exact_rhs.c:239:25
	subsd	%xmm6, %xmm5
	.loc	9 237 58 is_stmt 1      # exact_rhs.c:237:58
	mulsd	%xmm0, %xmm5
	.loc	9 237 51 is_stmt 0      # exact_rhs.c:237:51
	subsd	%xmm5, %xmm1
	.loc	9 237 29                # exact_rhs.c:237:29
	movsd	%xmm1, -7792(%rax,%rdx)
	.loc	9 241 31 is_stmt 1      # exact_rhs.c:241:31
	movsd	-5192(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 242 28                # exact_rhs.c:242:28
	mulsd	%xmm8, %xmm4
	.loc	9 242 23 is_stmt 0      # exact_rhs.c:242:23
	subsd	%xmm4, %xmm3
	.loc	9 242 45                # exact_rhs.c:242:45
	mulsd	%xmm9, %xmm2
	.loc	9 242 40                # exact_rhs.c:242:40
	addsd	%xmm3, %xmm2
	.loc	9 241 58 is_stmt 1      # exact_rhs.c:241:58
	mulsd	%xmm0, %xmm2
	.loc	9 241 51 is_stmt 0      # exact_rhs.c:241:51
	subsd	%xmm2, %xmm1
	.loc	9 241 29                # exact_rhs.c:241:29
	movsd	%xmm1, -5192(%rax,%rdx)
	.loc	9 237 31 is_stmt 1      # exact_rhs.c:237:31
	movsd	-7784(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 238 12                # exact_rhs.c:238:12
	movsd	ue-184(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 238 29 is_stmt 0      # exact_rhs.c:238:29
	movsd	ue-144(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 238 28                # exact_rhs.c:238:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 238 23                # exact_rhs.c:238:23
	subsd	%xmm4, %xmm2
	.loc	9 239 16 is_stmt 1      # exact_rhs.c:239:16
	movsd	ue-104(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 239 15 is_stmt 0      # exact_rhs.c:239:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 238 40 is_stmt 1      # exact_rhs.c:238:40
	addsd	%xmm2, %xmm5
	.loc	9 239 31                # exact_rhs.c:239:31
	movsd	ue+16(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 239 30 is_stmt 0      # exact_rhs.c:239:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 239 25                # exact_rhs.c:239:25
	subsd	%xmm6, %xmm5
	.loc	9 237 58 is_stmt 1      # exact_rhs.c:237:58
	mulsd	%xmm0, %xmm5
	.loc	9 237 51 is_stmt 0      # exact_rhs.c:237:51
	subsd	%xmm5, %xmm1
	.loc	9 237 29                # exact_rhs.c:237:29
	movsd	%xmm1, -7784(%rax,%rdx)
	.loc	9 241 31 is_stmt 1      # exact_rhs.c:241:31
	movsd	-5184(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 242 28                # exact_rhs.c:242:28
	mulsd	%xmm8, %xmm4
	.loc	9 242 23 is_stmt 0      # exact_rhs.c:242:23
	subsd	%xmm4, %xmm3
	.loc	9 242 45                # exact_rhs.c:242:45
	mulsd	%xmm9, %xmm2
	.loc	9 242 40                # exact_rhs.c:242:40
	addsd	%xmm3, %xmm2
	.loc	9 241 58 is_stmt 1      # exact_rhs.c:241:58
	mulsd	%xmm0, %xmm2
	.loc	9 241 51 is_stmt 0      # exact_rhs.c:241:51
	subsd	%xmm2, %xmm1
	.loc	9 241 29                # exact_rhs.c:241:29
	movsd	%xmm1, -5184(%rax,%rdx)
	.loc	9 237 31 is_stmt 1      # exact_rhs.c:237:31
	movsd	-7776(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 238 12                # exact_rhs.c:238:12
	movsd	ue-176(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 238 29 is_stmt 0      # exact_rhs.c:238:29
	movsd	ue-136(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 238 28                # exact_rhs.c:238:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 238 23                # exact_rhs.c:238:23
	subsd	%xmm4, %xmm2
	.loc	9 239 16 is_stmt 1      # exact_rhs.c:239:16
	movsd	ue-96(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 239 15 is_stmt 0      # exact_rhs.c:239:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 238 40 is_stmt 1      # exact_rhs.c:238:40
	addsd	%xmm2, %xmm5
	.loc	9 239 31                # exact_rhs.c:239:31
	movsd	ue+24(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 239 30 is_stmt 0      # exact_rhs.c:239:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 239 25                # exact_rhs.c:239:25
	subsd	%xmm6, %xmm5
	.loc	9 237 58 is_stmt 1      # exact_rhs.c:237:58
	mulsd	%xmm0, %xmm5
	.loc	9 237 51 is_stmt 0      # exact_rhs.c:237:51
	subsd	%xmm5, %xmm1
	.loc	9 237 29                # exact_rhs.c:237:29
	movsd	%xmm1, -7776(%rax,%rdx)
	.loc	9 241 31 is_stmt 1      # exact_rhs.c:241:31
	movsd	-5176(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 242 28                # exact_rhs.c:242:28
	mulsd	%xmm8, %xmm4
	.loc	9 242 23 is_stmt 0      # exact_rhs.c:242:23
	subsd	%xmm4, %xmm3
	.loc	9 242 45                # exact_rhs.c:242:45
	mulsd	%xmm9, %xmm2
	.loc	9 242 40                # exact_rhs.c:242:40
	addsd	%xmm3, %xmm2
	.loc	9 241 58 is_stmt 1      # exact_rhs.c:241:58
	mulsd	%xmm0, %xmm2
	.loc	9 241 51 is_stmt 0      # exact_rhs.c:241:51
	subsd	%xmm2, %xmm1
	.loc	9 241 29                # exact_rhs.c:241:29
	movsd	%xmm1, -5176(%rax,%rdx)
	.loc	9 237 31 is_stmt 1      # exact_rhs.c:237:31
	movsd	-7768(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 238 12                # exact_rhs.c:238:12
	movsd	ue-168(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 238 29 is_stmt 0      # exact_rhs.c:238:29
	movsd	ue-128(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 238 28                # exact_rhs.c:238:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 238 23                # exact_rhs.c:238:23
	subsd	%xmm4, %xmm2
	.loc	9 239 16 is_stmt 1      # exact_rhs.c:239:16
	movsd	ue-88(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 239 15 is_stmt 0      # exact_rhs.c:239:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 238 40 is_stmt 1      # exact_rhs.c:238:40
	addsd	%xmm2, %xmm5
	.loc	9 239 31                # exact_rhs.c:239:31
	movsd	ue+32(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 239 30 is_stmt 0      # exact_rhs.c:239:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 239 25                # exact_rhs.c:239:25
	subsd	%xmm6, %xmm5
	.loc	9 237 58 is_stmt 1      # exact_rhs.c:237:58
	mulsd	%xmm0, %xmm5
	.loc	9 237 51 is_stmt 0      # exact_rhs.c:237:51
	subsd	%xmm5, %xmm1
	.loc	9 237 29                # exact_rhs.c:237:29
	movsd	%xmm1, -7768(%rax,%rdx)
	.loc	9 241 31 is_stmt 1      # exact_rhs.c:241:31
	movsd	-5168(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	9 242 28                # exact_rhs.c:242:28
	mulsd	%xmm8, %xmm4
	.loc	9 242 23 is_stmt 0      # exact_rhs.c:242:23
	subsd	%xmm4, %xmm3
	.loc	9 242 45                # exact_rhs.c:242:45
	mulsd	%xmm9, %xmm2
	.loc	9 242 40                # exact_rhs.c:242:40
	addsd	%xmm3, %xmm2
	.loc	9 241 58 is_stmt 1      # exact_rhs.c:241:58
	mulsd	%xmm0, %xmm2
	.loc	9 241 51 is_stmt 0      # exact_rhs.c:241:51
	subsd	%xmm2, %xmm1
	.loc	9 241 29                # exact_rhs.c:241:29
	movsd	%xmm1, -5168(%rax,%rdx)
.Ltmp374:
	.loc	9 157 19 is_stmt 1 discriminator 1 # exact_rhs.c:157:19
	movslq	grid_points(%rip), %rax
	.loc	9 157 36 is_stmt 0 discriminator 1 # exact_rhs.c:157:36
	leaq	-2(%rax), %rdx
	.loc	9 157 5 discriminator 1 # exact_rhs.c:157:5
	addq	$40, %r12
	addq	$40, %r13
	.loc	9 157 19 discriminator 1 # exact_rhs.c:157:19
	cmpq	%rdx, %r15
	.loc	9 157 5 discriminator 1 # exact_rhs.c:157:5
	leaq	1(%r15), %r15
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	jl	.LBB4_31
.Ltmp375:
# BB#42:                                # %for.inc1396.loopexit
                                        #   in Loop: Header=BB4_29 Depth=1
	.loc	9 155 20 is_stmt 1 discriminator 1 # exact_rhs.c:155:20
	movl	grid_points+8(%rip), %r12d
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdi         # 8-byte Reload
.LBB4_43:                               # %for.inc1396
                                        #   in Loop: Header=BB4_29 Depth=1
	.loc	9 155 34 is_stmt 0 discriminator 1 # exact_rhs.c:155:34
	leal	-2(%r12), %ecx
	.loc	9 155 17 discriminator 1 # exact_rhs.c:155:17
	movslq	%ecx, %rcx
	.loc	9 155 3 discriminator 1 # exact_rhs.c:155:3
	addq	$169000, %rsi           # imm = 0x29428
	addq	$169000, %rdi           # imm = 0x29428
	movq	80(%rsp), %rdx          # 8-byte Reload
	.loc	9 155 17 discriminator 1 # exact_rhs.c:155:17
	cmpq	%rcx, %rdx
	.loc	9 155 3 discriminator 1 # exact_rhs.c:155:3
	leaq	1(%rdx), %rdx
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	jl	.LBB4_29
.Ltmp376:
.LBB4_44:                               # %for.cond1399.preheader
	.loc	9 250 20 is_stmt 1 discriminator 1 # exact_rhs.c:250:20
	movl	grid_points+4(%rip), %ebp
	.loc	9 250 17 is_stmt 0 discriminator 1 # exact_rhs.c:250:17
	movl	%ebp, %eax
	addl	$-2, %eax
	jle	.LBB4_61
# BB#45:                                # %for.body1403.lr.ph
.Ltmp377:
	.loc	9 252 22 is_stmt 1 discriminator 1 # exact_rhs.c:252:22
	movl	grid_points(%rip), %eax
	movl	$1, %edx
	movq	%rdx, 72(%rsp)          # 8-byte Spill
	movl	$forcing+171672, %edi
	movl	$forcing+509672, %ecx
	leaq	112(%rsp), %r8
	.p2align	4, 0x90
.LBB4_46:                               # %for.body1403
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_48 Depth 2
                                        #       Child Loop BB4_50 Depth 3
                                        #       Child Loop BB4_53 Depth 3
                                        #       Child Loop BB4_56 Depth 3
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	9 252 19 is_stmt 0 discriminator 1 # exact_rhs.c:252:19
	movl	%eax, %edx
	addl	$-2, %edx
	jle	.LBB4_60
.Ltmp378:
# BB#47:                                #   in Loop: Header=BB4_46 Depth=1
	.loc	9 251 11 is_stmt 1      # exact_rhs.c:251:11
	movq	72(%rsp), %rax          # 8-byte Reload
	cvtsi2sdl	%eax, %xmm1
	.loc	9 251 23 is_stmt 0      # exact_rhs.c:251:23
	mulsd	dnym1(%rip), %xmm1
.Ltmp379:
	#DEBUG_VALUE: exact_rhs:eta <- %XMM1
	.loc	9 255 24 is_stmt 1 discriminator 1 # exact_rhs.c:255:24
	movsd	%xmm1, 16(%rsp)         # 8-byte Spill
	movq	%rcx, %rbp
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	movq	%rdi, 280(%rsp)         # 8-byte Spill
	movq	%rdi, %rbx
	movl	$1, %r15d
.Ltmp380:
	.p2align	4, 0x90
.LBB4_48:                               # %for.body1410
                                        #   Parent Loop BB4_46 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB4_50 Depth 3
                                        #       Child Loop BB4_53 Depth 3
                                        #       Child Loop BB4_56 Depth 3
	#DEBUG_VALUE: exact_rhs:k <- 0
	movq	%rbp, 288(%rsp)         # 8-byte Spill
	.loc	9 255 21 is_stmt 0 discriminator 1 # exact_rhs.c:255:21
	testl	%r12d, %r12d
	movq	%r8, %rbp
	jle	.LBB4_51
.Ltmp381:
# BB#49:                                #   in Loop: Header=BB4_48 Depth=2
	.loc	9 253 12 is_stmt 1      # exact_rhs.c:253:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 253 24 is_stmt 0      # exact_rhs.c:253:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp382:
	#DEBUG_VALUE: exact_rhs:xi <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp383:
	#DEBUG_VALUE: exact_rhs:xi <- [%RSP+0]
	xorl	%r14d, %r14d
	xorl	%r13d, %r13d
.Ltmp384:
	.p2align	4, 0x90
.LBB4_50:                               # %for.body1417
                                        #   Parent Loop BB4_46 Depth=1
                                        #     Parent Loop BB4_48 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 256 16 is_stmt 1      # exact_rhs.c:256:16
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%r13d, %xmm2
	.loc	9 256 28 is_stmt 0      # exact_rhs.c:256:28
	mulsd	dnzm1(%rip), %xmm2
.Ltmp385:
	#DEBUG_VALUE: exact_rhs:zeta <- %XMM2
	.loc	9 258 9 is_stmt 1       # exact_rhs.c:258:9
	movsd	(%rsp), %xmm0           # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	%rbp, %rdi
	callq	exact_solution
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 263 19                # exact_rhs.c:263:19
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm3
	movsd	16(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
.Ltmp386:
	.loc	9 260 20                # exact_rhs.c:260:20
	movq	144(%rsp), %rax
	movq	%rax, ue+32(%r14)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm2
.Ltmp387:
	movups	%xmm2, ue+16(%r14)
	movups	%xmm0, ue(%r14)
.Ltmp388:
	.loc	9 263 19                # exact_rhs.c:263:19
	divsd	112(%rsp), %xmm3
.Ltmp389:
	#DEBUG_VALUE: exact_rhs:dtpp <- %XMM3
	#DEBUG_VALUE: exact_rhs:m <- 1
	.loc	9 266 30                # exact_rhs.c:266:30
	movupd	120(%rsp), %xmm0
	.loc	9 266 28 is_stmt 0      # exact_rhs.c:266:28
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
.Ltmp390:
	mulpd	%xmm3, %xmm0
	.loc	9 266 21                # exact_rhs.c:266:21
	movupd	%xmm0, buf+8(%r14)
	.loc	9 266 30                # exact_rhs.c:266:30
	movupd	136(%rsp), %xmm2
	.loc	9 266 28                # exact_rhs.c:266:28
	mulpd	%xmm3, %xmm2
	.loc	9 266 21                # exact_rhs.c:266:21
	movupd	%xmm2, buf+24(%r14)
	movsd	ue+24(%r14), %xmm5      # xmm5 = mem[0],zero
.Ltmp391:
	.loc	9 272 30 is_stmt 1      # exact_rhs.c:272:30
	mulsd	%xmm2, %xmm5
	.loc	9 269 31                # exact_rhs.c:269:31
	mulsd	%xmm2, %xmm2
	.loc	9 269 19 is_stmt 0      # exact_rhs.c:269:19
	movsd	%xmm2, cuf(,%r13,8)
	.loc	9 270 64 is_stmt 1      # exact_rhs.c:270:64
	movapd	%xmm0, %xmm3
	movsd	ue+8(%r14), %xmm4       # xmm4 = mem[0],zero
	.loc	9 271 30                # exact_rhs.c:271:30
	mulsd	%xmm0, %xmm4
	.loc	9 270 40                # exact_rhs.c:270:40
	mulsd	%xmm0, %xmm0
	.loc	9 270 28 is_stmt 0      # exact_rhs.c:270:28
	addsd	%xmm2, %xmm0
	.loc	9 270 64                # exact_rhs.c:270:64
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	movsd	ue+16(%r14), %xmm2      # xmm2 = mem[0],zero
	.loc	9 271 51 is_stmt 1      # exact_rhs.c:271:51
	mulsd	%xmm3, %xmm2
	.loc	9 270 64                # exact_rhs.c:270:64
	mulsd	%xmm3, %xmm3
	.loc	9 270 52 is_stmt 0      # exact_rhs.c:270:52
	addsd	%xmm0, %xmm3
	movsd	.LCPI4_1(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	9 270 19                # exact_rhs.c:270:19
	movsd	%xmm3, buf(%r14)
	.loc	9 271 40 is_stmt 1      # exact_rhs.c:271:40
	addsd	%xmm4, %xmm2
	.loc	9 271 61 is_stmt 0      # exact_rhs.c:271:61
	addsd	%xmm2, %xmm5
	.loc	9 271 19                # exact_rhs.c:271:19
	mulsd	%xmm0, %xmm5
	.loc	9 271 14                # exact_rhs.c:271:14
	movsd	%xmm5, q(,%r13,8)
.Ltmp392:
	.loc	9 255 7 is_stmt 1 discriminator 1 # exact_rhs.c:255:7
	incq	%r13
	.loc	9 255 21 is_stmt 0 discriminator 1 # exact_rhs.c:255:21
	movslq	grid_points+8(%rip), %r12
	addq	$40, %r14
	cmpq	%r12, %r13
	jl	.LBB4_50
.Ltmp393:
.LBB4_51:                               # %for.cond1509.preheader
                                        #   in Loop: Header=BB4_48 Depth=2
	movq	%rbp, %r8
.Ltmp394:
	.loc	9 275 21 is_stmt 1 discriminator 1 # exact_rhs.c:275:21
	addl	$-2, %r12d
	movsd	.LCPI4_2(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm3
	jle	.LBB4_54
# BB#52:                                # %for.body1513.lr.ph
                                        #   in Loop: Header=BB4_48 Depth=2
.Ltmp395:
	.loc	9 280 11                # exact_rhs.c:280:11
	movsd	tz2(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	9 294 37                # exact_rhs.c:294:37
	movapd	%xmm0, 256(%rsp)        # 16-byte Spill
	movsd	c2(%rip), %xmm1         # xmm1 = mem[0],zero
	.loc	9 300 26                # exact_rhs.c:300:26
	movsd	%xmm1, 32(%rsp)         # 8-byte Spill
	movsd	c1(%rip), %xmm1         # xmm1 = mem[0],zero
	movsd	%xmm1, 48(%rsp)         # 8-byte Spill
	movsd	zzcon3(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	9 302 14                # exact_rhs.c:302:14
	mulsd	.LCPI4_1(%rip), %xmm1
	movsd	%xmm1, 24(%rsp)         # 8-byte Spill
	.loc	9 304 11                # exact_rhs.c:304:11
	movsd	zzcon4(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	9 305 11                # exact_rhs.c:305:11
	movsd	%xmm1, 176(%rsp)        # 8-byte Spill
	movsd	zzcon5(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	9 306 11                # exact_rhs.c:306:11
	movsd	%xmm1, 160(%rsp)        # 8-byte Spill
	movsd	dz5tz1(%rip), %xmm1     # xmm1 = mem[0],zero
.Ltmp396:
	.loc	9 275 7 discriminator 1 # exact_rhs.c:275:7
	movsd	%xmm1, 240(%rsp)        # 8-byte Spill
	movslq	%r12d, %rax
.Ltmp397:
	.loc	9 280 28                # exact_rhs.c:280:28
	movsd	ue+24(%rip), %xmm9      # xmm9 = mem[0],zero
	.loc	9 284 47                # exact_rhs.c:284:47
	movsd	buf+24(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	9 280 14                # exact_rhs.c:280:14
	movsd	zzcon2(%rip), %xmm1     # xmm1 = mem[0],zero
	movapd	%xmm0, %xmm2
	unpcklpd	%xmm1, %xmm2    # xmm2 = xmm2[0],xmm1[0]
	movapd	%xmm2, 208(%rsp)        # 16-byte Spill
	.loc	9 281 17                # exact_rhs.c:281:17
	movsd	dz1tz1(%rip), %xmm2     # xmm2 = mem[0],zero
	movhpd	dz2tz1(%rip), %xmm2     # xmm2 = xmm2[0],mem[0]
	movapd	%xmm2, 96(%rsp)         # 16-byte Spill
	.loc	9 288 57                # exact_rhs.c:288:57
	movapd	%xmm0, %xmm2
	movapd	%xmm0, %xmm5
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 80(%rsp)         # 16-byte Spill
	.loc	9 290 17                # exact_rhs.c:290:17
	movhpd	zzcon1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 224(%rsp)        # 16-byte Spill
	.loc	9 291 17                # exact_rhs.c:291:17
	movsd	dz3tz1(%rip), %xmm0     # xmm0 = mem[0],zero
	movhpd	dz4tz1(%rip), %xmm0     # xmm0 = xmm0[0],mem[0]
	movapd	%xmm0, 192(%rsp)        # 16-byte Spill
	.loc	9 295 25                # exact_rhs.c:295:25
	movl	$0, %ecx
	movq	%rbx, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB4_53:                               # %for.body1513
                                        #   Parent Loop BB4_46 Depth=1
                                        #     Parent Loop BB4_48 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 279 51                # exact_rhs.c:279:51
	movsd	-32(%rdx), %xmm12       # xmm12 = mem[0],zero
	.loc	9 283 31                # exact_rhs.c:283:31
	movsd	-24(%rdx), %xmm14       # xmm14 = mem[0],zero
	.loc	9 281 19                # exact_rhs.c:281:19
	movupd	ue+80(%rcx), %xmm13
	.loc	9 284 23                # exact_rhs.c:284:23
	movapd	%xmm13, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	9 290 19                # exact_rhs.c:290:19
	movupd	buf+96(%rcx), %xmm11
	.loc	9 284 23                # exact_rhs.c:284:23
	movapd	%xmm11, (%rsp)          # 16-byte Spill
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	mulsd	%xmm11, %xmm0
	.loc	9 281 43                # exact_rhs.c:281:43
	movupd	ue(%rcx), %xmm1
	.loc	9 281 34 is_stmt 0      # exact_rhs.c:281:34
	movupd	ue+40(%rcx), %xmm2
	.loc	9 281 33                # exact_rhs.c:281:33
	addpd	%xmm2, %xmm2
	.loc	9 281 29                # exact_rhs.c:281:29
	subpd	%xmm2, %xmm13
	.loc	9 281 42                # exact_rhs.c:281:42
	addpd	%xmm1, %xmm13
	.loc	9 284 46 is_stmt 1      # exact_rhs.c:284:46
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	mulsd	%xmm4, %xmm1
	.loc	9 284 35 is_stmt 0      # exact_rhs.c:284:35
	subsd	%xmm1, %xmm0
	.loc	9 283 57 is_stmt 1      # exact_rhs.c:283:57
	mulsd	%xmm5, %xmm0
	.loc	9 283 51 is_stmt 0      # exact_rhs.c:283:51
	subsd	%xmm0, %xmm14
	movsd	buf+48(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	9 285 34 is_stmt 1      # exact_rhs.c:285:34
	mulsd	%xmm3, %xmm1
	.loc	9 285 30 is_stmt 0      # exact_rhs.c:285:30
	addsd	buf+88(%rcx), %xmm1
	.loc	9 289 13 is_stmt 1      # exact_rhs.c:289:13
	movupd	ue+96(%rcx), %xmm6
	.loc	9 280 27                # exact_rhs.c:280:27
	movapd	%xmm6, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	movapd	%xmm0, %xmm2
	movhpd	buf+8(%rcx), %xmm2      # xmm2 = xmm2[0],mem[0]
	.loc	9 289 36                # exact_rhs.c:289:36
	movsd	ue+16(%rcx), %xmm8      # xmm8 = mem[0],zero
	.loc	9 289 46 is_stmt 0      # exact_rhs.c:289:46
	movapd	%xmm8, %xmm10
	.loc	9 295 24 is_stmt 1      # exact_rhs.c:295:24
	movapd	%xmm9, %xmm7
	.loc	9 291 42                # exact_rhs.c:291:42
	unpcklpd	%xmm9, %xmm8    # xmm8 = xmm8[0],xmm9[0]
	.loc	9 280 27                # exact_rhs.c:280:27
	unpcklpd	%xmm1, %xmm9    # xmm9 = xmm9[0],xmm1[0]
	movapd	%xmm2, %xmm1
	subpd	%xmm9, %xmm1
	addpd	%xmm2, %xmm9
	movsd	%xmm1, %xmm9            # xmm9 = xmm1[0],xmm9[1]
	.loc	9 280 14 is_stmt 0      # exact_rhs.c:280:14
	mulpd	208(%rsp), %xmm9        # 16-byte Folded Reload
	.loc	9 279 51 is_stmt 1      # exact_rhs.c:279:51
	unpcklpd	%xmm14, %xmm12  # xmm12 = xmm12[0],xmm14[0]
	movapd	%xmm12, %xmm1
	subpd	%xmm9, %xmm1
	addpd	%xmm9, %xmm12
	movsd	%xmm1, %xmm12           # xmm12 = xmm1[0],xmm12[1]
	.loc	9 281 17                # exact_rhs.c:281:17
	mulpd	96(%rsp), %xmm13        # 16-byte Folded Reload
	.loc	9 280 40                # exact_rhs.c:280:40
	addpd	%xmm12, %xmm13
	.loc	9 279 29                # exact_rhs.c:279:29
	movupd	%xmm13, -32(%rdx)
	.loc	9 294 24                # exact_rhs.c:294:24
	mulsd	%xmm11, %xmm0
	movapd	%xmm3, %xmm14
	.loc	9 294 41 is_stmt 0      # exact_rhs.c:294:41
	movsd	ue+112(%rcx), %xmm3     # xmm3 = mem[0],zero
	.loc	9 294 52                # exact_rhs.c:294:52
	movsd	q+16(,%rsi,8), %xmm12   # xmm12 = mem[0],zero
	.loc	9 294 51                # exact_rhs.c:294:51
	movapd	%xmm3, %xmm5
	subsd	%xmm12, %xmm5
	movsd	32(%rsp), %xmm15        # 8-byte Reload
                                        # xmm15 = mem[0],zero
	.loc	9 294 39                # exact_rhs.c:294:39
	mulsd	%xmm15, %xmm5
	.loc	9 294 36                # exact_rhs.c:294:36
	addsd	%xmm0, %xmm5
	.loc	9 295 24 is_stmt 1      # exact_rhs.c:295:24
	mulsd	%xmm4, %xmm7
	movapd	%xmm7, %xmm2
	.loc	9 295 41 is_stmt 0      # exact_rhs.c:295:41
	movsd	ue+32(%rcx), %xmm9      # xmm9 = mem[0],zero
	.loc	9 295 52                # exact_rhs.c:295:52
	movsd	q(,%rsi,8), %xmm13      # xmm13 = mem[0],zero
	movsd	48(%rsp), %xmm0         # 8-byte Reload
                                        # xmm0 = mem[0],zero
	.loc	9 300 28 is_stmt 1      # exact_rhs.c:300:28
	movapd	%xmm0, %xmm1
	mulsd	%xmm3, %xmm1
	.loc	9 306 35                # exact_rhs.c:306:35
	movsd	ue+72(%rcx), %xmm7      # xmm7 = mem[0],zero
	.loc	9 306 34 is_stmt 0      # exact_rhs.c:306:34
	addsd	%xmm7, %xmm7
	.loc	9 306 30                # exact_rhs.c:306:30
	subsd	%xmm7, %xmm3
	.loc	9 301 28 is_stmt 1      # exact_rhs.c:301:28
	movapd	%xmm0, %xmm7
	mulsd	%xmm9, %xmm7
	.loc	9 306 43                # exact_rhs.c:306:43
	addsd	%xmm9, %xmm3
	.loc	9 295 51                # exact_rhs.c:295:51
	subsd	%xmm13, %xmm9
	.loc	9 295 39 is_stmt 0      # exact_rhs.c:295:39
	mulsd	%xmm15, %xmm9
	.loc	9 295 36                # exact_rhs.c:295:36
	addsd	%xmm2, %xmm9
	.loc	9 289 23 is_stmt 1      # exact_rhs.c:289:23
	movapd	%xmm6, %xmm2
	mulsd	%xmm11, %xmm2
	.loc	9 289 35 is_stmt 0      # exact_rhs.c:289:35
	unpcklpd	%xmm5, %xmm2    # xmm2 = xmm2[0],xmm5[0]
	.loc	9 289 46                # exact_rhs.c:289:46
	mulsd	%xmm4, %xmm10
	.loc	9 289 35                # exact_rhs.c:289:35
	unpcklpd	%xmm9, %xmm10   # xmm10 = xmm10[0],xmm9[0]
	.loc	9 288 31 is_stmt 1      # exact_rhs.c:288:31
	movupd	-16(%rdx), %xmm0
	.loc	9 289 35                # exact_rhs.c:289:35
	subpd	%xmm10, %xmm2
	.loc	9 288 57                # exact_rhs.c:288:57
	mulpd	80(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	9 288 51 is_stmt 0      # exact_rhs.c:288:51
	subpd	%xmm2, %xmm0
	.loc	9 290 44 is_stmt 1      # exact_rhs.c:290:44
	movsd	buf+16(%rcx), %xmm2     # xmm2 = mem[0],zero
	unpcklpd	%xmm4, %xmm2    # xmm2 = xmm2[0],xmm4[0]
	.loc	9 290 35 is_stmt 0      # exact_rhs.c:290:35
	movupd	buf+56(%rcx), %xmm9
	.loc	9 290 34                # exact_rhs.c:290:34
	movapd	%xmm9, %xmm5
	addpd	%xmm5, %xmm5
	movapd	(%rsp), %xmm4           # 16-byte Reload
	.loc	9 290 30                # exact_rhs.c:290:30
	subpd	%xmm5, %xmm4
	.loc	9 290 44                # exact_rhs.c:290:44
	addpd	%xmm4, %xmm2
	.loc	9 290 17                # exact_rhs.c:290:17
	mulpd	224(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	9 289 59 is_stmt 1      # exact_rhs.c:289:59
	addpd	%xmm0, %xmm2
	.loc	9 291 34                # exact_rhs.c:291:34
	movupd	ue+56(%rcx), %xmm0
	.loc	9 291 33 is_stmt 0      # exact_rhs.c:291:33
	movapd	%xmm0, %xmm5
	addpd	%xmm5, %xmm5
	.loc	9 291 29                # exact_rhs.c:291:29
	subpd	%xmm5, %xmm6
	.loc	9 291 42                # exact_rhs.c:291:42
	addpd	%xmm6, %xmm8
	.loc	9 291 17                # exact_rhs.c:291:17
	mulpd	192(%rsp), %xmm8        # 16-byte Folded Reload
	.loc	9 290 57 is_stmt 1      # exact_rhs.c:290:57
	addpd	%xmm2, %xmm8
	.loc	9 288 29                # exact_rhs.c:288:29
	movupd	%xmm8, -16(%rdx)
	.loc	9 300 42                # exact_rhs.c:300:42
	mulsd	%xmm15, %xmm12
	.loc	9 300 39 is_stmt 0      # exact_rhs.c:300:39
	subsd	%xmm12, %xmm1
	.loc	9 300 24                # exact_rhs.c:300:24
	mulsd	%xmm11, %xmm1
	.loc	9 301 42 is_stmt 1      # exact_rhs.c:301:42
	mulsd	%xmm15, %xmm13
	.loc	9 301 39 is_stmt 0      # exact_rhs.c:301:39
	subsd	%xmm13, %xmm7
	.loc	9 299 31 is_stmt 1      # exact_rhs.c:299:31
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	9 301 24                # exact_rhs.c:301:24
	mulsd	buf+24(%rcx), %xmm7
	.loc	9 300 50                # exact_rhs.c:300:50
	subsd	%xmm7, %xmm1
	movapd	256(%rsp), %xmm4        # 16-byte Reload
	.loc	9 299 57                # exact_rhs.c:299:57
	mulsd	%xmm4, %xmm1
	movapd	%xmm4, %xmm5
	.loc	9 299 51 is_stmt 0      # exact_rhs.c:299:51
	subsd	%xmm1, %xmm2
	.loc	9 302 23 is_stmt 1      # exact_rhs.c:302:23
	movsd	buf+80(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	9 302 39 is_stmt 0      # exact_rhs.c:302:39
	movsd	buf+40(%rcx), %xmm4     # xmm4 = mem[0],zero
	.loc	9 302 38                # exact_rhs.c:302:38
	addsd	%xmm4, %xmm4
	.loc	9 302 34                # exact_rhs.c:302:34
	subsd	%xmm4, %xmm1
	.loc	9 303 15 is_stmt 1      # exact_rhs.c:303:15
	addsd	buf(%rcx), %xmm1
	.loc	9 302 21                # exact_rhs.c:302:21
	mulsd	24(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	9 301 51                # exact_rhs.c:301:51
	addsd	%xmm2, %xmm1
	.loc	9 304 19                # exact_rhs.c:304:19
	movsd	cuf+16(,%rsi,8), %xmm2  # xmm2 = mem[0],zero
	.loc	9 304 32 is_stmt 0      # exact_rhs.c:304:32
	movsd	cuf+8(,%rsi,8), %xmm4   # xmm4 = mem[0],zero
	.loc	9 304 31                # exact_rhs.c:304:31
	addsd	%xmm4, %xmm4
	.loc	9 304 27                # exact_rhs.c:304:27
	subsd	%xmm4, %xmm2
	.loc	9 304 38                # exact_rhs.c:304:38
	addsd	cuf(,%rsi,8), %xmm2
	.loc	9 304 17                # exact_rhs.c:304:17
	mulsd	176(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	9 303 28 is_stmt 1      # exact_rhs.c:303:28
	addsd	%xmm1, %xmm2
	.loc	9 305 19                # exact_rhs.c:305:19
	movsd	buf+112(%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	9 305 35 is_stmt 0      # exact_rhs.c:305:35
	movsd	buf+72(%rcx), %xmm4     # xmm4 = mem[0],zero
	.loc	9 305 34                # exact_rhs.c:305:34
	addsd	%xmm4, %xmm4
	.loc	9 305 30                # exact_rhs.c:305:30
	subsd	%xmm4, %xmm1
	.loc	9 305 44                # exact_rhs.c:305:44
	addsd	buf+32(%rcx), %xmm1
	.loc	9 305 17                # exact_rhs.c:305:17
	mulsd	160(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	9 304 48 is_stmt 1      # exact_rhs.c:304:48
	addsd	%xmm2, %xmm1
	.loc	9 306 17                # exact_rhs.c:306:17
	mulsd	240(%rsp), %xmm3        # 8-byte Folded Reload
	.loc	9 305 57                # exact_rhs.c:305:57
	addsd	%xmm1, %xmm3
	.loc	9 299 29                # exact_rhs.c:299:29
	movsd	%xmm3, (%rdx)
	movapd	%xmm14, %xmm3
.Ltmp398:
	.loc	9 275 7 discriminator 1 # exact_rhs.c:275:7
	shufpd	$1, %xmm9, %xmm9        # xmm9 = xmm9[1,0]
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	9 275 21 is_stmt 0 discriminator 1 # exact_rhs.c:275:21
	incq	%rsi
	addq	$169000, %rdx           # imm = 0x29428
	addq	$40, %rcx
	cmpq	%rax, %rsi
.Ltmp399:
	.loc	9 295 25 is_stmt 1      # exact_rhs.c:295:25
	movapd	%xmm9, %xmm4
	.loc	9 295 14 is_stmt 0      # exact_rhs.c:295:14
	movapd	%xmm0, %xmm9
	jl	.LBB4_53
.Ltmp400:
.LBB4_54:                               # %for.cond1844.preheader
                                        #   in Loop: Header=BB4_48 Depth=2
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	9 314 53 is_stmt 1      # exact_rhs.c:314:53
	movsd	dssp(%rip), %xmm10      # xmm10 = mem[0],zero
	.loc	9 314 31 is_stmt 0      # exact_rhs.c:314:31
	leaq	(%r15,%r15,4), %rcx
	imulq	$2600, 72(%rsp), %rax   # 8-byte Folded Reload
                                        # imm = 0xA28
.Ltmp401:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	9 315 16 is_stmt 1      # exact_rhs.c:315:16
	movupd	ue+40(%rip), %xmm11
	.loc	9 315 31 is_stmt 0      # exact_rhs.c:315:31
	movapd	%xmm11, 48(%rsp)        # 16-byte Spill
	movapd	ue+80(%rip), %xmm15
	.loc	9 315 43                # exact_rhs.c:315:43
	movapd	%xmm15, (%rsp)          # 16-byte Spill
	movupd	ue+120(%rip), %xmm0
.Ltmp402:
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	9 314 31 is_stmt 1      # exact_rhs.c:314:31
	movupd	forcing+169000(%rax,%rcx,8), %xmm14
	.loc	9 315 15                # exact_rhs.c:315:15
	movapd	%xmm11, %xmm5
	movapd	.LCPI4_5(%rip), %xmm13  # xmm13 = [5.000000e+00,5.000000e+00]
	mulpd	%xmm13, %xmm5
	.loc	9 315 30 is_stmt 0      # exact_rhs.c:315:30
	movapd	%xmm15, %xmm1
	movapd	.LCPI4_6(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	mulpd	%xmm2, %xmm1
	.loc	9 315 25                # exact_rhs.c:315:25
	subpd	%xmm1, %xmm5
	.loc	9 315 42                # exact_rhs.c:315:42
	addpd	%xmm0, %xmm5
	.loc	9 315 16                # exact_rhs.c:315:16
	movsd	ue+72(%rip), %xmm3      # xmm3 = mem[0],zero
	.loc	9 315 15                # exact_rhs.c:315:15
	movapd	%xmm3, %xmm9
	movsd	.LCPI4_8(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm9
	.loc	9 315 31                # exact_rhs.c:315:31
	movsd	ue+112(%rip), %xmm7     # xmm7 = mem[0],zero
	.loc	9 315 30                # exact_rhs.c:315:30
	movapd	%xmm7, %xmm1
	movsd	.LCPI4_3(%rip), %xmm8   # xmm8 = mem[0],zero
	mulsd	%xmm8, %xmm1
	.loc	9 315 25                # exact_rhs.c:315:25
	subsd	%xmm1, %xmm9
	.loc	9 315 43                # exact_rhs.c:315:43
	movsd	ue+152(%rip), %xmm6     # xmm6 = mem[0],zero
	.loc	9 315 42                # exact_rhs.c:315:42
	addsd	%xmm6, %xmm9
	.loc	9 314 58 is_stmt 1      # exact_rhs.c:314:58
	mulsd	%xmm10, %xmm9
	.loc	9 318 16                # exact_rhs.c:318:16
	movapd	%xmm3, %xmm2
	mulsd	%xmm8, %xmm2
	.loc	9 318 33 is_stmt 0      # exact_rhs.c:318:33
	movapd	%xmm7, %xmm12
	movsd	.LCPI4_4(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm12
	.loc	9 318 16                # exact_rhs.c:318:16
	subsd	%xmm2, %xmm12
	.loc	9 319 15 is_stmt 1      # exact_rhs.c:319:15
	mulsd	%xmm8, %xmm6
	.loc	9 318 43                # exact_rhs.c:318:43
	subsd	%xmm6, %xmm12
	.loc	9 319 27                # exact_rhs.c:319:27
	addsd	ue+192(%rip), %xmm12
	.loc	9 317 58                # exact_rhs.c:317:58
	mulsd	%xmm10, %xmm12
	.loc	9 314 58                # exact_rhs.c:314:58
	movlhps	%xmm10, %xmm10          # xmm10 = xmm10[0,0]
	mulpd	%xmm10, %xmm5
	.loc	9 314 51 is_stmt 0      # exact_rhs.c:314:51
	subpd	%xmm5, %xmm14
	.loc	9 314 29                # exact_rhs.c:314:29
	movupd	%xmm14, forcing+169000(%rax,%rcx,8)
.Ltmp403:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	9 317 31 is_stmt 1      # exact_rhs.c:317:31
	movupd	forcing+338000(%rax,%rcx,8), %xmm2
	.loc	9 318 16                # exact_rhs.c:318:16
	movapd	%xmm11, %xmm4
	.loc	9 315 30                # exact_rhs.c:315:30
	movapd	.LCPI4_6(%rip), %xmm11  # xmm11 = [4.000000e+00,4.000000e+00]
	.loc	9 318 16                # exact_rhs.c:318:16
	mulpd	%xmm11, %xmm4
	.loc	9 318 33 is_stmt 0      # exact_rhs.c:318:33
	movapd	%xmm15, %xmm5
	movapd	.LCPI4_7(%rip), %xmm1   # xmm1 = [6.000000e+00,6.000000e+00]
	mulpd	%xmm1, %xmm5
	.loc	9 318 16                # exact_rhs.c:318:16
	subpd	%xmm4, %xmm5
	.loc	9 319 15 is_stmt 1      # exact_rhs.c:319:15
	movapd	%xmm0, %xmm4
	mulpd	%xmm11, %xmm4
	.loc	9 318 43                # exact_rhs.c:318:43
	subpd	%xmm4, %xmm5
	.loc	9 319 35                # exact_rhs.c:319:35
	movapd	ue+160(%rip), %xmm6
	.loc	9 319 27 is_stmt 0      # exact_rhs.c:319:27
	addpd	%xmm6, %xmm5
	.loc	9 317 58 is_stmt 1      # exact_rhs.c:317:58
	mulpd	%xmm10, %xmm5
	.loc	9 317 51 is_stmt 0      # exact_rhs.c:317:51
	subpd	%xmm5, %xmm2
	.loc	9 317 29                # exact_rhs.c:317:29
	movupd	%xmm2, forcing+338000(%rax,%rcx,8)
.Ltmp404:
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	9 315 16 is_stmt 1      # exact_rhs.c:315:16
	movupd	ue+56(%rip), %xmm4
	.loc	9 315 31 is_stmt 0      # exact_rhs.c:315:31
	movapd	ue+96(%rip), %xmm14
	.loc	9 315 43                # exact_rhs.c:315:43
	movupd	ue+136(%rip), %xmm15
.Ltmp405:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	9 315 15                # exact_rhs.c:315:15
	movapd	%xmm4, %xmm2
	mulpd	%xmm13, %xmm2
	.loc	9 315 30                # exact_rhs.c:315:30
	movapd	%xmm14, %xmm1
	mulpd	%xmm11, %xmm1
	.loc	9 315 25                # exact_rhs.c:315:25
	subpd	%xmm1, %xmm2
	.loc	9 314 31 is_stmt 1      # exact_rhs.c:314:31
	movupd	forcing+169016(%rax,%rcx,8), %xmm1
	.loc	9 315 42                # exact_rhs.c:315:42
	addpd	%xmm15, %xmm2
	.loc	9 314 58                # exact_rhs.c:314:58
	mulpd	%xmm10, %xmm2
	.loc	9 314 51 is_stmt 0      # exact_rhs.c:314:51
	subpd	%xmm2, %xmm1
	.loc	9 314 29                # exact_rhs.c:314:29
	movupd	%xmm1, forcing+169016(%rax,%rcx,8)
	.loc	9 318 16 is_stmt 1      # exact_rhs.c:318:16
	movapd	%xmm4, %xmm2
	mulpd	%xmm11, %xmm2
	.loc	9 318 33 is_stmt 0      # exact_rhs.c:318:33
	movapd	%xmm14, %xmm13
	mulpd	.LCPI4_7(%rip), %xmm13
	.loc	9 318 16                # exact_rhs.c:318:16
	subpd	%xmm2, %xmm13
	.loc	9 319 15 is_stmt 1      # exact_rhs.c:319:15
	movapd	%xmm15, %xmm2
	mulpd	%xmm11, %xmm2
	.loc	9 318 43                # exact_rhs.c:318:43
	subpd	%xmm2, %xmm13
	.loc	9 319 35                # exact_rhs.c:319:35
	movapd	ue+176(%rip), %xmm2
.Ltmp406:
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	9 319 27 is_stmt 0      # exact_rhs.c:319:27
	addpd	%xmm2, %xmm13
	.loc	9 317 58 is_stmt 1      # exact_rhs.c:317:58
	mulpd	%xmm10, %xmm13
	.loc	9 317 31 is_stmt 0      # exact_rhs.c:317:31
	movupd	forcing+338016(%rax,%rcx,8), %xmm1
	.loc	9 317 51                # exact_rhs.c:317:51
	subpd	%xmm13, %xmm1
	.loc	9 317 29                # exact_rhs.c:317:29
	movupd	%xmm1, forcing+338016(%rax,%rcx,8)
	.loc	9 314 31 is_stmt 1      # exact_rhs.c:314:31
	movsd	forcing+169032(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	9 314 51 is_stmt 0      # exact_rhs.c:314:51
	subsd	%xmm9, %xmm1
	movsd	.LCPI4_8(%rip), %xmm9   # xmm9 = mem[0],zero
	.loc	9 314 29                # exact_rhs.c:314:29
	movsd	%xmm1, forcing+169032(%rax,%rcx,8)
.Ltmp407:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	9 317 31 is_stmt 1      # exact_rhs.c:317:31
	movsd	forcing+338032(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	9 317 51 is_stmt 0      # exact_rhs.c:317:51
	subsd	%xmm12, %xmm1
	.loc	9 317 29                # exact_rhs.c:317:29
	movsd	%xmm1, forcing+338032(%rax,%rcx,8)
.Ltmp408:
	.loc	9 322 7 is_stmt 1 discriminator 1 # exact_rhs.c:322:7
	movslq	grid_points+8(%rip), %r12
	.loc	9 322 38 is_stmt 0 discriminator 1 # exact_rhs.c:322:38
	movq	%r12, %rcx
	addq	$-4, %rcx
.Ltmp409:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 322 21 discriminator 1 # exact_rhs.c:322:21
	cmpl	$3, %ecx
	movq	288(%rsp), %rbp         # 8-byte Reload
	jl	.LBB4_58
# BB#55:                                # %for.cond1935.preheader.lr.ph
                                        #   in Loop: Header=BB4_48 Depth=2
.Ltmp410:
	.loc	9 324 55 is_stmt 1      # exact_rhs.c:324:55
	movsd	dssp(%rip), %xmm12      # xmm12 = mem[0],zero
	.loc	9 326 33                # exact_rhs.c:326:33
	movapd	%xmm12, 32(%rsp)        # 16-byte Spill
	movlpd	ue+160(%rip), %xmm6     # xmm6 = mem[0],xmm6[1]
	.loc	9 326 18 is_stmt 0      # exact_rhs.c:326:18
	movlpd	ue+120(%rip), %xmm0     # xmm0 = mem[0],xmm0[1]
	movapd	48(%rsp), %xmm11        # 16-byte Reload
.Ltmp411:
	.loc	9 322 7 is_stmt 1 discriminator 1 # exact_rhs.c:322:7
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	movapd	(%rsp), %xmm5           # 16-byte Reload
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
.Ltmp412:
	.loc	9 324 59                # exact_rhs.c:324:59
	movlhps	%xmm12, %xmm12          # xmm12 = xmm12[0,0]
	.loc	9 325 31                # exact_rhs.c:325:31
	movl	$ue+232, %edx
	movq	%rbp, %rsi
	movl	$2, %edi
.Ltmp413:
	.loc	9 315 30                # exact_rhs.c:315:30
	movapd	.LCPI4_6(%rip), %xmm13  # xmm13 = [4.000000e+00,4.000000e+00]
	.loc	9 318 33                # exact_rhs.c:318:33
	movapd	.LCPI4_7(%rip), %xmm10  # xmm10 = [6.000000e+00,6.000000e+00]
.Ltmp414:
	.p2align	4, 0x90
.LBB4_56:                               # %for.cond1935.preheader
                                        #   Parent Loop BB4_46 Depth=1
                                        #     Parent Loop BB4_48 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 325 25                # exact_rhs.c:325:25
	movsd	-192(%rdx), %xmm1       # xmm1 = mem[0],zero
	unpcklpd	%xmm11, %xmm1   # xmm1 = xmm1[0],xmm11[0]
	.loc	9 325 31 is_stmt 0      # exact_rhs.c:325:31
	movapd	%xmm5, %xmm11
	movapd	%xmm7, %xmm9
	.loc	9 324 33 is_stmt 1      # exact_rhs.c:324:33
	movupd	-32(%rsi), %xmm7
	.loc	9 325 30                # exact_rhs.c:325:30
	movsd	-152(%rdx), %xmm5       # xmm5 = mem[0],zero
	unpcklpd	%xmm11, %xmm5   # xmm5 = xmm5[0],xmm11[0]
	mulpd	%xmm13, %xmm5
	.loc	9 325 25 is_stmt 0      # exact_rhs.c:325:25
	subpd	%xmm5, %xmm1
	.loc	9 326 17 is_stmt 1      # exact_rhs.c:326:17
	movapd	%xmm0, %xmm5
	mulpd	%xmm10, %xmm5
	.loc	9 325 42                # exact_rhs.c:325:42
	addpd	%xmm1, %xmm5
	.loc	9 326 32                # exact_rhs.c:326:32
	movapd	%xmm6, %xmm1
	mulpd	%xmm13, %xmm1
	.loc	9 326 27 is_stmt 0      # exact_rhs.c:326:27
	subpd	%xmm1, %xmm5
	.loc	9 326 46                # exact_rhs.c:326:46
	movupd	-32(%rdx), %xmm1
	.loc	9 326 44                # exact_rhs.c:326:44
	movapd	%xmm1, (%rsp)           # 16-byte Spill
	addpd	%xmm1, %xmm5
	.loc	9 324 59 is_stmt 1      # exact_rhs.c:324:59
	mulpd	%xmm12, %xmm5
	.loc	9 324 53 is_stmt 0      # exact_rhs.c:324:53
	subpd	%xmm5, %xmm7
	.loc	9 324 31                # exact_rhs.c:324:31
	movupd	%xmm7, -32(%rsi)
	.loc	9 324 33                # exact_rhs.c:324:33
	movupd	-16(%rsi), %xmm5
	.loc	9 325 30 is_stmt 1      # exact_rhs.c:325:30
	movapd	%xmm14, %xmm1
	mulpd	%xmm13, %xmm1
	.loc	9 325 25 is_stmt 0      # exact_rhs.c:325:25
	subpd	%xmm1, %xmm4
	.loc	9 326 17 is_stmt 1      # exact_rhs.c:326:17
	movapd	%xmm15, %xmm7
	mulpd	%xmm10, %xmm7
	.loc	9 325 42                # exact_rhs.c:325:42
	addpd	%xmm4, %xmm7
	.loc	9 326 32                # exact_rhs.c:326:32
	movapd	%xmm2, %xmm1
	mulpd	%xmm13, %xmm1
	.loc	9 326 27 is_stmt 0      # exact_rhs.c:326:27
	subpd	%xmm1, %xmm7
	.loc	9 326 46                # exact_rhs.c:326:46
	movupd	-16(%rdx), %xmm1
	.loc	9 326 44                # exact_rhs.c:326:44
	addpd	%xmm1, %xmm7
	.loc	9 324 59 is_stmt 1      # exact_rhs.c:324:59
	mulpd	%xmm12, %xmm7
	.loc	9 324 53 is_stmt 0      # exact_rhs.c:324:53
	subpd	%xmm7, %xmm5
	.loc	9 324 31                # exact_rhs.c:324:31
	movupd	%xmm5, -16(%rsi)
	.loc	9 325 30 is_stmt 1      # exact_rhs.c:325:30
	movapd	%xmm9, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 325 25 is_stmt 0      # exact_rhs.c:325:25
	subsd	%xmm4, %xmm3
	.loc	9 326 18 is_stmt 1      # exact_rhs.c:326:18
	movsd	-80(%rdx), %xmm7        # xmm7 = mem[0],zero
	.loc	9 326 17 is_stmt 0      # exact_rhs.c:326:17
	movapd	%xmm7, %xmm4
	mulsd	.LCPI4_4(%rip), %xmm4
	.loc	9 325 42 is_stmt 1      # exact_rhs.c:325:42
	addsd	%xmm3, %xmm4
	movsd	-40(%rdx), %xmm3        # xmm3 = mem[0],zero
	.loc	9 326 32                # exact_rhs.c:326:32
	mulsd	%xmm8, %xmm3
	.loc	9 326 27 is_stmt 0      # exact_rhs.c:326:27
	subsd	%xmm3, %xmm4
	.loc	9 324 33 is_stmt 1      # exact_rhs.c:324:33
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	9 326 44                # exact_rhs.c:326:44
	addsd	(%rdx), %xmm4
	.loc	9 324 59                # exact_rhs.c:324:59
	mulsd	32(%rsp), %xmm4         # 16-byte Folded Reload
	.loc	9 324 53 is_stmt 0      # exact_rhs.c:324:53
	subsd	%xmm4, %xmm3
	.loc	9 324 31                # exact_rhs.c:324:31
	movsd	%xmm3, (%rsi)
.Ltmp415:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	9 322 7 is_stmt 1 discriminator 1 # exact_rhs.c:322:7
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
.Ltmp416:
	.loc	9 325 31                # exact_rhs.c:325:31
	movapd	%xmm0, %xmm5
	.loc	9 326 18                # exact_rhs.c:326:18
	movapd	%xmm6, %xmm0
	.loc	9 325 14                # exact_rhs.c:325:14
	movapd	%xmm14, %xmm4
	.loc	9 325 31 is_stmt 0      # exact_rhs.c:325:31
	movapd	%xmm15, %xmm14
	.loc	9 326 18 is_stmt 1      # exact_rhs.c:326:18
	movapd	%xmm2, %xmm15
.Ltmp417:
	.loc	9 322 21 discriminator 1 # exact_rhs.c:322:21
	incq	%rdi
	addq	$169000, %rsi           # imm = 0x29428
	addq	$40, %rdx
	cmpq	%rcx, %rdi
.Ltmp418:
	.loc	9 325 14                # exact_rhs.c:325:14
	movapd	%xmm9, %xmm3
	.loc	9 326 33                # exact_rhs.c:326:33
	movapd	(%rsp), %xmm6           # 16-byte Reload
	movapd	%xmm1, %xmm2
.Ltmp419:
	.loc	9 322 7 discriminator 1 # exact_rhs.c:322:7
	jl	.LBB4_56
.Ltmp420:
# BB#57:                                # %for.cond1994.preheader.loopexit
                                        #   in Loop: Header=BB4_48 Depth=2
	.loc	9 331 13                # exact_rhs.c:331:13
	movl	grid_points+8(%rip), %r12d
	movsd	.LCPI4_8(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm9
.LBB4_58:                               # %for.body1997
                                        #   in Loop: Header=BB4_48 Depth=2
	.loc	9 334 31                # exact_rhs.c:334:31
	movslq	%r12d, %rsi
	.loc	9 331 27                # exact_rhs.c:331:27
	imulq	$169000, %rsi, %rcx     # imm = 0x29428
	.loc	9 332 53                # exact_rhs.c:332:53
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	9 333 33                # exact_rhs.c:333:33
	leaq	(,%rsi,8), %rdx
	.loc	9 332 31                # exact_rhs.c:332:31
	addq	%rax, %rcx
	leaq	(,%r15,8), %rax
	leaq	(%rax,%rax,4), %rax
	movsd	forcing-507000(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 333 12                # exact_rhs.c:333:12
	movsd	ue-200(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 333 29 is_stmt 0      # exact_rhs.c:333:29
	movsd	ue-160(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 333 28                # exact_rhs.c:333:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 333 23                # exact_rhs.c:333:23
	subsd	%xmm4, %xmm2
	.loc	9 334 16 is_stmt 1      # exact_rhs.c:334:16
	movsd	ue-120(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 334 15 is_stmt 0      # exact_rhs.c:334:15
	movapd	%xmm4, %xmm5
	movsd	.LCPI4_4(%rip), %xmm7   # xmm7 = mem[0],zero
	mulsd	%xmm7, %xmm5
	.loc	9 333 40 is_stmt 1      # exact_rhs.c:333:40
	addsd	%xmm2, %xmm5
	.loc	9 334 31                # exact_rhs.c:334:31
	leaq	-16(,%rsi,8), %rsi
	movsd	ue(%rsi,%rsi,4), %xmm2  # xmm2 = mem[0],zero
	.loc	9 334 30 is_stmt 0      # exact_rhs.c:334:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 334 25                # exact_rhs.c:334:25
	subsd	%xmm6, %xmm5
	.loc	9 332 58 is_stmt 1      # exact_rhs.c:332:58
	mulsd	%xmm0, %xmm5
	.loc	9 332 51 is_stmt 0      # exact_rhs.c:332:51
	subsd	%xmm5, %xmm1
	.loc	9 332 29                # exact_rhs.c:332:29
	movsd	%xmm1, forcing-507000(%rcx,%rax)
	.loc	9 336 31 is_stmt 1      # exact_rhs.c:336:31
	movsd	forcing-338000(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 337 28                # exact_rhs.c:337:28
	mulsd	%xmm8, %xmm4
	.loc	9 337 23 is_stmt 0      # exact_rhs.c:337:23
	subsd	%xmm4, %xmm3
	.loc	9 337 45                # exact_rhs.c:337:45
	mulsd	%xmm9, %xmm2
	.loc	9 337 40                # exact_rhs.c:337:40
	addsd	%xmm3, %xmm2
	.loc	9 336 58 is_stmt 1      # exact_rhs.c:336:58
	mulsd	%xmm0, %xmm2
	.loc	9 336 51 is_stmt 0      # exact_rhs.c:336:51
	subsd	%xmm2, %xmm1
	.loc	9 336 29                # exact_rhs.c:336:29
	movsd	%xmm1, forcing-338000(%rcx,%rax)
	.loc	9 332 31 is_stmt 1      # exact_rhs.c:332:31
	movsd	forcing-506992(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 333 12                # exact_rhs.c:333:12
	movsd	ue-192(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 333 29 is_stmt 0      # exact_rhs.c:333:29
	movsd	ue-152(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 333 28                # exact_rhs.c:333:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 333 23                # exact_rhs.c:333:23
	subsd	%xmm4, %xmm2
	.loc	9 334 16 is_stmt 1      # exact_rhs.c:334:16
	movsd	ue-112(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 334 15 is_stmt 0      # exact_rhs.c:334:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 333 40 is_stmt 1      # exact_rhs.c:333:40
	addsd	%xmm2, %xmm5
	.loc	9 334 31                # exact_rhs.c:334:31
	movsd	ue+8(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 334 30 is_stmt 0      # exact_rhs.c:334:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 334 25                # exact_rhs.c:334:25
	subsd	%xmm6, %xmm5
	.loc	9 332 58 is_stmt 1      # exact_rhs.c:332:58
	mulsd	%xmm0, %xmm5
	.loc	9 332 51 is_stmt 0      # exact_rhs.c:332:51
	subsd	%xmm5, %xmm1
	.loc	9 332 29                # exact_rhs.c:332:29
	movsd	%xmm1, forcing-506992(%rcx,%rax)
	.loc	9 336 31 is_stmt 1      # exact_rhs.c:336:31
	movsd	forcing-337992(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 337 28                # exact_rhs.c:337:28
	mulsd	%xmm8, %xmm4
	.loc	9 337 23 is_stmt 0      # exact_rhs.c:337:23
	subsd	%xmm4, %xmm3
	.loc	9 337 45                # exact_rhs.c:337:45
	mulsd	%xmm9, %xmm2
	.loc	9 337 40                # exact_rhs.c:337:40
	addsd	%xmm3, %xmm2
	.loc	9 336 58 is_stmt 1      # exact_rhs.c:336:58
	mulsd	%xmm0, %xmm2
	.loc	9 336 51 is_stmt 0      # exact_rhs.c:336:51
	subsd	%xmm2, %xmm1
	.loc	9 336 29                # exact_rhs.c:336:29
	movsd	%xmm1, forcing-337992(%rcx,%rax)
	.loc	9 332 31 is_stmt 1      # exact_rhs.c:332:31
	movsd	forcing-506984(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 333 12                # exact_rhs.c:333:12
	movsd	ue-184(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 333 29 is_stmt 0      # exact_rhs.c:333:29
	movsd	ue-144(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 333 28                # exact_rhs.c:333:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 333 23                # exact_rhs.c:333:23
	subsd	%xmm4, %xmm2
	.loc	9 334 16 is_stmt 1      # exact_rhs.c:334:16
	movsd	ue-104(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 334 15 is_stmt 0      # exact_rhs.c:334:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 333 40 is_stmt 1      # exact_rhs.c:333:40
	addsd	%xmm2, %xmm5
	.loc	9 334 31                # exact_rhs.c:334:31
	movsd	ue+16(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 334 30 is_stmt 0      # exact_rhs.c:334:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 334 25                # exact_rhs.c:334:25
	subsd	%xmm6, %xmm5
	.loc	9 332 58 is_stmt 1      # exact_rhs.c:332:58
	mulsd	%xmm0, %xmm5
	.loc	9 332 51 is_stmt 0      # exact_rhs.c:332:51
	subsd	%xmm5, %xmm1
	.loc	9 332 29                # exact_rhs.c:332:29
	movsd	%xmm1, forcing-506984(%rcx,%rax)
	.loc	9 336 31 is_stmt 1      # exact_rhs.c:336:31
	movsd	forcing-337984(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 337 28                # exact_rhs.c:337:28
	mulsd	%xmm8, %xmm4
	.loc	9 337 23 is_stmt 0      # exact_rhs.c:337:23
	subsd	%xmm4, %xmm3
	.loc	9 337 45                # exact_rhs.c:337:45
	mulsd	%xmm9, %xmm2
	.loc	9 337 40                # exact_rhs.c:337:40
	addsd	%xmm3, %xmm2
	.loc	9 336 58 is_stmt 1      # exact_rhs.c:336:58
	mulsd	%xmm0, %xmm2
	.loc	9 336 51 is_stmt 0      # exact_rhs.c:336:51
	subsd	%xmm2, %xmm1
	.loc	9 336 29                # exact_rhs.c:336:29
	movsd	%xmm1, forcing-337984(%rcx,%rax)
	.loc	9 332 31 is_stmt 1      # exact_rhs.c:332:31
	movsd	forcing-506976(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 333 12                # exact_rhs.c:333:12
	movsd	ue-176(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 333 29 is_stmt 0      # exact_rhs.c:333:29
	movsd	ue-136(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 333 28                # exact_rhs.c:333:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 333 23                # exact_rhs.c:333:23
	subsd	%xmm4, %xmm2
	.loc	9 334 16 is_stmt 1      # exact_rhs.c:334:16
	movsd	ue-96(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 334 15 is_stmt 0      # exact_rhs.c:334:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 333 40 is_stmt 1      # exact_rhs.c:333:40
	addsd	%xmm2, %xmm5
	.loc	9 334 31                # exact_rhs.c:334:31
	movsd	ue+24(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 334 30 is_stmt 0      # exact_rhs.c:334:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 334 25                # exact_rhs.c:334:25
	subsd	%xmm6, %xmm5
	.loc	9 332 58 is_stmt 1      # exact_rhs.c:332:58
	mulsd	%xmm0, %xmm5
	.loc	9 332 51 is_stmt 0      # exact_rhs.c:332:51
	subsd	%xmm5, %xmm1
	.loc	9 332 29                # exact_rhs.c:332:29
	movsd	%xmm1, forcing-506976(%rcx,%rax)
	.loc	9 336 31 is_stmt 1      # exact_rhs.c:336:31
	movsd	forcing-337976(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 337 28                # exact_rhs.c:337:28
	mulsd	%xmm8, %xmm4
	.loc	9 337 23 is_stmt 0      # exact_rhs.c:337:23
	subsd	%xmm4, %xmm3
	.loc	9 337 45                # exact_rhs.c:337:45
	mulsd	%xmm9, %xmm2
	.loc	9 337 40                # exact_rhs.c:337:40
	addsd	%xmm3, %xmm2
	.loc	9 336 58 is_stmt 1      # exact_rhs.c:336:58
	mulsd	%xmm0, %xmm2
	.loc	9 336 51 is_stmt 0      # exact_rhs.c:336:51
	subsd	%xmm2, %xmm1
	.loc	9 336 29                # exact_rhs.c:336:29
	movsd	%xmm1, forcing-337976(%rcx,%rax)
	.loc	9 332 31 is_stmt 1      # exact_rhs.c:332:31
	movsd	forcing-506968(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 333 12                # exact_rhs.c:333:12
	movsd	ue-168(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 333 29 is_stmt 0      # exact_rhs.c:333:29
	movsd	ue-128(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	9 333 28                # exact_rhs.c:333:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	9 333 23                # exact_rhs.c:333:23
	subsd	%xmm4, %xmm2
	.loc	9 334 16 is_stmt 1      # exact_rhs.c:334:16
	movsd	ue-88(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	9 334 15 is_stmt 0      # exact_rhs.c:334:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	9 333 40 is_stmt 1      # exact_rhs.c:333:40
	addsd	%xmm2, %xmm5
	.loc	9 334 31                # exact_rhs.c:334:31
	movsd	ue+32(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	9 334 30 is_stmt 0      # exact_rhs.c:334:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	9 334 25                # exact_rhs.c:334:25
	subsd	%xmm6, %xmm5
	.loc	9 332 58 is_stmt 1      # exact_rhs.c:332:58
	mulsd	%xmm0, %xmm5
	.loc	9 332 51 is_stmt 0      # exact_rhs.c:332:51
	subsd	%xmm5, %xmm1
	.loc	9 332 29                # exact_rhs.c:332:29
	movsd	%xmm1, forcing-506968(%rcx,%rax)
	.loc	9 336 31 is_stmt 1      # exact_rhs.c:336:31
	movsd	forcing-337968(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	9 337 28                # exact_rhs.c:337:28
	mulsd	%xmm8, %xmm4
	.loc	9 337 23 is_stmt 0      # exact_rhs.c:337:23
	subsd	%xmm4, %xmm3
	.loc	9 337 45                # exact_rhs.c:337:45
	mulsd	%xmm9, %xmm2
	.loc	9 337 40                # exact_rhs.c:337:40
	addsd	%xmm3, %xmm2
	.loc	9 336 58 is_stmt 1      # exact_rhs.c:336:58
	mulsd	%xmm0, %xmm2
	.loc	9 336 51 is_stmt 0      # exact_rhs.c:336:51
	subsd	%xmm2, %xmm1
	.loc	9 336 29                # exact_rhs.c:336:29
	movsd	%xmm1, forcing-337968(%rcx,%rax)
.Ltmp421:
	.loc	9 252 19 is_stmt 1 discriminator 1 # exact_rhs.c:252:19
	movslq	grid_points(%rip), %rax
	.loc	9 252 36 is_stmt 0 discriminator 1 # exact_rhs.c:252:36
	leaq	-2(%rax), %rcx
	.loc	9 252 5 discriminator 1 # exact_rhs.c:252:5
	addq	$40, %rbx
	addq	$40, %rbp
	.loc	9 252 19 discriminator 1 # exact_rhs.c:252:19
	cmpq	%rcx, %r15
	.loc	9 252 5 discriminator 1 # exact_rhs.c:252:5
	leaq	1(%r15), %r15
	movsd	16(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	jl	.LBB4_48
.Ltmp422:
# BB#59:                                # %for.inc2085.loopexit
                                        #   in Loop: Header=BB4_46 Depth=1
	.loc	9 250 20 is_stmt 1 discriminator 1 # exact_rhs.c:250:20
	movl	grid_points+4(%rip), %ebp
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rcx         # 8-byte Reload
.LBB4_60:                               # %for.inc2085
                                        #   in Loop: Header=BB4_46 Depth=1
	.loc	9 250 34 is_stmt 0 discriminator 1 # exact_rhs.c:250:34
	leal	-2(%rbp), %edx
	.loc	9 250 17 discriminator 1 # exact_rhs.c:250:17
	movslq	%edx, %rdx
	.loc	9 250 3 discriminator 1 # exact_rhs.c:250:3
	addq	$2600, %rdi             # imm = 0xA28
	addq	$2600, %rcx             # imm = 0xA28
	movq	72(%rsp), %rsi          # 8-byte Reload
	.loc	9 250 17 discriminator 1 # exact_rhs.c:250:17
	cmpq	%rdx, %rsi
	.loc	9 250 3 discriminator 1 # exact_rhs.c:250:3
	leaq	1(%rsi), %rsi
	movq	%rsi, 72(%rsp)          # 8-byte Spill
	jl	.LBB4_46
.Ltmp423:
.LBB4_61:                               # %for.cond2088.preheader
	.loc	9 346 17 is_stmt 1 discriminator 1 # exact_rhs.c:346:17
	addl	$-2, %r12d
	jle	.LBB4_72
# BB#62:                                # %for.cond2093.preheader.lr.ph
.Ltmp424:
	.loc	9 347 19 discriminator 1 # exact_rhs.c:347:19
	addl	$-2, %ebp
	jle	.LBB4_72
# BB#63:                                # %for.cond2098.preheader.lr.ph.preheader
.Ltmp425:
	.loc	9 348 24 discriminator 1 # exact_rhs.c:348:24
	movl	grid_points(%rip), %r15d
	.loc	9 348 38 is_stmt 0 discriminator 1 # exact_rhs.c:348:38
	leal	-2(%r15), %r8d
.Ltmp426:
	.loc	9 350 40 is_stmt 1      # exact_rhs.c:350:40
	movslq	%ebp, %rdx
	movslq	%r12d, %r9
.Ltmp427:
	.loc	9 348 7 discriminator 1 # exact_rhs.c:348:7
	movl	%r15d, %edi
	andl	$1, %edi
	leal	-1(%r15), %r11d
	movl	$1, %r14d
	movl	$forcing+171672, %r10d
.Ltmp428:
	.loc	9 350 38                # exact_rhs.c:350:38
	movapd	.LCPI4_9(%rip), %xmm0   # xmm0 = [9223372036854775808,9223372036854775808]
	.p2align	4, 0x90
.LBB4_64:                               # %for.cond2098.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_65 Depth 2
                                        #       Child Loop BB4_69 Depth 3
	testl	%r8d, %r8d
	movq	%r10, %rax
	movl	$1, %ecx
	jle	.LBB4_71
	.p2align	4, 0x90
.LBB4_65:                               # %for.cond2103.preheader.lr.ph
                                        #   Parent Loop BB4_64 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB4_69 Depth 3
	testl	%edi, %edi
	movl	$1, %esi
	je	.LBB4_67
# BB#66:                                # %for.cond2103.preheader.prol
                                        #   in Loop: Header=BB4_65 Depth=2
	.loc	9 350 40 is_stmt 0      # exact_rhs.c:350:40
	imulq	$2600, %rcx, %rsi       # imm = 0xA28
	imulq	$169000, %r14, %rbx     # imm = 0x29428
	movupd	forcing+40(%rbx,%rsi), %xmm1
	.loc	9 350 38                # exact_rhs.c:350:38
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movupd	%xmm1, forcing+40(%rbx,%rsi)
	.loc	9 350 40                # exact_rhs.c:350:40
	movupd	forcing+56(%rbx,%rsi), %xmm1
	.loc	9 350 38                # exact_rhs.c:350:38
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movupd	%xmm1, forcing+56(%rbx,%rsi)
	.loc	9 350 38                # exact_rhs.c:350:38
	movsd	forcing+72(%rbx,%rsi), %xmm1 # xmm1 = mem[0],zero
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movlpd	%xmm1, forcing+72(%rbx,%rsi)
	movl	$2, %esi
.Ltmp429:
.LBB4_67:                               # %for.cond2103.preheader.lr.ph.split
                                        #   in Loop: Header=BB4_65 Depth=2
	cmpl	$3, %r15d
	je	.LBB4_70
# BB#68:                                # %for.cond2103.preheader.lr.ph.split.split
                                        #   in Loop: Header=BB4_65 Depth=2
	.loc	9 348 7 is_stmt 1 discriminator 1 # exact_rhs.c:348:7
	movl	%r11d, %ebp
	subl	%esi, %ebp
	shlq	$3, %rsi
	leaq	(%rsi,%rsi,4), %rbx
	movq	%rax, %rsi
	.p2align	4, 0x90
.LBB4_69:                               # %for.cond2103.preheader
                                        #   Parent Loop BB4_64 Depth=1
                                        #     Parent Loop BB4_65 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp430:
	.loc	9 350 40                # exact_rhs.c:350:40
	movupd	-72(%rbx,%rsi), %xmm1
	.loc	9 350 38 is_stmt 0      # exact_rhs.c:350:38
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movupd	%xmm1, -72(%rbx,%rsi)
	.loc	9 350 40                # exact_rhs.c:350:40
	movupd	-56(%rbx,%rsi), %xmm1
	.loc	9 350 38                # exact_rhs.c:350:38
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movupd	%xmm1, -56(%rbx,%rsi)
	.loc	9 350 38                # exact_rhs.c:350:38
	movsd	-40(%rbx,%rsi), %xmm1   # xmm1 = mem[0],zero
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movlpd	%xmm1, -40(%rbx,%rsi)
	.loc	9 350 40                # exact_rhs.c:350:40
	movupd	-32(%rbx,%rsi), %xmm1
	.loc	9 350 38                # exact_rhs.c:350:38
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movupd	%xmm1, -32(%rbx,%rsi)
	.loc	9 350 40                # exact_rhs.c:350:40
	movupd	-16(%rbx,%rsi), %xmm1
	.loc	9 350 38                # exact_rhs.c:350:38
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movupd	%xmm1, -16(%rbx,%rsi)
	.loc	9 350 38                # exact_rhs.c:350:38
	movsd	(%rbx,%rsi), %xmm1      # xmm1 = mem[0],zero
	xorpd	%xmm0, %xmm1
	.loc	9 350 31                # exact_rhs.c:350:31
	movlpd	%xmm1, (%rbx,%rsi)
.Ltmp431:
	.loc	9 348 7 is_stmt 1 discriminator 1 # exact_rhs.c:348:7
	addq	$80, %rsi
	addl	$-2, %ebp
	jne	.LBB4_69
.Ltmp432:
.LBB4_70:                               # %for.inc2130
                                        #   in Loop: Header=BB4_65 Depth=2
	.loc	9 347 5 discriminator 1 # exact_rhs.c:347:5
	addq	$2600, %rax             # imm = 0xA28
	.loc	9 347 19 is_stmt 0 discriminator 1 # exact_rhs.c:347:19
	cmpq	%rdx, %rcx
	.loc	9 347 5 discriminator 1 # exact_rhs.c:347:5
	leaq	1(%rcx), %rcx
	jl	.LBB4_65
.Ltmp433:
.LBB4_71:                               # %for.inc2133
                                        #   in Loop: Header=BB4_64 Depth=1
	.loc	9 346 3 is_stmt 1 discriminator 1 # exact_rhs.c:346:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	9 346 17 is_stmt 0 discriminator 1 # exact_rhs.c:346:17
	cmpq	%r9, %r14
	.loc	9 346 3 discriminator 1 # exact_rhs.c:346:3
	leaq	1(%r14), %r14
	jl	.LBB4_64
.Ltmp434:
.LBB4_72:                               # %for.end2135
	.loc	9 355 1 is_stmt 1       # exact_rhs.c:355:1
	addq	$296, %rsp              # imm = 0x128
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp435:
.Lfunc_end4:
	.size	exact_rhs, .Lfunc_end4-exact_rhs
	.cfi_endproc

	.globl	adi
	.p2align	4, 0x90
	.type	adi,@function
adi:                                    # @adi
.Lfunc_begin5:
	.file	10 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/adi.c"
	.loc	10 37 0                 # adi.c:37:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	10 38 3 prologue_end    # adi.c:38:3
	pushq	%rax
.Ltmp436:
	.cfi_def_cfa_offset 16
	xorl	%eax, %eax
	callq	compute_rhs
	.loc	10 40 3                 # adi.c:40:3
	xorl	%eax, %eax
	callq	x_solve
	.loc	10 42 3                 # adi.c:42:3
	xorl	%eax, %eax
	callq	y_solve
	.loc	10 44 3                 # adi.c:44:3
	xorl	%eax, %eax
	callq	z_solve
	.loc	10 46 3                 # adi.c:46:3
	xorl	%eax, %eax
	popq	%rcx
	jmp	add                     # TAILCALL
.Ltmp437:
.Lfunc_end5:
	.size	adi, .Lfunc_end5-adi
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI6_0:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
.LCPI6_1:
	.quad	4602678819172646912     # double 0.5
	.quad	4602678819172646912     # double 0.5
.LCPI6_5:
	.quad	4617315517961601024     # double 5
	.quad	4617315517961601024     # double 5
.LCPI6_6:
	.quad	4616189618054758400     # double 4
	.quad	4616189618054758400     # double 4
.LCPI6_10:
	.quad	4618441417868443648     # double 6
	.quad	4618441417868443648     # double 6
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI6_2:
	.quad	4607182418800017408     # double 1
.LCPI6_3:
	.quad	4602678819172646912     # double 0.5
.LCPI6_4:
	.quad	-4611686018427387904    # double -2
.LCPI6_7:
	.quad	4617315517961601024     # double 5
.LCPI6_8:
	.quad	4616189618054758400     # double 4
.LCPI6_9:
	.quad	4618441417868443648     # double 6
	.text
	.globl	compute_rhs
	.p2align	4, 0x90
	.type	compute_rhs,@function
compute_rhs:                            # @compute_rhs
.Lfunc_begin6:
	.file	11 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/rhs.c"
	.loc	11 38 0                 # rhs.c:38:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	11 42 7 prologue_end    # rhs.c:42:7
	pushq	%rbp
.Ltmp438:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp439:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp440:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp441:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp442:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp443:
	.cfi_def_cfa_offset 56
	subq	$472, %rsp              # imm = 0x1D8
.Ltmp444:
	.cfi_def_cfa_offset 528
.Ltmp445:
	.cfi_offset %rbx, -56
.Ltmp446:
	.cfi_offset %r12, -48
.Ltmp447:
	.cfi_offset %r13, -40
.Ltmp448:
	.cfi_offset %r14, -32
.Ltmp449:
	.cfi_offset %r15, -24
.Ltmp450:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB6_2
# BB#1:                                 # %if.then
	.loc	11 42 16 is_stmt 0 discriminator 1 # rhs.c:42:16
	movl	$5, %edi
	callq	timer_start
.Ltmp451:
.LBB6_2:                                # %for.cond.preheader
	.loc	11 47 3 is_stmt 1 discriminator 1 # rhs.c:47:3
	movslq	grid_points+8(%rip), %rdi
.Ltmp452:
	.loc	11 69 20 discriminator 1 # rhs.c:69:20
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	testq	%rdi, %rdi
	jle	.LBB6_18
.Ltmp453:
# BB#3:                                 # %for.cond1.preheader.lr.ph
	.loc	11 48 22 discriminator 1 # rhs.c:48:22
	movl	grid_points+4(%rip), %r12d
.Ltmp454:
	.loc	11 49 24 discriminator 1 # rhs.c:49:24
	movl	grid_points(%rip), %r15d
.Ltmp455:
	.loc	11 47 3 discriminator 1 # rhs.c:47:3
	leal	-1(%r15), %r13d
	incq	%r13
.Ltmp456:
	.loc	11 48 5 discriminator 1 # rhs.c:48:5
	testl	%r12d, %r12d
	setle	%al
	testl	%r15d, %r15d
	setle	%cl
	orb	%al, %cl
	movb	%cl, (%rsp)             # 1-byte Spill
.Ltmp457:
	.loc	11 49 7 discriminator 1 # rhs.c:49:7
	movabsq	$8589934590, %r9        # imm = 0x1FFFFFFFE
	andq	%r13, %r9
	xorl	%r10d, %r10d
	movl	$u+24, %r11d
.Ltmp458:
	.loc	11 50 22                # rhs.c:50:22
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI6_3(%rip), %xmm1   # xmm1 = mem[0],zero
	movapd	.LCPI6_0(%rip), %xmm2   # xmm2 = [1.000000e+00,1.000000e+00]
	movapd	.LCPI6_1(%rip), %xmm8   # xmm8 = [5.000000e-01,5.000000e-01]
	xorl	%r14d, %r14d
.Ltmp459:
	.p2align	4, 0x90
.LBB6_4:                                # %for.cond1.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_5 Depth 2
                                        #       Child Loop BB6_9 Depth 3
                                        #       Child Loop BB6_7 Depth 3
	.loc	11 48 5 discriminator 1 # rhs.c:48:5
	cmpb	$0, (%rsp)              # 1-byte Folded Reload
	movq	%r11, %rcx
	movq	%r10, %rax
	movl	$0, %ebx
	jne	.LBB6_12
	.p2align	4, 0x90
.LBB6_5:                                # %for.body8.lr.ph.us
                                        #   Parent Loop BB6_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_9 Depth 3
                                        #       Child Loop BB6_7 Depth 3
.Ltmp460:
	.loc	11 49 7 discriminator 1 # rhs.c:49:7
	cmpq	$1, %r13
	movl	$0, %edx
	jbe	.LBB6_6
# BB#8:                                 # %min.iters.checked
                                        #   in Loop: Header=BB6_5 Depth=2
	testq	%r9, %r9
	movl	$0, %edx
	movq	%r9, %rdi
	movq	%rax, %rbp
	je	.LBB6_6
	.p2align	4, 0x90
.LBB6_9:                                # %vector.body
                                        #   Parent Loop BB6_4 Depth=1
                                        #     Parent Loop BB6_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp461:
	.loc	11 50 23                # rhs.c:50:23
	movsd	u(%rbp,%rbp,4), %xmm3   # xmm3 = mem[0],zero
	movhpd	u+40(%rbp,%rbp,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 50 22 is_stmt 0      # rhs.c:50:22
	movapd	%xmm2, %xmm4
	divpd	%xmm3, %xmm4
	.loc	11 51 24 is_stmt 1      # rhs.c:51:24
	movupd	%xmm4, rho_i(%rbp)
	.loc	11 52 23                # rhs.c:52:23
	movsd	u+8(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+48(%rbp,%rbp,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 52 37 is_stmt 0      # rhs.c:52:37
	movapd	%xmm4, %xmm5
	mulpd	%xmm3, %xmm5
	.loc	11 52 21                # rhs.c:52:21
	movupd	%xmm5, us(%rbp)
	.loc	11 53 23 is_stmt 1      # rhs.c:53:23
	movsd	u+16(%rbp,%rbp,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+56(%rbp,%rbp,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 53 37 is_stmt 0      # rhs.c:53:37
	movapd	%xmm4, %xmm6
	mulpd	%xmm5, %xmm6
	.loc	11 53 21                # rhs.c:53:21
	movupd	%xmm6, vs(%rbp)
	.loc	11 54 23 is_stmt 1      # rhs.c:54:23
	movsd	u+24(%rbp,%rbp,4), %xmm6 # xmm6 = mem[0],zero
	movhpd	u+64(%rbp,%rbp,4), %xmm6 # xmm6 = xmm6[0],mem[0]
	.loc	11 54 37 is_stmt 0      # rhs.c:54:37
	movapd	%xmm4, %xmm7
	mulpd	%xmm6, %xmm7
	.loc	11 54 21                # rhs.c:54:21
	movupd	%xmm7, ws(%rbp)
	.loc	11 56 26 is_stmt 1      # rhs.c:56:26
	mulpd	%xmm3, %xmm3
	.loc	11 57 26                # rhs.c:57:26
	mulpd	%xmm5, %xmm5
	.loc	11 56 41                # rhs.c:56:41
	addpd	%xmm3, %xmm5
	.loc	11 58 26                # rhs.c:58:26
	mulpd	%xmm6, %xmm6
	.loc	11 57 41                # rhs.c:57:41
	addpd	%xmm5, %xmm6
	.loc	11 55 30                # rhs.c:55:30
	mulpd	%xmm8, %xmm6
	.loc	11 58 43                # rhs.c:58:43
	mulpd	%xmm4, %xmm6
	.loc	11 55 25                # rhs.c:55:25
	movupd	%xmm6, square(%rbp)
	.loc	11 59 39                # rhs.c:59:39
	mulpd	%xmm4, %xmm6
	.loc	11 59 21 is_stmt 0      # rhs.c:59:21
	movupd	%xmm6, qs(%rbp)
.Ltmp462:
	.loc	11 49 7 is_stmt 1 discriminator 1 # rhs.c:49:7
	addq	$16, %rbp
	addq	$-2, %rdi
	jne	.LBB6_9
# BB#10:                                # %middle.block
                                        #   in Loop: Header=BB6_5 Depth=2
	cmpq	%r9, %r13
	movq	%r9, %rdx
	je	.LBB6_11
	.p2align	4, 0x90
.LBB6_6:                                # %for.body8.us.preheader
                                        #   in Loop: Header=BB6_5 Depth=2
.Ltmp463:
	.loc	11 50 23                # rhs.c:50:23
	leaq	(%rdx,%rdx,4), %rsi
	leaq	(%rcx,%rsi,8), %rdi
	leaq	(%rax,%rdx,8), %rbp
	movl	%r15d, %esi
	subl	%edx, %esi
	xorl	%r8d, %r8d
	.p2align	4, 0x90
.LBB6_7:                                # %for.body8.us
                                        #   Parent Loop BB6_4 Depth=1
                                        #     Parent Loop BB6_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 50 22 is_stmt 0      # rhs.c:50:22
	movapd	%xmm0, %xmm4
	divsd	-24(%rdi), %xmm4
.Ltmp464:
	#DEBUG_VALUE: compute_rhs:rho_inv <- %XMM4
	.loc	11 51 24 is_stmt 1      # rhs.c:51:24
	movsd	%xmm4, rho_i(%rbp,%r8,8)
	.loc	11 52 23                # rhs.c:52:23
	movsd	-16(%rdi), %xmm5        # xmm5 = mem[0],zero
	.loc	11 52 37 is_stmt 0      # rhs.c:52:37
	movapd	%xmm4, %xmm6
	mulsd	%xmm5, %xmm6
	.loc	11 52 21                # rhs.c:52:21
	movsd	%xmm6, us(%rbp,%r8,8)
	.loc	11 53 23 is_stmt 1      # rhs.c:53:23
	movsd	-8(%rdi), %xmm6         # xmm6 = mem[0],zero
	.loc	11 53 37 is_stmt 0      # rhs.c:53:37
	movapd	%xmm4, %xmm7
	mulsd	%xmm6, %xmm7
	.loc	11 53 21                # rhs.c:53:21
	movsd	%xmm7, vs(%rbp,%r8,8)
	.loc	11 54 23 is_stmt 1      # rhs.c:54:23
	movsd	(%rdi), %xmm7           # xmm7 = mem[0],zero
	.loc	11 54 37 is_stmt 0      # rhs.c:54:37
	movapd	%xmm4, %xmm3
	mulsd	%xmm7, %xmm3
	.loc	11 56 26 is_stmt 1      # rhs.c:56:26
	mulsd	%xmm5, %xmm5
	.loc	11 54 21                # rhs.c:54:21
	movsd	%xmm3, ws(%rbp,%r8,8)
	.loc	11 57 26                # rhs.c:57:26
	mulsd	%xmm6, %xmm6
	.loc	11 56 41                # rhs.c:56:41
	addsd	%xmm5, %xmm6
	.loc	11 58 26                # rhs.c:58:26
	mulsd	%xmm7, %xmm7
	.loc	11 57 41                # rhs.c:57:41
	addsd	%xmm6, %xmm7
	.loc	11 55 30                # rhs.c:55:30
	mulsd	%xmm1, %xmm7
	.loc	11 58 43                # rhs.c:58:43
	mulsd	%xmm4, %xmm7
	.loc	11 55 25                # rhs.c:55:25
	movsd	%xmm7, square(%rbp,%r8,8)
	.loc	11 59 39                # rhs.c:59:39
	mulsd	%xmm4, %xmm7
	.loc	11 59 21 is_stmt 0      # rhs.c:59:21
	movsd	%xmm7, qs(%rbp,%r8,8)
.Ltmp465:
	.loc	11 49 7 is_stmt 1 discriminator 1 # rhs.c:49:7
	addq	$40, %rdi
	incq	%r8
	cmpl	%r8d, %esi
	jne	.LBB6_7
.Ltmp466:
.LBB6_11:                               # %for.cond5.for.inc128_crit_edge.us
                                        #   in Loop: Header=BB6_5 Depth=2
	.loc	11 48 5 discriminator 1 # rhs.c:48:5
	incq	%rbx
	addq	$520, %rax              # imm = 0x208
	addq	$2600, %rcx             # imm = 0xA28
	cmpl	%r12d, %ebx
	jne	.LBB6_5
.Ltmp467:
.LBB6_12:                               # %for.inc131
                                        #   in Loop: Header=BB6_4 Depth=1
	.loc	11 47 3 discriminator 1 # rhs.c:47:3
	incq	%r14
	addq	$33800, %r10            # imm = 0x8408
	addq	$169000, %r11           # imm = 0x29428
	movq	16(%rsp), %rdi          # 8-byte Reload
	.loc	11 47 17 is_stmt 0 discriminator 1 # rhs.c:47:17
	cmpq	%rdi, %r14
	jl	.LBB6_4
.Ltmp468:
# BB#13:                                # %for.cond134.preheader
	.loc	11 69 3 is_stmt 1 discriminator 1 # rhs.c:69:3
	testl	%edi, %edi
	jle	.LBB6_18
# BB#14:                                # %for.cond138.preheader.lr.ph
.Ltmp469:
	.loc	11 70 22 discriminator 1 # rhs.c:70:22
	movl	grid_points+4(%rip), %r8d
	.loc	11 70 5 is_stmt 0 discriminator 1 # rhs.c:70:5
	testl	%r8d, %r8d
	jle	.LBB6_18
# BB#15:                                # %for.cond142.preheader.lr.ph.us.preheader
.Ltmp470:
	.loc	11 71 24 is_stmt 1 discriminator 1 # rhs.c:71:24
	movl	grid_points(%rip), %r15d
	.loc	11 71 7 is_stmt 0 discriminator 1 # rhs.c:71:7
	leal	-1(%r15), %r12d
	movl	%r15d, %esi
	andl	$3, %esi
	movl	$forcing, %eax
	movl	$rhs, %r10d
	xorl	%r11d, %r11d
	xorl	%r14d, %r14d
	.p2align	4, 0x90
.LBB6_16:                               # %for.cond142.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_33 Depth 2
                                        #       Child Loop BB6_34 Depth 3
                                        #       Child Loop BB6_37 Depth 3
	movq	%r10, 32(%rsp)          # 8-byte Spill
	movq	%rax, (%rsp)            # 8-byte Spill
	testl	%r15d, %r15d
	movq	%r11, %r9
	movq	%rax, %rdi
	movl	$0, %ecx
	jle	.LBB6_17
	.p2align	4, 0x90
.LBB6_33:                               # %for.cond146.preheader.lr.ph.us.us
                                        #   Parent Loop BB6_16 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_34 Depth 3
                                        #       Child Loop BB6_37 Depth 3
	testl	%esi, %esi
	movq	%r10, %rax
	movq	%rdi, %rdx
	movl	$0, %ebp
	je	.LBB6_35
	.p2align	4, 0x90
.LBB6_34:                               # %for.cond146.preheader.us.us.prol
                                        #   Parent Loop BB6_16 Depth=1
                                        #     Parent Loop BB6_33 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp471:
	.loc	11 73 27 is_stmt 1      # rhs.c:73:27
	movq	32(%rdx), %rbx
	movq	%rbx, 32(%rax)
	movupd	(%rdx), %xmm0
	movupd	16(%rdx), %xmm1
	movupd	%xmm1, 16(%rax)
	movupd	%xmm0, (%rax)
.Ltmp472:
	.loc	11 71 7 discriminator 1 # rhs.c:71:7
	incq	%rbp
	addq	$40, %rdx
	addq	$40, %rax
	cmpl	%ebp, %esi
	jne	.LBB6_34
.LBB6_35:                               # %for.cond146.preheader.lr.ph.us.us.split
                                        #   in Loop: Header=BB6_33 Depth=2
	cmpl	$3, %r12d
	jb	.LBB6_38
# BB#36:                                # %for.cond146.preheader.lr.ph.us.us.split.split
                                        #   in Loop: Header=BB6_33 Depth=2
	movl	%r15d, %eax
	subl	%ebp, %eax
	shlq	$3, %rbp
	leaq	forcing(%rbp,%rbp,4), %rdx
	leaq	rhs(%rbp,%rbp,4), %rbp
	movq	%r9, %r13
	.p2align	4, 0x90
.LBB6_37:                               # %for.cond146.preheader.us.us
                                        #   Parent Loop BB6_16 Depth=1
                                        #     Parent Loop BB6_33 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp473:
	.loc	11 73 27                # rhs.c:73:27
	movq	32(%rdx,%r13), %rbx
	movq	%rbx, 32(%rbp,%r13)
	movups	(%rdx,%r13), %xmm0
	movups	16(%rdx,%r13), %xmm1
	movups	%xmm1, 16(%rbp,%r13)
	movups	%xmm0, (%rbp,%r13)
	movq	72(%rdx,%r13), %rbx
	movq	%rbx, 72(%rbp,%r13)
	movups	40(%rdx,%r13), %xmm0
	movups	56(%rdx,%r13), %xmm1
	movups	%xmm1, 56(%rbp,%r13)
	movups	%xmm0, 40(%rbp,%r13)
	movq	112(%rdx,%r13), %rbx
	movq	%rbx, 112(%rbp,%r13)
	movups	80(%rdx,%r13), %xmm0
	movups	96(%rdx,%r13), %xmm1
	movups	%xmm1, 96(%rbp,%r13)
	movups	%xmm0, 80(%rbp,%r13)
	movq	152(%rdx,%r13), %rbx
	movq	%rbx, 152(%rbp,%r13)
	movupd	120(%rdx,%r13), %xmm0
	movupd	136(%rdx,%r13), %xmm1
	movupd	%xmm1, 136(%rbp,%r13)
	movupd	%xmm0, 120(%rbp,%r13)
.Ltmp474:
	.loc	11 71 7 discriminator 1 # rhs.c:71:7
	addq	$160, %r13
	addl	$-4, %eax
	jne	.LBB6_37
.Ltmp475:
.LBB6_38:                               # %for.cond142.for.inc171_crit_edge.us.us
                                        #   in Loop: Header=BB6_33 Depth=2
	.loc	11 70 5 discriminator 1 # rhs.c:70:5
	incq	%rcx
	addq	$2600, %rdi             # imm = 0xA28
	addq	$2600, %r10             # imm = 0xA28
	addq	$2600, %r9              # imm = 0xA28
	cmpl	%r8d, %ecx
	jne	.LBB6_33
.Ltmp476:
.LBB6_17:                               # %for.cond138.for.inc174_crit_edge.us
                                        #   in Loop: Header=BB6_16 Depth=1
	.loc	11 69 39 discriminator 2 # rhs.c:69:39
	incl	%r14d
.Ltmp477:
	#DEBUG_VALUE: compute_rhs:k <- %R14D
	movq	(%rsp), %rax            # 8-byte Reload
	.loc	11 69 3 is_stmt 0 discriminator 1 # rhs.c:69:3
	addq	$169000, %rax           # imm = 0x29428
	movq	32(%rsp), %r10          # 8-byte Reload
	addq	$169000, %r10           # imm = 0x29428
	addq	$169000, %r11           # imm = 0x29428
	movq	16(%rsp), %rdi          # 8-byte Reload
	.loc	11 69 17 discriminator 1 # rhs.c:69:17
	cmpl	%edi, %r14d
	jl	.LBB6_16
.Ltmp478:
.LBB6_18:                               # %for.end176
	.loc	11 79 7 is_stmt 1       # rhs.c:79:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_20
# BB#19:                                # %if.then178
	.loc	11 79 16 is_stmt 0 discriminator 1 # rhs.c:79:16
	movl	$2, %edi
	callq	timer_start
.Ltmp479:
	.loc	11 83 20 is_stmt 1 discriminator 1 # rhs.c:83:20
	movl	grid_points+8(%rip), %edi
.LBB6_20:                               # %for.cond180.preheader
	.loc	11 83 17 is_stmt 0 discriminator 1 # rhs.c:83:17
	addl	$-2, %edi
	jle	.LBB6_44
# BB#21:                                # %for.cond184.preheader.lr.ph
	.loc	11 83 3 discriminator 1 # rhs.c:83:3
	movslq	grid_points+4(%rip), %r14
.Ltmp480:
	.loc	11 84 36 is_stmt 1 discriminator 1 # rhs.c:84:36
	addq	$-2, %r14
.Ltmp481:
	.loc	11 173 37               # rhs.c:173:37
	movslq	grid_points(%rip), %rsi
.Ltmp482:
	.loc	11 169 25               # rhs.c:169:25
	leal	-3(%rsi), %eax
.Ltmp483:
	#DEBUG_VALUE: compute_rhs:i <- %EAX
	.loc	11 171 27               # rhs.c:171:27
	movslq	%eax, %rcx
	.loc	11 171 45 is_stmt 0     # rhs.c:171:45
	movsd	dssp(%rip), %xmm1       # xmm1 = mem[0],zero
	.loc	11 172 44 is_stmt 1     # rhs.c:172:44
	movapd	%xmm1, 48(%rsp)         # 16-byte Spill
	leal	-4(%rsi), %eax
.Ltmp484:
	.loc	11 173 46               # rhs.c:173:46
	movl	%eax, 96(%rsp)          # 4-byte Spill
	leaq	(,%rsi,8), %rax
.Ltmp485:
	.loc	11 83 3 discriminator 1 # rhs.c:83:3
	leal	-6(%rsi), %edx
.Ltmp486:
	.loc	11 173 46               # rhs.c:173:46
	movl	%edx, 128(%rsp)         # 4-byte Spill
	addq	$-2, %rsi
.Ltmp487:
	#DEBUG_VALUE: compute_rhs:i <- %ESI
	.loc	11 93 11                # rhs.c:93:11
	movsd	tx2(%rip), %xmm2        # xmm2 = mem[0],zero
	.loc	11 95 45                # rhs.c:95:45
	movapd	%xmm2, 336(%rsp)        # 16-byte Spill
	movsd	dx2tx1(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 98 11                # rhs.c:98:11
	movsd	%xmm0, 16(%rsp)         # 8-byte Spill
	movsd	xxcon2(%rip), %xmm3     # xmm3 = mem[0],zero
	movsd	con43(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	11 98 17 is_stmt 0      # rhs.c:98:17
	mulsd	%xmm3, %xmm0
	.loc	11 103 15 is_stmt 1     # rhs.c:103:15
	movsd	c2(%rip), %xmm4         # xmm4 = mem[0],zero
	.loc	11 121 45               # rhs.c:121:45
	movsd	%xmm4, 224(%rsp)        # 8-byte Spill
	movsd	dx5tx1(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	11 124 11               # rhs.c:124:11
	movsd	%xmm4, 320(%rsp)        # 8-byte Spill
	movsd	xxcon3(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	11 126 11               # rhs.c:126:11
	movsd	%xmm4, 304(%rsp)        # 8-byte Spill
	movsd	xxcon4(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	11 128 11               # rhs.c:128:11
	movsd	%xmm4, 288(%rsp)        # 8-byte Spill
	movsd	xxcon5(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	11 131 20               # rhs.c:131:20
	movsd	%xmm4, 272(%rsp)        # 8-byte Spill
	movsd	c1(%rip), %xmm4         # xmm4 = mem[0],zero
.Ltmp488:
	.loc	11 83 3 discriminator 1 # rhs.c:83:3
	movsd	%xmm4, 256(%rsp)        # 8-byte Spill
	movslq	%edi, %rdx
.Ltmp489:
	.loc	11 90 52                # rhs.c:90:52
	movq	%rdx, 112(%rsp)         # 8-byte Spill
	movsd	dx1tx1(%rip), %xmm4     # xmm4 = mem[0],zero
	unpcklpd	%xmm0, %xmm4    # xmm4 = xmm4[0],xmm0[0]
	movapd	%xmm4, 208(%rsp)        # 16-byte Spill
	.loc	11 93 15                # rhs.c:93:15
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 192(%rsp)        # 16-byte Spill
	.loc	11 105 52               # rhs.c:105:52
	movsd	dx3tx1(%rip), %xmm0     # xmm0 = mem[0],zero
	movhpd	dx4tx1(%rip), %xmm0     # xmm0 = xmm0[0],mem[0]
	movapd	%xmm0, 176(%rsp)        # 16-byte Spill
	.loc	11 108 18               # rhs.c:108:18
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 240(%rsp)        # 16-byte Spill
.Ltmp490:
	.loc	11 144 49               # rhs.c:144:49
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp491:
	.loc	11 83 3 discriminator 1 # rhs.c:83:3
	movaps	%xmm0, 160(%rsp)        # 16-byte Spill
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,4), %rcx
	movq	%rcx, 80(%rsp)          # 8-byte Spill
	leaq	u+171432(%rax,%rax,4), %rcx
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	leaq	u+171472(%rax,%rax,4), %r12
	leaq	171520(%rax,%rax,4), %rax
	movq	%rax, 64(%rsp)          # 8-byte Spill
	movl	$1, %r11d
	movl	$171640, %r13d          # imm = 0x29E78
	xorl	%r15d, %r15d
	xorl	%r10d, %r10d
.Ltmp492:
	.p2align	4, 0x90
.LBB6_22:                               # %for.cond184.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_23 Depth 2
                                        #       Child Loop BB6_25 Depth 3
                                        #     Child Loop BB6_28 Depth 2
                                        #     Child Loop BB6_39 Depth 2
                                        #       Child Loop BB6_40 Depth 3
                                        #     Child Loop BB6_32 Depth 2
	testl	%r14d, %r14d
	movq	%r10, %r8
	movl	$1, %edi
	jle	.LBB6_43
	.p2align	4, 0x90
.LBB6_23:                               # %for.cond188.preheader
                                        #   Parent Loop BB6_22 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_25 Depth 3
	testl	%esi, %esi
	movapd	240(%rsp), %xmm6        # 16-byte Reload
	movsd	224(%rsp), %xmm7        # 8-byte Reload
                                        # xmm7 = mem[0],zero
	movapd	208(%rsp), %xmm14       # 16-byte Reload
	movapd	192(%rsp), %xmm10       # 16-byte Reload
	movapd	176(%rsp), %xmm12       # 16-byte Reload
	movsd	.LCPI6_4(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm2
	jle	.LBB6_26
# BB#24:                                # %for.body191.lr.ph
                                        #   in Loop: Header=BB6_23 Depth=2
.Ltmp493:
	.loc	11 102 16               # rhs.c:102:16
	imulq	$2600, %rdi, %rax       # imm = 0xA28
	imulq	$169000, %r11, %rcx     # imm = 0x29428
	movsd	u+32(%rcx,%rax), %xmm5  # xmm5 = mem[0],zero
	.loc	11 114 34               # rhs.c:114:34
	movsd	u+64(%rcx,%rax), %xmm11 # xmm11 = mem[0],zero
	movq	%r8, %rbp
	xorl	%r9d, %r9d
	.p2align	4, 0x90
.LBB6_25:                               # %for.body191
                                        #   Parent Loop BB6_22 Depth=1
                                        #     Parent Loop BB6_23 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 86 16                # rhs.c:86:16
	movsd	us+34328(%rbp), %xmm4   # xmm4 = mem[0],zero
.Ltmp494:
	#DEBUG_VALUE: compute_rhs:uijk <- %XMM4
	.loc	11 87 16                # rhs.c:87:16
	movapd	%xmm4, (%rsp)           # 16-byte Spill
	movsd	us+34336(%rbp), %xmm15  # xmm15 = mem[0],zero
.Ltmp495:
	#DEBUG_VALUE: compute_rhs:up1 <- %XMM15
	.loc	11 88 16                # rhs.c:88:16
	movsd	us+34320(%rbp), %xmm8   # xmm8 = mem[0],zero
.Ltmp496:
	#DEBUG_VALUE: compute_rhs:um1 <- %XMM8
	.loc	11 93 18                # rhs.c:93:18
	movsd	u+171688(%rbp,%rbp,4), %xmm1 # xmm1 = mem[0],zero
	.loc	11 93 36 is_stmt 0      # rhs.c:93:36
	movsd	u+171608(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171648(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	.loc	11 96 33 is_stmt 1      # rhs.c:96:33
	mulsd	%xmm2, %xmm3
	.loc	11 96 28 is_stmt 0      # rhs.c:96:28
	addsd	%xmm1, %xmm3
	.loc	11 96 48                # rhs.c:96:48
	addsd	%xmm0, %xmm3
	movsd	16(%rsp), %xmm2         # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	11 95 52 is_stmt 1      # rhs.c:95:52
	mulsd	%xmm2, %xmm3
	.loc	11 95 43 is_stmt 0      # rhs.c:95:43
	addsd	rhs+171648(%rbp,%rbp,4), %xmm3
	.loc	11 91 33 is_stmt 1      # rhs.c:91:33
	movsd	u+171640(%rbp,%rbp,4), %xmm13 # xmm13 = mem[0],zero
	unpcklpd	%xmm4, %xmm13   # xmm13 = xmm13[0],xmm4[0]
.Ltmp497:
	#DEBUG_VALUE: compute_rhs:uijk <- [%RSP+0]
	addpd	%xmm13, %xmm13
	.loc	11 91 28 is_stmt 0      # rhs.c:91:28
	movsd	u+171680(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	unpcklpd	%xmm15, %xmm2   # xmm2 = xmm2[0],xmm15[0]
	subpd	%xmm13, %xmm2
	.loc	11 91 48                # rhs.c:91:48
	movsd	u+171600(%rbp,%rbp,4), %xmm4 # xmm4 = mem[0],zero
	unpcklpd	%xmm8, %xmm4    # xmm4 = xmm4[0],xmm8[0]
	addpd	%xmm2, %xmm4
	.loc	11 90 52 is_stmt 1      # rhs.c:90:52
	mulpd	%xmm14, %xmm4
	.loc	11 90 43 is_stmt 0      # rhs.c:90:43
	movsd	rhs+171640(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	addpd	%xmm4, %xmm2
	.loc	11 99 33 is_stmt 1      # rhs.c:99:33
	movapd	%xmm15, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	11 100 30               # rhs.c:100:30
	movapd	%xmm8, %xmm4
	mulsd	%xmm0, %xmm4
	.loc	11 99 38                # rhs.c:99:38
	subsd	%xmm4, %xmm3
	.loc	11 101 16               # rhs.c:101:16
	movsd	u+171712(%rbp,%rbp,4), %xmm9 # xmm9 = mem[0],zero
	.loc	11 101 31 is_stmt 0     # rhs.c:101:31
	movapd	%xmm9, %xmm4
	subsd	square+34336(%rbp), %xmm4
	.loc	11 101 50               # rhs.c:101:50
	subsd	%xmm5, %xmm4
	.loc	11 102 31 is_stmt 1     # rhs.c:102:31
	addsd	square+34320(%rbp), %xmm4
	.loc	11 102 51 is_stmt 0     # rhs.c:102:51
	mulsd	%xmm7, %xmm4
	.loc	11 93 34 is_stmt 1      # rhs.c:93:34
	unpcklpd	%xmm3, %xmm1    # xmm1 = xmm1[0],xmm3[0]
	unpcklpd	%xmm4, %xmm0    # xmm0 = xmm0[0],xmm4[0]
	movapd	%xmm1, %xmm3
	subpd	%xmm0, %xmm3
	addpd	%xmm1, %xmm0
	movsd	%xmm3, %xmm0            # xmm0 = xmm3[0],xmm0[1]
	.loc	11 93 15 is_stmt 0      # rhs.c:93:15
	mulpd	%xmm10, %xmm0
	.loc	11 92 29 is_stmt 1      # rhs.c:92:29
	subpd	%xmm0, %xmm2
	.loc	11 90 25                # rhs.c:90:25
	movupd	%xmm2, rhs+171640(%rbp,%rbp,4)
	.loc	11 105 27               # rhs.c:105:27
	movupd	rhs+171656(%rbp,%rbp,4), %xmm1
	.loc	11 106 33               # rhs.c:106:33
	movsd	u+171656(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	unpcklpd	%xmm11, %xmm0   # xmm0 = xmm0[0],xmm11[0]
	.loc	11 106 12 is_stmt 0     # rhs.c:106:12
	movupd	u+171696(%rbp,%rbp,4), %xmm11
	.loc	11 106 33               # rhs.c:106:33
	addpd	%xmm0, %xmm0
	.loc	11 106 28               # rhs.c:106:28
	movapd	%xmm11, %xmm2
	subpd	%xmm0, %xmm2
	.loc	11 107 12 is_stmt 1     # rhs.c:107:12
	movupd	u+171616(%rbp,%rbp,4), %xmm0
	.loc	11 106 48               # rhs.c:106:48
	addpd	%xmm0, %xmm2
	.loc	11 105 52               # rhs.c:105:52
	mulpd	%xmm12, %xmm2
	.loc	11 105 43 is_stmt 0     # rhs.c:105:43
	addpd	%xmm1, %xmm2
	.loc	11 108 40 is_stmt 1     # rhs.c:108:40
	movsd	vs+34328(%rbp), %xmm1   # xmm1 = mem[0],zero
	movhpd	ws+34328(%rbp), %xmm1   # xmm1 = xmm1[0],mem[0]
	addpd	%xmm1, %xmm1
	.loc	11 108 35 is_stmt 0     # rhs.c:108:35
	movsd	vs+34336(%rbp), %xmm3   # xmm3 = mem[0],zero
	movhpd	ws+34336(%rbp), %xmm3   # xmm3 = xmm3[0],mem[0]
	subpd	%xmm1, %xmm3
	.loc	11 108 53               # rhs.c:108:53
	movsd	vs+34320(%rbp), %xmm1   # xmm1 = mem[0],zero
	movhpd	ws+34320(%rbp), %xmm1   # xmm1 = xmm1[0],mem[0]
	addpd	%xmm3, %xmm1
	.loc	11 108 18               # rhs.c:108:18
	mulpd	%xmm6, %xmm1
	.loc	11 107 29 is_stmt 1     # rhs.c:107:29
	addpd	%xmm2, %xmm1
	.loc	11 110 33               # rhs.c:110:33
	movapd	%xmm15, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm11, %xmm2
	.loc	11 111 30               # rhs.c:111:30
	movapd	%xmm8, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm0, %xmm3
	.loc	11 110 38               # rhs.c:110:38
	subpd	%xmm3, %xmm2
	.loc	11 110 15 is_stmt 0     # rhs.c:110:15
	mulpd	%xmm10, %xmm2
	.loc	11 109 30 is_stmt 1     # rhs.c:109:30
	subpd	%xmm2, %xmm1
	.loc	11 105 25               # rhs.c:105:25
	movupd	%xmm1, rhs+171656(%rbp,%rbp,4)
	.loc	11 122 34               # rhs.c:122:34
	movsd	u+171672(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	.loc	11 122 33 is_stmt 0     # rhs.c:122:33
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	addsd	%xmm0, %xmm0
	.loc	11 122 28               # rhs.c:122:28
	movapd	%xmm9, %xmm3
	subsd	%xmm0, %xmm3
	.loc	11 123 12 is_stmt 1     # rhs.c:123:12
	movsd	u+171632(%rbp,%rbp,4), %xmm1 # xmm1 = mem[0],zero
	.loc	11 122 48               # rhs.c:122:48
	addsd	%xmm1, %xmm3
	movsd	320(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	11 121 52               # rhs.c:121:52
	mulsd	%xmm2, %xmm3
	.loc	11 121 43 is_stmt 0     # rhs.c:121:43
	addsd	rhs+171672(%rbp,%rbp,4), %xmm3
	.loc	11 124 21 is_stmt 1     # rhs.c:124:21
	movsd	qs+34336(%rbp), %xmm2   # xmm2 = mem[0],zero
	.loc	11 124 41 is_stmt 0     # rhs.c:124:41
	movsd	qs+34328(%rbp), %xmm4   # xmm4 = mem[0],zero
	.loc	11 124 40               # rhs.c:124:40
	addsd	%xmm4, %xmm4
	.loc	11 124 35               # rhs.c:124:35
	subsd	%xmm4, %xmm2
	.loc	11 124 53               # rhs.c:124:53
	addsd	qs+34320(%rbp), %xmm2
	.loc	11 124 18               # rhs.c:124:18
	mulsd	304(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	11 123 29 is_stmt 1     # rhs.c:123:29
	addsd	%xmm3, %xmm2
	movsd	rho_i+34336(%rbp), %xmm3 # xmm3 = mem[0],zero
	.loc	11 128 36               # rhs.c:128:36
	mulsd	%xmm9, %xmm3
	movsd	256(%rsp), %xmm5        # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	11 131 22               # rhs.c:131:22
	mulsd	%xmm5, %xmm9
	movsd	square+34336(%rbp), %xmm4 # xmm4 = mem[0],zero
	.loc	11 132 19               # rhs.c:132:19
	mulsd	%xmm7, %xmm4
	.loc	11 131 39               # rhs.c:131:39
	subsd	%xmm4, %xmm9
	.loc	11 132 38               # rhs.c:132:38
	mulsd	%xmm15, %xmm9
	.loc	11 126 24               # rhs.c:126:24
	mulsd	%xmm15, %xmm15
.Ltmp498:
	.loc	11 126 45 is_stmt 0     # rhs.c:126:45
	shufpd	$1, %xmm13, %xmm13      # xmm13 = xmm13[1,0]
	mulsd	(%rsp), %xmm13          # 16-byte Folded Reload
	.loc	11 126 29               # rhs.c:126:29
	subsd	%xmm13, %xmm15
	movsd	rho_i+34320(%rbp), %xmm4 # xmm4 = mem[0],zero
	.loc	11 130 30 is_stmt 1     # rhs.c:130:30
	mulsd	%xmm1, %xmm4
	.loc	11 133 18               # rhs.c:133:18
	mulsd	%xmm5, %xmm1
	movsd	square+34320(%rbp), %xmm5 # xmm5 = mem[0],zero
	.loc	11 134 18               # rhs.c:134:18
	mulsd	%xmm7, %xmm5
	.loc	11 133 35               # rhs.c:133:35
	subsd	%xmm5, %xmm1
	movsd	288(%rsp), %xmm5        # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	11 134 37               # rhs.c:134:37
	mulsd	%xmm8, %xmm1
	.loc	11 127 18               # rhs.c:127:18
	mulsd	%xmm8, %xmm8
.Ltmp499:
	.loc	11 126 51               # rhs.c:126:51
	addsd	%xmm15, %xmm8
	.loc	11 126 18 is_stmt 0     # rhs.c:126:18
	mulsd	%xmm5, %xmm8
	movsd	32(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	11 125 30 is_stmt 1     # rhs.c:125:30
	addsd	%xmm2, %xmm8
	movsd	272(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	11 129 32               # rhs.c:129:32
	mulsd	rho_i+34328(%rbp), %xmm0
	.loc	11 128 54               # rhs.c:128:54
	subsd	%xmm0, %xmm3
	.loc	11 129 48               # rhs.c:129:48
	addsd	%xmm3, %xmm4
	.loc	11 128 18               # rhs.c:128:18
	mulsd	%xmm2, %xmm4
	movsd	.LCPI6_4(%rip), %xmm2   # xmm2 = mem[0],zero
	.loc	11 127 24               # rhs.c:127:24
	addsd	%xmm8, %xmm4
	.loc	11 132 43               # rhs.c:132:43
	subsd	%xmm1, %xmm9
	movapd	336(%rsp), %xmm0        # 16-byte Reload
	.loc	11 131 15               # rhs.c:131:15
	mulsd	%xmm0, %xmm9
	.loc	11 130 49               # rhs.c:130:49
	subsd	%xmm9, %xmm4
	.loc	11 121 25               # rhs.c:121:25
	movsd	%xmm4, rhs+171672(%rbp,%rbp,4)
.Ltmp500:
	.loc	11 85 7 discriminator 1 # rhs.c:85:7
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	.loc	11 85 21 is_stmt 0 discriminator 1 # rhs.c:85:21
	incq	%r9
	addq	$8, %rbp
	cmpq	%rsi, %r9
	.loc	11 85 7 discriminator 1 # rhs.c:85:7
	jl	.LBB6_25
.Ltmp501:
.LBB6_26:                               # %for.inc723
                                        #   in Loop: Header=BB6_23 Depth=2
	.loc	11 84 5 is_stmt 1 discriminator 1 # rhs.c:84:5
	addq	$520, %r8               # imm = 0x208
	.loc	11 84 19 is_stmt 0 discriminator 1 # rhs.c:84:19
	cmpq	%r14, %rdi
	.loc	11 84 5 discriminator 1 # rhs.c:84:5
	leaq	1(%rdi), %rdi
	movapd	160(%rsp), %xmm15       # 16-byte Reload
.Ltmp502:
	.loc	11 145 36 is_stmt 1     # rhs.c:145:36
	movapd	.LCPI6_6(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	jl	.LBB6_23
# BB#27:                                # %for.cond726.preheader
                                        #   in Loop: Header=BB6_22 Depth=1
	testl	%r14d, %r14d
	movq	%r13, %rdi
	movl	$0, %ebp
	jle	.LBB6_43
	.p2align	4, 0x90
.LBB6_28:                               # %for.cond730.preheader
                                        #   Parent Loop BB6_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 144 27               # rhs.c:144:27
	movupd	rhs(%rdi), %xmm1
	.loc	11 145 17               # rhs.c:145:17
	movupd	u(%rdi), %xmm8
	.loc	11 145 16 is_stmt 0     # rhs.c:145:16
	movapd	%xmm8, %xmm2
	movapd	.LCPI6_5(%rip), %xmm0   # xmm0 = [5.000000e+00,5.000000e+00]
	movapd	%xmm0, %xmm3
	mulpd	%xmm3, %xmm2
	.loc	11 145 37               # rhs.c:145:37
	movupd	u+40(%rdi), %xmm0
	.loc	11 145 36               # rhs.c:145:36
	movapd	%xmm0, %xmm4
	mulpd	%xmm10, %xmm4
	.loc	11 145 31               # rhs.c:145:31
	subpd	%xmm4, %xmm2
	.loc	11 146 13 is_stmt 1     # rhs.c:146:13
	movupd	u+80(%rdi), %xmm5
	.loc	11 145 53               # rhs.c:145:53
	addpd	%xmm5, %xmm2
	.loc	11 144 49               # rhs.c:144:49
	mulpd	%xmm15, %xmm2
	.loc	11 144 42 is_stmt 0     # rhs.c:144:42
	subpd	%xmm2, %xmm1
	.loc	11 144 25               # rhs.c:144:25
	movupd	%xmm1, rhs(%rdi)
	.loc	11 144 27               # rhs.c:144:27
	movupd	rhs+16(%rdi), %xmm1
	.loc	11 145 17 is_stmt 1     # rhs.c:145:17
	movupd	u+16(%rdi), %xmm7
	.loc	11 145 16 is_stmt 0     # rhs.c:145:16
	movapd	%xmm7, %xmm4
	mulpd	%xmm3, %xmm4
	.loc	11 145 37               # rhs.c:145:37
	movupd	u+56(%rdi), %xmm6
	.loc	11 145 36               # rhs.c:145:36
	movapd	%xmm6, %xmm2
	mulpd	%xmm10, %xmm2
	.loc	11 145 31               # rhs.c:145:31
	subpd	%xmm2, %xmm4
	.loc	11 146 13 is_stmt 1     # rhs.c:146:13
	movupd	u+96(%rdi), %xmm2
	.loc	11 145 53               # rhs.c:145:53
	addpd	%xmm2, %xmm4
	.loc	11 144 49               # rhs.c:144:49
	mulpd	%xmm15, %xmm4
	.loc	11 144 42 is_stmt 0     # rhs.c:144:42
	subpd	%xmm4, %xmm1
	.loc	11 144 25               # rhs.c:144:25
	movupd	%xmm1, rhs+16(%rdi)
	.loc	11 145 17 is_stmt 1     # rhs.c:145:17
	movsd	u+32(%rdi), %xmm1       # xmm1 = mem[0],zero
.Ltmp503:
	.loc	11 152 16               # rhs.c:152:16
	movapd	%xmm8, %xmm4
	shufpd	$1, %xmm7, %xmm8        # xmm8 = xmm8[1],xmm7[0]
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	unpcklpd	%xmm1, %xmm7    # xmm7 = xmm7[0],xmm1[0]
.Ltmp504:
	.loc	11 145 16               # rhs.c:145:16
	mulsd	.LCPI6_7(%rip), %xmm1
.Ltmp505:
	.loc	11 152 16               # rhs.c:152:16
	mulsd	.LCPI6_8(%rip), %xmm4
	.loc	11 152 38 is_stmt 0     # rhs.c:152:38
	movapd	%xmm0, %xmm3
	mulsd	.LCPI6_9(%rip), %xmm3
	.loc	11 152 16               # rhs.c:152:16
	subsd	%xmm4, %xmm3
.Ltmp506:
	.loc	11 144 27 is_stmt 1     # rhs.c:144:27
	movupd	rhs+32(%rdi), %xmm4
	.loc	11 145 31               # rhs.c:145:31
	unpcklpd	%xmm3, %xmm1    # xmm1 = xmm1[0],xmm3[0]
	.loc	11 145 36 is_stmt 0     # rhs.c:145:36
	movsd	u+72(%rdi), %xmm3       # xmm3 = mem[0],zero
.Ltmp507:
	.loc	11 152 38 is_stmt 1     # rhs.c:152:38
	shufpd	$1, %xmm6, %xmm0        # xmm0 = xmm0[1],xmm6[0]
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	unpcklpd	%xmm3, %xmm6    # xmm6 = xmm6[0],xmm3[0]
.Ltmp508:
	.loc	11 145 36               # rhs.c:145:36
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	mulpd	%xmm10, %xmm3
	.loc	11 145 31 is_stmt 0     # rhs.c:145:31
	subpd	%xmm3, %xmm1
	.loc	11 146 13 is_stmt 1     # rhs.c:146:13
	movupd	u+112(%rdi), %xmm3
	.loc	11 145 53               # rhs.c:145:53
	addpd	%xmm3, %xmm1
	.loc	11 144 49               # rhs.c:144:49
	mulpd	%xmm15, %xmm1
	.loc	11 144 42 is_stmt 0     # rhs.c:144:42
	subpd	%xmm1, %xmm4
	.loc	11 144 25               # rhs.c:144:25
	movupd	%xmm4, rhs+32(%rdi)
.Ltmp509:
	.loc	11 152 16 is_stmt 1     # rhs.c:152:16
	mulpd	%xmm10, %xmm8
	.loc	11 152 38 is_stmt 0     # rhs.c:152:38
	movapd	.LCPI6_10(%rip), %xmm1  # xmm1 = [6.000000e+00,6.000000e+00]
	movapd	%xmm1, %xmm4
	mulpd	%xmm4, %xmm0
	.loc	11 152 16               # rhs.c:152:16
	subpd	%xmm8, %xmm0
	.loc	11 153 15 is_stmt 1     # rhs.c:153:15
	shufpd	$1, %xmm2, %xmm5        # xmm5 = xmm5[1],xmm2[0]
	mulpd	%xmm10, %xmm5
	.loc	11 152 53               # rhs.c:152:53
	subpd	%xmm5, %xmm0
	.loc	11 153 34               # rhs.c:153:34
	movupd	u+128(%rdi), %xmm1
	.loc	11 153 32 is_stmt 0     # rhs.c:153:32
	addpd	%xmm0, %xmm1
	.loc	11 151 27 is_stmt 1     # rhs.c:151:27
	movupd	rhs+48(%rdi), %xmm0
	.loc	11 151 50 is_stmt 0     # rhs.c:151:50
	mulpd	%xmm15, %xmm1
	.loc	11 151 43               # rhs.c:151:43
	subpd	%xmm1, %xmm0
	.loc	11 151 25               # rhs.c:151:25
	movupd	%xmm0, rhs+48(%rdi)
	.loc	11 152 16 is_stmt 1     # rhs.c:152:16
	mulpd	%xmm10, %xmm7
	.loc	11 152 38 is_stmt 0     # rhs.c:152:38
	mulpd	%xmm4, %xmm6
	.loc	11 152 16               # rhs.c:152:16
	subpd	%xmm7, %xmm6
	.loc	11 153 15 is_stmt 1     # rhs.c:153:15
	shufpd	$1, %xmm3, %xmm2        # xmm2 = xmm2[1],xmm3[0]
	mulpd	%xmm10, %xmm2
	.loc	11 152 53               # rhs.c:152:53
	subpd	%xmm2, %xmm6
	.loc	11 153 34               # rhs.c:153:34
	movupd	u+144(%rdi), %xmm0
	.loc	11 153 32 is_stmt 0     # rhs.c:153:32
	addpd	%xmm6, %xmm0
	.loc	11 151 27 is_stmt 1     # rhs.c:151:27
	movupd	rhs+64(%rdi), %xmm1
	.loc	11 151 50 is_stmt 0     # rhs.c:151:50
	mulpd	%xmm15, %xmm0
	.loc	11 151 43               # rhs.c:151:43
	subpd	%xmm0, %xmm1
	.loc	11 151 25               # rhs.c:151:25
	movupd	%xmm1, rhs+64(%rdi)
.Ltmp510:
	.loc	11 141 19 is_stmt 1 discriminator 1 # rhs.c:141:19
	incq	%rbp
	addq	$2600, %rdi             # imm = 0xA28
	cmpq	%r14, %rbp
	.loc	11 141 5 is_stmt 0 discriminator 1 # rhs.c:141:5
	jl	.LBB6_28
.Ltmp511:
# BB#29:                                # %for.cond852.preheader
                                        #   in Loop: Header=BB6_22 Depth=1
	testl	%r14d, %r14d
	jle	.LBB6_43
# BB#30:                                # %for.cond856.preheader.lr.ph
                                        #   in Loop: Header=BB6_22 Depth=1
.Ltmp512:
	.loc	11 158 7 is_stmt 1 discriminator 1 # rhs.c:158:7
	cmpl	$2, 96(%rsp)            # 4-byte Folded Reload
	movq	%r15, %rbx
	movl	$1, %ebp
	jle	.LBB6_31
	.p2align	4, 0x90
.LBB6_39:                               # %for.cond860.preheader.lr.ph
                                        #   Parent Loop BB6_22 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_40 Depth 3
.Ltmp513:
	.loc	11 162 40               # rhs.c:162:40
	imulq	$2600, %rbp, %rax       # imm = 0xA28
	imulq	$169000, %r11, %rcx     # imm = 0x29428
	.loc	11 161 16               # rhs.c:161:16
	movsd	u+48(%rcx,%rax), %xmm9  # xmm9 = mem[0],zero
	.loc	11 161 38 is_stmt 0     # rhs.c:161:38
	movsd	u+88(%rcx,%rax), %xmm11 # xmm11 = mem[0],zero
	.loc	11 162 20 is_stmt 1     # rhs.c:162:20
	movsd	u+128(%rcx,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	11 162 40 is_stmt 0     # rhs.c:162:40
	movupd	u+160(%rcx,%rax), %xmm0
	.loc	11 161 16 is_stmt 1     # rhs.c:161:16
	movupd	u+56(%rcx,%rax), %xmm3
	.loc	11 161 38 is_stmt 0     # rhs.c:161:38
	movupd	u+96(%rcx,%rax), %xmm13
	.loc	11 162 20 is_stmt 1     # rhs.c:162:20
	movupd	u+136(%rcx,%rax), %xmm14
	.loc	11 162 40 is_stmt 0     # rhs.c:162:40
	movupd	u+176(%rcx,%rax), %xmm7
	.loc	11 161 16 is_stmt 1     # rhs.c:161:16
	movsd	u+72(%rcx,%rax), %xmm2  # xmm2 = mem[0],zero
	.loc	11 161 38 is_stmt 0     # rhs.c:161:38
	movsd	u+112(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	movl	128(%rsp), %ecx         # 4-byte Reload
	movq	%rbx, %rdi
	movsd	.LCPI6_8(%rip), %xmm8   # xmm8 = mem[0],zero
	movapd	%xmm15, %xmm12
.Ltmp514:
	.loc	11 152 38 is_stmt 1     # rhs.c:152:38
	movapd	.LCPI6_10(%rip), %xmm15 # xmm15 = [6.000000e+00,6.000000e+00]
.Ltmp515:
	.p2align	4, 0x90
.LBB6_40:                               # %for.cond860.preheader
                                        #   Parent Loop BB6_22 Depth=1
                                        #     Parent Loop BB6_39 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 161 32               # rhs.c:161:32
	movsd	u+171640(%rdi), %xmm6   # xmm6 = mem[0],zero
	unpcklpd	%xmm9, %xmm6    # xmm6 = xmm6[0],xmm9[0]
	.loc	11 161 37 is_stmt 0     # rhs.c:161:37
	movapd	%xmm11, (%rsp)          # 16-byte Spill
	movsd	u+171680(%rdi), %xmm5   # xmm5 = mem[0],zero
	unpcklpd	%xmm11, %xmm5   # xmm5 = xmm5[0],xmm11[0]
	.loc	11 162 20 is_stmt 1     # rhs.c:162:20
	movapd	%xmm4, %xmm11
	.loc	11 161 38               # rhs.c:161:38
	movapd	%xmm1, %xmm9
	.loc	11 160 29               # rhs.c:160:29
	movupd	rhs+171720(%rdi), %xmm1
	.loc	11 161 37               # rhs.c:161:37
	mulpd	%xmm10, %xmm5
	.loc	11 161 32 is_stmt 0     # rhs.c:161:32
	subpd	%xmm5, %xmm6
	.loc	11 162 19 is_stmt 1     # rhs.c:162:19
	movsd	u+171720(%rdi), %xmm4   # xmm4 = mem[0],zero
	unpcklpd	%xmm11, %xmm4   # xmm4 = xmm4[0],xmm11[0]
	mulpd	%xmm15, %xmm4
	.loc	11 161 54               # rhs.c:161:54
	addpd	%xmm6, %xmm4
	.loc	11 162 39               # rhs.c:162:39
	movapd	%xmm0, %xmm5
	mulpd	%xmm10, %xmm5
	.loc	11 162 34 is_stmt 0     # rhs.c:162:34
	subpd	%xmm5, %xmm4
	movapd	%xmm10, %xmm5
	.loc	11 163 16 is_stmt 1     # rhs.c:163:16
	movupd	u+171800(%rdi), %xmm10
	.loc	11 162 56               # rhs.c:162:56
	addpd	%xmm10, %xmm4
	.loc	11 160 52               # rhs.c:160:52
	mulpd	%xmm12, %xmm4
	.loc	11 160 45 is_stmt 0     # rhs.c:160:45
	subpd	%xmm4, %xmm1
	.loc	11 160 27               # rhs.c:160:27
	movupd	%xmm1, rhs+171720(%rdi)
	.loc	11 160 29               # rhs.c:160:29
	movupd	rhs+171736(%rdi), %xmm1
	.loc	11 161 37 is_stmt 1     # rhs.c:161:37
	movapd	%xmm13, %xmm4
	mulpd	%xmm5, %xmm4
	.loc	11 161 32 is_stmt 0     # rhs.c:161:32
	subpd	%xmm4, %xmm3
	.loc	11 162 19 is_stmt 1     # rhs.c:162:19
	movapd	%xmm14, %xmm4
	mulpd	%xmm15, %xmm4
	.loc	11 161 54               # rhs.c:161:54
	addpd	%xmm3, %xmm4
	.loc	11 162 39               # rhs.c:162:39
	movapd	%xmm7, %xmm3
	mulpd	%xmm5, %xmm3
	.loc	11 162 34 is_stmt 0     # rhs.c:162:34
	subpd	%xmm3, %xmm4
	.loc	11 163 16 is_stmt 1     # rhs.c:163:16
	movupd	u+171816(%rdi), %xmm6
	.loc	11 162 56               # rhs.c:162:56
	addpd	%xmm6, %xmm4
	.loc	11 160 52               # rhs.c:160:52
	mulpd	%xmm12, %xmm4
	.loc	11 160 45 is_stmt 0     # rhs.c:160:45
	subpd	%xmm4, %xmm1
	.loc	11 160 27               # rhs.c:160:27
	movupd	%xmm1, rhs+171736(%rdi)
	movapd	%xmm9, %xmm4
	.loc	11 161 37 is_stmt 1     # rhs.c:161:37
	movapd	%xmm4, %xmm1
	mulsd	%xmm8, %xmm1
	.loc	11 161 32 is_stmt 0     # rhs.c:161:32
	subsd	%xmm1, %xmm2
	.loc	11 162 20 is_stmt 1     # rhs.c:162:20
	movsd	u+171752(%rdi), %xmm1   # xmm1 = mem[0],zero
	.loc	11 162 19 is_stmt 0     # rhs.c:162:19
	movapd	%xmm1, %xmm3
	mulsd	.LCPI6_9(%rip), %xmm3
	.loc	11 161 54 is_stmt 1     # rhs.c:161:54
	addsd	%xmm2, %xmm3
	movsd	u+171792(%rdi), %xmm2   # xmm2 = mem[0],zero
	.loc	11 162 39               # rhs.c:162:39
	mulsd	%xmm8, %xmm2
	.loc	11 162 34 is_stmt 0     # rhs.c:162:34
	subsd	%xmm2, %xmm3
	.loc	11 160 29 is_stmt 1     # rhs.c:160:29
	movsd	rhs+171752(%rdi), %xmm2 # xmm2 = mem[0],zero
	.loc	11 162 56               # rhs.c:162:56
	addsd	u+171832(%rdi), %xmm3
	.loc	11 160 52               # rhs.c:160:52
	mulsd	48(%rsp), %xmm3         # 16-byte Folded Reload
	.loc	11 160 45 is_stmt 0     # rhs.c:160:45
	subsd	%xmm3, %xmm2
	.loc	11 160 27               # rhs.c:160:27
	movsd	%xmm2, rhs+171752(%rdi)
	.loc	11 161 16 is_stmt 1     # rhs.c:161:16
	movapd	%xmm13, %xmm3
	.loc	11 161 38 is_stmt 0     # rhs.c:161:38
	movapd	%xmm14, %xmm13
	.loc	11 162 20 is_stmt 1     # rhs.c:162:20
	movapd	%xmm7, %xmm14
	.loc	11 161 16               # rhs.c:161:16
	movapd	(%rsp), %xmm9           # 16-byte Reload
.Ltmp516:
	.loc	11 158 7 discriminator 1 # rhs.c:158:7
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	addq	$40, %rdi
	decl	%ecx
.Ltmp517:
	.loc	11 161 16               # rhs.c:161:16
	movapd	%xmm4, %xmm2
	.loc	11 162 20               # rhs.c:162:20
	movapd	%xmm0, %xmm4
	.loc	11 162 40 is_stmt 0     # rhs.c:162:40
	movapd	%xmm10, %xmm0
	movapd	%xmm5, %xmm10
	movapd	%xmm6, %xmm7
.Ltmp518:
	.loc	11 158 7 is_stmt 1 discriminator 1 # rhs.c:158:7
	jne	.LBB6_40
.Ltmp519:
# BB#41:                                # %for.inc938
                                        #   in Loop: Header=BB6_39 Depth=2
	.loc	11 157 5 discriminator 1 # rhs.c:157:5
	addq	$2600, %rbx             # imm = 0xA28
	.loc	11 157 19 is_stmt 0 discriminator 1 # rhs.c:157:19
	cmpq	%r14, %rbp
	.loc	11 157 5 discriminator 1 # rhs.c:157:5
	leaq	1(%rbp), %rbp
	movapd	%xmm12, %xmm15
	jl	.LBB6_39
.Ltmp520:
# BB#42:                                # %for.cond941.preheader
                                        #   in Loop: Header=BB6_22 Depth=1
	testl	%r14d, %r14d
	jle	.LBB6_43
.LBB6_31:                               # %for.body944.preheader
                                        #   in Loop: Header=BB6_22 Depth=1
	.loc	11 39 7 is_stmt 1       # rhs.c:39:7
	movq	80(%rsp), %rax          # 8-byte Reload
	leaq	(%rax,%r15), %rdi
	movq	64(%rsp), %rax          # 8-byte Reload
	leaq	(%rax,%r15), %rbp
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB6_32:                               # %for.body944
                                        #   Parent Loop BB6_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp521:
	#DEBUG_VALUE: compute_rhs:m <- 0
	.loc	11 171 27               # rhs.c:171:27
	movupd	rhs+171600(%rdi,%rbx), %xmm0
	.loc	11 172 13               # rhs.c:172:13
	movq	144(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%rbx), %rax
	movupd	-32(%r15,%rax), %xmm1
	.loc	11 172 35 is_stmt 0     # rhs.c:172:35
	leaq	(%r12,%rbx), %rdx
	movupd	-32(%r15,%rdx), %xmm8
	.loc	11 172 34               # rhs.c:172:34
	movapd	%xmm8, %xmm2
	mulpd	%xmm10, %xmm2
	.loc	11 172 29               # rhs.c:172:29
	subpd	%xmm2, %xmm1
	movapd	%xmm10, %xmm6
	.loc	11 173 17 is_stmt 1     # rhs.c:173:17
	movupd	u+171600(%rdi,%rbx), %xmm10
	.loc	11 173 16 is_stmt 0     # rhs.c:173:16
	movapd	%xmm10, %xmm2
.Ltmp522:
	.loc	11 152 38 is_stmt 1     # rhs.c:152:38
	movapd	.LCPI6_10(%rip), %xmm3  # xmm3 = [6.000000e+00,6.000000e+00]
.Ltmp523:
	.loc	11 173 16               # rhs.c:173:16
	mulpd	%xmm3, %xmm2
	.loc	11 172 51               # rhs.c:172:51
	addpd	%xmm1, %xmm2
	.loc	11 173 37               # rhs.c:173:37
	movupd	u(%rbp,%rbx), %xmm1
	.loc	11 173 36 is_stmt 0     # rhs.c:173:36
	movapd	%xmm1, %xmm4
	mulpd	%xmm6, %xmm4
	.loc	11 173 31               # rhs.c:173:31
	subpd	%xmm4, %xmm2
	.loc	11 171 50 is_stmt 1     # rhs.c:171:50
	mulpd	%xmm15, %xmm2
	.loc	11 171 43 is_stmt 0     # rhs.c:171:43
	subpd	%xmm2, %xmm0
	.loc	11 171 25               # rhs.c:171:25
	movupd	%xmm0, rhs+171600(%rdi,%rbx)
	.loc	11 171 27               # rhs.c:171:27
	movupd	rhs+171616(%rdi,%rbx), %xmm0
	.loc	11 172 13 is_stmt 1     # rhs.c:172:13
	movupd	-16(%r15,%rax), %xmm4
	.loc	11 172 35 is_stmt 0     # rhs.c:172:35
	movupd	-16(%r15,%rdx), %xmm9
	.loc	11 172 34               # rhs.c:172:34
	movapd	%xmm9, %xmm5
	mulpd	%xmm6, %xmm5
	.loc	11 172 29               # rhs.c:172:29
	subpd	%xmm5, %xmm4
	.loc	11 173 17 is_stmt 1     # rhs.c:173:17
	movupd	u+171616(%rdi,%rbx), %xmm13
	.loc	11 173 16 is_stmt 0     # rhs.c:173:16
	movapd	%xmm13, %xmm5
	mulpd	%xmm3, %xmm5
	.loc	11 172 51 is_stmt 1     # rhs.c:172:51
	addpd	%xmm4, %xmm5
	.loc	11 173 37               # rhs.c:173:37
	movupd	u+16(%rbp,%rbx), %xmm4
	.loc	11 173 36 is_stmt 0     # rhs.c:173:36
	movapd	%xmm4, %xmm7
	mulpd	%xmm6, %xmm7
	.loc	11 173 31               # rhs.c:173:31
	subpd	%xmm7, %xmm5
	.loc	11 171 50 is_stmt 1     # rhs.c:171:50
	mulpd	%xmm15, %xmm5
	.loc	11 171 43 is_stmt 0     # rhs.c:171:43
	subpd	%xmm5, %xmm0
	.loc	11 171 25               # rhs.c:171:25
	movupd	%xmm0, rhs+171616(%rdi,%rbx)
	.loc	11 172 13 is_stmt 1     # rhs.c:172:13
	movsd	(%r15,%rax), %xmm7      # xmm7 = mem[0],zero
	.loc	11 172 35 is_stmt 0     # rhs.c:172:35
	movsd	(%r15,%rdx), %xmm12     # xmm12 = mem[0],zero
	.loc	11 172 34               # rhs.c:172:34
	movapd	%xmm12, %xmm0
	movsd	.LCPI6_8(%rip), %xmm5   # xmm5 = mem[0],zero
	mulsd	%xmm5, %xmm0
	.loc	11 172 29               # rhs.c:172:29
	subsd	%xmm0, %xmm7
	.loc	11 173 17 is_stmt 1     # rhs.c:173:17
	movsd	u+171632(%rdi,%rbx), %xmm2 # xmm2 = mem[0],zero
	.loc	11 173 16 is_stmt 0     # rhs.c:173:16
	movapd	%xmm2, %xmm0
	mulsd	.LCPI6_9(%rip), %xmm0
	.loc	11 172 51 is_stmt 1     # rhs.c:172:51
	addsd	%xmm7, %xmm0
	.loc	11 173 37               # rhs.c:173:37
	movsd	u+32(%rbp,%rbx), %xmm3  # xmm3 = mem[0],zero
	.loc	11 173 36 is_stmt 0     # rhs.c:173:36
	movapd	%xmm3, %xmm7
	mulsd	%xmm5, %xmm7
	.loc	11 173 31               # rhs.c:173:31
	subsd	%xmm7, %xmm0
	.loc	11 171 27 is_stmt 1     # rhs.c:171:27
	movsd	rhs+171632(%rdi,%rbx), %xmm7 # xmm7 = mem[0],zero
	movapd	48(%rsp), %xmm11        # 16-byte Reload
	.loc	11 171 50 is_stmt 0     # rhs.c:171:50
	mulsd	%xmm11, %xmm0
	.loc	11 171 43               # rhs.c:171:43
	subsd	%xmm0, %xmm7
	.loc	11 171 25               # rhs.c:171:25
	movsd	%xmm7, rhs+171632(%rdi,%rbx)
.Ltmp524:
	.loc	11 179 33 is_stmt 1     # rhs.c:179:33
	mulpd	%xmm6, %xmm10
	.loc	11 179 29 is_stmt 0     # rhs.c:179:29
	subpd	%xmm10, %xmm8
	movapd	%xmm6, %xmm10
.Ltmp525:
	.loc	11 145 16 is_stmt 1     # rhs.c:145:16
	movapd	.LCPI6_5(%rip), %xmm0   # xmm0 = [5.000000e+00,5.000000e+00]
	movapd	%xmm0, %xmm6
.Ltmp526:
	.loc	11 180 15               # rhs.c:180:15
	mulpd	%xmm6, %xmm1
	.loc	11 179 50               # rhs.c:179:50
	addpd	%xmm8, %xmm1
	.loc	11 178 27               # rhs.c:178:27
	movupd	rhs(%rbp,%rbx), %xmm0
	.loc	11 178 50 is_stmt 0     # rhs.c:178:50
	mulpd	%xmm15, %xmm1
	.loc	11 178 43               # rhs.c:178:43
	subpd	%xmm1, %xmm0
	.loc	11 178 25               # rhs.c:178:25
	movupd	%xmm0, rhs(%rbp,%rbx)
	.loc	11 179 33 is_stmt 1     # rhs.c:179:33
	mulpd	%xmm10, %xmm13
	.loc	11 179 29 is_stmt 0     # rhs.c:179:29
	subpd	%xmm13, %xmm9
	.loc	11 180 15 is_stmt 1     # rhs.c:180:15
	mulpd	%xmm6, %xmm4
	.loc	11 179 50               # rhs.c:179:50
	addpd	%xmm9, %xmm4
	.loc	11 178 27               # rhs.c:178:27
	movupd	rhs+16(%rbp,%rbx), %xmm0
	.loc	11 178 50 is_stmt 0     # rhs.c:178:50
	mulpd	%xmm15, %xmm4
	.loc	11 178 43               # rhs.c:178:43
	subpd	%xmm4, %xmm0
	.loc	11 178 25               # rhs.c:178:25
	movupd	%xmm0, rhs+16(%rbp,%rbx)
	.loc	11 179 33 is_stmt 1     # rhs.c:179:33
	mulsd	%xmm5, %xmm2
	.loc	11 179 29 is_stmt 0     # rhs.c:179:29
	subsd	%xmm2, %xmm12
	.loc	11 180 15 is_stmt 1     # rhs.c:180:15
	mulsd	.LCPI6_7(%rip), %xmm3
	.loc	11 179 50               # rhs.c:179:50
	addsd	%xmm12, %xmm3
	.loc	11 178 27               # rhs.c:178:27
	movsd	rhs+32(%rbp,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	11 178 50 is_stmt 0     # rhs.c:178:50
	mulsd	%xmm11, %xmm3
	.loc	11 178 43               # rhs.c:178:43
	subsd	%xmm3, %xmm0
	.loc	11 178 25               # rhs.c:178:25
	movsd	%xmm0, rhs+32(%rbp,%rbx)
.Ltmp527:
	.loc	11 168 19 is_stmt 1 discriminator 1 # rhs.c:168:19
	incq	%rcx
	addq	$2600, %rbx             # imm = 0xA28
	cmpq	%r14, %rcx
	jl	.LBB6_32
.Ltmp528:
	.p2align	4, 0x90
.LBB6_43:                               # %for.inc1069
                                        #   in Loop: Header=BB6_22 Depth=1
	.loc	11 83 3 discriminator 1 # rhs.c:83:3
	addq	$33800, %r10            # imm = 0x8408
	addq	$169000, %r13           # imm = 0x29428
	addq	$169000, %r15           # imm = 0x29428
	.loc	11 83 17 is_stmt 0 discriminator 1 # rhs.c:83:17
	cmpq	112(%rsp), %r11         # 8-byte Folded Reload
	.loc	11 83 3 discriminator 1 # rhs.c:83:3
	leaq	1(%r11), %r11
	jl	.LBB6_22
.Ltmp529:
.LBB6_44:                               # %for.end1071
	.loc	11 184 7 is_stmt 1      # rhs.c:184:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_47
# BB#45:                                # %if.end1074
	.loc	11 184 16 is_stmt 0 discriminator 1 # rhs.c:184:16
	movl	$2, %edi
	callq	timer_stop
.Ltmp530:
	.loc	11 186 7 is_stmt 1      # rhs.c:186:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_47
# BB#46:                                # %if.then1076
	.loc	11 186 16 is_stmt 0 discriminator 1 # rhs.c:186:16
	movl	$3, %edi
	callq	timer_start
.Ltmp531:
.LBB6_47:                               # %for.cond1078.preheader
	.loc	11 190 3 is_stmt 1 discriminator 1 # rhs.c:190:3
	movslq	grid_points+8(%rip), %rbx
	.loc	11 190 34 is_stmt 0 discriminator 1 # rhs.c:190:34
	addq	$-2, %rbx
	.loc	11 190 17 discriminator 1 # rhs.c:190:17
	testl	%ebx, %ebx
	jle	.LBB6_64
# BB#48:                                # %for.cond1082.preheader.lr.ph
.Ltmp532:
	.loc	11 276 13 is_stmt 1     # rhs.c:276:13
	movslq	grid_points+4(%rip), %r11
.Ltmp533:
	.loc	11 191 36 discriminator 1 # rhs.c:191:36
	imulq	$2600, %r11, %rax       # imm = 0xA28
	leaq	-2(%r11), %r8
.Ltmp534:
	#DEBUG_VALUE: compute_rhs:j <- %R8D
	.loc	11 190 3 discriminator 1 # rhs.c:190:3
	movslq	grid_points(%rip), %rsi
.Ltmp535:
	.loc	11 244 36 discriminator 1 # rhs.c:244:36
	addq	$-2, %rsi
.Ltmp536:
	.loc	11 261 36 discriminator 1 # rhs.c:261:36
	addq	$-4, %r11
.Ltmp537:
	.loc	11 284 45               # rhs.c:284:45
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
.Ltmp538:
	.loc	11 199 11               # rhs.c:199:11
	movapd	%xmm0, 432(%rsp)        # 16-byte Spill
	movsd	ty2(%rip), %xmm11       # xmm11 = mem[0],zero
	.loc	11 200 45               # rhs.c:200:45
	movapd	%xmm11, 16(%rsp)        # 16-byte Spill
	movsd	dy2ty1(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	11 203 11               # rhs.c:203:11
	movapd	%xmm1, (%rsp)           # 16-byte Spill
	movsd	yycon2(%rip), %xmm2     # xmm2 = mem[0],zero
	movsd	con43(%rip), %xmm3      # xmm3 = mem[0],zero
	.loc	11 210 17               # rhs.c:210:17
	mulsd	%xmm2, %xmm3
	.loc	11 215 16               # rhs.c:215:16
	movsd	c2(%rip), %xmm13        # xmm13 = mem[0],zero
.Ltmp539:
	.loc	11 275 50               # rhs.c:275:50
	movapd	%xmm13, 448(%rsp)       # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp540:
	.loc	11 196 52               # rhs.c:196:52
	movaps	%xmm0, 416(%rsp)        # 16-byte Spill
	movsd	dy1ty1(%rip), %xmm0     # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm4
	unpcklpd	%xmm2, %xmm4    # xmm4 = xmm4[0],xmm2[0]
	movapd	%xmm4, 32(%rsp)         # 16-byte Spill
.Ltmp541:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movlhps	%xmm11, %xmm11          # xmm11 = xmm11[0,0]
.Ltmp542:
	.loc	11 207 52               # rhs.c:207:52
	movsd	dy3ty1(%rip), %xmm4     # xmm4 = mem[0],zero
.Ltmp543:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movsd	dy4ty1(%rip), %xmm5     # xmm5 = mem[0],zero
.Ltmp544:
	.loc	11 207 52               # rhs.c:207:52
	movapd	%xmm4, %xmm6
	unpcklpd	%xmm5, %xmm6    # xmm6 = xmm6[0],xmm5[0]
	movapd	%xmm6, 336(%rsp)        # 16-byte Spill
	.loc	11 210 24               # rhs.c:210:24
	movapd	%xmm3, %xmm6
	unpcklpd	%xmm2, %xmm6    # xmm6 = xmm6[0],xmm2[0]
	movapd	%xmm6, 320(%rsp)        # 16-byte Spill
.Ltmp545:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movq	%rsi, %rdi
	andq	$-2, %rdi
	movq	%rsi, %rcx
	orq	$1, %rcx
	movq	%rcx, 408(%rsp)         # 8-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 208(%rsp)        # 16-byte Spill
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 160(%rsp)        # 16-byte Spill
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 240(%rsp)        # 16-byte Spill
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movaps	%xmm4, 192(%rsp)        # 16-byte Spill
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 224(%rsp)        # 16-byte Spill
	movapd	%xmm13, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 144(%rsp)        # 16-byte Spill
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movaps	%xmm5, 176(%rsp)        # 16-byte Spill
.Ltmp546:
	.loc	11 223 45               # rhs.c:223:45
	movsd	dy5ty1(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp547:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movapd	%xmm0, 304(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 128(%rsp)        # 16-byte Spill
.Ltmp548:
	.loc	11 226 11               # rhs.c:226:11
	movsd	yycon3(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp549:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movapd	%xmm0, 288(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 112(%rsp)        # 16-byte Spill
.Ltmp550:
	.loc	11 228 11               # rhs.c:228:11
	movsd	yycon4(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp551:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movapd	%xmm0, 272(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 96(%rsp)         # 16-byte Spill
.Ltmp552:
	.loc	11 230 11               # rhs.c:230:11
	movsd	yycon5(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp553:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movapd	%xmm0, 256(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 80(%rsp)         # 16-byte Spill
.Ltmp554:
	.loc	11 233 19               # rhs.c:233:19
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
.Ltmp555:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	movapd	%xmm0, 48(%rsp)         # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 64(%rsp)         # 16-byte Spill
.Ltmp556:
	.loc	11 190 3 discriminator 1 # rhs.c:190:3
	leaq	u+156072(%rax), %rcx
	movq	%rcx, 376(%rsp)         # 8-byte Spill
	leaq	u+158672(%rax), %r10
	leaq	u+163872(%rax), %rcx
	movq	%rcx, 384(%rsp)         # 8-byte Spill
	leaq	u+161272(%rax), %rcx
	movq	%rcx, 368(%rsp)         # 8-byte Spill
	leaq	-7800(%rax), %rcx
	movq	%rcx, 360(%rsp)         # 8-byte Spill
	leaq	-5200(%rax), %rax
	movq	%rax, 352(%rsp)         # 8-byte Spill
	movl	$1, %eax
	xorl	%r14d, %r14d
	xorl	%r9d, %r9d
.Ltmp557:
	.p2align	4, 0x90
.LBB6_49:                               # %for.cond1082.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_102 Depth 2
                                        #       Child Loop BB6_105 Depth 3
                                        #       Child Loop BB6_108 Depth 3
                                        #     Child Loop BB6_51 Depth 2
                                        #     Child Loop BB6_137 Depth 2
                                        #     Child Loop BB6_55 Depth 2
                                        #       Child Loop BB6_56 Depth 3
                                        #     Child Loop BB6_60 Depth 2
                                        #     Child Loop BB6_62 Depth 2
	movq	%r9, 392(%rsp)          # 8-byte Spill
	movq	%rax, 400(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
.Ltmp558:
	.loc	11 191 5 discriminator 1 # rhs.c:191:5
	testl	%r8d, %r8d
	movq	%r14, %rcx
	movl	$1, %r12d
	jle	.LBB6_50
	.p2align	4, 0x90
.LBB6_102:                              # %for.cond1086.preheader
                                        #   Parent Loop BB6_49 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_105 Depth 3
                                        #       Child Loop BB6_108 Depth 3
	testl	%esi, %esi
	jle	.LBB6_109
# BB#103:                               # %for.body1089.lr.ph
                                        #   in Loop: Header=BB6_102 Depth=2
	cmpl	$2, %esi
	movl	$1, %r13d
	jb	.LBB6_107
# BB#104:                               # %min.iters.checked4480
                                        #   in Loop: Header=BB6_102 Depth=2
	testq	%rdi, %rdi
	movq	%rdi, %r11
	movq	%r9, %r15
	movl	$1, %r13d
	je	.LBB6_107
	.p2align	4, 0x90
.LBB6_105:                              # %vector.body4476
                                        #   Parent Loop BB6_49 Depth=1
                                        #     Parent Loop BB6_102 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp559:
	.loc	11 193 16               # rhs.c:193:16
	movupd	vs+34328(%r15), %xmm9
	.loc	11 194 16               # rhs.c:194:16
	movupd	vs+34848(%r15), %xmm12
	.loc	11 195 16               # rhs.c:195:16
	movupd	vs+33808(%r15), %xmm15
	.loc	11 196 27               # rhs.c:196:27
	movsd	rhs+171640(%r15,%r15,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	rhs+171680(%r15,%r15,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 197 12               # rhs.c:197:12
	movsd	u+174240(%r15,%r15,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+174280(%r15,%r15,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 197 34 is_stmt 0     # rhs.c:197:34
	movsd	u+171640(%r15,%r15,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+171680(%r15,%r15,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 197 33               # rhs.c:197:33
	addpd	%xmm2, %xmm2
	.loc	11 197 28               # rhs.c:197:28
	subpd	%xmm2, %xmm1
	.loc	11 198 12 is_stmt 1     # rhs.c:198:12
	movsd	u+169040(%r15,%r15,4), %xmm4 # xmm4 = mem[0],zero
	movhpd	u+169080(%r15,%r15,4), %xmm4 # xmm4 = xmm4[0],mem[0]
	.loc	11 197 48               # rhs.c:197:48
	addpd	%xmm1, %xmm4
	.loc	11 196 52               # rhs.c:196:52
	mulpd	208(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 196 43 is_stmt 0     # rhs.c:196:43
	addpd	%xmm0, %xmm4
	.loc	11 199 18 is_stmt 1     # rhs.c:199:18
	movsd	u+174256(%r15,%r15,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+174296(%r15,%r15,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 199 36 is_stmt 0     # rhs.c:199:36
	movsd	u+169056(%r15,%r15,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+169096(%r15,%r15,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 199 34               # rhs.c:199:34
	movapd	%xmm0, %xmm1
	subpd	%xmm2, %xmm1
	.loc	11 199 15               # rhs.c:199:15
	mulpd	%xmm11, %xmm1
	.loc	11 198 29 is_stmt 1     # rhs.c:198:29
	subpd	%xmm1, %xmm4
	.loc	11 196 25               # rhs.c:196:25
	movlpd	%xmm4, rhs+171640(%r15,%r15,4)
	movhpd	%xmm4, rhs+171680(%r15,%r15,4)
	.loc	11 200 27               # rhs.c:200:27
	movsd	rhs+171648(%r15,%r15,4), %xmm4 # xmm4 = mem[0],zero
	movhpd	rhs+171688(%r15,%r15,4), %xmm4 # xmm4 = xmm4[0],mem[0]
	.loc	11 201 12               # rhs.c:201:12
	movsd	u+174248(%r15,%r15,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+174288(%r15,%r15,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 201 34 is_stmt 0     # rhs.c:201:34
	movsd	u+171648(%r15,%r15,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+171688(%r15,%r15,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 201 33               # rhs.c:201:33
	addpd	%xmm5, %xmm5
	.loc	11 201 28               # rhs.c:201:28
	movapd	%xmm1, %xmm6
	subpd	%xmm5, %xmm6
	.loc	11 202 12 is_stmt 1     # rhs.c:202:12
	movsd	u+169048(%r15,%r15,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+169088(%r15,%r15,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 201 48               # rhs.c:201:48
	addpd	%xmm5, %xmm6
	.loc	11 200 52               # rhs.c:200:52
	mulpd	160(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	11 200 43 is_stmt 0     # rhs.c:200:43
	addpd	%xmm4, %xmm6
	.loc	11 203 21 is_stmt 1     # rhs.c:203:21
	movupd	us+34848(%r15), %xmm4
	.loc	11 203 41 is_stmt 0     # rhs.c:203:41
	movupd	us+34328(%r15), %xmm7
	.loc	11 203 40               # rhs.c:203:40
	addpd	%xmm7, %xmm7
	.loc	11 203 35               # rhs.c:203:35
	subpd	%xmm7, %xmm4
	.loc	11 204 15 is_stmt 1     # rhs.c:204:15
	movupd	us+33808(%r15), %xmm7
	.loc	11 203 53               # rhs.c:203:53
	addpd	%xmm4, %xmm7
	movapd	240(%rsp), %xmm3        # 16-byte Reload
	.loc	11 203 18 is_stmt 0     # rhs.c:203:18
	mulpd	%xmm3, %xmm7
	.loc	11 202 29 is_stmt 1     # rhs.c:202:29
	addpd	%xmm6, %xmm7
	.loc	11 205 33               # rhs.c:205:33
	mulpd	%xmm12, %xmm1
	.loc	11 206 30               # rhs.c:206:30
	mulpd	%xmm15, %xmm5
	.loc	11 205 38               # rhs.c:205:38
	subpd	%xmm5, %xmm1
	.loc	11 205 15 is_stmt 0     # rhs.c:205:15
	mulpd	%xmm11, %xmm1
	.loc	11 204 30 is_stmt 1     # rhs.c:204:30
	subpd	%xmm1, %xmm7
	.loc	11 200 25               # rhs.c:200:25
	movlpd	%xmm7, rhs+171648(%r15,%r15,4)
	movhpd	%xmm7, rhs+171688(%r15,%r15,4)
	.loc	11 207 27               # rhs.c:207:27
	movsd	rhs+171656(%r15,%r15,4), %xmm4 # xmm4 = mem[0],zero
	movhpd	rhs+171696(%r15,%r15,4), %xmm4 # xmm4 = xmm4[0],mem[0]
	.loc	11 208 34               # rhs.c:208:34
	movsd	u+171656(%r15,%r15,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+171696(%r15,%r15,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 208 33 is_stmt 0     # rhs.c:208:33
	addpd	%xmm5, %xmm5
	.loc	11 210 31 is_stmt 1     # rhs.c:210:31
	movapd	%xmm12, %xmm1
	.loc	11 211 33               # rhs.c:211:33
	movapd	%xmm12, %xmm6
	mulpd	%xmm0, %xmm6
	.loc	11 208 28               # rhs.c:208:28
	subpd	%xmm5, %xmm0
	.loc	11 208 48 is_stmt 0     # rhs.c:208:48
	addpd	%xmm2, %xmm0
	.loc	11 207 52 is_stmt 1     # rhs.c:207:52
	mulpd	192(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 207 43 is_stmt 0     # rhs.c:207:43
	addpd	%xmm4, %xmm0
	.loc	11 210 36 is_stmt 1     # rhs.c:210:36
	movapd	%xmm9, %xmm4
	addpd	%xmm4, %xmm4
	.loc	11 210 31 is_stmt 0     # rhs.c:210:31
	subpd	%xmm4, %xmm1
	.loc	11 210 42               # rhs.c:210:42
	addpd	%xmm15, %xmm1
	.loc	11 210 24               # rhs.c:210:24
	mulpd	224(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 209 29 is_stmt 1     # rhs.c:209:29
	addpd	%xmm0, %xmm1
	.loc	11 212 30               # rhs.c:212:30
	mulpd	%xmm15, %xmm2
	.loc	11 211 38               # rhs.c:211:38
	subpd	%xmm2, %xmm6
	.loc	11 213 16               # rhs.c:213:16
	movsd	u+174272(%r15,%r15,4), %xmm8 # xmm8 = mem[0],zero
	movhpd	u+174312(%r15,%r15,4), %xmm8 # xmm8 = xmm8[0],mem[0]
	.loc	11 213 34 is_stmt 0     # rhs.c:213:34
	movupd	square+34848(%r15), %xmm10
	.loc	11 213 32               # rhs.c:213:32
	movapd	%xmm8, %xmm2
	subpd	%xmm10, %xmm2
	.loc	11 214 16 is_stmt 1     # rhs.c:214:16
	movsd	u+169072(%r15,%r15,4), %xmm14 # xmm14 = mem[0],zero
	movhpd	u+169112(%r15,%r15,4), %xmm14 # xmm14 = xmm14[0],mem[0]
	.loc	11 213 52               # rhs.c:213:52
	subpd	%xmm14, %xmm2
	.loc	11 214 34               # rhs.c:214:34
	movupd	square+33808(%r15), %xmm0
	.loc	11 214 32 is_stmt 0     # rhs.c:214:32
	addpd	%xmm0, %xmm2
	movapd	144(%rsp), %xmm13       # 16-byte Reload
	.loc	11 215 15 is_stmt 1     # rhs.c:215:15
	mulpd	%xmm13, %xmm2
	.loc	11 212 35               # rhs.c:212:35
	addpd	%xmm6, %xmm2
	.loc	11 211 15               # rhs.c:211:15
	mulpd	%xmm11, %xmm2
	.loc	11 210 49               # rhs.c:210:49
	subpd	%xmm2, %xmm1
	.loc	11 207 25               # rhs.c:207:25
	movlpd	%xmm1, rhs+171656(%r15,%r15,4)
	movhpd	%xmm1, rhs+171696(%r15,%r15,4)
	.loc	11 216 27               # rhs.c:216:27
	movsd	rhs+171664(%r15,%r15,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171704(%r15,%r15,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 217 12               # rhs.c:217:12
	movsd	u+174264(%r15,%r15,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+174304(%r15,%r15,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 217 34 is_stmt 0     # rhs.c:217:34
	movsd	u+171664(%r15,%r15,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+171704(%r15,%r15,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 217 33               # rhs.c:217:33
	addpd	%xmm5, %xmm5
	.loc	11 217 28               # rhs.c:217:28
	movapd	%xmm1, %xmm6
	subpd	%xmm5, %xmm6
	.loc	11 218 12 is_stmt 1     # rhs.c:218:12
	movsd	u+169064(%r15,%r15,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+169104(%r15,%r15,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 217 48               # rhs.c:217:48
	addpd	%xmm5, %xmm6
	.loc	11 216 52               # rhs.c:216:52
	mulpd	176(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	11 216 43 is_stmt 0     # rhs.c:216:43
	addpd	%xmm2, %xmm6
	.loc	11 219 21 is_stmt 1     # rhs.c:219:21
	movupd	ws+34848(%r15), %xmm2
	.loc	11 219 41 is_stmt 0     # rhs.c:219:41
	movupd	ws+34328(%r15), %xmm7
	.loc	11 219 40               # rhs.c:219:40
	addpd	%xmm7, %xmm7
	.loc	11 219 35               # rhs.c:219:35
	subpd	%xmm7, %xmm2
	.loc	11 220 15 is_stmt 1     # rhs.c:220:15
	movupd	ws+33808(%r15), %xmm7
	.loc	11 219 53               # rhs.c:219:53
	addpd	%xmm2, %xmm7
	.loc	11 221 33               # rhs.c:221:33
	mulpd	%xmm12, %xmm1
	.loc	11 219 18               # rhs.c:219:18
	mulpd	%xmm3, %xmm7
	.loc	11 218 29               # rhs.c:218:29
	addpd	%xmm6, %xmm7
	.loc	11 222 30               # rhs.c:222:30
	mulpd	%xmm15, %xmm5
	.loc	11 221 38               # rhs.c:221:38
	subpd	%xmm5, %xmm1
	.loc	11 221 15 is_stmt 0     # rhs.c:221:15
	mulpd	%xmm11, %xmm1
	.loc	11 220 30 is_stmt 1     # rhs.c:220:30
	subpd	%xmm1, %xmm7
	.loc	11 216 25               # rhs.c:216:25
	movlpd	%xmm7, rhs+171664(%r15,%r15,4)
	movhpd	%xmm7, rhs+171704(%r15,%r15,4)
	.loc	11 223 27               # rhs.c:223:27
	movsd	rhs+171672(%r15,%r15,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171712(%r15,%r15,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 224 34               # rhs.c:224:34
	movsd	u+171672(%r15,%r15,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+171712(%r15,%r15,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 224 33 is_stmt 0     # rhs.c:224:33
	addpd	%xmm1, %xmm1
	.loc	11 224 28               # rhs.c:224:28
	movapd	%xmm8, %xmm5
	subpd	%xmm1, %xmm5
	.loc	11 224 48               # rhs.c:224:48
	addpd	%xmm14, %xmm5
	.loc	11 223 52 is_stmt 1     # rhs.c:223:52
	mulpd	128(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	11 223 43 is_stmt 0     # rhs.c:223:43
	addpd	%xmm2, %xmm5
	.loc	11 226 21 is_stmt 1     # rhs.c:226:21
	movupd	qs+34848(%r15), %xmm6
	.loc	11 226 41 is_stmt 0     # rhs.c:226:41
	movupd	qs+34328(%r15), %xmm2
	.loc	11 226 40               # rhs.c:226:40
	addpd	%xmm2, %xmm2
	.loc	11 226 35               # rhs.c:226:35
	subpd	%xmm2, %xmm6
	.loc	11 227 15 is_stmt 1     # rhs.c:227:15
	movupd	qs+33808(%r15), %xmm2
	.loc	11 226 53               # rhs.c:226:53
	addpd	%xmm6, %xmm2
	.loc	11 226 18 is_stmt 0     # rhs.c:226:18
	mulpd	112(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	11 225 29 is_stmt 1     # rhs.c:225:29
	addpd	%xmm5, %xmm2
	.loc	11 228 45               # rhs.c:228:45
	mulpd	%xmm9, %xmm4
	.loc	11 230 37               # rhs.c:230:37
	movupd	rho_i+34848(%r15), %xmm5
	.loc	11 230 36 is_stmt 0     # rhs.c:230:36
	mulpd	%xmm8, %xmm5
	movapd	64(%rsp), %xmm6         # 16-byte Reload
	.loc	11 233 21 is_stmt 1     # rhs.c:233:21
	mulpd	%xmm6, %xmm8
	.loc	11 234 19               # rhs.c:234:19
	mulpd	%xmm13, %xmm10
	.loc	11 233 38               # rhs.c:233:38
	subpd	%xmm10, %xmm8
	.loc	11 234 39               # rhs.c:234:39
	mulpd	%xmm12, %xmm8
	.loc	11 228 24               # rhs.c:228:24
	mulpd	%xmm12, %xmm12
	.loc	11 228 35 is_stmt 0     # rhs.c:228:35
	subpd	%xmm4, %xmm12
	.loc	11 232 31 is_stmt 1     # rhs.c:232:31
	movupd	rho_i+33808(%r15), %xmm4
	.loc	11 232 30 is_stmt 0     # rhs.c:232:30
	mulpd	%xmm14, %xmm4
	.loc	11 235 18 is_stmt 1     # rhs.c:235:18
	mulpd	%xmm6, %xmm14
	.loc	11 236 18               # rhs.c:236:18
	mulpd	%xmm13, %xmm0
	movapd	448(%rsp), %xmm13       # 16-byte Reload
	.loc	11 235 35               # rhs.c:235:35
	subpd	%xmm0, %xmm14
	.loc	11 236 38               # rhs.c:236:38
	mulpd	%xmm15, %xmm14
	.loc	11 229 18               # rhs.c:229:18
	mulpd	%xmm15, %xmm15
	.loc	11 228 51               # rhs.c:228:51
	addpd	%xmm12, %xmm15
	.loc	11 228 18 is_stmt 0     # rhs.c:228:18
	mulpd	96(%rsp), %xmm15        # 16-byte Folded Reload
	.loc	11 227 30 is_stmt 1     # rhs.c:227:30
	addpd	%xmm2, %xmm15
	.loc	11 231 33               # rhs.c:231:33
	movupd	rho_i+34328(%r15), %xmm0
	.loc	11 231 32 is_stmt 0     # rhs.c:231:32
	mulpd	%xmm1, %xmm0
	.loc	11 230 54 is_stmt 1     # rhs.c:230:54
	subpd	%xmm0, %xmm5
	.loc	11 231 48               # rhs.c:231:48
	addpd	%xmm5, %xmm4
	.loc	11 230 18               # rhs.c:230:18
	mulpd	80(%rsp), %xmm4         # 16-byte Folded Reload
	.loc	11 229 24               # rhs.c:229:24
	addpd	%xmm15, %xmm4
	.loc	11 234 45               # rhs.c:234:45
	subpd	%xmm14, %xmm8
	.loc	11 233 15               # rhs.c:233:15
	mulpd	%xmm11, %xmm8
	.loc	11 232 49               # rhs.c:232:49
	subpd	%xmm8, %xmm4
	.loc	11 223 25               # rhs.c:223:25
	movlpd	%xmm4, rhs+171672(%r15,%r15,4)
	movhpd	%xmm4, rhs+171712(%r15,%r15,4)
.Ltmp560:
	.loc	11 192 7 discriminator 1 # rhs.c:192:7
	addq	$16, %r15
	addq	$-2, %r11
	jne	.LBB6_105
# BB#106:                               # %middle.block4477
                                        #   in Loop: Header=BB6_102 Depth=2
	cmpq	%rdi, %rsi
	movq	408(%rsp), %r13         # 8-byte Reload
	je	.LBB6_109
	.p2align	4, 0x90
.LBB6_107:                              # %scalar.ph4478
                                        #   in Loop: Header=BB6_102 Depth=2
	leaq	(,%r13,8), %rax
	leaq	(%rax,%rax,4), %rbp
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB6_108:                              # %for.body1089
                                        #   Parent Loop BB6_49 Depth=1
                                        #     Parent Loop BB6_102 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp561:
	.loc	11 193 16               # rhs.c:193:16
	movsd	vs+34320(%r9,%r13,8), %xmm8 # xmm8 = mem[0],zero
.Ltmp562:
	#DEBUG_VALUE: compute_rhs:vijk <- %XMM8
	.loc	11 194 16               # rhs.c:194:16
	movsd	vs+34840(%r9,%r13,8), %xmm10 # xmm10 = mem[0],zero
.Ltmp563:
	#DEBUG_VALUE: compute_rhs:vp1 <- %XMM10
	.loc	11 195 16               # rhs.c:195:16
	movsd	vs+33800(%r9,%r13,8), %xmm12 # xmm12 = mem[0],zero
.Ltmp564:
	#DEBUG_VALUE: compute_rhs:vm1 <- %XMM12
	.loc	11 201 12               # rhs.c:201:12
	movsd	u+174208(%rbp,%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171608(%rbp,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	11 201 33 is_stmt 0     # rhs.c:201:33
	mulsd	.LCPI6_4(%rip), %xmm2
	.loc	11 201 28               # rhs.c:201:28
	addsd	%xmm0, %xmm2
	.loc	11 202 12 is_stmt 1     # rhs.c:202:12
	movsd	u+169008(%rbp,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	11 201 48               # rhs.c:201:48
	addsd	%xmm1, %xmm2
	.loc	11 200 52               # rhs.c:200:52
	mulsd	(%rsp), %xmm2           # 16-byte Folded Reload
	.loc	11 200 43 is_stmt 0     # rhs.c:200:43
	addsd	rhs+171608(%rbp,%rax), %xmm2
	.loc	11 197 33 is_stmt 1     # rhs.c:197:33
	movsd	u+171600(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	movhpd	us+34320(%r9,%r13,8), %xmm3 # xmm3 = xmm3[0],mem[0]
	addpd	%xmm3, %xmm3
	.loc	11 197 28 is_stmt 0     # rhs.c:197:28
	movsd	u+174200(%rbp,%rax), %xmm4 # xmm4 = mem[0],zero
	movhpd	us+34840(%r9,%r13,8), %xmm4 # xmm4 = xmm4[0],mem[0]
	subpd	%xmm3, %xmm4
	.loc	11 197 48               # rhs.c:197:48
	movsd	u+169000(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	movhpd	us+33800(%r9,%r13,8), %xmm3 # xmm3 = xmm3[0],mem[0]
	addpd	%xmm4, %xmm3
	.loc	11 196 52 is_stmt 1     # rhs.c:196:52
	mulpd	32(%rsp), %xmm3         # 16-byte Folded Reload
	.loc	11 196 43 is_stmt 0     # rhs.c:196:43
	movsd	rhs+171600(%rbp,%rax), %xmm4 # xmm4 = mem[0],zero
	unpcklpd	%xmm2, %xmm4    # xmm4 = xmm4[0],xmm2[0]
	addpd	%xmm3, %xmm4
	.loc	11 205 33 is_stmt 1     # rhs.c:205:33
	mulsd	%xmm10, %xmm0
	.loc	11 206 30               # rhs.c:206:30
	mulsd	%xmm12, %xmm1
	.loc	11 199 18               # rhs.c:199:18
	movupd	u+174216(%rbp,%rax), %xmm7
	.loc	11 199 34 is_stmt 0     # rhs.c:199:34
	movapd	%xmm7, %xmm2
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	.loc	11 199 36               # rhs.c:199:36
	movupd	u+169016(%rbp,%rax), %xmm6
	.loc	11 199 34               # rhs.c:199:34
	movapd	%xmm6, %xmm0
	unpcklpd	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0]
	subpd	%xmm0, %xmm2
	.loc	11 199 15               # rhs.c:199:15
	mulpd	%xmm11, %xmm2
	.loc	11 198 29 is_stmt 1     # rhs.c:198:29
	subpd	%xmm2, %xmm4
	.loc	11 196 25               # rhs.c:196:25
	movupd	%xmm4, rhs+171600(%rbp,%rax)
	.loc	11 211 33               # rhs.c:211:33
	movapd	%xmm10, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	11 212 30               # rhs.c:212:30
	movapd	%xmm12, %xmm0
	mulsd	%xmm6, %xmm0
	.loc	11 211 38               # rhs.c:211:38
	subsd	%xmm0, %xmm4
	.loc	11 213 16               # rhs.c:213:16
	movsd	u+174232(%rbp,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	11 213 34 is_stmt 0     # rhs.c:213:34
	movsd	square+34840(%r9,%r13,8), %xmm14 # xmm14 = mem[0],zero
	.loc	11 213 32               # rhs.c:213:32
	movapd	%xmm2, %xmm0
	subsd	%xmm14, %xmm0
	.loc	11 207 27 is_stmt 1     # rhs.c:207:27
	movupd	rhs+171616(%rbp,%rax), %xmm1
	.loc	11 208 34               # rhs.c:208:34
	movupd	u+171616(%rbp,%rax), %xmm5
	.loc	11 208 33 is_stmt 0     # rhs.c:208:33
	addpd	%xmm5, %xmm5
	.loc	11 208 28               # rhs.c:208:28
	movapd	%xmm7, %xmm3
	subpd	%xmm5, %xmm3
	.loc	11 208 48               # rhs.c:208:48
	addpd	%xmm6, %xmm3
	.loc	11 207 52 is_stmt 1     # rhs.c:207:52
	mulpd	336(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	11 207 43 is_stmt 0     # rhs.c:207:43
	addpd	%xmm1, %xmm3
	.loc	11 210 36 is_stmt 1     # rhs.c:210:36
	movapd	%xmm8, %xmm1
	movhpd	ws+34320(%r9,%r13,8), %xmm1 # xmm1 = xmm1[0],mem[0]
	addpd	%xmm1, %xmm1
	.loc	11 210 31 is_stmt 0     # rhs.c:210:31
	movapd	%xmm10, %xmm5
	movhpd	ws+34840(%r9,%r13,8), %xmm5 # xmm5 = xmm5[0],mem[0]
	subpd	%xmm1, %xmm5
	.loc	11 210 42               # rhs.c:210:42
	movapd	%xmm12, %xmm9
	movhpd	ws+33800(%r9,%r13,8), %xmm9 # xmm9 = xmm9[0],mem[0]
	addpd	%xmm5, %xmm9
	.loc	11 214 16 is_stmt 1     # rhs.c:214:16
	movsd	u+169032(%rbp,%rax), %xmm5 # xmm5 = mem[0],zero
	.loc	11 213 52               # rhs.c:213:52
	subsd	%xmm5, %xmm0
	.loc	11 210 24               # rhs.c:210:24
	mulpd	320(%rsp), %xmm9        # 16-byte Folded Reload
	.loc	11 209 29               # rhs.c:209:29
	addpd	%xmm3, %xmm9
	.loc	11 214 34               # rhs.c:214:34
	movsd	square+33800(%r9,%r13,8), %xmm15 # xmm15 = mem[0],zero
	.loc	11 214 32 is_stmt 0     # rhs.c:214:32
	addsd	%xmm15, %xmm0
	.loc	11 215 15 is_stmt 1     # rhs.c:215:15
	unpcklpd	%xmm12, %xmm0   # xmm0 = xmm0[0],xmm12[0]
	movsd	%xmm13, %xmm6           # xmm6 = xmm13[0],xmm6[1]
	mulpd	%xmm0, %xmm6
	.loc	11 221 33               # rhs.c:221:33
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	mulsd	%xmm10, %xmm7
	.loc	11 212 35               # rhs.c:212:35
	unpcklpd	%xmm7, %xmm4    # xmm4 = xmm4[0],xmm7[0]
	movapd	%xmm4, %xmm0
	addpd	%xmm6, %xmm0
	subpd	%xmm6, %xmm4
	movsd	%xmm0, %xmm4            # xmm4 = xmm0[0],xmm4[1]
	.loc	11 211 15               # rhs.c:211:15
	mulpd	%xmm11, %xmm4
	.loc	11 210 49               # rhs.c:210:49
	subpd	%xmm4, %xmm9
	.loc	11 207 25               # rhs.c:207:25
	movupd	%xmm9, rhs+171616(%rbp,%rax)
	.loc	11 224 34               # rhs.c:224:34
	movsd	u+171632(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	.loc	11 224 33 is_stmt 0     # rhs.c:224:33
	addsd	%xmm3, %xmm3
	.loc	11 226 21 is_stmt 1     # rhs.c:226:21
	movsd	qs+34840(%r9,%r13,8), %xmm4 # xmm4 = mem[0],zero
	.loc	11 226 41 is_stmt 0     # rhs.c:226:41
	movsd	qs+34320(%r9,%r13,8), %xmm0 # xmm0 = mem[0],zero
	.loc	11 226 40               # rhs.c:226:40
	addsd	%xmm0, %xmm0
	.loc	11 226 35               # rhs.c:226:35
	subsd	%xmm0, %xmm4
	.loc	11 224 28 is_stmt 1     # rhs.c:224:28
	movapd	%xmm2, %xmm0
	subsd	%xmm3, %xmm0
	.loc	11 224 48 is_stmt 0     # rhs.c:224:48
	addsd	%xmm5, %xmm0
	.loc	11 223 52 is_stmt 1     # rhs.c:223:52
	mulsd	304(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 223 43 is_stmt 0     # rhs.c:223:43
	addsd	rhs+171632(%rbp,%rax), %xmm0
	.loc	11 226 53 is_stmt 1     # rhs.c:226:53
	addsd	qs+33800(%r9,%r13,8), %xmm4
	.loc	11 226 18 is_stmt 0     # rhs.c:226:18
	mulsd	288(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 225 29 is_stmt 1     # rhs.c:225:29
	addsd	%xmm0, %xmm4
	.loc	11 228 45               # rhs.c:228:45
	mulsd	%xmm8, %xmm1
	movsd	rho_i+34840(%r9,%r13,8), %xmm0 # xmm0 = mem[0],zero
	.loc	11 230 36               # rhs.c:230:36
	mulsd	%xmm2, %xmm0
	movapd	48(%rsp), %xmm6         # 16-byte Reload
	.loc	11 233 21               # rhs.c:233:21
	mulsd	%xmm6, %xmm2
	.loc	11 234 19               # rhs.c:234:19
	mulsd	%xmm13, %xmm14
	.loc	11 233 38               # rhs.c:233:38
	subsd	%xmm14, %xmm2
	.loc	11 234 39               # rhs.c:234:39
	mulsd	%xmm10, %xmm2
	.loc	11 228 24               # rhs.c:228:24
	mulsd	%xmm10, %xmm10
.Ltmp565:
	.loc	11 228 35 is_stmt 0     # rhs.c:228:35
	subsd	%xmm1, %xmm10
	movsd	rho_i+33800(%r9,%r13,8), %xmm1 # xmm1 = mem[0],zero
	.loc	11 232 30 is_stmt 1     # rhs.c:232:30
	mulsd	%xmm5, %xmm1
	.loc	11 235 18               # rhs.c:235:18
	mulsd	%xmm6, %xmm5
	.loc	11 236 18               # rhs.c:236:18
	mulsd	%xmm13, %xmm15
	.loc	11 235 35               # rhs.c:235:35
	subsd	%xmm15, %xmm5
	.loc	11 236 38               # rhs.c:236:38
	mulsd	%xmm12, %xmm5
	.loc	11 229 18               # rhs.c:229:18
	mulsd	%xmm12, %xmm12
.Ltmp566:
	.loc	11 228 51               # rhs.c:228:51
	addsd	%xmm10, %xmm12
	.loc	11 228 18 is_stmt 0     # rhs.c:228:18
	mulsd	272(%rsp), %xmm12       # 16-byte Folded Reload
	.loc	11 227 30 is_stmt 1     # rhs.c:227:30
	addsd	%xmm4, %xmm12
	.loc	11 231 32               # rhs.c:231:32
	mulsd	rho_i+34320(%r9,%r13,8), %xmm3
	.loc	11 230 54               # rhs.c:230:54
	subsd	%xmm3, %xmm0
	.loc	11 231 48               # rhs.c:231:48
	addsd	%xmm0, %xmm1
	.loc	11 230 18               # rhs.c:230:18
	mulsd	256(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 229 24               # rhs.c:229:24
	addsd	%xmm12, %xmm1
	.loc	11 234 45               # rhs.c:234:45
	subsd	%xmm5, %xmm2
	.loc	11 233 15               # rhs.c:233:15
	mulsd	16(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	11 232 49               # rhs.c:232:49
	subsd	%xmm2, %xmm1
	.loc	11 223 25               # rhs.c:223:25
	movsd	%xmm1, rhs+171632(%rbp,%rax)
.Ltmp567:
	.loc	11 192 21 discriminator 1 # rhs.c:192:21
	addq	$40, %rax
	cmpq	%rsi, %r13
	.loc	11 192 7 is_stmt 0 discriminator 1 # rhs.c:192:7
	leaq	1(%r13), %r13
	jl	.LBB6_108
.Ltmp568:
.LBB6_109:                              # %for.inc1621
                                        #   in Loop: Header=BB6_102 Depth=2
	.loc	11 191 5 is_stmt 1 discriminator 1 # rhs.c:191:5
	addq	$520, %r9               # imm = 0x208
	addq	$2600, %rcx             # imm = 0xA28
	.loc	11 191 19 is_stmt 0 discriminator 1 # rhs.c:191:19
	cmpq	%r8, %r12
	.loc	11 191 5 discriminator 1 # rhs.c:191:5
	leaq	1(%r12), %r12
	jl	.LBB6_102
.Ltmp569:
.LBB6_50:                               # %for.cond1624.preheader
                                        #   in Loop: Header=BB6_49 Depth=1
	movq	%rdi, %r15
	testl	%esi, %esi
	movq	%r14, %rax
	movl	$0, %ecx
	movapd	432(%rsp), %xmm3        # 16-byte Reload
	movapd	416(%rsp), %xmm4        # 16-byte Reload
.Ltmp570:
	.loc	11 276 34 is_stmt 1     # rhs.c:276:34
	movapd	.LCPI6_6(%rip), %xmm5   # xmm5 = [4.000000e+00,4.000000e+00]
	.loc	11 277 16               # rhs.c:277:16
	movapd	.LCPI6_10(%rip), %xmm6  # xmm6 = [6.000000e+00,6.000000e+00]
	.loc	11 276 34               # rhs.c:276:34
	movsd	.LCPI6_8(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI6_9(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp571:
	.loc	11 286 15               # rhs.c:286:15
	movapd	.LCPI6_5(%rip), %xmm9   # xmm9 = [5.000000e+00,5.000000e+00]
	movsd	.LCPI6_7(%rip), %xmm10  # xmm10 = mem[0],zero
	jle	.LBB6_53
.Ltmp572:
	.p2align	4, 0x90
.LBB6_51:                               # %for.cond1628.preheader
                                        #   Parent Loop BB6_49 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 246 27               # rhs.c:246:27
	movupd	rhs+171640(%rax), %xmm0
	.loc	11 247 17               # rhs.c:247:17
	movupd	u+171640(%rax), %xmm1
	.loc	11 247 16 is_stmt 0     # rhs.c:247:16
	mulpd	%xmm9, %xmm1
	.loc	11 247 37               # rhs.c:247:37
	movupd	u+174240(%rax), %xmm2
	.loc	11 247 36               # rhs.c:247:36
	mulpd	%xmm5, %xmm2
	.loc	11 247 31               # rhs.c:247:31
	subpd	%xmm2, %xmm1
	.loc	11 248 13 is_stmt 1     # rhs.c:248:13
	movupd	u+176840(%rax), %xmm2
	.loc	11 247 53               # rhs.c:247:53
	addpd	%xmm1, %xmm2
	.loc	11 246 49               # rhs.c:246:49
	mulpd	%xmm4, %xmm2
	.loc	11 246 42 is_stmt 0     # rhs.c:246:42
	subpd	%xmm2, %xmm0
	.loc	11 246 25               # rhs.c:246:25
	movupd	%xmm0, rhs+171640(%rax)
	.loc	11 246 27               # rhs.c:246:27
	movupd	rhs+171656(%rax), %xmm0
	.loc	11 247 17 is_stmt 1     # rhs.c:247:17
	movupd	u+171656(%rax), %xmm1
	.loc	11 247 16 is_stmt 0     # rhs.c:247:16
	mulpd	%xmm9, %xmm1
	.loc	11 247 37               # rhs.c:247:37
	movupd	u+174256(%rax), %xmm2
	.loc	11 247 36               # rhs.c:247:36
	mulpd	%xmm5, %xmm2
	.loc	11 247 31               # rhs.c:247:31
	subpd	%xmm2, %xmm1
	.loc	11 248 13 is_stmt 1     # rhs.c:248:13
	movupd	u+176856(%rax), %xmm2
	.loc	11 247 53               # rhs.c:247:53
	addpd	%xmm1, %xmm2
	.loc	11 246 49               # rhs.c:246:49
	mulpd	%xmm4, %xmm2
	.loc	11 246 42 is_stmt 0     # rhs.c:246:42
	subpd	%xmm2, %xmm0
	.loc	11 246 25               # rhs.c:246:25
	movupd	%xmm0, rhs+171656(%rax)
	.loc	11 246 27               # rhs.c:246:27
	movsd	rhs+171672(%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171672(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 247 16 is_stmt 1     # rhs.c:247:16
	mulsd	%xmm10, %xmm1
	movsd	u+174272(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 247 36 is_stmt 0     # rhs.c:247:36
	mulsd	%xmm7, %xmm2
	.loc	11 247 31               # rhs.c:247:31
	subsd	%xmm2, %xmm1
	.loc	11 247 53               # rhs.c:247:53
	addsd	u+176872(%rax), %xmm1
	.loc	11 246 49 is_stmt 1     # rhs.c:246:49
	mulsd	%xmm3, %xmm1
	.loc	11 246 42 is_stmt 0     # rhs.c:246:42
	subsd	%xmm1, %xmm0
	.loc	11 246 25               # rhs.c:246:25
	movsd	%xmm0, rhs+171672(%rax)
.Ltmp573:
	.loc	11 244 19 is_stmt 1 discriminator 1 # rhs.c:244:19
	incq	%rcx
	addq	$40, %rax
	cmpq	%rsi, %rcx
	.loc	11 244 5 is_stmt 0 discriminator 1 # rhs.c:244:5
	jl	.LBB6_51
.Ltmp574:
# BB#52:                                # %for.cond1685.preheader
                                        #   in Loop: Header=BB6_49 Depth=1
	testl	%esi, %esi
	movq	%r14, %rax
	movl	$0, %ecx
	jle	.LBB6_53
	.p2align	4, 0x90
.LBB6_137:                              # %for.cond1689.preheader
                                        #   Parent Loop BB6_49 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp575:
	.loc	11 255 27 is_stmt 1     # rhs.c:255:27
	movupd	rhs+174240(%rax), %xmm0
	.loc	11 256 17               # rhs.c:256:17
	movupd	u+171640(%rax), %xmm1
	.loc	11 256 16 is_stmt 0     # rhs.c:256:16
	mulpd	%xmm5, %xmm1
	.loc	11 256 39               # rhs.c:256:39
	movupd	u+174240(%rax), %xmm2
	.loc	11 256 38               # rhs.c:256:38
	mulpd	%xmm6, %xmm2
	.loc	11 256 16               # rhs.c:256:16
	subpd	%xmm1, %xmm2
	.loc	11 257 16 is_stmt 1     # rhs.c:257:16
	movupd	u+176840(%rax), %xmm1
	.loc	11 257 15 is_stmt 0     # rhs.c:257:15
	mulpd	%xmm5, %xmm1
	.loc	11 256 53 is_stmt 1     # rhs.c:256:53
	subpd	%xmm1, %xmm2
	.loc	11 257 34               # rhs.c:257:34
	movupd	u+179440(%rax), %xmm1
	.loc	11 257 32 is_stmt 0     # rhs.c:257:32
	addpd	%xmm2, %xmm1
	.loc	11 255 50 is_stmt 1     # rhs.c:255:50
	mulpd	%xmm4, %xmm1
	.loc	11 255 43 is_stmt 0     # rhs.c:255:43
	subpd	%xmm1, %xmm0
	.loc	11 255 25               # rhs.c:255:25
	movupd	%xmm0, rhs+174240(%rax)
	.loc	11 255 27               # rhs.c:255:27
	movupd	rhs+174256(%rax), %xmm0
	.loc	11 256 17 is_stmt 1     # rhs.c:256:17
	movupd	u+171656(%rax), %xmm1
	.loc	11 256 16 is_stmt 0     # rhs.c:256:16
	mulpd	%xmm5, %xmm1
	.loc	11 256 39               # rhs.c:256:39
	movupd	u+174256(%rax), %xmm2
	.loc	11 256 38               # rhs.c:256:38
	mulpd	%xmm6, %xmm2
	.loc	11 256 16               # rhs.c:256:16
	subpd	%xmm1, %xmm2
	.loc	11 257 16 is_stmt 1     # rhs.c:257:16
	movupd	u+176856(%rax), %xmm1
	.loc	11 257 15 is_stmt 0     # rhs.c:257:15
	mulpd	%xmm5, %xmm1
	.loc	11 256 53 is_stmt 1     # rhs.c:256:53
	subpd	%xmm1, %xmm2
	.loc	11 257 34               # rhs.c:257:34
	movupd	u+179456(%rax), %xmm1
	.loc	11 257 32 is_stmt 0     # rhs.c:257:32
	addpd	%xmm2, %xmm1
	.loc	11 255 50 is_stmt 1     # rhs.c:255:50
	mulpd	%xmm4, %xmm1
	.loc	11 255 43 is_stmt 0     # rhs.c:255:43
	subpd	%xmm1, %xmm0
	.loc	11 255 25               # rhs.c:255:25
	movupd	%xmm0, rhs+174256(%rax)
	.loc	11 255 27               # rhs.c:255:27
	movsd	rhs+174272(%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171672(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 256 16 is_stmt 1     # rhs.c:256:16
	mulsd	%xmm7, %xmm1
	movsd	u+174272(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 256 38 is_stmt 0     # rhs.c:256:38
	mulsd	%xmm8, %xmm2
	.loc	11 256 16               # rhs.c:256:16
	subsd	%xmm1, %xmm2
	movsd	u+176872(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 257 15 is_stmt 1     # rhs.c:257:15
	mulsd	%xmm7, %xmm1
	.loc	11 256 53               # rhs.c:256:53
	subsd	%xmm1, %xmm2
	.loc	11 257 32               # rhs.c:257:32
	addsd	u+179472(%rax), %xmm2
	.loc	11 255 50               # rhs.c:255:50
	mulsd	%xmm3, %xmm2
	.loc	11 255 43 is_stmt 0     # rhs.c:255:43
	subsd	%xmm2, %xmm0
	.loc	11 255 25               # rhs.c:255:25
	movsd	%xmm0, rhs+174272(%rax)
.Ltmp576:
	.loc	11 253 19 is_stmt 1 discriminator 1 # rhs.c:253:19
	incq	%rcx
	addq	$40, %rax
	cmpq	%rsi, %rcx
	jl	.LBB6_137
.Ltmp577:
.LBB6_53:                               # %for.cond1757.preheader
                                        #   in Loop: Header=BB6_49 Depth=1
	movq	%rdx, %r11
	cmpl	$3, %r11d
	movq	376(%rsp), %r12         # 8-byte Reload
	movq	384(%rsp), %r13         # 8-byte Reload
	jl	.LBB6_58
# BB#54:                                # %for.cond1761.preheader.lr.ph
                                        #   in Loop: Header=BB6_49 Depth=1
	testl	%esi, %esi
	movq	%r14, %rcx
	movl	$3, %ebp
	jle	.LBB6_63
	.p2align	4, 0x90
.LBB6_55:                               # %for.cond1765.preheader.lr.ph
                                        #   Parent Loop BB6_49 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_56 Depth 3
.Ltmp578:
	.loc	11 261 5 discriminator 1 # rhs.c:261:5
	leaq	1(%rbp), %rdi
	movq	%rcx, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB6_56:                               # %for.cond1765.preheader
                                        #   Parent Loop BB6_49 Depth=1
                                        #     Parent Loop BB6_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp579:
	.loc	11 264 29               # rhs.c:264:29
	movupd	rhs+176840(%rax), %xmm0
	.loc	11 265 16               # rhs.c:265:16
	movupd	u+171640(%rax), %xmm1
	.loc	11 265 38 is_stmt 0     # rhs.c:265:38
	movupd	u+174240(%rax), %xmm2
	.loc	11 265 37               # rhs.c:265:37
	mulpd	%xmm5, %xmm2
	.loc	11 265 32               # rhs.c:265:32
	subpd	%xmm2, %xmm1
	.loc	11 266 20 is_stmt 1     # rhs.c:266:20
	movupd	u+176840(%rax), %xmm2
	.loc	11 266 19 is_stmt 0     # rhs.c:266:19
	mulpd	%xmm6, %xmm2
	.loc	11 265 54 is_stmt 1     # rhs.c:265:54
	addpd	%xmm1, %xmm2
	.loc	11 266 40               # rhs.c:266:40
	movupd	u+179440(%rax), %xmm1
	.loc	11 266 39 is_stmt 0     # rhs.c:266:39
	mulpd	%xmm5, %xmm1
	.loc	11 266 34               # rhs.c:266:34
	subpd	%xmm1, %xmm2
	.loc	11 267 16 is_stmt 1     # rhs.c:267:16
	movupd	u+182040(%rax), %xmm1
	.loc	11 266 56               # rhs.c:266:56
	addpd	%xmm2, %xmm1
	.loc	11 264 52               # rhs.c:264:52
	mulpd	%xmm4, %xmm1
	.loc	11 264 45 is_stmt 0     # rhs.c:264:45
	subpd	%xmm1, %xmm0
	.loc	11 264 27               # rhs.c:264:27
	movupd	%xmm0, rhs+176840(%rax)
	.loc	11 264 29               # rhs.c:264:29
	movupd	rhs+176856(%rax), %xmm0
	.loc	11 265 16 is_stmt 1     # rhs.c:265:16
	movupd	u+171656(%rax), %xmm1
	.loc	11 265 38 is_stmt 0     # rhs.c:265:38
	movupd	u+174256(%rax), %xmm2
	.loc	11 265 37               # rhs.c:265:37
	mulpd	%xmm5, %xmm2
	.loc	11 265 32               # rhs.c:265:32
	subpd	%xmm2, %xmm1
	.loc	11 266 20 is_stmt 1     # rhs.c:266:20
	movupd	u+176856(%rax), %xmm2
	.loc	11 266 19 is_stmt 0     # rhs.c:266:19
	mulpd	%xmm6, %xmm2
	.loc	11 265 54 is_stmt 1     # rhs.c:265:54
	addpd	%xmm1, %xmm2
	.loc	11 266 40               # rhs.c:266:40
	movupd	u+179456(%rax), %xmm1
	.loc	11 266 39 is_stmt 0     # rhs.c:266:39
	mulpd	%xmm5, %xmm1
	.loc	11 266 34               # rhs.c:266:34
	subpd	%xmm1, %xmm2
	.loc	11 267 16 is_stmt 1     # rhs.c:267:16
	movupd	u+182056(%rax), %xmm1
	.loc	11 266 56               # rhs.c:266:56
	addpd	%xmm2, %xmm1
	.loc	11 264 52               # rhs.c:264:52
	mulpd	%xmm4, %xmm1
	.loc	11 264 45 is_stmt 0     # rhs.c:264:45
	subpd	%xmm1, %xmm0
	.loc	11 264 27               # rhs.c:264:27
	movupd	%xmm0, rhs+176856(%rax)
	.loc	11 264 29               # rhs.c:264:29
	movsd	rhs+176872(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	11 265 16 is_stmt 1     # rhs.c:265:16
	movsd	u+171672(%rax), %xmm1   # xmm1 = mem[0],zero
	movsd	u+174272(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 265 37 is_stmt 0     # rhs.c:265:37
	mulsd	%xmm7, %xmm2
	.loc	11 265 32               # rhs.c:265:32
	subsd	%xmm2, %xmm1
	movsd	u+176872(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 266 19 is_stmt 1     # rhs.c:266:19
	mulsd	%xmm8, %xmm2
	.loc	11 265 54               # rhs.c:265:54
	addsd	%xmm1, %xmm2
	movsd	u+179472(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 266 39               # rhs.c:266:39
	mulsd	%xmm7, %xmm1
	.loc	11 266 34 is_stmt 0     # rhs.c:266:34
	subsd	%xmm1, %xmm2
	.loc	11 266 56               # rhs.c:266:56
	addsd	u+182072(%rax), %xmm2
	.loc	11 264 52 is_stmt 1     # rhs.c:264:52
	mulsd	%xmm3, %xmm2
	.loc	11 264 45 is_stmt 0     # rhs.c:264:45
	subsd	%xmm2, %xmm0
	.loc	11 264 27               # rhs.c:264:27
	movsd	%xmm0, rhs+176872(%rax)
.Ltmp580:
	.loc	11 262 21 is_stmt 1 discriminator 1 # rhs.c:262:21
	incq	%rdx
	addq	$40, %rax
	cmpq	%rsi, %rdx
	.loc	11 262 7 is_stmt 0 discriminator 1 # rhs.c:262:7
	jl	.LBB6_56
.Ltmp581:
# BB#57:                                # %for.inc1843
                                        #   in Loop: Header=BB6_55 Depth=2
	.loc	11 261 5 is_stmt 1 discriminator 1 # rhs.c:261:5
	addq	$2600, %rcx             # imm = 0xA28
	.loc	11 261 19 is_stmt 0 discriminator 1 # rhs.c:261:19
	cmpq	%r11, %rbp
	movq	%rdi, %rbp
	jl	.LBB6_55
.Ltmp582:
.LBB6_58:                               # %for.end1845
                                        #   in Loop: Header=BB6_49 Depth=1
	#DEBUG_VALUE: compute_rhs:i <- 1
	testl	%esi, %esi
	jle	.LBB6_63
# BB#59:                                # %for.cond1851.preheader.preheader
                                        #   in Loop: Header=BB6_49 Depth=1
	movq	%rbx, %r9
.Ltmp583:
	.loc	11 275 27 is_stmt 1     # rhs.c:275:27
	movq	360(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%r14), %rax
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB6_60:                               # %for.cond1851.preheader
                                        #   Parent Loop BB6_49 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movupd	rhs+169040(%rax,%rcx), %xmm0
	.loc	11 276 13               # rhs.c:276:13
	leaq	(%r12,%rcx), %rdi
	movupd	-32(%r14,%rdi), %xmm1
	.loc	11 276 35 is_stmt 0     # rhs.c:276:35
	leaq	(%r10,%rcx), %rbp
	movupd	-32(%r14,%rbp), %xmm2
	.loc	11 276 34               # rhs.c:276:34
	mulpd	%xmm5, %xmm2
	.loc	11 276 29               # rhs.c:276:29
	subpd	%xmm2, %xmm1
	.loc	11 277 17 is_stmt 1     # rhs.c:277:17
	movupd	u+169040(%rax,%rcx), %xmm2
	.loc	11 277 16 is_stmt 0     # rhs.c:277:16
	mulpd	%xmm6, %xmm2
	.loc	11 276 51 is_stmt 1     # rhs.c:276:51
	addpd	%xmm1, %xmm2
	.loc	11 277 37               # rhs.c:277:37
	leaq	(%r13,%rcx), %rbx
	movupd	-32(%r14,%rbx), %xmm1
	.loc	11 277 36 is_stmt 0     # rhs.c:277:36
	mulpd	%xmm5, %xmm1
	.loc	11 277 31               # rhs.c:277:31
	subpd	%xmm1, %xmm2
	.loc	11 275 50 is_stmt 1     # rhs.c:275:50
	mulpd	%xmm4, %xmm2
	.loc	11 275 43 is_stmt 0     # rhs.c:275:43
	subpd	%xmm2, %xmm0
	.loc	11 275 25               # rhs.c:275:25
	movupd	%xmm0, rhs+169040(%rax,%rcx)
	.loc	11 275 27               # rhs.c:275:27
	movupd	rhs+169056(%rax,%rcx), %xmm0
	.loc	11 276 13 is_stmt 1     # rhs.c:276:13
	movupd	-16(%r14,%rdi), %xmm1
	.loc	11 276 35 is_stmt 0     # rhs.c:276:35
	movupd	-16(%r14,%rbp), %xmm2
	.loc	11 276 34               # rhs.c:276:34
	mulpd	%xmm5, %xmm2
	.loc	11 276 29               # rhs.c:276:29
	subpd	%xmm2, %xmm1
	.loc	11 277 17 is_stmt 1     # rhs.c:277:17
	movupd	u+169056(%rax,%rcx), %xmm2
	.loc	11 277 16 is_stmt 0     # rhs.c:277:16
	mulpd	%xmm6, %xmm2
	.loc	11 276 51 is_stmt 1     # rhs.c:276:51
	addpd	%xmm1, %xmm2
	.loc	11 277 37               # rhs.c:277:37
	movupd	-16(%r14,%rbx), %xmm1
	.loc	11 277 36 is_stmt 0     # rhs.c:277:36
	mulpd	%xmm5, %xmm1
	.loc	11 277 31               # rhs.c:277:31
	subpd	%xmm1, %xmm2
	.loc	11 275 50 is_stmt 1     # rhs.c:275:50
	mulpd	%xmm4, %xmm2
	.loc	11 275 43 is_stmt 0     # rhs.c:275:43
	subpd	%xmm2, %xmm0
	.loc	11 275 25               # rhs.c:275:25
	movupd	%xmm0, rhs+169056(%rax,%rcx)
	.loc	11 275 27               # rhs.c:275:27
	movsd	rhs+169072(%rax,%rcx), %xmm0 # xmm0 = mem[0],zero
	.loc	11 276 13 is_stmt 1     # rhs.c:276:13
	movsd	(%r14,%rdi), %xmm1      # xmm1 = mem[0],zero
	movsd	(%r14,%rbp), %xmm2      # xmm2 = mem[0],zero
	.loc	11 276 34 is_stmt 0     # rhs.c:276:34
	mulsd	%xmm7, %xmm2
	.loc	11 276 29               # rhs.c:276:29
	subsd	%xmm2, %xmm1
	movsd	u+169072(%rax,%rcx), %xmm2 # xmm2 = mem[0],zero
	.loc	11 277 16 is_stmt 1     # rhs.c:277:16
	mulsd	%xmm8, %xmm2
	.loc	11 276 51               # rhs.c:276:51
	addsd	%xmm1, %xmm2
	movsd	(%r14,%rbx), %xmm1      # xmm1 = mem[0],zero
	.loc	11 277 36               # rhs.c:277:36
	mulsd	%xmm7, %xmm1
	.loc	11 277 31 is_stmt 0     # rhs.c:277:31
	subsd	%xmm1, %xmm2
	.loc	11 275 50 is_stmt 1     # rhs.c:275:50
	mulsd	%xmm3, %xmm2
	.loc	11 275 43 is_stmt 0     # rhs.c:275:43
	subsd	%xmm2, %xmm0
	.loc	11 275 25               # rhs.c:275:25
	movsd	%xmm0, rhs+169072(%rax,%rcx)
.Ltmp584:
	.loc	11 273 19 is_stmt 1 discriminator 1 # rhs.c:273:19
	incq	%rdx
	addq	$40, %rcx
	cmpq	%rsi, %rdx
	.loc	11 273 5 is_stmt 0 discriminator 1 # rhs.c:273:5
	jl	.LBB6_60
.Ltmp585:
# BB#61:                                # %for.end1918
                                        #   in Loop: Header=BB6_49 Depth=1
	testl	%esi, %esi
	#DEBUG_VALUE: compute_rhs:i <- 1
	movq	368(%rsp), %rax         # 8-byte Reload
	movq	%r10, %rcx
	movq	352(%rsp), %rdx         # 8-byte Reload
	movl	$0, %edi
	movq	%r9, %rbx
	jle	.LBB6_63
	.p2align	4, 0x90
.LBB6_62:                               # %for.cond1924.preheader
                                        #   Parent Loop BB6_49 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp586:
	.loc	11 284 27 is_stmt 1     # rhs.c:284:27
	movupd	rhs+169040(%rdx,%r14), %xmm0
	.loc	11 285 13               # rhs.c:285:13
	movupd	-32(%rcx,%r14), %xmm1
	.loc	11 285 34 is_stmt 0     # rhs.c:285:34
	movupd	-32(%rax,%r14), %xmm2
	.loc	11 285 33               # rhs.c:285:33
	mulpd	%xmm5, %xmm2
	.loc	11 285 29               # rhs.c:285:29
	subpd	%xmm2, %xmm1
	.loc	11 286 16 is_stmt 1     # rhs.c:286:16
	movupd	u+169040(%rdx,%r14), %xmm2
	.loc	11 286 15 is_stmt 0     # rhs.c:286:15
	mulpd	%xmm9, %xmm2
	.loc	11 285 50 is_stmt 1     # rhs.c:285:50
	addpd	%xmm1, %xmm2
	.loc	11 284 50               # rhs.c:284:50
	mulpd	%xmm4, %xmm2
	.loc	11 284 43 is_stmt 0     # rhs.c:284:43
	subpd	%xmm2, %xmm0
	.loc	11 284 25               # rhs.c:284:25
	movupd	%xmm0, rhs+169040(%rdx,%r14)
	.loc	11 284 27               # rhs.c:284:27
	movupd	rhs+169056(%rdx,%r14), %xmm0
	.loc	11 285 13 is_stmt 1     # rhs.c:285:13
	movupd	-16(%rcx,%r14), %xmm1
	.loc	11 285 34 is_stmt 0     # rhs.c:285:34
	movupd	-16(%rax,%r14), %xmm2
	.loc	11 285 33               # rhs.c:285:33
	mulpd	%xmm5, %xmm2
	.loc	11 285 29               # rhs.c:285:29
	subpd	%xmm2, %xmm1
	.loc	11 286 16 is_stmt 1     # rhs.c:286:16
	movupd	u+169056(%rdx,%r14), %xmm2
	.loc	11 286 15 is_stmt 0     # rhs.c:286:15
	mulpd	%xmm9, %xmm2
	.loc	11 285 50 is_stmt 1     # rhs.c:285:50
	addpd	%xmm1, %xmm2
	.loc	11 284 50               # rhs.c:284:50
	mulpd	%xmm4, %xmm2
	.loc	11 284 43 is_stmt 0     # rhs.c:284:43
	subpd	%xmm2, %xmm0
	.loc	11 284 25               # rhs.c:284:25
	movupd	%xmm0, rhs+169056(%rdx,%r14)
	.loc	11 284 27               # rhs.c:284:27
	movsd	rhs+169072(%rdx,%r14), %xmm0 # xmm0 = mem[0],zero
	.loc	11 285 13 is_stmt 1     # rhs.c:285:13
	movsd	(%rcx,%r14), %xmm1      # xmm1 = mem[0],zero
	movsd	(%rax,%r14), %xmm2      # xmm2 = mem[0],zero
	.loc	11 285 33 is_stmt 0     # rhs.c:285:33
	mulsd	%xmm7, %xmm2
	.loc	11 285 29               # rhs.c:285:29
	subsd	%xmm2, %xmm1
	movsd	u+169072(%rdx,%r14), %xmm2 # xmm2 = mem[0],zero
	.loc	11 286 15 is_stmt 1     # rhs.c:286:15
	mulsd	%xmm10, %xmm2
	.loc	11 285 50               # rhs.c:285:50
	addsd	%xmm1, %xmm2
	.loc	11 284 50               # rhs.c:284:50
	mulsd	%xmm3, %xmm2
	.loc	11 284 43 is_stmt 0     # rhs.c:284:43
	subsd	%xmm2, %xmm0
	.loc	11 284 25               # rhs.c:284:25
	movsd	%xmm0, rhs+169072(%rdx,%r14)
.Ltmp587:
	.loc	11 282 19 is_stmt 1 discriminator 1 # rhs.c:282:19
	incq	%rdi
	addq	$40, %rdx
	addq	$40, %rcx
	addq	$40, %rax
	cmpq	%rsi, %rdi
	.loc	11 282 5 is_stmt 0 discriminator 1 # rhs.c:282:5
	jl	.LBB6_62
.Ltmp588:
.LBB6_63:                               # %for.inc1981
                                        #   in Loop: Header=BB6_49 Depth=1
	movq	392(%rsp), %r9          # 8-byte Reload
	.loc	11 190 3 is_stmt 1 discriminator 1 # rhs.c:190:3
	addq	$33800, %r9             # imm = 0x8408
	addq	$169000, %r14           # imm = 0x29428
	movq	400(%rsp), %rax         # 8-byte Reload
	.loc	11 190 17 is_stmt 0 discriminator 1 # rhs.c:190:17
	cmpq	%rbx, %rax
	.loc	11 190 3 discriminator 1 # rhs.c:190:3
	leaq	1(%rax), %rax
	movq	%r15, %rdi
	jl	.LBB6_49
.Ltmp589:
.LBB6_64:                               # %for.end1983
	.loc	11 290 7 is_stmt 1      # rhs.c:290:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_67
# BB#65:                                # %if.end1986
	.loc	11 290 16 is_stmt 0 discriminator 1 # rhs.c:290:16
	movl	$3, %edi
	callq	timer_stop
.Ltmp590:
	.loc	11 292 7 is_stmt 1      # rhs.c:292:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_67
# BB#66:                                # %if.then1988
	.loc	11 292 16 is_stmt 0 discriminator 1 # rhs.c:292:16
	movl	$4, %edi
	callq	timer_start
.Ltmp591:
.LBB6_67:                               # %for.cond1990.preheader
	.loc	11 296 3 is_stmt 1 discriminator 1 # rhs.c:296:3
	movslq	grid_points+8(%rip), %r8
	.loc	11 296 34 is_stmt 0 discriminator 1 # rhs.c:296:34
	addq	$-2, %r8
	.loc	11 296 17 discriminator 1 # rhs.c:296:17
	testl	%r8d, %r8d
	jle	.LBB6_79
# BB#68:                                # %for.cond1994.preheader.lr.ph
	.loc	11 296 3 discriminator 1 # rhs.c:296:3
	movslq	grid_points+4(%rip), %r12
.Ltmp592:
	.loc	11 297 36 is_stmt 1 discriminator 1 # rhs.c:297:36
	addq	$-2, %r12
.Ltmp593:
	.loc	11 296 3 discriminator 1 # rhs.c:296:3
	movslq	grid_points(%rip), %rdx
.Ltmp594:
	.loc	11 298 38 discriminator 1 # rhs.c:298:38
	addq	$-2, %rdx
.Ltmp595:
	.loc	11 306 11               # rhs.c:306:11
	movsd	tz2(%rip), %xmm9        # xmm9 = mem[0],zero
	.loc	11 307 45               # rhs.c:307:45
	movapd	%xmm9, 16(%rsp)         # 16-byte Spill
	movsd	dz2tz1(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 310 11               # rhs.c:310:11
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	movsd	zzcon2(%rip), %xmm1     # xmm1 = mem[0],zero
	movsd	con43(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	11 324 17               # rhs.c:324:17
	mulsd	%xmm1, %xmm2
	.loc	11 329 16               # rhs.c:329:16
	movsd	c2(%rip), %xmm3         # xmm3 = mem[0],zero
	.loc	11 330 45               # rhs.c:330:45
	movsd	dz5tz1(%rip), %xmm8     # xmm8 = mem[0],zero
	.loc	11 303 52               # rhs.c:303:52
	movapd	%xmm8, 32(%rsp)         # 16-byte Spill
	movsd	dz1tz1(%rip), %xmm4     # xmm4 = mem[0],zero
	movapd	%xmm4, %xmm5
	unpcklpd	%xmm1, %xmm5    # xmm5 = xmm5[0],xmm1[0]
	movapd	%xmm5, 336(%rsp)        # 16-byte Spill
	.loc	11 299 16               # rhs.c:299:16
	movapd	%xmm9, %xmm12
	movlhps	%xmm12, %xmm12          # xmm12 = xmm12[0,0]
	.loc	11 314 52               # rhs.c:314:52
	movsd	dz3tz1(%rip), %xmm5     # xmm5 = mem[0],zero
	.loc	11 299 16               # rhs.c:299:16
	movsd	dz4tz1(%rip), %xmm6     # xmm6 = mem[0],zero
	.loc	11 314 52               # rhs.c:314:52
	movapd	%xmm5, %xmm7
	unpcklpd	%xmm6, %xmm7    # xmm7 = xmm7[0],xmm6[0]
	movapd	%xmm7, 320(%rsp)        # 16-byte Spill
	.loc	11 317 18               # rhs.c:317:18
	movapd	%xmm1, %xmm7
	unpcklpd	%xmm2, %xmm7    # xmm7 = xmm7[0],xmm2[0]
	movapd	%xmm7, 304(%rsp)        # 16-byte Spill
	.loc	11 299 16               # rhs.c:299:16
	movq	%rdx, %r15
	andq	$-2, %r15
	movq	%rdx, %r9
	orq	$1, %r9
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movaps	%xmm4, 208(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 160(%rsp)        # 16-byte Spill
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 240(%rsp)        # 16-byte Spill
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movaps	%xmm5, 192(%rsp)        # 16-byte Spill
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	movaps	%xmm6, 176(%rsp)        # 16-byte Spill
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 224(%rsp)        # 16-byte Spill
	movapd	%xmm3, %xmm0
	movapd	%xmm3, %xmm9
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 144(%rsp)        # 16-byte Spill
	movapd	%xmm8, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 128(%rsp)        # 16-byte Spill
	.loc	11 333 11               # rhs.c:333:11
	movsd	zzcon3(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 299 16               # rhs.c:299:16
	movapd	%xmm0, 288(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 112(%rsp)        # 16-byte Spill
	.loc	11 335 11               # rhs.c:335:11
	movsd	zzcon4(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 299 16               # rhs.c:299:16
	movapd	%xmm0, 272(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 96(%rsp)         # 16-byte Spill
	.loc	11 337 11               # rhs.c:337:11
	movsd	zzcon5(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 299 16               # rhs.c:299:16
	movapd	%xmm0, 256(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 80(%rsp)         # 16-byte Spill
	.loc	11 340 20               # rhs.c:340:20
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	11 299 16               # rhs.c:299:16
	movapd	%xmm0, 48(%rsp)         # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 64(%rsp)         # 16-byte Spill
	movl	$1, %r10d
	xorl	%r11d, %r11d
	xorl	%r14d, %r14d
	.p2align	4, 0x90
.LBB6_69:                               # %for.cond1994.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_70 Depth 2
                                        #       Child Loop BB6_73 Depth 3
                                        #       Child Loop BB6_76 Depth 3
	testl	%r12d, %r12d
	movq	%r11, %r13
	movq	%r14, %rax
	movl	$1, %ebx
	jle	.LBB6_78
	.p2align	4, 0x90
.LBB6_70:                               # %for.cond1998.preheader
                                        #   Parent Loop BB6_69 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_73 Depth 3
                                        #       Child Loop BB6_76 Depth 3
	testl	%edx, %edx
	jle	.LBB6_77
# BB#71:                                # %for.body2001.preheader
                                        #   in Loop: Header=BB6_70 Depth=2
	cmpl	$2, %edx
	movl	$1, %ecx
	jb	.LBB6_75
# BB#72:                                # %min.iters.checked4540
                                        #   in Loop: Header=BB6_70 Depth=2
	testq	%r15, %r15
	movq	%r15, %rsi
	movq	%rax, %rbp
	movl	$1, %ecx
	je	.LBB6_75
	.p2align	4, 0x90
.LBB6_73:                               # %vector.body4536
                                        #   Parent Loop BB6_69 Depth=1
                                        #     Parent Loop BB6_70 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movupd	ws+34328(%rbp), %xmm11
	movaps	%xmm12, %xmm10
	.loc	11 300 16               # rhs.c:300:16
	movupd	ws+68128(%rbp), %xmm12
	.loc	11 301 16               # rhs.c:301:16
	movupd	ws+528(%rbp), %xmm15
	.loc	11 303 27               # rhs.c:303:27
	movsd	rhs+171640(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	rhs+171680(%rbp,%rbp,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 304 12               # rhs.c:304:12
	movsd	u+340640(%rbp,%rbp,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+340680(%rbp,%rbp,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 304 34 is_stmt 0     # rhs.c:304:34
	movsd	u+171640(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+171680(%rbp,%rbp,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 304 33               # rhs.c:304:33
	addpd	%xmm2, %xmm2
	.loc	11 304 28               # rhs.c:304:28
	subpd	%xmm2, %xmm1
	.loc	11 305 12 is_stmt 1     # rhs.c:305:12
	movsd	u+2640(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+2680(%rbp,%rbp,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 304 48               # rhs.c:304:48
	addpd	%xmm1, %xmm2
	.loc	11 303 52               # rhs.c:303:52
	mulpd	208(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	11 303 43 is_stmt 0     # rhs.c:303:43
	addpd	%xmm0, %xmm2
	.loc	11 306 18 is_stmt 1     # rhs.c:306:18
	movsd	u+340664(%rbp,%rbp,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+340704(%rbp,%rbp,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 306 36 is_stmt 0     # rhs.c:306:36
	movsd	u+2664(%rbp,%rbp,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+2704(%rbp,%rbp,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 306 34               # rhs.c:306:34
	movapd	%xmm1, %xmm0
	subpd	%xmm5, %xmm0
	.loc	11 306 15               # rhs.c:306:15
	mulpd	%xmm10, %xmm0
	.loc	11 305 29 is_stmt 1     # rhs.c:305:29
	subpd	%xmm0, %xmm2
	.loc	11 303 25               # rhs.c:303:25
	movlpd	%xmm2, rhs+171640(%rbp,%rbp,4)
	movhpd	%xmm2, rhs+171680(%rbp,%rbp,4)
	.loc	11 307 27               # rhs.c:307:27
	movsd	rhs+171648(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171688(%rbp,%rbp,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 308 12               # rhs.c:308:12
	movsd	u+340648(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+340688(%rbp,%rbp,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 308 34 is_stmt 0     # rhs.c:308:34
	movsd	u+171648(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+171688(%rbp,%rbp,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 308 33               # rhs.c:308:33
	addpd	%xmm3, %xmm3
	.loc	11 308 28               # rhs.c:308:28
	movapd	%xmm0, %xmm4
	subpd	%xmm3, %xmm4
	.loc	11 309 12 is_stmt 1     # rhs.c:309:12
	movsd	u+2648(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+2688(%rbp,%rbp,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 308 48               # rhs.c:308:48
	addpd	%xmm3, %xmm4
	.loc	11 307 52               # rhs.c:307:52
	mulpd	160(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 307 43 is_stmt 0     # rhs.c:307:43
	addpd	%xmm2, %xmm4
	.loc	11 310 21 is_stmt 1     # rhs.c:310:21
	movupd	us+68128(%rbp), %xmm2
	.loc	11 310 41 is_stmt 0     # rhs.c:310:41
	movupd	us+34328(%rbp), %xmm6
	.loc	11 310 40               # rhs.c:310:40
	addpd	%xmm6, %xmm6
	.loc	11 310 35               # rhs.c:310:35
	subpd	%xmm6, %xmm2
	.loc	11 311 15 is_stmt 1     # rhs.c:311:15
	movupd	us+528(%rbp), %xmm6
	.loc	11 310 53               # rhs.c:310:53
	addpd	%xmm2, %xmm6
	movapd	240(%rsp), %xmm7        # 16-byte Reload
	.loc	11 310 18 is_stmt 0     # rhs.c:310:18
	mulpd	%xmm7, %xmm6
	.loc	11 309 29 is_stmt 1     # rhs.c:309:29
	addpd	%xmm4, %xmm6
	.loc	11 312 33               # rhs.c:312:33
	mulpd	%xmm12, %xmm0
	.loc	11 313 30               # rhs.c:313:30
	mulpd	%xmm15, %xmm3
	.loc	11 312 38               # rhs.c:312:38
	subpd	%xmm3, %xmm0
	.loc	11 312 15 is_stmt 0     # rhs.c:312:15
	mulpd	%xmm10, %xmm0
	.loc	11 311 30 is_stmt 1     # rhs.c:311:30
	subpd	%xmm0, %xmm6
	.loc	11 307 25               # rhs.c:307:25
	movlpd	%xmm6, rhs+171648(%rbp,%rbp,4)
	movhpd	%xmm6, rhs+171688(%rbp,%rbp,4)
	.loc	11 314 27               # rhs.c:314:27
	movsd	rhs+171656(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171696(%rbp,%rbp,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 315 12               # rhs.c:315:12
	movsd	u+340656(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+340696(%rbp,%rbp,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 315 34 is_stmt 0     # rhs.c:315:34
	movsd	u+171656(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+171696(%rbp,%rbp,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 315 33               # rhs.c:315:33
	addpd	%xmm3, %xmm3
	.loc	11 315 28               # rhs.c:315:28
	movapd	%xmm0, %xmm4
	subpd	%xmm3, %xmm4
	.loc	11 316 12 is_stmt 1     # rhs.c:316:12
	movsd	u+2656(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+2696(%rbp,%rbp,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 315 48               # rhs.c:315:48
	addpd	%xmm3, %xmm4
	.loc	11 314 52               # rhs.c:314:52
	mulpd	192(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 314 43 is_stmt 0     # rhs.c:314:43
	addpd	%xmm2, %xmm4
	.loc	11 317 21 is_stmt 1     # rhs.c:317:21
	movupd	vs+68128(%rbp), %xmm2
	.loc	11 317 41 is_stmt 0     # rhs.c:317:41
	movupd	vs+34328(%rbp), %xmm6
	.loc	11 317 40               # rhs.c:317:40
	addpd	%xmm6, %xmm6
	.loc	11 317 35               # rhs.c:317:35
	subpd	%xmm6, %xmm2
	.loc	11 318 15 is_stmt 1     # rhs.c:318:15
	movupd	vs+528(%rbp), %xmm6
	.loc	11 317 53               # rhs.c:317:53
	addpd	%xmm2, %xmm6
	.loc	11 317 18 is_stmt 0     # rhs.c:317:18
	mulpd	%xmm7, %xmm6
	.loc	11 316 29 is_stmt 1     # rhs.c:316:29
	addpd	%xmm4, %xmm6
	.loc	11 319 33               # rhs.c:319:33
	mulpd	%xmm12, %xmm0
	.loc	11 320 30               # rhs.c:320:30
	mulpd	%xmm15, %xmm3
	.loc	11 319 38               # rhs.c:319:38
	subpd	%xmm3, %xmm0
	.loc	11 319 15 is_stmt 0     # rhs.c:319:15
	mulpd	%xmm10, %xmm0
	.loc	11 318 30 is_stmt 1     # rhs.c:318:30
	subpd	%xmm0, %xmm6
	.loc	11 314 25               # rhs.c:314:25
	movlpd	%xmm6, rhs+171656(%rbp,%rbp,4)
	movhpd	%xmm6, rhs+171696(%rbp,%rbp,4)
	.loc	11 321 27               # rhs.c:321:27
	movsd	rhs+171664(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171704(%rbp,%rbp,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 322 34               # rhs.c:322:34
	movsd	u+171664(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+171704(%rbp,%rbp,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 322 33 is_stmt 0     # rhs.c:322:33
	addpd	%xmm3, %xmm3
	.loc	11 324 31 is_stmt 1     # rhs.c:324:31
	movapd	%xmm12, %xmm0
	.loc	11 325 33               # rhs.c:325:33
	movapd	%xmm12, %xmm6
	mulpd	%xmm1, %xmm6
	.loc	11 322 28               # rhs.c:322:28
	subpd	%xmm3, %xmm1
	.loc	11 322 48 is_stmt 0     # rhs.c:322:48
	addpd	%xmm5, %xmm1
	.loc	11 321 52 is_stmt 1     # rhs.c:321:52
	mulpd	176(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 321 43 is_stmt 0     # rhs.c:321:43
	addpd	%xmm2, %xmm1
	.loc	11 324 36 is_stmt 1     # rhs.c:324:36
	movapd	%xmm11, %xmm2
	addpd	%xmm2, %xmm2
	.loc	11 324 31 is_stmt 0     # rhs.c:324:31
	subpd	%xmm2, %xmm0
	.loc	11 324 42               # rhs.c:324:42
	addpd	%xmm15, %xmm0
	.loc	11 324 24               # rhs.c:324:24
	mulpd	224(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 323 29 is_stmt 1     # rhs.c:323:29
	addpd	%xmm1, %xmm0
	.loc	11 326 30               # rhs.c:326:30
	mulpd	%xmm15, %xmm5
	.loc	11 325 38               # rhs.c:325:38
	subpd	%xmm5, %xmm6
	.loc	11 327 16               # rhs.c:327:16
	movsd	u+340672(%rbp,%rbp,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+340712(%rbp,%rbp,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 327 34 is_stmt 0     # rhs.c:327:34
	movupd	square+68128(%rbp), %xmm13
	.loc	11 327 32               # rhs.c:327:32
	movapd	%xmm1, %xmm7
	subpd	%xmm13, %xmm7
	.loc	11 328 16 is_stmt 1     # rhs.c:328:16
	movsd	u+2672(%rbp,%rbp,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+2712(%rbp,%rbp,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 327 52               # rhs.c:327:52
	subpd	%xmm5, %xmm7
	.loc	11 328 34               # rhs.c:328:34
	movupd	square+528(%rbp), %xmm8
	.loc	11 328 32 is_stmt 0     # rhs.c:328:32
	addpd	%xmm8, %xmm7
	movapd	144(%rsp), %xmm4        # 16-byte Reload
	.loc	11 329 15 is_stmt 1     # rhs.c:329:15
	mulpd	%xmm4, %xmm7
	.loc	11 326 35               # rhs.c:326:35
	addpd	%xmm6, %xmm7
	.loc	11 325 15               # rhs.c:325:15
	mulpd	%xmm10, %xmm7
	.loc	11 324 49               # rhs.c:324:49
	subpd	%xmm7, %xmm0
	.loc	11 321 25               # rhs.c:321:25
	movlpd	%xmm0, rhs+171664(%rbp,%rbp,4)
	movhpd	%xmm0, rhs+171704(%rbp,%rbp,4)
	.loc	11 330 27               # rhs.c:330:27
	movsd	rhs+171672(%rbp,%rbp,4), %xmm6 # xmm6 = mem[0],zero
	movhpd	rhs+171712(%rbp,%rbp,4), %xmm6 # xmm6 = xmm6[0],mem[0]
	.loc	11 331 34               # rhs.c:331:34
	movsd	u+171672(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+171712(%rbp,%rbp,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 331 33 is_stmt 0     # rhs.c:331:33
	addpd	%xmm0, %xmm0
	.loc	11 331 28               # rhs.c:331:28
	movapd	%xmm1, %xmm7
	subpd	%xmm0, %xmm7
	.loc	11 331 48               # rhs.c:331:48
	addpd	%xmm5, %xmm7
	.loc	11 330 52 is_stmt 1     # rhs.c:330:52
	mulpd	128(%rsp), %xmm7        # 16-byte Folded Reload
	.loc	11 330 43 is_stmt 0     # rhs.c:330:43
	addpd	%xmm6, %xmm7
	.loc	11 333 21 is_stmt 1     # rhs.c:333:21
	movupd	qs+68128(%rbp), %xmm3
	.loc	11 333 41 is_stmt 0     # rhs.c:333:41
	movupd	qs+34328(%rbp), %xmm6
	.loc	11 333 40               # rhs.c:333:40
	addpd	%xmm6, %xmm6
	.loc	11 333 35               # rhs.c:333:35
	subpd	%xmm6, %xmm3
	.loc	11 334 15 is_stmt 1     # rhs.c:334:15
	movupd	qs+528(%rbp), %xmm6
	.loc	11 333 53               # rhs.c:333:53
	addpd	%xmm3, %xmm6
	.loc	11 333 18 is_stmt 0     # rhs.c:333:18
	mulpd	112(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	11 332 29 is_stmt 1     # rhs.c:332:29
	addpd	%xmm7, %xmm6
	.loc	11 335 39               # rhs.c:335:39
	mulpd	%xmm11, %xmm2
	.loc	11 337 37               # rhs.c:337:37
	movupd	rho_i+68128(%rbp), %xmm7
	.loc	11 337 36 is_stmt 0     # rhs.c:337:36
	mulpd	%xmm1, %xmm7
	movapd	64(%rsp), %xmm3         # 16-byte Reload
	.loc	11 340 22 is_stmt 1     # rhs.c:340:22
	mulpd	%xmm3, %xmm1
	.loc	11 341 19               # rhs.c:341:19
	mulpd	%xmm4, %xmm13
	.loc	11 340 39               # rhs.c:340:39
	subpd	%xmm13, %xmm1
	.loc	11 341 38               # rhs.c:341:38
	mulpd	%xmm12, %xmm1
	.loc	11 335 24               # rhs.c:335:24
	mulpd	%xmm12, %xmm12
	.loc	11 335 29 is_stmt 0     # rhs.c:335:29
	subpd	%xmm2, %xmm12
	.loc	11 339 31 is_stmt 1     # rhs.c:339:31
	movupd	rho_i+528(%rbp), %xmm2
	.loc	11 339 30 is_stmt 0     # rhs.c:339:30
	mulpd	%xmm5, %xmm2
	.loc	11 342 18 is_stmt 1     # rhs.c:342:18
	mulpd	%xmm3, %xmm5
	.loc	11 343 18               # rhs.c:343:18
	mulpd	%xmm4, %xmm8
	.loc	11 342 35               # rhs.c:342:35
	subpd	%xmm8, %xmm5
	.loc	11 343 37               # rhs.c:343:37
	mulpd	%xmm15, %xmm5
	.loc	11 336 18               # rhs.c:336:18
	mulpd	%xmm15, %xmm15
	.loc	11 335 45               # rhs.c:335:45
	addpd	%xmm12, %xmm15
	movapd	%xmm10, %xmm12
	.loc	11 335 18 is_stmt 0     # rhs.c:335:18
	mulpd	96(%rsp), %xmm15        # 16-byte Folded Reload
	.loc	11 334 30 is_stmt 1     # rhs.c:334:30
	addpd	%xmm6, %xmm15
	.loc	11 338 33               # rhs.c:338:33
	movupd	rho_i+34328(%rbp), %xmm3
	.loc	11 338 32 is_stmt 0     # rhs.c:338:32
	mulpd	%xmm0, %xmm3
	.loc	11 337 54 is_stmt 1     # rhs.c:337:54
	subpd	%xmm3, %xmm7
	.loc	11 338 48               # rhs.c:338:48
	addpd	%xmm7, %xmm2
	.loc	11 337 18               # rhs.c:337:18
	mulpd	80(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	11 336 24               # rhs.c:336:24
	addpd	%xmm15, %xmm2
	.loc	11 341 43               # rhs.c:341:43
	subpd	%xmm5, %xmm1
	.loc	11 340 15               # rhs.c:340:15
	mulpd	%xmm12, %xmm1
	.loc	11 339 49               # rhs.c:339:49
	subpd	%xmm1, %xmm2
	.loc	11 330 25               # rhs.c:330:25
	movlpd	%xmm2, rhs+171672(%rbp,%rbp,4)
	movhpd	%xmm2, rhs+171712(%rbp,%rbp,4)
	.loc	11 299 16               # rhs.c:299:16
	addq	$16, %rbp
	addq	$-2, %rsi
	jne	.LBB6_73
# BB#74:                                # %middle.block4537
                                        #   in Loop: Header=BB6_70 Depth=2
	cmpq	%r15, %rdx
	movq	%r9, %rcx
	je	.LBB6_77
	.p2align	4, 0x90
.LBB6_75:                               # %scalar.ph4538
                                        #   in Loop: Header=BB6_70 Depth=2
	leaq	(,%rcx,8), %rsi
	leaq	(%rsi,%rsi,4), %rsi
	movq	%r13, %rdi
	.p2align	4, 0x90
.LBB6_76:                               # %for.body2001
                                        #   Parent Loop BB6_69 Depth=1
                                        #     Parent Loop BB6_70 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	ws+34320(%rax,%rcx,8), %xmm14 # xmm14 = mem[0],zero
.Ltmp596:
	#DEBUG_VALUE: compute_rhs:wijk <- %XMM14
	.loc	11 300 16               # rhs.c:300:16
	movsd	ws+68120(%rax,%rcx,8), %xmm15 # xmm15 = mem[0],zero
.Ltmp597:
	#DEBUG_VALUE: compute_rhs:wp1 <- %XMM15
	.loc	11 301 16               # rhs.c:301:16
	movsd	ws+520(%rax,%rcx,8), %xmm11 # xmm11 = mem[0],zero
.Ltmp598:
	#DEBUG_VALUE: compute_rhs:wm1 <- %XMM11
	.loc	11 308 12               # rhs.c:308:12
	movsd	u+340608(%rsi,%rdi), %xmm1 # xmm1 = mem[0],zero
	movsd	u+171608(%rsi,%rdi), %xmm0 # xmm0 = mem[0],zero
	.loc	11 308 33 is_stmt 0     # rhs.c:308:33
	mulsd	.LCPI6_4(%rip), %xmm0
	.loc	11 308 28               # rhs.c:308:28
	addsd	%xmm1, %xmm0
	.loc	11 309 12 is_stmt 1     # rhs.c:309:12
	movsd	u+2608(%rsi,%rdi), %xmm3 # xmm3 = mem[0],zero
	.loc	11 308 48               # rhs.c:308:48
	addsd	%xmm3, %xmm0
	.loc	11 307 52               # rhs.c:307:52
	mulsd	(%rsp), %xmm0           # 16-byte Folded Reload
	.loc	11 307 43 is_stmt 0     # rhs.c:307:43
	addsd	rhs+171608(%rsi,%rdi), %xmm0
	.loc	11 304 33 is_stmt 1     # rhs.c:304:33
	movsd	u+171600(%rsi,%rdi), %xmm2 # xmm2 = mem[0],zero
	movhpd	us+34320(%rax,%rcx,8), %xmm2 # xmm2 = xmm2[0],mem[0]
	addpd	%xmm2, %xmm2
	.loc	11 304 28 is_stmt 0     # rhs.c:304:28
	movsd	u+340600(%rsi,%rdi), %xmm4 # xmm4 = mem[0],zero
	movhpd	us+68120(%rax,%rcx,8), %xmm4 # xmm4 = xmm4[0],mem[0]
	subpd	%xmm2, %xmm4
	.loc	11 304 48               # rhs.c:304:48
	movsd	u+2600(%rsi,%rdi), %xmm2 # xmm2 = mem[0],zero
	movhpd	us+520(%rax,%rcx,8), %xmm2 # xmm2 = xmm2[0],mem[0]
	addpd	%xmm4, %xmm2
	.loc	11 303 52 is_stmt 1     # rhs.c:303:52
	mulpd	336(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	11 303 43 is_stmt 0     # rhs.c:303:43
	movsd	rhs+171600(%rsi,%rdi), %xmm4 # xmm4 = mem[0],zero
	unpcklpd	%xmm0, %xmm4    # xmm4 = xmm4[0],xmm0[0]
	addpd	%xmm2, %xmm4
	.loc	11 312 33 is_stmt 1     # rhs.c:312:33
	mulsd	%xmm15, %xmm1
	.loc	11 313 30               # rhs.c:313:30
	mulsd	%xmm11, %xmm3
	.loc	11 315 12               # rhs.c:315:12
	movupd	u+340616(%rsi,%rdi), %xmm0
	.loc	11 306 34               # rhs.c:306:34
	movapd	%xmm0, %xmm7
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	movapd	%xmm7, %xmm5
	unpcklpd	%xmm1, %xmm5    # xmm5 = xmm5[0],xmm1[0]
	.loc	11 316 12               # rhs.c:316:12
	movupd	u+2616(%rsi,%rdi), %xmm1
	.loc	11 306 34               # rhs.c:306:34
	movapd	%xmm1, %xmm2
	shufpd	$1, %xmm2, %xmm2        # xmm2 = xmm2[1,0]
	movapd	%xmm2, %xmm6
	unpcklpd	%xmm3, %xmm6    # xmm6 = xmm6[0],xmm3[0]
	subpd	%xmm6, %xmm5
	.loc	11 306 15 is_stmt 0     # rhs.c:306:15
	mulpd	%xmm12, %xmm5
	.loc	11 305 29 is_stmt 1     # rhs.c:305:29
	subpd	%xmm5, %xmm4
	.loc	11 303 25               # rhs.c:303:25
	movupd	%xmm4, rhs+171600(%rsi,%rdi)
	.loc	11 319 33               # rhs.c:319:33
	movapd	%xmm15, %xmm5
	mulsd	%xmm0, %xmm5
	.loc	11 314 27               # rhs.c:314:27
	movupd	rhs+171616(%rsi,%rdi), %xmm3
	.loc	11 315 34               # rhs.c:315:34
	movupd	u+171616(%rsi,%rdi), %xmm4
	.loc	11 315 33 is_stmt 0     # rhs.c:315:33
	addpd	%xmm4, %xmm4
	.loc	11 315 28               # rhs.c:315:28
	subpd	%xmm4, %xmm0
	.loc	11 315 48               # rhs.c:315:48
	addpd	%xmm1, %xmm0
	.loc	11 314 52 is_stmt 1     # rhs.c:314:52
	mulpd	320(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 314 43 is_stmt 0     # rhs.c:314:43
	addpd	%xmm3, %xmm0
	.loc	11 317 40 is_stmt 1     # rhs.c:317:40
	movsd	vs+34320(%rax,%rcx,8), %xmm6 # xmm6 = mem[0],zero
	unpcklpd	%xmm14, %xmm6   # xmm6 = xmm6[0],xmm14[0]
	addpd	%xmm6, %xmm6
	.loc	11 317 35 is_stmt 0     # rhs.c:317:35
	movsd	vs+68120(%rax,%rcx,8), %xmm3 # xmm3 = mem[0],zero
	unpcklpd	%xmm15, %xmm3   # xmm3 = xmm3[0],xmm15[0]
	subpd	%xmm6, %xmm3
	.loc	11 317 53               # rhs.c:317:53
	movsd	vs+520(%rax,%rcx,8), %xmm13 # xmm13 = mem[0],zero
	unpcklpd	%xmm11, %xmm13  # xmm13 = xmm13[0],xmm11[0]
	addpd	%xmm3, %xmm13
	.loc	11 317 18               # rhs.c:317:18
	mulpd	304(%rsp), %xmm13       # 16-byte Folded Reload
	.loc	11 316 29 is_stmt 1     # rhs.c:316:29
	addpd	%xmm0, %xmm13
	.loc	11 325 33               # rhs.c:325:33
	mulsd	%xmm15, %xmm7
	.loc	11 326 30               # rhs.c:326:30
	mulsd	%xmm11, %xmm2
	.loc	11 325 38               # rhs.c:325:38
	subsd	%xmm2, %xmm7
	.loc	11 327 16               # rhs.c:327:16
	movsd	u+340632(%rsi,%rdi), %xmm8 # xmm8 = mem[0],zero
	.loc	11 327 34 is_stmt 0     # rhs.c:327:34
	movsd	square+68120(%rax,%rcx,8), %xmm4 # xmm4 = mem[0],zero
	.loc	11 327 32               # rhs.c:327:32
	movapd	%xmm8, %xmm2
	subsd	%xmm4, %xmm2
	.loc	11 328 16 is_stmt 1     # rhs.c:328:16
	movsd	u+2632(%rsi,%rdi), %xmm3 # xmm3 = mem[0],zero
	.loc	11 327 52               # rhs.c:327:52
	subsd	%xmm3, %xmm2
	.loc	11 328 34               # rhs.c:328:34
	movsd	square+520(%rax,%rcx,8), %xmm10 # xmm10 = mem[0],zero
	.loc	11 328 32 is_stmt 0     # rhs.c:328:32
	addsd	%xmm10, %xmm2
	movapd	%xmm12, %xmm0
	.loc	11 320 30 is_stmt 1     # rhs.c:320:30
	movapd	%xmm11, %xmm12
	unpcklpd	%xmm2, %xmm12   # xmm12 = xmm12[0],xmm2[0]
	unpcklpd	%xmm9, %xmm1    # xmm1 = xmm1[0],xmm9[0]
	mulpd	%xmm12, %xmm1
	movapd	%xmm0, %xmm12
	.loc	11 319 38               # rhs.c:319:38
	unpcklpd	%xmm7, %xmm5    # xmm5 = xmm5[0],xmm7[0]
	movapd	%xmm5, %xmm2
	subpd	%xmm1, %xmm2
	addpd	%xmm1, %xmm5
	movsd	%xmm2, %xmm5            # xmm5 = xmm2[0],xmm5[1]
	.loc	11 319 15 is_stmt 0     # rhs.c:319:15
	mulpd	%xmm12, %xmm5
	.loc	11 318 30 is_stmt 1     # rhs.c:318:30
	subpd	%xmm5, %xmm13
	.loc	11 314 25               # rhs.c:314:25
	movupd	%xmm13, rhs+171616(%rsi,%rdi)
	.loc	11 331 34               # rhs.c:331:34
	movsd	u+171632(%rsi,%rdi), %xmm7 # xmm7 = mem[0],zero
	.loc	11 331 33 is_stmt 0     # rhs.c:331:33
	addsd	%xmm7, %xmm7
	.loc	11 333 21 is_stmt 1     # rhs.c:333:21
	movsd	qs+68120(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	11 333 41 is_stmt 0     # rhs.c:333:41
	movsd	qs+34320(%rax,%rcx,8), %xmm2 # xmm2 = mem[0],zero
	.loc	11 333 40               # rhs.c:333:40
	addsd	%xmm2, %xmm2
	.loc	11 333 35               # rhs.c:333:35
	subsd	%xmm2, %xmm1
	.loc	11 331 28 is_stmt 1     # rhs.c:331:28
	movapd	%xmm8, %xmm2
	subsd	%xmm7, %xmm2
	.loc	11 331 48 is_stmt 0     # rhs.c:331:48
	addsd	%xmm3, %xmm2
	.loc	11 330 52 is_stmt 1     # rhs.c:330:52
	mulsd	32(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	11 330 43 is_stmt 0     # rhs.c:330:43
	addsd	rhs+171632(%rsi,%rdi), %xmm2
	.loc	11 333 53 is_stmt 1     # rhs.c:333:53
	addsd	qs+520(%rax,%rcx,8), %xmm1
	.loc	11 333 18 is_stmt 0     # rhs.c:333:18
	mulsd	288(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 332 29 is_stmt 1     # rhs.c:332:29
	addsd	%xmm2, %xmm1
	.loc	11 335 39               # rhs.c:335:39
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	mulsd	%xmm14, %xmm6
	movsd	rho_i+68120(%rax,%rcx,8), %xmm5 # xmm5 = mem[0],zero
	.loc	11 337 36               # rhs.c:337:36
	mulsd	%xmm8, %xmm5
	movapd	48(%rsp), %xmm2         # 16-byte Reload
	.loc	11 340 22               # rhs.c:340:22
	mulsd	%xmm2, %xmm8
	.loc	11 341 19               # rhs.c:341:19
	mulsd	%xmm9, %xmm4
	.loc	11 340 39               # rhs.c:340:39
	subsd	%xmm4, %xmm8
	.loc	11 341 38               # rhs.c:341:38
	mulsd	%xmm15, %xmm8
	.loc	11 335 24               # rhs.c:335:24
	mulsd	%xmm15, %xmm15
.Ltmp599:
	.loc	11 335 29 is_stmt 0     # rhs.c:335:29
	subsd	%xmm6, %xmm15
	movsd	rho_i+520(%rax,%rcx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	11 339 30 is_stmt 1     # rhs.c:339:30
	mulsd	%xmm3, %xmm0
	.loc	11 342 18               # rhs.c:342:18
	mulsd	%xmm2, %xmm3
	.loc	11 343 18               # rhs.c:343:18
	mulsd	%xmm9, %xmm10
	.loc	11 342 35               # rhs.c:342:35
	subsd	%xmm10, %xmm3
	.loc	11 343 37               # rhs.c:343:37
	mulsd	%xmm11, %xmm3
	.loc	11 336 18               # rhs.c:336:18
	mulsd	%xmm11, %xmm11
.Ltmp600:
	.loc	11 335 45               # rhs.c:335:45
	addsd	%xmm15, %xmm11
	.loc	11 335 18 is_stmt 0     # rhs.c:335:18
	mulsd	272(%rsp), %xmm11       # 16-byte Folded Reload
	.loc	11 334 30 is_stmt 1     # rhs.c:334:30
	addsd	%xmm1, %xmm11
	.loc	11 338 32               # rhs.c:338:32
	mulsd	rho_i+34320(%rax,%rcx,8), %xmm7
	.loc	11 337 54               # rhs.c:337:54
	subsd	%xmm7, %xmm5
	.loc	11 338 48               # rhs.c:338:48
	addsd	%xmm5, %xmm0
	.loc	11 337 18               # rhs.c:337:18
	mulsd	256(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 336 24               # rhs.c:336:24
	addsd	%xmm11, %xmm0
	.loc	11 341 43               # rhs.c:341:43
	subsd	%xmm3, %xmm8
	.loc	11 340 15               # rhs.c:340:15
	mulsd	16(%rsp), %xmm8         # 16-byte Folded Reload
	.loc	11 339 49               # rhs.c:339:49
	subsd	%xmm8, %xmm0
	.loc	11 330 25               # rhs.c:330:25
	movsd	%xmm0, rhs+171632(%rsi,%rdi)
.Ltmp601:
	.loc	11 298 21 discriminator 1 # rhs.c:298:21
	addq	$40, %rdi
	cmpq	%rdx, %rcx
	.loc	11 298 7 is_stmt 0 discriminator 1 # rhs.c:298:7
	leaq	1(%rcx), %rcx
	jl	.LBB6_76
.Ltmp602:
.LBB6_77:                               # %for.inc2533
                                        #   in Loop: Header=BB6_70 Depth=2
	.loc	11 297 5 is_stmt 1 discriminator 1 # rhs.c:297:5
	addq	$520, %rax              # imm = 0x208
	addq	$2600, %r13             # imm = 0xA28
	.loc	11 297 19 is_stmt 0 discriminator 1 # rhs.c:297:19
	cmpq	%r12, %rbx
	.loc	11 297 5 discriminator 1 # rhs.c:297:5
	leaq	1(%rbx), %rbx
	jl	.LBB6_70
.Ltmp603:
.LBB6_78:                               # %for.inc2536
                                        #   in Loop: Header=BB6_69 Depth=1
	.loc	11 296 3 is_stmt 1 discriminator 1 # rhs.c:296:3
	addq	$33800, %r14            # imm = 0x8408
	addq	$169000, %r11           # imm = 0x29428
	.loc	11 296 17 is_stmt 0 discriminator 1 # rhs.c:296:17
	cmpq	%r8, %r10
	.loc	11 296 3 discriminator 1 # rhs.c:296:3
	leaq	1(%r10), %r10
	jl	.LBB6_69
.Ltmp604:
.LBB6_79:                               # %for.cond2539.preheader
	.loc	11 355 27 is_stmt 1     # rhs.c:355:27
	movslq	grid_points+4(%rip), %rax
.Ltmp605:
	.loc	11 352 34 discriminator 1 # rhs.c:352:34
	addq	$-2, %rax
	.loc	11 352 17 is_stmt 0 discriminator 1 # rhs.c:352:17
	testl	%eax, %eax
	jle	.LBB6_91
# BB#80:                                # %for.cond2543.preheader.lr.ph
.Ltmp606:
	.loc	11 353 22 is_stmt 1 discriminator 1 # rhs.c:353:22
	movl	grid_points(%rip), %ecx
	.loc	11 353 19 is_stmt 0 discriminator 1 # rhs.c:353:19
	addl	$-2, %ecx
	jle	.LBB6_86
# BB#81:                                # %for.cond2547.preheader.lr.ph.preheader
.Ltmp607:
	.loc	11 355 44 is_stmt 1     # rhs.c:355:44
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	11 355 49 is_stmt 0     # rhs.c:355:49
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movl	$1, %edx
	movl	$171640, %ebp           # imm = 0x29E78
	.loc	11 356 16 is_stmt 1     # rhs.c:356:16
	movapd	.LCPI6_5(%rip), %xmm2   # xmm2 = [5.000000e+00,5.000000e+00]
	.loc	11 356 36 is_stmt 0     # rhs.c:356:36
	movapd	.LCPI6_6(%rip), %xmm3   # xmm3 = [4.000000e+00,4.000000e+00]
	movsd	.LCPI6_7(%rip), %xmm8   # xmm8 = mem[0],zero
	movsd	.LCPI6_8(%rip), %xmm5   # xmm5 = mem[0],zero
	.p2align	4, 0x90
.LBB6_82:                               # %for.cond2547.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_83 Depth 2
	movl	%ecx, %edi
	movq	%rbp, %rsi
	.p2align	4, 0x90
.LBB6_83:                               # %for.cond2547.preheader
                                        #   Parent Loop BB6_82 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 355 27 is_stmt 1     # rhs.c:355:27
	movupd	rhs(%rsi), %xmm6
	.loc	11 356 17               # rhs.c:356:17
	movupd	u(%rsi), %xmm7
	.loc	11 356 16 is_stmt 0     # rhs.c:356:16
	mulpd	%xmm2, %xmm7
	.loc	11 356 37               # rhs.c:356:37
	movupd	u+169000(%rsi), %xmm4
	.loc	11 356 36               # rhs.c:356:36
	mulpd	%xmm3, %xmm4
	.loc	11 356 31               # rhs.c:356:31
	subpd	%xmm4, %xmm7
	.loc	11 357 13 is_stmt 1     # rhs.c:357:13
	movupd	u+338000(%rsi), %xmm4
	.loc	11 356 53               # rhs.c:356:53
	addpd	%xmm7, %xmm4
	.loc	11 355 49               # rhs.c:355:49
	mulpd	%xmm1, %xmm4
	.loc	11 355 42 is_stmt 0     # rhs.c:355:42
	subpd	%xmm4, %xmm6
	.loc	11 355 25               # rhs.c:355:25
	movupd	%xmm6, rhs(%rsi)
	.loc	11 355 27               # rhs.c:355:27
	movupd	rhs+16(%rsi), %xmm4
	.loc	11 356 17 is_stmt 1     # rhs.c:356:17
	movupd	u+16(%rsi), %xmm6
	.loc	11 356 16 is_stmt 0     # rhs.c:356:16
	mulpd	%xmm2, %xmm6
	.loc	11 356 37               # rhs.c:356:37
	movupd	u+169016(%rsi), %xmm7
	.loc	11 356 36               # rhs.c:356:36
	mulpd	%xmm3, %xmm7
	.loc	11 356 31               # rhs.c:356:31
	subpd	%xmm7, %xmm6
	.loc	11 357 13 is_stmt 1     # rhs.c:357:13
	movupd	u+338016(%rsi), %xmm7
	.loc	11 356 53               # rhs.c:356:53
	addpd	%xmm6, %xmm7
	.loc	11 355 49               # rhs.c:355:49
	mulpd	%xmm1, %xmm7
	.loc	11 355 42 is_stmt 0     # rhs.c:355:42
	subpd	%xmm7, %xmm4
	.loc	11 355 25               # rhs.c:355:25
	movupd	%xmm4, rhs+16(%rsi)
	.loc	11 355 27               # rhs.c:355:27
	movsd	rhs+32(%rsi), %xmm4     # xmm4 = mem[0],zero
	movsd	u+32(%rsi), %xmm6       # xmm6 = mem[0],zero
	.loc	11 356 16 is_stmt 1     # rhs.c:356:16
	mulsd	%xmm8, %xmm6
	movsd	u+169032(%rsi), %xmm7   # xmm7 = mem[0],zero
	.loc	11 356 36 is_stmt 0     # rhs.c:356:36
	mulsd	%xmm5, %xmm7
	.loc	11 356 31               # rhs.c:356:31
	subsd	%xmm7, %xmm6
	.loc	11 356 53               # rhs.c:356:53
	addsd	u+338032(%rsi), %xmm6
	.loc	11 355 49 is_stmt 1     # rhs.c:355:49
	mulsd	%xmm0, %xmm6
	.loc	11 355 42 is_stmt 0     # rhs.c:355:42
	subsd	%xmm6, %xmm4
	.loc	11 355 25               # rhs.c:355:25
	movsd	%xmm4, rhs+32(%rsi)
.Ltmp608:
	.loc	11 353 5 is_stmt 1 discriminator 1 # rhs.c:353:5
	addq	$40, %rsi
	decl	%edi
	jne	.LBB6_83
.Ltmp609:
# BB#84:                                # %for.inc2604
                                        #   in Loop: Header=BB6_82 Depth=1
	.loc	11 352 3 discriminator 1 # rhs.c:352:3
	addq	$2600, %rbp             # imm = 0xA28
	.loc	11 352 17 is_stmt 0 discriminator 1 # rhs.c:352:17
	cmpq	%rax, %rdx
	.loc	11 352 3 discriminator 1 # rhs.c:352:3
	leaq	1(%rdx), %rdx
	jl	.LBB6_82
.Ltmp610:
# BB#85:                                # %for.cond2607.preheader
	testl	%eax, %eax
	jle	.LBB6_91
.LBB6_86:                               # %for.cond2611.preheader.lr.ph
.Ltmp611:
	.loc	11 364 22 is_stmt 1 discriminator 1 # rhs.c:364:22
	movl	grid_points(%rip), %ecx
	.loc	11 364 19 is_stmt 0 discriminator 1 # rhs.c:364:19
	addl	$-2, %ecx
	jle	.LBB6_91
# BB#87:                                # %for.cond2615.preheader.lr.ph.preheader
.Ltmp612:
	.loc	11 366 45 is_stmt 1     # rhs.c:366:45
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	11 366 27 is_stmt 0     # rhs.c:366:27
	cltq
	.loc	11 366 50               # rhs.c:366:50
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movl	$1, %edx
	xorl	%ebp, %ebp
	.loc	11 367 16 is_stmt 1     # rhs.c:367:16
	movapd	.LCPI6_6(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	.loc	11 367 38 is_stmt 0     # rhs.c:367:38
	movapd	.LCPI6_10(%rip), %xmm3  # xmm3 = [6.000000e+00,6.000000e+00]
	.loc	11 367 16               # rhs.c:367:16
	movsd	.LCPI6_8(%rip), %xmm4   # xmm4 = mem[0],zero
	movsd	.LCPI6_9(%rip), %xmm8   # xmm8 = mem[0],zero
	.p2align	4, 0x90
.LBB6_88:                               # %for.cond2615.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_89 Depth 2
	movl	%ecx, %edi
	movq	%rbp, %rsi
	.p2align	4, 0x90
.LBB6_89:                               # %for.cond2615.preheader
                                        #   Parent Loop BB6_88 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 366 27 is_stmt 1     # rhs.c:366:27
	movupd	rhs+340640(%rsi), %xmm6
	.loc	11 367 17               # rhs.c:367:17
	movupd	u+171640(%rsi), %xmm7
	.loc	11 367 16 is_stmt 0     # rhs.c:367:16
	mulpd	%xmm2, %xmm7
	.loc	11 367 39               # rhs.c:367:39
	movupd	u+340640(%rsi), %xmm5
	.loc	11 367 38               # rhs.c:367:38
	mulpd	%xmm3, %xmm5
	.loc	11 367 16               # rhs.c:367:16
	subpd	%xmm7, %xmm5
	.loc	11 368 16 is_stmt 1     # rhs.c:368:16
	movupd	u+509640(%rsi), %xmm7
	.loc	11 368 15 is_stmt 0     # rhs.c:368:15
	mulpd	%xmm2, %xmm7
	.loc	11 367 53 is_stmt 1     # rhs.c:367:53
	subpd	%xmm7, %xmm5
	.loc	11 368 34               # rhs.c:368:34
	movupd	u+678640(%rsi), %xmm7
	.loc	11 368 32 is_stmt 0     # rhs.c:368:32
	addpd	%xmm5, %xmm7
	.loc	11 366 50 is_stmt 1     # rhs.c:366:50
	mulpd	%xmm1, %xmm7
	.loc	11 366 43 is_stmt 0     # rhs.c:366:43
	subpd	%xmm7, %xmm6
	.loc	11 366 25               # rhs.c:366:25
	movupd	%xmm6, rhs+340640(%rsi)
	.loc	11 366 27               # rhs.c:366:27
	movupd	rhs+340656(%rsi), %xmm5
	.loc	11 367 17 is_stmt 1     # rhs.c:367:17
	movupd	u+171656(%rsi), %xmm6
	.loc	11 367 16 is_stmt 0     # rhs.c:367:16
	mulpd	%xmm2, %xmm6
	.loc	11 367 39               # rhs.c:367:39
	movupd	u+340656(%rsi), %xmm7
	.loc	11 367 38               # rhs.c:367:38
	mulpd	%xmm3, %xmm7
	.loc	11 367 16               # rhs.c:367:16
	subpd	%xmm6, %xmm7
	.loc	11 368 16 is_stmt 1     # rhs.c:368:16
	movupd	u+509656(%rsi), %xmm6
	.loc	11 368 15 is_stmt 0     # rhs.c:368:15
	mulpd	%xmm2, %xmm6
	.loc	11 367 53 is_stmt 1     # rhs.c:367:53
	subpd	%xmm6, %xmm7
	.loc	11 368 34               # rhs.c:368:34
	movupd	u+678656(%rsi), %xmm6
	.loc	11 368 32 is_stmt 0     # rhs.c:368:32
	addpd	%xmm7, %xmm6
	.loc	11 366 50 is_stmt 1     # rhs.c:366:50
	mulpd	%xmm1, %xmm6
	.loc	11 366 43 is_stmt 0     # rhs.c:366:43
	subpd	%xmm6, %xmm5
	.loc	11 366 25               # rhs.c:366:25
	movupd	%xmm5, rhs+340656(%rsi)
	.loc	11 366 27               # rhs.c:366:27
	movsd	rhs+340672(%rsi), %xmm5 # xmm5 = mem[0],zero
	movsd	u+171672(%rsi), %xmm6   # xmm6 = mem[0],zero
	.loc	11 367 16 is_stmt 1     # rhs.c:367:16
	mulsd	%xmm4, %xmm6
	movsd	u+340672(%rsi), %xmm7   # xmm7 = mem[0],zero
	.loc	11 367 38 is_stmt 0     # rhs.c:367:38
	mulsd	%xmm8, %xmm7
	.loc	11 367 16               # rhs.c:367:16
	subsd	%xmm6, %xmm7
	movsd	u+509672(%rsi), %xmm6   # xmm6 = mem[0],zero
	.loc	11 368 15 is_stmt 1     # rhs.c:368:15
	mulsd	%xmm4, %xmm6
	.loc	11 367 53               # rhs.c:367:53
	subsd	%xmm6, %xmm7
	.loc	11 368 32               # rhs.c:368:32
	addsd	u+678672(%rsi), %xmm7
	.loc	11 366 50               # rhs.c:366:50
	mulsd	%xmm0, %xmm7
	.loc	11 366 43 is_stmt 0     # rhs.c:366:43
	subsd	%xmm7, %xmm5
	.loc	11 366 25               # rhs.c:366:25
	movsd	%xmm5, rhs+340672(%rsi)
.Ltmp613:
	.loc	11 364 5 is_stmt 1 discriminator 1 # rhs.c:364:5
	addq	$40, %rsi
	decl	%edi
	jne	.LBB6_89
.Ltmp614:
# BB#90:                                # %for.inc2683
                                        #   in Loop: Header=BB6_88 Depth=1
	.loc	11 363 3 discriminator 1 # rhs.c:363:3
	addq	$2600, %rbp             # imm = 0xA28
	.loc	11 363 17 is_stmt 0 discriminator 1 # rhs.c:363:17
	cmpq	%rax, %rdx
	.loc	11 363 3 discriminator 1 # rhs.c:363:3
	leaq	1(%rdx), %rdx
	jl	.LBB6_88
.Ltmp615:
.LBB6_91:                               # %for.cond2686.preheader
	.loc	11 391 13 is_stmt 1     # rhs.c:391:13
	movslq	grid_points+8(%rip), %r9
.Ltmp616:
	.loc	11 373 34 discriminator 1 # rhs.c:373:34
	leaq	-4(%r9), %r10
	.loc	11 373 17 is_stmt 0 discriminator 1 # rhs.c:373:17
	cmpl	$3, %r10d
	jl	.LBB6_100
# BB#92:                                # %for.cond2690.preheader.lr.ph
	.loc	11 373 3 discriminator 1 # rhs.c:373:3
	movslq	grid_points+4(%rip), %rdx
.Ltmp617:
	.loc	11 374 36 is_stmt 1 discriminator 1 # rhs.c:374:36
	addq	$-2, %rdx
.Ltmp618:
	.loc	11 375 24 discriminator 1 # rhs.c:375:24
	movl	grid_points(%rip), %ecx
	.loc	11 375 38 is_stmt 0 discriminator 1 # rhs.c:375:38
	addl	$-2, %ecx
.Ltmp619:
	.loc	11 377 47 is_stmt 1     # rhs.c:377:47
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	11 377 52 is_stmt 0     # rhs.c:377:52
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movl	$3, %edi
	.loc	11 378 37 is_stmt 1     # rhs.c:378:37
	movapd	.LCPI6_6(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	.loc	11 379 19               # rhs.c:379:19
	movapd	.LCPI6_10(%rip), %xmm3  # xmm3 = [6.000000e+00,6.000000e+00]
	.loc	11 378 37               # rhs.c:378:37
	movsd	.LCPI6_8(%rip), %xmm4   # xmm4 = mem[0],zero
	movsd	.LCPI6_9(%rip), %xmm8   # xmm8 = mem[0],zero
	.p2align	4, 0x90
.LBB6_93:                               # %for.cond2690.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_96 Depth 2
                                        #       Child Loop BB6_97 Depth 3
	.loc	11 379 43               # rhs.c:379:43
	leaq	1(%rdi), %r8
.Ltmp620:
	.loc	11 374 5 discriminator 1 # rhs.c:374:5
	testl	%edx, %edx
	jle	.LBB6_99
# BB#94:                                # %for.cond2694.preheader.lr.ph
                                        #   in Loop: Header=BB6_93 Depth=1
	testl	%ecx, %ecx
	jle	.LBB6_99
# BB#95:                                # %for.cond2698.preheader.lr.ph.preheader
                                        #   in Loop: Header=BB6_93 Depth=1
.Ltmp621:
	.loc	11 377 52               # rhs.c:377:52
	imulq	$169000, %rdi, %rbp     # imm = 0x29428
	movl	$1, %eax
	.p2align	4, 0x90
.LBB6_96:                               # %for.cond2698.preheader.lr.ph
                                        #   Parent Loop BB6_93 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_97 Depth 3
	movl	%ecx, %esi
	movq	%rbp, %rbx
	.p2align	4, 0x90
.LBB6_97:                               # %for.cond2698.preheader
                                        #   Parent Loop BB6_93 Depth=1
                                        #     Parent Loop BB6_96 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 377 29 is_stmt 0     # rhs.c:377:29
	movupd	rhs+2640(%rbx), %xmm6
	.loc	11 378 16 is_stmt 1     # rhs.c:378:16
	movupd	u-335360(%rbx), %xmm7
	.loc	11 378 38 is_stmt 0     # rhs.c:378:38
	movupd	u-166360(%rbx), %xmm5
	.loc	11 378 37               # rhs.c:378:37
	mulpd	%xmm2, %xmm5
	.loc	11 378 32               # rhs.c:378:32
	subpd	%xmm5, %xmm7
	.loc	11 379 20 is_stmt 1     # rhs.c:379:20
	movupd	u+2640(%rbx), %xmm5
	.loc	11 379 19 is_stmt 0     # rhs.c:379:19
	mulpd	%xmm3, %xmm5
	.loc	11 378 54 is_stmt 1     # rhs.c:378:54
	addpd	%xmm7, %xmm5
	.loc	11 379 40               # rhs.c:379:40
	movupd	u+171640(%rbx), %xmm7
	.loc	11 379 39 is_stmt 0     # rhs.c:379:39
	mulpd	%xmm2, %xmm7
	.loc	11 379 34               # rhs.c:379:34
	subpd	%xmm7, %xmm5
	.loc	11 380 16 is_stmt 1     # rhs.c:380:16
	movupd	u+340640(%rbx), %xmm7
	.loc	11 379 56               # rhs.c:379:56
	addpd	%xmm5, %xmm7
	.loc	11 377 52               # rhs.c:377:52
	mulpd	%xmm1, %xmm7
	.loc	11 377 45 is_stmt 0     # rhs.c:377:45
	subpd	%xmm7, %xmm6
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm6, rhs+2640(%rbx)
	.loc	11 377 29               # rhs.c:377:29
	movupd	rhs+2656(%rbx), %xmm5
	.loc	11 378 16 is_stmt 1     # rhs.c:378:16
	movupd	u-335344(%rbx), %xmm6
	.loc	11 378 38 is_stmt 0     # rhs.c:378:38
	movupd	u-166344(%rbx), %xmm7
	.loc	11 378 37               # rhs.c:378:37
	mulpd	%xmm2, %xmm7
	.loc	11 378 32               # rhs.c:378:32
	subpd	%xmm7, %xmm6
	.loc	11 379 20 is_stmt 1     # rhs.c:379:20
	movupd	u+2656(%rbx), %xmm7
	.loc	11 379 19 is_stmt 0     # rhs.c:379:19
	mulpd	%xmm3, %xmm7
	.loc	11 378 54 is_stmt 1     # rhs.c:378:54
	addpd	%xmm6, %xmm7
	.loc	11 379 40               # rhs.c:379:40
	movupd	u+171656(%rbx), %xmm6
	.loc	11 379 39 is_stmt 0     # rhs.c:379:39
	mulpd	%xmm2, %xmm6
	.loc	11 379 34               # rhs.c:379:34
	subpd	%xmm6, %xmm7
	.loc	11 380 16 is_stmt 1     # rhs.c:380:16
	movupd	u+340656(%rbx), %xmm6
	.loc	11 379 56               # rhs.c:379:56
	addpd	%xmm7, %xmm6
	.loc	11 377 52               # rhs.c:377:52
	mulpd	%xmm1, %xmm6
	.loc	11 377 45 is_stmt 0     # rhs.c:377:45
	subpd	%xmm6, %xmm5
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm5, rhs+2656(%rbx)
	.loc	11 377 29               # rhs.c:377:29
	movsd	rhs+2672(%rbx), %xmm5   # xmm5 = mem[0],zero
	.loc	11 378 16 is_stmt 1     # rhs.c:378:16
	movsd	u-335328(%rbx), %xmm6   # xmm6 = mem[0],zero
	movsd	u-166328(%rbx), %xmm7   # xmm7 = mem[0],zero
	.loc	11 378 37 is_stmt 0     # rhs.c:378:37
	mulsd	%xmm4, %xmm7
	.loc	11 378 32               # rhs.c:378:32
	subsd	%xmm7, %xmm6
	movsd	u+2672(%rbx), %xmm7     # xmm7 = mem[0],zero
	.loc	11 379 19 is_stmt 1     # rhs.c:379:19
	mulsd	%xmm8, %xmm7
	.loc	11 378 54               # rhs.c:378:54
	addsd	%xmm6, %xmm7
	movsd	u+171672(%rbx), %xmm6   # xmm6 = mem[0],zero
	.loc	11 379 39               # rhs.c:379:39
	mulsd	%xmm4, %xmm6
	.loc	11 379 34 is_stmt 0     # rhs.c:379:34
	subsd	%xmm6, %xmm7
	.loc	11 379 56               # rhs.c:379:56
	addsd	u+340672(%rbx), %xmm7
	.loc	11 377 52 is_stmt 1     # rhs.c:377:52
	mulsd	%xmm0, %xmm7
	.loc	11 377 45 is_stmt 0     # rhs.c:377:45
	subsd	%xmm7, %xmm5
	.loc	11 377 27               # rhs.c:377:27
	movsd	%xmm5, rhs+2672(%rbx)
.Ltmp622:
	.loc	11 375 7 is_stmt 1 discriminator 1 # rhs.c:375:7
	addq	$40, %rbx
	decl	%esi
	jne	.LBB6_97
.Ltmp623:
# BB#98:                                # %for.inc2776
                                        #   in Loop: Header=BB6_96 Depth=2
	.loc	11 374 5 discriminator 1 # rhs.c:374:5
	addq	$2600, %rbp             # imm = 0xA28
	.loc	11 374 19 is_stmt 0 discriminator 1 # rhs.c:374:19
	cmpq	%rdx, %rax
	.loc	11 374 5 discriminator 1 # rhs.c:374:5
	leaq	1(%rax), %rax
	jl	.LBB6_96
.Ltmp624:
.LBB6_99:                               # %for.inc2779
                                        #   in Loop: Header=BB6_93 Depth=1
	.loc	11 373 17 is_stmt 1 discriminator 1 # rhs.c:373:17
	cmpq	%r10, %rdi
	movq	%r8, %rdi
	jl	.LBB6_93
.Ltmp625:
.LBB6_100:                              # %for.end2781
	#DEBUG_VALUE: compute_rhs:j <- 1
	.loc	11 390 27               # rhs.c:390:27
	movslq	grid_points+4(%rip), %r8
.Ltmp626:
	.loc	11 387 34 discriminator 1 # rhs.c:387:34
	addq	$-2, %r8
	.loc	11 387 3 is_stmt 0 discriminator 1 # rhs.c:387:3
	testl	%r8d, %r8d
	jle	.LBB6_101
# BB#110:                               # %for.cond2787.preheader.lr.ph
.Ltmp627:
	.loc	11 390 27 is_stmt 1     # rhs.c:390:27
	movslq	grid_points(%rip), %rsi
.Ltmp628:
	.loc	11 388 36 discriminator 1 # rhs.c:388:36
	addq	$-2, %rsi
	.loc	11 388 5 is_stmt 0 discriminator 1 # rhs.c:388:5
	testl	%esi, %esi
	jle	.LBB6_111
# BB#112:                               # %for.cond2791.preheader.lr.ph.preheader
.Ltmp629:
	#DEBUG_VALUE: compute_rhs:k <- %RAX
	.loc	11 390 45 is_stmt 1     # rhs.c:390:45
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
.Ltmp630:
	.loc	11 386 21               # rhs.c:386:21
	leaq	-3(%r9), %rax
.Ltmp631:
	.loc	11 391 16               # rhs.c:391:16
	movq	%r9, %rcx
	addq	$-5, %rcx
	.loc	11 391 35 is_stmt 0     # rhs.c:391:35
	movslq	%r10d, %rdx
	.loc	11 392 40 is_stmt 1     # rhs.c:392:40
	leal	-2(%r9), %edi
	.loc	11 392 37 is_stmt 0     # rhs.c:392:37
	movslq	%edi, %rbp
	.loc	11 390 50 is_stmt 1     # rhs.c:390:50
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	.loc	11 390 27 is_stmt 0     # rhs.c:390:27
	imulq	$169000, %rax, %rax     # imm = 0x29428
	imulq	$169000, %rcx, %rcx     # imm = 0x29428
	imulq	$169000, %rdx, %rdi     # imm = 0x29428
	imulq	$169000, %rbp, %rbp     # imm = 0x29428
	movl	$1, %r9d
	xorl	%r10d, %r10d
	.loc	11 391 34 is_stmt 1     # rhs.c:391:34
	movapd	.LCPI6_6(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	.loc	11 392 16               # rhs.c:392:16
	movapd	.LCPI6_10(%rip), %xmm3  # xmm3 = [6.000000e+00,6.000000e+00]
	.loc	11 391 34               # rhs.c:391:34
	movsd	.LCPI6_8(%rip), %xmm4   # xmm4 = mem[0],zero
	movsd	.LCPI6_9(%rip), %xmm8   # xmm8 = mem[0],zero
	.p2align	4, 0x90
.LBB6_113:                              # %for.cond2791.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_114 Depth 2
	movq	%r10, %rdx
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB6_114:                              # %for.cond2791.preheader
                                        #   Parent Loop BB6_113 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 390 27               # rhs.c:390:27
	movupd	rhs+2640(%rax,%rdx), %xmm6
	.loc	11 391 13               # rhs.c:391:13
	movupd	u+2640(%rcx,%rdx), %xmm7
	.loc	11 391 35 is_stmt 0     # rhs.c:391:35
	movupd	u+2640(%rdi,%rdx), %xmm5
	.loc	11 391 34               # rhs.c:391:34
	mulpd	%xmm2, %xmm5
	.loc	11 391 29               # rhs.c:391:29
	subpd	%xmm5, %xmm7
	.loc	11 392 17 is_stmt 1     # rhs.c:392:17
	movupd	u+2640(%rax,%rdx), %xmm5
	.loc	11 392 16 is_stmt 0     # rhs.c:392:16
	mulpd	%xmm3, %xmm5
	.loc	11 391 51 is_stmt 1     # rhs.c:391:51
	addpd	%xmm7, %xmm5
	.loc	11 392 37               # rhs.c:392:37
	movupd	u+2640(%rbp,%rdx), %xmm7
	.loc	11 392 36 is_stmt 0     # rhs.c:392:36
	mulpd	%xmm2, %xmm7
	.loc	11 392 31               # rhs.c:392:31
	subpd	%xmm7, %xmm5
	.loc	11 390 50 is_stmt 1     # rhs.c:390:50
	mulpd	%xmm1, %xmm5
	.loc	11 390 43 is_stmt 0     # rhs.c:390:43
	subpd	%xmm5, %xmm6
	.loc	11 390 25               # rhs.c:390:25
	movupd	%xmm6, rhs+2640(%rax,%rdx)
	.loc	11 390 27               # rhs.c:390:27
	movupd	rhs+2656(%rax,%rdx), %xmm5
	.loc	11 391 13 is_stmt 1     # rhs.c:391:13
	movupd	u+2656(%rcx,%rdx), %xmm6
	.loc	11 391 35 is_stmt 0     # rhs.c:391:35
	movupd	u+2656(%rdi,%rdx), %xmm7
	.loc	11 391 34               # rhs.c:391:34
	mulpd	%xmm2, %xmm7
	.loc	11 391 29               # rhs.c:391:29
	subpd	%xmm7, %xmm6
	.loc	11 392 17 is_stmt 1     # rhs.c:392:17
	movupd	u+2656(%rax,%rdx), %xmm7
	.loc	11 392 16 is_stmt 0     # rhs.c:392:16
	mulpd	%xmm3, %xmm7
	.loc	11 391 51 is_stmt 1     # rhs.c:391:51
	addpd	%xmm6, %xmm7
	.loc	11 392 37               # rhs.c:392:37
	movupd	u+2656(%rbp,%rdx), %xmm6
	.loc	11 392 36 is_stmt 0     # rhs.c:392:36
	mulpd	%xmm2, %xmm6
	.loc	11 392 31               # rhs.c:392:31
	subpd	%xmm6, %xmm7
	.loc	11 390 50 is_stmt 1     # rhs.c:390:50
	mulpd	%xmm1, %xmm7
	.loc	11 390 43 is_stmt 0     # rhs.c:390:43
	subpd	%xmm7, %xmm5
	.loc	11 390 25               # rhs.c:390:25
	movupd	%xmm5, rhs+2656(%rax,%rdx)
	.loc	11 390 27               # rhs.c:390:27
	movsd	rhs+2672(%rax,%rdx), %xmm5 # xmm5 = mem[0],zero
	.loc	11 391 13 is_stmt 1     # rhs.c:391:13
	movsd	u+2672(%rcx,%rdx), %xmm6 # xmm6 = mem[0],zero
	movsd	u+2672(%rdi,%rdx), %xmm7 # xmm7 = mem[0],zero
	.loc	11 391 34 is_stmt 0     # rhs.c:391:34
	mulsd	%xmm4, %xmm7
	.loc	11 391 29               # rhs.c:391:29
	subsd	%xmm7, %xmm6
	movsd	u+2672(%rax,%rdx), %xmm7 # xmm7 = mem[0],zero
	.loc	11 392 16 is_stmt 1     # rhs.c:392:16
	mulsd	%xmm8, %xmm7
	.loc	11 391 51               # rhs.c:391:51
	addsd	%xmm6, %xmm7
	movsd	u+2672(%rbp,%rdx), %xmm6 # xmm6 = mem[0],zero
	.loc	11 392 36               # rhs.c:392:36
	mulsd	%xmm4, %xmm6
	.loc	11 392 31 is_stmt 0     # rhs.c:392:31
	subsd	%xmm6, %xmm7
	.loc	11 390 50 is_stmt 1     # rhs.c:390:50
	mulsd	%xmm0, %xmm7
	.loc	11 390 43 is_stmt 0     # rhs.c:390:43
	subsd	%xmm7, %xmm5
	.loc	11 390 25               # rhs.c:390:25
	movsd	%xmm5, rhs+2672(%rax,%rdx)
.Ltmp632:
	.loc	11 388 19 is_stmt 1 discriminator 1 # rhs.c:388:19
	incq	%rbx
	addq	$40, %rdx
	cmpq	%rsi, %rbx
	.loc	11 388 5 is_stmt 0 discriminator 1 # rhs.c:388:5
	jl	.LBB6_114
.Ltmp633:
# BB#115:                               # %for.inc2859
                                        #   in Loop: Header=BB6_113 Depth=1
	.loc	11 387 3 is_stmt 1 discriminator 1 # rhs.c:387:3
	addq	$2600, %r10             # imm = 0xA28
	.loc	11 387 17 is_stmt 0 discriminator 1 # rhs.c:387:17
	cmpq	%r8, %r9
	.loc	11 387 3 discriminator 1 # rhs.c:387:3
	leaq	1(%r9), %r9
	jl	.LBB6_113
.Ltmp634:
# BB#116:                               # %for.end2861
	testl	%r8d, %r8d
	#DEBUG_VALUE: compute_rhs:j <- 1
	.loc	11 397 7 is_stmt 1      # rhs.c:397:7
	movl	grid_points+8(%rip), %r9d
	jg	.LBB6_117
	jmp	.LBB6_122
.LBB6_101:                              # %for.end2861.thread
	movl	grid_points+8(%rip), %r9d
	#DEBUG_VALUE: compute_rhs:j <- 1
	jmp	.LBB6_122
.LBB6_111:                              # %for.end2861.thread4473
	movl	grid_points+8(%rip), %r9d
	#DEBUG_VALUE: compute_rhs:j <- 1
.LBB6_117:                              # %for.cond2867.preheader.lr.ph
.Ltmp635:
	.loc	11 401 27               # rhs.c:401:27
	movslq	grid_points(%rip), %rcx
.Ltmp636:
	.loc	11 399 36 discriminator 1 # rhs.c:399:36
	addq	$-2, %rcx
	.loc	11 399 19 is_stmt 0 discriminator 1 # rhs.c:399:19
	testl	%ecx, %ecx
	jle	.LBB6_122
.Ltmp637:
# BB#118:                               # %for.cond2871.preheader.lr.ph.preheader
	.loc	11 397 21 is_stmt 1     # rhs.c:397:21
	leal	-2(%r9), %eax
.Ltmp638:
	#DEBUG_VALUE: compute_rhs:k <- %EAX
	.loc	11 402 16               # rhs.c:402:16
	leal	-4(%r9), %edx
	.loc	11 402 37 is_stmt 0     # rhs.c:402:37
	leal	-3(%r9), %esi
	.loc	11 401 27 is_stmt 1     # rhs.c:401:27
	cltq
.Ltmp639:
	.loc	11 401 45 is_stmt 0     # rhs.c:401:45
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	11 402 13 is_stmt 1     # rhs.c:402:13
	movslq	%edx, %rdx
	.loc	11 402 34 is_stmt 0     # rhs.c:402:34
	movslq	%esi, %rsi
	.loc	11 401 27 is_stmt 1     # rhs.c:401:27
	movslq	%r8d, %r8
	.loc	11 401 50 is_stmt 0     # rhs.c:401:50
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	.loc	11 401 27               # rhs.c:401:27
	imulq	$169000, %rax, %r10     # imm = 0x29428
	imulq	$169000, %rdx, %rax     # imm = 0x29428
	leaq	u+2672(%rax), %r11
	imulq	$169000, %rsi, %rax     # imm = 0x29428
	leaq	u+2672(%rax), %rax
	movl	$1, %ebx
	.loc	11 402 33 is_stmt 1     # rhs.c:402:33
	movapd	.LCPI6_6(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	.loc	11 403 15               # rhs.c:403:15
	movapd	.LCPI6_5(%rip), %xmm3   # xmm3 = [5.000000e+00,5.000000e+00]
	movsd	.LCPI6_8(%rip), %xmm8   # xmm8 = mem[0],zero
	movsd	.LCPI6_7(%rip), %xmm5   # xmm5 = mem[0],zero
	.p2align	4, 0x90
.LBB6_119:                              # %for.cond2871.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_120 Depth 2
	movq	%rax, %rbp
	movq	%r11, %rdi
	movq	%r10, %rsi
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB6_120:                              # %for.cond2871.preheader
                                        #   Parent Loop BB6_119 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 401 27               # rhs.c:401:27
	movupd	rhs+2640(%rsi), %xmm6
	.loc	11 402 13               # rhs.c:402:13
	movupd	-32(%rdi), %xmm7
	.loc	11 402 34 is_stmt 0     # rhs.c:402:34
	movupd	-32(%rbp), %xmm4
	.loc	11 402 33               # rhs.c:402:33
	mulpd	%xmm2, %xmm4
	.loc	11 402 29               # rhs.c:402:29
	subpd	%xmm4, %xmm7
	.loc	11 403 16 is_stmt 1     # rhs.c:403:16
	movupd	u+2640(%rsi), %xmm4
	.loc	11 403 15 is_stmt 0     # rhs.c:403:15
	mulpd	%xmm3, %xmm4
	.loc	11 402 50 is_stmt 1     # rhs.c:402:50
	addpd	%xmm7, %xmm4
	.loc	11 401 50               # rhs.c:401:50
	mulpd	%xmm1, %xmm4
	.loc	11 401 43 is_stmt 0     # rhs.c:401:43
	subpd	%xmm4, %xmm6
	.loc	11 401 25               # rhs.c:401:25
	movupd	%xmm6, rhs+2640(%rsi)
	.loc	11 401 27               # rhs.c:401:27
	movupd	rhs+2656(%rsi), %xmm4
	.loc	11 402 13 is_stmt 1     # rhs.c:402:13
	movupd	-16(%rdi), %xmm6
	.loc	11 402 34 is_stmt 0     # rhs.c:402:34
	movupd	-16(%rbp), %xmm7
	.loc	11 402 33               # rhs.c:402:33
	mulpd	%xmm2, %xmm7
	.loc	11 402 29               # rhs.c:402:29
	subpd	%xmm7, %xmm6
	.loc	11 403 16 is_stmt 1     # rhs.c:403:16
	movupd	u+2656(%rsi), %xmm7
	.loc	11 403 15 is_stmt 0     # rhs.c:403:15
	mulpd	%xmm3, %xmm7
	.loc	11 402 50 is_stmt 1     # rhs.c:402:50
	addpd	%xmm6, %xmm7
	.loc	11 401 50               # rhs.c:401:50
	mulpd	%xmm1, %xmm7
	.loc	11 401 43 is_stmt 0     # rhs.c:401:43
	subpd	%xmm7, %xmm4
	.loc	11 401 25               # rhs.c:401:25
	movupd	%xmm4, rhs+2656(%rsi)
	.loc	11 401 27               # rhs.c:401:27
	movsd	rhs+2672(%rsi), %xmm4   # xmm4 = mem[0],zero
	.loc	11 402 13 is_stmt 1     # rhs.c:402:13
	movsd	(%rdi), %xmm6           # xmm6 = mem[0],zero
	movsd	(%rbp), %xmm7           # xmm7 = mem[0],zero
	.loc	11 402 33 is_stmt 0     # rhs.c:402:33
	mulsd	%xmm8, %xmm7
	.loc	11 402 29               # rhs.c:402:29
	subsd	%xmm7, %xmm6
	movsd	u+2672(%rsi), %xmm7     # xmm7 = mem[0],zero
	.loc	11 403 15 is_stmt 1     # rhs.c:403:15
	mulsd	%xmm5, %xmm7
	.loc	11 402 50               # rhs.c:402:50
	addsd	%xmm6, %xmm7
	.loc	11 401 50               # rhs.c:401:50
	mulsd	%xmm0, %xmm7
	.loc	11 401 43 is_stmt 0     # rhs.c:401:43
	subsd	%xmm7, %xmm4
	.loc	11 401 25               # rhs.c:401:25
	movsd	%xmm4, rhs+2672(%rsi)
.Ltmp640:
	.loc	11 399 19 is_stmt 1 discriminator 1 # rhs.c:399:19
	incq	%rdx
	addq	$40, %rsi
	addq	$40, %rdi
	addq	$40, %rbp
	cmpq	%rcx, %rdx
	.loc	11 399 5 is_stmt 0 discriminator 1 # rhs.c:399:5
	jl	.LBB6_120
.Ltmp641:
# BB#121:                               # %for.inc2928
                                        #   in Loop: Header=BB6_119 Depth=1
	.loc	11 398 3 is_stmt 1 discriminator 1 # rhs.c:398:3
	addq	$2600, %r10             # imm = 0xA28
	addq	$2600, %r11             # imm = 0xA28
	addq	$2600, %rax             # imm = 0xA28
	.loc	11 398 17 is_stmt 0 discriminator 1 # rhs.c:398:17
	cmpq	%r8, %rbx
	.loc	11 398 3 discriminator 1 # rhs.c:398:3
	leaq	1(%rbx), %rbx
	jl	.LBB6_119
.Ltmp642:
.LBB6_122:                              # %for.end2930
	.loc	11 407 7 is_stmt 1      # rhs.c:407:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_124
# BB#123:                               # %if.then2932
	.loc	11 407 16 is_stmt 0 discriminator 1 # rhs.c:407:16
	movl	$4, %edi
	callq	timer_stop
.Ltmp643:
	.loc	11 409 20 is_stmt 1 discriminator 1 # rhs.c:409:20
	movl	grid_points+8(%rip), %r9d
.LBB6_124:                              # %for.cond2934.preheader
	.loc	11 409 17 is_stmt 0 discriminator 1 # rhs.c:409:17
	addl	$-2, %r9d
	jle	.LBB6_135
# BB#125:                               # %for.cond2938.preheader.lr.ph
.Ltmp644:
	.loc	11 413 29 is_stmt 1     # rhs.c:413:29
	movslq	grid_points+4(%rip), %r15
.Ltmp645:
	.loc	11 410 36 discriminator 1 # rhs.c:410:36
	addq	$-2, %r15
	.loc	11 410 19 is_stmt 0 discriminator 1 # rhs.c:410:19
	testl	%r15d, %r15d
	jle	.LBB6_135
# BB#126:                               # %for.cond2942.preheader.lr.ph.preheader
.Ltmp646:
	.loc	11 411 24 is_stmt 1 discriminator 1 # rhs.c:411:24
	movl	grid_points(%rip), %edx
	.loc	11 411 38 is_stmt 0 discriminator 1 # rhs.c:411:38
	leal	-2(%rdx), %r8d
.Ltmp647:
	.loc	11 413 47 is_stmt 1     # rhs.c:413:47
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	11 413 29 is_stmt 0     # rhs.c:413:29
	movslq	%r9d, %r9
	.loc	11 413 45               # rhs.c:413:45
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
.Ltmp648:
	.loc	11 411 7 is_stmt 1 discriminator 1 # rhs.c:411:7
	movl	%edx, %edi
	andl	$1, %edi
	leal	-1(%rdx), %r11d
	movl	$1, %r14d
	movl	$rhs+171672, %r10d
	.p2align	4, 0x90
.LBB6_127:                              # %for.cond2942.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_128 Depth 2
                                        #       Child Loop BB6_132 Depth 3
	testl	%r8d, %r8d
	movq	%r10, %rcx
	movl	$1, %esi
	jle	.LBB6_134
	.p2align	4, 0x90
.LBB6_128:                              # %for.cond2946.preheader.lr.ph
                                        #   Parent Loop BB6_127 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_132 Depth 3
	testl	%edi, %edi
	movl	$1, %eax
	je	.LBB6_130
# BB#129:                               # %for.cond2946.preheader.prol
                                        #   in Loop: Header=BB6_128 Depth=2
.Ltmp649:
	.loc	11 413 29               # rhs.c:413:29
	imulq	$2600, %rsi, %rax       # imm = 0xA28
	imulq	$169000, %r14, %rbx     # imm = 0x29428
	movupd	rhs+40(%rbx,%rax), %xmm2
	.loc	11 413 45 is_stmt 0     # rhs.c:413:45
	mulpd	%xmm1, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movupd	%xmm2, rhs+40(%rbx,%rax)
	.loc	11 413 29               # rhs.c:413:29
	movupd	rhs+56(%rbx,%rax), %xmm2
	.loc	11 413 45               # rhs.c:413:45
	mulpd	%xmm1, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movupd	%xmm2, rhs+56(%rbx,%rax)
	movsd	rhs+72(%rbx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	11 413 45               # rhs.c:413:45
	mulsd	%xmm0, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movsd	%xmm2, rhs+72(%rbx,%rax)
	movl	$2, %eax
.Ltmp650:
.LBB6_130:                              # %for.cond2946.preheader.lr.ph.split
                                        #   in Loop: Header=BB6_128 Depth=2
	cmpl	$3, %edx
	je	.LBB6_133
# BB#131:                               # %for.cond2946.preheader.lr.ph.split.split
                                        #   in Loop: Header=BB6_128 Depth=2
	.loc	11 411 7 is_stmt 1 discriminator 1 # rhs.c:411:7
	movl	%r11d, %ebp
	subl	%eax, %ebp
	shlq	$3, %rax
	leaq	(%rax,%rax,4), %rbx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB6_132:                              # %for.cond2946.preheader
                                        #   Parent Loop BB6_127 Depth=1
                                        #     Parent Loop BB6_128 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp651:
	.loc	11 413 29               # rhs.c:413:29
	movupd	-72(%rbx,%rax), %xmm2
	.loc	11 413 45 is_stmt 0     # rhs.c:413:45
	mulpd	%xmm1, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movupd	%xmm2, -72(%rbx,%rax)
	.loc	11 413 29               # rhs.c:413:29
	movupd	-56(%rbx,%rax), %xmm2
	.loc	11 413 45               # rhs.c:413:45
	mulpd	%xmm1, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movupd	%xmm2, -56(%rbx,%rax)
	movsd	-40(%rbx,%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 413 45               # rhs.c:413:45
	mulsd	%xmm0, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movsd	%xmm2, -40(%rbx,%rax)
	.loc	11 413 29               # rhs.c:413:29
	movupd	-32(%rbx,%rax), %xmm2
	.loc	11 413 45               # rhs.c:413:45
	mulpd	%xmm1, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movupd	%xmm2, -32(%rbx,%rax)
	.loc	11 413 29               # rhs.c:413:29
	movupd	-16(%rbx,%rax), %xmm2
	.loc	11 413 45               # rhs.c:413:45
	mulpd	%xmm1, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movupd	%xmm2, -16(%rbx,%rax)
	movsd	(%rbx,%rax), %xmm2      # xmm2 = mem[0],zero
	.loc	11 413 45               # rhs.c:413:45
	mulsd	%xmm0, %xmm2
	.loc	11 413 27               # rhs.c:413:27
	movsd	%xmm2, (%rbx,%rax)
.Ltmp652:
	.loc	11 411 7 is_stmt 1 discriminator 1 # rhs.c:411:7
	addq	$80, %rax
	addl	$-2, %ebp
	jne	.LBB6_132
.Ltmp653:
.LBB6_133:                              # %for.inc2972
                                        #   in Loop: Header=BB6_128 Depth=2
	.loc	11 410 5 discriminator 1 # rhs.c:410:5
	addq	$2600, %rcx             # imm = 0xA28
	.loc	11 410 19 is_stmt 0 discriminator 1 # rhs.c:410:19
	cmpq	%r15, %rsi
	.loc	11 410 5 discriminator 1 # rhs.c:410:5
	leaq	1(%rsi), %rsi
	jl	.LBB6_128
.Ltmp654:
.LBB6_134:                              # %for.inc2975
                                        #   in Loop: Header=BB6_127 Depth=1
	.loc	11 409 3 is_stmt 1 discriminator 1 # rhs.c:409:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	11 409 17 is_stmt 0 discriminator 1 # rhs.c:409:17
	cmpq	%r9, %r14
	.loc	11 409 3 discriminator 1 # rhs.c:409:3
	leaq	1(%r14), %r14
	jl	.LBB6_127
.Ltmp655:
.LBB6_135:                              # %for.end2977
	.loc	11 418 7 is_stmt 1      # rhs.c:418:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_136
# BB#138:                               # %if.then2979
	.loc	11 418 16 is_stmt 0 discriminator 1 # rhs.c:418:16
	movl	$5, %edi
	addq	$472, %rsp              # imm = 0x1D8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	timer_stop              # TAILCALL
.Ltmp656:
.LBB6_136:                              # %if.end2980
	.loc	11 419 1 is_stmt 1      # rhs.c:419:1
	addq	$472, %rsp              # imm = 0x1D8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp657:
.Lfunc_end6:
	.size	compute_rhs, .Lfunc_end6-compute_rhs
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI7_0:
	.quad	4611686018427387904     # double 2
.LCPI7_2:
	.quad	-9223372036854775808    # double -0
.LCPI7_3:
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI7_1:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	x_solve
	.p2align	4, 0x90
	.type	x_solve,@function
x_solve:                                # @x_solve
.Lfunc_begin7:
	.file	12 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/x_solve.c"
	.loc	12 50 0                 # x_solve.c:50:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	12 56 7 prologue_end    # x_solve.c:56:7
	pushq	%rbp
.Ltmp658:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp659:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp660:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp661:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp662:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp663:
	.cfi_def_cfa_offset 56
	subq	$264, %rsp              # imm = 0x108
.Ltmp664:
	.cfi_def_cfa_offset 320
.Ltmp665:
	.cfi_offset %rbx, -56
.Ltmp666:
	.cfi_offset %r12, -48
.Ltmp667:
	.cfi_offset %r13, -40
.Ltmp668:
	.cfi_offset %r14, -32
.Ltmp669:
	.cfi_offset %r15, -24
.Ltmp670:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB7_2
# BB#1:                                 # %if.then
	.loc	12 56 16 is_stmt 0 discriminator 1 # x_solve.c:56:16
	movl	$6, %edi
	callq	timer_start
.Ltmp671:
.LBB7_2:                                # %if.end
	#DEBUG_VALUE: x_solve:k <- 1
	.loc	12 70 20 is_stmt 1 discriminator 1 # x_solve.c:70:20
	movl	grid_points+8(%rip), %ecx
	.loc	12 70 17 is_stmt 0 discriminator 1 # x_solve.c:70:17
	movl	%ecx, %eax
	addl	$-2, %eax
	jle	.LBB7_22
.Ltmp672:
# BB#3:                                 # %for.cond2.preheader.lr.ph
	.loc	12 65 11 is_stmt 1      # x_solve.c:65:11
	movl	grid_points(%rip), %eax
.Ltmp673:
	.loc	12 70 3 discriminator 1 # x_solve.c:70:3
	movl	%eax, 12(%rsp)          # 4-byte Spill
	movslq	%eax, %r15
.Ltmp674:
	.loc	12 65 25                # x_solve.c:65:25
	leal	-1(%r15), %eax
.Ltmp675:
	#DEBUG_VALUE: x_solve:isize <- %EAX
	.loc	12 152 29 discriminator 1 # x_solve.c:152:29
	movl	%eax, 8(%rsp)           # 4-byte Spill
	addq	$-2, %r15
.Ltmp676:
	#DEBUG_VALUE: x_solve:i <- %R15D
	.loc	12 366 18               # x_solve.c:366:18
	movq	%r15, 208(%rsp)         # 8-byte Spill
	cltq
.Ltmp677:
	movq	%rax, 256(%rsp)         # 8-byte Spill
.Ltmp678:
	#DEBUG_VALUE: x_solve:isize <- [%RSP+8]
	imulq	$600, %rax, %rax        # imm = 0x258
	leaq	lhs(%rax), %rdx
	.loc	12 371 52               # x_solve.c:371:52
	movq	%rdx, 248(%rsp)         # 8-byte Spill
	leaq	lhs+200(%rax), %rax
.Ltmp679:
	.loc	12 71 22 discriminator 1 # x_solve.c:71:22
	movq	%rax, 240(%rsp)         # 8-byte Spill
	movl	grid_points+4(%rip), %eax
.Ltmp680:
	.loc	12 371 34               # x_solve.c:371:34
	imulq	$600, %r15, %rdx        # imm = 0x258
	leaq	lhs+400(%rdx), %rsi
.Ltmp681:
	.loc	12 70 3 discriminator 1 # x_solve.c:70:3
	movq	%rsi, 232(%rsp)         # 8-byte Spill
	leaq	(%r15,%r15,4), %rsi
	movq	%rsi, 224(%rsp)         # 8-byte Spill
	leaq	rhs+171600(,%rsi,8), %rsi
	leaq	lhs+560(%rdx), %rdx
	movq	%rdx, 216(%rsp)         # 8-byte Spill
	movl	$1, %r12d
	xorl	%edi, %edi
	movl	$rhs+171640, %ebp
.Ltmp682:
	.loc	12 118 47               # x_solve.c:118:47
	movapd	.LCPI7_1(%rip), %xmm13  # xmm13 = [9223372036854775808,9223372036854775808]
.Ltmp683:
	.p2align	4, 0x90
.LBB7_4:                                # %for.cond2.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_5 Depth 2
                                        #       Child Loop BB7_7 Depth 3
                                        #       Child Loop BB7_12 Depth 3
                                        #       Child Loop BB7_14 Depth 3
                                        #       Child Loop BB7_16 Depth 3
                                        #         Child Loop BB7_17 Depth 4
	.loc	12 71 19 discriminator 1 # x_solve.c:71:19
	movq	%rbp, 184(%rsp)         # 8-byte Spill
	movq	%rdi, 192(%rsp)         # 8-byte Spill
	movq	%rsi, 200(%rsp)         # 8-byte Spill
	movl	%eax, %edx
	addl	$-2, %edx
	movq	%rsi, %r13
	movq	%rbp, %r14
	movq	%rdi, %rbx
	movl	$1, %ebp
	jle	.LBB7_21
	.p2align	4, 0x90
.LBB7_5:                                # %for.cond6.preheader
                                        #   Parent Loop BB7_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB7_7 Depth 3
                                        #       Child Loop BB7_12 Depth 3
                                        #       Child Loop BB7_14 Depth 3
                                        #       Child Loop BB7_16 Depth 3
                                        #         Child Loop BB7_17 Depth 4
.Ltmp684:
	.loc	12 72 7 discriminator 1 # x_solve.c:72:7
	cmpl	$0, 12(%rsp)            # 4-byte Folded Reload
	jle	.LBB7_9
# BB#6:                                 # %for.body8.lr.ph
                                        #   in Loop: Header=BB7_5 Depth=2
.Ltmp685:
	.loc	12 86 13                # x_solve.c:86:13
	movsd	c2(%rip), %xmm11        # xmm11 = mem[0],zero
	.loc	12 87 31                # x_solve.c:87:31
	movsd	.LCPI7_0(%rip), %xmm0   # xmm0 = mem[0],zero
	subsd	%xmm11, %xmm0
	movsd	%xmm0, 48(%rsp)         # 8-byte Spill
	.loc	12 104 30               # x_solve.c:104:30
	movapd	%xmm11, %xmm0
	addsd	%xmm0, %xmm0
	movsd	%xmm0, 40(%rsp)         # 8-byte Spill
	.loc	12 104 56 is_stmt 0     # x_solve.c:104:56
	movsd	c1(%rip), %xmm12        # xmm12 = mem[0],zero
	.loc	12 118 35 is_stmt 1     # x_solve.c:118:35
	movsd	c3c4(%rip), %xmm0       # xmm0 = mem[0],zero
	movapd	%xmm0, 160(%rsp)        # 16-byte Spill
	movsd	con43(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	12 118 33 is_stmt 0     # x_solve.c:118:33
	mulsd	%xmm0, %xmm1
	.loc	12 137 15 is_stmt 1     # x_solve.c:137:15
	movapd	%xmm1, 144(%rsp)        # 16-byte Spill
	movsd	c1345(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	12 137 13 is_stmt 0     # x_solve.c:137:13
	movsd	%xmm2, 128(%rsp)        # 8-byte Spill
	movapd	%xmm1, %xmm3
	subsd	%xmm2, %xmm3
	movapd	%xmm3, 112(%rsp)        # 16-byte Spill
	.loc	12 138 20 is_stmt 1     # x_solve.c:138:20
	movapd	%xmm0, %xmm3
	subsd	%xmm2, %xmm3
	movapd	%xmm3, 96(%rsp)         # 16-byte Spill
	.loc	12 118 40               # x_solve.c:118:40
	unpcklpd	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movapd	%xmm1, 80(%rsp)         # 16-byte Spill
	movl	12(%rsp), %eax          # 4-byte Reload
	xorl	%ecx, %ecx
	movq	%rbx, %rdx
	.loc	12 80 23                # x_solve.c:80:23
	movabsq	$4607182418800017408, %rsi # imm = 0x3FF0000000000000
	.p2align	4, 0x90
.LBB7_7:                                # %for.body8
                                        #   Parent Loop BB7_4 Depth=1
                                        #     Parent Loop BB7_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 73 16                # x_solve.c:73:16
	movsd	rho_i+34320(%rdx), %xmm15 # xmm15 = mem[0],zero
	.loc	12 79 23                # x_solve.c:79:23
	movq	$0, fjac(%rcx)
	.loc	12 74 21                # x_solve.c:74:21
	movapd	%xmm15, %xmm9
	.loc	12 80 23                # x_solve.c:80:23
	movq	%rsi, fjac+40(%rcx)
	.loc	12 81 23                # x_solve.c:81:23
	movq	$0, fjac+80(%rcx)
	.loc	12 82 23                # x_solve.c:82:23
	movq	$0, fjac+120(%rcx)
	.loc	12 74 21                # x_solve.c:74:21
	mulsd	%xmm9, %xmm9
	.loc	12 83 23                # x_solve.c:83:23
	movq	$0, fjac+160(%rcx)
	.loc	12 85 27                # x_solve.c:85:27
	movsd	u+171608(%rdx,%rdx,4), %xmm10 # xmm10 = mem[0],zero
	.loc	12 85 41 is_stmt 0      # x_solve.c:85:41
	movapd	%xmm10, %xmm1
	.loc	12 86 18 is_stmt 1      # x_solve.c:86:18
	movsd	qs+34320(%rdx), %xmm4   # xmm4 = mem[0],zero
	.loc	12 87 56                # x_solve.c:87:56
	movapd	%xmm10, %xmm0
	divsd	u+171600(%rdx,%rdx,4), %xmm0
	.loc	12 87 38 is_stmt 0      # x_solve.c:87:38
	mulsd	48(%rsp), %xmm0         # 8-byte Folded Reload
	.loc	12 87 23                # x_solve.c:87:23
	movsd	%xmm0, fjac+48(%rcx)
	.loc	12 118 49 is_stmt 1     # x_solve.c:118:49
	movupd	u+171608(%rdx,%rdx,4), %xmm2
	.loc	12 88 48                # x_solve.c:88:48
	movapd	%xmm2, 16(%rsp)         # 16-byte Spill
	.loc	12 92 42                # x_solve.c:92:42
	movapd	%xmm10, %xmm5
	.loc	12 88 48                # x_solve.c:88:48
	shufpd	$1, %xmm2, %xmm2        # xmm2 = xmm2[1,0]
	.loc	12 92 42                # x_solve.c:92:42
	mulsd	%xmm2, %xmm5
	.loc	12 88 48                # x_solve.c:88:48
	mulsd	%xmm15, %xmm2
	.loc	12 88 30 is_stmt 0      # x_solve.c:88:30
	movapd	%xmm11, %xmm7
	mulsd	%xmm2, %xmm7
	xorpd	%xmm13, %xmm7
	.loc	12 89 34 is_stmt 1      # x_solve.c:89:34
	movsd	u+171624(%rdx,%rdx,4), %xmm6 # xmm6 = mem[0],zero
	.loc	12 89 48 is_stmt 0      # x_solve.c:89:48
	movapd	%xmm6, %xmm8
	mulsd	%xmm15, %xmm8
	.loc	12 85 48 is_stmt 1      # x_solve.c:85:48
	movapd	%xmm10, %xmm14
	movsd	square+34320(%rdx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 88 23                # x_solve.c:88:23
	movlpd	%xmm7, fjac+88(%rcx)
	.loc	12 104 36               # x_solve.c:104:36
	mulsd	40(%rsp), %xmm0         # 8-byte Folded Reload
	.loc	12 104 61 is_stmt 0     # x_solve.c:104:61
	movsd	u+171632(%rdx,%rdx,4), %xmm7 # xmm7 = mem[0],zero
	movsd	%xmm7, 56(%rsp)         # 8-byte Spill
	movapd	%xmm13, %xmm3
	.loc	12 104 59               # x_solve.c:104:59
	movapd	%xmm12, %xmm13
	mulsd	%xmm7, %xmm13
	.loc	12 85 41 is_stmt 1      # x_solve.c:85:41
	mulsd	%xmm9, %xmm1
	.loc	12 104 54               # x_solve.c:104:54
	subsd	%xmm13, %xmm0
	.loc	12 105 11               # x_solve.c:105:11
	mulsd	%xmm1, %xmm0
	.loc	12 85 48                # x_solve.c:85:48
	unpcklpd	%xmm9, %xmm1    # xmm1 = xmm1[0],xmm9[0]
	unpcklpd	%xmm5, %xmm14   # xmm14 = xmm14[0],xmm5[0]
	mulpd	%xmm14, %xmm1
	.loc	12 89 30                # x_solve.c:89:30
	movapd	%xmm11, %xmm7
	mulsd	%xmm8, %xmm7
	xorpd	%xmm3, %xmm7
	.loc	12 89 23 is_stmt 0      # x_solve.c:89:23
	movlpd	%xmm7, fjac+128(%rcx)
	.loc	12 86 16 is_stmt 1      # x_solve.c:86:16
	movapd	%xmm11, %xmm7
	mulsd	%xmm4, %xmm7
	.loc	12 86 11 is_stmt 0      # x_solve.c:86:11
	movhpd	.LCPI7_2(%rip), %xmm7   # xmm7 = xmm7[0],mem[0]
	subpd	%xmm1, %xmm7
	.loc	12 90 23 is_stmt 1      # x_solve.c:90:23
	movsd	%xmm11, fjac+168(%rcx)
	.loc	12 85 23                # x_solve.c:85:23
	movupd	%xmm7, fjac+8(%rcx)
	.loc	12 93 23                # x_solve.c:93:23
	movsd	%xmm2, fjac+56(%rcx)
	.loc	12 94 39                # x_solve.c:94:39
	movapd	%xmm15, %xmm2
	mulsd	%xmm10, %xmm2
	.loc	12 94 23 is_stmt 0      # x_solve.c:94:23
	movsd	%xmm2, fjac+96(%rcx)
	.loc	12 95 23 is_stmt 1      # x_solve.c:95:23
	movq	$0, fjac+136(%rcx)
	.loc	12 98 42                # x_solve.c:98:42
	mulsd	%xmm10, %xmm6
	.loc	12 98 59 is_stmt 0      # x_solve.c:98:59
	movapd	%xmm6, %xmm1
	mulsd	%xmm9, %xmm1
	.loc	12 96 23 is_stmt 1      # x_solve.c:96:23
	movq	$0, fjac+176(%rcx)
	.loc	12 98 59                # x_solve.c:98:59
	xorpd	%xmm3, %xmm1
	.loc	12 98 23 is_stmt 0      # x_solve.c:98:23
	movlpd	%xmm1, fjac+24(%rcx)
	.loc	12 99 23 is_stmt 1      # x_solve.c:99:23
	movsd	%xmm8, fjac+64(%rcx)
	.loc	12 100 23               # x_solve.c:100:23
	movq	$0, fjac+104(%rcx)
	.loc	12 101 23               # x_solve.c:101:23
	movsd	%xmm2, fjac+144(%rcx)
	.loc	12 106 45               # x_solve.c:106:45
	mulsd	%xmm15, %xmm13
	.loc	12 107 33               # x_solve.c:107:33
	mulsd	%xmm10, %xmm10
	.loc	12 102 23               # x_solve.c:102:23
	movq	$0, fjac+184(%rcx)
	.loc	12 107 48               # x_solve.c:107:48
	mulsd	%xmm9, %xmm10
	.loc	12 107 55 is_stmt 0     # x_solve.c:107:55
	addsd	%xmm4, %xmm10
	.loc	12 107 16               # x_solve.c:107:16
	mulsd	%xmm11, %xmm10
	.loc	12 104 23 is_stmt 1     # x_solve.c:104:23
	movsd	%xmm0, fjac+32(%rcx)
	.loc	12 107 11               # x_solve.c:107:11
	subsd	%xmm10, %xmm13
	.loc	12 118 40               # x_solve.c:118:40
	movapd	%xmm9, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	80(%rsp), %xmm4         # 16-byte Folded Reload
	.loc	12 118 47 is_stmt 0     # x_solve.c:118:47
	movapd	%xmm4, %xmm1
	movapd	112(%rsp), %xmm8        # 16-byte Reload
	.loc	12 143 23 is_stmt 1     # x_solve.c:143:23
	movapd	%xmm8, %xmm10
	movapd	16(%rsp), %xmm0         # 16-byte Reload
	.loc	12 118 47               # x_solve.c:118:47
	mulpd	%xmm0, %xmm1
	.loc	12 143 23               # x_solve.c:143:23
	mulsd	%xmm9, %xmm10
	.loc	12 143 30 is_stmt 0     # x_solve.c:143:30
	mulsd	%xmm0, %xmm10
	.loc	12 137 46 is_stmt 1     # x_solve.c:137:46
	movapd	%xmm0, %xmm7
	.loc	12 106 23               # x_solve.c:106:23
	movsd	%xmm13, fjac+72(%rcx)
	movapd	%xmm3, %xmm13
	.loc	12 75 21                # x_solve.c:75:21
	movapd	%xmm15, %xmm3
	mulsd	%xmm9, %xmm3
	.loc	12 108 30               # x_solve.c:108:30
	mulsd	%xmm11, %xmm5
	.loc	12 108 64 is_stmt 0     # x_solve.c:108:64
	mulsd	%xmm9, %xmm5
	xorpd	%xmm13, %xmm5
	.loc	12 108 23               # x_solve.c:108:23
	movlpd	%xmm5, fjac+112(%rcx)
	.loc	12 109 30 is_stmt 1     # x_solve.c:109:30
	mulsd	%xmm11, %xmm6
	.loc	12 109 64 is_stmt 0     # x_solve.c:109:64
	mulsd	%xmm9, %xmm6
	xorpd	%xmm13, %xmm6
	.loc	12 109 23               # x_solve.c:109:23
	movlpd	%xmm6, fjac+152(%rcx)
	.loc	12 110 28 is_stmt 1     # x_solve.c:110:28
	mulsd	%xmm12, %xmm2
	.loc	12 112 23               # x_solve.c:112:23
	movq	$0, njac(%rcx)
	.loc	12 113 23               # x_solve.c:113:23
	movq	$0, njac+40(%rcx)
	.loc	12 119 40               # x_solve.c:119:40
	movapd	144(%rsp), %xmm5        # 16-byte Reload
	.loc	12 110 23               # x_solve.c:110:23
	movsd	%xmm2, fjac+192(%rcx)
	.loc	12 119 40               # x_solve.c:119:40
	mulsd	%xmm15, %xmm5
	.loc	12 119 23 is_stmt 0     # x_solve.c:119:23
	movsd	%xmm5, njac+48(%rcx)
	.loc	12 114 23 is_stmt 1     # x_solve.c:114:23
	xorpd	%xmm0, %xmm0
	movupd	%xmm0, njac+80(%rcx)
	.loc	12 115 23               # x_solve.c:115:23
	movupd	%xmm0, njac+120(%rcx)
	.loc	12 116 23               # x_solve.c:116:23
	movupd	%xmm0, njac+160(%rcx)
	.loc	12 118 47               # x_solve.c:118:47
	xorpd	%xmm13, %xmm1
	.loc	12 118 23 is_stmt 0     # x_solve.c:118:23
	movupd	%xmm1, njac+8(%rcx)
	.loc	12 125 23 is_stmt 1     # x_solve.c:125:23
	movq	$0, njac+56(%rcx)
	.loc	12 130 41               # x_solve.c:130:41
	movsd	u+171624(%rdx,%rdx,4), %xmm1 # xmm1 = mem[0],zero
	movapd	96(%rsp), %xmm0         # 16-byte Reload
	.loc	12 144 42               # x_solve.c:144:42
	movapd	%xmm0, %xmm2
	mulsd	%xmm9, %xmm2
	.loc	12 126 32               # x_solve.c:126:32
	movapd	160(%rsp), %xmm5        # 16-byte Reload
	unpcklpd	%xmm2, %xmm5    # xmm5 = xmm5[0],xmm2[0]
	movapd	%xmm15, %xmm6
	unpcklpd	%xmm1, %xmm6    # xmm6 = xmm6[0],xmm1[0]
	mulpd	%xmm5, %xmm6
	.loc	12 126 23 is_stmt 0     # x_solve.c:126:23
	movlpd	%xmm6, njac+96(%rcx)
	.loc	12 130 39 is_stmt 1     # x_solve.c:130:39
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	.loc	12 127 23               # x_solve.c:127:23
	movq	$0, njac+136(%rcx)
	.loc	12 130 39               # x_solve.c:130:39
	mulsd	%xmm1, %xmm4
	xorpd	%xmm13, %xmm4
	.loc	12 137 23               # x_solve.c:137:23
	movapd	%xmm8, %xmm5
	mulsd	%xmm3, %xmm5
	.loc	12 128 23               # x_solve.c:128:23
	movq	$0, njac+176(%rcx)
	.loc	12 137 46               # x_solve.c:137:46
	mulsd	%xmm7, %xmm7
	.loc	12 137 30 is_stmt 0     # x_solve.c:137:30
	mulsd	%xmm5, %xmm7
	.loc	12 138 30 is_stmt 1     # x_solve.c:138:30
	movapd	%xmm0, %xmm5
	mulsd	%xmm3, %xmm5
	.loc	12 130 23               # x_solve.c:130:23
	movlpd	%xmm4, njac+24(%rcx)
	.loc	12 138 40               # x_solve.c:138:40
	movsd	u+171616(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	12 144 49               # x_solve.c:144:49
	mulsd	%xmm4, %xmm2
	.loc	12 138 53               # x_solve.c:138:53
	mulsd	%xmm4, %xmm4
	.loc	12 138 37 is_stmt 0     # x_solve.c:138:37
	mulsd	%xmm5, %xmm4
	.loc	12 139 53 is_stmt 1     # x_solve.c:139:53
	mulsd	%xmm1, %xmm1
	.loc	12 139 37 is_stmt 0     # x_solve.c:139:37
	mulsd	%xmm5, %xmm1
	.loc	12 137 30 is_stmt 1     # x_solve.c:137:30
	xorpd	%xmm13, %xmm7
	.loc	12 138 11               # x_solve.c:138:11
	subsd	%xmm4, %xmm7
	.loc	12 139 11               # x_solve.c:139:11
	subsd	%xmm1, %xmm7
	movsd	128(%rsp), %xmm4        # 8-byte Reload
                                        # xmm4 = mem[0],zero
	.loc	12 140 19               # x_solve.c:140:19
	movapd	%xmm4, %xmm1
	mulsd	%xmm9, %xmm1
	.loc	12 140 26 is_stmt 0     # x_solve.c:140:26
	mulsd	56(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	12 140 11               # x_solve.c:140:11
	subsd	%xmm1, %xmm7
	.loc	12 131 23 is_stmt 1     # x_solve.c:131:23
	movq	$0, njac+64(%rcx)
	.loc	12 132 23               # x_solve.c:132:23
	movq	$0, njac+104(%rcx)
	.loc	12 134 23               # x_solve.c:134:23
	movq	$0, njac+184(%rcx)
	.loc	12 136 23               # x_solve.c:136:23
	movsd	%xmm7, njac+32(%rcx)
	.loc	12 142 23               # x_solve.c:142:23
	movsd	%xmm10, njac+72(%rcx)
	.loc	12 144 23               # x_solve.c:144:23
	movsd	%xmm2, njac+112(%rcx)
	.loc	12 133 23               # x_solve.c:133:23
	movupd	%xmm6, njac+144(%rcx)
	.loc	12 146 35               # x_solve.c:146:35
	movapd	%xmm4, %xmm0
	mulsd	%xmm15, %xmm0
	.loc	12 146 23 is_stmt 0     # x_solve.c:146:23
	movsd	%xmm0, njac+192(%rcx)
.Ltmp686:
	.loc	12 72 7 is_stmt 1 discriminator 1 # x_solve.c:72:7
	addq	$8, %rdx
	addq	$200, %rcx
	decl	%eax
	jne	.LBB7_7
# BB#8:                                 # %for.cond6.for.end_crit_edge
                                        #   in Loop: Header=BB7_5 Depth=2
.Ltmp687:
	.loc	12 146 37               # x_solve.c:146:37
	movsd	%xmm15, tmp1(%rip)
	.loc	12 145 44               # x_solve.c:145:44
	movsd	%xmm9, tmp2(%rip)
	.loc	12 137 25               # x_solve.c:137:25
	movsd	%xmm3, tmp3(%rip)
.Ltmp688:
.LBB7_9:                                # %for.end
                                        #   in Loop: Header=BB7_5 Depth=2
	.loc	12 151 7                # x_solve.c:151:7
	movl	$lhs, %edi
	movl	8(%rsp), %esi           # 4-byte Reload
	callq	lhsinit
.Ltmp689:
	#DEBUG_VALUE: x_solve:i <- 1
	.loc	12 152 7 discriminator 1 # x_solve.c:152:7
	testl	%r15d, %r15d
	jle	.LBB7_10
# BB#11:                                # %for.body583.lr.ph
                                        #   in Loop: Header=BB7_5 Depth=2
	movq	%rbx, 64(%rsp)          # 8-byte Spill
	movq	%r13, 80(%rsp)          # 8-byte Spill
.Ltmp690:
	.loc	12 153 19               # x_solve.c:153:19
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movsd	tx1(%rip), %xmm6        # xmm6 = mem[0],zero
	movhpd	tx2(%rip), %xmm6        # xmm6 = xmm6[0],mem[0]
	mulpd	%xmm0, %xmm6
	.loc	12 158 20               # x_solve.c:158:20
	movsd	dx1(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	12 172 20               # x_solve.c:172:20
	movsd	dx2(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	12 186 20               # x_solve.c:186:20
	movsd	dx3(%rip), %xmm2        # xmm2 = mem[0],zero
	.loc	12 200 20               # x_solve.c:200:20
	movsd	dx4(%rip), %xmm3        # xmm3 = mem[0],zero
	.loc	12 214 20               # x_solve.c:214:20
	movsd	dx5(%rip), %xmm5        # xmm5 = mem[0],zero
	.loc	12 158 18               # x_solve.c:158:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm0, %xmm4
	movapd	%xmm4, %xmm8
	.loc	12 172 18               # x_solve.c:172:18
	movapd	%xmm6, %xmm13
	mulsd	%xmm1, %xmm13
	.loc	12 186 18               # x_solve.c:186:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm2, %xmm4
	movapd	%xmm4, 96(%rsp)         # 16-byte Spill
	movapd	%xmm4, %xmm9
	.loc	12 200 18               # x_solve.c:200:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm3, %xmm4
	movapd	%xmm4, 144(%rsp)        # 16-byte Spill
	.loc	12 214 18               # x_solve.c:214:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm5, %xmm4
	movapd	%xmm4, 128(%rsp)        # 16-byte Spill
	.loc	12 217 18               # x_solve.c:217:18
	movapd	%xmm6, %xmm10
	addsd	%xmm10, %xmm10
	.loc	12 218 24               # x_solve.c:218:24
	mulsd	%xmm10, %xmm0
	movsd	%xmm0, 16(%rsp)         # 8-byte Spill
	.loc	12 227 24               # x_solve.c:227:24
	mulsd	%xmm10, %xmm1
	movsd	%xmm1, 56(%rsp)         # 8-byte Spill
	.loc	12 236 24               # x_solve.c:236:24
	mulsd	%xmm10, %xmm2
	movsd	%xmm2, 48(%rsp)         # 8-byte Spill
	.loc	12 245 24               # x_solve.c:245:24
	mulsd	%xmm10, %xmm3
	movsd	%xmm3, 40(%rsp)         # 8-byte Spill
	.loc	12 254 24               # x_solve.c:254:24
	mulsd	%xmm10, %xmm5
	movsd	%xmm5, 160(%rsp)        # 8-byte Spill
	.loc	12 242 39               # x_solve.c:242:39
	movapd	%xmm10, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 112(%rsp)        # 16-byte Spill
	.loc	12 159 35               # x_solve.c:159:35
	movapd	%xmm6, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	12 161 35               # x_solve.c:161:35
	movapd	%xmm6, %xmm14
	movhlps	%xmm14, %xmm14          # xmm14 = xmm14[1,1]
	.loc	12 162 18               # x_solve.c:162:18
	movapd	%xmm6, %xmm15
	movlhps	%xmm15, %xmm15          # xmm15 = xmm15[0,0]
	movl	%r15d, %eax
	movl	$592, %ecx              # imm = 0x250
.Ltmp691:
	.loc	12 118 47               # x_solve.c:118:47
	movapd	.LCPI7_1(%rip), %xmm12  # xmm12 = [9223372036854775808,9223372036854775808]
.Ltmp692:
	.p2align	4, 0x90
.LBB7_12:                               # %for.body583
                                        #   Parent Loop BB7_4 Depth=1
                                        #     Parent Loop BB7_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	fjac-592(%rcx), %xmm3   # xmm3 = mem[0],zero
.Ltmp693:
	.loc	12 156 35               # x_solve.c:156:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm12, %xmm3
	movsd	njac-552(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 160 18               # x_solve.c:160:18
	mulsd	%xmm6, %xmm2
	.loc	12 157 18               # x_solve.c:157:18
	movsd	njac-592(%rcx), %xmm5   # xmm5 = mem[0],zero
	movhpd	fjac-584(%rcx), %xmm5   # xmm5 = xmm5[0],mem[0]
	mulpd	%xmm6, %xmm5
	.loc	12 199 11               # x_solve.c:199:11
	movsd	.LCPI7_2(%rip), %xmm4   # xmm4 = mem[0],zero
	.loc	12 157 11               # x_solve.c:157:11
	unpcklpd	%xmm4, %xmm3    # xmm3 = xmm3[0],xmm4[0]
	subpd	%xmm5, %xmm3
	movsd	njac-584(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	12 169 18               # x_solve.c:169:18
	mulsd	%xmm6, %xmm5
	.loc	12 158 11               # x_solve.c:158:11
	movapd	%xmm8, %xmm7
	movapd	%xmm8, %xmm1
	unpcklpd	%xmm5, %xmm7    # xmm7 = xmm7[0],xmm5[0]
	subpd	%xmm7, %xmm3
	.loc	12 159 35               # x_solve.c:159:35
	movsd	fjac-552(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	12 156 26               # x_solve.c:156:26
	movupd	%xmm3, lhs-1176(%rcx,%rcx,2)
	movsd	fjac-544(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 170 35               # x_solve.c:170:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm12, %xmm3
	.loc	12 159 35               # x_solve.c:159:35
	movhpd	njac-544(%rcx), %xmm5   # xmm5 = xmm5[0],mem[0]
	mulpd	%xmm0, %xmm5
	movapd	%xmm4, %xmm7
	unpcklpd	%xmm3, %xmm7    # xmm7 = xmm7[0],xmm3[0]
	subpd	%xmm5, %xmm7
	.loc	12 160 11               # x_solve.c:160:11
	unpcklpd	%xmm13, %xmm2   # xmm2 = xmm2[0],xmm13[0]
	subpd	%xmm2, %xmm7
	.loc	12 159 26               # x_solve.c:159:26
	movupd	%xmm7, lhs-1136(%rcx,%rcx,2)
	.loc	12 161 37               # x_solve.c:161:37
	movupd	fjac-512(%rcx), %xmm2
	.loc	12 161 35 is_stmt 0     # x_solve.c:161:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm12, %xmm2
	.loc	12 162 20 is_stmt 1     # x_solve.c:162:20
	movupd	njac-512(%rcx), %xmm3
	.loc	12 162 18 is_stmt 0     # x_solve.c:162:18
	mulpd	%xmm15, %xmm3
	.loc	12 162 11               # x_solve.c:162:11
	subpd	%xmm3, %xmm2
	.loc	12 161 26 is_stmt 1     # x_solve.c:161:26
	movupd	%xmm2, lhs-1096(%rcx,%rcx,2)
	.loc	12 163 37               # x_solve.c:163:37
	movupd	fjac-472(%rcx), %xmm2
	.loc	12 163 35 is_stmt 0     # x_solve.c:163:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm12, %xmm2
	.loc	12 164 20 is_stmt 1     # x_solve.c:164:20
	movupd	njac-472(%rcx), %xmm3
	.loc	12 164 18 is_stmt 0     # x_solve.c:164:18
	mulpd	%xmm15, %xmm3
	.loc	12 164 11               # x_solve.c:164:11
	subpd	%xmm3, %xmm2
	.loc	12 163 26 is_stmt 1     # x_solve.c:163:26
	movupd	%xmm2, lhs-1056(%rcx,%rcx,2)
	.loc	12 165 37               # x_solve.c:165:37
	movupd	fjac-432(%rcx), %xmm2
	.loc	12 165 35 is_stmt 0     # x_solve.c:165:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm12, %xmm2
	.loc	12 166 20 is_stmt 1     # x_solve.c:166:20
	movupd	njac-432(%rcx), %xmm3
	.loc	12 166 18 is_stmt 0     # x_solve.c:166:18
	mulpd	%xmm15, %xmm3
	.loc	12 166 11               # x_solve.c:166:11
	subpd	%xmm3, %xmm2
	.loc	12 165 26 is_stmt 1     # x_solve.c:165:26
	movupd	%xmm2, lhs-1016(%rcx,%rcx,2)
	movsd	fjac-536(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 182 35               # x_solve.c:182:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm12, %xmm2
	movsd	njac-536(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 183 18               # x_solve.c:183:18
	mulsd	%xmm6, %xmm3
	.loc	12 183 11 is_stmt 0     # x_solve.c:183:11
	subsd	%xmm3, %xmm2
	.loc	12 182 26 is_stmt 1     # x_solve.c:182:26
	movsd	%xmm2, lhs-1120(%rcx,%rcx,2)
	movsd	fjac-496(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 184 35               # x_solve.c:184:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm12, %xmm2
	movsd	njac-496(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 185 18               # x_solve.c:185:18
	mulsd	%xmm6, %xmm3
	.loc	12 185 11 is_stmt 0     # x_solve.c:185:11
	subsd	%xmm3, %xmm2
	.loc	12 186 11 is_stmt 1     # x_solve.c:186:11
	subsd	%xmm9, %xmm2
	.loc	12 184 26               # x_solve.c:184:26
	movsd	%xmm2, lhs-1080(%rcx,%rcx,2)
	movsd	fjac-456(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 187 35               # x_solve.c:187:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm12, %xmm2
	movsd	njac-456(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 188 18               # x_solve.c:188:18
	mulsd	%xmm6, %xmm3
	.loc	12 188 11 is_stmt 0     # x_solve.c:188:11
	subsd	%xmm3, %xmm2
	.loc	12 187 26 is_stmt 1     # x_solve.c:187:26
	movsd	%xmm2, lhs-1040(%rcx,%rcx,2)
	movsd	fjac-416(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 189 35               # x_solve.c:189:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm12, %xmm2
	movsd	njac-416(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 190 18               # x_solve.c:190:18
	mulsd	%xmm6, %xmm3
	.loc	12 190 11 is_stmt 0     # x_solve.c:190:11
	subsd	%xmm3, %xmm2
	.loc	12 189 26 is_stmt 1     # x_solve.c:189:26
	movsd	%xmm2, lhs-1000(%rcx,%rcx,2)
	.loc	12 180 37               # x_solve.c:180:37
	movupd	fjac-576(%rcx), %xmm2
	.loc	12 180 35 is_stmt 0     # x_solve.c:180:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm12, %xmm2
	.loc	12 181 20 is_stmt 1     # x_solve.c:181:20
	movupd	njac-576(%rcx), %xmm3
	.loc	12 181 18 is_stmt 0     # x_solve.c:181:18
	mulpd	%xmm15, %xmm3
	.loc	12 181 11               # x_solve.c:181:11
	subpd	%xmm3, %xmm2
	.loc	12 180 26 is_stmt 1     # x_solve.c:180:26
	movupd	%xmm2, lhs-1160(%rcx,%rcx,2)
	movsd	fjac-448(%rcx), %xmm9   # xmm9 = mem[0],zero
	movsd	njac-408(%rcx), %xmm8   # xmm8 = mem[0],zero
	movsd	fjac-560(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 204 35               # x_solve.c:204:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm12, %xmm3
	movsd	njac-560(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 205 18               # x_solve.c:205:18
	mulsd	%xmm6, %xmm2
	.loc	12 205 11 is_stmt 0     # x_solve.c:205:11
	subsd	%xmm2, %xmm3
	.loc	12 199 18 is_stmt 1     # x_solve.c:199:18
	movsd	njac-448(%rcx), %xmm11  # xmm11 = mem[0],zero
	.loc	12 201 35               # x_solve.c:201:35
	movsd	fjac-408(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 204 26               # x_solve.c:204:26
	movsd	%xmm3, lhs-1144(%rcx,%rcx,2)
	.loc	12 194 37               # x_solve.c:194:37
	movupd	fjac-528(%rcx), %xmm3
	.loc	12 194 35 is_stmt 0     # x_solve.c:194:35
	mulpd	%xmm14, %xmm3
	xorpd	%xmm12, %xmm3
	.loc	12 195 20 is_stmt 1     # x_solve.c:195:20
	movupd	njac-528(%rcx), %xmm5
	.loc	12 195 18 is_stmt 0     # x_solve.c:195:18
	mulpd	%xmm15, %xmm5
	.loc	12 195 11               # x_solve.c:195:11
	subpd	%xmm5, %xmm3
	.loc	12 194 26 is_stmt 1     # x_solve.c:194:26
	movupd	%xmm3, lhs-1112(%rcx,%rcx,2)
	.loc	12 196 37               # x_solve.c:196:37
	movupd	fjac-488(%rcx), %xmm3
	.loc	12 196 35 is_stmt 0     # x_solve.c:196:35
	mulpd	%xmm14, %xmm3
	xorpd	%xmm12, %xmm3
	.loc	12 197 20 is_stmt 1     # x_solve.c:197:20
	movupd	njac-488(%rcx), %xmm5
	.loc	12 197 18 is_stmt 0     # x_solve.c:197:18
	mulpd	%xmm15, %xmm5
	.loc	12 197 11               # x_solve.c:197:11
	subpd	%xmm5, %xmm3
	.loc	12 198 35 is_stmt 1     # x_solve.c:198:35
	mulsd	%xmm0, %xmm9
	xorpd	%xmm12, %xmm9
	.loc	12 196 26               # x_solve.c:196:26
	movupd	%xmm3, lhs-1072(%rcx,%rcx,2)
	.loc	12 199 18               # x_solve.c:199:18
	movhpd	fjac-440(%rcx), %xmm11  # xmm11 = xmm11[0],mem[0]
	mulpd	%xmm6, %xmm11
	.loc	12 199 11 is_stmt 0     # x_solve.c:199:11
	unpcklpd	%xmm4, %xmm9    # xmm9 = xmm9[0],xmm4[0]
	subpd	%xmm11, %xmm9
	movsd	njac-440(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 211 18 is_stmt 1     # x_solve.c:211:18
	mulsd	%xmm6, %xmm3
	movapd	144(%rsp), %xmm11       # 16-byte Reload
	.loc	12 200 11               # x_solve.c:200:11
	movapd	%xmm11, %xmm5
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
	.loc	12 202 18               # x_solve.c:202:18
	mulsd	%xmm6, %xmm8
	.loc	12 200 11               # x_solve.c:200:11
	subpd	%xmm5, %xmm9
	.loc	12 198 26               # x_solve.c:198:26
	movupd	%xmm9, lhs-1032(%rcx,%rcx,2)
	movsd	fjac-400(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 212 35               # x_solve.c:212:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm12, %xmm3
	.loc	12 201 35               # x_solve.c:201:35
	movhpd	njac-400(%rcx), %xmm2   # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm0, %xmm2
	movapd	%xmm4, %xmm5
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
	subpd	%xmm2, %xmm5
	movapd	128(%rsp), %xmm4        # 16-byte Reload
	.loc	12 202 11               # x_solve.c:202:11
	unpcklpd	%xmm4, %xmm8    # xmm8 = xmm8[0],xmm4[0]
	subpd	%xmm8, %xmm5
	.loc	12 201 26               # x_solve.c:201:26
	movupd	%xmm5, lhs-992(%rcx,%rcx,2)
	movsd	njac-392(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 217 24               # x_solve.c:217:24
	mulsd	%xmm10, %xmm2
	.loc	12 217 11 is_stmt 0     # x_solve.c:217:11
	movsd	.LCPI7_3(%rip), %xmm5   # xmm5 = mem[0],zero
	addsd	%xmm5, %xmm2
	.loc	12 218 11 is_stmt 1     # x_solve.c:218:11
	addsd	16(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	12 216 26               # x_solve.c:216:26
	movsd	%xmm2, lhs-976(%rcx,%rcx,2)
	movsd	njac-352(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 219 39               # x_solve.c:219:39
	mulsd	%xmm10, %xmm2
	.loc	12 219 26 is_stmt 0     # x_solve.c:219:26
	movsd	%xmm2, lhs-936(%rcx,%rcx,2)
	movsd	njac-312(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 220 39 is_stmt 1     # x_solve.c:220:39
	mulsd	%xmm10, %xmm2
	.loc	12 220 26 is_stmt 0     # x_solve.c:220:26
	movsd	%xmm2, lhs-896(%rcx,%rcx,2)
	movsd	njac-272(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 221 39 is_stmt 1     # x_solve.c:221:39
	mulsd	%xmm10, %xmm2
	.loc	12 221 26 is_stmt 0     # x_solve.c:221:26
	movsd	%xmm2, lhs-856(%rcx,%rcx,2)
	movsd	njac-232(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 222 39 is_stmt 1     # x_solve.c:222:39
	mulsd	%xmm10, %xmm2
	.loc	12 222 26 is_stmt 0     # x_solve.c:222:26
	movsd	%xmm2, lhs-816(%rcx,%rcx,2)
	movsd	njac-384(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 224 39 is_stmt 1     # x_solve.c:224:39
	mulsd	%xmm10, %xmm2
	.loc	12 224 26 is_stmt 0     # x_solve.c:224:26
	movsd	%xmm2, lhs-968(%rcx,%rcx,2)
	movsd	njac-344(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 226 24 is_stmt 1     # x_solve.c:226:24
	mulsd	%xmm10, %xmm2
	.loc	12 226 11 is_stmt 0     # x_solve.c:226:11
	addsd	%xmm5, %xmm2
	.loc	12 227 11 is_stmt 1     # x_solve.c:227:11
	addsd	56(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	12 225 26               # x_solve.c:225:26
	movsd	%xmm2, lhs-928(%rcx,%rcx,2)
	movsd	njac-304(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 228 39               # x_solve.c:228:39
	mulsd	%xmm10, %xmm2
	.loc	12 228 26 is_stmt 0     # x_solve.c:228:26
	movsd	%xmm2, lhs-888(%rcx,%rcx,2)
	movsd	njac-296(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 235 24 is_stmt 1     # x_solve.c:235:24
	mulsd	%xmm10, %xmm2
	.loc	12 235 11 is_stmt 0     # x_solve.c:235:11
	addsd	%xmm5, %xmm2
	.loc	12 236 11 is_stmt 1     # x_solve.c:236:11
	addsd	48(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	12 234 26               # x_solve.c:234:26
	movsd	%xmm2, lhs-880(%rcx,%rcx,2)
	.loc	12 229 41               # x_solve.c:229:41
	movupd	njac-264(%rcx), %xmm2
	movapd	112(%rsp), %xmm3        # 16-byte Reload
	.loc	12 229 39 is_stmt 0     # x_solve.c:229:39
	mulpd	%xmm3, %xmm2
	.loc	12 229 26               # x_solve.c:229:26
	movupd	%xmm2, lhs-848(%rcx,%rcx,2)
	.loc	12 230 41 is_stmt 1     # x_solve.c:230:41
	movupd	njac-224(%rcx), %xmm2
	.loc	12 230 39 is_stmt 0     # x_solve.c:230:39
	mulpd	%xmm3, %xmm2
	.loc	12 230 26               # x_solve.c:230:26
	movupd	%xmm2, lhs-808(%rcx,%rcx,2)
	.loc	12 232 41 is_stmt 1     # x_solve.c:232:41
	movupd	njac-376(%rcx), %xmm2
	.loc	12 232 39 is_stmt 0     # x_solve.c:232:39
	mulpd	%xmm3, %xmm2
	.loc	12 232 26               # x_solve.c:232:26
	movupd	%xmm2, lhs-960(%rcx,%rcx,2)
	.loc	12 233 41 is_stmt 1     # x_solve.c:233:41
	movupd	njac-336(%rcx), %xmm2
	.loc	12 233 39 is_stmt 0     # x_solve.c:233:39
	mulpd	%xmm3, %xmm2
	.loc	12 233 26               # x_solve.c:233:26
	movupd	%xmm2, lhs-920(%rcx,%rcx,2)
	movsd	njac-248(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 244 24 is_stmt 1     # x_solve.c:244:24
	mulsd	%xmm10, %xmm2
	.loc	12 244 11 is_stmt 0     # x_solve.c:244:11
	addsd	%xmm5, %xmm2
	.loc	12 245 11 is_stmt 1     # x_solve.c:245:11
	addsd	40(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	12 243 26               # x_solve.c:243:26
	movsd	%xmm2, lhs-832(%rcx,%rcx,2)
	movsd	njac-208(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 246 39               # x_solve.c:246:39
	mulsd	%xmm10, %xmm2
	.loc	12 246 26 is_stmt 0     # x_solve.c:246:26
	movsd	%xmm2, lhs-792(%rcx,%rcx,2)
	movsd	njac-360(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 248 39 is_stmt 1     # x_solve.c:248:39
	mulsd	%xmm10, %xmm2
	.loc	12 248 26 is_stmt 0     # x_solve.c:248:26
	movsd	%xmm2, lhs-944(%rcx,%rcx,2)
	movsd	njac-320(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 249 39 is_stmt 1     # x_solve.c:249:39
	mulsd	%xmm10, %xmm2
	.loc	12 249 26 is_stmt 0     # x_solve.c:249:26
	movsd	%xmm2, lhs-904(%rcx,%rcx,2)
	.loc	12 242 41 is_stmt 1     # x_solve.c:242:41
	movupd	njac-288(%rcx), %xmm2
	.loc	12 242 39 is_stmt 0     # x_solve.c:242:39
	mulpd	%xmm3, %xmm2
	.loc	12 242 26               # x_solve.c:242:26
	movupd	%xmm2, lhs-872(%rcx,%rcx,2)
	movsd	njac-240(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 251 39 is_stmt 1     # x_solve.c:251:39
	mulsd	%xmm10, %xmm2
	.loc	12 251 26 is_stmt 0     # x_solve.c:251:26
	movsd	%xmm2, lhs-824(%rcx,%rcx,2)
	movsd	njac-200(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 253 24 is_stmt 1     # x_solve.c:253:24
	mulsd	%xmm10, %xmm2
	.loc	12 253 11 is_stmt 0     # x_solve.c:253:11
	addsd	%xmm5, %xmm2
	.loc	12 254 11 is_stmt 1     # x_solve.c:254:11
	addsd	160(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	12 252 26               # x_solve.c:252:26
	movsd	%xmm2, lhs-784(%rcx,%rcx,2)
	movsd	fjac-192(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 256 34               # x_solve.c:256:34
	mulsd	%xmm0, %xmm3
	movsd	njac-192(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 257 18               # x_solve.c:257:18
	mulsd	%xmm6, %xmm2
	.loc	12 257 11 is_stmt 0     # x_solve.c:257:11
	subsd	%xmm2, %xmm3
	movsd	fjac-152(%rcx), %xmm2   # xmm2 = mem[0],zero
	movsd	fjac-184(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	12 268 34 is_stmt 1     # x_solve.c:268:34
	mulsd	%xmm0, %xmm5
	movsd	njac-184(%rcx), %xmm7   # xmm7 = mem[0],zero
	.loc	12 269 18               # x_solve.c:269:18
	mulsd	%xmm6, %xmm7
	.loc	12 258 11               # x_solve.c:258:11
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	movapd	%xmm1, %xmm5
	movapd	%xmm1, %xmm8
	unpcklpd	%xmm7, %xmm5    # xmm5 = xmm5[0],xmm7[0]
	movsd	njac-152(%rcx), %xmm7   # xmm7 = mem[0],zero
	subpd	%xmm5, %xmm3
	.loc	12 256 26               # x_solve.c:256:26
	movupd	%xmm3, lhs-776(%rcx,%rcx,2)
	movsd	fjac-144(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 270 34               # x_solve.c:270:34
	mulsd	%xmm0, %xmm3
	movsd	njac-144(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	12 271 18               # x_solve.c:271:18
	mulsd	%xmm6, %xmm5
	.loc	12 271 11 is_stmt 0     # x_solve.c:271:11
	subsd	%xmm5, %xmm3
	.loc	12 259 34 is_stmt 1     # x_solve.c:259:34
	mulsd	%xmm0, %xmm2
	.loc	12 260 18               # x_solve.c:260:18
	mulsd	%xmm6, %xmm7
	.loc	12 260 11 is_stmt 0     # x_solve.c:260:11
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	unpcklpd	%xmm13, %xmm7   # xmm7 = xmm7[0],xmm13[0]
	subpd	%xmm7, %xmm2
	.loc	12 259 26 is_stmt 1     # x_solve.c:259:26
	movupd	%xmm2, lhs-736(%rcx,%rcx,2)
	.loc	12 261 36               # x_solve.c:261:36
	movupd	fjac-112(%rcx), %xmm2
	.loc	12 261 34 is_stmt 0     # x_solve.c:261:34
	mulpd	%xmm14, %xmm2
	.loc	12 262 20 is_stmt 1     # x_solve.c:262:20
	movupd	njac-112(%rcx), %xmm3
	.loc	12 262 18 is_stmt 0     # x_solve.c:262:18
	mulpd	%xmm15, %xmm3
	.loc	12 262 11               # x_solve.c:262:11
	subpd	%xmm3, %xmm2
	.loc	12 261 26 is_stmt 1     # x_solve.c:261:26
	movupd	%xmm2, lhs-696(%rcx,%rcx,2)
	.loc	12 263 36               # x_solve.c:263:36
	movupd	fjac-72(%rcx), %xmm2
	.loc	12 263 34 is_stmt 0     # x_solve.c:263:34
	mulpd	%xmm14, %xmm2
	.loc	12 264 20 is_stmt 1     # x_solve.c:264:20
	movupd	njac-72(%rcx), %xmm3
	.loc	12 264 18 is_stmt 0     # x_solve.c:264:18
	mulpd	%xmm15, %xmm3
	.loc	12 264 11               # x_solve.c:264:11
	subpd	%xmm3, %xmm2
	.loc	12 263 26 is_stmt 1     # x_solve.c:263:26
	movupd	%xmm2, lhs-656(%rcx,%rcx,2)
	.loc	12 265 36               # x_solve.c:265:36
	movupd	fjac-32(%rcx), %xmm2
	.loc	12 265 34 is_stmt 0     # x_solve.c:265:34
	mulpd	%xmm14, %xmm2
	.loc	12 266 20 is_stmt 1     # x_solve.c:266:20
	movupd	njac-32(%rcx), %xmm3
	.loc	12 266 18 is_stmt 0     # x_solve.c:266:18
	mulpd	%xmm15, %xmm3
	.loc	12 266 11               # x_solve.c:266:11
	subpd	%xmm3, %xmm2
	.loc	12 265 26 is_stmt 1     # x_solve.c:265:26
	movupd	%xmm2, lhs-616(%rcx,%rcx,2)
	movsd	fjac-176(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 280 34               # x_solve.c:280:34
	mulsd	%xmm0, %xmm2
	movsd	njac-176(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 281 18               # x_solve.c:281:18
	mulsd	%xmm6, %xmm3
	.loc	12 281 11 is_stmt 0     # x_solve.c:281:11
	subsd	%xmm3, %xmm2
	.loc	12 280 26 is_stmt 1     # x_solve.c:280:26
	movsd	%xmm2, lhs-760(%rcx,%rcx,2)
	movsd	fjac-136(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 282 34               # x_solve.c:282:34
	mulsd	%xmm0, %xmm2
	movsd	njac-136(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 283 18               # x_solve.c:283:18
	mulsd	%xmm6, %xmm3
	.loc	12 283 11 is_stmt 0     # x_solve.c:283:11
	subsd	%xmm3, %xmm2
	.loc	12 282 26 is_stmt 1     # x_solve.c:282:26
	movsd	%xmm2, lhs-720(%rcx,%rcx,2)
	movsd	fjac-96(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	12 284 34               # x_solve.c:284:34
	mulsd	%xmm0, %xmm2
	movsd	njac-96(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	12 285 18               # x_solve.c:285:18
	mulsd	%xmm6, %xmm3
	.loc	12 285 11 is_stmt 0     # x_solve.c:285:11
	subsd	%xmm3, %xmm2
	movapd	96(%rsp), %xmm1         # 16-byte Reload
	.loc	12 286 11 is_stmt 1     # x_solve.c:286:11
	subsd	%xmm1, %xmm2
	movapd	%xmm1, %xmm9
	.loc	12 284 26               # x_solve.c:284:26
	movsd	%xmm2, lhs-680(%rcx,%rcx,2)
	movsd	fjac-56(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	12 287 34               # x_solve.c:287:34
	mulsd	%xmm0, %xmm2
	movsd	njac-56(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	12 288 18               # x_solve.c:288:18
	mulsd	%xmm6, %xmm3
	.loc	12 288 11 is_stmt 0     # x_solve.c:288:11
	subsd	%xmm3, %xmm2
	.loc	12 287 26 is_stmt 1     # x_solve.c:287:26
	movsd	%xmm2, lhs-640(%rcx,%rcx,2)
	movsd	fjac-48(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	12 298 34               # x_solve.c:298:34
	mulsd	%xmm0, %xmm2
	movsd	njac-48(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	12 299 18               # x_solve.c:299:18
	mulsd	%xmm6, %xmm3
	.loc	12 299 11 is_stmt 0     # x_solve.c:299:11
	subsd	%xmm3, %xmm2
	.loc	12 289 36 is_stmt 1     # x_solve.c:289:36
	movupd	fjac-16(%rcx), %xmm3
	.loc	12 289 34 is_stmt 0     # x_solve.c:289:34
	mulpd	%xmm14, %xmm3
	.loc	12 290 20 is_stmt 1     # x_solve.c:290:20
	movupd	njac-16(%rcx), %xmm5
	.loc	12 290 18 is_stmt 0     # x_solve.c:290:18
	mulpd	%xmm15, %xmm5
	.loc	12 290 11               # x_solve.c:290:11
	subpd	%xmm5, %xmm3
	.loc	12 289 26 is_stmt 1     # x_solve.c:289:26
	movupd	%xmm3, lhs-600(%rcx,%rcx,2)
	.loc	12 292 36               # x_solve.c:292:36
	movupd	fjac-168(%rcx), %xmm3
	.loc	12 292 34 is_stmt 0     # x_solve.c:292:34
	mulpd	%xmm14, %xmm3
	.loc	12 293 20 is_stmt 1     # x_solve.c:293:20
	movupd	njac-168(%rcx), %xmm5
	.loc	12 293 18 is_stmt 0     # x_solve.c:293:18
	mulpd	%xmm15, %xmm5
	.loc	12 293 11               # x_solve.c:293:11
	subpd	%xmm5, %xmm3
	.loc	12 292 26 is_stmt 1     # x_solve.c:292:26
	movupd	%xmm3, lhs-752(%rcx,%rcx,2)
	.loc	12 294 36               # x_solve.c:294:36
	movupd	fjac-128(%rcx), %xmm3
	.loc	12 294 34 is_stmt 0     # x_solve.c:294:34
	mulpd	%xmm14, %xmm3
	.loc	12 295 20 is_stmt 1     # x_solve.c:295:20
	movupd	njac-128(%rcx), %xmm5
	.loc	12 295 18 is_stmt 0     # x_solve.c:295:18
	mulpd	%xmm15, %xmm5
	.loc	12 295 11               # x_solve.c:295:11
	subpd	%xmm5, %xmm3
	.loc	12 294 26 is_stmt 1     # x_solve.c:294:26
	movupd	%xmm3, lhs-712(%rcx,%rcx,2)
	.loc	12 296 36               # x_solve.c:296:36
	movupd	fjac-88(%rcx), %xmm3
	.loc	12 296 34 is_stmt 0     # x_solve.c:296:34
	mulpd	%xmm14, %xmm3
	.loc	12 297 20 is_stmt 1     # x_solve.c:297:20
	movupd	njac-88(%rcx), %xmm5
	.loc	12 297 18 is_stmt 0     # x_solve.c:297:18
	mulpd	%xmm15, %xmm5
	.loc	12 297 11               # x_solve.c:297:11
	subpd	%xmm5, %xmm3
	.loc	12 296 26 is_stmt 1     # x_solve.c:296:26
	movupd	%xmm3, lhs-672(%rcx,%rcx,2)
	movsd	fjac-40(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	12 310 34               # x_solve.c:310:34
	mulsd	%xmm0, %xmm3
	movsd	njac-40(%rcx), %xmm5    # xmm5 = mem[0],zero
	.loc	12 311 18               # x_solve.c:311:18
	mulsd	%xmm6, %xmm5
	.loc	12 300 11               # x_solve.c:300:11
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	movapd	%xmm11, %xmm3
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	subpd	%xmm3, %xmm2
	.loc	12 298 26               # x_solve.c:298:26
	movupd	%xmm2, lhs-632(%rcx,%rcx,2)
	movsd	fjac(%rcx), %xmm2       # xmm2 = mem[0],zero
	.loc	12 312 34               # x_solve.c:312:34
	mulsd	%xmm0, %xmm2
	movsd	njac(%rcx), %xmm3       # xmm3 = mem[0],zero
	.loc	12 313 18               # x_solve.c:313:18
	mulsd	%xmm6, %xmm3
	.loc	12 313 11 is_stmt 0     # x_solve.c:313:11
	subsd	%xmm3, %xmm2
	.loc	12 314 11 is_stmt 1     # x_solve.c:314:11
	subsd	%xmm4, %xmm2
	.loc	12 312 26               # x_solve.c:312:26
	movsd	%xmm2, lhs-584(%rcx,%rcx,2)
.Ltmp694:
	.loc	12 152 7 discriminator 1 # x_solve.c:152:7
	addq	$200, %rcx
	decl	%eax
	jne	.LBB7_12
# BB#13:                                # %for.end1828
                                        #   in Loop: Header=BB7_5 Depth=2
.Ltmp695:
	.loc	12 313 13               # x_solve.c:313:13
	movsd	%xmm6, tmp1(%rip)
	.loc	12 312 29               # x_solve.c:312:29
	movsd	%xmm0, tmp2(%rip)
.Ltmp696:
	.loc	12 338 41               # x_solve.c:338:41
	imulq	$2600, %rbp, %rax       # imm = 0xA28
	movq	%rbp, 16(%rsp)          # 8-byte Spill
	imulq	$169000, %r12, %rcx     # imm = 0x29428
	movq	%r12, %r13
	leaq	rhs(%rcx,%rax), %rdx
	.loc	12 338 7 is_stmt 0      # x_solve.c:338:7
	movl	$lhs+200, %edi
	movl	$lhs+400, %esi
	callq	binvcrhs
	testl	%r15d, %r15d
	#DEBUG_VALUE: x_solve:i <- 1
	movl	%r15d, %r12d
	movl	$lhs+1000, %ebx
	movq	%r14, %rbp
	movq	%rbp, 72(%rsp)          # 8-byte Spill
	jle	.LBB7_15
	.p2align	4, 0x90
.LBB7_14:                               # %for.body1837
                                        #   Parent Loop BB7_4 Depth=1
                                        #     Parent Loop BB7_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp697:
	.loc	12 348 9 is_stmt 1      # x_solve.c:348:9
	leaq	-400(%rbx), %r14
	leaq	-40(%rbp), %rsi
	movq	%r14, %rdi
	movq	%rbp, %rdx
	callq	matvec_sub
	.loc	12 353 9                # x_solve.c:353:9
	leaq	-200(%rbx), %r15
	leaq	-600(%rbx), %rsi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	matmul_sub
	.loc	12 360 9                # x_solve.c:360:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	callq	binvcrhs
.Ltmp698:
	.loc	12 344 7 discriminator 1 # x_solve.c:344:7
	addq	$40, %rbp
	addq	$600, %rbx              # imm = 0x258
	decl	%r12d
	jne	.LBB7_14
	jmp	.LBB7_15
.Ltmp699:
	.p2align	4, 0x90
.LBB7_10:                               # %for.end1828.thread
                                        #   in Loop: Header=BB7_5 Depth=2
	movq	%rbx, 64(%rsp)          # 8-byte Spill
	movq	%r14, 72(%rsp)          # 8-byte Spill
	movq	%r13, 80(%rsp)          # 8-byte Spill
	.loc	12 338 41               # x_solve.c:338:41
	imulq	$2600, %rbp, %rax       # imm = 0xA28
	movq	%rbp, 16(%rsp)          # 8-byte Spill
	imulq	$169000, %r12, %rcx     # imm = 0x29428
	movq	%r12, %r13
	leaq	rhs(%rcx,%rax), %rdx
	.loc	12 338 7 is_stmt 0      # x_solve.c:338:7
	movl	$lhs+200, %edi
	movl	$lhs+400, %esi
	callq	binvcrhs
	#DEBUG_VALUE: x_solve:i <- 1
.LBB7_15:                               # %for.end1887
                                        #   in Loop: Header=BB7_5 Depth=2
	.loc	12 366 34 is_stmt 1     # x_solve.c:366:34
	imulq	$2600, 16(%rsp), %rax   # 8-byte Folded Reload
                                        # imm = 0xA28
	movq	%r13, %r12
	imulq	$169000, %r12, %r14     # imm = 0x29428
	addq	%rax, %r14
	movq	224(%rsp), %rax         # 8-byte Reload
	leaq	rhs(%r14,%rax,8), %rsi
	.loc	12 366 54 is_stmt 0     # x_solve.c:366:54
	movq	256(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%rax,4), %rax
	leaq	rhs(%r14,%rax,8), %rbx
	movq	248(%rsp), %rbp         # 8-byte Reload
	.loc	12 366 7                # x_solve.c:366:7
	movq	%rbp, %rdi
	movq	%rbx, %rdx
	callq	matvec_sub
	.loc	12 371 7 is_stmt 1      # x_solve.c:371:7
	movq	%rbp, %rdi
	movq	232(%rsp), %rsi         # 8-byte Reload
	movq	240(%rsp), %rbp         # 8-byte Reload
	movq	%rbp, %rdx
	callq	matmul_sub
	.loc	12 376 7                # x_solve.c:376:7
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	binvrhs
	movq	208(%rsp), %r15         # 8-byte Reload
.Ltmp700:
	.loc	12 384 7 discriminator 1 # x_solve.c:384:7
	testl	%r15d, %r15d
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	80(%rsp), %r13          # 8-byte Reload
	movq	%r13, %r9
	movq	%r15, %r10
	js	.LBB7_19
	.p2align	4, 0x90
.LBB7_16:                               # %for.cond1935.preheader
                                        #   Parent Loop BB7_4 Depth=1
                                        #     Parent Loop BB7_5 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB7_17 Depth 4
.Ltmp701:
	.loc	12 388 45               # x_solve.c:388:45
	leaq	(%r10,%r10,4), %rax
	.loc	12 388 34 is_stmt 0     # x_solve.c:388:34
	leaq	rhs+40(%r14,%rax,8), %r11
	leaq	rhs+48(%r14,%rax,8), %rdi
	leaq	rhs+56(%r14,%rax,8), %rbx
	leaq	rhs+64(%r14,%rax,8), %rbp
	leaq	rhs+72(%r14,%rax,8), %rax
	movl	$5, %ecx
	movq	%r8, %rdx
	movq	%r9, %rsi
	.p2align	4, 0x90
.LBB7_17:                               # %for.cond1938.preheader
                                        #   Parent Loop BB7_4 Depth=1
                                        #     Parent Loop BB7_5 Depth=2
                                        #       Parent Loop BB7_16 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	.loc	12 387 31 is_stmt 1     # x_solve.c:387:31
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	12 388 17               # x_solve.c:388:17
	movsd	-160(%rdx), %xmm1       # xmm1 = mem[0],zero
	.loc	12 388 33 is_stmt 0     # x_solve.c:388:33
	mulsd	(%r11), %xmm1
	.loc	12 388 15               # x_solve.c:388:15
	subsd	%xmm1, %xmm0
	.loc	12 387 29 is_stmt 1     # x_solve.c:387:29
	movsd	%xmm0, (%rsi)
	.loc	12 388 17               # x_solve.c:388:17
	movsd	-120(%rdx), %xmm1       # xmm1 = mem[0],zero
	.loc	12 388 33 is_stmt 0     # x_solve.c:388:33
	mulsd	(%rdi), %xmm1
	.loc	12 388 15               # x_solve.c:388:15
	subsd	%xmm1, %xmm0
	.loc	12 387 29 is_stmt 1     # x_solve.c:387:29
	movsd	%xmm0, (%rsi)
	.loc	12 388 17               # x_solve.c:388:17
	movsd	-80(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	12 388 33 is_stmt 0     # x_solve.c:388:33
	mulsd	(%rbx), %xmm1
	.loc	12 388 15               # x_solve.c:388:15
	subsd	%xmm1, %xmm0
	.loc	12 387 29 is_stmt 1     # x_solve.c:387:29
	movsd	%xmm0, (%rsi)
	.loc	12 388 17               # x_solve.c:388:17
	movsd	-40(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	12 388 33 is_stmt 0     # x_solve.c:388:33
	mulsd	(%rbp), %xmm1
	.loc	12 388 15               # x_solve.c:388:15
	subsd	%xmm1, %xmm0
	.loc	12 387 29 is_stmt 1     # x_solve.c:387:29
	movsd	%xmm0, (%rsi)
	.loc	12 388 17               # x_solve.c:388:17
	movsd	(%rdx), %xmm1           # xmm1 = mem[0],zero
	.loc	12 388 33 is_stmt 0     # x_solve.c:388:33
	mulsd	(%rax), %xmm1
	.loc	12 388 15               # x_solve.c:388:15
	subsd	%xmm1, %xmm0
	.loc	12 387 29 is_stmt 1     # x_solve.c:387:29
	movsd	%xmm0, (%rsi)
.Ltmp702:
	.loc	12 385 9 discriminator 1 # x_solve.c:385:9
	addq	$8, %rsi
	addq	$8, %rdx
	decq	%rcx
	jne	.LBB7_17
.Ltmp703:
# BB#18:                                # %for.inc1981
                                        #   in Loop: Header=BB7_16 Depth=3
	.loc	12 384 7 discriminator 1 # x_solve.c:384:7
	addq	$-40, %r9
	addq	$-600, %r8              # imm = 0xFFFFFFFFFFFFFDA8
	.loc	12 384 27 is_stmt 0 discriminator 1 # x_solve.c:384:27
	testq	%r10, %r10
	.loc	12 384 7 discriminator 1 # x_solve.c:384:7
	leaq	-1(%r10), %r10
	jg	.LBB7_16
.Ltmp704:
.LBB7_19:                               # %for.inc1983
                                        #   in Loop: Header=BB7_5 Depth=2
	.loc	12 71 19 is_stmt 1 discriminator 1 # x_solve.c:71:19
	movslq	grid_points+4(%rip), %rax
	.loc	12 71 36 is_stmt 0 discriminator 1 # x_solve.c:71:36
	leaq	-2(%rax), %rcx
	movq	64(%rsp), %rbx          # 8-byte Reload
	.loc	12 71 5 discriminator 1 # x_solve.c:71:5
	addq	$520, %rbx              # imm = 0x208
	movq	72(%rsp), %r14          # 8-byte Reload
	addq	$2600, %r14             # imm = 0xA28
	addq	$2600, %r13             # imm = 0xA28
	movq	16(%rsp), %rbp          # 8-byte Reload
	.loc	12 71 19 discriminator 1 # x_solve.c:71:19
	cmpq	%rcx, %rbp
	.loc	12 71 5 discriminator 1 # x_solve.c:71:5
	leaq	1(%rbp), %rbp
.Ltmp705:
	.loc	12 118 47 is_stmt 1     # x_solve.c:118:47
	movapd	.LCPI7_1(%rip), %xmm13  # xmm13 = [9223372036854775808,9223372036854775808]
	jl	.LBB7_5
.Ltmp706:
# BB#20:                                # %for.inc1986.loopexit
                                        #   in Loop: Header=BB7_4 Depth=1
	.loc	12 70 20 discriminator 1 # x_solve.c:70:20
	movl	grid_points+8(%rip), %ecx
.LBB7_21:                               # %for.inc1986
                                        #   in Loop: Header=BB7_4 Depth=1
	.loc	12 70 34 is_stmt 0 discriminator 1 # x_solve.c:70:34
	leal	-2(%rcx), %edx
	.loc	12 70 17 discriminator 1 # x_solve.c:70:17
	movslq	%edx, %rdx
	movq	192(%rsp), %rdi         # 8-byte Reload
	.loc	12 70 3 discriminator 1 # x_solve.c:70:3
	addq	$33800, %rdi            # imm = 0x8408
	movq	184(%rsp), %rbp         # 8-byte Reload
	addq	$169000, %rbp           # imm = 0x29428
	movq	200(%rsp), %rsi         # 8-byte Reload
	addq	$169000, %rsi           # imm = 0x29428
	.loc	12 70 17 discriminator 1 # x_solve.c:70:17
	cmpq	%rdx, %r12
	.loc	12 70 3 discriminator 1 # x_solve.c:70:3
	leaq	1(%r12), %r12
	jl	.LBB7_4
.Ltmp707:
.LBB7_22:                               # %for.end1988
	.loc	12 394 7 is_stmt 1      # x_solve.c:394:7
	cmpl	$0, timeron(%rip)
	je	.LBB7_23
# BB#24:                                # %if.then1990
	.loc	12 394 16 is_stmt 0 discriminator 1 # x_solve.c:394:16
	movl	$6, %edi
	addq	$264, %rsp              # imm = 0x108
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	timer_stop              # TAILCALL
.Ltmp708:
.LBB7_23:                               # %if.end1991
	.loc	12 395 1 is_stmt 1      # x_solve.c:395:1
	addq	$264, %rsp              # imm = 0x108
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp709:
.Lfunc_end7:
	.size	x_solve, .Lfunc_end7-x_solve
	.cfi_endproc

	.globl	lhsinit
	.p2align	4, 0x90
	.type	lhsinit,@function
lhsinit:                                # @lhsinit
.Lfunc_begin8:
	.loc	7 199 0                 # initialize.c:199:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: lhsinit:lhs <- %RDI
	#DEBUG_VALUE: lhsinit:size <- %ESI
	#DEBUG_VALUE: lhsinit:i <- %ESI
	#DEBUG_VALUE: lhsinit:n <- 0
	#DEBUG_VALUE: lhsinit:m <- 0
	.loc	7 211 7 prologue_end    # initialize.c:211:7
	movslq	%esi, %rax
.Ltmp710:
	.loc	7 206 3 discriminator 1 # initialize.c:206:3
	leaq	432(%rdi), %rcx
	imulq	$600, %rax, %rax        # imm = 0x258
	leaq	432(%rdi,%rax), %rdx
	movq	$-200, %rsi
.Ltmp711:
	.p2align	4, 0x90
.LBB8_1:                                # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	.loc	7 208 23                # initialize.c:208:23
	movq	$0, -232(%rcx,%rsi)
	.loc	7 209 23                # initialize.c:209:23
	movq	$0, -32(%rcx,%rsi)
	.loc	7 210 23                # initialize.c:210:23
	movq	$0, 168(%rcx,%rsi)
	.loc	7 211 23                # initialize.c:211:23
	movq	$0, -232(%rdx,%rsi)
	.loc	7 212 23                # initialize.c:212:23
	movq	$0, -32(%rdx,%rsi)
	.loc	7 213 23                # initialize.c:213:23
	movq	$0, 168(%rdx,%rsi)
	.loc	7 208 23                # initialize.c:208:23
	movq	$0, -224(%rcx,%rsi)
	.loc	7 209 23                # initialize.c:209:23
	movq	$0, -24(%rcx,%rsi)
	.loc	7 210 23                # initialize.c:210:23
	movq	$0, 176(%rcx,%rsi)
	.loc	7 211 23                # initialize.c:211:23
	movq	$0, -224(%rdx,%rsi)
	.loc	7 212 23                # initialize.c:212:23
	movq	$0, -24(%rdx,%rsi)
	.loc	7 213 23                # initialize.c:213:23
	movq	$0, 176(%rdx,%rsi)
	.loc	7 208 23                # initialize.c:208:23
	movq	$0, -216(%rcx,%rsi)
	.loc	7 209 23                # initialize.c:209:23
	movq	$0, -16(%rcx,%rsi)
	.loc	7 210 23                # initialize.c:210:23
	movq	$0, 184(%rcx,%rsi)
	.loc	7 211 23                # initialize.c:211:23
	movq	$0, -216(%rdx,%rsi)
	.loc	7 212 23                # initialize.c:212:23
	movq	$0, -16(%rdx,%rsi)
	.loc	7 213 23                # initialize.c:213:23
	movq	$0, 184(%rdx,%rsi)
	.loc	7 208 23                # initialize.c:208:23
	movq	$0, -208(%rcx,%rsi)
	.loc	7 209 23                # initialize.c:209:23
	movq	$0, -8(%rcx,%rsi)
	.loc	7 210 23                # initialize.c:210:23
	movq	$0, 192(%rcx,%rsi)
	.loc	7 211 23                # initialize.c:211:23
	movq	$0, -208(%rdx,%rsi)
	.loc	7 212 23                # initialize.c:212:23
	movq	$0, -8(%rdx,%rsi)
	.loc	7 213 23                # initialize.c:213:23
	movq	$0, 192(%rdx,%rsi)
	.loc	7 208 23                # initialize.c:208:23
	movq	$0, -200(%rcx,%rsi)
	.loc	7 209 23                # initialize.c:209:23
	movq	$0, (%rcx,%rsi)
	.loc	7 210 23                # initialize.c:210:23
	movq	$0, 200(%rcx,%rsi)
	.loc	7 211 23                # initialize.c:211:23
	movq	$0, -200(%rdx,%rsi)
	.loc	7 212 23                # initialize.c:212:23
	movq	$0, (%rdx,%rsi)
	.loc	7 213 23                # initialize.c:213:23
	movq	$0, 200(%rdx,%rsi)
.Ltmp712:
	#DEBUG_VALUE: lhsinit:m <- 0
	.loc	7 206 3 discriminator 1 # initialize.c:206:3
	addq	$40, %rsi
	jne	.LBB8_1
.Ltmp713:
# BB#2:                                 # %for.cond44.preheader
	.loc	7 221 21                # initialize.c:221:21
	movabsq	$4607182418800017408, %rcx # imm = 0x3FF0000000000000
	movq	%rcx, 200(%rdi)
	.loc	7 222 21                # initialize.c:222:21
	movq	%rcx, 200(%rdi,%rax)
	.loc	7 221 21                # initialize.c:221:21
	movq	%rcx, 248(%rdi)
	.loc	7 222 21                # initialize.c:222:21
	movq	%rcx, 248(%rdi,%rax)
	.loc	7 221 21                # initialize.c:221:21
	movq	%rcx, 296(%rdi)
	.loc	7 222 21                # initialize.c:222:21
	movq	%rcx, 296(%rdi,%rax)
	.loc	7 221 21                # initialize.c:221:21
	movq	%rcx, 344(%rdi)
	.loc	7 222 21                # initialize.c:222:21
	movq	%rcx, 344(%rdi,%rax)
	.loc	7 221 21                # initialize.c:221:21
	movq	%rcx, 392(%rdi)
	.loc	7 222 21                # initialize.c:222:21
	movq	%rcx, 392(%rdi,%rax)
.Ltmp714:
	.loc	7 224 1                 # initialize.c:224:1
	retq
.Ltmp715:
.Lfunc_end8:
	.size	lhsinit, .Lfunc_end8-lhsinit
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI9_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	binvcrhs
	.p2align	4, 0x90
	.type	binvcrhs,@function
binvcrhs:                               # @binvcrhs
.Lfunc_begin9:
	.file	13 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/solve_subs.c"
	.loc	13 205 0                # solve_subs.c:205:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: binvcrhs:lhs <- %RDI
	#DEBUG_VALUE: binvcrhs:c <- %RSI
	#DEBUG_VALUE: binvcrhs:r <- %RDX
	.loc	13 208 15 prologue_end  # solve_subs.c:208:15
	movsd	.LCPI9_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm1
	divsd	(%rdi), %xmm1
.Ltmp716:
	#DEBUG_VALUE: binvcrhs:pivot <- %XMM1
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 209 24               # solve_subs.c:209:24
	mulsd	%xmm1, %xmm2
	.loc	13 209 13 is_stmt 0     # solve_subs.c:209:13
	movsd	%xmm2, 40(%rdi)
	movsd	80(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 210 24 is_stmt 1     # solve_subs.c:210:24
	mulsd	%xmm1, %xmm2
	.loc	13 210 13 is_stmt 0     # solve_subs.c:210:13
	movsd	%xmm2, 80(%rdi)
	movsd	120(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 211 24 is_stmt 1     # solve_subs.c:211:24
	mulsd	%xmm1, %xmm2
	.loc	13 211 13 is_stmt 0     # solve_subs.c:211:13
	movsd	%xmm2, 120(%rdi)
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 212 24 is_stmt 1     # solve_subs.c:212:24
	mulsd	%xmm1, %xmm2
	.loc	13 212 13 is_stmt 0     # solve_subs.c:212:13
	movsd	%xmm2, 160(%rdi)
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	.loc	13 213 20 is_stmt 1     # solve_subs.c:213:20
	mulsd	%xmm1, %xmm2
	.loc	13 213 11 is_stmt 0     # solve_subs.c:213:11
	movsd	%xmm2, (%rsi)
	movsd	40(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 214 20 is_stmt 1     # solve_subs.c:214:20
	mulsd	%xmm1, %xmm2
	.loc	13 214 11 is_stmt 0     # solve_subs.c:214:11
	movsd	%xmm2, 40(%rsi)
	movsd	80(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 215 20 is_stmt 1     # solve_subs.c:215:20
	mulsd	%xmm1, %xmm2
	.loc	13 215 11 is_stmt 0     # solve_subs.c:215:11
	movsd	%xmm2, 80(%rsi)
	movsd	120(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 216 20 is_stmt 1     # solve_subs.c:216:20
	mulsd	%xmm1, %xmm2
	.loc	13 216 11 is_stmt 0     # solve_subs.c:216:11
	movsd	%xmm2, 120(%rsi)
	movsd	160(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 217 20 is_stmt 1     # solve_subs.c:217:20
	mulsd	%xmm1, %xmm2
	.loc	13 217 11 is_stmt 0     # solve_subs.c:217:11
	movsd	%xmm2, 160(%rsi)
	.loc	13 218 18 is_stmt 1     # solve_subs.c:218:18
	mulsd	(%rdx), %xmm1
.Ltmp717:
	.loc	13 218 10 is_stmt 0     # solve_subs.c:218:10
	movsd	%xmm1, (%rdx)
	.loc	13 220 11 is_stmt 1     # solve_subs.c:220:11
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
.Ltmp718:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 221 14               # solve_subs.c:221:14
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 221 31 is_stmt 0     # solve_subs.c:221:31
	mulsd	%xmm1, %xmm3
	.loc	13 221 24               # solve_subs.c:221:24
	subsd	%xmm3, %xmm2
	.loc	13 221 12               # solve_subs.c:221:12
	movsd	%xmm2, 48(%rdi)
	.loc	13 222 14 is_stmt 1     # solve_subs.c:222:14
	movsd	88(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 222 31 is_stmt 0     # solve_subs.c:222:31
	mulsd	%xmm1, %xmm3
	.loc	13 222 24               # solve_subs.c:222:24
	subsd	%xmm3, %xmm2
	.loc	13 222 12               # solve_subs.c:222:12
	movsd	%xmm2, 88(%rdi)
	.loc	13 223 14 is_stmt 1     # solve_subs.c:223:14
	movsd	128(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 223 31 is_stmt 0     # solve_subs.c:223:31
	mulsd	%xmm1, %xmm3
	.loc	13 223 24               # solve_subs.c:223:24
	subsd	%xmm3, %xmm2
	.loc	13 223 12               # solve_subs.c:223:12
	movsd	%xmm2, 128(%rdi)
	.loc	13 224 14 is_stmt 1     # solve_subs.c:224:14
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 224 31 is_stmt 0     # solve_subs.c:224:31
	mulsd	%xmm1, %xmm3
	.loc	13 224 24               # solve_subs.c:224:24
	subsd	%xmm3, %xmm2
	.loc	13 224 12               # solve_subs.c:224:12
	movsd	%xmm2, 168(%rdi)
	.loc	13 225 13 is_stmt 1     # solve_subs.c:225:13
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	13 225 28 is_stmt 0     # solve_subs.c:225:28
	mulsd	%xmm1, %xmm3
	.loc	13 225 21               # solve_subs.c:225:21
	subsd	%xmm3, %xmm2
	.loc	13 225 11               # solve_subs.c:225:11
	movsd	%xmm2, 8(%rsi)
	.loc	13 226 13 is_stmt 1     # solve_subs.c:226:13
	movsd	48(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 226 28 is_stmt 0     # solve_subs.c:226:28
	mulsd	%xmm1, %xmm3
	.loc	13 226 21               # solve_subs.c:226:21
	subsd	%xmm3, %xmm2
	.loc	13 226 11               # solve_subs.c:226:11
	movsd	%xmm2, 48(%rsi)
	.loc	13 227 13 is_stmt 1     # solve_subs.c:227:13
	movsd	88(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	80(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 227 28 is_stmt 0     # solve_subs.c:227:28
	mulsd	%xmm1, %xmm3
	.loc	13 227 21               # solve_subs.c:227:21
	subsd	%xmm3, %xmm2
	.loc	13 227 11               # solve_subs.c:227:11
	movsd	%xmm2, 88(%rsi)
	.loc	13 228 13 is_stmt 1     # solve_subs.c:228:13
	movsd	128(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 228 28 is_stmt 0     # solve_subs.c:228:28
	mulsd	%xmm1, %xmm3
	.loc	13 228 21               # solve_subs.c:228:21
	subsd	%xmm3, %xmm2
	.loc	13 228 11               # solve_subs.c:228:11
	movsd	%xmm2, 128(%rsi)
	.loc	13 229 13 is_stmt 1     # solve_subs.c:229:13
	movsd	168(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 229 28 is_stmt 0     # solve_subs.c:229:28
	mulsd	%xmm1, %xmm3
	.loc	13 229 21               # solve_subs.c:229:21
	subsd	%xmm3, %xmm2
	.loc	13 229 11               # solve_subs.c:229:11
	movsd	%xmm2, 168(%rsi)
	.loc	13 230 12 is_stmt 1     # solve_subs.c:230:12
	movsd	8(%rdx), %xmm2          # xmm2 = mem[0],zero
	.loc	13 230 26 is_stmt 0     # solve_subs.c:230:26
	mulsd	(%rdx), %xmm1
.Ltmp719:
	.loc	13 230 19               # solve_subs.c:230:19
	subsd	%xmm1, %xmm2
	.loc	13 230 10               # solve_subs.c:230:10
	movsd	%xmm2, 8(%rdx)
	.loc	13 232 11 is_stmt 1     # solve_subs.c:232:11
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp720:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 233 14               # solve_subs.c:233:14
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 233 31 is_stmt 0     # solve_subs.c:233:31
	mulsd	%xmm1, %xmm3
	.loc	13 233 24               # solve_subs.c:233:24
	subsd	%xmm3, %xmm2
	.loc	13 233 12               # solve_subs.c:233:12
	movsd	%xmm2, 56(%rdi)
	.loc	13 234 14 is_stmt 1     # solve_subs.c:234:14
	movsd	96(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 234 31 is_stmt 0     # solve_subs.c:234:31
	mulsd	%xmm1, %xmm3
	.loc	13 234 24               # solve_subs.c:234:24
	subsd	%xmm3, %xmm2
	.loc	13 234 12               # solve_subs.c:234:12
	movsd	%xmm2, 96(%rdi)
	.loc	13 235 14 is_stmt 1     # solve_subs.c:235:14
	movsd	136(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 235 31 is_stmt 0     # solve_subs.c:235:31
	mulsd	%xmm1, %xmm3
	.loc	13 235 24               # solve_subs.c:235:24
	subsd	%xmm3, %xmm2
	.loc	13 235 12               # solve_subs.c:235:12
	movsd	%xmm2, 136(%rdi)
	.loc	13 236 14 is_stmt 1     # solve_subs.c:236:14
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 236 31 is_stmt 0     # solve_subs.c:236:31
	mulsd	%xmm1, %xmm3
	.loc	13 236 24               # solve_subs.c:236:24
	subsd	%xmm3, %xmm2
	.loc	13 236 12               # solve_subs.c:236:12
	movsd	%xmm2, 176(%rdi)
	.loc	13 237 13 is_stmt 1     # solve_subs.c:237:13
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	13 237 28 is_stmt 0     # solve_subs.c:237:28
	mulsd	%xmm1, %xmm3
	.loc	13 237 21               # solve_subs.c:237:21
	subsd	%xmm3, %xmm2
	.loc	13 237 11               # solve_subs.c:237:11
	movsd	%xmm2, 16(%rsi)
	.loc	13 238 13 is_stmt 1     # solve_subs.c:238:13
	movsd	56(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 238 28 is_stmt 0     # solve_subs.c:238:28
	mulsd	%xmm1, %xmm3
	.loc	13 238 21               # solve_subs.c:238:21
	subsd	%xmm3, %xmm2
	.loc	13 238 11               # solve_subs.c:238:11
	movsd	%xmm2, 56(%rsi)
	.loc	13 239 13 is_stmt 1     # solve_subs.c:239:13
	movsd	96(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	80(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 239 28 is_stmt 0     # solve_subs.c:239:28
	mulsd	%xmm1, %xmm3
	.loc	13 239 21               # solve_subs.c:239:21
	subsd	%xmm3, %xmm2
	.loc	13 239 11               # solve_subs.c:239:11
	movsd	%xmm2, 96(%rsi)
	.loc	13 240 13 is_stmt 1     # solve_subs.c:240:13
	movsd	136(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 240 28 is_stmt 0     # solve_subs.c:240:28
	mulsd	%xmm1, %xmm3
	.loc	13 240 21               # solve_subs.c:240:21
	subsd	%xmm3, %xmm2
	.loc	13 240 11               # solve_subs.c:240:11
	movsd	%xmm2, 136(%rsi)
	.loc	13 241 13 is_stmt 1     # solve_subs.c:241:13
	movsd	176(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 241 28 is_stmt 0     # solve_subs.c:241:28
	mulsd	%xmm1, %xmm3
	.loc	13 241 21               # solve_subs.c:241:21
	subsd	%xmm3, %xmm2
	.loc	13 241 11               # solve_subs.c:241:11
	movsd	%xmm2, 176(%rsi)
	.loc	13 242 12 is_stmt 1     # solve_subs.c:242:12
	movsd	16(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 242 26 is_stmt 0     # solve_subs.c:242:26
	mulsd	(%rdx), %xmm1
.Ltmp721:
	.loc	13 242 19               # solve_subs.c:242:19
	subsd	%xmm1, %xmm2
	.loc	13 242 10               # solve_subs.c:242:10
	movsd	%xmm2, 16(%rdx)
	.loc	13 244 11 is_stmt 1     # solve_subs.c:244:11
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp722:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 245 14               # solve_subs.c:245:14
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 245 31 is_stmt 0     # solve_subs.c:245:31
	mulsd	%xmm1, %xmm3
	.loc	13 245 24               # solve_subs.c:245:24
	subsd	%xmm3, %xmm2
	.loc	13 245 12               # solve_subs.c:245:12
	movsd	%xmm2, 64(%rdi)
	.loc	13 246 14 is_stmt 1     # solve_subs.c:246:14
	movsd	104(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 246 31 is_stmt 0     # solve_subs.c:246:31
	mulsd	%xmm1, %xmm3
	.loc	13 246 24               # solve_subs.c:246:24
	subsd	%xmm3, %xmm2
	.loc	13 246 12               # solve_subs.c:246:12
	movsd	%xmm2, 104(%rdi)
	.loc	13 247 14 is_stmt 1     # solve_subs.c:247:14
	movsd	144(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 247 31 is_stmt 0     # solve_subs.c:247:31
	mulsd	%xmm1, %xmm3
	.loc	13 247 24               # solve_subs.c:247:24
	subsd	%xmm3, %xmm2
	.loc	13 247 12               # solve_subs.c:247:12
	movsd	%xmm2, 144(%rdi)
	.loc	13 248 14 is_stmt 1     # solve_subs.c:248:14
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 248 31 is_stmt 0     # solve_subs.c:248:31
	mulsd	%xmm1, %xmm3
	.loc	13 248 24               # solve_subs.c:248:24
	subsd	%xmm3, %xmm2
	.loc	13 248 12               # solve_subs.c:248:12
	movsd	%xmm2, 184(%rdi)
	.loc	13 249 13 is_stmt 1     # solve_subs.c:249:13
	movsd	24(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	13 249 28 is_stmt 0     # solve_subs.c:249:28
	mulsd	%xmm1, %xmm3
	.loc	13 249 21               # solve_subs.c:249:21
	subsd	%xmm3, %xmm2
	.loc	13 249 11               # solve_subs.c:249:11
	movsd	%xmm2, 24(%rsi)
	.loc	13 250 13 is_stmt 1     # solve_subs.c:250:13
	movsd	64(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 250 28 is_stmt 0     # solve_subs.c:250:28
	mulsd	%xmm1, %xmm3
	.loc	13 250 21               # solve_subs.c:250:21
	subsd	%xmm3, %xmm2
	.loc	13 250 11               # solve_subs.c:250:11
	movsd	%xmm2, 64(%rsi)
	.loc	13 251 13 is_stmt 1     # solve_subs.c:251:13
	movsd	104(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	80(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 251 28 is_stmt 0     # solve_subs.c:251:28
	mulsd	%xmm1, %xmm3
	.loc	13 251 21               # solve_subs.c:251:21
	subsd	%xmm3, %xmm2
	.loc	13 251 11               # solve_subs.c:251:11
	movsd	%xmm2, 104(%rsi)
	.loc	13 252 13 is_stmt 1     # solve_subs.c:252:13
	movsd	144(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 252 28 is_stmt 0     # solve_subs.c:252:28
	mulsd	%xmm1, %xmm3
	.loc	13 252 21               # solve_subs.c:252:21
	subsd	%xmm3, %xmm2
	.loc	13 252 11               # solve_subs.c:252:11
	movsd	%xmm2, 144(%rsi)
	.loc	13 253 13 is_stmt 1     # solve_subs.c:253:13
	movsd	184(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 253 28 is_stmt 0     # solve_subs.c:253:28
	mulsd	%xmm1, %xmm3
	.loc	13 253 21               # solve_subs.c:253:21
	subsd	%xmm3, %xmm2
	.loc	13 253 11               # solve_subs.c:253:11
	movsd	%xmm2, 184(%rsi)
	.loc	13 254 12 is_stmt 1     # solve_subs.c:254:12
	movsd	24(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 254 26 is_stmt 0     # solve_subs.c:254:26
	mulsd	(%rdx), %xmm1
.Ltmp723:
	.loc	13 254 19               # solve_subs.c:254:19
	subsd	%xmm1, %xmm2
	.loc	13 254 10               # solve_subs.c:254:10
	movsd	%xmm2, 24(%rdx)
	.loc	13 256 11 is_stmt 1     # solve_subs.c:256:11
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp724:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 257 14               # solve_subs.c:257:14
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 257 31 is_stmt 0     # solve_subs.c:257:31
	mulsd	%xmm1, %xmm3
	.loc	13 257 24               # solve_subs.c:257:24
	subsd	%xmm3, %xmm2
	.loc	13 257 12               # solve_subs.c:257:12
	movsd	%xmm2, 72(%rdi)
	.loc	13 258 14 is_stmt 1     # solve_subs.c:258:14
	movsd	112(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 258 31 is_stmt 0     # solve_subs.c:258:31
	mulsd	%xmm1, %xmm3
	.loc	13 258 24               # solve_subs.c:258:24
	subsd	%xmm3, %xmm2
	.loc	13 258 12               # solve_subs.c:258:12
	movsd	%xmm2, 112(%rdi)
	.loc	13 259 14 is_stmt 1     # solve_subs.c:259:14
	movsd	152(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 259 31 is_stmt 0     # solve_subs.c:259:31
	mulsd	%xmm1, %xmm3
	.loc	13 259 24               # solve_subs.c:259:24
	subsd	%xmm3, %xmm2
	.loc	13 259 12               # solve_subs.c:259:12
	movsd	%xmm2, 152(%rdi)
	.loc	13 260 14 is_stmt 1     # solve_subs.c:260:14
	movsd	192(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 260 31 is_stmt 0     # solve_subs.c:260:31
	mulsd	%xmm1, %xmm3
	.loc	13 260 24               # solve_subs.c:260:24
	subsd	%xmm3, %xmm2
	.loc	13 260 12               # solve_subs.c:260:12
	movsd	%xmm2, 192(%rdi)
	.loc	13 261 13 is_stmt 1     # solve_subs.c:261:13
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	13 261 28 is_stmt 0     # solve_subs.c:261:28
	mulsd	%xmm1, %xmm3
	.loc	13 261 21               # solve_subs.c:261:21
	subsd	%xmm3, %xmm2
	.loc	13 261 11               # solve_subs.c:261:11
	movsd	%xmm2, 32(%rsi)
	.loc	13 262 13 is_stmt 1     # solve_subs.c:262:13
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 262 28 is_stmt 0     # solve_subs.c:262:28
	mulsd	%xmm1, %xmm3
	.loc	13 262 21               # solve_subs.c:262:21
	subsd	%xmm3, %xmm2
	.loc	13 262 11               # solve_subs.c:262:11
	movsd	%xmm2, 72(%rsi)
	.loc	13 263 13 is_stmt 1     # solve_subs.c:263:13
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	80(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 263 28 is_stmt 0     # solve_subs.c:263:28
	mulsd	%xmm1, %xmm3
	.loc	13 263 21               # solve_subs.c:263:21
	subsd	%xmm3, %xmm2
	.loc	13 263 11               # solve_subs.c:263:11
	movsd	%xmm2, 112(%rsi)
	.loc	13 264 13 is_stmt 1     # solve_subs.c:264:13
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 264 28 is_stmt 0     # solve_subs.c:264:28
	mulsd	%xmm1, %xmm3
	.loc	13 264 21               # solve_subs.c:264:21
	subsd	%xmm3, %xmm2
	.loc	13 264 11               # solve_subs.c:264:11
	movsd	%xmm2, 152(%rsi)
	.loc	13 265 13 is_stmt 1     # solve_subs.c:265:13
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 265 28 is_stmt 0     # solve_subs.c:265:28
	mulsd	%xmm1, %xmm3
	.loc	13 265 21               # solve_subs.c:265:21
	subsd	%xmm3, %xmm2
	.loc	13 265 11               # solve_subs.c:265:11
	movsd	%xmm2, 192(%rsi)
	.loc	13 266 12 is_stmt 1     # solve_subs.c:266:12
	movsd	32(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 266 26 is_stmt 0     # solve_subs.c:266:26
	mulsd	(%rdx), %xmm1
.Ltmp725:
	.loc	13 266 19               # solve_subs.c:266:19
	subsd	%xmm1, %xmm2
	.loc	13 266 10               # solve_subs.c:266:10
	movsd	%xmm2, 32(%rdx)
	.loc	13 269 15 is_stmt 1     # solve_subs.c:269:15
	movapd	%xmm0, %xmm1
	divsd	48(%rdi), %xmm1
.Ltmp726:
	#DEBUG_VALUE: binvcrhs:pivot <- %XMM1
	movsd	88(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 270 24               # solve_subs.c:270:24
	mulsd	%xmm1, %xmm2
	.loc	13 270 13 is_stmt 0     # solve_subs.c:270:13
	movsd	%xmm2, 88(%rdi)
	movsd	128(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 271 24 is_stmt 1     # solve_subs.c:271:24
	mulsd	%xmm1, %xmm2
	.loc	13 271 13 is_stmt 0     # solve_subs.c:271:13
	movsd	%xmm2, 128(%rdi)
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 272 24 is_stmt 1     # solve_subs.c:272:24
	mulsd	%xmm1, %xmm2
	.loc	13 272 13 is_stmt 0     # solve_subs.c:272:13
	movsd	%xmm2, 168(%rdi)
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	.loc	13 273 20 is_stmt 1     # solve_subs.c:273:20
	mulsd	%xmm1, %xmm2
	.loc	13 273 11 is_stmt 0     # solve_subs.c:273:11
	movsd	%xmm2, 8(%rsi)
	movsd	48(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 274 20 is_stmt 1     # solve_subs.c:274:20
	mulsd	%xmm1, %xmm2
	.loc	13 274 11 is_stmt 0     # solve_subs.c:274:11
	movsd	%xmm2, 48(%rsi)
	movsd	88(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 275 20 is_stmt 1     # solve_subs.c:275:20
	mulsd	%xmm1, %xmm2
	.loc	13 275 11 is_stmt 0     # solve_subs.c:275:11
	movsd	%xmm2, 88(%rsi)
	movsd	128(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 276 20 is_stmt 1     # solve_subs.c:276:20
	mulsd	%xmm1, %xmm2
	.loc	13 276 11 is_stmt 0     # solve_subs.c:276:11
	movsd	%xmm2, 128(%rsi)
	movsd	168(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 277 20 is_stmt 1     # solve_subs.c:277:20
	mulsd	%xmm1, %xmm2
	.loc	13 277 11 is_stmt 0     # solve_subs.c:277:11
	movsd	%xmm2, 168(%rsi)
	.loc	13 278 18 is_stmt 1     # solve_subs.c:278:18
	mulsd	8(%rdx), %xmm1
.Ltmp727:
	.loc	13 278 10 is_stmt 0     # solve_subs.c:278:10
	movsd	%xmm1, 8(%rdx)
	.loc	13 280 11 is_stmt 1     # solve_subs.c:280:11
	movsd	40(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp728:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 281 14               # solve_subs.c:281:14
	movsd	80(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 281 31 is_stmt 0     # solve_subs.c:281:31
	mulsd	%xmm1, %xmm3
	.loc	13 281 24               # solve_subs.c:281:24
	subsd	%xmm3, %xmm2
	.loc	13 281 12               # solve_subs.c:281:12
	movsd	%xmm2, 80(%rdi)
	.loc	13 282 14 is_stmt 1     # solve_subs.c:282:14
	movsd	120(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 282 31 is_stmt 0     # solve_subs.c:282:31
	mulsd	%xmm1, %xmm3
	.loc	13 282 24               # solve_subs.c:282:24
	subsd	%xmm3, %xmm2
	.loc	13 282 12               # solve_subs.c:282:12
	movsd	%xmm2, 120(%rdi)
	.loc	13 283 14 is_stmt 1     # solve_subs.c:283:14
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 283 31 is_stmt 0     # solve_subs.c:283:31
	mulsd	%xmm1, %xmm3
	.loc	13 283 24               # solve_subs.c:283:24
	subsd	%xmm3, %xmm2
	.loc	13 283 12               # solve_subs.c:283:12
	movsd	%xmm2, 160(%rdi)
	.loc	13 284 13 is_stmt 1     # solve_subs.c:284:13
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	movsd	8(%rsi), %xmm3          # xmm3 = mem[0],zero
	.loc	13 284 28 is_stmt 0     # solve_subs.c:284:28
	mulsd	%xmm1, %xmm3
	.loc	13 284 21               # solve_subs.c:284:21
	subsd	%xmm3, %xmm2
	.loc	13 284 11               # solve_subs.c:284:11
	movsd	%xmm2, (%rsi)
	.loc	13 285 13 is_stmt 1     # solve_subs.c:285:13
	movsd	40(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	48(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 285 28 is_stmt 0     # solve_subs.c:285:28
	mulsd	%xmm1, %xmm3
	.loc	13 285 21               # solve_subs.c:285:21
	subsd	%xmm3, %xmm2
	.loc	13 285 11               # solve_subs.c:285:11
	movsd	%xmm2, 40(%rsi)
	.loc	13 286 13 is_stmt 1     # solve_subs.c:286:13
	movsd	80(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	88(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 286 28 is_stmt 0     # solve_subs.c:286:28
	mulsd	%xmm1, %xmm3
	.loc	13 286 21               # solve_subs.c:286:21
	subsd	%xmm3, %xmm2
	.loc	13 286 11               # solve_subs.c:286:11
	movsd	%xmm2, 80(%rsi)
	.loc	13 287 13 is_stmt 1     # solve_subs.c:287:13
	movsd	120(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 287 28 is_stmt 0     # solve_subs.c:287:28
	mulsd	%xmm1, %xmm3
	.loc	13 287 21               # solve_subs.c:287:21
	subsd	%xmm3, %xmm2
	.loc	13 287 11               # solve_subs.c:287:11
	movsd	%xmm2, 120(%rsi)
	.loc	13 288 13 is_stmt 1     # solve_subs.c:288:13
	movsd	160(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 288 28 is_stmt 0     # solve_subs.c:288:28
	mulsd	%xmm1, %xmm3
	.loc	13 288 21               # solve_subs.c:288:21
	subsd	%xmm3, %xmm2
	.loc	13 288 11               # solve_subs.c:288:11
	movsd	%xmm2, 160(%rsi)
	.loc	13 289 12 is_stmt 1     # solve_subs.c:289:12
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	13 289 26 is_stmt 0     # solve_subs.c:289:26
	mulsd	8(%rdx), %xmm1
.Ltmp729:
	.loc	13 289 19               # solve_subs.c:289:19
	subsd	%xmm1, %xmm2
	.loc	13 289 10               # solve_subs.c:289:10
	movsd	%xmm2, (%rdx)
	.loc	13 291 11 is_stmt 1     # solve_subs.c:291:11
	movsd	56(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp730:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 292 14               # solve_subs.c:292:14
	movsd	96(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 292 31 is_stmt 0     # solve_subs.c:292:31
	mulsd	%xmm1, %xmm3
	.loc	13 292 24               # solve_subs.c:292:24
	subsd	%xmm3, %xmm2
	.loc	13 292 12               # solve_subs.c:292:12
	movsd	%xmm2, 96(%rdi)
	.loc	13 293 14 is_stmt 1     # solve_subs.c:293:14
	movsd	136(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 293 31 is_stmt 0     # solve_subs.c:293:31
	mulsd	%xmm1, %xmm3
	.loc	13 293 24               # solve_subs.c:293:24
	subsd	%xmm3, %xmm2
	.loc	13 293 12               # solve_subs.c:293:12
	movsd	%xmm2, 136(%rdi)
	.loc	13 294 14 is_stmt 1     # solve_subs.c:294:14
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 294 31 is_stmt 0     # solve_subs.c:294:31
	mulsd	%xmm1, %xmm3
	.loc	13 294 24               # solve_subs.c:294:24
	subsd	%xmm3, %xmm2
	.loc	13 294 12               # solve_subs.c:294:12
	movsd	%xmm2, 176(%rdi)
	.loc	13 295 13 is_stmt 1     # solve_subs.c:295:13
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	8(%rsi), %xmm3          # xmm3 = mem[0],zero
	.loc	13 295 28 is_stmt 0     # solve_subs.c:295:28
	mulsd	%xmm1, %xmm3
	.loc	13 295 21               # solve_subs.c:295:21
	subsd	%xmm3, %xmm2
	.loc	13 295 11               # solve_subs.c:295:11
	movsd	%xmm2, 16(%rsi)
	.loc	13 296 13 is_stmt 1     # solve_subs.c:296:13
	movsd	56(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	48(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 296 28 is_stmt 0     # solve_subs.c:296:28
	mulsd	%xmm1, %xmm3
	.loc	13 296 21               # solve_subs.c:296:21
	subsd	%xmm3, %xmm2
	.loc	13 296 11               # solve_subs.c:296:11
	movsd	%xmm2, 56(%rsi)
	.loc	13 297 13 is_stmt 1     # solve_subs.c:297:13
	movsd	96(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	88(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 297 28 is_stmt 0     # solve_subs.c:297:28
	mulsd	%xmm1, %xmm3
	.loc	13 297 21               # solve_subs.c:297:21
	subsd	%xmm3, %xmm2
	.loc	13 297 11               # solve_subs.c:297:11
	movsd	%xmm2, 96(%rsi)
	.loc	13 298 13 is_stmt 1     # solve_subs.c:298:13
	movsd	136(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 298 28 is_stmt 0     # solve_subs.c:298:28
	mulsd	%xmm1, %xmm3
	.loc	13 298 21               # solve_subs.c:298:21
	subsd	%xmm3, %xmm2
	.loc	13 298 11               # solve_subs.c:298:11
	movsd	%xmm2, 136(%rsi)
	.loc	13 299 13 is_stmt 1     # solve_subs.c:299:13
	movsd	176(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 299 28 is_stmt 0     # solve_subs.c:299:28
	mulsd	%xmm1, %xmm3
	.loc	13 299 21               # solve_subs.c:299:21
	subsd	%xmm3, %xmm2
	.loc	13 299 11               # solve_subs.c:299:11
	movsd	%xmm2, 176(%rsi)
	.loc	13 300 12 is_stmt 1     # solve_subs.c:300:12
	movsd	16(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 300 26 is_stmt 0     # solve_subs.c:300:26
	mulsd	8(%rdx), %xmm1
.Ltmp731:
	.loc	13 300 19               # solve_subs.c:300:19
	subsd	%xmm1, %xmm2
	.loc	13 300 10               # solve_subs.c:300:10
	movsd	%xmm2, 16(%rdx)
	.loc	13 302 11 is_stmt 1     # solve_subs.c:302:11
	movsd	64(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp732:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 303 14               # solve_subs.c:303:14
	movsd	104(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 303 31 is_stmt 0     # solve_subs.c:303:31
	mulsd	%xmm1, %xmm3
	.loc	13 303 24               # solve_subs.c:303:24
	subsd	%xmm3, %xmm2
	.loc	13 303 12               # solve_subs.c:303:12
	movsd	%xmm2, 104(%rdi)
	.loc	13 304 14 is_stmt 1     # solve_subs.c:304:14
	movsd	144(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 304 31 is_stmt 0     # solve_subs.c:304:31
	mulsd	%xmm1, %xmm3
	.loc	13 304 24               # solve_subs.c:304:24
	subsd	%xmm3, %xmm2
	.loc	13 304 12               # solve_subs.c:304:12
	movsd	%xmm2, 144(%rdi)
	.loc	13 305 14 is_stmt 1     # solve_subs.c:305:14
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 305 31 is_stmt 0     # solve_subs.c:305:31
	mulsd	%xmm1, %xmm3
	.loc	13 305 24               # solve_subs.c:305:24
	subsd	%xmm3, %xmm2
	.loc	13 305 12               # solve_subs.c:305:12
	movsd	%xmm2, 184(%rdi)
	.loc	13 306 13 is_stmt 1     # solve_subs.c:306:13
	movsd	24(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	8(%rsi), %xmm3          # xmm3 = mem[0],zero
	.loc	13 306 28 is_stmt 0     # solve_subs.c:306:28
	mulsd	%xmm1, %xmm3
	.loc	13 306 21               # solve_subs.c:306:21
	subsd	%xmm3, %xmm2
	.loc	13 306 11               # solve_subs.c:306:11
	movsd	%xmm2, 24(%rsi)
	.loc	13 307 13 is_stmt 1     # solve_subs.c:307:13
	movsd	64(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	48(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 307 28 is_stmt 0     # solve_subs.c:307:28
	mulsd	%xmm1, %xmm3
	.loc	13 307 21               # solve_subs.c:307:21
	subsd	%xmm3, %xmm2
	.loc	13 307 11               # solve_subs.c:307:11
	movsd	%xmm2, 64(%rsi)
	.loc	13 308 13 is_stmt 1     # solve_subs.c:308:13
	movsd	104(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	88(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 308 28 is_stmt 0     # solve_subs.c:308:28
	mulsd	%xmm1, %xmm3
	.loc	13 308 21               # solve_subs.c:308:21
	subsd	%xmm3, %xmm2
	.loc	13 308 11               # solve_subs.c:308:11
	movsd	%xmm2, 104(%rsi)
	.loc	13 309 13 is_stmt 1     # solve_subs.c:309:13
	movsd	144(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 309 28 is_stmt 0     # solve_subs.c:309:28
	mulsd	%xmm1, %xmm3
	.loc	13 309 21               # solve_subs.c:309:21
	subsd	%xmm3, %xmm2
	.loc	13 309 11               # solve_subs.c:309:11
	movsd	%xmm2, 144(%rsi)
	.loc	13 310 13 is_stmt 1     # solve_subs.c:310:13
	movsd	184(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 310 28 is_stmt 0     # solve_subs.c:310:28
	mulsd	%xmm1, %xmm3
	.loc	13 310 21               # solve_subs.c:310:21
	subsd	%xmm3, %xmm2
	.loc	13 310 11               # solve_subs.c:310:11
	movsd	%xmm2, 184(%rsi)
	.loc	13 311 12 is_stmt 1     # solve_subs.c:311:12
	movsd	24(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 311 26 is_stmt 0     # solve_subs.c:311:26
	mulsd	8(%rdx), %xmm1
.Ltmp733:
	.loc	13 311 19               # solve_subs.c:311:19
	subsd	%xmm1, %xmm2
	.loc	13 311 10               # solve_subs.c:311:10
	movsd	%xmm2, 24(%rdx)
	.loc	13 313 11 is_stmt 1     # solve_subs.c:313:11
	movsd	72(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp734:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 314 14               # solve_subs.c:314:14
	movsd	112(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 314 31 is_stmt 0     # solve_subs.c:314:31
	mulsd	%xmm1, %xmm3
	.loc	13 314 24               # solve_subs.c:314:24
	subsd	%xmm3, %xmm2
	.loc	13 314 12               # solve_subs.c:314:12
	movsd	%xmm2, 112(%rdi)
	.loc	13 315 14 is_stmt 1     # solve_subs.c:315:14
	movsd	152(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 315 31 is_stmt 0     # solve_subs.c:315:31
	mulsd	%xmm1, %xmm3
	.loc	13 315 24               # solve_subs.c:315:24
	subsd	%xmm3, %xmm2
	.loc	13 315 12               # solve_subs.c:315:12
	movsd	%xmm2, 152(%rdi)
	.loc	13 316 14 is_stmt 1     # solve_subs.c:316:14
	movsd	192(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 316 31 is_stmt 0     # solve_subs.c:316:31
	mulsd	%xmm1, %xmm3
	.loc	13 316 24               # solve_subs.c:316:24
	subsd	%xmm3, %xmm2
	.loc	13 316 12               # solve_subs.c:316:12
	movsd	%xmm2, 192(%rdi)
	.loc	13 317 13 is_stmt 1     # solve_subs.c:317:13
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	8(%rsi), %xmm3          # xmm3 = mem[0],zero
	.loc	13 317 28 is_stmt 0     # solve_subs.c:317:28
	mulsd	%xmm1, %xmm3
	.loc	13 317 21               # solve_subs.c:317:21
	subsd	%xmm3, %xmm2
	.loc	13 317 11               # solve_subs.c:317:11
	movsd	%xmm2, 32(%rsi)
	.loc	13 318 13 is_stmt 1     # solve_subs.c:318:13
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	48(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 318 28 is_stmt 0     # solve_subs.c:318:28
	mulsd	%xmm1, %xmm3
	.loc	13 318 21               # solve_subs.c:318:21
	subsd	%xmm3, %xmm2
	.loc	13 318 11               # solve_subs.c:318:11
	movsd	%xmm2, 72(%rsi)
	.loc	13 319 13 is_stmt 1     # solve_subs.c:319:13
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	88(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 319 28 is_stmt 0     # solve_subs.c:319:28
	mulsd	%xmm1, %xmm3
	.loc	13 319 21               # solve_subs.c:319:21
	subsd	%xmm3, %xmm2
	.loc	13 319 11               # solve_subs.c:319:11
	movsd	%xmm2, 112(%rsi)
	.loc	13 320 13 is_stmt 1     # solve_subs.c:320:13
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 320 28 is_stmt 0     # solve_subs.c:320:28
	mulsd	%xmm1, %xmm3
	.loc	13 320 21               # solve_subs.c:320:21
	subsd	%xmm3, %xmm2
	.loc	13 320 11               # solve_subs.c:320:11
	movsd	%xmm2, 152(%rsi)
	.loc	13 321 13 is_stmt 1     # solve_subs.c:321:13
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 321 28 is_stmt 0     # solve_subs.c:321:28
	mulsd	%xmm1, %xmm3
	.loc	13 321 21               # solve_subs.c:321:21
	subsd	%xmm3, %xmm2
	.loc	13 321 11               # solve_subs.c:321:11
	movsd	%xmm2, 192(%rsi)
	.loc	13 322 12 is_stmt 1     # solve_subs.c:322:12
	movsd	32(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 322 26 is_stmt 0     # solve_subs.c:322:26
	mulsd	8(%rdx), %xmm1
.Ltmp735:
	.loc	13 322 19               # solve_subs.c:322:19
	subsd	%xmm1, %xmm2
	.loc	13 322 10               # solve_subs.c:322:10
	movsd	%xmm2, 32(%rdx)
	.loc	13 325 15 is_stmt 1     # solve_subs.c:325:15
	movapd	%xmm0, %xmm1
	divsd	96(%rdi), %xmm1
.Ltmp736:
	#DEBUG_VALUE: binvcrhs:pivot <- %XMM1
	movsd	136(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 326 24               # solve_subs.c:326:24
	mulsd	%xmm1, %xmm2
	.loc	13 326 13 is_stmt 0     # solve_subs.c:326:13
	movsd	%xmm2, 136(%rdi)
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 327 24 is_stmt 1     # solve_subs.c:327:24
	mulsd	%xmm1, %xmm2
	.loc	13 327 13 is_stmt 0     # solve_subs.c:327:13
	movsd	%xmm2, 176(%rdi)
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 328 20 is_stmt 1     # solve_subs.c:328:20
	mulsd	%xmm1, %xmm2
	.loc	13 328 11 is_stmt 0     # solve_subs.c:328:11
	movsd	%xmm2, 16(%rsi)
	movsd	56(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 329 20 is_stmt 1     # solve_subs.c:329:20
	mulsd	%xmm1, %xmm2
	.loc	13 329 11 is_stmt 0     # solve_subs.c:329:11
	movsd	%xmm2, 56(%rsi)
	movsd	96(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 330 20 is_stmt 1     # solve_subs.c:330:20
	mulsd	%xmm1, %xmm2
	.loc	13 330 11 is_stmt 0     # solve_subs.c:330:11
	movsd	%xmm2, 96(%rsi)
	movsd	136(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 331 20 is_stmt 1     # solve_subs.c:331:20
	mulsd	%xmm1, %xmm2
	.loc	13 331 11 is_stmt 0     # solve_subs.c:331:11
	movsd	%xmm2, 136(%rsi)
	movsd	176(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 332 20 is_stmt 1     # solve_subs.c:332:20
	mulsd	%xmm1, %xmm2
	.loc	13 332 11 is_stmt 0     # solve_subs.c:332:11
	movsd	%xmm2, 176(%rsi)
	.loc	13 333 18 is_stmt 1     # solve_subs.c:333:18
	mulsd	16(%rdx), %xmm1
.Ltmp737:
	.loc	13 333 10 is_stmt 0     # solve_subs.c:333:10
	movsd	%xmm1, 16(%rdx)
	.loc	13 335 11 is_stmt 1     # solve_subs.c:335:11
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp738:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 336 14               # solve_subs.c:336:14
	movsd	120(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 336 31 is_stmt 0     # solve_subs.c:336:31
	mulsd	%xmm1, %xmm3
	.loc	13 336 24               # solve_subs.c:336:24
	subsd	%xmm3, %xmm2
	.loc	13 336 12               # solve_subs.c:336:12
	movsd	%xmm2, 120(%rdi)
	.loc	13 337 14 is_stmt 1     # solve_subs.c:337:14
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 337 31 is_stmt 0     # solve_subs.c:337:31
	mulsd	%xmm1, %xmm3
	.loc	13 337 24               # solve_subs.c:337:24
	subsd	%xmm3, %xmm2
	.loc	13 337 12               # solve_subs.c:337:12
	movsd	%xmm2, 160(%rdi)
	.loc	13 338 13 is_stmt 1     # solve_subs.c:338:13
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	movsd	16(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 338 28 is_stmt 0     # solve_subs.c:338:28
	mulsd	%xmm1, %xmm3
	.loc	13 338 21               # solve_subs.c:338:21
	subsd	%xmm3, %xmm2
	.loc	13 338 11               # solve_subs.c:338:11
	movsd	%xmm2, (%rsi)
	.loc	13 339 13 is_stmt 1     # solve_subs.c:339:13
	movsd	40(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	56(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 339 28 is_stmt 0     # solve_subs.c:339:28
	mulsd	%xmm1, %xmm3
	.loc	13 339 21               # solve_subs.c:339:21
	subsd	%xmm3, %xmm2
	.loc	13 339 11               # solve_subs.c:339:11
	movsd	%xmm2, 40(%rsi)
	.loc	13 340 13 is_stmt 1     # solve_subs.c:340:13
	movsd	80(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	96(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 340 28 is_stmt 0     # solve_subs.c:340:28
	mulsd	%xmm1, %xmm3
	.loc	13 340 21               # solve_subs.c:340:21
	subsd	%xmm3, %xmm2
	.loc	13 340 11               # solve_subs.c:340:11
	movsd	%xmm2, 80(%rsi)
	.loc	13 341 13 is_stmt 1     # solve_subs.c:341:13
	movsd	120(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 341 28 is_stmt 0     # solve_subs.c:341:28
	mulsd	%xmm1, %xmm3
	.loc	13 341 21               # solve_subs.c:341:21
	subsd	%xmm3, %xmm2
	.loc	13 341 11               # solve_subs.c:341:11
	movsd	%xmm2, 120(%rsi)
	.loc	13 342 13 is_stmt 1     # solve_subs.c:342:13
	movsd	160(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 342 28 is_stmt 0     # solve_subs.c:342:28
	mulsd	%xmm1, %xmm3
	.loc	13 342 21               # solve_subs.c:342:21
	subsd	%xmm3, %xmm2
	.loc	13 342 11               # solve_subs.c:342:11
	movsd	%xmm2, 160(%rsi)
	.loc	13 343 12 is_stmt 1     # solve_subs.c:343:12
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	13 343 26 is_stmt 0     # solve_subs.c:343:26
	mulsd	16(%rdx), %xmm1
.Ltmp739:
	.loc	13 343 19               # solve_subs.c:343:19
	subsd	%xmm1, %xmm2
	.loc	13 343 10               # solve_subs.c:343:10
	movsd	%xmm2, (%rdx)
	.loc	13 345 11 is_stmt 1     # solve_subs.c:345:11
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp740:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 346 14               # solve_subs.c:346:14
	movsd	128(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 346 31 is_stmt 0     # solve_subs.c:346:31
	mulsd	%xmm1, %xmm3
	.loc	13 346 24               # solve_subs.c:346:24
	subsd	%xmm3, %xmm2
	.loc	13 346 12               # solve_subs.c:346:12
	movsd	%xmm2, 128(%rdi)
	.loc	13 347 14 is_stmt 1     # solve_subs.c:347:14
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 347 31 is_stmt 0     # solve_subs.c:347:31
	mulsd	%xmm1, %xmm3
	.loc	13 347 24               # solve_subs.c:347:24
	subsd	%xmm3, %xmm2
	.loc	13 347 12               # solve_subs.c:347:12
	movsd	%xmm2, 168(%rdi)
	.loc	13 348 13 is_stmt 1     # solve_subs.c:348:13
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	movsd	16(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 348 28 is_stmt 0     # solve_subs.c:348:28
	mulsd	%xmm1, %xmm3
	.loc	13 348 21               # solve_subs.c:348:21
	subsd	%xmm3, %xmm2
	.loc	13 348 11               # solve_subs.c:348:11
	movsd	%xmm2, 8(%rsi)
	.loc	13 349 13 is_stmt 1     # solve_subs.c:349:13
	movsd	48(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	56(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 349 28 is_stmt 0     # solve_subs.c:349:28
	mulsd	%xmm1, %xmm3
	.loc	13 349 21               # solve_subs.c:349:21
	subsd	%xmm3, %xmm2
	.loc	13 349 11               # solve_subs.c:349:11
	movsd	%xmm2, 48(%rsi)
	.loc	13 350 13 is_stmt 1     # solve_subs.c:350:13
	movsd	88(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	96(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 350 28 is_stmt 0     # solve_subs.c:350:28
	mulsd	%xmm1, %xmm3
	.loc	13 350 21               # solve_subs.c:350:21
	subsd	%xmm3, %xmm2
	.loc	13 350 11               # solve_subs.c:350:11
	movsd	%xmm2, 88(%rsi)
	.loc	13 351 13 is_stmt 1     # solve_subs.c:351:13
	movsd	128(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 351 28 is_stmt 0     # solve_subs.c:351:28
	mulsd	%xmm1, %xmm3
	.loc	13 351 21               # solve_subs.c:351:21
	subsd	%xmm3, %xmm2
	.loc	13 351 11               # solve_subs.c:351:11
	movsd	%xmm2, 128(%rsi)
	.loc	13 352 13 is_stmt 1     # solve_subs.c:352:13
	movsd	168(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 352 28 is_stmt 0     # solve_subs.c:352:28
	mulsd	%xmm1, %xmm3
	.loc	13 352 21               # solve_subs.c:352:21
	subsd	%xmm3, %xmm2
	.loc	13 352 11               # solve_subs.c:352:11
	movsd	%xmm2, 168(%rsi)
	.loc	13 353 12 is_stmt 1     # solve_subs.c:353:12
	movsd	8(%rdx), %xmm2          # xmm2 = mem[0],zero
	.loc	13 353 26 is_stmt 0     # solve_subs.c:353:26
	mulsd	16(%rdx), %xmm1
.Ltmp741:
	.loc	13 353 19               # solve_subs.c:353:19
	subsd	%xmm1, %xmm2
	.loc	13 353 10               # solve_subs.c:353:10
	movsd	%xmm2, 8(%rdx)
	.loc	13 355 11 is_stmt 1     # solve_subs.c:355:11
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp742:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 356 14               # solve_subs.c:356:14
	movsd	144(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 356 31 is_stmt 0     # solve_subs.c:356:31
	mulsd	%xmm1, %xmm3
	.loc	13 356 24               # solve_subs.c:356:24
	subsd	%xmm3, %xmm2
	.loc	13 356 12               # solve_subs.c:356:12
	movsd	%xmm2, 144(%rdi)
	.loc	13 357 14 is_stmt 1     # solve_subs.c:357:14
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 357 31 is_stmt 0     # solve_subs.c:357:31
	mulsd	%xmm1, %xmm3
	.loc	13 357 24               # solve_subs.c:357:24
	subsd	%xmm3, %xmm2
	.loc	13 357 12               # solve_subs.c:357:12
	movsd	%xmm2, 184(%rdi)
	.loc	13 358 13 is_stmt 1     # solve_subs.c:358:13
	movsd	24(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	16(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 358 28 is_stmt 0     # solve_subs.c:358:28
	mulsd	%xmm1, %xmm3
	.loc	13 358 21               # solve_subs.c:358:21
	subsd	%xmm3, %xmm2
	.loc	13 358 11               # solve_subs.c:358:11
	movsd	%xmm2, 24(%rsi)
	.loc	13 359 13 is_stmt 1     # solve_subs.c:359:13
	movsd	64(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	56(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 359 28 is_stmt 0     # solve_subs.c:359:28
	mulsd	%xmm1, %xmm3
	.loc	13 359 21               # solve_subs.c:359:21
	subsd	%xmm3, %xmm2
	.loc	13 359 11               # solve_subs.c:359:11
	movsd	%xmm2, 64(%rsi)
	.loc	13 360 13 is_stmt 1     # solve_subs.c:360:13
	movsd	104(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	96(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 360 28 is_stmt 0     # solve_subs.c:360:28
	mulsd	%xmm1, %xmm3
	.loc	13 360 21               # solve_subs.c:360:21
	subsd	%xmm3, %xmm2
	.loc	13 360 11               # solve_subs.c:360:11
	movsd	%xmm2, 104(%rsi)
	.loc	13 361 13 is_stmt 1     # solve_subs.c:361:13
	movsd	144(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 361 28 is_stmt 0     # solve_subs.c:361:28
	mulsd	%xmm1, %xmm3
	.loc	13 361 21               # solve_subs.c:361:21
	subsd	%xmm3, %xmm2
	.loc	13 361 11               # solve_subs.c:361:11
	movsd	%xmm2, 144(%rsi)
	.loc	13 362 13 is_stmt 1     # solve_subs.c:362:13
	movsd	184(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 362 28 is_stmt 0     # solve_subs.c:362:28
	mulsd	%xmm1, %xmm3
	.loc	13 362 21               # solve_subs.c:362:21
	subsd	%xmm3, %xmm2
	.loc	13 362 11               # solve_subs.c:362:11
	movsd	%xmm2, 184(%rsi)
	.loc	13 363 12 is_stmt 1     # solve_subs.c:363:12
	movsd	24(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 363 26 is_stmt 0     # solve_subs.c:363:26
	mulsd	16(%rdx), %xmm1
.Ltmp743:
	.loc	13 363 19               # solve_subs.c:363:19
	subsd	%xmm1, %xmm2
	.loc	13 363 10               # solve_subs.c:363:10
	movsd	%xmm2, 24(%rdx)
	.loc	13 365 11 is_stmt 1     # solve_subs.c:365:11
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp744:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 366 14               # solve_subs.c:366:14
	movsd	152(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 366 31 is_stmt 0     # solve_subs.c:366:31
	mulsd	%xmm1, %xmm3
	.loc	13 366 24               # solve_subs.c:366:24
	subsd	%xmm3, %xmm2
	.loc	13 366 12               # solve_subs.c:366:12
	movsd	%xmm2, 152(%rdi)
	.loc	13 367 14 is_stmt 1     # solve_subs.c:367:14
	movsd	192(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 367 31 is_stmt 0     # solve_subs.c:367:31
	mulsd	%xmm1, %xmm3
	.loc	13 367 24               # solve_subs.c:367:24
	subsd	%xmm3, %xmm2
	.loc	13 367 12               # solve_subs.c:367:12
	movsd	%xmm2, 192(%rdi)
	.loc	13 368 13 is_stmt 1     # solve_subs.c:368:13
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	16(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 368 28 is_stmt 0     # solve_subs.c:368:28
	mulsd	%xmm1, %xmm3
	.loc	13 368 21               # solve_subs.c:368:21
	subsd	%xmm3, %xmm2
	.loc	13 368 11               # solve_subs.c:368:11
	movsd	%xmm2, 32(%rsi)
	.loc	13 369 13 is_stmt 1     # solve_subs.c:369:13
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	56(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 369 28 is_stmt 0     # solve_subs.c:369:28
	mulsd	%xmm1, %xmm3
	.loc	13 369 21               # solve_subs.c:369:21
	subsd	%xmm3, %xmm2
	.loc	13 369 11               # solve_subs.c:369:11
	movsd	%xmm2, 72(%rsi)
	.loc	13 370 13 is_stmt 1     # solve_subs.c:370:13
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	96(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 370 28 is_stmt 0     # solve_subs.c:370:28
	mulsd	%xmm1, %xmm3
	.loc	13 370 21               # solve_subs.c:370:21
	subsd	%xmm3, %xmm2
	.loc	13 370 11               # solve_subs.c:370:11
	movsd	%xmm2, 112(%rsi)
	.loc	13 371 13 is_stmt 1     # solve_subs.c:371:13
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 371 28 is_stmt 0     # solve_subs.c:371:28
	mulsd	%xmm1, %xmm3
	.loc	13 371 21               # solve_subs.c:371:21
	subsd	%xmm3, %xmm2
	.loc	13 371 11               # solve_subs.c:371:11
	movsd	%xmm2, 152(%rsi)
	.loc	13 372 13 is_stmt 1     # solve_subs.c:372:13
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 372 28 is_stmt 0     # solve_subs.c:372:28
	mulsd	%xmm1, %xmm3
	.loc	13 372 21               # solve_subs.c:372:21
	subsd	%xmm3, %xmm2
	.loc	13 372 11               # solve_subs.c:372:11
	movsd	%xmm2, 192(%rsi)
	.loc	13 373 12 is_stmt 1     # solve_subs.c:373:12
	movsd	32(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 373 26 is_stmt 0     # solve_subs.c:373:26
	mulsd	16(%rdx), %xmm1
.Ltmp745:
	.loc	13 373 19               # solve_subs.c:373:19
	subsd	%xmm1, %xmm2
	.loc	13 373 10               # solve_subs.c:373:10
	movsd	%xmm2, 32(%rdx)
	.loc	13 376 15 is_stmt 1     # solve_subs.c:376:15
	movapd	%xmm0, %xmm1
	divsd	144(%rdi), %xmm1
.Ltmp746:
	#DEBUG_VALUE: binvcrhs:pivot <- %XMM1
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 377 24               # solve_subs.c:377:24
	mulsd	%xmm1, %xmm2
	.loc	13 377 13 is_stmt 0     # solve_subs.c:377:13
	movsd	%xmm2, 184(%rdi)
	movsd	24(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 378 20 is_stmt 1     # solve_subs.c:378:20
	mulsd	%xmm1, %xmm2
	.loc	13 378 11 is_stmt 0     # solve_subs.c:378:11
	movsd	%xmm2, 24(%rsi)
	movsd	64(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 379 20 is_stmt 1     # solve_subs.c:379:20
	mulsd	%xmm1, %xmm2
	.loc	13 379 11 is_stmt 0     # solve_subs.c:379:11
	movsd	%xmm2, 64(%rsi)
	movsd	104(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 380 20 is_stmt 1     # solve_subs.c:380:20
	mulsd	%xmm1, %xmm2
	.loc	13 380 11 is_stmt 0     # solve_subs.c:380:11
	movsd	%xmm2, 104(%rsi)
	movsd	144(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 381 20 is_stmt 1     # solve_subs.c:381:20
	mulsd	%xmm1, %xmm2
	.loc	13 381 11 is_stmt 0     # solve_subs.c:381:11
	movsd	%xmm2, 144(%rsi)
	movsd	184(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 382 20 is_stmt 1     # solve_subs.c:382:20
	mulsd	%xmm1, %xmm2
	.loc	13 382 11 is_stmt 0     # solve_subs.c:382:11
	movsd	%xmm2, 184(%rsi)
	.loc	13 383 18 is_stmt 1     # solve_subs.c:383:18
	mulsd	24(%rdx), %xmm1
.Ltmp747:
	.loc	13 383 10 is_stmt 0     # solve_subs.c:383:10
	movsd	%xmm1, 24(%rdx)
	.loc	13 385 11 is_stmt 1     # solve_subs.c:385:11
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp748:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 386 14               # solve_subs.c:386:14
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 386 31 is_stmt 0     # solve_subs.c:386:31
	mulsd	%xmm1, %xmm3
	.loc	13 386 24               # solve_subs.c:386:24
	subsd	%xmm3, %xmm2
	.loc	13 386 12               # solve_subs.c:386:12
	movsd	%xmm2, 160(%rdi)
	.loc	13 387 13 is_stmt 1     # solve_subs.c:387:13
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	movsd	24(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 387 28 is_stmt 0     # solve_subs.c:387:28
	mulsd	%xmm1, %xmm3
	.loc	13 387 21               # solve_subs.c:387:21
	subsd	%xmm3, %xmm2
	.loc	13 387 11               # solve_subs.c:387:11
	movsd	%xmm2, (%rsi)
	.loc	13 388 13 is_stmt 1     # solve_subs.c:388:13
	movsd	40(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	64(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 388 28 is_stmt 0     # solve_subs.c:388:28
	mulsd	%xmm1, %xmm3
	.loc	13 388 21               # solve_subs.c:388:21
	subsd	%xmm3, %xmm2
	.loc	13 388 11               # solve_subs.c:388:11
	movsd	%xmm2, 40(%rsi)
	.loc	13 389 13 is_stmt 1     # solve_subs.c:389:13
	movsd	80(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	104(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 389 28 is_stmt 0     # solve_subs.c:389:28
	mulsd	%xmm1, %xmm3
	.loc	13 389 21               # solve_subs.c:389:21
	subsd	%xmm3, %xmm2
	.loc	13 389 11               # solve_subs.c:389:11
	movsd	%xmm2, 80(%rsi)
	.loc	13 390 13 is_stmt 1     # solve_subs.c:390:13
	movsd	120(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	144(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 390 28 is_stmt 0     # solve_subs.c:390:28
	mulsd	%xmm1, %xmm3
	.loc	13 390 21               # solve_subs.c:390:21
	subsd	%xmm3, %xmm2
	.loc	13 390 11               # solve_subs.c:390:11
	movsd	%xmm2, 120(%rsi)
	.loc	13 391 13 is_stmt 1     # solve_subs.c:391:13
	movsd	160(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 391 28 is_stmt 0     # solve_subs.c:391:28
	mulsd	%xmm1, %xmm3
	.loc	13 391 21               # solve_subs.c:391:21
	subsd	%xmm3, %xmm2
	.loc	13 391 11               # solve_subs.c:391:11
	movsd	%xmm2, 160(%rsi)
	.loc	13 392 12 is_stmt 1     # solve_subs.c:392:12
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	13 392 26 is_stmt 0     # solve_subs.c:392:26
	mulsd	24(%rdx), %xmm1
.Ltmp749:
	.loc	13 392 19               # solve_subs.c:392:19
	subsd	%xmm1, %xmm2
	.loc	13 392 10               # solve_subs.c:392:10
	movsd	%xmm2, (%rdx)
	.loc	13 394 11 is_stmt 1     # solve_subs.c:394:11
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp750:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 395 14               # solve_subs.c:395:14
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 395 31 is_stmt 0     # solve_subs.c:395:31
	mulsd	%xmm1, %xmm3
	.loc	13 395 24               # solve_subs.c:395:24
	subsd	%xmm3, %xmm2
	.loc	13 395 12               # solve_subs.c:395:12
	movsd	%xmm2, 168(%rdi)
	.loc	13 396 13 is_stmt 1     # solve_subs.c:396:13
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	movsd	24(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 396 28 is_stmt 0     # solve_subs.c:396:28
	mulsd	%xmm1, %xmm3
	.loc	13 396 21               # solve_subs.c:396:21
	subsd	%xmm3, %xmm2
	.loc	13 396 11               # solve_subs.c:396:11
	movsd	%xmm2, 8(%rsi)
	.loc	13 397 13 is_stmt 1     # solve_subs.c:397:13
	movsd	48(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	64(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 397 28 is_stmt 0     # solve_subs.c:397:28
	mulsd	%xmm1, %xmm3
	.loc	13 397 21               # solve_subs.c:397:21
	subsd	%xmm3, %xmm2
	.loc	13 397 11               # solve_subs.c:397:11
	movsd	%xmm2, 48(%rsi)
	.loc	13 398 13 is_stmt 1     # solve_subs.c:398:13
	movsd	88(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	104(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 398 28 is_stmt 0     # solve_subs.c:398:28
	mulsd	%xmm1, %xmm3
	.loc	13 398 21               # solve_subs.c:398:21
	subsd	%xmm3, %xmm2
	.loc	13 398 11               # solve_subs.c:398:11
	movsd	%xmm2, 88(%rsi)
	.loc	13 399 13 is_stmt 1     # solve_subs.c:399:13
	movsd	128(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	144(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 399 28 is_stmt 0     # solve_subs.c:399:28
	mulsd	%xmm1, %xmm3
	.loc	13 399 21               # solve_subs.c:399:21
	subsd	%xmm3, %xmm2
	.loc	13 399 11               # solve_subs.c:399:11
	movsd	%xmm2, 128(%rsi)
	.loc	13 400 13 is_stmt 1     # solve_subs.c:400:13
	movsd	168(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 400 28 is_stmt 0     # solve_subs.c:400:28
	mulsd	%xmm1, %xmm3
	.loc	13 400 21               # solve_subs.c:400:21
	subsd	%xmm3, %xmm2
	.loc	13 400 11               # solve_subs.c:400:11
	movsd	%xmm2, 168(%rsi)
	.loc	13 401 12 is_stmt 1     # solve_subs.c:401:12
	movsd	8(%rdx), %xmm2          # xmm2 = mem[0],zero
	.loc	13 401 26 is_stmt 0     # solve_subs.c:401:26
	mulsd	24(%rdx), %xmm1
.Ltmp751:
	.loc	13 401 19               # solve_subs.c:401:19
	subsd	%xmm1, %xmm2
	.loc	13 401 10               # solve_subs.c:401:10
	movsd	%xmm2, 8(%rdx)
	.loc	13 403 11 is_stmt 1     # solve_subs.c:403:11
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp752:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 404 14               # solve_subs.c:404:14
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 404 31 is_stmt 0     # solve_subs.c:404:31
	mulsd	%xmm1, %xmm3
	.loc	13 404 24               # solve_subs.c:404:24
	subsd	%xmm3, %xmm2
	.loc	13 404 12               # solve_subs.c:404:12
	movsd	%xmm2, 176(%rdi)
	.loc	13 405 13 is_stmt 1     # solve_subs.c:405:13
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	24(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 405 28 is_stmt 0     # solve_subs.c:405:28
	mulsd	%xmm1, %xmm3
	.loc	13 405 21               # solve_subs.c:405:21
	subsd	%xmm3, %xmm2
	.loc	13 405 11               # solve_subs.c:405:11
	movsd	%xmm2, 16(%rsi)
	.loc	13 406 13 is_stmt 1     # solve_subs.c:406:13
	movsd	56(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	64(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 406 28 is_stmt 0     # solve_subs.c:406:28
	mulsd	%xmm1, %xmm3
	.loc	13 406 21               # solve_subs.c:406:21
	subsd	%xmm3, %xmm2
	.loc	13 406 11               # solve_subs.c:406:11
	movsd	%xmm2, 56(%rsi)
	.loc	13 407 13 is_stmt 1     # solve_subs.c:407:13
	movsd	96(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	104(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 407 28 is_stmt 0     # solve_subs.c:407:28
	mulsd	%xmm1, %xmm3
	.loc	13 407 21               # solve_subs.c:407:21
	subsd	%xmm3, %xmm2
	.loc	13 407 11               # solve_subs.c:407:11
	movsd	%xmm2, 96(%rsi)
	.loc	13 408 13 is_stmt 1     # solve_subs.c:408:13
	movsd	136(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	144(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 408 28 is_stmt 0     # solve_subs.c:408:28
	mulsd	%xmm1, %xmm3
	.loc	13 408 21               # solve_subs.c:408:21
	subsd	%xmm3, %xmm2
	.loc	13 408 11               # solve_subs.c:408:11
	movsd	%xmm2, 136(%rsi)
	.loc	13 409 13 is_stmt 1     # solve_subs.c:409:13
	movsd	176(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 409 28 is_stmt 0     # solve_subs.c:409:28
	mulsd	%xmm1, %xmm3
	.loc	13 409 21               # solve_subs.c:409:21
	subsd	%xmm3, %xmm2
	.loc	13 409 11               # solve_subs.c:409:11
	movsd	%xmm2, 176(%rsi)
	.loc	13 410 12 is_stmt 1     # solve_subs.c:410:12
	movsd	16(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 410 26 is_stmt 0     # solve_subs.c:410:26
	mulsd	24(%rdx), %xmm1
.Ltmp753:
	.loc	13 410 19               # solve_subs.c:410:19
	subsd	%xmm1, %xmm2
	.loc	13 410 10               # solve_subs.c:410:10
	movsd	%xmm2, 16(%rdx)
	.loc	13 412 11 is_stmt 1     # solve_subs.c:412:11
	movsd	152(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp754:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM1
	.loc	13 413 14               # solve_subs.c:413:14
	movsd	192(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 413 31 is_stmt 0     # solve_subs.c:413:31
	mulsd	%xmm1, %xmm3
	.loc	13 413 24               # solve_subs.c:413:24
	subsd	%xmm3, %xmm2
	.loc	13 413 12               # solve_subs.c:413:12
	movsd	%xmm2, 192(%rdi)
	.loc	13 414 13 is_stmt 1     # solve_subs.c:414:13
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	24(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 414 28 is_stmt 0     # solve_subs.c:414:28
	mulsd	%xmm1, %xmm3
	.loc	13 414 21               # solve_subs.c:414:21
	subsd	%xmm3, %xmm2
	.loc	13 414 11               # solve_subs.c:414:11
	movsd	%xmm2, 32(%rsi)
	.loc	13 415 13 is_stmt 1     # solve_subs.c:415:13
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	64(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 415 28 is_stmt 0     # solve_subs.c:415:28
	mulsd	%xmm1, %xmm3
	.loc	13 415 21               # solve_subs.c:415:21
	subsd	%xmm3, %xmm2
	.loc	13 415 11               # solve_subs.c:415:11
	movsd	%xmm2, 72(%rsi)
	.loc	13 416 13 is_stmt 1     # solve_subs.c:416:13
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	104(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 416 28 is_stmt 0     # solve_subs.c:416:28
	mulsd	%xmm1, %xmm3
	.loc	13 416 21               # solve_subs.c:416:21
	subsd	%xmm3, %xmm2
	.loc	13 416 11               # solve_subs.c:416:11
	movsd	%xmm2, 112(%rsi)
	.loc	13 417 13 is_stmt 1     # solve_subs.c:417:13
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	144(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 417 28 is_stmt 0     # solve_subs.c:417:28
	mulsd	%xmm1, %xmm3
	.loc	13 417 21               # solve_subs.c:417:21
	subsd	%xmm3, %xmm2
	.loc	13 417 11               # solve_subs.c:417:11
	movsd	%xmm2, 152(%rsi)
	.loc	13 418 13 is_stmt 1     # solve_subs.c:418:13
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 418 28 is_stmt 0     # solve_subs.c:418:28
	mulsd	%xmm1, %xmm3
	.loc	13 418 21               # solve_subs.c:418:21
	subsd	%xmm3, %xmm2
	.loc	13 418 11               # solve_subs.c:418:11
	movsd	%xmm2, 192(%rsi)
	.loc	13 419 12 is_stmt 1     # solve_subs.c:419:12
	movsd	32(%rdx), %xmm2         # xmm2 = mem[0],zero
	.loc	13 419 26 is_stmt 0     # solve_subs.c:419:26
	mulsd	24(%rdx), %xmm1
.Ltmp755:
	.loc	13 419 19               # solve_subs.c:419:19
	subsd	%xmm1, %xmm2
	.loc	13 419 10               # solve_subs.c:419:10
	movsd	%xmm2, 32(%rdx)
	.loc	13 422 15 is_stmt 1     # solve_subs.c:422:15
	divsd	192(%rdi), %xmm0
.Ltmp756:
	#DEBUG_VALUE: binvcrhs:pivot <- %XMM0
	movsd	32(%rsi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 423 20               # solve_subs.c:423:20
	mulsd	%xmm0, %xmm1
	.loc	13 423 11 is_stmt 0     # solve_subs.c:423:11
	movsd	%xmm1, 32(%rsi)
	movsd	72(%rsi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 424 20 is_stmt 1     # solve_subs.c:424:20
	mulsd	%xmm0, %xmm1
	.loc	13 424 11 is_stmt 0     # solve_subs.c:424:11
	movsd	%xmm1, 72(%rsi)
	movsd	112(%rsi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 425 20 is_stmt 1     # solve_subs.c:425:20
	mulsd	%xmm0, %xmm1
	.loc	13 425 11 is_stmt 0     # solve_subs.c:425:11
	movsd	%xmm1, 112(%rsi)
	movsd	152(%rsi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 426 20 is_stmt 1     # solve_subs.c:426:20
	mulsd	%xmm0, %xmm1
	.loc	13 426 11 is_stmt 0     # solve_subs.c:426:11
	movsd	%xmm1, 152(%rsi)
	movsd	192(%rsi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 427 20 is_stmt 1     # solve_subs.c:427:20
	mulsd	%xmm0, %xmm1
	.loc	13 427 11 is_stmt 0     # solve_subs.c:427:11
	movsd	%xmm1, 192(%rsi)
	.loc	13 428 18 is_stmt 1     # solve_subs.c:428:18
	mulsd	32(%rdx), %xmm0
.Ltmp757:
	.loc	13 428 10 is_stmt 0     # solve_subs.c:428:10
	movsd	%xmm0, 32(%rdx)
	.loc	13 430 11 is_stmt 1     # solve_subs.c:430:11
	movsd	160(%rdi), %xmm0        # xmm0 = mem[0],zero
.Ltmp758:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM0
	.loc	13 431 13               # solve_subs.c:431:13
	movsd	(%rsi), %xmm1           # xmm1 = mem[0],zero
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 431 28 is_stmt 0     # solve_subs.c:431:28
	mulsd	%xmm0, %xmm2
	.loc	13 431 21               # solve_subs.c:431:21
	subsd	%xmm2, %xmm1
	.loc	13 431 11               # solve_subs.c:431:11
	movsd	%xmm1, (%rsi)
	.loc	13 432 13 is_stmt 1     # solve_subs.c:432:13
	movsd	40(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 432 28 is_stmt 0     # solve_subs.c:432:28
	mulsd	%xmm0, %xmm2
	.loc	13 432 21               # solve_subs.c:432:21
	subsd	%xmm2, %xmm1
	.loc	13 432 11               # solve_subs.c:432:11
	movsd	%xmm1, 40(%rsi)
	.loc	13 433 13 is_stmt 1     # solve_subs.c:433:13
	movsd	80(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 433 28 is_stmt 0     # solve_subs.c:433:28
	mulsd	%xmm0, %xmm2
	.loc	13 433 21               # solve_subs.c:433:21
	subsd	%xmm2, %xmm1
	.loc	13 433 11               # solve_subs.c:433:11
	movsd	%xmm1, 80(%rsi)
	.loc	13 434 13 is_stmt 1     # solve_subs.c:434:13
	movsd	120(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 434 28 is_stmt 0     # solve_subs.c:434:28
	mulsd	%xmm0, %xmm2
	.loc	13 434 21               # solve_subs.c:434:21
	subsd	%xmm2, %xmm1
	.loc	13 434 11               # solve_subs.c:434:11
	movsd	%xmm1, 120(%rsi)
	.loc	13 435 13 is_stmt 1     # solve_subs.c:435:13
	movsd	160(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 435 28 is_stmt 0     # solve_subs.c:435:28
	mulsd	%xmm0, %xmm2
	.loc	13 435 21               # solve_subs.c:435:21
	subsd	%xmm2, %xmm1
	.loc	13 435 11               # solve_subs.c:435:11
	movsd	%xmm1, 160(%rsi)
	.loc	13 436 12 is_stmt 1     # solve_subs.c:436:12
	movsd	(%rdx), %xmm1           # xmm1 = mem[0],zero
	.loc	13 436 26 is_stmt 0     # solve_subs.c:436:26
	mulsd	32(%rdx), %xmm0
.Ltmp759:
	.loc	13 436 19               # solve_subs.c:436:19
	subsd	%xmm0, %xmm1
	.loc	13 436 10               # solve_subs.c:436:10
	movsd	%xmm1, (%rdx)
	.loc	13 438 11 is_stmt 1     # solve_subs.c:438:11
	movsd	168(%rdi), %xmm0        # xmm0 = mem[0],zero
.Ltmp760:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM0
	.loc	13 439 13               # solve_subs.c:439:13
	movsd	8(%rsi), %xmm1          # xmm1 = mem[0],zero
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 439 28 is_stmt 0     # solve_subs.c:439:28
	mulsd	%xmm0, %xmm2
	.loc	13 439 21               # solve_subs.c:439:21
	subsd	%xmm2, %xmm1
	.loc	13 439 11               # solve_subs.c:439:11
	movsd	%xmm1, 8(%rsi)
	.loc	13 440 13 is_stmt 1     # solve_subs.c:440:13
	movsd	48(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 440 28 is_stmt 0     # solve_subs.c:440:28
	mulsd	%xmm0, %xmm2
	.loc	13 440 21               # solve_subs.c:440:21
	subsd	%xmm2, %xmm1
	.loc	13 440 11               # solve_subs.c:440:11
	movsd	%xmm1, 48(%rsi)
	.loc	13 441 13 is_stmt 1     # solve_subs.c:441:13
	movsd	88(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 441 28 is_stmt 0     # solve_subs.c:441:28
	mulsd	%xmm0, %xmm2
	.loc	13 441 21               # solve_subs.c:441:21
	subsd	%xmm2, %xmm1
	.loc	13 441 11               # solve_subs.c:441:11
	movsd	%xmm1, 88(%rsi)
	.loc	13 442 13 is_stmt 1     # solve_subs.c:442:13
	movsd	128(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 442 28 is_stmt 0     # solve_subs.c:442:28
	mulsd	%xmm0, %xmm2
	.loc	13 442 21               # solve_subs.c:442:21
	subsd	%xmm2, %xmm1
	.loc	13 442 11               # solve_subs.c:442:11
	movsd	%xmm1, 128(%rsi)
	.loc	13 443 13 is_stmt 1     # solve_subs.c:443:13
	movsd	168(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 443 28 is_stmt 0     # solve_subs.c:443:28
	mulsd	%xmm0, %xmm2
	.loc	13 443 21               # solve_subs.c:443:21
	subsd	%xmm2, %xmm1
	.loc	13 443 11               # solve_subs.c:443:11
	movsd	%xmm1, 168(%rsi)
	.loc	13 444 12 is_stmt 1     # solve_subs.c:444:12
	movsd	8(%rdx), %xmm1          # xmm1 = mem[0],zero
	.loc	13 444 26 is_stmt 0     # solve_subs.c:444:26
	mulsd	32(%rdx), %xmm0
.Ltmp761:
	.loc	13 444 19               # solve_subs.c:444:19
	subsd	%xmm0, %xmm1
	.loc	13 444 10               # solve_subs.c:444:10
	movsd	%xmm1, 8(%rdx)
	.loc	13 446 11 is_stmt 1     # solve_subs.c:446:11
	movsd	176(%rdi), %xmm0        # xmm0 = mem[0],zero
.Ltmp762:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM0
	.loc	13 447 13               # solve_subs.c:447:13
	movsd	16(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 447 28 is_stmt 0     # solve_subs.c:447:28
	mulsd	%xmm0, %xmm2
	.loc	13 447 21               # solve_subs.c:447:21
	subsd	%xmm2, %xmm1
	.loc	13 447 11               # solve_subs.c:447:11
	movsd	%xmm1, 16(%rsi)
	.loc	13 448 13 is_stmt 1     # solve_subs.c:448:13
	movsd	56(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 448 28 is_stmt 0     # solve_subs.c:448:28
	mulsd	%xmm0, %xmm2
	.loc	13 448 21               # solve_subs.c:448:21
	subsd	%xmm2, %xmm1
	.loc	13 448 11               # solve_subs.c:448:11
	movsd	%xmm1, 56(%rsi)
	.loc	13 449 13 is_stmt 1     # solve_subs.c:449:13
	movsd	96(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 449 28 is_stmt 0     # solve_subs.c:449:28
	mulsd	%xmm0, %xmm2
	.loc	13 449 21               # solve_subs.c:449:21
	subsd	%xmm2, %xmm1
	.loc	13 449 11               # solve_subs.c:449:11
	movsd	%xmm1, 96(%rsi)
	.loc	13 450 13 is_stmt 1     # solve_subs.c:450:13
	movsd	136(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 450 28 is_stmt 0     # solve_subs.c:450:28
	mulsd	%xmm0, %xmm2
	.loc	13 450 21               # solve_subs.c:450:21
	subsd	%xmm2, %xmm1
	.loc	13 450 11               # solve_subs.c:450:11
	movsd	%xmm1, 136(%rsi)
	.loc	13 451 13 is_stmt 1     # solve_subs.c:451:13
	movsd	176(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 451 28 is_stmt 0     # solve_subs.c:451:28
	mulsd	%xmm0, %xmm2
	.loc	13 451 21               # solve_subs.c:451:21
	subsd	%xmm2, %xmm1
	.loc	13 451 11               # solve_subs.c:451:11
	movsd	%xmm1, 176(%rsi)
	.loc	13 452 12 is_stmt 1     # solve_subs.c:452:12
	movsd	16(%rdx), %xmm1         # xmm1 = mem[0],zero
	.loc	13 452 26 is_stmt 0     # solve_subs.c:452:26
	mulsd	32(%rdx), %xmm0
.Ltmp763:
	.loc	13 452 19               # solve_subs.c:452:19
	subsd	%xmm0, %xmm1
	.loc	13 452 10               # solve_subs.c:452:10
	movsd	%xmm1, 16(%rdx)
	.loc	13 454 11 is_stmt 1     # solve_subs.c:454:11
	movsd	184(%rdi), %xmm0        # xmm0 = mem[0],zero
.Ltmp764:
	#DEBUG_VALUE: binvcrhs:coeff <- %XMM0
	.loc	13 455 13               # solve_subs.c:455:13
	movsd	24(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 455 28 is_stmt 0     # solve_subs.c:455:28
	mulsd	%xmm0, %xmm2
	.loc	13 455 21               # solve_subs.c:455:21
	subsd	%xmm2, %xmm1
	.loc	13 455 11               # solve_subs.c:455:11
	movsd	%xmm1, 24(%rsi)
	.loc	13 456 13 is_stmt 1     # solve_subs.c:456:13
	movsd	64(%rsi), %xmm1         # xmm1 = mem[0],zero
	movsd	72(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 456 28 is_stmt 0     # solve_subs.c:456:28
	mulsd	%xmm0, %xmm2
	.loc	13 456 21               # solve_subs.c:456:21
	subsd	%xmm2, %xmm1
	.loc	13 456 11               # solve_subs.c:456:11
	movsd	%xmm1, 64(%rsi)
	.loc	13 457 13 is_stmt 1     # solve_subs.c:457:13
	movsd	104(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	112(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 457 28 is_stmt 0     # solve_subs.c:457:28
	mulsd	%xmm0, %xmm2
	.loc	13 457 21               # solve_subs.c:457:21
	subsd	%xmm2, %xmm1
	.loc	13 457 11               # solve_subs.c:457:11
	movsd	%xmm1, 104(%rsi)
	.loc	13 458 13 is_stmt 1     # solve_subs.c:458:13
	movsd	144(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	152(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 458 28 is_stmt 0     # solve_subs.c:458:28
	mulsd	%xmm0, %xmm2
	.loc	13 458 21               # solve_subs.c:458:21
	subsd	%xmm2, %xmm1
	.loc	13 458 11               # solve_subs.c:458:11
	movsd	%xmm1, 144(%rsi)
	.loc	13 459 13 is_stmt 1     # solve_subs.c:459:13
	movsd	184(%rsi), %xmm1        # xmm1 = mem[0],zero
	movsd	192(%rsi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 459 28 is_stmt 0     # solve_subs.c:459:28
	mulsd	%xmm0, %xmm2
	.loc	13 459 21               # solve_subs.c:459:21
	subsd	%xmm2, %xmm1
	.loc	13 459 11               # solve_subs.c:459:11
	movsd	%xmm1, 184(%rsi)
	.loc	13 460 12 is_stmt 1     # solve_subs.c:460:12
	movsd	24(%rdx), %xmm1         # xmm1 = mem[0],zero
	.loc	13 460 26 is_stmt 0     # solve_subs.c:460:26
	mulsd	32(%rdx), %xmm0
.Ltmp765:
	.loc	13 460 19               # solve_subs.c:460:19
	subsd	%xmm0, %xmm1
	.loc	13 460 10               # solve_subs.c:460:10
	movsd	%xmm1, 24(%rdx)
	.loc	13 461 1 is_stmt 1      # solve_subs.c:461:1
	retq
.Ltmp766:
.Lfunc_end9:
	.size	binvcrhs, .Lfunc_end9-binvcrhs
	.cfi_endproc

	.globl	matvec_sub
	.p2align	4, 0x90
	.type	matvec_sub,@function
matvec_sub:                             # @matvec_sub
.Lfunc_begin10:
	.loc	13 38 0                 # solve_subs.c:38:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: matvec_sub:ablock <- %RDI
	#DEBUG_VALUE: matvec_sub:avec <- %RSI
	#DEBUG_VALUE: matvec_sub:bvec <- %RDX
	.loc	13 43 13 prologue_end   # solve_subs.c:43:13
	movsd	(%rdx), %xmm0           # xmm0 = mem[0],zero
	.loc	13 43 23 is_stmt 0      # solve_subs.c:43:23
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	13 44 23 is_stmt 1      # solve_subs.c:44:23
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 43 35                # solve_subs.c:43:35
	mulsd	(%rsi), %xmm1
	.loc	13 43 21 is_stmt 0      # solve_subs.c:43:21
	subsd	%xmm1, %xmm0
	.loc	13 44 35 is_stmt 1      # solve_subs.c:44:35
	mulsd	8(%rsi), %xmm2
	.loc	13 44 21 is_stmt 0      # solve_subs.c:44:21
	subsd	%xmm2, %xmm0
	.loc	13 45 23 is_stmt 1      # solve_subs.c:45:23
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 45 35 is_stmt 0      # solve_subs.c:45:35
	mulsd	16(%rsi), %xmm1
	.loc	13 45 21                # solve_subs.c:45:21
	subsd	%xmm1, %xmm0
	.loc	13 46 23 is_stmt 1      # solve_subs.c:46:23
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 46 35 is_stmt 0      # solve_subs.c:46:35
	mulsd	24(%rsi), %xmm1
	.loc	13 46 21                # solve_subs.c:46:21
	subsd	%xmm1, %xmm0
	.loc	13 47 23 is_stmt 1      # solve_subs.c:47:23
	movsd	160(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 47 35 is_stmt 0      # solve_subs.c:47:35
	mulsd	32(%rsi), %xmm1
	.loc	13 47 21                # solve_subs.c:47:21
	subsd	%xmm1, %xmm0
	.loc	13 43 11 is_stmt 1      # solve_subs.c:43:11
	movsd	%xmm0, (%rdx)
	.loc	13 48 13                # solve_subs.c:48:13
	movsd	8(%rdx), %xmm0          # xmm0 = mem[0],zero
	.loc	13 48 23 is_stmt 0      # solve_subs.c:48:23
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
	.loc	13 49 23 is_stmt 1      # solve_subs.c:49:23
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 48 35                # solve_subs.c:48:35
	mulsd	(%rsi), %xmm1
	.loc	13 48 21 is_stmt 0      # solve_subs.c:48:21
	subsd	%xmm1, %xmm0
	.loc	13 49 35 is_stmt 1      # solve_subs.c:49:35
	mulsd	8(%rsi), %xmm2
	.loc	13 49 21 is_stmt 0      # solve_subs.c:49:21
	subsd	%xmm2, %xmm0
	.loc	13 50 23 is_stmt 1      # solve_subs.c:50:23
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 50 35 is_stmt 0      # solve_subs.c:50:35
	mulsd	16(%rsi), %xmm1
	.loc	13 50 21                # solve_subs.c:50:21
	subsd	%xmm1, %xmm0
	.loc	13 51 23 is_stmt 1      # solve_subs.c:51:23
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 51 35 is_stmt 0      # solve_subs.c:51:35
	mulsd	24(%rsi), %xmm1
	.loc	13 51 21                # solve_subs.c:51:21
	subsd	%xmm1, %xmm0
	.loc	13 52 23 is_stmt 1      # solve_subs.c:52:23
	movsd	168(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 52 35 is_stmt 0      # solve_subs.c:52:35
	mulsd	32(%rsi), %xmm1
	.loc	13 52 21                # solve_subs.c:52:21
	subsd	%xmm1, %xmm0
	.loc	13 48 11 is_stmt 1      # solve_subs.c:48:11
	movsd	%xmm0, 8(%rdx)
	.loc	13 53 13                # solve_subs.c:53:13
	movsd	16(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 53 23 is_stmt 0      # solve_subs.c:53:23
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 54 23 is_stmt 1      # solve_subs.c:54:23
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 53 35                # solve_subs.c:53:35
	mulsd	(%rsi), %xmm1
	.loc	13 53 21 is_stmt 0      # solve_subs.c:53:21
	subsd	%xmm1, %xmm0
	.loc	13 54 35 is_stmt 1      # solve_subs.c:54:35
	mulsd	8(%rsi), %xmm2
	.loc	13 54 21 is_stmt 0      # solve_subs.c:54:21
	subsd	%xmm2, %xmm0
	.loc	13 55 23 is_stmt 1      # solve_subs.c:55:23
	movsd	96(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 55 35 is_stmt 0      # solve_subs.c:55:35
	mulsd	16(%rsi), %xmm1
	.loc	13 55 21                # solve_subs.c:55:21
	subsd	%xmm1, %xmm0
	.loc	13 56 23 is_stmt 1      # solve_subs.c:56:23
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 56 35 is_stmt 0      # solve_subs.c:56:35
	mulsd	24(%rsi), %xmm1
	.loc	13 56 21                # solve_subs.c:56:21
	subsd	%xmm1, %xmm0
	.loc	13 57 23 is_stmt 1      # solve_subs.c:57:23
	movsd	176(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 57 35 is_stmt 0      # solve_subs.c:57:35
	mulsd	32(%rsi), %xmm1
	.loc	13 57 21                # solve_subs.c:57:21
	subsd	%xmm1, %xmm0
	.loc	13 53 11 is_stmt 1      # solve_subs.c:53:11
	movsd	%xmm0, 16(%rdx)
	.loc	13 58 13                # solve_subs.c:58:13
	movsd	24(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 58 23 is_stmt 0      # solve_subs.c:58:23
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 59 23 is_stmt 1      # solve_subs.c:59:23
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 58 35                # solve_subs.c:58:35
	mulsd	(%rsi), %xmm1
	.loc	13 58 21 is_stmt 0      # solve_subs.c:58:21
	subsd	%xmm1, %xmm0
	.loc	13 59 35 is_stmt 1      # solve_subs.c:59:35
	mulsd	8(%rsi), %xmm2
	.loc	13 59 21 is_stmt 0      # solve_subs.c:59:21
	subsd	%xmm2, %xmm0
	.loc	13 60 23 is_stmt 1      # solve_subs.c:60:23
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 60 35 is_stmt 0      # solve_subs.c:60:35
	mulsd	16(%rsi), %xmm1
	.loc	13 60 21                # solve_subs.c:60:21
	subsd	%xmm1, %xmm0
	.loc	13 61 23 is_stmt 1      # solve_subs.c:61:23
	movsd	144(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 61 35 is_stmt 0      # solve_subs.c:61:35
	mulsd	24(%rsi), %xmm1
	.loc	13 61 21                # solve_subs.c:61:21
	subsd	%xmm1, %xmm0
	.loc	13 62 23 is_stmt 1      # solve_subs.c:62:23
	movsd	184(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 62 35 is_stmt 0      # solve_subs.c:62:35
	mulsd	32(%rsi), %xmm1
	.loc	13 62 21                # solve_subs.c:62:21
	subsd	%xmm1, %xmm0
	.loc	13 58 11 is_stmt 1      # solve_subs.c:58:11
	movsd	%xmm0, 24(%rdx)
	.loc	13 63 13                # solve_subs.c:63:13
	movsd	32(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 63 23 is_stmt 0      # solve_subs.c:63:23
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 64 23 is_stmt 1      # solve_subs.c:64:23
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 63 35                # solve_subs.c:63:35
	mulsd	(%rsi), %xmm1
	.loc	13 63 21 is_stmt 0      # solve_subs.c:63:21
	subsd	%xmm1, %xmm0
	.loc	13 64 35 is_stmt 1      # solve_subs.c:64:35
	mulsd	8(%rsi), %xmm2
	.loc	13 64 21 is_stmt 0      # solve_subs.c:64:21
	subsd	%xmm2, %xmm0
	.loc	13 65 23 is_stmt 1      # solve_subs.c:65:23
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 65 35 is_stmt 0      # solve_subs.c:65:35
	mulsd	16(%rsi), %xmm1
	.loc	13 65 21                # solve_subs.c:65:21
	subsd	%xmm1, %xmm0
	.loc	13 66 23 is_stmt 1      # solve_subs.c:66:23
	movsd	152(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 66 35 is_stmt 0      # solve_subs.c:66:35
	mulsd	24(%rsi), %xmm1
	.loc	13 66 21                # solve_subs.c:66:21
	subsd	%xmm1, %xmm0
	.loc	13 67 23 is_stmt 1      # solve_subs.c:67:23
	movsd	192(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 67 35 is_stmt 0      # solve_subs.c:67:35
	mulsd	32(%rsi), %xmm1
	.loc	13 67 21                # solve_subs.c:67:21
	subsd	%xmm1, %xmm0
	.loc	13 63 11 is_stmt 1      # solve_subs.c:63:11
	movsd	%xmm0, 32(%rdx)
	.loc	13 68 1                 # solve_subs.c:68:1
	retq
.Ltmp767:
.Lfunc_end10:
	.size	matvec_sub, .Lfunc_end10-matvec_sub
	.cfi_endproc

	.globl	matmul_sub
	.p2align	4, 0x90
	.type	matmul_sub,@function
matmul_sub:                             # @matmul_sub
.Lfunc_begin11:
	.loc	13 75 0                 # solve_subs.c:75:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: matmul_sub:ablock <- %RDI
	#DEBUG_VALUE: matmul_sub:bblock <- %RSI
	#DEBUG_VALUE: matmul_sub:cblock <- %RDX
	.loc	13 76 18 prologue_end   # solve_subs.c:76:18
	movsd	(%rdx), %xmm0           # xmm0 = mem[0],zero
	.loc	13 76 33 is_stmt 0      # solve_subs.c:76:33
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	13 77 33 is_stmt 1      # solve_subs.c:77:33
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 76 45                # solve_subs.c:76:45
	mulsd	(%rsi), %xmm1
	.loc	13 76 31 is_stmt 0      # solve_subs.c:76:31
	subsd	%xmm1, %xmm0
	.loc	13 77 45 is_stmt 1      # solve_subs.c:77:45
	mulsd	8(%rsi), %xmm2
	.loc	13 77 31 is_stmt 0      # solve_subs.c:77:31
	subsd	%xmm2, %xmm0
	.loc	13 78 33 is_stmt 1      # solve_subs.c:78:33
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 78 45 is_stmt 0      # solve_subs.c:78:45
	mulsd	16(%rsi), %xmm1
	.loc	13 78 31                # solve_subs.c:78:31
	subsd	%xmm1, %xmm0
	.loc	13 79 33 is_stmt 1      # solve_subs.c:79:33
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 79 45 is_stmt 0      # solve_subs.c:79:45
	mulsd	24(%rsi), %xmm1
	.loc	13 79 31                # solve_subs.c:79:31
	subsd	%xmm1, %xmm0
	.loc	13 80 33 is_stmt 1      # solve_subs.c:80:33
	movsd	160(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 80 45 is_stmt 0      # solve_subs.c:80:45
	mulsd	32(%rsi), %xmm1
	.loc	13 80 31                # solve_subs.c:80:31
	subsd	%xmm1, %xmm0
	.loc	13 76 16 is_stmt 1      # solve_subs.c:76:16
	movsd	%xmm0, (%rdx)
	.loc	13 81 18                # solve_subs.c:81:18
	movsd	8(%rdx), %xmm0          # xmm0 = mem[0],zero
	.loc	13 81 33 is_stmt 0      # solve_subs.c:81:33
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
	.loc	13 82 33 is_stmt 1      # solve_subs.c:82:33
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 81 45                # solve_subs.c:81:45
	mulsd	(%rsi), %xmm1
	.loc	13 81 31 is_stmt 0      # solve_subs.c:81:31
	subsd	%xmm1, %xmm0
	.loc	13 82 45 is_stmt 1      # solve_subs.c:82:45
	mulsd	8(%rsi), %xmm2
	.loc	13 82 31 is_stmt 0      # solve_subs.c:82:31
	subsd	%xmm2, %xmm0
	.loc	13 83 33 is_stmt 1      # solve_subs.c:83:33
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 83 45 is_stmt 0      # solve_subs.c:83:45
	mulsd	16(%rsi), %xmm1
	.loc	13 83 31                # solve_subs.c:83:31
	subsd	%xmm1, %xmm0
	.loc	13 84 33 is_stmt 1      # solve_subs.c:84:33
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 84 45 is_stmt 0      # solve_subs.c:84:45
	mulsd	24(%rsi), %xmm1
	.loc	13 84 31                # solve_subs.c:84:31
	subsd	%xmm1, %xmm0
	.loc	13 85 33 is_stmt 1      # solve_subs.c:85:33
	movsd	168(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 85 45 is_stmt 0      # solve_subs.c:85:45
	mulsd	32(%rsi), %xmm1
	.loc	13 85 31                # solve_subs.c:85:31
	subsd	%xmm1, %xmm0
	.loc	13 81 16 is_stmt 1      # solve_subs.c:81:16
	movsd	%xmm0, 8(%rdx)
	.loc	13 86 18                # solve_subs.c:86:18
	movsd	16(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 86 33 is_stmt 0      # solve_subs.c:86:33
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 87 33 is_stmt 1      # solve_subs.c:87:33
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 86 45                # solve_subs.c:86:45
	mulsd	(%rsi), %xmm1
	.loc	13 86 31 is_stmt 0      # solve_subs.c:86:31
	subsd	%xmm1, %xmm0
	.loc	13 87 45 is_stmt 1      # solve_subs.c:87:45
	mulsd	8(%rsi), %xmm2
	.loc	13 87 31 is_stmt 0      # solve_subs.c:87:31
	subsd	%xmm2, %xmm0
	.loc	13 88 33 is_stmt 1      # solve_subs.c:88:33
	movsd	96(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 88 45 is_stmt 0      # solve_subs.c:88:45
	mulsd	16(%rsi), %xmm1
	.loc	13 88 31                # solve_subs.c:88:31
	subsd	%xmm1, %xmm0
	.loc	13 89 33 is_stmt 1      # solve_subs.c:89:33
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 89 45 is_stmt 0      # solve_subs.c:89:45
	mulsd	24(%rsi), %xmm1
	.loc	13 89 31                # solve_subs.c:89:31
	subsd	%xmm1, %xmm0
	.loc	13 90 33 is_stmt 1      # solve_subs.c:90:33
	movsd	176(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 90 45 is_stmt 0      # solve_subs.c:90:45
	mulsd	32(%rsi), %xmm1
	.loc	13 90 31                # solve_subs.c:90:31
	subsd	%xmm1, %xmm0
	.loc	13 86 16 is_stmt 1      # solve_subs.c:86:16
	movsd	%xmm0, 16(%rdx)
	.loc	13 91 18                # solve_subs.c:91:18
	movsd	24(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 91 33 is_stmt 0      # solve_subs.c:91:33
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 92 33 is_stmt 1      # solve_subs.c:92:33
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 91 45                # solve_subs.c:91:45
	mulsd	(%rsi), %xmm1
	.loc	13 91 31 is_stmt 0      # solve_subs.c:91:31
	subsd	%xmm1, %xmm0
	.loc	13 92 45 is_stmt 1      # solve_subs.c:92:45
	mulsd	8(%rsi), %xmm2
	.loc	13 92 31 is_stmt 0      # solve_subs.c:92:31
	subsd	%xmm2, %xmm0
	.loc	13 93 33 is_stmt 1      # solve_subs.c:93:33
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 93 45 is_stmt 0      # solve_subs.c:93:45
	mulsd	16(%rsi), %xmm1
	.loc	13 93 31                # solve_subs.c:93:31
	subsd	%xmm1, %xmm0
	.loc	13 94 33 is_stmt 1      # solve_subs.c:94:33
	movsd	144(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 94 45 is_stmt 0      # solve_subs.c:94:45
	mulsd	24(%rsi), %xmm1
	.loc	13 94 31                # solve_subs.c:94:31
	subsd	%xmm1, %xmm0
	.loc	13 95 33 is_stmt 1      # solve_subs.c:95:33
	movsd	184(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 95 45 is_stmt 0      # solve_subs.c:95:45
	mulsd	32(%rsi), %xmm1
	.loc	13 95 31                # solve_subs.c:95:31
	subsd	%xmm1, %xmm0
	.loc	13 91 16 is_stmt 1      # solve_subs.c:91:16
	movsd	%xmm0, 24(%rdx)
	.loc	13 96 18                # solve_subs.c:96:18
	movsd	32(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 96 33 is_stmt 0      # solve_subs.c:96:33
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 97 33 is_stmt 1      # solve_subs.c:97:33
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 96 45                # solve_subs.c:96:45
	mulsd	(%rsi), %xmm1
	.loc	13 96 31 is_stmt 0      # solve_subs.c:96:31
	subsd	%xmm1, %xmm0
	.loc	13 97 45 is_stmt 1      # solve_subs.c:97:45
	mulsd	8(%rsi), %xmm2
	.loc	13 97 31 is_stmt 0      # solve_subs.c:97:31
	subsd	%xmm2, %xmm0
	.loc	13 98 33 is_stmt 1      # solve_subs.c:98:33
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 98 45 is_stmt 0      # solve_subs.c:98:45
	mulsd	16(%rsi), %xmm1
	.loc	13 98 31                # solve_subs.c:98:31
	subsd	%xmm1, %xmm0
	.loc	13 99 33 is_stmt 1      # solve_subs.c:99:33
	movsd	152(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 99 45 is_stmt 0      # solve_subs.c:99:45
	mulsd	24(%rsi), %xmm1
	.loc	13 99 31                # solve_subs.c:99:31
	subsd	%xmm1, %xmm0
	.loc	13 100 33 is_stmt 1     # solve_subs.c:100:33
	movsd	192(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 100 45 is_stmt 0     # solve_subs.c:100:45
	mulsd	32(%rsi), %xmm1
	.loc	13 100 31               # solve_subs.c:100:31
	subsd	%xmm1, %xmm0
	.loc	13 96 16 is_stmt 1      # solve_subs.c:96:16
	movsd	%xmm0, 32(%rdx)
	.loc	13 101 18               # solve_subs.c:101:18
	movsd	40(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 101 33 is_stmt 0     # solve_subs.c:101:33
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	13 102 33 is_stmt 1     # solve_subs.c:102:33
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 101 45               # solve_subs.c:101:45
	mulsd	40(%rsi), %xmm1
	.loc	13 101 31 is_stmt 0     # solve_subs.c:101:31
	subsd	%xmm1, %xmm0
	.loc	13 102 45 is_stmt 1     # solve_subs.c:102:45
	mulsd	48(%rsi), %xmm2
	.loc	13 102 31 is_stmt 0     # solve_subs.c:102:31
	subsd	%xmm2, %xmm0
	.loc	13 103 33 is_stmt 1     # solve_subs.c:103:33
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 103 45 is_stmt 0     # solve_subs.c:103:45
	mulsd	56(%rsi), %xmm1
	.loc	13 103 31               # solve_subs.c:103:31
	subsd	%xmm1, %xmm0
	.loc	13 104 33 is_stmt 1     # solve_subs.c:104:33
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 104 45 is_stmt 0     # solve_subs.c:104:45
	mulsd	64(%rsi), %xmm1
	.loc	13 104 31               # solve_subs.c:104:31
	subsd	%xmm1, %xmm0
	.loc	13 105 33 is_stmt 1     # solve_subs.c:105:33
	movsd	160(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 105 45 is_stmt 0     # solve_subs.c:105:45
	mulsd	72(%rsi), %xmm1
	.loc	13 105 31               # solve_subs.c:105:31
	subsd	%xmm1, %xmm0
	.loc	13 101 16 is_stmt 1     # solve_subs.c:101:16
	movsd	%xmm0, 40(%rdx)
	.loc	13 106 18               # solve_subs.c:106:18
	movsd	48(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 106 33 is_stmt 0     # solve_subs.c:106:33
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
	.loc	13 107 33 is_stmt 1     # solve_subs.c:107:33
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 106 45               # solve_subs.c:106:45
	mulsd	40(%rsi), %xmm1
	.loc	13 106 31 is_stmt 0     # solve_subs.c:106:31
	subsd	%xmm1, %xmm0
	.loc	13 107 45 is_stmt 1     # solve_subs.c:107:45
	mulsd	48(%rsi), %xmm2
	.loc	13 107 31 is_stmt 0     # solve_subs.c:107:31
	subsd	%xmm2, %xmm0
	.loc	13 108 33 is_stmt 1     # solve_subs.c:108:33
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 108 45 is_stmt 0     # solve_subs.c:108:45
	mulsd	56(%rsi), %xmm1
	.loc	13 108 31               # solve_subs.c:108:31
	subsd	%xmm1, %xmm0
	.loc	13 109 33 is_stmt 1     # solve_subs.c:109:33
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 109 45 is_stmt 0     # solve_subs.c:109:45
	mulsd	64(%rsi), %xmm1
	.loc	13 109 31               # solve_subs.c:109:31
	subsd	%xmm1, %xmm0
	.loc	13 110 33 is_stmt 1     # solve_subs.c:110:33
	movsd	168(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 110 45 is_stmt 0     # solve_subs.c:110:45
	mulsd	72(%rsi), %xmm1
	.loc	13 110 31               # solve_subs.c:110:31
	subsd	%xmm1, %xmm0
	.loc	13 106 16 is_stmt 1     # solve_subs.c:106:16
	movsd	%xmm0, 48(%rdx)
	.loc	13 111 18               # solve_subs.c:111:18
	movsd	56(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 111 33 is_stmt 0     # solve_subs.c:111:33
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 112 33 is_stmt 1     # solve_subs.c:112:33
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 111 45               # solve_subs.c:111:45
	mulsd	40(%rsi), %xmm1
	.loc	13 111 31 is_stmt 0     # solve_subs.c:111:31
	subsd	%xmm1, %xmm0
	.loc	13 112 45 is_stmt 1     # solve_subs.c:112:45
	mulsd	48(%rsi), %xmm2
	.loc	13 112 31 is_stmt 0     # solve_subs.c:112:31
	subsd	%xmm2, %xmm0
	.loc	13 113 33 is_stmt 1     # solve_subs.c:113:33
	movsd	96(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 113 45 is_stmt 0     # solve_subs.c:113:45
	mulsd	56(%rsi), %xmm1
	.loc	13 113 31               # solve_subs.c:113:31
	subsd	%xmm1, %xmm0
	.loc	13 114 33 is_stmt 1     # solve_subs.c:114:33
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 114 45 is_stmt 0     # solve_subs.c:114:45
	mulsd	64(%rsi), %xmm1
	.loc	13 114 31               # solve_subs.c:114:31
	subsd	%xmm1, %xmm0
	.loc	13 115 33 is_stmt 1     # solve_subs.c:115:33
	movsd	176(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 115 45 is_stmt 0     # solve_subs.c:115:45
	mulsd	72(%rsi), %xmm1
	.loc	13 115 31               # solve_subs.c:115:31
	subsd	%xmm1, %xmm0
	.loc	13 111 16 is_stmt 1     # solve_subs.c:111:16
	movsd	%xmm0, 56(%rdx)
	.loc	13 116 18               # solve_subs.c:116:18
	movsd	64(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 116 33 is_stmt 0     # solve_subs.c:116:33
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 117 33 is_stmt 1     # solve_subs.c:117:33
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 116 45               # solve_subs.c:116:45
	mulsd	40(%rsi), %xmm1
	.loc	13 116 31 is_stmt 0     # solve_subs.c:116:31
	subsd	%xmm1, %xmm0
	.loc	13 117 45 is_stmt 1     # solve_subs.c:117:45
	mulsd	48(%rsi), %xmm2
	.loc	13 117 31 is_stmt 0     # solve_subs.c:117:31
	subsd	%xmm2, %xmm0
	.loc	13 118 33 is_stmt 1     # solve_subs.c:118:33
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 118 45 is_stmt 0     # solve_subs.c:118:45
	mulsd	56(%rsi), %xmm1
	.loc	13 118 31               # solve_subs.c:118:31
	subsd	%xmm1, %xmm0
	.loc	13 119 33 is_stmt 1     # solve_subs.c:119:33
	movsd	144(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 119 45 is_stmt 0     # solve_subs.c:119:45
	mulsd	64(%rsi), %xmm1
	.loc	13 119 31               # solve_subs.c:119:31
	subsd	%xmm1, %xmm0
	.loc	13 120 33 is_stmt 1     # solve_subs.c:120:33
	movsd	184(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 120 45 is_stmt 0     # solve_subs.c:120:45
	mulsd	72(%rsi), %xmm1
	.loc	13 120 31               # solve_subs.c:120:31
	subsd	%xmm1, %xmm0
	.loc	13 116 16 is_stmt 1     # solve_subs.c:116:16
	movsd	%xmm0, 64(%rdx)
	.loc	13 121 18               # solve_subs.c:121:18
	movsd	72(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 121 33 is_stmt 0     # solve_subs.c:121:33
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 122 33 is_stmt 1     # solve_subs.c:122:33
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 121 45               # solve_subs.c:121:45
	mulsd	40(%rsi), %xmm1
	.loc	13 121 31 is_stmt 0     # solve_subs.c:121:31
	subsd	%xmm1, %xmm0
	.loc	13 122 45 is_stmt 1     # solve_subs.c:122:45
	mulsd	48(%rsi), %xmm2
	.loc	13 122 31 is_stmt 0     # solve_subs.c:122:31
	subsd	%xmm2, %xmm0
	.loc	13 123 33 is_stmt 1     # solve_subs.c:123:33
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 123 45 is_stmt 0     # solve_subs.c:123:45
	mulsd	56(%rsi), %xmm1
	.loc	13 123 31               # solve_subs.c:123:31
	subsd	%xmm1, %xmm0
	.loc	13 124 33 is_stmt 1     # solve_subs.c:124:33
	movsd	152(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 124 45 is_stmt 0     # solve_subs.c:124:45
	mulsd	64(%rsi), %xmm1
	.loc	13 124 31               # solve_subs.c:124:31
	subsd	%xmm1, %xmm0
	.loc	13 125 33 is_stmt 1     # solve_subs.c:125:33
	movsd	192(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 125 45 is_stmt 0     # solve_subs.c:125:45
	mulsd	72(%rsi), %xmm1
	.loc	13 125 31               # solve_subs.c:125:31
	subsd	%xmm1, %xmm0
	.loc	13 121 16 is_stmt 1     # solve_subs.c:121:16
	movsd	%xmm0, 72(%rdx)
	.loc	13 126 18               # solve_subs.c:126:18
	movsd	80(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 126 33 is_stmt 0     # solve_subs.c:126:33
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	13 127 33 is_stmt 1     # solve_subs.c:127:33
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 126 45               # solve_subs.c:126:45
	mulsd	80(%rsi), %xmm1
	.loc	13 126 31 is_stmt 0     # solve_subs.c:126:31
	subsd	%xmm1, %xmm0
	.loc	13 127 45 is_stmt 1     # solve_subs.c:127:45
	mulsd	88(%rsi), %xmm2
	.loc	13 127 31 is_stmt 0     # solve_subs.c:127:31
	subsd	%xmm2, %xmm0
	.loc	13 128 33 is_stmt 1     # solve_subs.c:128:33
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 128 45 is_stmt 0     # solve_subs.c:128:45
	mulsd	96(%rsi), %xmm1
	.loc	13 128 31               # solve_subs.c:128:31
	subsd	%xmm1, %xmm0
	.loc	13 129 33 is_stmt 1     # solve_subs.c:129:33
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 129 45 is_stmt 0     # solve_subs.c:129:45
	mulsd	104(%rsi), %xmm1
	.loc	13 129 31               # solve_subs.c:129:31
	subsd	%xmm1, %xmm0
	.loc	13 130 33 is_stmt 1     # solve_subs.c:130:33
	movsd	160(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 130 45 is_stmt 0     # solve_subs.c:130:45
	mulsd	112(%rsi), %xmm1
	.loc	13 130 31               # solve_subs.c:130:31
	subsd	%xmm1, %xmm0
	.loc	13 126 16 is_stmt 1     # solve_subs.c:126:16
	movsd	%xmm0, 80(%rdx)
	.loc	13 131 18               # solve_subs.c:131:18
	movsd	88(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 131 33 is_stmt 0     # solve_subs.c:131:33
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
	.loc	13 132 33 is_stmt 1     # solve_subs.c:132:33
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 131 45               # solve_subs.c:131:45
	mulsd	80(%rsi), %xmm1
	.loc	13 131 31 is_stmt 0     # solve_subs.c:131:31
	subsd	%xmm1, %xmm0
	.loc	13 132 45 is_stmt 1     # solve_subs.c:132:45
	mulsd	88(%rsi), %xmm2
	.loc	13 132 31 is_stmt 0     # solve_subs.c:132:31
	subsd	%xmm2, %xmm0
	.loc	13 133 33 is_stmt 1     # solve_subs.c:133:33
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 133 45 is_stmt 0     # solve_subs.c:133:45
	mulsd	96(%rsi), %xmm1
	.loc	13 133 31               # solve_subs.c:133:31
	subsd	%xmm1, %xmm0
	.loc	13 134 33 is_stmt 1     # solve_subs.c:134:33
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 134 45 is_stmt 0     # solve_subs.c:134:45
	mulsd	104(%rsi), %xmm1
	.loc	13 134 31               # solve_subs.c:134:31
	subsd	%xmm1, %xmm0
	.loc	13 135 33 is_stmt 1     # solve_subs.c:135:33
	movsd	168(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 135 45 is_stmt 0     # solve_subs.c:135:45
	mulsd	112(%rsi), %xmm1
	.loc	13 135 31               # solve_subs.c:135:31
	subsd	%xmm1, %xmm0
	.loc	13 131 16 is_stmt 1     # solve_subs.c:131:16
	movsd	%xmm0, 88(%rdx)
	.loc	13 136 18               # solve_subs.c:136:18
	movsd	96(%rdx), %xmm0         # xmm0 = mem[0],zero
	.loc	13 136 33 is_stmt 0     # solve_subs.c:136:33
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 137 33 is_stmt 1     # solve_subs.c:137:33
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 136 45               # solve_subs.c:136:45
	mulsd	80(%rsi), %xmm1
	.loc	13 136 31 is_stmt 0     # solve_subs.c:136:31
	subsd	%xmm1, %xmm0
	.loc	13 137 45 is_stmt 1     # solve_subs.c:137:45
	mulsd	88(%rsi), %xmm2
	.loc	13 137 31 is_stmt 0     # solve_subs.c:137:31
	subsd	%xmm2, %xmm0
	.loc	13 138 33 is_stmt 1     # solve_subs.c:138:33
	movsd	96(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 138 45 is_stmt 0     # solve_subs.c:138:45
	mulsd	96(%rsi), %xmm1
	.loc	13 138 31               # solve_subs.c:138:31
	subsd	%xmm1, %xmm0
	.loc	13 139 33 is_stmt 1     # solve_subs.c:139:33
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 139 45 is_stmt 0     # solve_subs.c:139:45
	mulsd	104(%rsi), %xmm1
	.loc	13 139 31               # solve_subs.c:139:31
	subsd	%xmm1, %xmm0
	.loc	13 140 33 is_stmt 1     # solve_subs.c:140:33
	movsd	176(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 140 45 is_stmt 0     # solve_subs.c:140:45
	mulsd	112(%rsi), %xmm1
	.loc	13 140 31               # solve_subs.c:140:31
	subsd	%xmm1, %xmm0
	.loc	13 136 16 is_stmt 1     # solve_subs.c:136:16
	movsd	%xmm0, 96(%rdx)
	.loc	13 141 18               # solve_subs.c:141:18
	movsd	104(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 141 33 is_stmt 0     # solve_subs.c:141:33
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 142 33 is_stmt 1     # solve_subs.c:142:33
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 141 45               # solve_subs.c:141:45
	mulsd	80(%rsi), %xmm1
	.loc	13 141 31 is_stmt 0     # solve_subs.c:141:31
	subsd	%xmm1, %xmm0
	.loc	13 142 45 is_stmt 1     # solve_subs.c:142:45
	mulsd	88(%rsi), %xmm2
	.loc	13 142 31 is_stmt 0     # solve_subs.c:142:31
	subsd	%xmm2, %xmm0
	.loc	13 143 33 is_stmt 1     # solve_subs.c:143:33
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 143 45 is_stmt 0     # solve_subs.c:143:45
	mulsd	96(%rsi), %xmm1
	.loc	13 143 31               # solve_subs.c:143:31
	subsd	%xmm1, %xmm0
	.loc	13 144 33 is_stmt 1     # solve_subs.c:144:33
	movsd	144(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 144 45 is_stmt 0     # solve_subs.c:144:45
	mulsd	104(%rsi), %xmm1
	.loc	13 144 31               # solve_subs.c:144:31
	subsd	%xmm1, %xmm0
	.loc	13 145 33 is_stmt 1     # solve_subs.c:145:33
	movsd	184(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 145 45 is_stmt 0     # solve_subs.c:145:45
	mulsd	112(%rsi), %xmm1
	.loc	13 145 31               # solve_subs.c:145:31
	subsd	%xmm1, %xmm0
	.loc	13 141 16 is_stmt 1     # solve_subs.c:141:16
	movsd	%xmm0, 104(%rdx)
	.loc	13 146 18               # solve_subs.c:146:18
	movsd	112(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 146 33 is_stmt 0     # solve_subs.c:146:33
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 147 33 is_stmt 1     # solve_subs.c:147:33
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 146 45               # solve_subs.c:146:45
	mulsd	80(%rsi), %xmm1
	.loc	13 146 31 is_stmt 0     # solve_subs.c:146:31
	subsd	%xmm1, %xmm0
	.loc	13 147 45 is_stmt 1     # solve_subs.c:147:45
	mulsd	88(%rsi), %xmm2
	.loc	13 147 31 is_stmt 0     # solve_subs.c:147:31
	subsd	%xmm2, %xmm0
	.loc	13 148 33 is_stmt 1     # solve_subs.c:148:33
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 148 45 is_stmt 0     # solve_subs.c:148:45
	mulsd	96(%rsi), %xmm1
	.loc	13 148 31               # solve_subs.c:148:31
	subsd	%xmm1, %xmm0
	.loc	13 149 33 is_stmt 1     # solve_subs.c:149:33
	movsd	152(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 149 45 is_stmt 0     # solve_subs.c:149:45
	mulsd	104(%rsi), %xmm1
	.loc	13 149 31               # solve_subs.c:149:31
	subsd	%xmm1, %xmm0
	.loc	13 150 33 is_stmt 1     # solve_subs.c:150:33
	movsd	192(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 150 45 is_stmt 0     # solve_subs.c:150:45
	mulsd	112(%rsi), %xmm1
	.loc	13 150 31               # solve_subs.c:150:31
	subsd	%xmm1, %xmm0
	.loc	13 146 16 is_stmt 1     # solve_subs.c:146:16
	movsd	%xmm0, 112(%rdx)
	.loc	13 151 18               # solve_subs.c:151:18
	movsd	120(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 151 33 is_stmt 0     # solve_subs.c:151:33
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	13 152 33 is_stmt 1     # solve_subs.c:152:33
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 151 45               # solve_subs.c:151:45
	mulsd	120(%rsi), %xmm1
	.loc	13 151 31 is_stmt 0     # solve_subs.c:151:31
	subsd	%xmm1, %xmm0
	.loc	13 152 45 is_stmt 1     # solve_subs.c:152:45
	mulsd	128(%rsi), %xmm2
	.loc	13 152 31 is_stmt 0     # solve_subs.c:152:31
	subsd	%xmm2, %xmm0
	.loc	13 153 33 is_stmt 1     # solve_subs.c:153:33
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 153 45 is_stmt 0     # solve_subs.c:153:45
	mulsd	136(%rsi), %xmm1
	.loc	13 153 31               # solve_subs.c:153:31
	subsd	%xmm1, %xmm0
	.loc	13 154 33 is_stmt 1     # solve_subs.c:154:33
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 154 45 is_stmt 0     # solve_subs.c:154:45
	mulsd	144(%rsi), %xmm1
	.loc	13 154 31               # solve_subs.c:154:31
	subsd	%xmm1, %xmm0
	.loc	13 155 33 is_stmt 1     # solve_subs.c:155:33
	movsd	160(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 155 45 is_stmt 0     # solve_subs.c:155:45
	mulsd	152(%rsi), %xmm1
	.loc	13 155 31               # solve_subs.c:155:31
	subsd	%xmm1, %xmm0
	.loc	13 151 16 is_stmt 1     # solve_subs.c:151:16
	movsd	%xmm0, 120(%rdx)
	.loc	13 156 18               # solve_subs.c:156:18
	movsd	128(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 156 33 is_stmt 0     # solve_subs.c:156:33
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
	.loc	13 157 33 is_stmt 1     # solve_subs.c:157:33
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 156 45               # solve_subs.c:156:45
	mulsd	120(%rsi), %xmm1
	.loc	13 156 31 is_stmt 0     # solve_subs.c:156:31
	subsd	%xmm1, %xmm0
	.loc	13 157 45 is_stmt 1     # solve_subs.c:157:45
	mulsd	128(%rsi), %xmm2
	.loc	13 157 31 is_stmt 0     # solve_subs.c:157:31
	subsd	%xmm2, %xmm0
	.loc	13 158 33 is_stmt 1     # solve_subs.c:158:33
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 158 45 is_stmt 0     # solve_subs.c:158:45
	mulsd	136(%rsi), %xmm1
	.loc	13 158 31               # solve_subs.c:158:31
	subsd	%xmm1, %xmm0
	.loc	13 159 33 is_stmt 1     # solve_subs.c:159:33
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 159 45 is_stmt 0     # solve_subs.c:159:45
	mulsd	144(%rsi), %xmm1
	.loc	13 159 31               # solve_subs.c:159:31
	subsd	%xmm1, %xmm0
	.loc	13 160 33 is_stmt 1     # solve_subs.c:160:33
	movsd	168(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 160 45 is_stmt 0     # solve_subs.c:160:45
	mulsd	152(%rsi), %xmm1
	.loc	13 160 31               # solve_subs.c:160:31
	subsd	%xmm1, %xmm0
	.loc	13 156 16 is_stmt 1     # solve_subs.c:156:16
	movsd	%xmm0, 128(%rdx)
	.loc	13 161 18               # solve_subs.c:161:18
	movsd	136(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 161 33 is_stmt 0     # solve_subs.c:161:33
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 162 33 is_stmt 1     # solve_subs.c:162:33
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 161 45               # solve_subs.c:161:45
	mulsd	120(%rsi), %xmm1
	.loc	13 161 31 is_stmt 0     # solve_subs.c:161:31
	subsd	%xmm1, %xmm0
	.loc	13 162 45 is_stmt 1     # solve_subs.c:162:45
	mulsd	128(%rsi), %xmm2
	.loc	13 162 31 is_stmt 0     # solve_subs.c:162:31
	subsd	%xmm2, %xmm0
	.loc	13 163 33 is_stmt 1     # solve_subs.c:163:33
	movsd	96(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 163 45 is_stmt 0     # solve_subs.c:163:45
	mulsd	136(%rsi), %xmm1
	.loc	13 163 31               # solve_subs.c:163:31
	subsd	%xmm1, %xmm0
	.loc	13 164 33 is_stmt 1     # solve_subs.c:164:33
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 164 45 is_stmt 0     # solve_subs.c:164:45
	mulsd	144(%rsi), %xmm1
	.loc	13 164 31               # solve_subs.c:164:31
	subsd	%xmm1, %xmm0
	.loc	13 165 33 is_stmt 1     # solve_subs.c:165:33
	movsd	176(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 165 45 is_stmt 0     # solve_subs.c:165:45
	mulsd	152(%rsi), %xmm1
	.loc	13 165 31               # solve_subs.c:165:31
	subsd	%xmm1, %xmm0
	.loc	13 161 16 is_stmt 1     # solve_subs.c:161:16
	movsd	%xmm0, 136(%rdx)
	.loc	13 166 18               # solve_subs.c:166:18
	movsd	144(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 166 33 is_stmt 0     # solve_subs.c:166:33
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 167 33 is_stmt 1     # solve_subs.c:167:33
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 166 45               # solve_subs.c:166:45
	mulsd	120(%rsi), %xmm1
	.loc	13 166 31 is_stmt 0     # solve_subs.c:166:31
	subsd	%xmm1, %xmm0
	.loc	13 167 45 is_stmt 1     # solve_subs.c:167:45
	mulsd	128(%rsi), %xmm2
	.loc	13 167 31 is_stmt 0     # solve_subs.c:167:31
	subsd	%xmm2, %xmm0
	.loc	13 168 33 is_stmt 1     # solve_subs.c:168:33
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 168 45 is_stmt 0     # solve_subs.c:168:45
	mulsd	136(%rsi), %xmm1
	.loc	13 168 31               # solve_subs.c:168:31
	subsd	%xmm1, %xmm0
	.loc	13 169 33 is_stmt 1     # solve_subs.c:169:33
	movsd	144(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 169 45 is_stmt 0     # solve_subs.c:169:45
	mulsd	144(%rsi), %xmm1
	.loc	13 169 31               # solve_subs.c:169:31
	subsd	%xmm1, %xmm0
	.loc	13 170 33 is_stmt 1     # solve_subs.c:170:33
	movsd	184(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 170 45 is_stmt 0     # solve_subs.c:170:45
	mulsd	152(%rsi), %xmm1
	.loc	13 170 31               # solve_subs.c:170:31
	subsd	%xmm1, %xmm0
	.loc	13 166 16 is_stmt 1     # solve_subs.c:166:16
	movsd	%xmm0, 144(%rdx)
	.loc	13 171 18               # solve_subs.c:171:18
	movsd	152(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 171 33 is_stmt 0     # solve_subs.c:171:33
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 172 33 is_stmt 1     # solve_subs.c:172:33
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 171 45               # solve_subs.c:171:45
	mulsd	120(%rsi), %xmm1
	.loc	13 171 31 is_stmt 0     # solve_subs.c:171:31
	subsd	%xmm1, %xmm0
	.loc	13 172 45 is_stmt 1     # solve_subs.c:172:45
	mulsd	128(%rsi), %xmm2
	.loc	13 172 31 is_stmt 0     # solve_subs.c:172:31
	subsd	%xmm2, %xmm0
	.loc	13 173 33 is_stmt 1     # solve_subs.c:173:33
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 173 45 is_stmt 0     # solve_subs.c:173:45
	mulsd	136(%rsi), %xmm1
	.loc	13 173 31               # solve_subs.c:173:31
	subsd	%xmm1, %xmm0
	.loc	13 174 33 is_stmt 1     # solve_subs.c:174:33
	movsd	152(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 174 45 is_stmt 0     # solve_subs.c:174:45
	mulsd	144(%rsi), %xmm1
	.loc	13 174 31               # solve_subs.c:174:31
	subsd	%xmm1, %xmm0
	.loc	13 175 33 is_stmt 1     # solve_subs.c:175:33
	movsd	192(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 175 45 is_stmt 0     # solve_subs.c:175:45
	mulsd	152(%rsi), %xmm1
	.loc	13 175 31               # solve_subs.c:175:31
	subsd	%xmm1, %xmm0
	.loc	13 171 16 is_stmt 1     # solve_subs.c:171:16
	movsd	%xmm0, 152(%rdx)
	.loc	13 176 18               # solve_subs.c:176:18
	movsd	160(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 176 33 is_stmt 0     # solve_subs.c:176:33
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	13 177 33 is_stmt 1     # solve_subs.c:177:33
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 176 45               # solve_subs.c:176:45
	mulsd	160(%rsi), %xmm1
	.loc	13 176 31 is_stmt 0     # solve_subs.c:176:31
	subsd	%xmm1, %xmm0
	.loc	13 177 45 is_stmt 1     # solve_subs.c:177:45
	mulsd	168(%rsi), %xmm2
	.loc	13 177 31 is_stmt 0     # solve_subs.c:177:31
	subsd	%xmm2, %xmm0
	.loc	13 178 33 is_stmt 1     # solve_subs.c:178:33
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 178 45 is_stmt 0     # solve_subs.c:178:45
	mulsd	176(%rsi), %xmm1
	.loc	13 178 31               # solve_subs.c:178:31
	subsd	%xmm1, %xmm0
	.loc	13 179 33 is_stmt 1     # solve_subs.c:179:33
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 179 45 is_stmt 0     # solve_subs.c:179:45
	mulsd	184(%rsi), %xmm1
	.loc	13 179 31               # solve_subs.c:179:31
	subsd	%xmm1, %xmm0
	.loc	13 180 33 is_stmt 1     # solve_subs.c:180:33
	movsd	160(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 180 45 is_stmt 0     # solve_subs.c:180:45
	mulsd	192(%rsi), %xmm1
	.loc	13 180 31               # solve_subs.c:180:31
	subsd	%xmm1, %xmm0
	.loc	13 176 16 is_stmt 1     # solve_subs.c:176:16
	movsd	%xmm0, 160(%rdx)
	.loc	13 181 18               # solve_subs.c:181:18
	movsd	168(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 181 33 is_stmt 0     # solve_subs.c:181:33
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
	.loc	13 182 33 is_stmt 1     # solve_subs.c:182:33
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 181 45               # solve_subs.c:181:45
	mulsd	160(%rsi), %xmm1
	.loc	13 181 31 is_stmt 0     # solve_subs.c:181:31
	subsd	%xmm1, %xmm0
	.loc	13 182 45 is_stmt 1     # solve_subs.c:182:45
	mulsd	168(%rsi), %xmm2
	.loc	13 182 31 is_stmt 0     # solve_subs.c:182:31
	subsd	%xmm2, %xmm0
	.loc	13 183 33 is_stmt 1     # solve_subs.c:183:33
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 183 45 is_stmt 0     # solve_subs.c:183:45
	mulsd	176(%rsi), %xmm1
	.loc	13 183 31               # solve_subs.c:183:31
	subsd	%xmm1, %xmm0
	.loc	13 184 33 is_stmt 1     # solve_subs.c:184:33
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 184 45 is_stmt 0     # solve_subs.c:184:45
	mulsd	184(%rsi), %xmm1
	.loc	13 184 31               # solve_subs.c:184:31
	subsd	%xmm1, %xmm0
	.loc	13 185 33 is_stmt 1     # solve_subs.c:185:33
	movsd	168(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 185 45 is_stmt 0     # solve_subs.c:185:45
	mulsd	192(%rsi), %xmm1
	.loc	13 185 31               # solve_subs.c:185:31
	subsd	%xmm1, %xmm0
	.loc	13 181 16 is_stmt 1     # solve_subs.c:181:16
	movsd	%xmm0, 168(%rdx)
	.loc	13 186 18               # solve_subs.c:186:18
	movsd	176(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 186 33 is_stmt 0     # solve_subs.c:186:33
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 187 33 is_stmt 1     # solve_subs.c:187:33
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 186 45               # solve_subs.c:186:45
	mulsd	160(%rsi), %xmm1
	.loc	13 186 31 is_stmt 0     # solve_subs.c:186:31
	subsd	%xmm1, %xmm0
	.loc	13 187 45 is_stmt 1     # solve_subs.c:187:45
	mulsd	168(%rsi), %xmm2
	.loc	13 187 31 is_stmt 0     # solve_subs.c:187:31
	subsd	%xmm2, %xmm0
	.loc	13 188 33 is_stmt 1     # solve_subs.c:188:33
	movsd	96(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 188 45 is_stmt 0     # solve_subs.c:188:45
	mulsd	176(%rsi), %xmm1
	.loc	13 188 31               # solve_subs.c:188:31
	subsd	%xmm1, %xmm0
	.loc	13 189 33 is_stmt 1     # solve_subs.c:189:33
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 189 45 is_stmt 0     # solve_subs.c:189:45
	mulsd	184(%rsi), %xmm1
	.loc	13 189 31               # solve_subs.c:189:31
	subsd	%xmm1, %xmm0
	.loc	13 190 33 is_stmt 1     # solve_subs.c:190:33
	movsd	176(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 190 45 is_stmt 0     # solve_subs.c:190:45
	mulsd	192(%rsi), %xmm1
	.loc	13 190 31               # solve_subs.c:190:31
	subsd	%xmm1, %xmm0
	.loc	13 186 16 is_stmt 1     # solve_subs.c:186:16
	movsd	%xmm0, 176(%rdx)
	.loc	13 191 18               # solve_subs.c:191:18
	movsd	184(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 191 33 is_stmt 0     # solve_subs.c:191:33
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 192 33 is_stmt 1     # solve_subs.c:192:33
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 191 45               # solve_subs.c:191:45
	mulsd	160(%rsi), %xmm1
	.loc	13 191 31 is_stmt 0     # solve_subs.c:191:31
	subsd	%xmm1, %xmm0
	.loc	13 192 45 is_stmt 1     # solve_subs.c:192:45
	mulsd	168(%rsi), %xmm2
	.loc	13 192 31 is_stmt 0     # solve_subs.c:192:31
	subsd	%xmm2, %xmm0
	.loc	13 193 33 is_stmt 1     # solve_subs.c:193:33
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 193 45 is_stmt 0     # solve_subs.c:193:45
	mulsd	176(%rsi), %xmm1
	.loc	13 193 31               # solve_subs.c:193:31
	subsd	%xmm1, %xmm0
	.loc	13 194 33 is_stmt 1     # solve_subs.c:194:33
	movsd	144(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 194 45 is_stmt 0     # solve_subs.c:194:45
	mulsd	184(%rsi), %xmm1
	.loc	13 194 31               # solve_subs.c:194:31
	subsd	%xmm1, %xmm0
	.loc	13 195 33 is_stmt 1     # solve_subs.c:195:33
	movsd	184(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 195 45 is_stmt 0     # solve_subs.c:195:45
	mulsd	192(%rsi), %xmm1
	.loc	13 195 31               # solve_subs.c:195:31
	subsd	%xmm1, %xmm0
	.loc	13 191 16 is_stmt 1     # solve_subs.c:191:16
	movsd	%xmm0, 184(%rdx)
	.loc	13 196 18               # solve_subs.c:196:18
	movsd	192(%rdx), %xmm0        # xmm0 = mem[0],zero
	.loc	13 196 33 is_stmt 0     # solve_subs.c:196:33
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 197 33 is_stmt 1     # solve_subs.c:197:33
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 196 45               # solve_subs.c:196:45
	mulsd	160(%rsi), %xmm1
	.loc	13 196 31 is_stmt 0     # solve_subs.c:196:31
	subsd	%xmm1, %xmm0
	.loc	13 197 45 is_stmt 1     # solve_subs.c:197:45
	mulsd	168(%rsi), %xmm2
	.loc	13 197 31 is_stmt 0     # solve_subs.c:197:31
	subsd	%xmm2, %xmm0
	.loc	13 198 33 is_stmt 1     # solve_subs.c:198:33
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 198 45 is_stmt 0     # solve_subs.c:198:45
	mulsd	176(%rsi), %xmm1
	.loc	13 198 31               # solve_subs.c:198:31
	subsd	%xmm1, %xmm0
	.loc	13 199 33 is_stmt 1     # solve_subs.c:199:33
	movsd	152(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 199 45 is_stmt 0     # solve_subs.c:199:45
	mulsd	184(%rsi), %xmm1
	.loc	13 199 31               # solve_subs.c:199:31
	subsd	%xmm1, %xmm0
	.loc	13 200 33 is_stmt 1     # solve_subs.c:200:33
	movsd	192(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	13 200 45 is_stmt 0     # solve_subs.c:200:45
	mulsd	192(%rsi), %xmm1
	.loc	13 200 31               # solve_subs.c:200:31
	subsd	%xmm1, %xmm0
	.loc	13 196 16 is_stmt 1     # solve_subs.c:196:16
	movsd	%xmm0, 192(%rdx)
	.loc	13 201 1                # solve_subs.c:201:1
	retq
.Ltmp768:
.Lfunc_end11:
	.size	matmul_sub, .Lfunc_end11-matmul_sub
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI12_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	binvrhs
	.p2align	4, 0x90
	.type	binvrhs,@function
binvrhs:                                # @binvrhs
.Lfunc_begin12:
	.loc	13 465 0                # solve_subs.c:465:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: binvrhs:lhs <- %RDI
	#DEBUG_VALUE: binvrhs:r <- %RSI
	.loc	13 468 15 prologue_end  # solve_subs.c:468:15
	movsd	.LCPI12_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm1
	divsd	(%rdi), %xmm1
.Ltmp769:
	#DEBUG_VALUE: binvrhs:pivot <- %XMM1
	movsd	40(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 469 24               # solve_subs.c:469:24
	mulsd	%xmm1, %xmm2
	.loc	13 469 13 is_stmt 0     # solve_subs.c:469:13
	movsd	%xmm2, 40(%rdi)
	movsd	80(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 470 24 is_stmt 1     # solve_subs.c:470:24
	mulsd	%xmm1, %xmm2
	.loc	13 470 13 is_stmt 0     # solve_subs.c:470:13
	movsd	%xmm2, 80(%rdi)
	movsd	120(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 471 24 is_stmt 1     # solve_subs.c:471:24
	mulsd	%xmm1, %xmm2
	.loc	13 471 13 is_stmt 0     # solve_subs.c:471:13
	movsd	%xmm2, 120(%rdi)
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 472 24 is_stmt 1     # solve_subs.c:472:24
	mulsd	%xmm1, %xmm2
	.loc	13 472 13 is_stmt 0     # solve_subs.c:472:13
	movsd	%xmm2, 160(%rdi)
	.loc	13 473 18 is_stmt 1     # solve_subs.c:473:18
	mulsd	(%rsi), %xmm1
.Ltmp770:
	.loc	13 473 10 is_stmt 0     # solve_subs.c:473:10
	movsd	%xmm1, (%rsi)
	.loc	13 475 11 is_stmt 1     # solve_subs.c:475:11
	movsd	8(%rdi), %xmm1          # xmm1 = mem[0],zero
.Ltmp771:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 476 14               # solve_subs.c:476:14
	movsd	48(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 476 31 is_stmt 0     # solve_subs.c:476:31
	mulsd	%xmm1, %xmm3
	.loc	13 476 24               # solve_subs.c:476:24
	subsd	%xmm3, %xmm2
	.loc	13 476 12               # solve_subs.c:476:12
	movsd	%xmm2, 48(%rdi)
	.loc	13 477 14 is_stmt 1     # solve_subs.c:477:14
	movsd	88(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 477 31 is_stmt 0     # solve_subs.c:477:31
	mulsd	%xmm1, %xmm3
	.loc	13 477 24               # solve_subs.c:477:24
	subsd	%xmm3, %xmm2
	.loc	13 477 12               # solve_subs.c:477:12
	movsd	%xmm2, 88(%rdi)
	.loc	13 478 14 is_stmt 1     # solve_subs.c:478:14
	movsd	128(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 478 31 is_stmt 0     # solve_subs.c:478:31
	mulsd	%xmm1, %xmm3
	.loc	13 478 24               # solve_subs.c:478:24
	subsd	%xmm3, %xmm2
	.loc	13 478 12               # solve_subs.c:478:12
	movsd	%xmm2, 128(%rdi)
	.loc	13 479 14 is_stmt 1     # solve_subs.c:479:14
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 479 31 is_stmt 0     # solve_subs.c:479:31
	mulsd	%xmm1, %xmm3
	.loc	13 479 24               # solve_subs.c:479:24
	subsd	%xmm3, %xmm2
	.loc	13 479 12               # solve_subs.c:479:12
	movsd	%xmm2, 168(%rdi)
	.loc	13 480 12 is_stmt 1     # solve_subs.c:480:12
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	.loc	13 480 26 is_stmt 0     # solve_subs.c:480:26
	mulsd	(%rsi), %xmm1
.Ltmp772:
	.loc	13 480 19               # solve_subs.c:480:19
	subsd	%xmm1, %xmm2
	.loc	13 480 10               # solve_subs.c:480:10
	movsd	%xmm2, 8(%rsi)
	.loc	13 482 11 is_stmt 1     # solve_subs.c:482:11
	movsd	16(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp773:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 483 14               # solve_subs.c:483:14
	movsd	56(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 483 31 is_stmt 0     # solve_subs.c:483:31
	mulsd	%xmm1, %xmm3
	.loc	13 483 24               # solve_subs.c:483:24
	subsd	%xmm3, %xmm2
	.loc	13 483 12               # solve_subs.c:483:12
	movsd	%xmm2, 56(%rdi)
	.loc	13 484 14 is_stmt 1     # solve_subs.c:484:14
	movsd	96(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 484 31 is_stmt 0     # solve_subs.c:484:31
	mulsd	%xmm1, %xmm3
	.loc	13 484 24               # solve_subs.c:484:24
	subsd	%xmm3, %xmm2
	.loc	13 484 12               # solve_subs.c:484:12
	movsd	%xmm2, 96(%rdi)
	.loc	13 485 14 is_stmt 1     # solve_subs.c:485:14
	movsd	136(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 485 31 is_stmt 0     # solve_subs.c:485:31
	mulsd	%xmm1, %xmm3
	.loc	13 485 24               # solve_subs.c:485:24
	subsd	%xmm3, %xmm2
	.loc	13 485 12               # solve_subs.c:485:12
	movsd	%xmm2, 136(%rdi)
	.loc	13 486 14 is_stmt 1     # solve_subs.c:486:14
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 486 31 is_stmt 0     # solve_subs.c:486:31
	mulsd	%xmm1, %xmm3
	.loc	13 486 24               # solve_subs.c:486:24
	subsd	%xmm3, %xmm2
	.loc	13 486 12               # solve_subs.c:486:12
	movsd	%xmm2, 176(%rdi)
	.loc	13 487 12 is_stmt 1     # solve_subs.c:487:12
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 487 26 is_stmt 0     # solve_subs.c:487:26
	mulsd	(%rsi), %xmm1
.Ltmp774:
	.loc	13 487 19               # solve_subs.c:487:19
	subsd	%xmm1, %xmm2
	.loc	13 487 10               # solve_subs.c:487:10
	movsd	%xmm2, 16(%rsi)
	.loc	13 489 11 is_stmt 1     # solve_subs.c:489:11
	movsd	24(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp775:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 490 14               # solve_subs.c:490:14
	movsd	64(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 490 31 is_stmt 0     # solve_subs.c:490:31
	mulsd	%xmm1, %xmm3
	.loc	13 490 24               # solve_subs.c:490:24
	subsd	%xmm3, %xmm2
	.loc	13 490 12               # solve_subs.c:490:12
	movsd	%xmm2, 64(%rdi)
	.loc	13 491 14 is_stmt 1     # solve_subs.c:491:14
	movsd	104(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 491 31 is_stmt 0     # solve_subs.c:491:31
	mulsd	%xmm1, %xmm3
	.loc	13 491 24               # solve_subs.c:491:24
	subsd	%xmm3, %xmm2
	.loc	13 491 12               # solve_subs.c:491:12
	movsd	%xmm2, 104(%rdi)
	.loc	13 492 14 is_stmt 1     # solve_subs.c:492:14
	movsd	144(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 492 31 is_stmt 0     # solve_subs.c:492:31
	mulsd	%xmm1, %xmm3
	.loc	13 492 24               # solve_subs.c:492:24
	subsd	%xmm3, %xmm2
	.loc	13 492 12               # solve_subs.c:492:12
	movsd	%xmm2, 144(%rdi)
	.loc	13 493 14 is_stmt 1     # solve_subs.c:493:14
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 493 31 is_stmt 0     # solve_subs.c:493:31
	mulsd	%xmm1, %xmm3
	.loc	13 493 24               # solve_subs.c:493:24
	subsd	%xmm3, %xmm2
	.loc	13 493 12               # solve_subs.c:493:12
	movsd	%xmm2, 184(%rdi)
	.loc	13 494 12 is_stmt 1     # solve_subs.c:494:12
	movsd	24(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 494 26 is_stmt 0     # solve_subs.c:494:26
	mulsd	(%rsi), %xmm1
.Ltmp776:
	.loc	13 494 19               # solve_subs.c:494:19
	subsd	%xmm1, %xmm2
	.loc	13 494 10               # solve_subs.c:494:10
	movsd	%xmm2, 24(%rsi)
	.loc	13 496 11 is_stmt 1     # solve_subs.c:496:11
	movsd	32(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp777:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 497 14               # solve_subs.c:497:14
	movsd	72(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	40(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 497 31 is_stmt 0     # solve_subs.c:497:31
	mulsd	%xmm1, %xmm3
	.loc	13 497 24               # solve_subs.c:497:24
	subsd	%xmm3, %xmm2
	.loc	13 497 12               # solve_subs.c:497:12
	movsd	%xmm2, 72(%rdi)
	.loc	13 498 14 is_stmt 1     # solve_subs.c:498:14
	movsd	112(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	80(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 498 31 is_stmt 0     # solve_subs.c:498:31
	mulsd	%xmm1, %xmm3
	.loc	13 498 24               # solve_subs.c:498:24
	subsd	%xmm3, %xmm2
	.loc	13 498 12               # solve_subs.c:498:12
	movsd	%xmm2, 112(%rdi)
	.loc	13 499 14 is_stmt 1     # solve_subs.c:499:14
	movsd	152(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	120(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 499 31 is_stmt 0     # solve_subs.c:499:31
	mulsd	%xmm1, %xmm3
	.loc	13 499 24               # solve_subs.c:499:24
	subsd	%xmm3, %xmm2
	.loc	13 499 12               # solve_subs.c:499:12
	movsd	%xmm2, 152(%rdi)
	.loc	13 500 14 is_stmt 1     # solve_subs.c:500:14
	movsd	192(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 500 31 is_stmt 0     # solve_subs.c:500:31
	mulsd	%xmm1, %xmm3
	.loc	13 500 24               # solve_subs.c:500:24
	subsd	%xmm3, %xmm2
	.loc	13 500 12               # solve_subs.c:500:12
	movsd	%xmm2, 192(%rdi)
	.loc	13 501 12 is_stmt 1     # solve_subs.c:501:12
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 501 26 is_stmt 0     # solve_subs.c:501:26
	mulsd	(%rsi), %xmm1
.Ltmp778:
	.loc	13 501 19               # solve_subs.c:501:19
	subsd	%xmm1, %xmm2
	.loc	13 501 10               # solve_subs.c:501:10
	movsd	%xmm2, 32(%rsi)
	.loc	13 504 15 is_stmt 1     # solve_subs.c:504:15
	movapd	%xmm0, %xmm1
	divsd	48(%rdi), %xmm1
.Ltmp779:
	#DEBUG_VALUE: binvrhs:pivot <- %XMM1
	movsd	88(%rdi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 505 24               # solve_subs.c:505:24
	mulsd	%xmm1, %xmm2
	.loc	13 505 13 is_stmt 0     # solve_subs.c:505:13
	movsd	%xmm2, 88(%rdi)
	movsd	128(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 506 24 is_stmt 1     # solve_subs.c:506:24
	mulsd	%xmm1, %xmm2
	.loc	13 506 13 is_stmt 0     # solve_subs.c:506:13
	movsd	%xmm2, 128(%rdi)
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 507 24 is_stmt 1     # solve_subs.c:507:24
	mulsd	%xmm1, %xmm2
	.loc	13 507 13 is_stmt 0     # solve_subs.c:507:13
	movsd	%xmm2, 168(%rdi)
	.loc	13 508 18 is_stmt 1     # solve_subs.c:508:18
	mulsd	8(%rsi), %xmm1
.Ltmp780:
	.loc	13 508 10 is_stmt 0     # solve_subs.c:508:10
	movsd	%xmm1, 8(%rsi)
	.loc	13 510 11 is_stmt 1     # solve_subs.c:510:11
	movsd	40(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp781:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 511 14               # solve_subs.c:511:14
	movsd	80(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 511 31 is_stmt 0     # solve_subs.c:511:31
	mulsd	%xmm1, %xmm3
	.loc	13 511 24               # solve_subs.c:511:24
	subsd	%xmm3, %xmm2
	.loc	13 511 12               # solve_subs.c:511:12
	movsd	%xmm2, 80(%rdi)
	.loc	13 512 14 is_stmt 1     # solve_subs.c:512:14
	movsd	120(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 512 31 is_stmt 0     # solve_subs.c:512:31
	mulsd	%xmm1, %xmm3
	.loc	13 512 24               # solve_subs.c:512:24
	subsd	%xmm3, %xmm2
	.loc	13 512 12               # solve_subs.c:512:12
	movsd	%xmm2, 120(%rdi)
	.loc	13 513 14 is_stmt 1     # solve_subs.c:513:14
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 513 31 is_stmt 0     # solve_subs.c:513:31
	mulsd	%xmm1, %xmm3
	.loc	13 513 24               # solve_subs.c:513:24
	subsd	%xmm3, %xmm2
	.loc	13 513 12               # solve_subs.c:513:12
	movsd	%xmm2, 160(%rdi)
	.loc	13 514 12 is_stmt 1     # solve_subs.c:514:12
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	.loc	13 514 26 is_stmt 0     # solve_subs.c:514:26
	mulsd	8(%rsi), %xmm1
.Ltmp782:
	.loc	13 514 19               # solve_subs.c:514:19
	subsd	%xmm1, %xmm2
	.loc	13 514 10               # solve_subs.c:514:10
	movsd	%xmm2, (%rsi)
	.loc	13 516 11 is_stmt 1     # solve_subs.c:516:11
	movsd	56(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp783:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 517 14               # solve_subs.c:517:14
	movsd	96(%rdi), %xmm2         # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 517 31 is_stmt 0     # solve_subs.c:517:31
	mulsd	%xmm1, %xmm3
	.loc	13 517 24               # solve_subs.c:517:24
	subsd	%xmm3, %xmm2
	.loc	13 517 12               # solve_subs.c:517:12
	movsd	%xmm2, 96(%rdi)
	.loc	13 518 14 is_stmt 1     # solve_subs.c:518:14
	movsd	136(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 518 31 is_stmt 0     # solve_subs.c:518:31
	mulsd	%xmm1, %xmm3
	.loc	13 518 24               # solve_subs.c:518:24
	subsd	%xmm3, %xmm2
	.loc	13 518 12               # solve_subs.c:518:12
	movsd	%xmm2, 136(%rdi)
	.loc	13 519 14 is_stmt 1     # solve_subs.c:519:14
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 519 31 is_stmt 0     # solve_subs.c:519:31
	mulsd	%xmm1, %xmm3
	.loc	13 519 24               # solve_subs.c:519:24
	subsd	%xmm3, %xmm2
	.loc	13 519 12               # solve_subs.c:519:12
	movsd	%xmm2, 176(%rdi)
	.loc	13 520 12 is_stmt 1     # solve_subs.c:520:12
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 520 26 is_stmt 0     # solve_subs.c:520:26
	mulsd	8(%rsi), %xmm1
.Ltmp784:
	.loc	13 520 19               # solve_subs.c:520:19
	subsd	%xmm1, %xmm2
	.loc	13 520 10               # solve_subs.c:520:10
	movsd	%xmm2, 16(%rsi)
	.loc	13 522 11 is_stmt 1     # solve_subs.c:522:11
	movsd	64(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp785:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 523 14               # solve_subs.c:523:14
	movsd	104(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 523 31 is_stmt 0     # solve_subs.c:523:31
	mulsd	%xmm1, %xmm3
	.loc	13 523 24               # solve_subs.c:523:24
	subsd	%xmm3, %xmm2
	.loc	13 523 12               # solve_subs.c:523:12
	movsd	%xmm2, 104(%rdi)
	.loc	13 524 14 is_stmt 1     # solve_subs.c:524:14
	movsd	144(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 524 31 is_stmt 0     # solve_subs.c:524:31
	mulsd	%xmm1, %xmm3
	.loc	13 524 24               # solve_subs.c:524:24
	subsd	%xmm3, %xmm2
	.loc	13 524 12               # solve_subs.c:524:12
	movsd	%xmm2, 144(%rdi)
	.loc	13 525 14 is_stmt 1     # solve_subs.c:525:14
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 525 31 is_stmt 0     # solve_subs.c:525:31
	mulsd	%xmm1, %xmm3
	.loc	13 525 24               # solve_subs.c:525:24
	subsd	%xmm3, %xmm2
	.loc	13 525 12               # solve_subs.c:525:12
	movsd	%xmm2, 184(%rdi)
	.loc	13 526 12 is_stmt 1     # solve_subs.c:526:12
	movsd	24(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 526 26 is_stmt 0     # solve_subs.c:526:26
	mulsd	8(%rsi), %xmm1
.Ltmp786:
	.loc	13 526 19               # solve_subs.c:526:19
	subsd	%xmm1, %xmm2
	.loc	13 526 10               # solve_subs.c:526:10
	movsd	%xmm2, 24(%rsi)
	.loc	13 528 11 is_stmt 1     # solve_subs.c:528:11
	movsd	72(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp787:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 529 14               # solve_subs.c:529:14
	movsd	112(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	88(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 529 31 is_stmt 0     # solve_subs.c:529:31
	mulsd	%xmm1, %xmm3
	.loc	13 529 24               # solve_subs.c:529:24
	subsd	%xmm3, %xmm2
	.loc	13 529 12               # solve_subs.c:529:12
	movsd	%xmm2, 112(%rdi)
	.loc	13 530 14 is_stmt 1     # solve_subs.c:530:14
	movsd	152(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	128(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 530 31 is_stmt 0     # solve_subs.c:530:31
	mulsd	%xmm1, %xmm3
	.loc	13 530 24               # solve_subs.c:530:24
	subsd	%xmm3, %xmm2
	.loc	13 530 12               # solve_subs.c:530:12
	movsd	%xmm2, 152(%rdi)
	.loc	13 531 14 is_stmt 1     # solve_subs.c:531:14
	movsd	192(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 531 31 is_stmt 0     # solve_subs.c:531:31
	mulsd	%xmm1, %xmm3
	.loc	13 531 24               # solve_subs.c:531:24
	subsd	%xmm3, %xmm2
	.loc	13 531 12               # solve_subs.c:531:12
	movsd	%xmm2, 192(%rdi)
	.loc	13 532 12 is_stmt 1     # solve_subs.c:532:12
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 532 26 is_stmt 0     # solve_subs.c:532:26
	mulsd	8(%rsi), %xmm1
.Ltmp788:
	.loc	13 532 19               # solve_subs.c:532:19
	subsd	%xmm1, %xmm2
	.loc	13 532 10               # solve_subs.c:532:10
	movsd	%xmm2, 32(%rsi)
	.loc	13 535 15 is_stmt 1     # solve_subs.c:535:15
	movapd	%xmm0, %xmm1
	divsd	96(%rdi), %xmm1
.Ltmp789:
	#DEBUG_VALUE: binvrhs:pivot <- %XMM1
	movsd	136(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 536 24               # solve_subs.c:536:24
	mulsd	%xmm1, %xmm2
	.loc	13 536 13 is_stmt 0     # solve_subs.c:536:13
	movsd	%xmm2, 136(%rdi)
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 537 24 is_stmt 1     # solve_subs.c:537:24
	mulsd	%xmm1, %xmm2
	.loc	13 537 13 is_stmt 0     # solve_subs.c:537:13
	movsd	%xmm2, 176(%rdi)
	.loc	13 538 18 is_stmt 1     # solve_subs.c:538:18
	mulsd	16(%rsi), %xmm1
.Ltmp790:
	.loc	13 538 10 is_stmt 0     # solve_subs.c:538:10
	movsd	%xmm1, 16(%rsi)
	.loc	13 540 11 is_stmt 1     # solve_subs.c:540:11
	movsd	80(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp791:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 541 14               # solve_subs.c:541:14
	movsd	120(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 541 31 is_stmt 0     # solve_subs.c:541:31
	mulsd	%xmm1, %xmm3
	.loc	13 541 24               # solve_subs.c:541:24
	subsd	%xmm3, %xmm2
	.loc	13 541 12               # solve_subs.c:541:12
	movsd	%xmm2, 120(%rdi)
	.loc	13 542 14 is_stmt 1     # solve_subs.c:542:14
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 542 31 is_stmt 0     # solve_subs.c:542:31
	mulsd	%xmm1, %xmm3
	.loc	13 542 24               # solve_subs.c:542:24
	subsd	%xmm3, %xmm2
	.loc	13 542 12               # solve_subs.c:542:12
	movsd	%xmm2, 160(%rdi)
	.loc	13 543 12 is_stmt 1     # solve_subs.c:543:12
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	.loc	13 543 26 is_stmt 0     # solve_subs.c:543:26
	mulsd	16(%rsi), %xmm1
.Ltmp792:
	.loc	13 543 19               # solve_subs.c:543:19
	subsd	%xmm1, %xmm2
	.loc	13 543 10               # solve_subs.c:543:10
	movsd	%xmm2, (%rsi)
	.loc	13 545 11 is_stmt 1     # solve_subs.c:545:11
	movsd	88(%rdi), %xmm1         # xmm1 = mem[0],zero
.Ltmp793:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 546 14               # solve_subs.c:546:14
	movsd	128(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 546 31 is_stmt 0     # solve_subs.c:546:31
	mulsd	%xmm1, %xmm3
	.loc	13 546 24               # solve_subs.c:546:24
	subsd	%xmm3, %xmm2
	.loc	13 546 12               # solve_subs.c:546:12
	movsd	%xmm2, 128(%rdi)
	.loc	13 547 14 is_stmt 1     # solve_subs.c:547:14
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 547 31 is_stmt 0     # solve_subs.c:547:31
	mulsd	%xmm1, %xmm3
	.loc	13 547 24               # solve_subs.c:547:24
	subsd	%xmm3, %xmm2
	.loc	13 547 12               # solve_subs.c:547:12
	movsd	%xmm2, 168(%rdi)
	.loc	13 548 12 is_stmt 1     # solve_subs.c:548:12
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	.loc	13 548 26 is_stmt 0     # solve_subs.c:548:26
	mulsd	16(%rsi), %xmm1
.Ltmp794:
	.loc	13 548 19               # solve_subs.c:548:19
	subsd	%xmm1, %xmm2
	.loc	13 548 10               # solve_subs.c:548:10
	movsd	%xmm2, 8(%rsi)
	.loc	13 550 11 is_stmt 1     # solve_subs.c:550:11
	movsd	104(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp795:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 551 14               # solve_subs.c:551:14
	movsd	144(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 551 31 is_stmt 0     # solve_subs.c:551:31
	mulsd	%xmm1, %xmm3
	.loc	13 551 24               # solve_subs.c:551:24
	subsd	%xmm3, %xmm2
	.loc	13 551 12               # solve_subs.c:551:12
	movsd	%xmm2, 144(%rdi)
	.loc	13 552 14 is_stmt 1     # solve_subs.c:552:14
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 552 31 is_stmt 0     # solve_subs.c:552:31
	mulsd	%xmm1, %xmm3
	.loc	13 552 24               # solve_subs.c:552:24
	subsd	%xmm3, %xmm2
	.loc	13 552 12               # solve_subs.c:552:12
	movsd	%xmm2, 184(%rdi)
	.loc	13 553 12 is_stmt 1     # solve_subs.c:553:12
	movsd	24(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 553 26 is_stmt 0     # solve_subs.c:553:26
	mulsd	16(%rsi), %xmm1
.Ltmp796:
	.loc	13 553 19               # solve_subs.c:553:19
	subsd	%xmm1, %xmm2
	.loc	13 553 10               # solve_subs.c:553:10
	movsd	%xmm2, 24(%rsi)
	.loc	13 555 11 is_stmt 1     # solve_subs.c:555:11
	movsd	112(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp797:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 556 14               # solve_subs.c:556:14
	movsd	152(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	136(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 556 31 is_stmt 0     # solve_subs.c:556:31
	mulsd	%xmm1, %xmm3
	.loc	13 556 24               # solve_subs.c:556:24
	subsd	%xmm3, %xmm2
	.loc	13 556 12               # solve_subs.c:556:12
	movsd	%xmm2, 152(%rdi)
	.loc	13 557 14 is_stmt 1     # solve_subs.c:557:14
	movsd	192(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 557 31 is_stmt 0     # solve_subs.c:557:31
	mulsd	%xmm1, %xmm3
	.loc	13 557 24               # solve_subs.c:557:24
	subsd	%xmm3, %xmm2
	.loc	13 557 12               # solve_subs.c:557:12
	movsd	%xmm2, 192(%rdi)
	.loc	13 558 12 is_stmt 1     # solve_subs.c:558:12
	movsd	32(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 558 26 is_stmt 0     # solve_subs.c:558:26
	mulsd	16(%rsi), %xmm1
.Ltmp798:
	.loc	13 558 19               # solve_subs.c:558:19
	subsd	%xmm1, %xmm2
	.loc	13 558 10               # solve_subs.c:558:10
	movsd	%xmm2, 32(%rsi)
	.loc	13 561 15 is_stmt 1     # solve_subs.c:561:15
	movapd	%xmm0, %xmm1
	divsd	144(%rdi), %xmm1
.Ltmp799:
	#DEBUG_VALUE: binvrhs:pivot <- %XMM1
	movsd	184(%rdi), %xmm2        # xmm2 = mem[0],zero
	.loc	13 562 24               # solve_subs.c:562:24
	mulsd	%xmm1, %xmm2
	.loc	13 562 13 is_stmt 0     # solve_subs.c:562:13
	movsd	%xmm2, 184(%rdi)
	.loc	13 563 18 is_stmt 1     # solve_subs.c:563:18
	mulsd	24(%rsi), %xmm1
.Ltmp800:
	.loc	13 563 10 is_stmt 0     # solve_subs.c:563:10
	movsd	%xmm1, 24(%rsi)
	.loc	13 565 11 is_stmt 1     # solve_subs.c:565:11
	movsd	120(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp801:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 566 14               # solve_subs.c:566:14
	movsd	160(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 566 31 is_stmt 0     # solve_subs.c:566:31
	mulsd	%xmm1, %xmm3
	.loc	13 566 24               # solve_subs.c:566:24
	subsd	%xmm3, %xmm2
	.loc	13 566 12               # solve_subs.c:566:12
	movsd	%xmm2, 160(%rdi)
	.loc	13 567 12 is_stmt 1     # solve_subs.c:567:12
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	.loc	13 567 26 is_stmt 0     # solve_subs.c:567:26
	mulsd	24(%rsi), %xmm1
.Ltmp802:
	.loc	13 567 19               # solve_subs.c:567:19
	subsd	%xmm1, %xmm2
	.loc	13 567 10               # solve_subs.c:567:10
	movsd	%xmm2, (%rsi)
	.loc	13 569 11 is_stmt 1     # solve_subs.c:569:11
	movsd	128(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp803:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 570 14               # solve_subs.c:570:14
	movsd	168(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 570 31 is_stmt 0     # solve_subs.c:570:31
	mulsd	%xmm1, %xmm3
	.loc	13 570 24               # solve_subs.c:570:24
	subsd	%xmm3, %xmm2
	.loc	13 570 12               # solve_subs.c:570:12
	movsd	%xmm2, 168(%rdi)
	.loc	13 571 12 is_stmt 1     # solve_subs.c:571:12
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	.loc	13 571 26 is_stmt 0     # solve_subs.c:571:26
	mulsd	24(%rsi), %xmm1
.Ltmp804:
	.loc	13 571 19               # solve_subs.c:571:19
	subsd	%xmm1, %xmm2
	.loc	13 571 10               # solve_subs.c:571:10
	movsd	%xmm2, 8(%rsi)
	.loc	13 573 11 is_stmt 1     # solve_subs.c:573:11
	movsd	136(%rdi), %xmm1        # xmm1 = mem[0],zero
.Ltmp805:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM1
	.loc	13 574 14               # solve_subs.c:574:14
	movsd	176(%rdi), %xmm2        # xmm2 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 574 31 is_stmt 0     # solve_subs.c:574:31
	mulsd	%xmm1, %xmm3
	.loc	13 574 24               # solve_subs.c:574:24
	subsd	%xmm3, %xmm2
	.loc	13 574 12               # solve_subs.c:574:12
	movsd	%xmm2, 176(%rdi)
	.loc	13 575 12 is_stmt 1     # solve_subs.c:575:12
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	13 575 26 is_stmt 0     # solve_subs.c:575:26
	mulsd	24(%rsi), %xmm1
.Ltmp806:
	.loc	13 575 19               # solve_subs.c:575:19
	subsd	%xmm1, %xmm2
	.loc	13 575 10               # solve_subs.c:575:10
	movsd	%xmm2, 16(%rsi)
	.loc	13 577 11 is_stmt 1     # solve_subs.c:577:11
	movsd	152(%rdi), %xmm2        # xmm2 = mem[0],zero
.Ltmp807:
	#DEBUG_VALUE: binvrhs:coeff <- %XMM2
	.loc	13 578 14               # solve_subs.c:578:14
	movsd	192(%rdi), %xmm1        # xmm1 = mem[0],zero
	movsd	184(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 578 31 is_stmt 0     # solve_subs.c:578:31
	mulsd	%xmm2, %xmm3
	.loc	13 578 24               # solve_subs.c:578:24
	subsd	%xmm3, %xmm1
	.loc	13 578 12               # solve_subs.c:578:12
	movsd	%xmm1, 192(%rdi)
	.loc	13 579 27 is_stmt 1     # solve_subs.c:579:27
	movsd	24(%rsi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 579 12 is_stmt 0     # solve_subs.c:579:12
	movsd	32(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 579 26               # solve_subs.c:579:26
	mulsd	%xmm1, %xmm2
.Ltmp808:
	.loc	13 579 19               # solve_subs.c:579:19
	subsd	%xmm2, %xmm3
	.loc	13 579 10               # solve_subs.c:579:10
	movsd	%xmm3, 32(%rsi)
	.loc	13 582 15 is_stmt 1     # solve_subs.c:582:15
	divsd	192(%rdi), %xmm0
.Ltmp809:
	#DEBUG_VALUE: binvrhs:pivot <- %XMM0
	.loc	13 583 18               # solve_subs.c:583:18
	mulsd	%xmm3, %xmm0
.Ltmp810:
	.loc	13 583 10 is_stmt 0     # solve_subs.c:583:10
	movsd	%xmm0, 32(%rsi)
	.loc	13 586 12 is_stmt 1     # solve_subs.c:586:12
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	movsd	160(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 586 26 is_stmt 0     # solve_subs.c:586:26
	mulsd	%xmm0, %xmm3
	.loc	13 586 19               # solve_subs.c:586:19
	subsd	%xmm3, %xmm2
	.loc	13 586 10               # solve_subs.c:586:10
	movsd	%xmm2, (%rsi)
	.loc	13 589 12 is_stmt 1     # solve_subs.c:589:12
	movsd	8(%rsi), %xmm2          # xmm2 = mem[0],zero
	movsd	168(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 589 26 is_stmt 0     # solve_subs.c:589:26
	mulsd	%xmm0, %xmm3
	.loc	13 589 19               # solve_subs.c:589:19
	subsd	%xmm3, %xmm2
	.loc	13 589 10               # solve_subs.c:589:10
	movsd	%xmm2, 8(%rsi)
	.loc	13 592 12 is_stmt 1     # solve_subs.c:592:12
	movsd	16(%rsi), %xmm2         # xmm2 = mem[0],zero
	movsd	176(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 592 26 is_stmt 0     # solve_subs.c:592:26
	mulsd	%xmm0, %xmm3
	.loc	13 592 19               # solve_subs.c:592:19
	subsd	%xmm3, %xmm2
	.loc	13 592 10               # solve_subs.c:592:10
	movsd	%xmm2, 16(%rsi)
	.loc	13 595 26 is_stmt 1     # solve_subs.c:595:26
	mulsd	184(%rdi), %xmm0
	.loc	13 595 19 is_stmt 0     # solve_subs.c:595:19
	subsd	%xmm0, %xmm1
	.loc	13 595 10               # solve_subs.c:595:10
	movsd	%xmm1, 24(%rsi)
	.loc	13 596 1 is_stmt 1      # solve_subs.c:596:1
	retq
.Ltmp811:
.Lfunc_end12:
	.size	binvrhs, .Lfunc_end12-binvrhs
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI13_0:
	.quad	4611686018427387904     # double 2
.LCPI13_1:
	.quad	-9223372036854775808    # double -0
.LCPI13_3:
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI13_2:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	y_solve
	.p2align	4, 0x90
	.type	y_solve,@function
y_solve:                                # @y_solve
.Lfunc_begin13:
	.file	14 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/y_solve.c"
	.loc	14 48 0                 # y_solve.c:48:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	14 54 7 prologue_end    # y_solve.c:54:7
	pushq	%rbp
.Ltmp812:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp813:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp814:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp815:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp816:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp817:
	.cfi_def_cfa_offset 56
	subq	$248, %rsp
.Ltmp818:
	.cfi_def_cfa_offset 304
.Ltmp819:
	.cfi_offset %rbx, -56
.Ltmp820:
	.cfi_offset %r12, -48
.Ltmp821:
	.cfi_offset %r13, -40
.Ltmp822:
	.cfi_offset %r14, -32
.Ltmp823:
	.cfi_offset %r15, -24
.Ltmp824:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB13_2
# BB#1:                                 # %if.then
	.loc	14 54 16 is_stmt 0 discriminator 1 # y_solve.c:54:16
	movl	$7, %edi
	callq	timer_start
.Ltmp825:
.LBB13_2:                               # %if.end
	#DEBUG_VALUE: y_solve:k <- 1
	.loc	14 69 20 is_stmt 1 discriminator 1 # y_solve.c:69:20
	movl	grid_points+8(%rip), %ecx
	.loc	14 69 17 is_stmt 0 discriminator 1 # y_solve.c:69:17
	movl	%ecx, %eax
	addl	$-2, %eax
	jle	.LBB13_22
.Ltmp826:
# BB#3:                                 # %for.cond2.preheader.lr.ph
	.loc	14 63 11 is_stmt 1      # y_solve.c:63:11
	movl	grid_points+4(%rip), %eax
.Ltmp827:
	.loc	14 69 3 discriminator 1 # y_solve.c:69:3
	movl	%eax, 12(%rsp)          # 4-byte Spill
	movslq	%eax, %r15
.Ltmp828:
	.loc	14 63 25                # y_solve.c:63:25
	leal	-1(%r15), %eax
.Ltmp829:
	#DEBUG_VALUE: y_solve:jsize <- %EAX
	.loc	14 150 29 discriminator 1 # y_solve.c:150:29
	movl	%eax, 8(%rsp)           # 4-byte Spill
	addq	$-2, %r15
.Ltmp830:
	#DEBUG_VALUE: y_solve:j <- %R15D
	.loc	14 361 18               # y_solve.c:361:18
	movq	%r15, 232(%rsp)         # 8-byte Spill
	cltq
.Ltmp831:
	movq	%rax, 224(%rsp)         # 8-byte Spill
.Ltmp832:
	#DEBUG_VALUE: y_solve:jsize <- [%RSP+8]
	imulq	$600, %rax, %rax        # imm = 0x258
	leaq	lhs(%rax), %rdx
	.loc	14 368 52               # y_solve.c:368:52
	movq	%rdx, 216(%rsp)         # 8-byte Spill
	leaq	lhs+200(%rax), %rax
.Ltmp833:
	.loc	14 70 22 discriminator 1 # y_solve.c:70:22
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movl	grid_points(%rip), %eax
.Ltmp834:
	.loc	14 368 34               # y_solve.c:368:34
	imulq	$600, %r15, %rdx        # imm = 0x258
	leaq	lhs+400(%rdx), %rsi
.Ltmp835:
	.loc	14 69 3 discriminator 1 # y_solve.c:69:3
	movq	%rsi, 200(%rsp)         # 8-byte Spill
	imulq	$2600, %r15, %rsi       # imm = 0xA28
	movq	%rsi, 192(%rsp)         # 8-byte Spill
	leaq	rhs+169040(%rsi), %rsi
	leaq	lhs+560(%rdx), %rdx
	movq	%rdx, 184(%rsp)         # 8-byte Spill
	movl	$1, %r13d
	movl	$33808, %edi            # imm = 0x8410
	movl	$rhs+171640, %ebp
.Ltmp836:
	.p2align	4, 0x90
.LBB13_4:                               # %for.cond2.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB13_5 Depth 2
                                        #       Child Loop BB13_7 Depth 3
                                        #       Child Loop BB13_12 Depth 3
                                        #       Child Loop BB13_14 Depth 3
                                        #       Child Loop BB13_16 Depth 3
                                        #         Child Loop BB13_17 Depth 4
	.loc	14 70 19 discriminator 1 # y_solve.c:70:19
	movq	%rbp, 160(%rsp)         # 8-byte Spill
	movq	%rdi, 168(%rsp)         # 8-byte Spill
	movq	%r13, 240(%rsp)         # 8-byte Spill
	movq	%rsi, 176(%rsp)         # 8-byte Spill
	movl	%eax, %edx
	addl	$-2, %edx
	movq	%rsi, 56(%rsp)          # 8-byte Spill
	movq	%rdi, %rbx
	movl	$1, %r12d
	jle	.LBB13_21
	.p2align	4, 0x90
.LBB13_5:                               # %for.cond6.preheader
                                        #   Parent Loop BB13_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB13_7 Depth 3
                                        #       Child Loop BB13_12 Depth 3
                                        #       Child Loop BB13_14 Depth 3
                                        #       Child Loop BB13_16 Depth 3
                                        #         Child Loop BB13_17 Depth 4
.Ltmp837:
	.loc	14 71 7 discriminator 1 # y_solve.c:71:7
	cmpl	$0, 12(%rsp)            # 4-byte Folded Reload
	jle	.LBB13_9
# BB#6:                                 # %for.body8.lr.ph
                                        #   in Loop: Header=BB13_5 Depth=2
.Ltmp838:
	.loc	14 89 13                # y_solve.c:89:13
	movsd	c2(%rip), %xmm9         # xmm9 = mem[0],zero
	.loc	14 91 31                # y_solve.c:91:31
	movsd	.LCPI13_0(%rip), %xmm0  # xmm0 = mem[0],zero
	subsd	%xmm9, %xmm0
	movsd	%xmm0, 64(%rsp)         # 8-byte Spill
	.loc	14 101 30               # y_solve.c:101:30
	movapd	%xmm9, %xmm0
	addsd	%xmm0, %xmm0
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	.loc	14 101 56 is_stmt 0     # y_solve.c:101:56
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	14 115 27 is_stmt 1     # y_solve.c:115:27
	movsd	%xmm0, 24(%rsp)         # 8-byte Spill
	movsd	c3c4(%rip), %xmm0       # xmm0 = mem[0],zero
	movapd	%xmm0, 144(%rsp)        # 16-byte Spill
	movsd	con43(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	14 121 33               # y_solve.c:121:33
	mulsd	%xmm0, %xmm1
	.loc	14 134 15               # y_solve.c:134:15
	movapd	%xmm1, 128(%rsp)        # 16-byte Spill
	movsd	c1345(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	14 134 13 is_stmt 0     # y_solve.c:134:13
	movsd	%xmm2, 16(%rsp)         # 8-byte Spill
	movapd	%xmm0, %xmm3
	subsd	%xmm2, %xmm3
	movapd	%xmm3, 112(%rsp)        # 16-byte Spill
	.loc	14 136 15 is_stmt 1     # y_solve.c:136:15
	movapd	%xmm1, %xmm3
	subsd	%xmm2, %xmm3
	movapd	%xmm3, 96(%rsp)         # 16-byte Spill
	.loc	14 115 32               # y_solve.c:115:32
	unpcklpd	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0]
	movapd	%xmm0, 80(%rsp)         # 16-byte Spill
	movl	12(%rsp), %eax          # 4-byte Reload
	xorl	%ecx, %ecx
	movq	%rbx, %rdx
	.loc	14 78 23                # y_solve.c:78:23
	movabsq	$4607182418800017408, %rsi # imm = 0x3FF0000000000000
	.loc	14 115 39               # y_solve.c:115:39
	movapd	.LCPI13_2(%rip), %xmm12 # xmm12 = [9223372036854775808,9223372036854775808]
	.p2align	4, 0x90
.LBB13_7:                               # %for.body8
                                        #   Parent Loop BB13_4 Depth=1
                                        #     Parent Loop BB13_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	14 72 16                # y_solve.c:72:16
	movsd	rho_i(%rdx), %xmm15     # xmm15 = mem[0],zero
	.loc	14 73 21                # y_solve.c:73:21
	movapd	%xmm15, %xmm14
	mulsd	%xmm14, %xmm14
	.loc	14 76 23                # y_solve.c:76:23
	movq	$0, fjac(%rcx)
	.loc	14 77 23                # y_solve.c:77:23
	movq	$0, fjac+40(%rcx)
	.loc	14 78 23                # y_solve.c:78:23
	movq	%rsi, fjac+80(%rcx)
	.loc	14 82 29                # y_solve.c:82:29
	movupd	u+8(%rdx,%rdx,4), %xmm3
	.loc	14 83 39                # y_solve.c:83:39
	movapd	%xmm3, %xmm10
	shufpd	$1, %xmm10, %xmm10      # xmm10 = xmm10[1,0]
	movapd	%xmm10, %xmm7
	mulsd	%xmm15, %xmm7
	.loc	14 83 23 is_stmt 0      # y_solve.c:83:23
	movsd	%xmm7, fjac+48(%rcx)
	.loc	14 79 23 is_stmt 1      # y_solve.c:79:23
	xorps	%xmm4, %xmm4
	movups	%xmm4, fjac+120(%rcx)
	.loc	14 80 23                # y_solve.c:80:23
	movups	%xmm4, fjac+160(%rcx)
	.loc	14 82 42                # y_solve.c:82:42
	movapd	%xmm3, %xmm6
	movhlps	%xmm6, %xmm6            # xmm6 = xmm6[1,1]
	mulpd	%xmm3, %xmm6
	.loc	14 82 59 is_stmt 0      # y_solve.c:82:59
	movapd	%xmm14, %xmm13
	movlhps	%xmm13, %xmm13          # xmm13 = xmm13[0,0]
	mulpd	%xmm13, %xmm6
	.loc	14 89 18 is_stmt 1      # y_solve.c:89:18
	movsd	qs(%rdx), %xmm8         # xmm8 = mem[0],zero
	.loc	14 89 16 is_stmt 0      # y_solve.c:89:16
	movapd	%xmm9, %xmm0
	mulsd	%xmm8, %xmm0
	.loc	14 82 59 is_stmt 1      # y_solve.c:82:59
	movsd	.LCPI13_1(%rip), %xmm1  # xmm1 = mem[0],zero
	unpcklpd	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	subpd	%xmm6, %xmm1
	.loc	14 82 23 is_stmt 0      # y_solve.c:82:23
	movupd	%xmm1, fjac+8(%rcx)
	.loc	14 90 30 is_stmt 1      # y_solve.c:90:30
	movapd	%xmm9, %xmm0
	mulsd	%xmm3, %xmm0
	.loc	14 90 47 is_stmt 0      # y_solve.c:90:47
	movapd	%xmm0, %xmm1
	mulsd	%xmm15, %xmm1
	xorpd	%xmm12, %xmm1
	.loc	14 90 23                # y_solve.c:90:23
	movlpd	%xmm1, fjac+56(%rcx)
	.loc	14 91 38 is_stmt 1      # y_solve.c:91:38
	movsd	64(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm10, %xmm1
	.loc	14 84 39                # y_solve.c:84:39
	movapd	%xmm15, %xmm5
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	unpcklpd	%xmm1, %xmm3    # xmm3 = xmm3[0],xmm1[0]
	mulpd	%xmm5, %xmm3
	.loc	14 84 23 is_stmt 0      # y_solve.c:84:23
	movupd	%xmm3, fjac+88(%rcx)
	.loc	14 92 32 is_stmt 1      # y_solve.c:92:32
	movsd	u+24(%rdx,%rdx,4), %xmm11 # xmm11 = mem[0],zero
	.loc	14 92 30 is_stmt 0      # y_solve.c:92:30
	movapd	%xmm9, %xmm1
	mulsd	%xmm11, %xmm1
	.loc	14 92 46                # y_solve.c:92:46
	mulsd	%xmm15, %xmm1
	xorpd	%xmm12, %xmm1
	.loc	14 92 23                # y_solve.c:92:23
	movlpd	%xmm1, fjac+136(%rcx)
	.loc	14 93 23 is_stmt 1      # y_solve.c:93:23
	movsd	%xmm9, fjac+176(%rcx)
	.loc	14 95 42                # y_solve.c:95:42
	movapd	%xmm10, %xmm3
	mulsd	%xmm11, %xmm3
	.loc	14 95 59 is_stmt 0      # y_solve.c:95:59
	movapd	%xmm3, %xmm1
	mulsd	%xmm14, %xmm1
	xorpd	%xmm12, %xmm1
	.loc	14 95 23                # y_solve.c:95:23
	movlpd	%xmm1, fjac+24(%rcx)
	.loc	14 96 23 is_stmt 1      # y_solve.c:96:23
	movq	$0, fjac+64(%rcx)
	.loc	14 115 32               # y_solve.c:115:32
	mulpd	80(%rsp), %xmm13        # 16-byte Folded Reload
	.loc	14 115 39 is_stmt 0     # y_solve.c:115:39
	movapd	%xmm13, %xmm5
	.loc	14 127 39 is_stmt 1     # y_solve.c:127:39
	mulsd	%xmm11, %xmm13
	.loc	14 97 39                # y_solve.c:97:39
	mulsd	%xmm15, %xmm11
	.loc	14 97 23 is_stmt 0      # y_solve.c:97:23
	movsd	%xmm11, fjac+104(%rcx)
	.loc	14 98 23 is_stmt 1      # y_solve.c:98:23
	movsd	%xmm7, fjac+144(%rcx)
	.loc	14 99 23                # y_solve.c:99:23
	movq	$0, fjac+184(%rcx)
	movsd	square(%rdx), %xmm1     # xmm1 = mem[0],zero
	.loc	14 101 36               # y_solve.c:101:36
	mulsd	32(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	14 101 61 is_stmt 0     # y_solve.c:101:61
	movsd	u+32(%rdx,%rdx,4), %xmm11 # xmm11 = mem[0],zero
	movsd	24(%rsp), %xmm2         # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	14 101 59               # y_solve.c:101:59
	movapd	%xmm2, %xmm7
	mulsd	%xmm11, %xmm7
	.loc	14 101 54               # y_solve.c:101:54
	subsd	%xmm7, %xmm1
	.loc	14 102 11 is_stmt 1     # y_solve.c:102:11
	mulsd	%xmm10, %xmm1
	.loc	14 102 27 is_stmt 0     # y_solve.c:102:27
	mulsd	%xmm14, %xmm1
	.loc	14 101 23 is_stmt 1     # y_solve.c:101:23
	movsd	%xmm1, fjac+32(%rcx)
	.loc	14 103 45               # y_solve.c:103:45
	mulsd	%xmm10, %xmm0
	.loc	14 103 60 is_stmt 0     # y_solve.c:103:60
	mulsd	%xmm14, %xmm0
	xorpd	%xmm12, %xmm0
	.loc	14 103 23               # y_solve.c:103:23
	movlpd	%xmm0, fjac+72(%rcx)
	.loc	14 74 21 is_stmt 1      # y_solve.c:74:21
	movapd	%xmm15, %xmm0
	mulsd	%xmm14, %xmm0
	.loc	14 104 44               # y_solve.c:104:44
	mulsd	%xmm15, %xmm7
	.loc	14 105 32               # y_solve.c:105:32
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	addsd	%xmm8, %xmm6
	.loc	14 105 16 is_stmt 0     # y_solve.c:105:16
	mulsd	%xmm9, %xmm6
	.loc	14 105 11               # y_solve.c:105:11
	subsd	%xmm6, %xmm7
	.loc	14 104 23 is_stmt 1     # y_solve.c:104:23
	movsd	%xmm7, fjac+112(%rcx)
	.loc	14 106 30               # y_solve.c:106:30
	mulsd	%xmm9, %xmm3
	.loc	14 106 64 is_stmt 0     # y_solve.c:106:64
	mulsd	%xmm14, %xmm3
	xorpd	%xmm12, %xmm3
	.loc	14 106 23               # y_solve.c:106:23
	movlpd	%xmm3, fjac+152(%rcx)
	.loc	14 107 28 is_stmt 1     # y_solve.c:107:28
	mulsd	%xmm2, %xmm10
	.loc	14 107 44 is_stmt 0     # y_solve.c:107:44
	mulsd	%xmm15, %xmm10
	.loc	14 107 23               # y_solve.c:107:23
	movsd	%xmm10, fjac+192(%rcx)
	.loc	14 109 23 is_stmt 1     # y_solve.c:109:23
	movq	$0, njac(%rcx)
	.loc	14 110 23               # y_solve.c:110:23
	movq	$0, njac+40(%rcx)
	.loc	14 137 40               # y_solve.c:137:40
	movsd	u+24(%rdx,%rdx,4), %xmm1 # xmm1 = mem[0],zero
	movapd	112(%rsp), %xmm8        # 16-byte Reload
	.loc	14 140 43               # y_solve.c:140:43
	movapd	%xmm8, %xmm3
	mulsd	%xmm14, %xmm3
	.loc	14 116 32               # y_solve.c:116:32
	movapd	144(%rsp), %xmm7        # 16-byte Reload
	unpcklpd	%xmm3, %xmm7    # xmm7 = xmm7[0],xmm3[0]
	movapd	%xmm15, %xmm6
	unpcklpd	%xmm1, %xmm6    # xmm6 = xmm6[0],xmm1[0]
	mulpd	%xmm7, %xmm6
	.loc	14 116 23 is_stmt 0     # y_solve.c:116:23
	movlpd	%xmm6, njac+48(%rcx)
	.loc	14 111 23 is_stmt 1     # y_solve.c:111:23
	movups	%xmm4, njac+80(%rcx)
	.loc	14 112 23               # y_solve.c:112:23
	movups	%xmm4, njac+120(%rcx)
	.loc	14 113 23               # y_solve.c:113:23
	movups	%xmm4, njac+160(%rcx)
	.loc	14 115 41               # y_solve.c:115:41
	movupd	u+8(%rdx,%rdx,4), %xmm7
	.loc	14 115 39 is_stmt 0     # y_solve.c:115:39
	mulpd	%xmm7, %xmm5
	xorpd	%xmm12, %xmm5
	.loc	14 115 23               # y_solve.c:115:23
	movupd	%xmm5, njac+8(%rcx)
	.loc	14 122 23 is_stmt 1     # y_solve.c:122:23
	movq	$0, njac+56(%rcx)
	.loc	14 123 40               # y_solve.c:123:40
	movapd	128(%rsp), %xmm5        # 16-byte Reload
	mulsd	%xmm15, %xmm5
	.loc	14 123 23 is_stmt 0     # y_solve.c:123:23
	movsd	%xmm5, njac+96(%rcx)
	.loc	14 124 23 is_stmt 1     # y_solve.c:124:23
	movq	$0, njac+136(%rcx)
	.loc	14 125 23               # y_solve.c:125:23
	movq	$0, njac+176(%rcx)
	.loc	14 127 39               # y_solve.c:127:39
	xorpd	%xmm12, %xmm13
	.loc	14 127 23 is_stmt 0     # y_solve.c:127:23
	movlpd	%xmm13, njac+24(%rcx)
	.loc	14 134 46 is_stmt 1     # y_solve.c:134:46
	movapd	%xmm7, %xmm5
	.loc	14 136 25               # y_solve.c:136:25
	movapd	%xmm0, %xmm4
	movapd	96(%rsp), %xmm2         # 16-byte Reload
	mulsd	%xmm2, %xmm4
	.loc	14 140 50               # y_solve.c:140:50
	mulsd	%xmm7, %xmm3
	.loc	14 136 48               # y_solve.c:136:48
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	.loc	14 141 50               # y_solve.c:141:50
	mulsd	%xmm14, %xmm2
	.loc	14 141 57 is_stmt 0     # y_solve.c:141:57
	mulsd	%xmm7, %xmm2
	.loc	14 136 48 is_stmt 1     # y_solve.c:136:48
	mulsd	%xmm7, %xmm7
	.loc	14 136 32 is_stmt 0     # y_solve.c:136:32
	mulsd	%xmm4, %xmm7
	.loc	14 134 23 is_stmt 1     # y_solve.c:134:23
	movapd	%xmm8, %xmm4
	mulsd	%xmm0, %xmm4
	.loc	14 134 46 is_stmt 0     # y_solve.c:134:46
	mulsd	%xmm5, %xmm5
	.loc	14 134 30               # y_solve.c:134:30
	mulsd	%xmm4, %xmm5
	xorpd	%xmm12, %xmm5
	.loc	14 135 11 is_stmt 1     # y_solve.c:135:11
	subsd	%xmm7, %xmm5
	.loc	14 137 53               # y_solve.c:137:53
	mulsd	%xmm1, %xmm1
	.loc	14 137 37 is_stmt 0     # y_solve.c:137:37
	mulsd	%xmm4, %xmm1
	.loc	14 137 11               # y_solve.c:137:11
	subsd	%xmm1, %xmm5
	movsd	16(%rsp), %xmm4         # 8-byte Reload
                                        # xmm4 = mem[0],zero
	.loc	14 138 19 is_stmt 1     # y_solve.c:138:19
	movapd	%xmm4, %xmm1
	mulsd	%xmm14, %xmm1
	.loc	14 138 26 is_stmt 0     # y_solve.c:138:26
	mulsd	%xmm11, %xmm1
	.loc	14 138 11               # y_solve.c:138:11
	subsd	%xmm1, %xmm5
	.loc	14 128 23 is_stmt 1     # y_solve.c:128:23
	movq	$0, njac+64(%rcx)
	.loc	14 129 23               # y_solve.c:129:23
	movq	$0, njac+104(%rcx)
	.loc	14 131 23               # y_solve.c:131:23
	movq	$0, njac+184(%rcx)
	.loc	14 133 23               # y_solve.c:133:23
	movsd	%xmm5, njac+32(%rcx)
	.loc	14 140 23               # y_solve.c:140:23
	movsd	%xmm3, njac+72(%rcx)
	.loc	14 141 23               # y_solve.c:141:23
	movsd	%xmm2, njac+112(%rcx)
	.loc	14 130 23               # y_solve.c:130:23
	movupd	%xmm6, njac+144(%rcx)
	.loc	14 143 35               # y_solve.c:143:35
	movapd	%xmm4, %xmm1
	mulsd	%xmm15, %xmm1
	.loc	14 143 23 is_stmt 0     # y_solve.c:143:23
	movsd	%xmm1, njac+192(%rcx)
.Ltmp839:
	.loc	14 71 7 is_stmt 1 discriminator 1 # y_solve.c:71:7
	addq	$520, %rdx              # imm = 0x208
	addq	$200, %rcx
	decl	%eax
	jne	.LBB13_7
# BB#8:                                 # %for.cond6.for.end_crit_edge
                                        #   in Loop: Header=BB13_5 Depth=2
.Ltmp840:
	.loc	14 143 37               # y_solve.c:143:37
	movsd	%xmm15, tmp1(%rip)
	.loc	14 142 44               # y_solve.c:142:44
	movsd	%xmm14, tmp2(%rip)
	.loc	14 134 25               # y_solve.c:134:25
	movsd	%xmm0, tmp3(%rip)
.Ltmp841:
.LBB13_9:                               # %for.end
                                        #   in Loop: Header=BB13_5 Depth=2
	.loc	14 149 7                # y_solve.c:149:7
	movl	$lhs, %edi
	movl	8(%rsp), %esi           # 4-byte Reload
	callq	lhsinit
.Ltmp842:
	#DEBUG_VALUE: y_solve:j <- 1
	.loc	14 150 7 discriminator 1 # y_solve.c:150:7
	testl	%r15d, %r15d
	jle	.LBB13_10
# BB#11:                                # %for.body577.lr.ph
                                        #   in Loop: Header=BB13_5 Depth=2
	movq	%rbx, 40(%rsp)          # 8-byte Spill
.Ltmp843:
	.loc	14 151 19               # y_solve.c:151:19
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movsd	ty1(%rip), %xmm6        # xmm6 = mem[0],zero
	movhpd	ty2(%rip), %xmm6        # xmm6 = xmm6[0],mem[0]
	mulpd	%xmm0, %xmm6
	.loc	14 156 20               # y_solve.c:156:20
	movsd	dy1(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	14 170 20               # y_solve.c:170:20
	movsd	dy2(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	14 184 20               # y_solve.c:184:20
	movsd	dy3(%rip), %xmm2        # xmm2 = mem[0],zero
	.loc	14 198 20               # y_solve.c:198:20
	movsd	dy4(%rip), %xmm3        # xmm3 = mem[0],zero
	.loc	14 212 20               # y_solve.c:212:20
	movsd	dy5(%rip), %xmm5        # xmm5 = mem[0],zero
	.loc	14 156 18               # y_solve.c:156:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm0, %xmm4
	movapd	%xmm4, %xmm8
	.loc	14 170 18               # y_solve.c:170:18
	movapd	%xmm6, %xmm13
	mulsd	%xmm1, %xmm13
	.loc	14 184 18               # y_solve.c:184:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm2, %xmm4
	movapd	%xmm4, 80(%rsp)         # 16-byte Spill
	movapd	%xmm4, %xmm9
	.loc	14 198 18               # y_solve.c:198:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm3, %xmm4
	movapd	%xmm4, 64(%rsp)         # 16-byte Spill
	.loc	14 212 18               # y_solve.c:212:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm5, %xmm4
	movapd	%xmm4, 112(%rsp)        # 16-byte Spill
	.loc	14 215 18               # y_solve.c:215:18
	movapd	%xmm6, %xmm12
	addsd	%xmm12, %xmm12
	.loc	14 216 24               # y_solve.c:216:24
	mulsd	%xmm12, %xmm0
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	.loc	14 225 24               # y_solve.c:225:24
	mulsd	%xmm12, %xmm1
	movsd	%xmm1, 24(%rsp)         # 8-byte Spill
	.loc	14 234 24               # y_solve.c:234:24
	mulsd	%xmm12, %xmm2
	movsd	%xmm2, 144(%rsp)        # 8-byte Spill
	.loc	14 243 24               # y_solve.c:243:24
	mulsd	%xmm12, %xmm3
	movsd	%xmm3, 128(%rsp)        # 8-byte Spill
	.loc	14 252 24               # y_solve.c:252:24
	mulsd	%xmm12, %xmm5
	movsd	%xmm5, 16(%rsp)         # 8-byte Spill
	.loc	14 240 39               # y_solve.c:240:39
	movapd	%xmm12, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 96(%rsp)         # 16-byte Spill
	.loc	14 157 35               # y_solve.c:157:35
	movapd	%xmm6, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	14 159 35               # y_solve.c:159:35
	movapd	%xmm6, %xmm14
	movhlps	%xmm14, %xmm14          # xmm14 = xmm14[1,1]
	.loc	14 160 18               # y_solve.c:160:18
	movapd	%xmm6, %xmm10
	movlhps	%xmm10, %xmm10          # xmm10 = xmm10[0,0]
	movl	%r15d, %eax
	movl	$592, %ecx              # imm = 0x250
.Ltmp844:
	.loc	14 82 59                # y_solve.c:82:59
	movsd	.LCPI13_1(%rip), %xmm15 # xmm15 = mem[0],zero
	.loc	14 115 39               # y_solve.c:115:39
	movapd	.LCPI13_2(%rip), %xmm1  # xmm1 = [9223372036854775808,9223372036854775808]
.Ltmp845:
	.p2align	4, 0x90
.LBB13_12:                              # %for.body577
                                        #   Parent Loop BB13_4 Depth=1
                                        #     Parent Loop BB13_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	fjac-592(%rcx), %xmm3   # xmm3 = mem[0],zero
.Ltmp846:
	.loc	14 154 35               # y_solve.c:154:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	movsd	njac-552(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 158 18               # y_solve.c:158:18
	mulsd	%xmm6, %xmm2
	.loc	14 155 18               # y_solve.c:155:18
	movsd	njac-592(%rcx), %xmm5   # xmm5 = mem[0],zero
	movhpd	fjac-584(%rcx), %xmm5   # xmm5 = xmm5[0],mem[0]
	mulpd	%xmm6, %xmm5
	.loc	14 155 11 is_stmt 0     # y_solve.c:155:11
	unpcklpd	%xmm15, %xmm3   # xmm3 = xmm3[0],xmm15[0]
	subpd	%xmm5, %xmm3
	movsd	njac-584(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	14 167 18 is_stmt 1     # y_solve.c:167:18
	mulsd	%xmm6, %xmm5
	.loc	14 156 11               # y_solve.c:156:11
	movapd	%xmm8, %xmm7
	movapd	%xmm8, %xmm4
	unpcklpd	%xmm5, %xmm7    # xmm7 = xmm7[0],xmm5[0]
	subpd	%xmm7, %xmm3
	.loc	14 157 35               # y_solve.c:157:35
	movsd	fjac-552(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	14 154 26               # y_solve.c:154:26
	movupd	%xmm3, lhs-1176(%rcx,%rcx,2)
	movsd	fjac-544(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 168 35               # y_solve.c:168:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	14 157 35               # y_solve.c:157:35
	movhpd	njac-544(%rcx), %xmm5   # xmm5 = xmm5[0],mem[0]
	mulpd	%xmm0, %xmm5
	movapd	%xmm15, %xmm7
	unpcklpd	%xmm3, %xmm7    # xmm7 = xmm7[0],xmm3[0]
	subpd	%xmm5, %xmm7
	.loc	14 158 11               # y_solve.c:158:11
	unpcklpd	%xmm13, %xmm2   # xmm2 = xmm2[0],xmm13[0]
	subpd	%xmm2, %xmm7
	.loc	14 157 26               # y_solve.c:157:26
	movupd	%xmm7, lhs-1136(%rcx,%rcx,2)
	.loc	14 159 37               # y_solve.c:159:37
	movupd	fjac-512(%rcx), %xmm2
	.loc	14 159 35 is_stmt 0     # y_solve.c:159:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	14 160 20 is_stmt 1     # y_solve.c:160:20
	movupd	njac-512(%rcx), %xmm3
	.loc	14 160 18 is_stmt 0     # y_solve.c:160:18
	mulpd	%xmm10, %xmm3
	.loc	14 160 11               # y_solve.c:160:11
	subpd	%xmm3, %xmm2
	.loc	14 159 26 is_stmt 1     # y_solve.c:159:26
	movupd	%xmm2, lhs-1096(%rcx,%rcx,2)
	.loc	14 161 37               # y_solve.c:161:37
	movupd	fjac-472(%rcx), %xmm2
	.loc	14 161 35 is_stmt 0     # y_solve.c:161:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	14 162 20 is_stmt 1     # y_solve.c:162:20
	movupd	njac-472(%rcx), %xmm3
	.loc	14 162 18 is_stmt 0     # y_solve.c:162:18
	mulpd	%xmm10, %xmm3
	.loc	14 162 11               # y_solve.c:162:11
	subpd	%xmm3, %xmm2
	.loc	14 161 26 is_stmt 1     # y_solve.c:161:26
	movupd	%xmm2, lhs-1056(%rcx,%rcx,2)
	.loc	14 163 37               # y_solve.c:163:37
	movupd	fjac-432(%rcx), %xmm2
	.loc	14 163 35 is_stmt 0     # y_solve.c:163:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	14 164 20 is_stmt 1     # y_solve.c:164:20
	movupd	njac-432(%rcx), %xmm3
	.loc	14 164 18 is_stmt 0     # y_solve.c:164:18
	mulpd	%xmm10, %xmm3
	.loc	14 164 11               # y_solve.c:164:11
	subpd	%xmm3, %xmm2
	.loc	14 163 26 is_stmt 1     # y_solve.c:163:26
	movupd	%xmm2, lhs-1016(%rcx,%rcx,2)
	movsd	fjac-536(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 180 35               # y_solve.c:180:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-536(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 181 18               # y_solve.c:181:18
	mulsd	%xmm6, %xmm3
	.loc	14 181 11 is_stmt 0     # y_solve.c:181:11
	subsd	%xmm3, %xmm2
	.loc	14 180 26 is_stmt 1     # y_solve.c:180:26
	movsd	%xmm2, lhs-1120(%rcx,%rcx,2)
	movsd	fjac-496(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 182 35               # y_solve.c:182:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-496(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 183 18               # y_solve.c:183:18
	mulsd	%xmm6, %xmm3
	.loc	14 183 11 is_stmt 0     # y_solve.c:183:11
	subsd	%xmm3, %xmm2
	.loc	14 184 11 is_stmt 1     # y_solve.c:184:11
	subsd	%xmm9, %xmm2
	.loc	14 182 26               # y_solve.c:182:26
	movsd	%xmm2, lhs-1080(%rcx,%rcx,2)
	movsd	fjac-456(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 185 35               # y_solve.c:185:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-456(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 186 18               # y_solve.c:186:18
	mulsd	%xmm6, %xmm3
	.loc	14 186 11 is_stmt 0     # y_solve.c:186:11
	subsd	%xmm3, %xmm2
	.loc	14 185 26 is_stmt 1     # y_solve.c:185:26
	movsd	%xmm2, lhs-1040(%rcx,%rcx,2)
	movsd	fjac-416(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 187 35               # y_solve.c:187:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-416(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 188 18               # y_solve.c:188:18
	mulsd	%xmm6, %xmm3
	.loc	14 188 11 is_stmt 0     # y_solve.c:188:11
	subsd	%xmm3, %xmm2
	.loc	14 187 26 is_stmt 1     # y_solve.c:187:26
	movsd	%xmm2, lhs-1000(%rcx,%rcx,2)
	.loc	14 178 37               # y_solve.c:178:37
	movupd	fjac-576(%rcx), %xmm2
	.loc	14 178 35 is_stmt 0     # y_solve.c:178:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	14 179 20 is_stmt 1     # y_solve.c:179:20
	movupd	njac-576(%rcx), %xmm3
	.loc	14 179 18 is_stmt 0     # y_solve.c:179:18
	mulpd	%xmm10, %xmm3
	.loc	14 179 11               # y_solve.c:179:11
	subpd	%xmm3, %xmm2
	.loc	14 178 26 is_stmt 1     # y_solve.c:178:26
	movupd	%xmm2, lhs-1160(%rcx,%rcx,2)
	movsd	fjac-448(%rcx), %xmm9   # xmm9 = mem[0],zero
	movsd	njac-408(%rcx), %xmm8   # xmm8 = mem[0],zero
	movsd	fjac-560(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 202 35               # y_solve.c:202:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	movsd	njac-560(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 203 18               # y_solve.c:203:18
	mulsd	%xmm6, %xmm2
	.loc	14 203 11 is_stmt 0     # y_solve.c:203:11
	subsd	%xmm2, %xmm3
	.loc	14 197 18 is_stmt 1     # y_solve.c:197:18
	movsd	njac-448(%rcx), %xmm11  # xmm11 = mem[0],zero
	.loc	14 199 35               # y_solve.c:199:35
	movsd	fjac-408(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 202 26               # y_solve.c:202:26
	movsd	%xmm3, lhs-1144(%rcx,%rcx,2)
	.loc	14 192 37               # y_solve.c:192:37
	movupd	fjac-528(%rcx), %xmm3
	.loc	14 192 35 is_stmt 0     # y_solve.c:192:35
	mulpd	%xmm14, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	14 193 20 is_stmt 1     # y_solve.c:193:20
	movupd	njac-528(%rcx), %xmm5
	.loc	14 193 18 is_stmt 0     # y_solve.c:193:18
	mulpd	%xmm10, %xmm5
	.loc	14 193 11               # y_solve.c:193:11
	subpd	%xmm5, %xmm3
	.loc	14 192 26 is_stmt 1     # y_solve.c:192:26
	movupd	%xmm3, lhs-1112(%rcx,%rcx,2)
	.loc	14 194 37               # y_solve.c:194:37
	movupd	fjac-488(%rcx), %xmm3
	.loc	14 194 35 is_stmt 0     # y_solve.c:194:35
	mulpd	%xmm14, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	14 195 20 is_stmt 1     # y_solve.c:195:20
	movupd	njac-488(%rcx), %xmm5
	.loc	14 195 18 is_stmt 0     # y_solve.c:195:18
	mulpd	%xmm10, %xmm5
	.loc	14 195 11               # y_solve.c:195:11
	subpd	%xmm5, %xmm3
	.loc	14 196 35 is_stmt 1     # y_solve.c:196:35
	mulsd	%xmm0, %xmm9
	xorpd	%xmm1, %xmm9
	.loc	14 194 26               # y_solve.c:194:26
	movupd	%xmm3, lhs-1072(%rcx,%rcx,2)
	.loc	14 197 18               # y_solve.c:197:18
	movhpd	fjac-440(%rcx), %xmm11  # xmm11 = xmm11[0],mem[0]
	mulpd	%xmm6, %xmm11
	.loc	14 197 11 is_stmt 0     # y_solve.c:197:11
	unpcklpd	%xmm15, %xmm9   # xmm9 = xmm9[0],xmm15[0]
	subpd	%xmm11, %xmm9
	movsd	njac-440(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 209 18 is_stmt 1     # y_solve.c:209:18
	mulsd	%xmm6, %xmm3
	.loc	14 198 11               # y_solve.c:198:11
	movapd	64(%rsp), %xmm5         # 16-byte Reload
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
	.loc	14 200 18               # y_solve.c:200:18
	mulsd	%xmm6, %xmm8
	.loc	14 198 11               # y_solve.c:198:11
	subpd	%xmm5, %xmm9
	.loc	14 196 26               # y_solve.c:196:26
	movupd	%xmm9, lhs-1032(%rcx,%rcx,2)
	movsd	fjac-400(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 210 35               # y_solve.c:210:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	14 199 35               # y_solve.c:199:35
	movhpd	njac-400(%rcx), %xmm2   # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm0, %xmm2
	movapd	%xmm15, %xmm5
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
	subpd	%xmm2, %xmm5
	movapd	112(%rsp), %xmm11       # 16-byte Reload
	.loc	14 200 11               # y_solve.c:200:11
	unpcklpd	%xmm11, %xmm8   # xmm8 = xmm8[0],xmm11[0]
	subpd	%xmm8, %xmm5
	.loc	14 199 26               # y_solve.c:199:26
	movupd	%xmm5, lhs-992(%rcx,%rcx,2)
	movsd	njac-392(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 215 24               # y_solve.c:215:24
	mulsd	%xmm12, %xmm2
	.loc	14 215 11 is_stmt 0     # y_solve.c:215:11
	movsd	.LCPI13_3(%rip), %xmm5  # xmm5 = mem[0],zero
	addsd	%xmm5, %xmm2
	.loc	14 216 11 is_stmt 1     # y_solve.c:216:11
	addsd	32(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	14 214 26               # y_solve.c:214:26
	movsd	%xmm2, lhs-976(%rcx,%rcx,2)
	movsd	njac-352(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 217 39               # y_solve.c:217:39
	mulsd	%xmm12, %xmm2
	.loc	14 217 26 is_stmt 0     # y_solve.c:217:26
	movsd	%xmm2, lhs-936(%rcx,%rcx,2)
	movsd	njac-312(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 218 39 is_stmt 1     # y_solve.c:218:39
	mulsd	%xmm12, %xmm2
	.loc	14 218 26 is_stmt 0     # y_solve.c:218:26
	movsd	%xmm2, lhs-896(%rcx,%rcx,2)
	movsd	njac-272(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 219 39 is_stmt 1     # y_solve.c:219:39
	mulsd	%xmm12, %xmm2
	.loc	14 219 26 is_stmt 0     # y_solve.c:219:26
	movsd	%xmm2, lhs-856(%rcx,%rcx,2)
	movsd	njac-232(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 220 39 is_stmt 1     # y_solve.c:220:39
	mulsd	%xmm12, %xmm2
	.loc	14 220 26 is_stmt 0     # y_solve.c:220:26
	movsd	%xmm2, lhs-816(%rcx,%rcx,2)
	movsd	njac-384(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 222 39 is_stmt 1     # y_solve.c:222:39
	mulsd	%xmm12, %xmm2
	.loc	14 222 26 is_stmt 0     # y_solve.c:222:26
	movsd	%xmm2, lhs-968(%rcx,%rcx,2)
	movsd	njac-344(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 224 24 is_stmt 1     # y_solve.c:224:24
	mulsd	%xmm12, %xmm2
	.loc	14 224 11 is_stmt 0     # y_solve.c:224:11
	addsd	%xmm5, %xmm2
	.loc	14 225 11 is_stmt 1     # y_solve.c:225:11
	addsd	24(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	14 223 26               # y_solve.c:223:26
	movsd	%xmm2, lhs-928(%rcx,%rcx,2)
	movsd	njac-304(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 226 39               # y_solve.c:226:39
	mulsd	%xmm12, %xmm2
	.loc	14 226 26 is_stmt 0     # y_solve.c:226:26
	movsd	%xmm2, lhs-888(%rcx,%rcx,2)
	movsd	njac-296(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 233 24 is_stmt 1     # y_solve.c:233:24
	mulsd	%xmm12, %xmm2
	.loc	14 233 11 is_stmt 0     # y_solve.c:233:11
	addsd	%xmm5, %xmm2
	.loc	14 234 11 is_stmt 1     # y_solve.c:234:11
	addsd	144(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	14 232 26               # y_solve.c:232:26
	movsd	%xmm2, lhs-880(%rcx,%rcx,2)
	.loc	14 227 41               # y_solve.c:227:41
	movupd	njac-264(%rcx), %xmm2
	movapd	96(%rsp), %xmm3         # 16-byte Reload
	.loc	14 227 39 is_stmt 0     # y_solve.c:227:39
	mulpd	%xmm3, %xmm2
	.loc	14 227 26               # y_solve.c:227:26
	movupd	%xmm2, lhs-848(%rcx,%rcx,2)
	.loc	14 228 41 is_stmt 1     # y_solve.c:228:41
	movupd	njac-224(%rcx), %xmm2
	.loc	14 228 39 is_stmt 0     # y_solve.c:228:39
	mulpd	%xmm3, %xmm2
	.loc	14 228 26               # y_solve.c:228:26
	movupd	%xmm2, lhs-808(%rcx,%rcx,2)
	.loc	14 230 41 is_stmt 1     # y_solve.c:230:41
	movupd	njac-376(%rcx), %xmm2
	.loc	14 230 39 is_stmt 0     # y_solve.c:230:39
	mulpd	%xmm3, %xmm2
	.loc	14 230 26               # y_solve.c:230:26
	movupd	%xmm2, lhs-960(%rcx,%rcx,2)
	.loc	14 231 41 is_stmt 1     # y_solve.c:231:41
	movupd	njac-336(%rcx), %xmm2
	.loc	14 231 39 is_stmt 0     # y_solve.c:231:39
	mulpd	%xmm3, %xmm2
	.loc	14 231 26               # y_solve.c:231:26
	movupd	%xmm2, lhs-920(%rcx,%rcx,2)
	movsd	njac-248(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 242 24 is_stmt 1     # y_solve.c:242:24
	mulsd	%xmm12, %xmm2
	.loc	14 242 11 is_stmt 0     # y_solve.c:242:11
	addsd	%xmm5, %xmm2
	.loc	14 243 11 is_stmt 1     # y_solve.c:243:11
	addsd	128(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	14 241 26               # y_solve.c:241:26
	movsd	%xmm2, lhs-832(%rcx,%rcx,2)
	movsd	njac-208(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 244 39               # y_solve.c:244:39
	mulsd	%xmm12, %xmm2
	.loc	14 244 26 is_stmt 0     # y_solve.c:244:26
	movsd	%xmm2, lhs-792(%rcx,%rcx,2)
	movsd	njac-360(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 246 39 is_stmt 1     # y_solve.c:246:39
	mulsd	%xmm12, %xmm2
	.loc	14 246 26 is_stmt 0     # y_solve.c:246:26
	movsd	%xmm2, lhs-944(%rcx,%rcx,2)
	movsd	njac-320(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 247 39 is_stmt 1     # y_solve.c:247:39
	mulsd	%xmm12, %xmm2
	.loc	14 247 26 is_stmt 0     # y_solve.c:247:26
	movsd	%xmm2, lhs-904(%rcx,%rcx,2)
	.loc	14 240 41 is_stmt 1     # y_solve.c:240:41
	movupd	njac-288(%rcx), %xmm2
	.loc	14 240 39 is_stmt 0     # y_solve.c:240:39
	mulpd	%xmm3, %xmm2
	.loc	14 240 26               # y_solve.c:240:26
	movupd	%xmm2, lhs-872(%rcx,%rcx,2)
	movsd	njac-240(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 249 39 is_stmt 1     # y_solve.c:249:39
	mulsd	%xmm12, %xmm2
	.loc	14 249 26 is_stmt 0     # y_solve.c:249:26
	movsd	%xmm2, lhs-824(%rcx,%rcx,2)
	movsd	njac-200(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 251 24 is_stmt 1     # y_solve.c:251:24
	mulsd	%xmm12, %xmm2
	.loc	14 251 11 is_stmt 0     # y_solve.c:251:11
	addsd	%xmm5, %xmm2
	.loc	14 252 11 is_stmt 1     # y_solve.c:252:11
	addsd	16(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	14 250 26               # y_solve.c:250:26
	movsd	%xmm2, lhs-784(%rcx,%rcx,2)
	movsd	fjac-192(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 254 34               # y_solve.c:254:34
	mulsd	%xmm0, %xmm3
	movsd	njac-192(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 255 18               # y_solve.c:255:18
	mulsd	%xmm6, %xmm2
	.loc	14 255 11 is_stmt 0     # y_solve.c:255:11
	subsd	%xmm2, %xmm3
	movsd	fjac-152(%rcx), %xmm2   # xmm2 = mem[0],zero
	movsd	fjac-184(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	14 266 34 is_stmt 1     # y_solve.c:266:34
	mulsd	%xmm0, %xmm5
	movsd	njac-184(%rcx), %xmm7   # xmm7 = mem[0],zero
	.loc	14 267 18               # y_solve.c:267:18
	mulsd	%xmm6, %xmm7
	.loc	14 256 11               # y_solve.c:256:11
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	movapd	%xmm4, %xmm5
	movapd	%xmm4, %xmm8
	unpcklpd	%xmm7, %xmm5    # xmm5 = xmm5[0],xmm7[0]
	movsd	njac-152(%rcx), %xmm7   # xmm7 = mem[0],zero
	subpd	%xmm5, %xmm3
	.loc	14 254 26               # y_solve.c:254:26
	movupd	%xmm3, lhs-776(%rcx,%rcx,2)
	movsd	fjac-144(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 268 34               # y_solve.c:268:34
	mulsd	%xmm0, %xmm3
	movsd	njac-144(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	14 269 18               # y_solve.c:269:18
	mulsd	%xmm6, %xmm5
	.loc	14 269 11 is_stmt 0     # y_solve.c:269:11
	subsd	%xmm5, %xmm3
	.loc	14 257 34 is_stmt 1     # y_solve.c:257:34
	mulsd	%xmm0, %xmm2
	.loc	14 258 18               # y_solve.c:258:18
	mulsd	%xmm6, %xmm7
	.loc	14 258 11 is_stmt 0     # y_solve.c:258:11
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	unpcklpd	%xmm13, %xmm7   # xmm7 = xmm7[0],xmm13[0]
	subpd	%xmm7, %xmm2
	.loc	14 257 26 is_stmt 1     # y_solve.c:257:26
	movupd	%xmm2, lhs-736(%rcx,%rcx,2)
	.loc	14 259 36               # y_solve.c:259:36
	movupd	fjac-112(%rcx), %xmm2
	.loc	14 259 34 is_stmt 0     # y_solve.c:259:34
	mulpd	%xmm14, %xmm2
	.loc	14 260 20 is_stmt 1     # y_solve.c:260:20
	movupd	njac-112(%rcx), %xmm3
	.loc	14 260 18 is_stmt 0     # y_solve.c:260:18
	mulpd	%xmm10, %xmm3
	.loc	14 260 11               # y_solve.c:260:11
	subpd	%xmm3, %xmm2
	.loc	14 259 26 is_stmt 1     # y_solve.c:259:26
	movupd	%xmm2, lhs-696(%rcx,%rcx,2)
	.loc	14 261 36               # y_solve.c:261:36
	movupd	fjac-72(%rcx), %xmm2
	.loc	14 261 34 is_stmt 0     # y_solve.c:261:34
	mulpd	%xmm14, %xmm2
	.loc	14 262 20 is_stmt 1     # y_solve.c:262:20
	movupd	njac-72(%rcx), %xmm3
	.loc	14 262 18 is_stmt 0     # y_solve.c:262:18
	mulpd	%xmm10, %xmm3
	.loc	14 262 11               # y_solve.c:262:11
	subpd	%xmm3, %xmm2
	.loc	14 261 26 is_stmt 1     # y_solve.c:261:26
	movupd	%xmm2, lhs-656(%rcx,%rcx,2)
	.loc	14 263 36               # y_solve.c:263:36
	movupd	fjac-32(%rcx), %xmm2
	.loc	14 263 34 is_stmt 0     # y_solve.c:263:34
	mulpd	%xmm14, %xmm2
	.loc	14 264 20 is_stmt 1     # y_solve.c:264:20
	movupd	njac-32(%rcx), %xmm3
	.loc	14 264 18 is_stmt 0     # y_solve.c:264:18
	mulpd	%xmm10, %xmm3
	.loc	14 264 11               # y_solve.c:264:11
	subpd	%xmm3, %xmm2
	.loc	14 263 26 is_stmt 1     # y_solve.c:263:26
	movupd	%xmm2, lhs-616(%rcx,%rcx,2)
	movsd	fjac-176(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 278 34               # y_solve.c:278:34
	mulsd	%xmm0, %xmm2
	movsd	njac-176(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 279 18               # y_solve.c:279:18
	mulsd	%xmm6, %xmm3
	.loc	14 279 11 is_stmt 0     # y_solve.c:279:11
	subsd	%xmm3, %xmm2
	.loc	14 278 26 is_stmt 1     # y_solve.c:278:26
	movsd	%xmm2, lhs-760(%rcx,%rcx,2)
	movsd	fjac-136(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	14 280 34               # y_solve.c:280:34
	mulsd	%xmm0, %xmm2
	movsd	njac-136(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	14 281 18               # y_solve.c:281:18
	mulsd	%xmm6, %xmm3
	.loc	14 281 11 is_stmt 0     # y_solve.c:281:11
	subsd	%xmm3, %xmm2
	.loc	14 280 26 is_stmt 1     # y_solve.c:280:26
	movsd	%xmm2, lhs-720(%rcx,%rcx,2)
	movsd	fjac-96(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	14 282 34               # y_solve.c:282:34
	mulsd	%xmm0, %xmm2
	movsd	njac-96(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	14 283 18               # y_solve.c:283:18
	mulsd	%xmm6, %xmm3
	.loc	14 283 11 is_stmt 0     # y_solve.c:283:11
	subsd	%xmm3, %xmm2
	movapd	80(%rsp), %xmm3         # 16-byte Reload
	.loc	14 284 11 is_stmt 1     # y_solve.c:284:11
	subsd	%xmm3, %xmm2
	movapd	%xmm3, %xmm9
	.loc	14 282 26               # y_solve.c:282:26
	movsd	%xmm2, lhs-680(%rcx,%rcx,2)
	movsd	fjac-56(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	14 285 34               # y_solve.c:285:34
	mulsd	%xmm0, %xmm2
	movsd	njac-56(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	14 286 18               # y_solve.c:286:18
	mulsd	%xmm6, %xmm3
	.loc	14 286 11 is_stmt 0     # y_solve.c:286:11
	subsd	%xmm3, %xmm2
	.loc	14 285 26 is_stmt 1     # y_solve.c:285:26
	movsd	%xmm2, lhs-640(%rcx,%rcx,2)
	movsd	fjac-48(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	14 296 34               # y_solve.c:296:34
	mulsd	%xmm0, %xmm2
	movsd	njac-48(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	14 297 18               # y_solve.c:297:18
	mulsd	%xmm6, %xmm3
	.loc	14 297 11 is_stmt 0     # y_solve.c:297:11
	subsd	%xmm3, %xmm2
	.loc	14 287 36 is_stmt 1     # y_solve.c:287:36
	movupd	fjac-16(%rcx), %xmm3
	.loc	14 287 34 is_stmt 0     # y_solve.c:287:34
	mulpd	%xmm14, %xmm3
	.loc	14 288 20 is_stmt 1     # y_solve.c:288:20
	movupd	njac-16(%rcx), %xmm5
	.loc	14 288 18 is_stmt 0     # y_solve.c:288:18
	mulpd	%xmm10, %xmm5
	.loc	14 288 11               # y_solve.c:288:11
	subpd	%xmm5, %xmm3
	.loc	14 287 26 is_stmt 1     # y_solve.c:287:26
	movupd	%xmm3, lhs-600(%rcx,%rcx,2)
	.loc	14 290 36               # y_solve.c:290:36
	movupd	fjac-168(%rcx), %xmm3
	.loc	14 290 34 is_stmt 0     # y_solve.c:290:34
	mulpd	%xmm14, %xmm3
	.loc	14 291 20 is_stmt 1     # y_solve.c:291:20
	movupd	njac-168(%rcx), %xmm5
	.loc	14 291 18 is_stmt 0     # y_solve.c:291:18
	mulpd	%xmm10, %xmm5
	.loc	14 291 11               # y_solve.c:291:11
	subpd	%xmm5, %xmm3
	.loc	14 290 26 is_stmt 1     # y_solve.c:290:26
	movupd	%xmm3, lhs-752(%rcx,%rcx,2)
	.loc	14 292 36               # y_solve.c:292:36
	movupd	fjac-128(%rcx), %xmm3
	.loc	14 292 34 is_stmt 0     # y_solve.c:292:34
	mulpd	%xmm14, %xmm3
	.loc	14 293 20 is_stmt 1     # y_solve.c:293:20
	movupd	njac-128(%rcx), %xmm5
	.loc	14 293 18 is_stmt 0     # y_solve.c:293:18
	mulpd	%xmm10, %xmm5
	.loc	14 293 11               # y_solve.c:293:11
	subpd	%xmm5, %xmm3
	.loc	14 292 26 is_stmt 1     # y_solve.c:292:26
	movupd	%xmm3, lhs-712(%rcx,%rcx,2)
	.loc	14 294 36               # y_solve.c:294:36
	movupd	fjac-88(%rcx), %xmm3
	.loc	14 294 34 is_stmt 0     # y_solve.c:294:34
	mulpd	%xmm14, %xmm3
	.loc	14 295 20 is_stmt 1     # y_solve.c:295:20
	movupd	njac-88(%rcx), %xmm5
	.loc	14 295 18 is_stmt 0     # y_solve.c:295:18
	mulpd	%xmm10, %xmm5
	.loc	14 295 11               # y_solve.c:295:11
	subpd	%xmm5, %xmm3
	.loc	14 294 26 is_stmt 1     # y_solve.c:294:26
	movupd	%xmm3, lhs-672(%rcx,%rcx,2)
	movsd	fjac-40(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	14 308 34               # y_solve.c:308:34
	mulsd	%xmm0, %xmm3
	movsd	njac-40(%rcx), %xmm5    # xmm5 = mem[0],zero
	.loc	14 309 18               # y_solve.c:309:18
	mulsd	%xmm6, %xmm5
	.loc	14 298 11               # y_solve.c:298:11
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	movapd	64(%rsp), %xmm3         # 16-byte Reload
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	subpd	%xmm3, %xmm2
	.loc	14 296 26               # y_solve.c:296:26
	movupd	%xmm2, lhs-632(%rcx,%rcx,2)
	movsd	fjac(%rcx), %xmm2       # xmm2 = mem[0],zero
	.loc	14 310 34               # y_solve.c:310:34
	mulsd	%xmm0, %xmm2
	movsd	njac(%rcx), %xmm3       # xmm3 = mem[0],zero
	.loc	14 311 18               # y_solve.c:311:18
	mulsd	%xmm6, %xmm3
	.loc	14 311 11 is_stmt 0     # y_solve.c:311:11
	subsd	%xmm3, %xmm2
	.loc	14 312 11 is_stmt 1     # y_solve.c:312:11
	subsd	%xmm11, %xmm2
	.loc	14 310 26               # y_solve.c:310:26
	movsd	%xmm2, lhs-584(%rcx,%rcx,2)
.Ltmp847:
	.loc	14 150 7 discriminator 1 # y_solve.c:150:7
	addq	$200, %rcx
	decl	%eax
	jne	.LBB13_12
# BB#13:                                # %for.end1822
                                        #   in Loop: Header=BB13_5 Depth=2
.Ltmp848:
	.loc	14 311 13               # y_solve.c:311:13
	movsd	%xmm6, tmp1(%rip)
	.loc	14 310 29               # y_solve.c:310:29
	movsd	%xmm0, tmp2(%rip)
.Ltmp849:
	.loc	14 332 41               # y_solve.c:332:41
	leaq	(%r12,%r12,4), %rax
	imulq	$169000, %r13, %rcx     # imm = 0x29428
	leaq	rhs(%rcx,%rax,8), %rdx
	.loc	14 332 7 is_stmt 0      # y_solve.c:332:7
	movl	$lhs+200, %edi
	movl	$lhs+400, %esi
	callq	binvcrhs
	testl	%r15d, %r15d
	#DEBUG_VALUE: y_solve:j <- 1
	movl	%r15d, %r13d
	movl	$lhs+1000, %ebx
	movq	%rbp, 48(%rsp)          # 8-byte Spill
	jle	.LBB13_15
	.p2align	4, 0x90
.LBB13_14:                              # %for.body1831
                                        #   Parent Loop BB13_4 Depth=1
                                        #     Parent Loop BB13_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp850:
	.loc	14 344 9 is_stmt 1      # y_solve.c:344:9
	leaq	-400(%rbx), %r14
	leaq	-2600(%rbp), %rsi
	movq	%r14, %rdi
	movq	%rbp, %rdx
	callq	matvec_sub
	.loc	14 349 9                # y_solve.c:349:9
	leaq	-200(%rbx), %r15
	leaq	-600(%rbx), %rsi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	matmul_sub
	.loc	14 355 9                # y_solve.c:355:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	callq	binvcrhs
.Ltmp851:
	.loc	14 338 7 discriminator 1 # y_solve.c:338:7
	addq	$2600, %rbp             # imm = 0xA28
	addq	$600, %rbx              # imm = 0x258
	decl	%r13d
	jne	.LBB13_14
	jmp	.LBB13_15
.Ltmp852:
	.p2align	4, 0x90
.LBB13_10:                              # %for.end1822.thread
                                        #   in Loop: Header=BB13_5 Depth=2
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	%rbp, 48(%rsp)          # 8-byte Spill
	.loc	14 332 41               # y_solve.c:332:41
	leaq	(%r12,%r12,4), %rax
	imulq	$169000, %r13, %rcx     # imm = 0x29428
	leaq	rhs(%rcx,%rax,8), %rdx
	.loc	14 332 7 is_stmt 0      # y_solve.c:332:7
	movl	$lhs+200, %edi
	movl	$lhs+400, %esi
	callq	binvcrhs
	#DEBUG_VALUE: y_solve:j <- 1
.LBB13_15:                              # %for.end1881
                                        #   in Loop: Header=BB13_5 Depth=2
	movq	240(%rsp), %r13         # 8-byte Reload
	.loc	14 361 34 is_stmt 1     # y_solve.c:361:34
	imulq	$169000, %r13, %r14     # imm = 0x29428
	movq	192(%rsp), %rax         # 8-byte Reload
	leaq	rhs(%r14,%rax), %rsi
	leaq	(,%r12,8), %rax
	leaq	(%rax,%rax,4), %rax
	addq	%rax, %rsi
	.loc	14 361 54 is_stmt 0     # y_solve.c:361:54
	imulq	$2600, 224(%rsp), %rcx  # 8-byte Folded Reload
                                        # imm = 0xA28
	leaq	rhs(%r14,%rcx), %rbx
	addq	%rax, %rbx
	movq	216(%rsp), %rbp         # 8-byte Reload
	.loc	14 361 7                # y_solve.c:361:7
	movq	%rbp, %rdi
	movq	%rbx, %rdx
	callq	matvec_sub
	.loc	14 368 7 is_stmt 1      # y_solve.c:368:7
	movq	%rbp, %rdi
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	208(%rsp), %rbp         # 8-byte Reload
	movq	%rbp, %rdx
	callq	matmul_sub
	.loc	14 373 7                # y_solve.c:373:7
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	binvrhs
	movq	232(%rsp), %r15         # 8-byte Reload
.Ltmp853:
	.loc	14 381 7 discriminator 1 # y_solve.c:381:7
	testl	%r15d, %r15d
	movq	184(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	%r15, %r10
	js	.LBB13_19
	.p2align	4, 0x90
.LBB13_16:                              # %for.cond1929.preheader
                                        #   Parent Loop BB13_4 Depth=1
                                        #     Parent Loop BB13_5 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB13_17 Depth 4
.Ltmp854:
	.loc	14 385 42               # y_solve.c:385:42
	imulq	$2600, %r10, %rax       # imm = 0xA28
	addq	%r14, %rax
	.loc	14 385 34 is_stmt 0     # y_solve.c:385:34
	leaq	(%r12,%r12,4), %rcx
	leaq	rhs+2600(%rax,%rcx,8), %r11
	leaq	rhs+2608(%rax,%rcx,8), %rdi
	leaq	rhs+2616(%rax,%rcx,8), %rbx
	leaq	rhs+2624(%rax,%rcx,8), %rbp
	leaq	rhs+2632(%rax,%rcx,8), %rax
	movl	$5, %ecx
	movq	%r8, %rdx
	movq	%r9, %rsi
	.p2align	4, 0x90
.LBB13_17:                              # %for.cond1932.preheader
                                        #   Parent Loop BB13_4 Depth=1
                                        #     Parent Loop BB13_5 Depth=2
                                        #       Parent Loop BB13_16 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	.loc	14 384 31 is_stmt 1     # y_solve.c:384:31
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	14 385 17               # y_solve.c:385:17
	movsd	-160(%rdx), %xmm1       # xmm1 = mem[0],zero
	.loc	14 385 33 is_stmt 0     # y_solve.c:385:33
	mulsd	(%r11), %xmm1
	.loc	14 385 15               # y_solve.c:385:15
	subsd	%xmm1, %xmm0
	.loc	14 384 29 is_stmt 1     # y_solve.c:384:29
	movsd	%xmm0, (%rsi)
	.loc	14 385 17               # y_solve.c:385:17
	movsd	-120(%rdx), %xmm1       # xmm1 = mem[0],zero
	.loc	14 385 33 is_stmt 0     # y_solve.c:385:33
	mulsd	(%rdi), %xmm1
	.loc	14 385 15               # y_solve.c:385:15
	subsd	%xmm1, %xmm0
	.loc	14 384 29 is_stmt 1     # y_solve.c:384:29
	movsd	%xmm0, (%rsi)
	.loc	14 385 17               # y_solve.c:385:17
	movsd	-80(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	14 385 33 is_stmt 0     # y_solve.c:385:33
	mulsd	(%rbx), %xmm1
	.loc	14 385 15               # y_solve.c:385:15
	subsd	%xmm1, %xmm0
	.loc	14 384 29 is_stmt 1     # y_solve.c:384:29
	movsd	%xmm0, (%rsi)
	.loc	14 385 17               # y_solve.c:385:17
	movsd	-40(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	14 385 33 is_stmt 0     # y_solve.c:385:33
	mulsd	(%rbp), %xmm1
	.loc	14 385 15               # y_solve.c:385:15
	subsd	%xmm1, %xmm0
	.loc	14 384 29 is_stmt 1     # y_solve.c:384:29
	movsd	%xmm0, (%rsi)
	.loc	14 385 17               # y_solve.c:385:17
	movsd	(%rdx), %xmm1           # xmm1 = mem[0],zero
	.loc	14 385 33 is_stmt 0     # y_solve.c:385:33
	mulsd	(%rax), %xmm1
	.loc	14 385 15               # y_solve.c:385:15
	subsd	%xmm1, %xmm0
	.loc	14 384 29 is_stmt 1     # y_solve.c:384:29
	movsd	%xmm0, (%rsi)
.Ltmp855:
	.loc	14 382 9 discriminator 1 # y_solve.c:382:9
	addq	$8, %rsi
	addq	$8, %rdx
	decq	%rcx
	jne	.LBB13_17
.Ltmp856:
# BB#18:                                # %for.inc1975
                                        #   in Loop: Header=BB13_16 Depth=3
	.loc	14 381 7 discriminator 1 # y_solve.c:381:7
	addq	$-2600, %r9             # imm = 0xFFFFFFFFFFFFF5D8
	addq	$-600, %r8              # imm = 0xFFFFFFFFFFFFFDA8
	.loc	14 381 27 is_stmt 0 discriminator 1 # y_solve.c:381:27
	testq	%r10, %r10
	.loc	14 381 7 discriminator 1 # y_solve.c:381:7
	leaq	-1(%r10), %r10
	jg	.LBB13_16
.Ltmp857:
.LBB13_19:                              # %for.inc1977
                                        #   in Loop: Header=BB13_5 Depth=2
	.loc	14 70 19 is_stmt 1 discriminator 1 # y_solve.c:70:19
	movslq	grid_points(%rip), %rax
	.loc	14 70 36 is_stmt 0 discriminator 1 # y_solve.c:70:36
	leaq	-2(%rax), %rcx
	movq	40(%rsp), %rbx          # 8-byte Reload
	.loc	14 70 5 discriminator 1 # y_solve.c:70:5
	addq	$8, %rbx
	movq	48(%rsp), %rbp          # 8-byte Reload
	addq	$40, %rbp
	addq	$40, 56(%rsp)           # 8-byte Folded Spill
	.loc	14 70 19 discriminator 1 # y_solve.c:70:19
	cmpq	%rcx, %r12
	.loc	14 70 5 discriminator 1 # y_solve.c:70:5
	leaq	1(%r12), %r12
	jl	.LBB13_5
.Ltmp858:
# BB#20:                                # %for.inc1980.loopexit
                                        #   in Loop: Header=BB13_4 Depth=1
	.loc	14 69 20 is_stmt 1 discriminator 1 # y_solve.c:69:20
	movl	grid_points+8(%rip), %ecx
.LBB13_21:                              # %for.inc1980
                                        #   in Loop: Header=BB13_4 Depth=1
	.loc	14 69 34 is_stmt 0 discriminator 1 # y_solve.c:69:34
	leal	-2(%rcx), %edx
	.loc	14 69 17 discriminator 1 # y_solve.c:69:17
	movslq	%edx, %rdx
	movq	168(%rsp), %rdi         # 8-byte Reload
	.loc	14 69 3 discriminator 1 # y_solve.c:69:3
	addq	$33800, %rdi            # imm = 0x8408
	movq	160(%rsp), %rbp         # 8-byte Reload
	addq	$169000, %rbp           # imm = 0x29428
	movq	176(%rsp), %rsi         # 8-byte Reload
	addq	$169000, %rsi           # imm = 0x29428
	.loc	14 69 17 discriminator 1 # y_solve.c:69:17
	cmpq	%rdx, %r13
	.loc	14 69 3 discriminator 1 # y_solve.c:69:3
	leaq	1(%r13), %r13
	jl	.LBB13_4
.Ltmp859:
.LBB13_22:                              # %for.end1982
	.loc	14 391 7 is_stmt 1      # y_solve.c:391:7
	cmpl	$0, timeron(%rip)
	je	.LBB13_23
# BB#24:                                # %if.then1984
	.loc	14 391 16 is_stmt 0 discriminator 1 # y_solve.c:391:16
	movl	$7, %edi
	addq	$248, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	timer_stop              # TAILCALL
.Ltmp860:
.LBB13_23:                              # %if.end1985
	.loc	14 392 1 is_stmt 1      # y_solve.c:392:1
	addq	$248, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp861:
.Lfunc_end13:
	.size	y_solve, .Lfunc_end13-y_solve
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI14_0:
	.quad	4611686018427387904     # double 2
.LCPI14_1:
	.quad	4607182418800017408     # double 1
.LCPI14_3:
	.quad	-9223372036854775808    # double -0
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI14_2:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	z_solve
	.p2align	4, 0x90
	.type	z_solve,@function
z_solve:                                # @z_solve
.Lfunc_begin14:
	.file	15 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/z_solve.c"
	.loc	15 48 0                 # z_solve.c:48:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	15 54 7 prologue_end    # z_solve.c:54:7
	pushq	%rbp
.Ltmp862:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp863:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp864:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp865:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp866:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp867:
	.cfi_def_cfa_offset 56
	subq	$248, %rsp
.Ltmp868:
	.cfi_def_cfa_offset 304
.Ltmp869:
	.cfi_offset %rbx, -56
.Ltmp870:
	.cfi_offset %r12, -48
.Ltmp871:
	.cfi_offset %r13, -40
.Ltmp872:
	.cfi_offset %r14, -32
.Ltmp873:
	.cfi_offset %r15, -24
.Ltmp874:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB14_2
# BB#1:                                 # %if.then
	.loc	15 54 16 is_stmt 0 discriminator 1 # z_solve.c:54:16
	movl	$8, %edi
	callq	timer_start
.Ltmp875:
.LBB14_2:                               # %if.end
	#DEBUG_VALUE: z_solve:j <- 1
	.loc	15 69 20 is_stmt 1 discriminator 1 # z_solve.c:69:20
	movl	grid_points+4(%rip), %ecx
	.loc	15 69 17 is_stmt 0 discriminator 1 # z_solve.c:69:17
	movl	%ecx, %eax
	addl	$-2, %eax
	jle	.LBB14_22
.Ltmp876:
# BB#3:                                 # %for.cond2.preheader.lr.ph
	.loc	15 63 11 is_stmt 1      # z_solve.c:63:11
	movl	grid_points+8(%rip), %eax
.Ltmp877:
	.loc	15 69 3 discriminator 1 # z_solve.c:69:3
	movl	%eax, 12(%rsp)          # 4-byte Spill
	movslq	%eax, %r15
.Ltmp878:
	.loc	15 63 25                # z_solve.c:63:25
	leal	-1(%r15), %eax
.Ltmp879:
	#DEBUG_VALUE: z_solve:ksize <- %EAX
	.loc	15 151 29 discriminator 1 # z_solve.c:151:29
	movl	%eax, 8(%rsp)           # 4-byte Spill
	addq	$-2, %r15
.Ltmp880:
	#DEBUG_VALUE: z_solve:k <- %R15D
	.loc	15 371 18               # z_solve.c:371:18
	movq	%r15, 232(%rsp)         # 8-byte Spill
	cltq
.Ltmp881:
	movq	%rax, 224(%rsp)         # 8-byte Spill
.Ltmp882:
	#DEBUG_VALUE: z_solve:ksize <- [%RSP+8]
	imulq	$600, %rax, %rax        # imm = 0x258
	leaq	lhs(%rax), %rdx
	.loc	15 378 52               # z_solve.c:378:52
	movq	%rdx, 216(%rsp)         # 8-byte Spill
	leaq	lhs+200(%rax), %rax
.Ltmp883:
	.loc	15 70 22 discriminator 1 # z_solve.c:70:22
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movl	grid_points(%rip), %eax
.Ltmp884:
	.loc	15 378 34               # z_solve.c:378:34
	imulq	$600, %r15, %rdx        # imm = 0x258
	leaq	lhs+400(%rdx), %rsi
.Ltmp885:
	.loc	15 69 3 discriminator 1 # z_solve.c:69:3
	movq	%rsi, 200(%rsp)         # 8-byte Spill
	imulq	$169000, %r15, %rsi     # imm = 0x29428
	movq	%rsi, 192(%rsp)         # 8-byte Spill
	leaq	rhs+2640(%rsi), %rsi
	leaq	lhs+560(%rdx), %rdx
	movq	%rdx, 184(%rsp)         # 8-byte Spill
	movl	$1, %r13d
	movl	$528, %edi              # imm = 0x210
	movl	$rhs+171640, %ebp
.Ltmp886:
	.loc	15 78 23                # z_solve.c:78:23
	xorpd	%xmm15, %xmm15
	.loc	15 82 59                # z_solve.c:82:59
	movapd	.LCPI14_2(%rip), %xmm11 # xmm11 = [9223372036854775808,9223372036854775808]
.Ltmp887:
	.p2align	4, 0x90
.LBB14_4:                               # %for.cond2.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB14_5 Depth 2
                                        #       Child Loop BB14_7 Depth 3
                                        #       Child Loop BB14_12 Depth 3
                                        #       Child Loop BB14_14 Depth 3
                                        #       Child Loop BB14_16 Depth 3
                                        #         Child Loop BB14_17 Depth 4
	.loc	15 70 19 discriminator 1 # z_solve.c:70:19
	movq	%rbp, 160(%rsp)         # 8-byte Spill
	movq	%rdi, 168(%rsp)         # 8-byte Spill
	movq	%r13, 240(%rsp)         # 8-byte Spill
	movq	%rsi, 176(%rsp)         # 8-byte Spill
	movl	%eax, %edx
	addl	$-2, %edx
	movq	%rsi, 56(%rsp)          # 8-byte Spill
	movq	%rdi, %rbx
	movl	$1, %r12d
	jle	.LBB14_21
	.p2align	4, 0x90
.LBB14_5:                               # %for.cond6.preheader
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_7 Depth 3
                                        #       Child Loop BB14_12 Depth 3
                                        #       Child Loop BB14_14 Depth 3
                                        #       Child Loop BB14_16 Depth 3
                                        #         Child Loop BB14_17 Depth 4
.Ltmp888:
	.loc	15 71 7 discriminator 1 # z_solve.c:71:7
	cmpl	$0, 12(%rsp)            # 4-byte Folded Reload
	jle	.LBB14_9
# BB#6:                                 # %for.body8.lr.ph
                                        #   in Loop: Header=BB14_5 Depth=2
.Ltmp889:
	.loc	15 95 13                # z_solve.c:95:13
	movsd	c2(%rip), %xmm12        # xmm12 = mem[0],zero
	.loc	15 98 31                # z_solve.c:98:31
	movsd	.LCPI14_0(%rip), %xmm0  # xmm0 = mem[0],zero
	subsd	%xmm12, %xmm0
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	.loc	15 101 30               # z_solve.c:101:30
	movapd	%xmm12, %xmm0
	addsd	%xmm0, %xmm0
	movapd	%xmm0, 144(%rsp)        # 16-byte Spill
	.loc	15 101 56 is_stmt 0     # z_solve.c:101:56
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	15 115 27 is_stmt 1     # z_solve.c:115:27
	movsd	%xmm0, 80(%rsp)         # 8-byte Spill
	movsd	c3c4(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	15 127 27               # z_solve.c:127:27
	movsd	%xmm0, 16(%rsp)         # 8-byte Spill
	movsd	con43(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	15 127 33 is_stmt 0     # z_solve.c:127:33
	movapd	%xmm2, %xmm3
	mulsd	%xmm0, %xmm3
	.loc	15 130 33 is_stmt 1     # z_solve.c:130:33
	movsd	%xmm3, 24(%rsp)         # 8-byte Spill
	mulsd	c3(%rip), %xmm2
	.loc	15 130 38 is_stmt 0     # z_solve.c:130:38
	mulsd	c4(%rip), %xmm2
	movapd	%xmm2, 128(%rsp)        # 16-byte Spill
	.loc	15 134 15 is_stmt 1     # z_solve.c:134:15
	movsd	c1345(%rip), %xmm13     # xmm13 = mem[0],zero
	.loc	15 134 13 is_stmt 0     # z_solve.c:134:13
	subsd	%xmm13, %xmm0
	movsd	%xmm0, 112(%rsp)        # 8-byte Spill
	.loc	15 137 15 is_stmt 1     # z_solve.c:137:15
	subsd	%xmm13, %xmm3
	movsd	%xmm3, 96(%rsp)         # 8-byte Spill
	.loc	15 97 30                # z_solve.c:97:30
	movapd	%xmm12, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 64(%rsp)         # 16-byte Spill
	movl	12(%rsp), %eax          # 4-byte Reload
	xorl	%ecx, %ecx
	movq	%rbx, %rdx
	.loc	15 72 20                # z_solve.c:72:20
	movabsq	$4607182418800017408, %rsi # imm = 0x3FF0000000000000
	.p2align	4, 0x90
.LBB14_7:                               # %for.body8
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	.LCPI14_1(%rip), %xmm14 # xmm14 = mem[0],zero
	divsd	u(%rdx,%rdx,4), %xmm14
	.loc	15 82 29                # z_solve.c:82:29
	movupd	u+8(%rdx,%rdx,4), %xmm7
	.loc	15 96 30                # z_solve.c:96:30
	movapd	%xmm12, %xmm1
	unpcklpd	%xmm14, %xmm1   # xmm1 = xmm1[0],xmm14[0]
	movapd	%xmm7, %xmm4
	.loc	15 76 23                # z_solve.c:76:23
	movq	$0, fjac(%rcx)
	.loc	15 77 23                # z_solve.c:77:23
	movq	$0, fjac+40(%rcx)
	.loc	15 96 30                # z_solve.c:96:30
	unpcklpd	%xmm14, %xmm4   # xmm4 = xmm4[0],xmm14[0]
	.loc	15 79 23                # z_solve.c:79:23
	movq	%rsi, fjac+120(%rcx)
	.loc	15 82 43                # z_solve.c:82:43
	movsd	u+24(%rdx,%rdx,4), %xmm9 # xmm9 = mem[0],zero
	.loc	15 83 39                # z_solve.c:83:39
	movapd	%xmm9, %xmm3
	mulsd	%xmm14, %xmm3
	.loc	15 96 30                # z_solve.c:96:30
	mulpd	%xmm1, %xmm4
	.loc	15 74 21                # z_solve.c:74:21
	movapd	%xmm4, %xmm10
	.loc	15 83 23                # z_solve.c:83:23
	movsd	%xmm3, fjac+48(%rcx)
	.loc	15 78 23                # z_solve.c:78:23
	movupd	%xmm15, fjac+80(%rcx)
	.loc	15 80 23                # z_solve.c:80:23
	movupd	%xmm15, fjac+160(%rcx)
	.loc	15 82 42                # z_solve.c:82:42
	movapd	%xmm9, %xmm2
	.loc	15 74 21                # z_solve.c:74:21
	shufpd	$1, %xmm10, %xmm10      # xmm10 = xmm10[1,0]
	.loc	15 82 42                # z_solve.c:82:42
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm7, %xmm2
	.loc	15 82 59 is_stmt 0      # z_solve.c:82:59
	movapd	%xmm4, %xmm1
	movhlps	%xmm1, %xmm1            # xmm1 = xmm1[1,1]
	mulpd	%xmm2, %xmm1
	xorpd	%xmm11, %xmm1
	.loc	15 82 23                # z_solve.c:82:23
	movupd	%xmm1, fjac+8(%rcx)
	.loc	15 85 39 is_stmt 1      # z_solve.c:85:39
	movapd	%xmm14, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	.loc	15 89 23                # z_solve.c:89:23
	movq	$0, fjac+56(%rcx)
	.loc	15 85 39                # z_solve.c:85:39
	mulpd	%xmm7, %xmm6
	.loc	15 94 41                # z_solve.c:94:41
	movapd	%xmm9, %xmm1
	mulsd	%xmm1, %xmm1
	.loc	15 94 56 is_stmt 0      # z_solve.c:94:56
	mulsd	%xmm10, %xmm1
	.loc	15 90 23 is_stmt 1      # z_solve.c:90:23
	movsd	%xmm3, fjac+96(%rcx)
	.loc	15 95 18                # z_solve.c:95:18
	movsd	qs(%rdx), %xmm15        # xmm15 = mem[0],zero
	.loc	15 95 16 is_stmt 0      # z_solve.c:95:16
	movapd	%xmm12, %xmm3
	mulsd	%xmm15, %xmm3
	.loc	15 95 11                # z_solve.c:95:11
	subsd	%xmm1, %xmm3
	.loc	15 85 23 is_stmt 1      # z_solve.c:85:23
	movupd	%xmm6, fjac+128(%rcx)
	movsd	square(%rdx), %xmm6     # xmm6 = mem[0],zero
	.loc	15 101 36               # z_solve.c:101:36
	mulsd	144(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	15 101 61 is_stmt 0     # z_solve.c:101:61
	movsd	u+32(%rdx,%rdx,4), %xmm11 # xmm11 = mem[0],zero
	movsd	80(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	15 101 59               # z_solve.c:101:59
	movapd	%xmm5, %xmm0
	.loc	15 92 23 is_stmt 1      # z_solve.c:92:23
	movq	$0, fjac+176(%rcx)
	.loc	15 101 59               # z_solve.c:101:59
	mulsd	%xmm11, %xmm0
	.loc	15 101 54 is_stmt 0     # z_solve.c:101:54
	subsd	%xmm0, %xmm6
	.loc	15 103 30 is_stmt 1     # z_solve.c:103:30
	movapd	%xmm12, %xmm0
	mulsd	%xmm2, %xmm0
	.loc	15 94 23                # z_solve.c:94:23
	movsd	%xmm3, fjac+24(%rcx)
	.loc	15 96 47                # z_solve.c:96:47
	movapd	%xmm14, %xmm3
	unpcklpd	%xmm0, %xmm3    # xmm3 = xmm3[0],xmm0[0]
	.loc	15 98 38                # z_solve.c:98:38
	movsd	32(%rsp), %xmm0         # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm9, %xmm0
	.loc	15 98 55 is_stmt 0      # z_solve.c:98:55
	mulsd	%xmm14, %xmm0
	.loc	15 98 23                # z_solve.c:98:23
	movsd	%xmm0, fjac+144(%rcx)
	.loc	15 99 23 is_stmt 1      # z_solve.c:99:23
	movsd	%xmm12, fjac+184(%rcx)
	.loc	15 102 11               # z_solve.c:102:11
	mulsd	%xmm9, %xmm6
	.loc	15 102 27 is_stmt 0     # z_solve.c:102:27
	mulsd	%xmm10, %xmm6
	.loc	15 101 23 is_stmt 1     # z_solve.c:101:23
	movsd	%xmm6, fjac+32(%rcx)
	.loc	15 97 30                # z_solve.c:97:30
	movapd	%xmm7, %xmm0
	unpckhpd	%xmm2, %xmm0    # xmm0 = xmm0[1],xmm2[1]
	.loc	15 96 47                # z_solve.c:96:47
	mulpd	%xmm4, %xmm3
	.loc	15 97 30                # z_solve.c:97:30
	mulpd	64(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	15 97 47 is_stmt 0      # z_solve.c:97:47
	movsd	%xmm14, %xmm4           # xmm4 = xmm14[0],xmm4[1]
	mulpd	%xmm0, %xmm4
	.loc	15 74 21 is_stmt 1      # z_solve.c:74:21
	movapd	%xmm14, %xmm8
	mulsd	%xmm10, %xmm8
	.loc	15 96 47                # z_solve.c:96:47
	xorpd	.LCPI14_2(%rip), %xmm3
	.loc	15 96 23 is_stmt 0      # z_solve.c:96:23
	movupd	%xmm3, fjac+64(%rcx)
	.loc	15 97 47 is_stmt 1      # z_solve.c:97:47
	xorpd	.LCPI14_2(%rip), %xmm4
	.loc	15 138 19               # z_solve.c:138:19
	movapd	%xmm13, %xmm2
	mulsd	%xmm10, %xmm2
	.loc	15 138 26 is_stmt 0     # z_solve.c:138:26
	mulsd	%xmm11, %xmm2
	.loc	15 97 23 is_stmt 1      # z_solve.c:97:23
	movupd	%xmm4, fjac+104(%rcx)
	.loc	15 105 46               # z_solve.c:105:46
	mulsd	%xmm14, %xmm11
	.loc	15 106 32               # z_solve.c:106:32
	addsd	%xmm15, %xmm1
	.loc	15 78 23                # z_solve.c:78:23
	xorpd	%xmm15, %xmm15
	.loc	15 106 16               # z_solve.c:106:16
	mulsd	%xmm12, %xmm1
	.loc	15 105 28               # z_solve.c:105:28
	mulsd	%xmm5, %xmm11
	.loc	15 107 28               # z_solve.c:107:28
	mulsd	%xmm5, %xmm9
	.loc	15 107 44 is_stmt 0     # z_solve.c:107:44
	mulsd	%xmm14, %xmm9
	.loc	15 109 23 is_stmt 1     # z_solve.c:109:23
	movq	$0, njac(%rcx)
	.loc	15 106 11               # z_solve.c:106:11
	subsd	%xmm1, %xmm11
	.loc	15 110 23               # z_solve.c:110:23
	movq	$0, njac+40(%rcx)
	movsd	16(%rsp), %xmm3         # 8-byte Reload
                                        # xmm3 = mem[0],zero
	.loc	15 115 32               # z_solve.c:115:32
	movapd	%xmm3, %xmm0
	mulsd	%xmm10, %xmm0
	.loc	15 115 41 is_stmt 0     # z_solve.c:115:41
	movsd	u+8(%rdx,%rdx,4), %xmm1 # xmm1 = mem[0],zero
	.loc	15 105 23 is_stmt 1     # z_solve.c:105:23
	movsd	%xmm11, fjac+152(%rcx)
	.loc	15 82 59                # z_solve.c:82:59
	movapd	.LCPI14_2(%rip), %xmm11 # xmm11 = [9223372036854775808,9223372036854775808]
	.loc	15 116 32               # z_solve.c:116:32
	mulsd	%xmm14, %xmm3
	.loc	15 116 23 is_stmt 0     # z_solve.c:116:23
	movsd	%xmm3, njac+48(%rcx)
	.loc	15 111 23 is_stmt 1     # z_solve.c:111:23
	movupd	%xmm15, njac+80(%rcx)
	.loc	15 107 23               # z_solve.c:107:23
	movsd	%xmm9, fjac+192(%rcx)
	.loc	15 112 23               # z_solve.c:112:23
	movupd	%xmm15, njac+120(%rcx)
	.loc	15 115 39               # z_solve.c:115:39
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movsd	%xmm1, %xmm7            # xmm7 = xmm1[0],xmm7[1]
	.loc	15 113 23               # z_solve.c:113:23
	movupd	%xmm15, njac+160(%rcx)
	.loc	15 115 39               # z_solve.c:115:39
	mulpd	%xmm0, %xmm7
	xorpd	%xmm11, %xmm7
	.loc	15 115 23 is_stmt 0     # z_solve.c:115:23
	movupd	%xmm7, njac+8(%rcx)
	.loc	15 122 23 is_stmt 1     # z_solve.c:122:23
	movq	$0, njac+56(%rcx)
	.loc	15 123 23               # z_solve.c:123:23
	movsd	%xmm3, njac+96(%rcx)
	.loc	15 124 23               # z_solve.c:124:23
	movq	$0, njac+136(%rcx)
	.loc	15 127 40               # z_solve.c:127:40
	movsd	24(%rsp), %xmm0         # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm10, %xmm0
	.loc	15 125 23               # z_solve.c:125:23
	movq	$0, njac+176(%rcx)
	.loc	15 127 49               # z_solve.c:127:49
	movsd	u+24(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	15 127 47 is_stmt 0     # z_solve.c:127:47
	mulsd	%xmm3, %xmm0
	movsd	112(%rsp), %xmm7        # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.loc	15 134 23 is_stmt 1     # z_solve.c:134:23
	movapd	%xmm7, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	15 134 46 is_stmt 0     # z_solve.c:134:46
	movapd	%xmm1, %xmm6
	.loc	15 127 47 is_stmt 1     # z_solve.c:127:47
	xorpd	%xmm11, %xmm0
	.loc	15 134 46               # z_solve.c:134:46
	mulsd	%xmm6, %xmm6
	.loc	15 134 30 is_stmt 0     # z_solve.c:134:30
	mulsd	%xmm4, %xmm6
	xorpd	%xmm11, %xmm6
	.loc	15 127 23 is_stmt 1     # z_solve.c:127:23
	movlpd	%xmm0, njac+24(%rcx)
	.loc	15 135 40               # z_solve.c:135:40
	movsd	u+16(%rdx,%rdx,4), %xmm0 # xmm0 = mem[0],zero
	.loc	15 140 43               # z_solve.c:140:43
	mulsd	%xmm10, %xmm7
	.loc	15 140 50 is_stmt 0     # z_solve.c:140:50
	mulsd	%xmm7, %xmm1
	.loc	15 141 50 is_stmt 1     # z_solve.c:141:50
	mulsd	%xmm0, %xmm7
	.loc	15 135 53               # z_solve.c:135:53
	mulsd	%xmm0, %xmm0
	.loc	15 135 37 is_stmt 0     # z_solve.c:135:37
	mulsd	%xmm4, %xmm0
	.loc	15 135 11               # z_solve.c:135:11
	subsd	%xmm0, %xmm6
	.loc	15 137 25 is_stmt 1     # z_solve.c:137:25
	movapd	%xmm8, %xmm0
	.loc	15 130 43               # z_solve.c:130:43
	movapd	%xmm14, %xmm4
	movsd	96(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	15 137 25               # z_solve.c:137:25
	mulsd	%xmm5, %xmm0
	.loc	15 130 43               # z_solve.c:130:43
	unpcklpd	%xmm3, %xmm4    # xmm4 = xmm4[0],xmm3[0]
	.loc	15 137 48               # z_solve.c:137:48
	mulsd	%xmm3, %xmm3
	.loc	15 137 32 is_stmt 0     # z_solve.c:137:32
	mulsd	%xmm0, %xmm3
	.loc	15 136 11 is_stmt 1     # z_solve.c:136:11
	subsd	%xmm3, %xmm6
	.loc	15 138 11               # z_solve.c:138:11
	subsd	%xmm2, %xmm6
	.loc	15 128 23               # z_solve.c:128:23
	movq	$0, njac+64(%rcx)
	.loc	15 129 23               # z_solve.c:129:23
	movq	$0, njac+104(%rcx)
	.loc	15 131 23               # z_solve.c:131:23
	movq	$0, njac+184(%rcx)
	.loc	15 133 23               # z_solve.c:133:23
	movsd	%xmm6, njac+32(%rcx)
	.loc	15 140 23               # z_solve.c:140:23
	movsd	%xmm1, njac+72(%rcx)
	.loc	15 143 23               # z_solve.c:143:23
	movapd	%xmm5, %xmm0
	mulsd	%xmm10, %xmm0
	.loc	15 141 23               # z_solve.c:141:23
	movsd	%xmm7, njac+112(%rcx)
	.loc	15 130 43               # z_solve.c:130:43
	movapd	128(%rsp), %xmm1        # 16-byte Reload
	unpcklpd	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	mulpd	%xmm1, %xmm4
	.loc	15 130 23 is_stmt 0     # z_solve.c:130:23
	movupd	%xmm4, njac+144(%rcx)
	.loc	15 144 34 is_stmt 1     # z_solve.c:144:34
	movapd	%xmm13, %xmm0
	mulsd	%xmm14, %xmm0
	.loc	15 144 23 is_stmt 0     # z_solve.c:144:23
	movsd	%xmm0, njac+192(%rcx)
.Ltmp890:
	.loc	15 71 7 is_stmt 1 discriminator 1 # z_solve.c:71:7
	addq	$33800, %rdx            # imm = 0x8408
	addq	$200, %rcx
	decl	%eax
	jne	.LBB14_7
# BB#8:                                 # %for.cond6.for.end_crit_edge
                                        #   in Loop: Header=BB14_5 Depth=2
.Ltmp891:
	.loc	15 144 36               # z_solve.c:144:36
	movsd	%xmm14, tmp1(%rip)
	.loc	15 143 25               # z_solve.c:143:25
	movsd	%xmm10, tmp2(%rip)
	.loc	15 134 25               # z_solve.c:134:25
	movsd	%xmm8, tmp3(%rip)
.Ltmp892:
.LBB14_9:                               # %for.end
                                        #   in Loop: Header=BB14_5 Depth=2
	.loc	15 150 7                # z_solve.c:150:7
	movl	$lhs, %edi
	movl	8(%rsp), %esi           # 4-byte Reload
	callq	lhsinit
.Ltmp893:
	#DEBUG_VALUE: z_solve:k <- 1
	.loc	15 151 7 discriminator 1 # z_solve.c:151:7
	testl	%r15d, %r15d
	jle	.LBB14_10
# BB#11:                                # %for.body579.lr.ph
                                        #   in Loop: Header=BB14_5 Depth=2
	movq	%rbx, 40(%rsp)          # 8-byte Spill
.Ltmp894:
	.loc	15 152 19               # z_solve.c:152:19
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movsd	tz1(%rip), %xmm6        # xmm6 = mem[0],zero
	movhpd	tz2(%rip), %xmm6        # xmm6 = xmm6[0],mem[0]
	mulpd	%xmm0, %xmm6
	.loc	15 157 20               # z_solve.c:157:20
	movsd	dz1(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	15 171 20               # z_solve.c:171:20
	movsd	dz2(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	15 185 20               # z_solve.c:185:20
	movsd	dz3(%rip), %xmm2        # xmm2 = mem[0],zero
	.loc	15 199 20               # z_solve.c:199:20
	movsd	dz4(%rip), %xmm3        # xmm3 = mem[0],zero
	.loc	15 213 20               # z_solve.c:213:20
	movsd	dz5(%rip), %xmm5        # xmm5 = mem[0],zero
	.loc	15 157 18               # z_solve.c:157:18
	movapd	%xmm6, %xmm12
	mulsd	%xmm0, %xmm12
	.loc	15 171 18               # z_solve.c:171:18
	movapd	%xmm6, %xmm13
	mulsd	%xmm1, %xmm13
	.loc	15 185 18               # z_solve.c:185:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm2, %xmm4
	movapd	%xmm4, 64(%rsp)         # 16-byte Spill
	movapd	%xmm4, %xmm8
	.loc	15 199 18               # z_solve.c:199:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm3, %xmm4
	movapd	%xmm4, 112(%rsp)        # 16-byte Spill
	.loc	15 213 18               # z_solve.c:213:18
	movapd	%xmm6, %xmm4
	mulsd	%xmm5, %xmm4
	movapd	%xmm4, 96(%rsp)         # 16-byte Spill
	.loc	15 216 18               # z_solve.c:216:18
	movapd	%xmm6, %xmm4
	addsd	%xmm4, %xmm4
	.loc	15 217 24               # z_solve.c:217:24
	mulsd	%xmm4, %xmm0
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	.loc	15 226 24               # z_solve.c:226:24
	mulsd	%xmm4, %xmm1
	movsd	%xmm1, 144(%rsp)        # 8-byte Spill
	.loc	15 235 24               # z_solve.c:235:24
	mulsd	%xmm4, %xmm2
	movsd	%xmm2, 128(%rsp)        # 8-byte Spill
	.loc	15 244 24               # z_solve.c:244:24
	mulsd	%xmm4, %xmm3
	movsd	%xmm3, 24(%rsp)         # 8-byte Spill
	.loc	15 253 24               # z_solve.c:253:24
	mulsd	%xmm4, %xmm5
	movsd	%xmm5, 16(%rsp)         # 8-byte Spill
	.loc	15 241 39               # z_solve.c:241:39
	movapd	%xmm4, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 80(%rsp)         # 16-byte Spill
	.loc	15 158 35               # z_solve.c:158:35
	movapd	%xmm6, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	15 160 35               # z_solve.c:160:35
	movapd	%xmm6, %xmm14
	movhlps	%xmm14, %xmm14          # xmm14 = xmm14[1,1]
	.loc	15 161 18               # z_solve.c:161:18
	movapd	%xmm6, %xmm10
	movlhps	%xmm10, %xmm10          # xmm10 = xmm10[0,0]
	movl	%r15d, %eax
	movl	$592, %ecx              # imm = 0x250
.Ltmp895:
	.loc	15 82 59                # z_solve.c:82:59
	movapd	.LCPI14_2(%rip), %xmm1  # xmm1 = [9223372036854775808,9223372036854775808]
.Ltmp896:
	.loc	15 198 11               # z_solve.c:198:11
	movsd	.LCPI14_3(%rip), %xmm11 # xmm11 = mem[0],zero
	.p2align	4, 0x90
.LBB14_12:                              # %for.body579
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	fjac-592(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 155 35               # z_solve.c:155:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	movsd	njac-552(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 159 18               # z_solve.c:159:18
	mulsd	%xmm6, %xmm2
	.loc	15 156 18               # z_solve.c:156:18
	movsd	njac-592(%rcx), %xmm5   # xmm5 = mem[0],zero
	movhpd	fjac-584(%rcx), %xmm5   # xmm5 = xmm5[0],mem[0]
	mulpd	%xmm6, %xmm5
	.loc	15 156 11 is_stmt 0     # z_solve.c:156:11
	unpcklpd	%xmm11, %xmm3   # xmm3 = xmm3[0],xmm11[0]
	subpd	%xmm5, %xmm3
	movsd	njac-584(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	15 168 18 is_stmt 1     # z_solve.c:168:18
	mulsd	%xmm6, %xmm5
	.loc	15 157 11               # z_solve.c:157:11
	movapd	%xmm12, %xmm7
	unpcklpd	%xmm5, %xmm7    # xmm7 = xmm7[0],xmm5[0]
	subpd	%xmm7, %xmm3
	.loc	15 158 35               # z_solve.c:158:35
	movsd	fjac-552(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	15 155 26               # z_solve.c:155:26
	movupd	%xmm3, lhs-1176(%rcx,%rcx,2)
	movsd	fjac-544(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 169 35               # z_solve.c:169:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	15 158 35               # z_solve.c:158:35
	movhpd	njac-544(%rcx), %xmm5   # xmm5 = xmm5[0],mem[0]
	mulpd	%xmm0, %xmm5
	movapd	%xmm11, %xmm7
	unpcklpd	%xmm3, %xmm7    # xmm7 = xmm7[0],xmm3[0]
	subpd	%xmm5, %xmm7
	.loc	15 159 11               # z_solve.c:159:11
	unpcklpd	%xmm13, %xmm2   # xmm2 = xmm2[0],xmm13[0]
	subpd	%xmm2, %xmm7
	.loc	15 158 26               # z_solve.c:158:26
	movupd	%xmm7, lhs-1136(%rcx,%rcx,2)
	.loc	15 160 37               # z_solve.c:160:37
	movupd	fjac-512(%rcx), %xmm2
	.loc	15 160 35 is_stmt 0     # z_solve.c:160:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	15 161 20 is_stmt 1     # z_solve.c:161:20
	movupd	njac-512(%rcx), %xmm3
	.loc	15 161 18 is_stmt 0     # z_solve.c:161:18
	mulpd	%xmm10, %xmm3
	.loc	15 161 11               # z_solve.c:161:11
	subpd	%xmm3, %xmm2
	.loc	15 160 26 is_stmt 1     # z_solve.c:160:26
	movupd	%xmm2, lhs-1096(%rcx,%rcx,2)
	.loc	15 162 37               # z_solve.c:162:37
	movupd	fjac-472(%rcx), %xmm2
	.loc	15 162 35 is_stmt 0     # z_solve.c:162:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	15 163 20 is_stmt 1     # z_solve.c:163:20
	movupd	njac-472(%rcx), %xmm3
	.loc	15 163 18 is_stmt 0     # z_solve.c:163:18
	mulpd	%xmm10, %xmm3
	.loc	15 163 11               # z_solve.c:163:11
	subpd	%xmm3, %xmm2
	.loc	15 162 26 is_stmt 1     # z_solve.c:162:26
	movupd	%xmm2, lhs-1056(%rcx,%rcx,2)
	.loc	15 164 37               # z_solve.c:164:37
	movupd	fjac-432(%rcx), %xmm2
	.loc	15 164 35 is_stmt 0     # z_solve.c:164:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	15 165 20 is_stmt 1     # z_solve.c:165:20
	movupd	njac-432(%rcx), %xmm3
	.loc	15 165 18 is_stmt 0     # z_solve.c:165:18
	mulpd	%xmm10, %xmm3
	.loc	15 165 11               # z_solve.c:165:11
	subpd	%xmm3, %xmm2
	.loc	15 164 26 is_stmt 1     # z_solve.c:164:26
	movupd	%xmm2, lhs-1016(%rcx,%rcx,2)
	movsd	fjac-536(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 181 35               # z_solve.c:181:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-536(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 182 18               # z_solve.c:182:18
	mulsd	%xmm6, %xmm3
	.loc	15 182 11 is_stmt 0     # z_solve.c:182:11
	subsd	%xmm3, %xmm2
	.loc	15 181 26 is_stmt 1     # z_solve.c:181:26
	movsd	%xmm2, lhs-1120(%rcx,%rcx,2)
	movsd	fjac-496(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 183 35               # z_solve.c:183:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-496(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 184 18               # z_solve.c:184:18
	mulsd	%xmm6, %xmm3
	.loc	15 184 11 is_stmt 0     # z_solve.c:184:11
	subsd	%xmm3, %xmm2
	.loc	15 185 11 is_stmt 1     # z_solve.c:185:11
	subsd	%xmm8, %xmm2
	.loc	15 183 26               # z_solve.c:183:26
	movsd	%xmm2, lhs-1080(%rcx,%rcx,2)
	movsd	fjac-456(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 186 35               # z_solve.c:186:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-456(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 187 18               # z_solve.c:187:18
	mulsd	%xmm6, %xmm3
	.loc	15 187 11 is_stmt 0     # z_solve.c:187:11
	subsd	%xmm3, %xmm2
	.loc	15 186 26 is_stmt 1     # z_solve.c:186:26
	movsd	%xmm2, lhs-1040(%rcx,%rcx,2)
	movsd	fjac-416(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 188 35               # z_solve.c:188:35
	mulsd	%xmm0, %xmm2
	xorpd	%xmm1, %xmm2
	movsd	njac-416(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 189 18               # z_solve.c:189:18
	mulsd	%xmm6, %xmm3
	.loc	15 189 11 is_stmt 0     # z_solve.c:189:11
	subsd	%xmm3, %xmm2
	.loc	15 188 26 is_stmt 1     # z_solve.c:188:26
	movsd	%xmm2, lhs-1000(%rcx,%rcx,2)
	.loc	15 179 37               # z_solve.c:179:37
	movupd	fjac-576(%rcx), %xmm2
	.loc	15 179 35 is_stmt 0     # z_solve.c:179:35
	mulpd	%xmm14, %xmm2
	xorpd	%xmm1, %xmm2
	.loc	15 180 20 is_stmt 1     # z_solve.c:180:20
	movupd	njac-576(%rcx), %xmm3
	.loc	15 180 18 is_stmt 0     # z_solve.c:180:18
	mulpd	%xmm10, %xmm3
	.loc	15 180 11               # z_solve.c:180:11
	subpd	%xmm3, %xmm2
	.loc	15 179 26 is_stmt 1     # z_solve.c:179:26
	movupd	%xmm2, lhs-1160(%rcx,%rcx,2)
	movsd	fjac-448(%rcx), %xmm9   # xmm9 = mem[0],zero
	movsd	njac-408(%rcx), %xmm8   # xmm8 = mem[0],zero
	movsd	fjac-560(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 203 35               # z_solve.c:203:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	movsd	njac-560(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 204 18               # z_solve.c:204:18
	mulsd	%xmm6, %xmm2
	.loc	15 204 11 is_stmt 0     # z_solve.c:204:11
	subsd	%xmm2, %xmm3
	movapd	%xmm11, %xmm7
	.loc	15 198 18 is_stmt 1     # z_solve.c:198:18
	movsd	njac-448(%rcx), %xmm11  # xmm11 = mem[0],zero
	.loc	15 200 35               # z_solve.c:200:35
	movsd	fjac-408(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 203 26               # z_solve.c:203:26
	movsd	%xmm3, lhs-1144(%rcx,%rcx,2)
	.loc	15 193 37               # z_solve.c:193:37
	movupd	fjac-528(%rcx), %xmm3
	.loc	15 193 35 is_stmt 0     # z_solve.c:193:35
	mulpd	%xmm14, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	15 194 20 is_stmt 1     # z_solve.c:194:20
	movupd	njac-528(%rcx), %xmm5
	.loc	15 194 18 is_stmt 0     # z_solve.c:194:18
	mulpd	%xmm10, %xmm5
	.loc	15 194 11               # z_solve.c:194:11
	subpd	%xmm5, %xmm3
	.loc	15 193 26 is_stmt 1     # z_solve.c:193:26
	movupd	%xmm3, lhs-1112(%rcx,%rcx,2)
	.loc	15 195 37               # z_solve.c:195:37
	movupd	fjac-488(%rcx), %xmm3
	.loc	15 195 35 is_stmt 0     # z_solve.c:195:35
	mulpd	%xmm14, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	15 196 20 is_stmt 1     # z_solve.c:196:20
	movupd	njac-488(%rcx), %xmm5
	.loc	15 196 18 is_stmt 0     # z_solve.c:196:18
	mulpd	%xmm10, %xmm5
	.loc	15 196 11               # z_solve.c:196:11
	subpd	%xmm5, %xmm3
	.loc	15 197 35 is_stmt 1     # z_solve.c:197:35
	mulsd	%xmm0, %xmm9
	xorpd	%xmm1, %xmm9
	.loc	15 195 26               # z_solve.c:195:26
	movupd	%xmm3, lhs-1072(%rcx,%rcx,2)
	.loc	15 198 18               # z_solve.c:198:18
	movhpd	fjac-440(%rcx), %xmm11  # xmm11 = xmm11[0],mem[0]
	mulpd	%xmm6, %xmm11
	.loc	15 198 11 is_stmt 0     # z_solve.c:198:11
	unpcklpd	%xmm7, %xmm9    # xmm9 = xmm9[0],xmm7[0]
	subpd	%xmm11, %xmm9
	movapd	%xmm7, %xmm11
	movsd	njac-440(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 210 18 is_stmt 1     # z_solve.c:210:18
	mulsd	%xmm6, %xmm3
	movapd	112(%rsp), %xmm15       # 16-byte Reload
	.loc	15 199 11               # z_solve.c:199:11
	movapd	%xmm15, %xmm5
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
	.loc	15 201 18               # z_solve.c:201:18
	mulsd	%xmm6, %xmm8
	.loc	15 199 11               # z_solve.c:199:11
	subpd	%xmm5, %xmm9
	.loc	15 197 26               # z_solve.c:197:26
	movupd	%xmm9, lhs-1032(%rcx,%rcx,2)
	movsd	fjac-400(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 211 35               # z_solve.c:211:35
	mulsd	%xmm0, %xmm3
	xorpd	%xmm1, %xmm3
	.loc	15 200 35               # z_solve.c:200:35
	movhpd	njac-400(%rcx), %xmm2   # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm0, %xmm2
	movapd	%xmm11, %xmm5
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
	subpd	%xmm2, %xmm5
	movapd	96(%rsp), %xmm9         # 16-byte Reload
	.loc	15 201 11               # z_solve.c:201:11
	unpcklpd	%xmm9, %xmm8    # xmm8 = xmm8[0],xmm9[0]
	subpd	%xmm8, %xmm5
	.loc	15 200 26               # z_solve.c:200:26
	movupd	%xmm5, lhs-992(%rcx,%rcx,2)
	movsd	njac-392(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 216 24               # z_solve.c:216:24
	mulsd	%xmm4, %xmm2
.Ltmp897:
	.loc	15 72 20                # z_solve.c:72:20
	movsd	.LCPI14_1(%rip), %xmm5  # xmm5 = mem[0],zero
.Ltmp898:
	.loc	15 216 11               # z_solve.c:216:11
	addsd	%xmm5, %xmm2
	.loc	15 217 11               # z_solve.c:217:11
	addsd	32(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	15 215 26               # z_solve.c:215:26
	movsd	%xmm2, lhs-976(%rcx,%rcx,2)
	movsd	njac-352(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 218 39               # z_solve.c:218:39
	mulsd	%xmm4, %xmm2
	.loc	15 218 26 is_stmt 0     # z_solve.c:218:26
	movsd	%xmm2, lhs-936(%rcx,%rcx,2)
	movsd	njac-312(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 219 39 is_stmt 1     # z_solve.c:219:39
	mulsd	%xmm4, %xmm2
	.loc	15 219 26 is_stmt 0     # z_solve.c:219:26
	movsd	%xmm2, lhs-896(%rcx,%rcx,2)
	movsd	njac-272(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 220 39 is_stmt 1     # z_solve.c:220:39
	mulsd	%xmm4, %xmm2
	.loc	15 220 26 is_stmt 0     # z_solve.c:220:26
	movsd	%xmm2, lhs-856(%rcx,%rcx,2)
	movsd	njac-232(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 221 39 is_stmt 1     # z_solve.c:221:39
	mulsd	%xmm4, %xmm2
	.loc	15 221 26 is_stmt 0     # z_solve.c:221:26
	movsd	%xmm2, lhs-816(%rcx,%rcx,2)
	movsd	njac-384(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 223 39 is_stmt 1     # z_solve.c:223:39
	mulsd	%xmm4, %xmm2
	.loc	15 223 26 is_stmt 0     # z_solve.c:223:26
	movsd	%xmm2, lhs-968(%rcx,%rcx,2)
	movsd	njac-344(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 225 24 is_stmt 1     # z_solve.c:225:24
	mulsd	%xmm4, %xmm2
	.loc	15 225 11 is_stmt 0     # z_solve.c:225:11
	addsd	%xmm5, %xmm2
	.loc	15 226 11 is_stmt 1     # z_solve.c:226:11
	addsd	144(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	15 224 26               # z_solve.c:224:26
	movsd	%xmm2, lhs-928(%rcx,%rcx,2)
	movsd	njac-304(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 227 39               # z_solve.c:227:39
	mulsd	%xmm4, %xmm2
	.loc	15 227 26 is_stmt 0     # z_solve.c:227:26
	movsd	%xmm2, lhs-888(%rcx,%rcx,2)
	movsd	njac-296(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 234 24 is_stmt 1     # z_solve.c:234:24
	mulsd	%xmm4, %xmm2
	.loc	15 234 11 is_stmt 0     # z_solve.c:234:11
	addsd	%xmm5, %xmm2
	.loc	15 235 11 is_stmt 1     # z_solve.c:235:11
	addsd	128(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	15 233 26               # z_solve.c:233:26
	movsd	%xmm2, lhs-880(%rcx,%rcx,2)
	.loc	15 228 41               # z_solve.c:228:41
	movupd	njac-264(%rcx), %xmm2
	movapd	80(%rsp), %xmm3         # 16-byte Reload
	.loc	15 228 39 is_stmt 0     # z_solve.c:228:39
	mulpd	%xmm3, %xmm2
	.loc	15 228 26               # z_solve.c:228:26
	movupd	%xmm2, lhs-848(%rcx,%rcx,2)
	.loc	15 229 41 is_stmt 1     # z_solve.c:229:41
	movupd	njac-224(%rcx), %xmm2
	.loc	15 229 39 is_stmt 0     # z_solve.c:229:39
	mulpd	%xmm3, %xmm2
	.loc	15 229 26               # z_solve.c:229:26
	movupd	%xmm2, lhs-808(%rcx,%rcx,2)
	.loc	15 231 41 is_stmt 1     # z_solve.c:231:41
	movupd	njac-376(%rcx), %xmm2
	.loc	15 231 39 is_stmt 0     # z_solve.c:231:39
	mulpd	%xmm3, %xmm2
	.loc	15 231 26               # z_solve.c:231:26
	movupd	%xmm2, lhs-960(%rcx,%rcx,2)
	.loc	15 232 41 is_stmt 1     # z_solve.c:232:41
	movupd	njac-336(%rcx), %xmm2
	.loc	15 232 39 is_stmt 0     # z_solve.c:232:39
	mulpd	%xmm3, %xmm2
	.loc	15 232 26               # z_solve.c:232:26
	movupd	%xmm2, lhs-920(%rcx,%rcx,2)
	movsd	njac-248(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 243 24 is_stmt 1     # z_solve.c:243:24
	mulsd	%xmm4, %xmm2
	.loc	15 243 11 is_stmt 0     # z_solve.c:243:11
	addsd	%xmm5, %xmm2
	.loc	15 244 11 is_stmt 1     # z_solve.c:244:11
	addsd	24(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	15 242 26               # z_solve.c:242:26
	movsd	%xmm2, lhs-832(%rcx,%rcx,2)
	movsd	njac-208(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 245 39               # z_solve.c:245:39
	mulsd	%xmm4, %xmm2
	.loc	15 245 26 is_stmt 0     # z_solve.c:245:26
	movsd	%xmm2, lhs-792(%rcx,%rcx,2)
	movsd	njac-360(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 247 39 is_stmt 1     # z_solve.c:247:39
	mulsd	%xmm4, %xmm2
	.loc	15 247 26 is_stmt 0     # z_solve.c:247:26
	movsd	%xmm2, lhs-944(%rcx,%rcx,2)
	movsd	njac-320(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 248 39 is_stmt 1     # z_solve.c:248:39
	mulsd	%xmm4, %xmm2
	.loc	15 248 26 is_stmt 0     # z_solve.c:248:26
	movsd	%xmm2, lhs-904(%rcx,%rcx,2)
	.loc	15 241 41 is_stmt 1     # z_solve.c:241:41
	movupd	njac-288(%rcx), %xmm2
	.loc	15 241 39 is_stmt 0     # z_solve.c:241:39
	mulpd	%xmm3, %xmm2
	.loc	15 241 26               # z_solve.c:241:26
	movupd	%xmm2, lhs-872(%rcx,%rcx,2)
	movsd	njac-240(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 250 39 is_stmt 1     # z_solve.c:250:39
	mulsd	%xmm4, %xmm2
	.loc	15 250 26 is_stmt 0     # z_solve.c:250:26
	movsd	%xmm2, lhs-824(%rcx,%rcx,2)
	movsd	njac-200(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 252 24 is_stmt 1     # z_solve.c:252:24
	mulsd	%xmm4, %xmm2
	.loc	15 252 11 is_stmt 0     # z_solve.c:252:11
	addsd	%xmm5, %xmm2
	.loc	15 253 11 is_stmt 1     # z_solve.c:253:11
	addsd	16(%rsp), %xmm2         # 8-byte Folded Reload
	.loc	15 251 26               # z_solve.c:251:26
	movsd	%xmm2, lhs-784(%rcx,%rcx,2)
	movsd	fjac-192(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 255 34               # z_solve.c:255:34
	mulsd	%xmm0, %xmm3
	movsd	njac-192(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 256 18               # z_solve.c:256:18
	mulsd	%xmm6, %xmm2
	.loc	15 256 11 is_stmt 0     # z_solve.c:256:11
	subsd	%xmm2, %xmm3
	movsd	fjac-152(%rcx), %xmm2   # xmm2 = mem[0],zero
	movsd	fjac-184(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	15 267 34 is_stmt 1     # z_solve.c:267:34
	mulsd	%xmm0, %xmm5
	movsd	njac-184(%rcx), %xmm7   # xmm7 = mem[0],zero
	.loc	15 268 18               # z_solve.c:268:18
	mulsd	%xmm6, %xmm7
	.loc	15 257 11               # z_solve.c:257:11
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	movapd	%xmm12, %xmm5
	unpcklpd	%xmm7, %xmm5    # xmm5 = xmm5[0],xmm7[0]
	movsd	njac-152(%rcx), %xmm7   # xmm7 = mem[0],zero
	subpd	%xmm5, %xmm3
	.loc	15 255 26               # z_solve.c:255:26
	movupd	%xmm3, lhs-776(%rcx,%rcx,2)
	movsd	fjac-144(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 269 34               # z_solve.c:269:34
	mulsd	%xmm0, %xmm3
	movsd	njac-144(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	15 270 18               # z_solve.c:270:18
	mulsd	%xmm6, %xmm5
	.loc	15 270 11 is_stmt 0     # z_solve.c:270:11
	subsd	%xmm5, %xmm3
	.loc	15 258 34 is_stmt 1     # z_solve.c:258:34
	mulsd	%xmm0, %xmm2
	.loc	15 259 18               # z_solve.c:259:18
	mulsd	%xmm6, %xmm7
	.loc	15 259 11 is_stmt 0     # z_solve.c:259:11
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	unpcklpd	%xmm13, %xmm7   # xmm7 = xmm7[0],xmm13[0]
	subpd	%xmm7, %xmm2
	.loc	15 258 26 is_stmt 1     # z_solve.c:258:26
	movupd	%xmm2, lhs-736(%rcx,%rcx,2)
	.loc	15 260 36               # z_solve.c:260:36
	movupd	fjac-112(%rcx), %xmm2
	.loc	15 260 34 is_stmt 0     # z_solve.c:260:34
	mulpd	%xmm14, %xmm2
	.loc	15 261 20 is_stmt 1     # z_solve.c:261:20
	movupd	njac-112(%rcx), %xmm3
	.loc	15 261 18 is_stmt 0     # z_solve.c:261:18
	mulpd	%xmm10, %xmm3
	.loc	15 261 11               # z_solve.c:261:11
	subpd	%xmm3, %xmm2
	.loc	15 260 26 is_stmt 1     # z_solve.c:260:26
	movupd	%xmm2, lhs-696(%rcx,%rcx,2)
	.loc	15 262 36               # z_solve.c:262:36
	movupd	fjac-72(%rcx), %xmm2
	.loc	15 262 34 is_stmt 0     # z_solve.c:262:34
	mulpd	%xmm14, %xmm2
	.loc	15 263 20 is_stmt 1     # z_solve.c:263:20
	movupd	njac-72(%rcx), %xmm3
	.loc	15 263 18 is_stmt 0     # z_solve.c:263:18
	mulpd	%xmm10, %xmm3
	.loc	15 263 11               # z_solve.c:263:11
	subpd	%xmm3, %xmm2
	.loc	15 262 26 is_stmt 1     # z_solve.c:262:26
	movupd	%xmm2, lhs-656(%rcx,%rcx,2)
	.loc	15 264 36               # z_solve.c:264:36
	movupd	fjac-32(%rcx), %xmm2
	.loc	15 264 34 is_stmt 0     # z_solve.c:264:34
	mulpd	%xmm14, %xmm2
	.loc	15 265 20 is_stmt 1     # z_solve.c:265:20
	movupd	njac-32(%rcx), %xmm3
	.loc	15 265 18 is_stmt 0     # z_solve.c:265:18
	mulpd	%xmm10, %xmm3
	.loc	15 265 11               # z_solve.c:265:11
	subpd	%xmm3, %xmm2
	.loc	15 264 26 is_stmt 1     # z_solve.c:264:26
	movupd	%xmm2, lhs-616(%rcx,%rcx,2)
	movsd	fjac-176(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 279 34               # z_solve.c:279:34
	mulsd	%xmm0, %xmm2
	movsd	njac-176(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 280 18               # z_solve.c:280:18
	mulsd	%xmm6, %xmm3
	.loc	15 280 11 is_stmt 0     # z_solve.c:280:11
	subsd	%xmm3, %xmm2
	.loc	15 279 26 is_stmt 1     # z_solve.c:279:26
	movsd	%xmm2, lhs-760(%rcx,%rcx,2)
	movsd	fjac-136(%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	15 281 34               # z_solve.c:281:34
	mulsd	%xmm0, %xmm2
	movsd	njac-136(%rcx), %xmm3   # xmm3 = mem[0],zero
	.loc	15 282 18               # z_solve.c:282:18
	mulsd	%xmm6, %xmm3
	.loc	15 282 11 is_stmt 0     # z_solve.c:282:11
	subsd	%xmm3, %xmm2
	.loc	15 281 26 is_stmt 1     # z_solve.c:281:26
	movsd	%xmm2, lhs-720(%rcx,%rcx,2)
	movsd	fjac-96(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	15 283 34               # z_solve.c:283:34
	mulsd	%xmm0, %xmm2
	movsd	njac-96(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	15 284 18               # z_solve.c:284:18
	mulsd	%xmm6, %xmm3
	.loc	15 284 11 is_stmt 0     # z_solve.c:284:11
	subsd	%xmm3, %xmm2
	movapd	64(%rsp), %xmm3         # 16-byte Reload
	.loc	15 285 11 is_stmt 1     # z_solve.c:285:11
	subsd	%xmm3, %xmm2
	movapd	%xmm3, %xmm8
	.loc	15 283 26               # z_solve.c:283:26
	movsd	%xmm2, lhs-680(%rcx,%rcx,2)
	movsd	fjac-56(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	15 286 34               # z_solve.c:286:34
	mulsd	%xmm0, %xmm2
	movsd	njac-56(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	15 287 18               # z_solve.c:287:18
	mulsd	%xmm6, %xmm3
	.loc	15 287 11 is_stmt 0     # z_solve.c:287:11
	subsd	%xmm3, %xmm2
	.loc	15 286 26 is_stmt 1     # z_solve.c:286:26
	movsd	%xmm2, lhs-640(%rcx,%rcx,2)
	movsd	fjac-48(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	15 297 34               # z_solve.c:297:34
	mulsd	%xmm0, %xmm2
	movsd	njac-48(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	15 298 18               # z_solve.c:298:18
	mulsd	%xmm6, %xmm3
	.loc	15 298 11 is_stmt 0     # z_solve.c:298:11
	subsd	%xmm3, %xmm2
	.loc	15 288 36 is_stmt 1     # z_solve.c:288:36
	movupd	fjac-16(%rcx), %xmm3
	.loc	15 288 34 is_stmt 0     # z_solve.c:288:34
	mulpd	%xmm14, %xmm3
	.loc	15 289 20 is_stmt 1     # z_solve.c:289:20
	movupd	njac-16(%rcx), %xmm5
	.loc	15 289 18 is_stmt 0     # z_solve.c:289:18
	mulpd	%xmm10, %xmm5
	.loc	15 289 11               # z_solve.c:289:11
	subpd	%xmm5, %xmm3
	.loc	15 288 26 is_stmt 1     # z_solve.c:288:26
	movupd	%xmm3, lhs-600(%rcx,%rcx,2)
	.loc	15 291 36               # z_solve.c:291:36
	movupd	fjac-168(%rcx), %xmm3
	.loc	15 291 34 is_stmt 0     # z_solve.c:291:34
	mulpd	%xmm14, %xmm3
	.loc	15 292 20 is_stmt 1     # z_solve.c:292:20
	movupd	njac-168(%rcx), %xmm5
	.loc	15 292 18 is_stmt 0     # z_solve.c:292:18
	mulpd	%xmm10, %xmm5
	.loc	15 292 11               # z_solve.c:292:11
	subpd	%xmm5, %xmm3
	.loc	15 291 26 is_stmt 1     # z_solve.c:291:26
	movupd	%xmm3, lhs-752(%rcx,%rcx,2)
	.loc	15 293 36               # z_solve.c:293:36
	movupd	fjac-128(%rcx), %xmm3
	.loc	15 293 34 is_stmt 0     # z_solve.c:293:34
	mulpd	%xmm14, %xmm3
	.loc	15 294 20 is_stmt 1     # z_solve.c:294:20
	movupd	njac-128(%rcx), %xmm5
	.loc	15 294 18 is_stmt 0     # z_solve.c:294:18
	mulpd	%xmm10, %xmm5
	.loc	15 294 11               # z_solve.c:294:11
	subpd	%xmm5, %xmm3
	.loc	15 293 26 is_stmt 1     # z_solve.c:293:26
	movupd	%xmm3, lhs-712(%rcx,%rcx,2)
	.loc	15 295 36               # z_solve.c:295:36
	movupd	fjac-88(%rcx), %xmm3
	.loc	15 295 34 is_stmt 0     # z_solve.c:295:34
	mulpd	%xmm14, %xmm3
	.loc	15 296 20 is_stmt 1     # z_solve.c:296:20
	movupd	njac-88(%rcx), %xmm5
	.loc	15 296 18 is_stmt 0     # z_solve.c:296:18
	mulpd	%xmm10, %xmm5
	.loc	15 296 11               # z_solve.c:296:11
	subpd	%xmm5, %xmm3
	.loc	15 295 26 is_stmt 1     # z_solve.c:295:26
	movupd	%xmm3, lhs-672(%rcx,%rcx,2)
	movsd	fjac-40(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	15 309 34               # z_solve.c:309:34
	mulsd	%xmm0, %xmm3
	movsd	njac-40(%rcx), %xmm5    # xmm5 = mem[0],zero
	.loc	15 310 18               # z_solve.c:310:18
	mulsd	%xmm6, %xmm5
	.loc	15 299 11               # z_solve.c:299:11
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	unpcklpd	%xmm5, %xmm15   # xmm15 = xmm15[0],xmm5[0]
	subpd	%xmm15, %xmm2
	.loc	15 297 26               # z_solve.c:297:26
	movupd	%xmm2, lhs-632(%rcx,%rcx,2)
	movsd	fjac(%rcx), %xmm2       # xmm2 = mem[0],zero
	.loc	15 311 34               # z_solve.c:311:34
	mulsd	%xmm0, %xmm2
	movsd	njac(%rcx), %xmm3       # xmm3 = mem[0],zero
	.loc	15 312 18               # z_solve.c:312:18
	mulsd	%xmm6, %xmm3
	.loc	15 312 11 is_stmt 0     # z_solve.c:312:11
	subsd	%xmm3, %xmm2
	.loc	15 313 11 is_stmt 1     # z_solve.c:313:11
	subsd	%xmm9, %xmm2
	.loc	15 311 26               # z_solve.c:311:26
	movsd	%xmm2, lhs-584(%rcx,%rcx,2)
.Ltmp899:
	.loc	15 151 7 discriminator 1 # z_solve.c:151:7
	addq	$200, %rcx
	decl	%eax
	jne	.LBB14_12
# BB#13:                                # %for.end1824
                                        #   in Loop: Header=BB14_5 Depth=2
.Ltmp900:
	.loc	15 312 13               # z_solve.c:312:13
	movsd	%xmm6, tmp1(%rip)
	.loc	15 311 29               # z_solve.c:311:29
	movsd	%xmm0, tmp2(%rip)
.Ltmp901:
	.loc	15 337 41               # z_solve.c:337:41
	leaq	(%r12,%r12,4), %rax
	imulq	$2600, %r13, %rcx       # imm = 0xA28
	leaq	rhs(%rcx,%rax,8), %rdx
	.loc	15 337 7 is_stmt 0      # z_solve.c:337:7
	movl	$lhs+200, %edi
	movl	$lhs+400, %esi
	callq	binvcrhs
	testl	%r15d, %r15d
	#DEBUG_VALUE: z_solve:k <- 1
	movl	%r15d, %r13d
	movl	$lhs+1000, %ebx
	movq	%rbp, 48(%rsp)          # 8-byte Spill
	jle	.LBB14_15
	.p2align	4, 0x90
.LBB14_14:                              # %for.body1832
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp902:
	.loc	15 349 9 is_stmt 1      # z_solve.c:349:9
	leaq	-400(%rbx), %r14
	leaq	-169000(%rbp), %rsi
	movq	%r14, %rdi
	movq	%rbp, %rdx
	callq	matvec_sub
	.loc	15 355 9                # z_solve.c:355:9
	leaq	-200(%rbx), %r15
	leaq	-600(%rbx), %rsi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	matmul_sub
	.loc	15 361 9                # z_solve.c:361:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	callq	binvcrhs
.Ltmp903:
	.loc	15 343 7 discriminator 1 # z_solve.c:343:7
	addq	$169000, %rbp           # imm = 0x29428
	addq	$600, %rbx              # imm = 0x258
	decl	%r13d
	jne	.LBB14_14
	jmp	.LBB14_15
.Ltmp904:
	.p2align	4, 0x90
.LBB14_10:                              # %for.end1824.thread
                                        #   in Loop: Header=BB14_5 Depth=2
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	%rbp, 48(%rsp)          # 8-byte Spill
	.loc	15 337 41               # z_solve.c:337:41
	leaq	(%r12,%r12,4), %rax
	imulq	$2600, %r13, %rcx       # imm = 0xA28
	leaq	rhs(%rcx,%rax,8), %rdx
	.loc	15 337 7 is_stmt 0      # z_solve.c:337:7
	movl	$lhs+200, %edi
	movl	$lhs+400, %esi
	callq	binvcrhs
	#DEBUG_VALUE: z_solve:k <- 1
.LBB14_15:                              # %for.end1882
                                        #   in Loop: Header=BB14_5 Depth=2
	movq	240(%rsp), %r13         # 8-byte Reload
	.loc	15 371 34 is_stmt 1     # z_solve.c:371:34
	imulq	$2600, %r13, %r14       # imm = 0xA28
	movq	192(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%r14), %rax
	leaq	(,%r12,8), %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	rhs(%rax,%rcx), %rsi
	.loc	15 371 54 is_stmt 0     # z_solve.c:371:54
	imulq	$169000, 224(%rsp), %rax # 8-byte Folded Reload
                                        # imm = 0x29428
	addq	%r14, %rax
	leaq	rhs(%rax,%rcx), %rbx
	movq	216(%rsp), %rbp         # 8-byte Reload
	.loc	15 371 7                # z_solve.c:371:7
	movq	%rbp, %rdi
	movq	%rbx, %rdx
	callq	matvec_sub
	.loc	15 378 7 is_stmt 1      # z_solve.c:378:7
	movq	%rbp, %rdi
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	208(%rsp), %rbp         # 8-byte Reload
	movq	%rbp, %rdx
	callq	matmul_sub
	.loc	15 383 7                # z_solve.c:383:7
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	binvrhs
	movq	232(%rsp), %r15         # 8-byte Reload
.Ltmp905:
	.loc	15 395 7 discriminator 1 # z_solve.c:395:7
	testl	%r15d, %r15d
	movq	184(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	%r15, %r10
	js	.LBB14_19
	.p2align	4, 0x90
.LBB14_16:                              # %for.cond1930.preheader
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_5 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB14_17 Depth 4
.Ltmp906:
	.loc	15 399 39               # z_solve.c:399:39
	imulq	$169000, %r10, %rax     # imm = 0x29428
	.loc	15 399 34 is_stmt 0     # z_solve.c:399:34
	addq	%r14, %rax
	leaq	(%r12,%r12,4), %rcx
	leaq	rhs+169000(%rax,%rcx,8), %r11
	leaq	rhs+169008(%rax,%rcx,8), %rdi
	leaq	rhs+169016(%rax,%rcx,8), %rbx
	leaq	rhs+169024(%rax,%rcx,8), %rbp
	leaq	rhs+169032(%rax,%rcx,8), %rax
	movl	$5, %ecx
	movq	%r8, %rdx
	movq	%r9, %rsi
	.p2align	4, 0x90
.LBB14_17:                              # %for.cond1933.preheader
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_5 Depth=2
                                        #       Parent Loop BB14_16 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	.loc	15 398 31 is_stmt 1     # z_solve.c:398:31
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	15 399 17               # z_solve.c:399:17
	movsd	-160(%rdx), %xmm1       # xmm1 = mem[0],zero
	.loc	15 399 33 is_stmt 0     # z_solve.c:399:33
	mulsd	(%r11), %xmm1
	.loc	15 399 15               # z_solve.c:399:15
	subsd	%xmm1, %xmm0
	.loc	15 398 29 is_stmt 1     # z_solve.c:398:29
	movsd	%xmm0, (%rsi)
	.loc	15 399 17               # z_solve.c:399:17
	movsd	-120(%rdx), %xmm1       # xmm1 = mem[0],zero
	.loc	15 399 33 is_stmt 0     # z_solve.c:399:33
	mulsd	(%rdi), %xmm1
	.loc	15 399 15               # z_solve.c:399:15
	subsd	%xmm1, %xmm0
	.loc	15 398 29 is_stmt 1     # z_solve.c:398:29
	movsd	%xmm0, (%rsi)
	.loc	15 399 17               # z_solve.c:399:17
	movsd	-80(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	15 399 33 is_stmt 0     # z_solve.c:399:33
	mulsd	(%rbx), %xmm1
	.loc	15 399 15               # z_solve.c:399:15
	subsd	%xmm1, %xmm0
	.loc	15 398 29 is_stmt 1     # z_solve.c:398:29
	movsd	%xmm0, (%rsi)
	.loc	15 399 17               # z_solve.c:399:17
	movsd	-40(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	15 399 33 is_stmt 0     # z_solve.c:399:33
	mulsd	(%rbp), %xmm1
	.loc	15 399 15               # z_solve.c:399:15
	subsd	%xmm1, %xmm0
	.loc	15 398 29 is_stmt 1     # z_solve.c:398:29
	movsd	%xmm0, (%rsi)
	.loc	15 399 17               # z_solve.c:399:17
	movsd	(%rdx), %xmm1           # xmm1 = mem[0],zero
	.loc	15 399 33 is_stmt 0     # z_solve.c:399:33
	mulsd	(%rax), %xmm1
	.loc	15 399 15               # z_solve.c:399:15
	subsd	%xmm1, %xmm0
	.loc	15 398 29 is_stmt 1     # z_solve.c:398:29
	movsd	%xmm0, (%rsi)
.Ltmp907:
	.loc	15 396 9 discriminator 1 # z_solve.c:396:9
	addq	$8, %rsi
	addq	$8, %rdx
	decq	%rcx
	jne	.LBB14_17
.Ltmp908:
# BB#18:                                # %for.inc1976
                                        #   in Loop: Header=BB14_16 Depth=3
	.loc	15 395 7 discriminator 1 # z_solve.c:395:7
	addq	$-169000, %r9           # imm = 0xFFFFFFFFFFFD6BD8
	addq	$-600, %r8              # imm = 0xFFFFFFFFFFFFFDA8
	.loc	15 395 27 is_stmt 0 discriminator 1 # z_solve.c:395:27
	testq	%r10, %r10
	.loc	15 395 7 discriminator 1 # z_solve.c:395:7
	leaq	-1(%r10), %r10
	jg	.LBB14_16
.Ltmp909:
.LBB14_19:                              # %for.inc1978
                                        #   in Loop: Header=BB14_5 Depth=2
	.loc	15 70 19 is_stmt 1 discriminator 1 # z_solve.c:70:19
	movslq	grid_points(%rip), %rax
	.loc	15 70 36 is_stmt 0 discriminator 1 # z_solve.c:70:36
	leaq	-2(%rax), %rcx
	movq	40(%rsp), %rbx          # 8-byte Reload
	.loc	15 70 5 discriminator 1 # z_solve.c:70:5
	addq	$8, %rbx
	movq	48(%rsp), %rbp          # 8-byte Reload
	addq	$40, %rbp
	addq	$40, 56(%rsp)           # 8-byte Folded Spill
	.loc	15 70 19 discriminator 1 # z_solve.c:70:19
	cmpq	%rcx, %r12
	.loc	15 70 5 discriminator 1 # z_solve.c:70:5
	leaq	1(%r12), %r12
.Ltmp910:
	.loc	15 78 23 is_stmt 1      # z_solve.c:78:23
	xorpd	%xmm15, %xmm15
	.loc	15 82 59                # z_solve.c:82:59
	movapd	.LCPI14_2(%rip), %xmm11 # xmm11 = [9223372036854775808,9223372036854775808]
	jl	.LBB14_5
.Ltmp911:
# BB#20:                                # %for.inc1981.loopexit
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	15 69 20 discriminator 1 # z_solve.c:69:20
	movl	grid_points+4(%rip), %ecx
.LBB14_21:                              # %for.inc1981
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	15 69 34 is_stmt 0 discriminator 1 # z_solve.c:69:34
	leal	-2(%rcx), %edx
	.loc	15 69 17 discriminator 1 # z_solve.c:69:17
	movslq	%edx, %rdx
	movq	168(%rsp), %rdi         # 8-byte Reload
	.loc	15 69 3 discriminator 1 # z_solve.c:69:3
	addq	$520, %rdi              # imm = 0x208
	movq	160(%rsp), %rbp         # 8-byte Reload
	addq	$2600, %rbp             # imm = 0xA28
	movq	176(%rsp), %rsi         # 8-byte Reload
	addq	$2600, %rsi             # imm = 0xA28
	.loc	15 69 17 discriminator 1 # z_solve.c:69:17
	cmpq	%rdx, %r13
	.loc	15 69 3 discriminator 1 # z_solve.c:69:3
	leaq	1(%r13), %r13
	jl	.LBB14_4
.Ltmp912:
.LBB14_22:                              # %for.end1983
	.loc	15 405 7 is_stmt 1      # z_solve.c:405:7
	cmpl	$0, timeron(%rip)
	je	.LBB14_23
# BB#24:                                # %if.then1985
	.loc	15 405 16 is_stmt 0 discriminator 1 # z_solve.c:405:16
	movl	$8, %edi
	addq	$248, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	timer_stop              # TAILCALL
.Ltmp913:
.LBB14_23:                              # %if.end1986
	.loc	15 406 1 is_stmt 1      # z_solve.c:406:1
	addq	$248, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp914:
.Lfunc_end14:
	.size	z_solve, .Lfunc_end14-z_solve
	.cfi_endproc

	.globl	add
	.p2align	4, 0x90
	.type	add,@function
add:                                    # @add
.Lfunc_begin15:
	.file	16 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/add.c"
	.loc	16 41 0                 # add.c:41:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	16 44 7 prologue_end    # add.c:44:7
	cmpl	$0, timeron(%rip)
	je	.LBB15_2
# BB#1:                                 # %if.then
	.loc	16 44 16 is_stmt 0 discriminator 1 # add.c:44:16
	pushq	%rax
.Ltmp915:
	.cfi_def_cfa_offset 16
	movl	$11, %edi
	callq	timer_start
	addq	$8, %rsp
.Ltmp916:
.LBB15_2:                               # %for.cond.preheader
	.loc	16 49 27 is_stmt 1      # add.c:49:27
	movslq	grid_points+8(%rip), %r8
.Ltmp917:
	.loc	16 45 34 discriminator 1 # add.c:45:34
	addq	$-2, %r8
	.loc	16 45 17 is_stmt 0 discriminator 1 # add.c:45:17
	testl	%r8d, %r8d
	jle	.LBB15_10
# BB#3:                                 # %for.cond1.preheader.lr.ph
.Ltmp918:
	.loc	16 49 27 is_stmt 1      # add.c:49:27
	movslq	grid_points+4(%rip), %r11
.Ltmp919:
	.loc	16 46 36 discriminator 1 # add.c:46:36
	addq	$-2, %r11
	.loc	16 46 19 is_stmt 0 discriminator 1 # add.c:46:19
	testl	%r11d, %r11d
	jle	.LBB15_10
# BB#4:                                 # %for.cond5.preheader.lr.ph.preheader
.Ltmp920:
	.loc	16 47 24 is_stmt 1 discriminator 1 # add.c:47:24
	movl	grid_points(%rip), %edi
	.loc	16 47 38 is_stmt 0 discriminator 1 # add.c:47:38
	addl	$-2, %edi
	movl	$1, %r9d
	movl	$171672, %r10d          # imm = 0x29E98
	.p2align	4, 0x90
.LBB15_5:                               # %for.cond5.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_6 Depth 2
                                        #       Child Loop BB15_7 Depth 3
	testl	%edi, %edi
	movq	%r10, %rcx
	movl	$1, %esi
	jle	.LBB15_9
	.p2align	4, 0x90
.LBB15_6:                               # %for.cond9.preheader.lr.ph
                                        #   Parent Loop BB15_5 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB15_7 Depth 3
	movl	%edi, %edx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB15_7:                               # %for.cond9.preheader
                                        #   Parent Loop BB15_5 Depth=1
                                        #     Parent Loop BB15_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp921:
	.loc	16 49 27 is_stmt 1      # add.c:49:27
	movupd	u-32(%rax), %xmm0
	.loc	16 49 43 is_stmt 0      # add.c:49:43
	movupd	rhs-32(%rax), %xmm1
	.loc	16 49 41                # add.c:49:41
	addpd	%xmm0, %xmm1
	.loc	16 49 25                # add.c:49:25
	movupd	%xmm1, u-32(%rax)
	.loc	16 49 27                # add.c:49:27
	movupd	u-16(%rax), %xmm0
	.loc	16 49 43                # add.c:49:43
	movupd	rhs-16(%rax), %xmm1
	.loc	16 49 41                # add.c:49:41
	addpd	%xmm0, %xmm1
	.loc	16 49 25                # add.c:49:25
	movupd	%xmm1, u-16(%rax)
	.loc	16 49 27                # add.c:49:27
	movsd	u(%rax), %xmm0          # xmm0 = mem[0],zero
	.loc	16 49 41                # add.c:49:41
	addsd	rhs(%rax), %xmm0
	.loc	16 49 25                # add.c:49:25
	movsd	%xmm0, u(%rax)
.Ltmp922:
	.loc	16 47 7 is_stmt 1 discriminator 1 # add.c:47:7
	addq	$40, %rax
	decl	%edx
	jne	.LBB15_7
.Ltmp923:
# BB#8:                                 # %for.inc37
                                        #   in Loop: Header=BB15_6 Depth=2
	.loc	16 46 5 discriminator 1 # add.c:46:5
	addq	$2600, %rcx             # imm = 0xA28
	.loc	16 46 19 is_stmt 0 discriminator 1 # add.c:46:19
	cmpq	%r11, %rsi
	.loc	16 46 5 discriminator 1 # add.c:46:5
	leaq	1(%rsi), %rsi
	jl	.LBB15_6
.Ltmp924:
.LBB15_9:                               # %for.inc40
                                        #   in Loop: Header=BB15_5 Depth=1
	.loc	16 45 3 is_stmt 1 discriminator 1 # add.c:45:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	16 45 17 is_stmt 0 discriminator 1 # add.c:45:17
	cmpq	%r8, %r9
	.loc	16 45 3 discriminator 1 # add.c:45:3
	leaq	1(%r9), %r9
	jl	.LBB15_5
.Ltmp925:
.LBB15_10:                              # %for.end42
	.loc	16 54 7 is_stmt 1       # add.c:54:7
	cmpl	$0, timeron(%rip)
	je	.LBB15_11
# BB#12:                                # %if.then44
	.loc	16 54 16 is_stmt 0 discriminator 1 # add.c:54:16
	movl	$11, %edi
	jmp	timer_stop              # TAILCALL
.Ltmp926:
.LBB15_11:                              # %if.end45
	.loc	16 55 1 is_stmt 1       # add.c:55:1
	retq
.Ltmp927:
.Lfunc_end15:
	.size	add, .Lfunc_end15-add
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI16_0:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
.LCPI16_2:
	.quad	4681467741926277053     # double 97953.724845169999
	.quad	4666580133982362741     # double 9739.8145115210009
.LCPI16_3:
	.quad	4672512118622993430     # double 24676.063429649999
	.quad	4671480813082198009     # double 20924.1957286
.LCPI16_4:
	.quad	4646320744140531166     # double 432.75622084140002
	.quad	4630402770137839765     # double 36.990519648869999
.LCPI16_5:
	.quad	4637369519624888665     # double 108.9845040954
	.quad	4636359071755091702     # double 94.625176220430006
.LCPI16_9:
	.quad	4672692389625796297     # double 25331.88551738
	.quad	4657378189424042486     # double 2346.3937169800001
.LCPI16_10:
	.quad	4663642950419172010     # double 6294.5543669039998
	.quad	4662607222570469067     # double 5352.5653760300002
.LCPI16_11:
	.quad	4644161210362552579     # double 310.00093775570002
	.quad	4627516414100623960     # double 24.240863249130001
.LCPI16_12:
	.quad	4635176661806448359     # double 77.822120226449996
	.quad	4634510559603942277     # double 68.356238601160001
.LCPI16_16:
	.quad	4663582760171091592     # double 6239.8116551764615
	.quad	4647643257327975483     # double 507.93239190423964
.LCPI16_17:
	.quad	4654498155717800472     # double 1542.3530093013596
	.quad	4653565267528528980     # double 1330.238792929119
.LCPI16_18:
	.quad	4639996070842116119     # double 164.62008369091265
	.quad	4622661914413696095     # double 11.497107903824313
.LCPI16_19:
	.quad	4630996249790274811     # double 41.207446207461508
	.quad	4630416440168639568     # double 37.087651059694167
.LCPI16_23:
	.quad	4653974817709824509     # double 1423.3597229287254
	.quad	4636690181070049845     # double 99.330522590150238
.LCPI16_24:
	.quad	4644978531340437765     # double 356.46025644535285
	.quad	4644422516633934894     # double 324.85447959084092
.LCPI16_25:
	.quad	4632651660554680497     # double 52.969847140936857
	.quad	4616711235785262916     # double 4.4632896115670668
.LCPI16_26:
	.quad	4623576970106523368     # double 13.122573342210174
	.quad	4622948916106389192     # double 12.006925323559145
.LCPI16_30:
	.quad	4637304707411444383     # double 108.06346714637264
	.quad	4622562060038342443     # double 11.319730901220813
.LCPI16_31:
	.quad	4628004348513350893     # double 25.974354511582465
	.quad	4627354498236735568     # double 23.665622544678911
.LCPI16_32:
	.quad	4616454026194883885     # double 4.2348416040525025
	.quad	4601668262306399555     # double 0.44390282496995698
.LCPI16_33:
	.quad	4606884503895507923     # double 0.96692480136345648
	.quad	4606128762309315093     # double 0.88302063039765477
.LCPI16_37:
	.quad	4637621055293265892     # double 112.5590409344
	.quad	4622832470265294008     # double 11.80007595731
.LCPI16_38:
	.quad	4628322117764955401     # double 27.103297678459999
	.quad	4627643327262878069     # double 24.691749376690002
.LCPI16_39:
	.quad	4616662108408835780     # double 4.419655736008
	.quad	4602027654979542482     # double 0.46385312600020001
.LCPI16_40:
	.quad	4607234443256864266     # double 1.0115517499669999
	.quad	4606494159546599394     # double 0.92358787299440004
.LCPI16_43:
	.quad	4595305267791880509     # double 0.17034283709541312
	.quad	4578633345350671848     # double 0.012975252070034096
.LCPI16_44:
	.quad	4584848589351601923     # double 0.032527926989486054
	.quad	4583277001056670378     # double 0.026436421275166801
.LCPI16_45:
	.quad	4557748779921992184     # double 4.9976913345811582E-4
	.quad	4541794527949177109     # double 4.519566678296193E-5
.LCPI16_46:
	.quad	4545086724846714244     # double 7.3973765172921353E-5
	.quad	4545075470374487393     # double 7.3821238632439733E-5
.LCPI16_50:
	.quad	9223372036854775807     # 0x7fffffffffffffff
	.quad	9223372036854775807     # 0x7fffffffffffffff
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI16_1:
	.quad	4607182418800017408     # double 1
.LCPI16_6:
	.quad	4526336392362847629     # double 3.9999999999999998E-6
.LCPI16_7:
	.quad	4684023365527580406     # double 139213.8856939
.LCPI16_8:
	.quad	4650041833083861541     # double 776.55127653090005
.LCPI16_13:
	.quad	4536524183238306033     # double 2.0000000000000002E-5
.LCPI16_14:
	.quad	4675600992241920125     # double 39058.640386179999
.LCPI16_15:
	.quad	4648546694685251821     # double 606.57372003679995
.LCPI16_20:
	.quad	4547007122018943789     # double 1.0E-4
.LCPI16_21:
	.quad	4667605028857110952     # double 11604.087428436455
.LCPI16_22:
	.quad	4645077932013132973     # double 362.11053051841265
.LCPI16_27:
	.quad	4554169646866313825     # double 2.9999999999999997E-4
.LCPI16_28:
	.quad	4659410879458814606     # double 3270.7541254659363
.LCPI16_29:
	.quad	4638468064204213636     # double 124.59576151035986
.LCPI16_34:
	.quad	4560517920901055277     # double 8.0000000000000004E-4
.LCPI16_35:
	.quad	4643098261040860878     # double 252.78963211748345
.LCPI16_36:
	.quad	4621671619171364428     # double 9.7379901770829278
.LCPI16_41:
	.quad	4643349187594586650     # double 263.8427874317
.LCPI16_42:
	.quad	4621920706623999487     # double 10.180458377180001
.LCPI16_47:
	.quad	4576918229304087675     # double 0.01
.LCPI16_48:
	.quad	4596089794999083154     # double 0.1921178413174443
.LCPI16_49:
	.quad	4561372893453475188     # double 8.9269630987491447E-4
.LCPI16_51:
	.quad	4487126258331716666     # double 1.0E-8
	.text
	.globl	verify
	.p2align	4, 0x90
	.type	verify,@function
verify:                                 # @verify
.Lfunc_begin16:
	.file	17 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/verify.c"
	.loc	17 42 0                 # verify.c:42:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp928:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp929:
	.cfi_def_cfa_offset 24
	pushq	%rbx
.Ltmp930:
	.cfi_def_cfa_offset 32
	subq	$304, %rsp              # imm = 0x130
.Ltmp931:
	.cfi_def_cfa_offset 336
.Ltmp932:
	.cfi_offset %rbx, -32
.Ltmp933:
	.cfi_offset %r14, -24
.Ltmp934:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: verify:no_time_steps <- %EDI
	#DEBUG_VALUE: verify:Class <- %RSI
	#DEBUG_VALUE: verify:verified <- %RDX
	movq	%rdx, %r14
.Ltmp935:
	#DEBUG_VALUE: verify:verified <- %R14
	movq	%rsi, %rbx
.Ltmp936:
	#DEBUG_VALUE: verify:Class <- %RBX
	movl	%edi, %ebp
.Ltmp937:
	#DEBUG_VALUE: verify:epsilon <- 1.000000e-08
	#DEBUG_VALUE: verify:dtref <- 0.000000e+00
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	leaq	160(%rsp), %rdi
.Ltmp938:
	#DEBUG_VALUE: verify:xce <- [%RDI+0]
	.loc	17 55 3 prologue_end    # verify.c:55:3
	callq	error_norm
	.loc	17 56 3                 # verify.c:56:3
	xorl	%eax, %eax
	callq	compute_rhs
	leaq	112(%rsp), %rdi
.Ltmp939:
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	17 58 3                 # verify.c:58:3
	callq	rhs_norm
.Ltmp940:
	#DEBUG_VALUE: verify:m <- 0
	.loc	17 61 23                # verify.c:61:23
	movsd	dt(%rip), %xmm3         # xmm3 = mem[0],zero
	.loc	17 61 14 is_stmt 0      # verify.c:61:14
	movapd	112(%rsp), %xmm2
.Ltmp941:
	.loc	17 278 23 is_stmt 1     # verify.c:278:23
	movapd	%xmm3, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	divpd	%xmm0, %xmm2
.Ltmp942:
	.loc	17 61 12                # verify.c:61:12
	movapd	%xmm2, 112(%rsp)
	.loc	17 61 14 is_stmt 0      # verify.c:61:14
	movapd	128(%rsp), %xmm1
.Ltmp943:
	.loc	17 278 23 is_stmt 1     # verify.c:278:23
	divpd	%xmm0, %xmm1
.Ltmp944:
	.loc	17 61 12                # verify.c:61:12
	movapd	%xmm1, 128(%rsp)
	.loc	17 61 14 is_stmt 0      # verify.c:61:14
	movsd	144(%rsp), %xmm0        # xmm0 = mem[0],zero
.Ltmp945:
	.loc	17 278 23 is_stmt 1     # verify.c:278:23
	divsd	%xmm3, %xmm0
.Ltmp946:
	.loc	17 61 12                # verify.c:61:12
	movsd	%xmm0, 144(%rsp)
.Ltmp947:
	.loc	17 64 10                # verify.c:64:10
	movb	$85, (%rbx)
	.loc	17 65 13                # verify.c:65:13
	movl	$1, (%r14)
.Ltmp948:
	.loc	17 68 15                # verify.c:68:15
	movapd	.LCPI16_0(%rip), %xmm3  # xmm3 = [1.000000e+00,1.000000e+00]
	movapd	%xmm3, 64(%rsp)
	.loc	17 69 15                # verify.c:69:15
	movapd	%xmm3, 16(%rsp)
	.loc	17 68 15                # verify.c:68:15
	movapd	%xmm3, 80(%rsp)
	.loc	17 69 15                # verify.c:69:15
	movapd	%xmm3, 32(%rsp)
	.loc	17 68 15                # verify.c:68:15
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, 96(%rsp)
	.loc	17 69 15                # verify.c:69:15
	movq	%rax, 48(%rsp)
.Ltmp949:
	.loc	17 75 9                 # verify.c:75:9
	movl	grid_points(%rip), %edx
	.loc	17 75 35 is_stmt 0 discriminator 1 # verify.c:75:35
	movl	grid_points+4(%rip), %ecx
	.loc	17 76 9 is_stmt 1       # verify.c:76:9
	movl	grid_points+8(%rip), %eax
	.loc	17 75 31                # verify.c:75:31
	cmpl	$60, %ebp
	jne	.LBB16_5
.Ltmp950:
# BB#1:                                 # %entry
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$12, %edx
	jne	.LBB16_5
.Ltmp951:
# BB#2:                                 # %entry
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$12, %ecx
	jne	.LBB16_5
.Ltmp952:
# BB#3:                                 # %entry
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$12, %eax
	jne	.LBB16_5
.Ltmp953:
# BB#4:                                 # %if.then
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 1.000000e-02
	.loc	17 78 12                # verify.c:78:12
	movb	$83, (%rbx)
	.loc	17 84 15                # verify.c:84:15
	movapd	.LCPI16_43(%rip), %xmm3 # xmm3 = [1.703428e-01,1.297525e-02]
	movapd	%xmm3, 64(%rsp)
	.loc	17 86 15                # verify.c:86:15
	movapd	.LCPI16_44(%rip), %xmm8 # xmm8 = [3.252793e-02,2.643642e-02]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4596089794999083154, %rax # imm = 0x3FC8975142B7E092
	.loc	17 88 15                # verify.c:88:15
	movq	%rax, 96(%rsp)
	.loc	17 93 15                # verify.c:93:15
	movapd	.LCPI16_45(%rip), %xmm5 # xmm5 = [4.997691e-04,4.519567e-05]
	movapd	%xmm5, 16(%rsp)
	.loc	17 95 15                # verify.c:95:15
	movapd	.LCPI16_46(%rip), %xmm6 # xmm6 = [7.397377e-05,7.382124e-05]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4561372893453475188, %rax # imm = 0x3F4D407ABA63DD74
	.loc	17 97 15                # verify.c:97:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI16_47(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_48(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI16_49(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$83, %al
	jmp	.LBB16_36
.Ltmp954:
.LBB16_5:                               # %if.else
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 103 38 discriminator 1 # verify.c:103:38
	cmpl	$200, %ebp
	jne	.LBB16_10
.Ltmp955:
# BB#6:                                 # %if.else
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$24, %edx
	jne	.LBB16_10
.Ltmp956:
# BB#7:                                 # %if.else
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$24, %ecx
	jne	.LBB16_10
.Ltmp957:
# BB#8:                                 # %if.else
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$24, %eax
	jne	.LBB16_10
.Ltmp958:
# BB#9:                                 # %if.then37
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:dtref <- 8.000000e-04
	.loc	17 106 12               # verify.c:106:12
	movb	$87, (%rbx)
	.loc	17 111 15               # verify.c:111:15
	movapd	.LCPI16_37(%rip), %xmm3 # xmm3 = [1.125590e+02,1.180008e+01]
	movapd	%xmm3, 64(%rsp)
	.loc	17 113 15               # verify.c:113:15
	movapd	.LCPI16_38(%rip), %xmm8 # xmm8 = [2.710330e+01,2.469175e+01]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4643349187594586650, %rax # imm = 0x40707D7C0EAC8A1A
	.loc	17 115 15               # verify.c:115:15
	movq	%rax, 96(%rsp)
	.loc	17 120 15               # verify.c:120:15
	movapd	.LCPI16_39(%rip), %xmm5 # xmm5 = [4.419656e+00,4.638531e-01]
	movapd	%xmm5, 16(%rsp)
	.loc	17 122 15               # verify.c:122:15
	movapd	.LCPI16_40(%rip), %xmm6 # xmm6 = [1.011552e+00,9.235879e-01]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4621920706623999487, %rax # imm = 0x40245C650A588DFF
	.loc	17 124 15               # verify.c:124:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI16_34(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_41(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI16_42(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$87, %al
	jmp	.LBB16_36
.Ltmp959:
.LBB16_10:                              # %if.else48
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	17 130 38 discriminator 1 # verify.c:130:38
	cmpl	$200, %ebp
	jne	.LBB16_15
.Ltmp960:
# BB#11:                                # %if.else48
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$64, %edx
	jne	.LBB16_15
.Ltmp961:
# BB#12:                                # %if.else48
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$64, %ecx
	jne	.LBB16_15
.Ltmp962:
# BB#13:                                # %if.else48
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$64, %eax
	jne	.LBB16_15
.Ltmp963:
# BB#14:                                # %if.then56
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 8.000000e-04
	.loc	17 133 12               # verify.c:133:12
	movb	$65, (%rbx)
	.loc	17 138 15               # verify.c:138:15
	movapd	.LCPI16_30(%rip), %xmm3 # xmm3 = [1.080635e+02,1.131973e+01]
	movapd	%xmm3, 64(%rsp)
	.loc	17 140 15               # verify.c:140:15
	movapd	.LCPI16_31(%rip), %xmm8 # xmm8 = [2.597435e+01,2.366562e+01]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4643098261040860878, %rax # imm = 0x406F9944AA930ECE
	.loc	17 142 15               # verify.c:142:15
	movq	%rax, 96(%rsp)
	.loc	17 147 15               # verify.c:147:15
	movapd	.LCPI16_32(%rip), %xmm5 # xmm5 = [4.234842e+00,4.439028e-01]
	movapd	%xmm5, 16(%rsp)
	.loc	17 149 15               # verify.c:149:15
	movapd	.LCPI16_33(%rip), %xmm6 # xmm6 = [9.669248e-01,8.830206e-01]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4621671619171364428, %rax # imm = 0x402379D9D936AE4C
	.loc	17 151 15               # verify.c:151:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI16_34(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_35(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI16_36(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$65, %al
	jmp	.LBB16_36
.Ltmp964:
.LBB16_15:                              # %if.else67
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 157 39 discriminator 1 # verify.c:157:39
	cmpl	$200, %ebp
	jne	.LBB16_20
.Ltmp965:
# BB#16:                                # %if.else67
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$102, %edx
	jne	.LBB16_20
.Ltmp966:
# BB#17:                                # %if.else67
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$102, %ecx
	jne	.LBB16_20
.Ltmp967:
# BB#18:                                # %if.else67
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$102, %eax
	jne	.LBB16_20
.Ltmp968:
# BB#19:                                # %if.then75
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:dtref <- 3.000000e-04
	.loc	17 160 12               # verify.c:160:12
	movb	$66, (%rbx)
	.loc	17 166 15               # verify.c:166:15
	movapd	.LCPI16_23(%rip), %xmm3 # xmm3 = [1.423360e+03,9.933052e+01]
	movapd	%xmm3, 64(%rsp)
	.loc	17 168 15               # verify.c:168:15
	movapd	.LCPI16_24(%rip), %xmm8 # xmm8 = [3.564603e+02,3.248545e+02]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4659410879458814606, %rax # imm = 0x40A98D821CBBAA8E
	.loc	17 170 15               # verify.c:170:15
	movq	%rax, 96(%rsp)
	.loc	17 175 15               # verify.c:175:15
	movapd	.LCPI16_25(%rip), %xmm5 # xmm5 = [5.296985e+01,4.463290e+00]
	movapd	%xmm5, 16(%rsp)
	.loc	17 177 15               # verify.c:177:15
	movapd	.LCPI16_26(%rip), %xmm6 # xmm6 = [1.312257e+01,1.200693e+01]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4638468064204213636, %rax # imm = 0x405F2620F4E2CD84
	.loc	17 179 15               # verify.c:179:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI16_27(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_28(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI16_29(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$66, %al
	jmp	.LBB16_36
.Ltmp969:
.LBB16_20:                              # %if.else86
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	17 185 39 discriminator 1 # verify.c:185:39
	cmpl	$200, %ebp
	jne	.LBB16_25
.Ltmp970:
# BB#21:                                # %if.else86
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$162, %edx
	jne	.LBB16_25
.Ltmp971:
# BB#22:                                # %if.else86
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$162, %ecx
	jne	.LBB16_25
.Ltmp972:
# BB#23:                                # %if.else86
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$162, %eax
	jne	.LBB16_25
.Ltmp973:
# BB#24:                                # %if.then94
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 1.000000e-04
	.loc	17 188 12               # verify.c:188:12
	movb	$67, (%rbx)
	.loc	17 194 15               # verify.c:194:15
	movapd	.LCPI16_16(%rip), %xmm3 # xmm3 = [6.239812e+03,5.079324e+02]
	movapd	%xmm3, 64(%rsp)
	.loc	17 196 15               # verify.c:196:15
	movapd	.LCPI16_17(%rip), %xmm8 # xmm8 = [1.542353e+03,1.330239e+03]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4667605028857110952, %rax # imm = 0x40C6AA0B30DAE1A8
	.loc	17 198 15               # verify.c:198:15
	movq	%rax, 96(%rsp)
	.loc	17 203 15               # verify.c:203:15
	movapd	.LCPI16_18(%rip), %xmm5 # xmm5 = [1.646201e+02,1.149711e+01]
	movapd	%xmm5, 16(%rsp)
	.loc	17 205 15               # verify.c:205:15
	movapd	.LCPI16_19(%rip), %xmm6 # xmm6 = [4.120745e+01,3.708765e+01]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4645077932013132973, %rax # imm = 0x4076A1C4BBA61CAD
	.loc	17 207 15               # verify.c:207:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI16_20(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_21(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI16_22(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$67, %al
	jmp	.LBB16_36
.Ltmp974:
.LBB16_25:                              # %if.else105
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 213 39 discriminator 1 # verify.c:213:39
	cmpl	$250, %ebp
	jne	.LBB16_30
.Ltmp975:
# BB#26:                                # %if.else105
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$408, %edx              # imm = 0x198
	jne	.LBB16_30
.Ltmp976:
# BB#27:                                # %if.else105
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$408, %ecx              # imm = 0x198
	jne	.LBB16_30
.Ltmp977:
# BB#28:                                # %if.else105
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$408, %eax              # imm = 0x198
	jne	.LBB16_30
.Ltmp978:
# BB#29:                                # %if.then113
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:dtref <- 2.000000e-05
	.loc	17 216 12               # verify.c:216:12
	movb	$68, (%rbx)
	.loc	17 222 15               # verify.c:222:15
	movapd	.LCPI16_9(%rip), %xmm3  # xmm3 = [2.533189e+04,2.346394e+03]
	movapd	%xmm3, 64(%rsp)
	.loc	17 224 15               # verify.c:224:15
	movapd	.LCPI16_10(%rip), %xmm8 # xmm8 = [6.294554e+03,5.352565e+03]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4675600992241920125, %rax # imm = 0x40E312547E0B287D
	.loc	17 226 15               # verify.c:226:15
	movq	%rax, 96(%rsp)
	.loc	17 231 15               # verify.c:231:15
	movapd	.LCPI16_11(%rip), %xmm5 # xmm5 = [3.100009e+02,2.424086e+01]
	movapd	%xmm5, 16(%rsp)
	.loc	17 233 15               # verify.c:233:15
	movapd	.LCPI16_12(%rip), %xmm6 # xmm6 = [7.782212e+01,6.835624e+01]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4648546694685251821, %rax # imm = 0x4082F496FA87D8ED
	.loc	17 235 15               # verify.c:235:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI16_13(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_14(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI16_15(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$68, %al
	jmp	.LBB16_36
.Ltmp979:
.LBB16_30:                              # %if.else124
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	17 241 40 discriminator 1 # verify.c:241:40
	cmpl	$250, %ebp
	jne	.LBB16_35
.Ltmp980:
# BB#31:                                # %if.else124
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$1020, %edx             # imm = 0x3FC
	jne	.LBB16_35
.Ltmp981:
# BB#32:                                # %if.else124
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$1020, %ecx             # imm = 0x3FC
	jne	.LBB16_35
.Ltmp982:
# BB#33:                                # %if.else124
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$1020, %eax             # imm = 0x3FC
	jne	.LBB16_35
.Ltmp983:
# BB#34:                                # %if.then132
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 4.000000e-06
	.loc	17 244 12               # verify.c:244:12
	movb	$69, (%rbx)
	.loc	17 250 15               # verify.c:250:15
	movapd	.LCPI16_2(%rip), %xmm3  # xmm3 = [9.795372e+04,9.739815e+03]
	movapd	%xmm3, 64(%rsp)
	.loc	17 252 15               # verify.c:252:15
	movapd	.LCPI16_3(%rip), %xmm8  # xmm8 = [2.467606e+04,2.092420e+04]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4684023365527580406, %rax # imm = 0x4100FE6F15E6AEF6
	.loc	17 254 15               # verify.c:254:15
	movq	%rax, 96(%rsp)
	.loc	17 259 15               # verify.c:259:15
	movapd	.LCPI16_4(%rip), %xmm5  # xmm5 = [4.327562e+02,3.699052e+01]
	movapd	%xmm5, 16(%rsp)
	.loc	17 261 15               # verify.c:261:15
	movapd	.LCPI16_5(%rip), %xmm6  # xmm6 = [1.089845e+02,9.462518e+01]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4650041833083861541, %rax # imm = 0x4088446903AB7A25
	.loc	17 263 15               # verify.c:263:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI16_6(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_7(%rip), %xmm7  # xmm7 = mem[0],zero
	movsd	.LCPI16_8(%rip), %xmm4  # xmm4 = mem[0],zero
	movb	$69, %al
	jmp	.LBB16_36
.Ltmp984:
.LBB16_35:                              # %if.else143
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 266 15               # verify.c:266:15
	movl	$0, (%r14)
.Ltmp985:
	.loc	17 285 7                # verify.c:285:7
	movb	(%rbx), %al
	xorpd	%xmm4, %xmm4
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI16_1(%rip), %xmm4  # xmm4 = mem[0],zero
.Ltmp986:
	.loc	17 278 30               # verify.c:278:30
	movapd	%xmm4, %xmm7
	movapd	%xmm3, %xmm8
	.loc	17 279 30               # verify.c:279:30
	movapd	%xmm3, %xmm5
	movapd	%xmm3, %xmm6
.Ltmp987:
.LBB16_36:                              # %if.end149
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:m <- 0
	.loc	17 278 29               # verify.c:278:29
	subpd	%xmm3, %xmm2
	.loc	17 278 40 is_stmt 0     # verify.c:278:40
	divpd	%xmm3, %xmm2
	.loc	17 278 17               # verify.c:278:17
	movapd	.LCPI16_50(%rip), %xmm3 # xmm3 = [9223372036854775807,9223372036854775807]
	andpd	%xmm3, %xmm2
	.loc	17 278 15               # verify.c:278:15
	movapd	%xmm2, 256(%rsp)
	.loc	17 279 23 is_stmt 1     # verify.c:279:23
	movapd	160(%rsp), %xmm2
	.loc	17 279 29 is_stmt 0     # verify.c:279:29
	subpd	%xmm5, %xmm2
	.loc	17 279 40               # verify.c:279:40
	divpd	%xmm5, %xmm2
	.loc	17 279 17               # verify.c:279:17
	andpd	%xmm3, %xmm2
	.loc	17 279 15               # verify.c:279:15
	movapd	%xmm2, 208(%rsp)
	.loc	17 278 29 is_stmt 1     # verify.c:278:29
	subpd	%xmm8, %xmm1
	.loc	17 278 40 is_stmt 0     # verify.c:278:40
	divpd	%xmm8, %xmm1
	.loc	17 278 17               # verify.c:278:17
	andpd	%xmm3, %xmm1
	.loc	17 278 15               # verify.c:278:15
	movapd	%xmm1, 272(%rsp)
	.loc	17 279 23 is_stmt 1     # verify.c:279:23
	movapd	176(%rsp), %xmm1
	.loc	17 279 29 is_stmt 0     # verify.c:279:29
	subpd	%xmm6, %xmm1
	.loc	17 279 40               # verify.c:279:40
	divpd	%xmm6, %xmm1
	.loc	17 279 17               # verify.c:279:17
	andpd	%xmm3, %xmm1
	.loc	17 279 15               # verify.c:279:15
	movapd	%xmm1, 224(%rsp)
	.loc	17 278 29 is_stmt 1     # verify.c:278:29
	subsd	%xmm7, %xmm0
	.loc	17 278 40 is_stmt 0     # verify.c:278:40
	divsd	%xmm7, %xmm0
	.loc	17 278 17               # verify.c:278:17
	andpd	%xmm3, %xmm0
	.loc	17 278 15               # verify.c:278:15
	movlpd	%xmm0, 288(%rsp)
	.loc	17 279 23 is_stmt 1     # verify.c:279:23
	movsd	192(%rsp), %xmm0        # xmm0 = mem[0],zero
	.loc	17 279 29 is_stmt 0     # verify.c:279:29
	subsd	%xmm4, %xmm0
	.loc	17 279 40               # verify.c:279:40
	divsd	%xmm4, %xmm0
	.loc	17 279 17               # verify.c:279:17
	andpd	%xmm3, %xmm0
	.loc	17 279 15               # verify.c:279:15
	movlpd	%xmm0, 240(%rsp)
.Ltmp988:
	.loc	17 285 14 is_stmt 1     # verify.c:285:14
	movzbl	%al, %ecx
	cmpl	$85, %ecx
	jne	.LBB16_37
.Ltmp989:
# BB#39:                                # %if.else189
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 294 5                # verify.c:294:5
	movl	$.Lstr.35, %edi
.Ltmp990:
	callq	puts
	jmp	.LBB16_40
.Ltmp991:
.LBB16_37:                              # %if.then178
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 285 7                # verify.c:285:7
	movsbl	%al, %esi
.Ltmp992:
	.loc	17 286 5                # verify.c:286:5
	movl	$.L.str.32, %edi
.Ltmp993:
	xorl	%eax, %eax
	callq	printf
	.loc	17 287 5                # verify.c:287:5
	movsd	.LCPI16_51(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	$.L.str.1.33, %edi
	movb	$1, %al
	callq	printf
	.loc	17 288 23               # verify.c:288:23
	movsd	dt(%rip), %xmm1         # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm0          # 8-byte Reload
                                        # xmm0 = mem[0],zero
	.loc	17 288 25 is_stmt 0     # verify.c:288:25
	subsd	%xmm0, %xmm1
	.loc	17 288 18               # verify.c:288:18
	andpd	.LCPI16_50(%rip), %xmm1
	.loc	17 287 5 is_stmt 1      # verify.c:287:5
	movsd	.LCPI16_51(%rip), %xmm2 # xmm2 = mem[0],zero
	.loc	17 288 33               # verify.c:288:33
	ucomisd	%xmm1, %xmm2
	setae	%al
	movzbl	%al, %eax
	.loc	17 288 15 is_stmt 0     # verify.c:288:15
	movl	%eax, (%r14)
	jae	.LBB16_40
.Ltmp994:
# BB#38:                                # %if.then186
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	.loc	17 290 14 is_stmt 1     # verify.c:290:14
	movb	$85, (%rbx)
	.loc	17 291 7                # verify.c:291:7
	movl	$.L.str.2.34, %edi
	movb	$1, %al
	callq	printf
.Ltmp995:
.LBB16_40:                              # %if.end191
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	.loc	17 297 14               # verify.c:297:14
	movzbl	(%rbx), %eax
	cmpl	$85, %eax
	jne	.LBB16_41
.Ltmp996:
# BB#42:                                # %if.else197
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 300 5                # verify.c:300:5
	movl	$.Lstr.15, %edi
	jmp	.LBB16_43
.Ltmp997:
.LBB16_41:                              # %if.then195
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	17 298 5                # verify.c:298:5
	movl	$.Lstr.22, %edi
.Ltmp998:
.LBB16_43:                              # %for.cond200.preheader
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	.loc	17 300 5                # verify.c:300:5
	callq	puts
.Ltmp999:
	.loc	17 304 16               # verify.c:304:16
	movzbl	(%rbx), %eax
	cmpl	$85, %eax
	sete	%al
	xorl	%ebp, %ebp
.Ltmp1000:
	.p2align	4, 0x90
.LBB16_44:                              # %for.body203
                                        # =>This Inner Loop Header: Depth=1
	.loc	17 304 9 is_stmt 0      # verify.c:304:9
	testb	$1, %al
	je	.LBB16_46
# BB#45:                                # %if.then207
                                        #   in Loop: Header=BB16_44 Depth=1
.Ltmp1001:
	.loc	17 305 45 is_stmt 1     # verify.c:305:45
	movsd	112(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	17 305 41 is_stmt 0     # verify.c:305:41
	incq	%rbp
	.loc	17 305 7                # verify.c:305:7
	movl	$.L.str.6.36, %edi
	movb	$1, %al
	movl	%ebp, %esi
	callq	printf
	jmp	.LBB16_50
.Ltmp1002:
	.p2align	4, 0x90
.LBB16_46:                              # %if.else211
                                        #   in Loop: Header=BB16_44 Depth=1
	.loc	17 312 35 is_stmt 1     # verify.c:312:35
	movsd	256(%rsp,%rbp,8), %xmm2 # xmm2 = mem[0],zero
.Ltmp1003:
	.loc	17 306 26 discriminator 1 # verify.c:306:26
	movsd	.LCPI16_51(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	%xmm2, %xmm0
.Ltmp1004:
	.loc	17 312 16               # verify.c:312:16
	movsd	112(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	17 312 24 is_stmt 0     # verify.c:312:24
	movsd	64(%rsp,%rbp,8), %xmm1  # xmm1 = mem[0],zero
	jae	.LBB16_47
# BB#48:                                # %if.else225
                                        #   in Loop: Header=BB16_44 Depth=1
	.loc	17 310 17 is_stmt 1     # verify.c:310:17
	movl	$0, (%r14)
	.loc	17 312 12               # verify.c:312:12
	incq	%rbp
	.loc	17 311 7                # verify.c:311:7
	movl	$.L.str.8.38, %edi
	jmp	.LBB16_49
.Ltmp1005:
	.p2align	4, 0x90
.LBB16_47:                              # %if.then216
                                        #   in Loop: Header=BB16_44 Depth=1
	.loc	17 308 12               # verify.c:308:12
	incq	%rbp
	.loc	17 307 7                # verify.c:307:7
	movl	$.L.str.7.37, %edi
.Ltmp1006:
.LBB16_49:                              # %for.inc236
                                        #   in Loop: Header=BB16_44 Depth=1
	.loc	17 311 7                # verify.c:311:7
	movb	$3, %al
	movl	%ebp, %esi
	callq	printf
.Ltmp1007:
.LBB16_50:                              # %for.inc236
                                        #   in Loop: Header=BB16_44 Depth=1
	.loc	17 304 16               # verify.c:304:16
	movzbl	(%rbx), %ecx
	cmpl	$85, %ecx
	sete	%al
.Ltmp1008:
	.loc	17 303 3 discriminator 1 # verify.c:303:3
	cmpq	$5, %rbp
	jne	.LBB16_44
.Ltmp1009:
# BB#51:                                # %for.end238
	movzbl	%cl, %eax
	cmpl	$85, %eax
	jne	.LBB16_52
# BB#53:                                # %if.else244
.Ltmp1010:
	.loc	17 319 5                # verify.c:319:5
	movl	$.Lstr.16, %edi
	jmp	.LBB16_54
.Ltmp1011:
.LBB16_52:                              # %if.then242
	.loc	17 317 5                # verify.c:317:5
	movl	$.Lstr.21, %edi
.Ltmp1012:
.LBB16_54:                              # %for.cond247.preheader
	.loc	17 319 5                # verify.c:319:5
	callq	puts
.Ltmp1013:
	.loc	17 323 16               # verify.c:323:16
	movzbl	(%rbx), %eax
	cmpl	$85, %eax
	sete	%al
	xorl	%ebp, %ebp
.Ltmp1014:
	.p2align	4, 0x90
.LBB16_55:                              # %for.body250
                                        # =>This Inner Loop Header: Depth=1
	.loc	17 323 9 is_stmt 0      # verify.c:323:9
	testb	$1, %al
	je	.LBB16_57
# BB#56:                                # %if.then254
                                        #   in Loop: Header=BB16_55 Depth=1
.Ltmp1015:
	.loc	17 324 45 is_stmt 1     # verify.c:324:45
	movsd	160(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	17 324 41 is_stmt 0     # verify.c:324:41
	incq	%rbp
	.loc	17 324 7                # verify.c:324:7
	movl	$.L.str.6.36, %edi
	movb	$1, %al
	movl	%ebp, %esi
	callq	printf
	jmp	.LBB16_61
.Ltmp1016:
	.p2align	4, 0x90
.LBB16_57:                              # %if.else259
                                        #   in Loop: Header=BB16_55 Depth=1
	.loc	17 331 35 is_stmt 1     # verify.c:331:35
	movsd	208(%rsp,%rbp,8), %xmm2 # xmm2 = mem[0],zero
.Ltmp1017:
	.loc	17 306 26 discriminator 1 # verify.c:306:26
	movsd	.LCPI16_51(%rip), %xmm0 # xmm0 = mem[0],zero
.Ltmp1018:
	.loc	17 325 26 discriminator 1 # verify.c:325:26
	ucomisd	%xmm2, %xmm0
.Ltmp1019:
	.loc	17 331 16               # verify.c:331:16
	movsd	160(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	17 331 24 is_stmt 0     # verify.c:331:24
	movsd	16(%rsp,%rbp,8), %xmm1  # xmm1 = mem[0],zero
	jae	.LBB16_58
# BB#59:                                # %if.else273
                                        #   in Loop: Header=BB16_55 Depth=1
	.loc	17 329 17 is_stmt 1     # verify.c:329:17
	movl	$0, (%r14)
	.loc	17 331 12               # verify.c:331:12
	incq	%rbp
	.loc	17 330 7                # verify.c:330:7
	movl	$.L.str.8.38, %edi
	jmp	.LBB16_60
.Ltmp1020:
	.p2align	4, 0x90
.LBB16_58:                              # %if.then264
                                        #   in Loop: Header=BB16_55 Depth=1
	.loc	17 327 12               # verify.c:327:12
	incq	%rbp
	.loc	17 326 7                # verify.c:326:7
	movl	$.L.str.7.37, %edi
.Ltmp1021:
.LBB16_60:                              # %for.inc284
                                        #   in Loop: Header=BB16_55 Depth=1
	.loc	17 330 7                # verify.c:330:7
	movb	$3, %al
	movl	%ebp, %esi
	callq	printf
.Ltmp1022:
.LBB16_61:                              # %for.inc284
                                        #   in Loop: Header=BB16_55 Depth=1
	.loc	17 323 16               # verify.c:323:16
	movzbl	(%rbx), %ecx
	cmpl	$85, %ecx
	sete	%al
.Ltmp1023:
	.loc	17 322 3 discriminator 1 # verify.c:322:3
	cmpq	$5, %rbp
	jne	.LBB16_55
.Ltmp1024:
# BB#62:                                # %for.end286
	.loc	17 335 7                # verify.c:335:7
	movzbl	%cl, %eax
	cmpl	$85, %eax
	jne	.LBB16_64
# BB#63:                                # %if.then290
.Ltmp1025:
	.loc	17 336 5                # verify.c:336:5
	movl	$.Lstr.19, %edi
	callq	puts
	.loc	17 337 5                # verify.c:337:5
	movl	$.Lstr.20, %edi
	jmp	.LBB16_67
.Ltmp1026:
.LBB16_64:                              # %if.else293
	.loc	17 338 14 discriminator 1 # verify.c:338:14
	cmpl	$0, (%r14)
	je	.LBB16_66
# BB#65:                                # %if.then295
.Ltmp1027:
	.loc	17 339 5                # verify.c:339:5
	movl	$.Lstr.18, %edi
	jmp	.LBB16_67
.Ltmp1028:
.LBB16_66:                              # %if.else297
	.loc	17 341 5                # verify.c:341:5
	movl	$.Lstr.17, %edi
.LBB16_67:                              # %if.end300
	callq	puts
.Ltmp1029:
	.loc	17 343 1                # verify.c:343:1
	addq	$304, %rsp              # imm = 0x130
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.Ltmp1030:
.Lfunc_end16:
	.size	verify, .Lfunc_end16-verify
	.cfi_endproc

	.globl	error_norm
	.p2align	4, 0x90
	.type	error_norm,@function
error_norm:                             # @error_norm
.Lfunc_begin17:
	.file	18 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT/error.c"
	.loc	18 42 0                 # error.c:42:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1031:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1032:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1033:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1034:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1035:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1036:
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
.Ltmp1037:
	.cfi_def_cfa_offset 128
.Ltmp1038:
	.cfi_offset %rbx, -56
.Ltmp1039:
	.cfi_offset %r12, -48
.Ltmp1040:
	.cfi_offset %r13, -40
.Ltmp1041:
	.cfi_offset %r14, -32
.Ltmp1042:
	.cfi_offset %r15, -24
.Ltmp1043:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: error_norm:rms <- %RDI
	movq	%rdi, %rbx
.Ltmp1044:
	#DEBUG_VALUE: error_norm:m <- 0
	#DEBUG_VALUE: error_norm:rms <- %RBX
	.loc	18 47 12 prologue_end   # error.c:47:12
	xorpd	%xmm0, %xmm0
	movupd	%xmm0, 16(%rbx)
	movupd	%xmm0, (%rbx)
	movq	$0, 32(%rbx)
.Ltmp1045:
	.loc	18 50 20 discriminator 1 # error.c:50:20
	movl	grid_points+8(%rip), %ecx
	xorpd	%xmm0, %xmm0
	.loc	18 50 17 is_stmt 0 discriminator 1 # error.c:50:17
	testl	%ecx, %ecx
	jle	.LBB17_1
.Ltmp1046:
# BB#2:                                 # %for.body3.lr.ph
	#DEBUG_VALUE: error_norm:rms <- %RBX
	.loc	18 52 22 is_stmt 1 discriminator 1 # error.c:52:22
	movl	grid_points+4(%rip), %eax
	xorl	%esi, %esi
	movl	$u+32, %r12d
	leaq	32(%rsp), %r14
.Ltmp1047:
	.p2align	4, 0x90
.LBB17_3:                               # %for.body3
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB17_5 Depth 2
                                        #       Child Loop BB17_7 Depth 3
	#DEBUG_VALUE: error_norm:j <- 0
	.loc	18 52 5 is_stmt 0 discriminator 1 # error.c:52:5
	testl	%eax, %eax
	jle	.LBB17_11
.Ltmp1048:
# BB#4:                                 # %for.body8.lr.ph
                                        #   in Loop: Header=BB17_3 Depth=1
	.loc	18 51 12 is_stmt 1      # error.c:51:12
	cvtsi2sdl	%esi, %xmm1
	movq	%rsi, 16(%rsp)          # 8-byte Spill
	.loc	18 51 24 is_stmt 0      # error.c:51:24
	mulsd	dnzm1(%rip), %xmm1
.Ltmp1049:
	#DEBUG_VALUE: error_norm:zeta <- %XMM1
	.loc	18 54 24 is_stmt 1 discriminator 1 # error.c:54:24
	movsd	%xmm1, 24(%rsp)         # 8-byte Spill
	movl	grid_points(%rip), %ecx
	movq	%r12, 8(%rsp)           # 8-byte Spill
	xorl	%ebp, %ebp
.Ltmp1050:
	.p2align	4, 0x90
.LBB17_5:                               # %for.body8
                                        #   Parent Loop BB17_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB17_7 Depth 3
	#DEBUG_VALUE: error_norm:i <- 0
	.loc	18 54 7 is_stmt 0 discriminator 1 # error.c:54:7
	testl	%ecx, %ecx
	jle	.LBB17_9
.Ltmp1051:
# BB#6:                                 #   in Loop: Header=BB17_5 Depth=2
	.loc	18 53 13 is_stmt 1      # error.c:53:13
	cvtsi2sdl	%ebp, %xmm0
	.loc	18 53 25 is_stmt 0      # error.c:53:25
	mulsd	dnym1(%rip), %xmm0
.Ltmp1052:
	#DEBUG_VALUE: error_norm:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp1053:
	#DEBUG_VALUE: error_norm:eta <- [%RSP+0]
	movq	%r12, %r13
	xorl	%r15d, %r15d
.Ltmp1054:
	.p2align	4, 0x90
.LBB17_7:                               # %for.body15
                                        #   Parent Loop BB17_3 Depth=1
                                        #     Parent Loop BB17_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	18 55 14 is_stmt 1      # error.c:55:14
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r15d, %xmm0
	.loc	18 55 26 is_stmt 0      # error.c:55:26
	mulsd	dnxm1(%rip), %xmm0
.Ltmp1055:
	#DEBUG_VALUE: error_norm:xi <- %XMM0
	.loc	18 56 9 is_stmt 1       # error.c:56:9
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	24(%rsp), %xmm2         # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r14, %rdi
	callq	exact_solution
	#DEBUG_VALUE: error_norm:m <- 0
.Ltmp1056:
	.loc	18 59 17                # error.c:59:17
	movsd	-32(%r13), %xmm0        # xmm0 = mem[0],zero
.Ltmp1057:
	.loc	18 59 30 is_stmt 0      # error.c:59:30
	subsd	32(%rsp), %xmm0
.Ltmp1058:
	#DEBUG_VALUE: error_norm:add <- %XMM0
	.loc	18 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm0, %xmm0
.Ltmp1059:
	.loc	18 60 27 is_stmt 0      # error.c:60:27
	addsd	(%rbx), %xmm0
	.loc	18 60 18                # error.c:60:18
	movsd	%xmm0, (%rbx)
	.loc	18 59 17 is_stmt 1      # error.c:59:17
	movsd	-24(%r13), %xmm1        # xmm1 = mem[0],zero
	.loc	18 59 30 is_stmt 0      # error.c:59:30
	subsd	40(%rsp), %xmm1
	.loc	18 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	18 60 27 is_stmt 0      # error.c:60:27
	addsd	8(%rbx), %xmm1
	.loc	18 60 18                # error.c:60:18
	movsd	%xmm1, 8(%rbx)
	.loc	18 59 17 is_stmt 1      # error.c:59:17
	movsd	-16(%r13), %xmm1        # xmm1 = mem[0],zero
	.loc	18 59 30 is_stmt 0      # error.c:59:30
	subsd	48(%rsp), %xmm1
	.loc	18 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	18 60 27 is_stmt 0      # error.c:60:27
	addsd	16(%rbx), %xmm1
	.loc	18 60 18                # error.c:60:18
	movsd	%xmm1, 16(%rbx)
	.loc	18 59 17 is_stmt 1      # error.c:59:17
	movsd	-8(%r13), %xmm1         # xmm1 = mem[0],zero
	.loc	18 59 30 is_stmt 0      # error.c:59:30
	subsd	56(%rsp), %xmm1
	.loc	18 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	18 60 27 is_stmt 0      # error.c:60:27
	addsd	24(%rbx), %xmm1
	.loc	18 60 18                # error.c:60:18
	movsd	%xmm1, 24(%rbx)
	.loc	18 59 17 is_stmt 1      # error.c:59:17
	movsd	(%r13), %xmm1           # xmm1 = mem[0],zero
	.loc	18 59 30 is_stmt 0      # error.c:59:30
	subsd	64(%rsp), %xmm1
	.loc	18 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	18 60 27 is_stmt 0      # error.c:60:27
	addsd	32(%rbx), %xmm1
	.loc	18 60 18                # error.c:60:18
	movsd	%xmm1, 32(%rbx)
.Ltmp1060:
	.loc	18 54 7 is_stmt 1 discriminator 1 # error.c:54:7
	incq	%r15
	.loc	18 54 21 is_stmt 0 discriminator 1 # error.c:54:21
	movslq	grid_points(%rip), %rcx
	addq	$40, %r13
	cmpq	%rcx, %r15
	.loc	18 54 7 discriminator 1 # error.c:54:7
	jl	.LBB17_7
.Ltmp1061:
# BB#8:                                 # %for.inc45.loopexit
                                        #   in Loop: Header=BB17_5 Depth=2
	.loc	18 52 22 is_stmt 1 discriminator 1 # error.c:52:22
	movl	grid_points+4(%rip), %eax
.LBB17_9:                               # %for.inc45
                                        #   in Loop: Header=BB17_5 Depth=2
	.loc	18 52 5 is_stmt 0 discriminator 1 # error.c:52:5
	incq	%rbp
	.loc	18 52 19 discriminator 1 # error.c:52:19
	movslq	%eax, %rdx
	.loc	18 52 5 discriminator 1 # error.c:52:5
	addq	$2600, %r12             # imm = 0xA28
	.loc	18 52 19 discriminator 1 # error.c:52:19
	cmpq	%rdx, %rbp
	jl	.LBB17_5
.Ltmp1062:
# BB#10:                                # %for.inc48.loopexit
                                        #   in Loop: Header=BB17_3 Depth=1
	.loc	18 50 20 is_stmt 1 discriminator 1 # error.c:50:20
	movl	grid_points+8(%rip), %ecx
	movq	16(%rsp), %rsi          # 8-byte Reload
	movq	8(%rsp), %r12           # 8-byte Reload
.LBB17_11:                              # %for.inc48
                                        #   in Loop: Header=BB17_3 Depth=1
	.loc	18 50 3 is_stmt 0 discriminator 1 # error.c:50:3
	incq	%rsi
	.loc	18 50 17 discriminator 1 # error.c:50:17
	movslq	%ecx, %rdx
	.loc	18 50 3 discriminator 1 # error.c:50:3
	addq	$169000, %r12           # imm = 0x29428
	.loc	18 50 17 discriminator 1 # error.c:50:17
	cmpq	%rdx, %rsi
	jl	.LBB17_3
	jmp	.LBB17_12
.Ltmp1063:
.LBB17_1:                               # %entry.for.cond55.preheader.preheader_crit_edge
	#DEBUG_VALUE: error_norm:rms <- %RBX
	.loc	18 68 34 is_stmt 1      # error.c:68:34
	movl	grid_points+4(%rip), %eax
.Ltmp1064:
.LBB17_12:                              # %for.cond55.preheader.preheader
	movl	grid_points(%rip), %edx
	.loc	18 68 48 is_stmt 0      # error.c:68:48
	addl	$-2, %edx
	.loc	18 68 25                # error.c:68:25
	cvtsi2sdl	%edx, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %ecx
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%ecx, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 14                # error.c:68:14
	movsd	%xmm0, (%rbx)
.Ltmp1065:
	.loc	18 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB17_14
# BB#13:                                # %call.sqrt
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB17_14:                              # %for.cond55.preheader.preheader.split
	movsd	%xmm1, (%rbx)
.Ltmp1066:
	.loc	18 68 16 is_stmt 1      # error.c:68:16
	movsd	8(%rbx), %xmm0          # xmm0 = mem[0],zero
	.loc	18 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 14                # error.c:68:14
	movsd	%xmm0, 8(%rbx)
.Ltmp1067:
	.loc	18 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB17_16
# BB#15:                                # %call.sqrt10
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB17_16:                              # %for.cond55.preheader.preheader.split.split
	movsd	%xmm1, 8(%rbx)
.Ltmp1068:
	.loc	18 68 16 is_stmt 1      # error.c:68:16
	movsd	16(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	18 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 14                # error.c:68:14
	movsd	%xmm0, 16(%rbx)
.Ltmp1069:
	.loc	18 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB17_18
# BB#17:                                # %call.sqrt11
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB17_18:                              # %for.cond55.preheader.preheader.split.split.split
	movsd	%xmm1, 16(%rbx)
.Ltmp1070:
	.loc	18 68 16 is_stmt 1      # error.c:68:16
	movsd	24(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	18 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 14                # error.c:68:14
	movsd	%xmm0, 24(%rbx)
.Ltmp1071:
	.loc	18 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB17_20
# BB#19:                                # %call.sqrt12
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB17_20:                              # %for.cond55.preheader.preheader.split.split.split.split
	movsd	%xmm1, 24(%rbx)
.Ltmp1072:
	.loc	18 68 16 is_stmt 1      # error.c:68:16
	movsd	32(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	18 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	18 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	18 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	18 68 14                # error.c:68:14
	movsd	%xmm0, 32(%rbx)
.Ltmp1073:
	.loc	18 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB17_22
# BB#21:                                # %call.sqrt13
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB17_22:                              # %for.cond55.preheader.preheader.split.split.split.split.split
	movsd	%xmm1, 32(%rbx)
.Ltmp1074:
	.loc	18 72 1 is_stmt 1       # error.c:72:1
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1075:
.Lfunc_end17:
	.size	error_norm, .Lfunc_end17-error_norm
	.cfi_endproc

	.globl	rhs_norm
	.p2align	4, 0x90
	.type	rhs_norm,@function
rhs_norm:                               # @rhs_norm
.Lfunc_begin18:
	.loc	18 76 0                 # error.c:76:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%r14
.Ltmp1076:
	.cfi_def_cfa_offset 16
	pushq	%rbx
.Ltmp1077:
	.cfi_def_cfa_offset 24
	pushq	%rax
.Ltmp1078:
	.cfi_def_cfa_offset 32
.Ltmp1079:
	.cfi_offset %rbx, -24
.Ltmp1080:
	.cfi_offset %r14, -16
	#DEBUG_VALUE: rhs_norm:rms <- %RDI
	movq	%rdi, %rbx
.Ltmp1081:
	#DEBUG_VALUE: rhs_norm:m <- 0
	#DEBUG_VALUE: rhs_norm:rms <- %RBX
	.loc	18 81 12 prologue_end   # error.c:81:12
	xorpd	%xmm0, %xmm0
	movupd	%xmm0, 16(%rbx)
	movupd	%xmm0, (%rbx)
	movq	$0, 32(%rbx)
.Ltmp1082:
	.loc	18 88 17                # error.c:88:17
	movslq	grid_points+8(%rip), %r9
.Ltmp1083:
	.loc	18 84 34 discriminator 1 # error.c:84:34
	addq	$-2, %r9
	.loc	18 84 17 is_stmt 0 discriminator 1 # error.c:84:17
	testl	%r9d, %r9d
	xorpd	%xmm0, %xmm0
.Ltmp1084:
	.loc	18 88 17 is_stmt 1      # error.c:88:17
	movslq	grid_points+4(%rip), %r8
	jle	.LBB18_8
.Ltmp1085:
# BB#1:                                 # %for.cond4.preheader.lr.ph
	#DEBUG_VALUE: rhs_norm:rms <- %RBX
	.loc	18 85 36 discriminator 1 # error.c:85:36
	leaq	-2(%r8), %r14
	.loc	18 85 19 is_stmt 0 discriminator 1 # error.c:85:19
	testl	%r14d, %r14d
	jle	.LBB18_8
.Ltmp1086:
# BB#2:                                 # %for.cond8.preheader.lr.ph.preheader
	#DEBUG_VALUE: rhs_norm:rms <- %RBX
	.loc	18 86 24 is_stmt 1 discriminator 1 # error.c:86:24
	movl	grid_points(%rip), %ecx
	.loc	18 86 38 is_stmt 0 discriminator 1 # error.c:86:38
	addl	$-2, %ecx
	xorpd	%xmm1, %xmm1
	movl	$1, %r10d
	movl	$rhs+171672, %r11d
	xorpd	%xmm2, %xmm2
	xorpd	%xmm3, %xmm3
	xorpd	%xmm4, %xmm4
	xorpd	%xmm0, %xmm0
.Ltmp1087:
	.p2align	4, 0x90
.LBB18_3:                               # %for.cond8.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB18_4 Depth 2
                                        #       Child Loop BB18_5 Depth 3
	testl	%ecx, %ecx
	movq	%r11, %rdx
	movl	$1, %edi
	jle	.LBB18_7
	.p2align	4, 0x90
.LBB18_4:                               # %for.cond12.preheader.lr.ph
                                        #   Parent Loop BB18_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB18_5 Depth 3
.Ltmp1088:
	.loc	18 89 20 is_stmt 1      # error.c:89:20
	movl	%ecx, %esi
	movq	%rdx, %rax
	.p2align	4, 0x90
.LBB18_5:                               # %for.cond12.preheader
                                        #   Parent Loop BB18_3 Depth=1
                                        #     Parent Loop BB18_4 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	18 88 17                # error.c:88:17
	movsd	-32(%rax), %xmm5        # xmm5 = mem[0],zero
.Ltmp1089:
	#DEBUG_VALUE: rhs_norm:add <- %XMM5
	.loc	18 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
.Ltmp1090:
	.loc	18 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm0
	.loc	18 89 18                # error.c:89:18
	movsd	%xmm0, (%rbx)
	.loc	18 88 17 is_stmt 1      # error.c:88:17
	movsd	-24(%rax), %xmm5        # xmm5 = mem[0],zero
	.loc	18 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	18 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm4
	.loc	18 89 18                # error.c:89:18
	movsd	%xmm4, 8(%rbx)
	.loc	18 88 17 is_stmt 1      # error.c:88:17
	movsd	-16(%rax), %xmm5        # xmm5 = mem[0],zero
	.loc	18 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	18 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm3
	.loc	18 89 18                # error.c:89:18
	movsd	%xmm3, 16(%rbx)
	.loc	18 88 17 is_stmt 1      # error.c:88:17
	movsd	-8(%rax), %xmm5         # xmm5 = mem[0],zero
	.loc	18 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	18 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm2
	.loc	18 89 18                # error.c:89:18
	movsd	%xmm2, 24(%rbx)
	.loc	18 88 17 is_stmt 1      # error.c:88:17
	movsd	(%rax), %xmm5           # xmm5 = mem[0],zero
	.loc	18 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	18 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm1
	.loc	18 89 18                # error.c:89:18
	movsd	%xmm1, 32(%rbx)
.Ltmp1091:
	.loc	18 86 7 is_stmt 1 discriminator 1 # error.c:86:7
	addq	$40, %rax
	decl	%esi
	jne	.LBB18_5
.Ltmp1092:
# BB#6:                                 # %for.inc34
                                        #   in Loop: Header=BB18_4 Depth=2
	.loc	18 85 5 discriminator 1 # error.c:85:5
	addq	$2600, %rdx             # imm = 0xA28
	.loc	18 85 19 is_stmt 0 discriminator 1 # error.c:85:19
	cmpq	%r14, %rdi
	.loc	18 85 5 discriminator 1 # error.c:85:5
	leaq	1(%rdi), %rdi
	jl	.LBB18_4
.Ltmp1093:
.LBB18_7:                               # %for.inc37
                                        #   in Loop: Header=BB18_3 Depth=1
	.loc	18 84 3 is_stmt 1 discriminator 1 # error.c:84:3
	addq	$169000, %r11           # imm = 0x29428
	.loc	18 84 17 is_stmt 0 discriminator 1 # error.c:84:17
	cmpq	%r9, %r10
	.loc	18 84 3 discriminator 1 # error.c:84:3
	leaq	1(%r10), %r10
	jl	.LBB18_3
.Ltmp1094:
.LBB18_8:                               # %for.cond43.preheader.preheader
	.loc	18 97 34 is_stmt 1      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	18 97 48 is_stmt 0      # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %r8d
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%r8d, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%r9d, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 14                # error.c:97:14
	movsd	%xmm0, (%rbx)
.Ltmp1095:
	.loc	18 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_10
# BB#9:                                 # %call.sqrt
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_10:                              # %for.cond43.preheader.preheader.split
	movsd	%xmm1, (%rbx)
.Ltmp1096:
	.loc	18 97 16 is_stmt 1      # error.c:97:16
	movsd	8(%rbx), %xmm0          # xmm0 = mem[0],zero
	.loc	18 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 14                # error.c:97:14
	movsd	%xmm0, 8(%rbx)
.Ltmp1097:
	.loc	18 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_12
# BB#11:                                # %call.sqrt11
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_12:                              # %for.cond43.preheader.preheader.split.split
	movsd	%xmm1, 8(%rbx)
.Ltmp1098:
	.loc	18 97 16 is_stmt 1      # error.c:97:16
	movsd	16(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	18 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 14                # error.c:97:14
	movsd	%xmm0, 16(%rbx)
.Ltmp1099:
	.loc	18 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_14
# BB#13:                                # %call.sqrt12
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_14:                              # %for.cond43.preheader.preheader.split.split.split
	movsd	%xmm1, 16(%rbx)
.Ltmp1100:
	.loc	18 97 16 is_stmt 1      # error.c:97:16
	movsd	24(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	18 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 14                # error.c:97:14
	movsd	%xmm0, 24(%rbx)
.Ltmp1101:
	.loc	18 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_16
# BB#15:                                # %call.sqrt13
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_16:                              # %for.cond43.preheader.preheader.split.split.split.split
	movsd	%xmm1, 24(%rbx)
.Ltmp1102:
	.loc	18 97 16 is_stmt 1      # error.c:97:16
	movsd	32(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	18 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	18 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	18 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	18 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	18 97 14                # error.c:97:14
	movsd	%xmm0, 32(%rbx)
.Ltmp1103:
	.loc	18 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	18 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_18
# BB#17:                                # %call.sqrt14
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_18:                              # %for.cond43.preheader.preheader.split.split.split.split.split
	movsd	%xmm1, 32(%rbx)
.Ltmp1104:
	.loc	18 101 1 is_stmt 1      # error.c:101:1
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	retq
.Ltmp1105:
.Lfunc_end18:
	.size	rhs_norm, .Lfunc_end18-rhs_norm
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI19_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	print_results
	.p2align	4, 0x90
	.type	print_results,@function
print_results:                          # @print_results
.Lfunc_begin19:
	.file	19 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/print_results.c"
	.loc	19 10 0                 # print_results.c:10:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1106:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1107:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1108:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1109:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1110:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1111:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp1112:
	.cfi_def_cfa_offset 96
.Ltmp1113:
	.cfi_offset %rbx, -56
.Ltmp1114:
	.cfi_offset %r12, -48
.Ltmp1115:
	.cfi_offset %r13, -40
.Ltmp1116:
	.cfi_offset %r14, -32
.Ltmp1117:
	.cfi_offset %r15, -24
.Ltmp1118:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: print_results:name <- %RDI
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:n1 <- %EDX
	#DEBUG_VALUE: print_results:n2 <- %ECX
	#DEBUG_VALUE: print_results:n3 <- %R8D
	#DEBUG_VALUE: print_results:niter <- %R9D
	#DEBUG_VALUE: print_results:t <- %XMM0
	#DEBUG_VALUE: print_results:mops <- %XMM1
	movsd	%xmm1, 8(%rsp)          # 8-byte Spill
.Ltmp1119:
	#DEBUG_VALUE: print_results:mops <- [%RSP+8]
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp1120:
	#DEBUG_VALUE: print_results:t <- [%RSP+0]
	movl	%r9d, %r14d
.Ltmp1121:
	#DEBUG_VALUE: print_results:niter <- %R14D
	movl	%r8d, %r12d
.Ltmp1122:
	#DEBUG_VALUE: print_results:n3 <- %R12D
	movl	%ecx, %r13d
.Ltmp1123:
	#DEBUG_VALUE: print_results:n2 <- %R13D
	movl	%edx, %r15d
.Ltmp1124:
	#DEBUG_VALUE: print_results:n1 <- %R15D
	movl	%esi, %ebx
.Ltmp1125:
	#DEBUG_VALUE: print_results:class <- %EBX
	movq	%rdi, %rbp
	#DEBUG_VALUE: print_results:optype <- undef
	#DEBUG_VALUE: print_results:verified <- undef
.Ltmp1126:
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	19 14 3 prologue_end    # print_results.c:14:3
	movl	$.L.str.13, %edi
	xorl	%eax, %eax
	movq	%rbp, %rsi
	callq	printf
.Ltmp1127:
	.loc	19 15 3                 # print_results.c:15:3
	movl	$.L.str.1.14, %edi
	xorl	%eax, %eax
	movl	%ebx, %esi
.Ltmp1128:
	#DEBUG_VALUE: print_results:class <- %ESI
	callq	printf
.Ltmp1129:
	.loc	19 22 20                # print_results.c:22:20
	movl	%r12d, %eax
	orl	%r13d, %eax
	je	.LBB19_1
.Ltmp1130:
# BB#7:                                 # %if.else30
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	19 36 5                 # print_results.c:36:5
	movl	$.L.str.5.18, %edi
	xorl	%eax, %eax
	movl	%r15d, %esi
.Ltmp1131:
	movl	%r13d, %edx
	movl	%r12d, %ecx
	callq	printf
	jmp	.LBB19_8
.Ltmp1132:
.LBB19_1:                               # %if.then
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	19 23 29                # print_results.c:23:29
	movzbl	(%rbp), %eax
	cmpl	$69, %eax
	jne	.LBB19_6
.Ltmp1133:
# BB#2:                                 # %land.lhs.true8
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:class <- %ESI
	.loc	19 23 10 is_stmt 0 discriminator 1 # print_results.c:23:10
	movzbl	1(%rbp), %eax
	cmpl	$80, %eax
	jne	.LBB19_6
.Ltmp1134:
# BB#3:                                 # %if.then13
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	19 24 33 is_stmt 1      # print_results.c:24:33
	movsd	.LCPI19_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movl	%r15d, %edi
	callq	ldexp
	leaq	16(%rsp), %rdi
	.loc	19 24 7 is_stmt 0 discriminator 1 # print_results.c:24:7
	movl	$.L.str.2.15, %esi
.Ltmp1135:
	movb	$1, %al
	callq	sprintf
	movl	$15, %eax
.Ltmp1136:
	#DEBUG_VALUE: print_results:j <- 14
	.loc	19 26 12 is_stmt 1      # print_results.c:26:12
	movzbl	30(%rsp), %ecx
	cmpl	$46, %ecx
	jne	.LBB19_5
.Ltmp1137:
# BB#4:                                 # %if.then21
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	19 27 17                # print_results.c:27:17
	movb	$32, 30(%rsp)
	movl	$14, %eax
.Ltmp1138:
	#DEBUG_VALUE: print_results:j <- 13
.LBB19_5:                               # %if.end
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	19 30 17                # print_results.c:30:17
	movb	$0, 16(%rsp,%rax)
	leaq	16(%rsp), %rsi
	.loc	19 31 7                 # print_results.c:31:7
	movl	$.L.str.3.16, %edi
	xorl	%eax, %eax
	callq	printf
	jmp	.LBB19_8
.Ltmp1139:
.LBB19_6:                               # %if.else
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:class <- %ESI
	.loc	19 33 7                 # print_results.c:33:7
	movl	$.L.str.4.17, %edi
	xorl	%eax, %eax
	movl	%r15d, %esi
.Ltmp1140:
	callq	printf
.Ltmp1141:
.LBB19_8:                               # %if.end32
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:cs7 <- undef
	movq	168(%rsp), %r12
.Ltmp1142:
	#DEBUG_VALUE: print_results:cs6 <- %R12
	movq	160(%rsp), %r13
.Ltmp1143:
	#DEBUG_VALUE: print_results:cs5 <- %R13
	movq	152(%rsp), %r15
.Ltmp1144:
	#DEBUG_VALUE: print_results:cs4 <- %R15
	movq	144(%rsp), %rbp
.Ltmp1145:
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	movq	136(%rsp), %rbx
	#DEBUG_VALUE: print_results:npbversion <- undef
	#DEBUG_VALUE: print_results:compiletime <- undef
	#DEBUG_VALUE: print_results:cs1 <- undef
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	.loc	19 39 3                 # print_results.c:39:3
	movl	$.L.str.6.19, %edi
	xorl	%eax, %eax
	movl	%r14d, %esi
	callq	printf
	.loc	19 40 3                 # print_results.c:40:3
	movl	$.L.str.7.20, %edi
	movb	$1, %al
	movsd	(%rsp), %xmm0           # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	printf
	.loc	19 41 3                 # print_results.c:41:3
	movl	$.L.str.8.21, %edi
	movb	$1, %al
	movsd	8(%rsp), %xmm0          # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	printf
	.loc	19 42 3                 # print_results.c:42:3
	movl	$.L.str.9.22, %edi
	xorl	%eax, %eax
	movq	96(%rsp), %rsi
	callq	printf
.Ltmp1146:
	.loc	19 46 5                 # print_results.c:46:5
	movl	$.L.str.10.23, %edi
	.loc	19 43 8                 # print_results.c:43:8
	cmpl	$0, 104(%rsp)
.Ltmp1147:
	.loc	19 43 8 is_stmt 0       # print_results.c:43:8
	je	.LBB19_10
.Ltmp1148:
# BB#9:                                 # %if.then37
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs6 <- %R12
	.loc	19 44 5 is_stmt 1       # print_results.c:44:5
	movl	$.L.str.11.24, %esi
	jmp	.LBB19_11
.Ltmp1149:
.LBB19_10:                              # %if.else39
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs6 <- %R12
	.loc	19 46 5                 # print_results.c:46:5
	movl	$.L.str.12.25, %esi
.Ltmp1150:
.LBB19_11:                              # %if.end41
	#DEBUG_VALUE: print_results:cs6 <- %R12
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:niter <- %R14D
	xorl	%eax, %eax
	callq	printf
	movq	176(%rsp), %r14
.Ltmp1151:
	movq	112(%rsp), %rsi
.Ltmp1152:
	.loc	19 47 3                 # print_results.c:47:3
	movl	$.L.str.13.26, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	19 48 3                 # print_results.c:48:3
	movl	$.L.str.14.27, %edi
	xorl	%eax, %eax
	movq	120(%rsp), %rsi
	callq	printf
	.loc	19 50 3                 # print_results.c:50:3
	movl	$.L.str.15, %edi
	xorl	%eax, %eax
	movq	128(%rsp), %rsi
	callq	printf
	.loc	19 52 3                 # print_results.c:52:3
	movl	$.L.str.16.28, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	callq	printf
	.loc	19 53 3                 # print_results.c:53:3
	movl	$.L.str.17.29, %edi
	xorl	%eax, %eax
	movq	%rbp, %rsi
	callq	printf
	.loc	19 54 3                 # print_results.c:54:3
	movl	$.L.str.18.30, %edi
	xorl	%eax, %eax
	movq	%r15, %rsi
	callq	printf
	.loc	19 55 3                 # print_results.c:55:3
	movl	$.L.str.19, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	callq	printf
	.loc	19 56 3                 # print_results.c:56:3
	movl	$.L.str.20.31, %edi
	xorl	%eax, %eax
	movq	%r12, %rsi
	callq	printf
	.loc	19 57 3                 # print_results.c:57:3
	movl	$.L.str.21.32, %edi
	xorl	%eax, %eax
	movq	%r14, %rsi
	callq	printf
	.loc	19 59 3                 # print_results.c:59:3
	movl	$.Lstr.33, %edi
	callq	puts
	.loc	19 65 1                 # print_results.c:65:1
	addq	$40, %rsp
	popq	%rbx
.Ltmp1153:
	popq	%r12
.Ltmp1154:
	popq	%r13
.Ltmp1155:
	popq	%r14
	popq	%r15
.Ltmp1156:
	popq	%rbp
.Ltmp1157:
	retq
.Ltmp1158:
.Lfunc_end19:
	.size	print_results, .Lfunc_end19-print_results
	.cfi_endproc

	.globl	timer_clear
	.p2align	4, 0x90
	.type	timer_clear,@function
timer_clear:                            # @timer_clear
.Lfunc_begin20:
	.loc	4 26 0                  # c_timers.c:26:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: timer_clear:n <- %EDI
	.loc	4 27 5 prologue_end     # c_timers.c:27:5
	movslq	%edi, %rax
	.loc	4 27 16 is_stmt 0       # c_timers.c:27:16
	movq	$0, elapsed(,%rax,8)
	.loc	4 28 1 is_stmt 1        # c_timers.c:28:1
	retq
.Ltmp1159:
.Lfunc_end20:
	.size	timer_clear, .Lfunc_end20-timer_clear
	.cfi_endproc

	.globl	timer_start
	.p2align	4, 0x90
	.type	timer_start,@function
timer_start:                            # @timer_start
.Lfunc_begin21:
	.loc	4 35 0                  # c_timers.c:35:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1160:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1161:
	.cfi_def_cfa_offset 32
.Ltmp1162:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: timer_start:n <- %EDI
	movl	%edi, %ebx
.Ltmp1163:
	#DEBUG_VALUE: timer_start:n <- %EBX
	leaq	8(%rsp), %rdi
.Ltmp1164:
	#DEBUG_VALUE: elapsed_time:t <- [%RDI+0]
	.loc	4 15 5 prologue_end     # c_timers.c:15:5
	callq	wtime_
	.loc	4 16 13                 # c_timers.c:16:13
	movq	8(%rsp), %rax
.Ltmp1165:
	.loc	4 36 5                  # c_timers.c:36:5
	movslq	%ebx, %rcx
	.loc	4 36 14 is_stmt 0       # c_timers.c:36:14
	movq	%rax, start(,%rcx,8)
	.loc	4 37 1 is_stmt 1        # c_timers.c:37:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1166:
	retq
.Ltmp1167:
.Lfunc_end21:
	.size	timer_start, .Lfunc_end21-timer_start
	.cfi_endproc

	.globl	timer_stop
	.p2align	4, 0x90
	.type	timer_stop,@function
timer_stop:                             # @timer_stop
.Lfunc_begin22:
	.loc	4 44 0                  # c_timers.c:44:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1168:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1169:
	.cfi_def_cfa_offset 32
.Ltmp1170:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: timer_stop:n <- %EDI
	movl	%edi, %ebx
.Ltmp1171:
	#DEBUG_VALUE: timer_stop:n <- %EBX
	leaq	8(%rsp), %rdi
.Ltmp1172:
	#DEBUG_VALUE: elapsed_time:t <- [%RDI+0]
	.loc	4 15 5 prologue_end     # c_timers.c:15:5
	callq	wtime_
	.loc	4 16 13                 # c_timers.c:16:13
	movsd	8(%rsp), %xmm0          # xmm0 = mem[0],zero
.Ltmp1173:
	#DEBUG_VALUE: elapsed_time:t <- %XMM0
	#DEBUG_VALUE: timer_stop:now <- %XMM0
	.loc	4 48 15                 # c_timers.c:48:15
	movslq	%ebx, %rax
	.loc	4 48 13 is_stmt 0       # c_timers.c:48:13
	subsd	start(,%rax,8), %xmm0
.Ltmp1174:
	#DEBUG_VALUE: timer_stop:t <- %XMM0
	.loc	4 49 16 is_stmt 1       # c_timers.c:49:16
	addsd	elapsed(,%rax,8), %xmm0
.Ltmp1175:
	movsd	%xmm0, elapsed(,%rax,8)
	.loc	4 51 1                  # c_timers.c:51:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1176:
	retq
.Ltmp1177:
.Lfunc_end22:
	.size	timer_stop, .Lfunc_end22-timer_stop
	.cfi_endproc

	.globl	timer_read
	.p2align	4, 0x90
	.type	timer_read,@function
timer_read:                             # @timer_read
.Lfunc_begin23:
	.loc	4 58 0                  # c_timers.c:58:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: timer_read:n <- %EDI
	.loc	4 59 13 prologue_end    # c_timers.c:59:13
	movslq	%edi, %rax
	movsd	elapsed(,%rax,8), %xmm0 # xmm0 = mem[0],zero
	.loc	4 59 5 is_stmt 0        # c_timers.c:59:5
	retq
.Ltmp1178:
.Lfunc_end23:
	.size	timer_read, .Lfunc_end23-timer_read
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI24_0:
	.quad	4517329193108106637     # double 9.9999999999999995E-7
	.text
	.globl	wtime_
	.p2align	4, 0x90
	.type	wtime_,@function
wtime_:                                 # @wtime_
.Lfunc_begin24:
	.loc	5 8 0 is_stmt 1         # ../common/wtime.c:8:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1179:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1180:
	.cfi_def_cfa_offset 32
.Ltmp1181:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: wtime_:t <- %RDI
	movq	%rdi, %rbx
.Ltmp1182:
	#DEBUG_VALUE: wtime_:t <- %RBX
	leaq	(%rsp), %rdi
.Ltmp1183:
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	.loc	5 11 3 prologue_end     # ../common/wtime.c:11:3
	xorl	%esi, %esi
	callq	gettimeofday
.Ltmp1184:
	.loc	5 12 7                  # ../common/wtime.c:12:7
	movl	wtime_.sec(%rip), %ecx
	.loc	5 12 25 is_stmt 0 discriminator 1 # ../common/wtime.c:12:25
	movq	(%rsp), %rax
.Ltmp1185:
	.loc	5 12 7                  # ../common/wtime.c:12:7
	testl	%ecx, %ecx
	jns	.LBB24_2
.Ltmp1186:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	#DEBUG_VALUE: wtime_:t <- %RBX
	.loc	5 12 20 discriminator 1 # ../common/wtime.c:12:20
	movl	%eax, wtime_.sec(%rip)
.Ltmp1187:
	.loc	5 13 21 is_stmt 1       # ../common/wtime.c:13:21
	movl	%eax, %ecx
.Ltmp1188:
.LBB24_2:                               # %if.end
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	#DEBUG_VALUE: wtime_:t <- %RBX
	movslq	%ecx, %rcx
	.loc	5 13 19 is_stmt 0       # ../common/wtime.c:13:19
	subq	%rcx, %rax
	.loc	5 13 8                  # ../common/wtime.c:13:8
	cvtsi2sdq	%rax, %xmm0
	.loc	5 13 35                 # ../common/wtime.c:13:35
	cvtsi2sdq	8(%rsp), %xmm1
	.loc	5 13 34                 # ../common/wtime.c:13:34
	mulsd	.LCPI24_0(%rip), %xmm1
	.loc	5 13 26                 # ../common/wtime.c:13:26
	addsd	%xmm0, %xmm1
	.loc	5 13 6                  # ../common/wtime.c:13:6
	movsd	%xmm1, (%rbx)
	.loc	5 14 1 is_stmt 1        # ../common/wtime.c:14:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1189:
	retq
.Ltmp1190:
.Lfunc_end24:
	.size	wtime_, .Lfunc_end24-wtime_
	.cfi_endproc

	.type	timeron,@object         # @timeron
	.comm	timeron,4,4
	.type	dt,@object              # @dt
	.comm	dt,8,8
	.type	grid_points,@object     # @grid_points
	.comm	grid_points,12,4
	.type	elapsed_time,@object    # @elapsed_time
	.comm	elapsed_time,8,8
	.type	tx1,@object             # @tx1
	.comm	tx1,8,8
	.type	tx2,@object             # @tx2
	.comm	tx2,8,8
	.type	tx3,@object             # @tx3
	.comm	tx3,8,8
	.type	ty1,@object             # @ty1
	.comm	ty1,8,8
	.type	ty2,@object             # @ty2
	.comm	ty2,8,8
	.type	ty3,@object             # @ty3
	.comm	ty3,8,8
	.type	tz1,@object             # @tz1
	.comm	tz1,8,8
	.type	tz2,@object             # @tz2
	.comm	tz2,8,8
	.type	tz3,@object             # @tz3
	.comm	tz3,8,8
	.type	dx1,@object             # @dx1
	.comm	dx1,8,8
	.type	dx2,@object             # @dx2
	.comm	dx2,8,8
	.type	dx3,@object             # @dx3
	.comm	dx3,8,8
	.type	dx4,@object             # @dx4
	.comm	dx4,8,8
	.type	dx5,@object             # @dx5
	.comm	dx5,8,8
	.type	dy1,@object             # @dy1
	.comm	dy1,8,8
	.type	dy2,@object             # @dy2
	.comm	dy2,8,8
	.type	dy3,@object             # @dy3
	.comm	dy3,8,8
	.type	dy4,@object             # @dy4
	.comm	dy4,8,8
	.type	dy5,@object             # @dy5
	.comm	dy5,8,8
	.type	dz1,@object             # @dz1
	.comm	dz1,8,8
	.type	dz2,@object             # @dz2
	.comm	dz2,8,8
	.type	dz3,@object             # @dz3
	.comm	dz3,8,8
	.type	dz4,@object             # @dz4
	.comm	dz4,8,8
	.type	dz5,@object             # @dz5
	.comm	dz5,8,8
	.type	dssp,@object            # @dssp
	.comm	dssp,8,8
	.type	ce,@object              # @ce
	.comm	ce,520,16
	.type	dxmax,@object           # @dxmax
	.comm	dxmax,8,8
	.type	dymax,@object           # @dymax
	.comm	dymax,8,8
	.type	dzmax,@object           # @dzmax
	.comm	dzmax,8,8
	.type	xxcon1,@object          # @xxcon1
	.comm	xxcon1,8,8
	.type	xxcon2,@object          # @xxcon2
	.comm	xxcon2,8,8
	.type	xxcon3,@object          # @xxcon3
	.comm	xxcon3,8,8
	.type	xxcon4,@object          # @xxcon4
	.comm	xxcon4,8,8
	.type	xxcon5,@object          # @xxcon5
	.comm	xxcon5,8,8
	.type	dx1tx1,@object          # @dx1tx1
	.comm	dx1tx1,8,8
	.type	dx2tx1,@object          # @dx2tx1
	.comm	dx2tx1,8,8
	.type	dx3tx1,@object          # @dx3tx1
	.comm	dx3tx1,8,8
	.type	dx4tx1,@object          # @dx4tx1
	.comm	dx4tx1,8,8
	.type	dx5tx1,@object          # @dx5tx1
	.comm	dx5tx1,8,8
	.type	yycon1,@object          # @yycon1
	.comm	yycon1,8,8
	.type	yycon2,@object          # @yycon2
	.comm	yycon2,8,8
	.type	yycon3,@object          # @yycon3
	.comm	yycon3,8,8
	.type	yycon4,@object          # @yycon4
	.comm	yycon4,8,8
	.type	yycon5,@object          # @yycon5
	.comm	yycon5,8,8
	.type	dy1ty1,@object          # @dy1ty1
	.comm	dy1ty1,8,8
	.type	dy2ty1,@object          # @dy2ty1
	.comm	dy2ty1,8,8
	.type	dy3ty1,@object          # @dy3ty1
	.comm	dy3ty1,8,8
	.type	dy4ty1,@object          # @dy4ty1
	.comm	dy4ty1,8,8
	.type	dy5ty1,@object          # @dy5ty1
	.comm	dy5ty1,8,8
	.type	zzcon1,@object          # @zzcon1
	.comm	zzcon1,8,8
	.type	zzcon2,@object          # @zzcon2
	.comm	zzcon2,8,8
	.type	zzcon3,@object          # @zzcon3
	.comm	zzcon3,8,8
	.type	zzcon4,@object          # @zzcon4
	.comm	zzcon4,8,8
	.type	zzcon5,@object          # @zzcon5
	.comm	zzcon5,8,8
	.type	dz1tz1,@object          # @dz1tz1
	.comm	dz1tz1,8,8
	.type	dz2tz1,@object          # @dz2tz1
	.comm	dz2tz1,8,8
	.type	dz3tz1,@object          # @dz3tz1
	.comm	dz3tz1,8,8
	.type	dz4tz1,@object          # @dz4tz1
	.comm	dz4tz1,8,8
	.type	dz5tz1,@object          # @dz5tz1
	.comm	dz5tz1,8,8
	.type	dnxm1,@object           # @dnxm1
	.comm	dnxm1,8,8
	.type	dnym1,@object           # @dnym1
	.comm	dnym1,8,8
	.type	dnzm1,@object           # @dnzm1
	.comm	dnzm1,8,8
	.type	c1c2,@object            # @c1c2
	.comm	c1c2,8,8
	.type	c1c5,@object            # @c1c5
	.comm	c1c5,8,8
	.type	c3c4,@object            # @c3c4
	.comm	c3c4,8,8
	.type	c1345,@object           # @c1345
	.comm	c1345,8,8
	.type	conz1,@object           # @conz1
	.comm	conz1,8,8
	.type	c1,@object              # @c1
	.comm	c1,8,8
	.type	c2,@object              # @c2
	.comm	c2,8,8
	.type	c3,@object              # @c3
	.comm	c3,8,8
	.type	c4,@object              # @c4
	.comm	c4,8,8
	.type	c5,@object              # @c5
	.comm	c5,8,8
	.type	c4dssp,@object          # @c4dssp
	.comm	c4dssp,8,8
	.type	c5dssp,@object          # @c5dssp
	.comm	c5dssp,8,8
	.type	dtdssp,@object          # @dtdssp
	.comm	dtdssp,8,8
	.type	dttx1,@object           # @dttx1
	.comm	dttx1,8,8
	.type	dttx2,@object           # @dttx2
	.comm	dttx2,8,8
	.type	dtty1,@object           # @dtty1
	.comm	dtty1,8,8
	.type	dtty2,@object           # @dtty2
	.comm	dtty2,8,8
	.type	dttz1,@object           # @dttz1
	.comm	dttz1,8,8
	.type	dttz2,@object           # @dttz2
	.comm	dttz2,8,8
	.type	c2dttx1,@object         # @c2dttx1
	.comm	c2dttx1,8,8
	.type	c2dtty1,@object         # @c2dtty1
	.comm	c2dtty1,8,8
	.type	c2dttz1,@object         # @c2dttz1
	.comm	c2dttz1,8,8
	.type	comz1,@object           # @comz1
	.comm	comz1,8,8
	.type	comz4,@object           # @comz4
	.comm	comz4,8,8
	.type	comz5,@object           # @comz5
	.comm	comz5,8,8
	.type	comz6,@object           # @comz6
	.comm	comz6,8,8
	.type	c3c4tx3,@object         # @c3c4tx3
	.comm	c3c4tx3,8,8
	.type	c3c4ty3,@object         # @c3c4ty3
	.comm	c3c4ty3,8,8
	.type	c3c4tz3,@object         # @c3c4tz3
	.comm	c3c4tz3,8,8
	.type	c2iv,@object            # @c2iv
	.comm	c2iv,8,8
	.type	con43,@object           # @con43
	.comm	con43,8,8
	.type	con16,@object           # @con16
	.comm	con16,8,8
	.type	us,@object              # @us
	.comm	us,2163200,16
	.type	vs,@object              # @vs
	.comm	vs,2163200,16
	.type	ws,@object              # @ws
	.comm	ws,2163200,16
	.type	qs,@object              # @qs
	.comm	qs,2163200,16
	.type	rho_i,@object           # @rho_i
	.comm	rho_i,2163200,16
	.type	square,@object          # @square
	.comm	square,2163200,16
	.type	forcing,@object         # @forcing
	.comm	forcing,10816000,16
	.type	u,@object               # @u
	.comm	u,10816000,16
	.type	rhs,@object             # @rhs
	.comm	rhs,10816000,16
	.type	cuf,@object             # @cuf
	.comm	cuf,520,16
	.type	q,@object               # @q
	.comm	q,520,16
	.type	ue,@object              # @ue
	.comm	ue,2600,16
	.type	buf,@object             # @buf
	.comm	buf,2600,16
	.type	fjac,@object            # @fjac
	.comm	fjac,13000,16
	.type	njac,@object            # @njac
	.comm	njac,13000,16
	.type	lhs,@object             # @lhs
	.comm	lhs,39000,16
	.type	tmp1,@object            # @tmp1
	.comm	tmp1,8,8
	.type	tmp2,@object            # @tmp2
	.comm	tmp2,8,8
	.type	tmp3,@object            # @tmp3
	.comm	tmp3,8,8
	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"timer.flag"
	.size	.L.str, 11

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"r"
	.size	.L.str.1, 2

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"total"
	.size	.L.str.2, 6

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"rhsx"
	.size	.L.str.3, 5

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"rhsy"
	.size	.L.str.4, 5

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"rhsz"
	.size	.L.str.5, 5

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"rhs"
	.size	.L.str.6, 4

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"xsolve"
	.size	.L.str.7, 7

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"ysolve"
	.size	.L.str.8, 7

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"zsolve"
	.size	.L.str.9, 7

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"redist1"
	.size	.L.str.10, 8

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"redist2"
	.size	.L.str.11, 8

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"add"
	.size	.L.str.12, 4

	.type	.Lstr,@object           # @str
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr:
	.asciz	"\n\n NAS Parallel Benchmarks (NPB3.3-SER-C) - BT Benchmark\n"
	.size	.Lstr, 58

	.type	.L.str.14,@object       # @.str.14
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.14:
	.asciz	"inputbt.data"
	.size	.L.str.14, 13

	.type	.Lstr.42,@object        # @str.42
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.42:
	.asciz	" Reading from input file inputbt.data"
	.size	.Lstr.42, 38

	.type	.L.str.16,@object       # @.str.16
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.16:
	.asciz	"%d"
	.size	.L.str.16, 3

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"%lf"
	.size	.L.str.17, 4

	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"%d%d%d\n"
	.size	.L.str.18, 8

	.type	.Lstr.39,@object        # @str.39
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.39:
	.asciz	" No input file inputbt.data. Using compiled defaults"
	.size	.Lstr.39, 53

	.type	.L.str.20,@object       # @.str.20
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.20:
	.asciz	" Size: %4dx%4dx%4d\n"
	.size	.L.str.20, 20

	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	" Iterations: %4d    dt: %10.6f\n"
	.size	.L.str.21, 32

	.type	.L.str.23,@object       # @.str.23
.L.str.23:
	.asciz	" %d, %d, %d\n"
	.size	.L.str.23, 13

	.type	.Lstr.41,@object        # @str.41
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.41:
	.asciz	" Problem size too big for compiled array sizes"
	.size	.Lstr.41, 47

	.type	.L.str.25,@object       # @.str.25
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.25:
	.asciz	" Time step %4d\n"
	.size	.L.str.25, 16

	.type	.L.str.32,@object       # @.str.32
.L.str.32:
	.asciz	" Verification being performed for class %c\n"
	.size	.L.str.32, 44

	.type	.L.str.1.33,@object     # @.str.1.33
.L.str.1.33:
	.asciz	" accuracy setting for epsilon = %20.13E\n"
	.size	.L.str.1.33, 41

	.type	.L.str.2.34,@object     # @.str.2.34
.L.str.2.34:
	.asciz	" DT does not match the reference value of %15.8E\n"
	.size	.L.str.2.34, 50

	.type	.Lstr.35,@object        # @str.35
.Lstr.35:
	.asciz	" Unknown class"
	.size	.Lstr.35, 15

	.type	.Lstr.22,@object        # @str.22
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.22:
	.asciz	" Comparison of RMS-norms of residual"
	.size	.Lstr.22, 37

	.type	.Lstr.15,@object        # @str.15
	.p2align	4
.Lstr.15:
	.asciz	" RMS-norms of residual"
	.size	.Lstr.15, 23

	.type	.L.str.6.36,@object     # @.str.6.36
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.6.36:
	.asciz	"          %2d%20.13E\n"
	.size	.L.str.6.36, 22

	.type	.L.str.7.37,@object     # @.str.7.37
.L.str.7.37:
	.asciz	"          %2d%20.13E%20.13E%20.13E\n"
	.size	.L.str.7.37, 36

	.type	.L.str.8.38,@object     # @.str.8.38
.L.str.8.38:
	.asciz	" FAILURE: %2d%20.13E%20.13E%20.13E\n"
	.size	.L.str.8.38, 36

	.type	.Lstr.21,@object        # @str.21
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.21:
	.asciz	" Comparison of RMS-norms of solution error"
	.size	.Lstr.21, 43

	.type	.Lstr.16,@object        # @str.16
	.p2align	4
.Lstr.16:
	.asciz	" RMS-norms of solution error"
	.size	.Lstr.16, 29

	.type	.Lstr.19,@object        # @str.19
	.p2align	4
.Lstr.19:
	.asciz	" No reference values provided"
	.size	.Lstr.19, 30

	.type	.Lstr.20,@object        # @str.20
	.p2align	4
.Lstr.20:
	.asciz	" No verification performed"
	.size	.Lstr.20, 27

	.type	.Lstr.18,@object        # @str.18
	.p2align	4
.Lstr.18:
	.asciz	" Verification Successful"
	.size	.Lstr.18, 25

	.type	.Lstr.17,@object        # @str.17
	.p2align	4
.Lstr.17:
	.asciz	" Verification failed"
	.size	.Lstr.17, 21

	.type	.L.str.26,@object       # @.str.26
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.26:
	.asciz	"BT"
	.size	.L.str.26, 3

	.type	.L.str.27,@object       # @.str.27
.L.str.27:
	.asciz	"          floating point"
	.size	.L.str.27, 25

	.type	.L.str.28,@object       # @.str.28
.L.str.28:
	.asciz	"3.3.1"
	.size	.L.str.28, 6

	.type	.L.str.29,@object       # @.str.29
.L.str.29:
	.asciz	"03 Mar 2016"
	.size	.L.str.29, 12

	.type	.L.str.30,@object       # @.str.30
.L.str.30:
	.asciz	"(none)"
	.size	.L.str.30, 7

	.type	.L.str.31,@object       # @.str.31
.L.str.31:
	.asciz	"-I ../common "
	.size	.L.str.31, 14

	.type	.Lstr.40,@object        # @str.40
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.40:
	.asciz	"  SECTION   Time (secs)"
	.size	.Lstr.40, 24

	.type	.L.str.33,@object       # @.str.33
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.33:
	.asciz	"  %-8s:%9.3f  (%6.2f%%)\n"
	.size	.L.str.33, 25

	.type	.L.str.34,@object       # @.str.34
.L.str.34:
	.asciz	"    --> %8s:%9.3f  (%6.2f%%)\n"
	.size	.L.str.34, 30

	.type	.L.str.35,@object       # @.str.35
.L.str.35:
	.asciz	"sub-rhs"
	.size	.L.str.35, 8

	.type	.L.str.36,@object       # @.str.36
.L.str.36:
	.asciz	"rest-rhs"
	.size	.L.str.36, 9

	.type	.L.str.37,@object       # @.str.37
.L.str.37:
	.asciz	"sub-zsol"
	.size	.L.str.37, 9

	.type	.L.str.38,@object       # @.str.38
.L.str.38:
	.asciz	"redist"
	.size	.L.str.38, 7

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"\n\n %s Benchmark Completed.\n"
	.size	.L.str.13, 28

	.type	.L.str.1.14,@object     # @.str.1.14
.L.str.1.14:
	.asciz	" Class           =             %12c\n"
	.size	.L.str.1.14, 37

	.type	.L.str.2.15,@object     # @.str.2.15
.L.str.2.15:
	.asciz	"%15.0lf"
	.size	.L.str.2.15, 8

	.type	.L.str.3.16,@object     # @.str.3.16
.L.str.3.16:
	.asciz	" Size            =          %15s\n"
	.size	.L.str.3.16, 34

	.type	.L.str.4.17,@object     # @.str.4.17
.L.str.4.17:
	.asciz	" Size            =             %12d\n"
	.size	.L.str.4.17, 37

	.type	.L.str.5.18,@object     # @.str.5.18
.L.str.5.18:
	.asciz	" Size            =           %4dx%4dx%4d\n"
	.size	.L.str.5.18, 42

	.type	.L.str.6.19,@object     # @.str.6.19
.L.str.6.19:
	.asciz	" Iterations      =             %12d\n"
	.size	.L.str.6.19, 37

	.type	.L.str.7.20,@object     # @.str.7.20
.L.str.7.20:
	.asciz	" Time in seconds =             %12.2lf\n"
	.size	.L.str.7.20, 40

	.type	.L.str.8.21,@object     # @.str.8.21
.L.str.8.21:
	.asciz	" Mop/s total     =          %15.2lf\n"
	.size	.L.str.8.21, 37

	.type	.L.str.9.22,@object     # @.str.9.22
.L.str.9.22:
	.asciz	" Operation type  = %24s\n"
	.size	.L.str.9.22, 25

	.type	.L.str.10.23,@object    # @.str.10.23
.L.str.10.23:
	.asciz	" Verification    =             %12s\n"
	.size	.L.str.10.23, 37

	.type	.L.str.11.24,@object    # @.str.11.24
.L.str.11.24:
	.asciz	"SUCCESSFUL"
	.size	.L.str.11.24, 11

	.type	.L.str.12.25,@object    # @.str.12.25
.L.str.12.25:
	.asciz	"UNSUCCESSFUL"
	.size	.L.str.12.25, 13

	.type	.L.str.13.26,@object    # @.str.13.26
.L.str.13.26:
	.asciz	" Version         =             %12s\n"
	.size	.L.str.13.26, 37

	.type	.L.str.14.27,@object    # @.str.14.27
.L.str.14.27:
	.asciz	" Compile date    =             %12s\n"
	.size	.L.str.14.27, 37

	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"\n Compile options:\n    CC           = %s\n"
	.size	.L.str.15, 42

	.type	.L.str.16.28,@object    # @.str.16.28
.L.str.16.28:
	.asciz	"    CLINK        = %s\n"
	.size	.L.str.16.28, 23

	.type	.L.str.17.29,@object    # @.str.17.29
.L.str.17.29:
	.asciz	"    C_LIB        = %s\n"
	.size	.L.str.17.29, 23

	.type	.L.str.18.30,@object    # @.str.18.30
.L.str.18.30:
	.asciz	"    C_INC        = %s\n"
	.size	.L.str.18.30, 23

	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"    CFLAGS       = %s\n"
	.size	.L.str.19, 23

	.type	.L.str.20.31,@object    # @.str.20.31
.L.str.20.31:
	.asciz	"    CLINKFLAGS   = %s\n"
	.size	.L.str.20.31, 23

	.type	.L.str.21.32,@object    # @.str.21.32
.L.str.21.32:
	.asciz	"    RAND         = %s\n"
	.size	.L.str.21.32, 23

	.type	.Lstr.33,@object        # @str.33
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.33:
	.asciz	"\n--------------------------------------\n Please send all errors/feedbacks to:\n Center for Manycore Programming\n cmp@aces.snu.ac.kr\n http://aces.snu.ac.kr\n--------------------------------------\n"
	.size	.Lstr.33, 194

	.type	elapsed,@object         # @elapsed
	.local	elapsed
	.comm	elapsed,512,16
	.type	start,@object           # @start
	.local	start
	.comm	start,512,16
	.type	wtime_.sec,@object      # @wtime_.sec
	.data
	.p2align	2
wtime_.sec:
	.long	4294967295              # 0xffffffff
	.size	wtime_.sec, 4

	.file	20 "/usr/include/libio.h"
	.file	21 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file	22 "/home/norouzi/Desktop/software/llvmTemp/build/bin/../lib/clang/3.9.0/include/stddef.h"
	.file	23 "/usr/include/stdio.h"
	.file	24 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file	25 "/usr/include/x86_64-linux-gnu/bits/time.h"
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 3.9.0 (trunk)" # string offset=0
.Linfo_string1:
	.asciz	"bt.c"                  # string offset=28
.Linfo_string2:
	.asciz	"/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/BT" # string offset=33
.Linfo_string3:
	.asciz	"elapsed_time"          # string offset=95
.Linfo_string4:
	.asciz	"double"                # string offset=108
.Linfo_string5:
	.asciz	"grid_points"           # string offset=115
.Linfo_string6:
	.asciz	"int"                   # string offset=127
.Linfo_string7:
	.asciz	"sizetype"              # string offset=131
.Linfo_string8:
	.asciz	"timeron"               # string offset=140
.Linfo_string9:
	.asciz	"false"                 # string offset=148
.Linfo_string10:
	.asciz	"true"                  # string offset=154
.Linfo_string11:
	.asciz	"logical"               # string offset=159
.Linfo_string12:
	.asciz	"tx1"                   # string offset=167
.Linfo_string13:
	.asciz	"tx2"                   # string offset=171
.Linfo_string14:
	.asciz	"tx3"                   # string offset=175
.Linfo_string15:
	.asciz	"ty1"                   # string offset=179
.Linfo_string16:
	.asciz	"ty2"                   # string offset=183
.Linfo_string17:
	.asciz	"ty3"                   # string offset=187
.Linfo_string18:
	.asciz	"tz1"                   # string offset=191
.Linfo_string19:
	.asciz	"tz2"                   # string offset=195
.Linfo_string20:
	.asciz	"tz3"                   # string offset=199
.Linfo_string21:
	.asciz	"dx1"                   # string offset=203
.Linfo_string22:
	.asciz	"dx2"                   # string offset=207
.Linfo_string23:
	.asciz	"dx3"                   # string offset=211
.Linfo_string24:
	.asciz	"dx4"                   # string offset=215
.Linfo_string25:
	.asciz	"dx5"                   # string offset=219
.Linfo_string26:
	.asciz	"dy1"                   # string offset=223
.Linfo_string27:
	.asciz	"dy2"                   # string offset=227
.Linfo_string28:
	.asciz	"dy3"                   # string offset=231
.Linfo_string29:
	.asciz	"dy4"                   # string offset=235
.Linfo_string30:
	.asciz	"dy5"                   # string offset=239
.Linfo_string31:
	.asciz	"dz1"                   # string offset=243
.Linfo_string32:
	.asciz	"dz2"                   # string offset=247
.Linfo_string33:
	.asciz	"dz3"                   # string offset=251
.Linfo_string34:
	.asciz	"dz4"                   # string offset=255
.Linfo_string35:
	.asciz	"dz5"                   # string offset=259
.Linfo_string36:
	.asciz	"dssp"                  # string offset=263
.Linfo_string37:
	.asciz	"dt"                    # string offset=268
.Linfo_string38:
	.asciz	"ce"                    # string offset=271
.Linfo_string39:
	.asciz	"dxmax"                 # string offset=274
.Linfo_string40:
	.asciz	"dymax"                 # string offset=280
.Linfo_string41:
	.asciz	"dzmax"                 # string offset=286
.Linfo_string42:
	.asciz	"xxcon1"                # string offset=292
.Linfo_string43:
	.asciz	"xxcon2"                # string offset=299
.Linfo_string44:
	.asciz	"xxcon3"                # string offset=306
.Linfo_string45:
	.asciz	"xxcon4"                # string offset=313
.Linfo_string46:
	.asciz	"xxcon5"                # string offset=320
.Linfo_string47:
	.asciz	"dx1tx1"                # string offset=327
.Linfo_string48:
	.asciz	"dx2tx1"                # string offset=334
.Linfo_string49:
	.asciz	"dx3tx1"                # string offset=341
.Linfo_string50:
	.asciz	"dx4tx1"                # string offset=348
.Linfo_string51:
	.asciz	"dx5tx1"                # string offset=355
.Linfo_string52:
	.asciz	"yycon1"                # string offset=362
.Linfo_string53:
	.asciz	"yycon2"                # string offset=369
.Linfo_string54:
	.asciz	"yycon3"                # string offset=376
.Linfo_string55:
	.asciz	"yycon4"                # string offset=383
.Linfo_string56:
	.asciz	"yycon5"                # string offset=390
.Linfo_string57:
	.asciz	"dy1ty1"                # string offset=397
.Linfo_string58:
	.asciz	"dy2ty1"                # string offset=404
.Linfo_string59:
	.asciz	"dy3ty1"                # string offset=411
.Linfo_string60:
	.asciz	"dy4ty1"                # string offset=418
.Linfo_string61:
	.asciz	"dy5ty1"                # string offset=425
.Linfo_string62:
	.asciz	"zzcon1"                # string offset=432
.Linfo_string63:
	.asciz	"zzcon2"                # string offset=439
.Linfo_string64:
	.asciz	"zzcon3"                # string offset=446
.Linfo_string65:
	.asciz	"zzcon4"                # string offset=453
.Linfo_string66:
	.asciz	"zzcon5"                # string offset=460
.Linfo_string67:
	.asciz	"dz1tz1"                # string offset=467
.Linfo_string68:
	.asciz	"dz2tz1"                # string offset=474
.Linfo_string69:
	.asciz	"dz3tz1"                # string offset=481
.Linfo_string70:
	.asciz	"dz4tz1"                # string offset=488
.Linfo_string71:
	.asciz	"dz5tz1"                # string offset=495
.Linfo_string72:
	.asciz	"dnxm1"                 # string offset=502
.Linfo_string73:
	.asciz	"dnym1"                 # string offset=508
.Linfo_string74:
	.asciz	"dnzm1"                 # string offset=514
.Linfo_string75:
	.asciz	"c1c2"                  # string offset=520
.Linfo_string76:
	.asciz	"c1c5"                  # string offset=525
.Linfo_string77:
	.asciz	"c3c4"                  # string offset=530
.Linfo_string78:
	.asciz	"c1345"                 # string offset=535
.Linfo_string79:
	.asciz	"conz1"                 # string offset=541
.Linfo_string80:
	.asciz	"c1"                    # string offset=547
.Linfo_string81:
	.asciz	"c2"                    # string offset=550
.Linfo_string82:
	.asciz	"c3"                    # string offset=553
.Linfo_string83:
	.asciz	"c4"                    # string offset=556
.Linfo_string84:
	.asciz	"c5"                    # string offset=559
.Linfo_string85:
	.asciz	"c4dssp"                # string offset=562
.Linfo_string86:
	.asciz	"c5dssp"                # string offset=569
.Linfo_string87:
	.asciz	"dtdssp"                # string offset=576
.Linfo_string88:
	.asciz	"dttx1"                 # string offset=583
.Linfo_string89:
	.asciz	"dttx2"                 # string offset=589
.Linfo_string90:
	.asciz	"dtty1"                 # string offset=595
.Linfo_string91:
	.asciz	"dtty2"                 # string offset=601
.Linfo_string92:
	.asciz	"dttz1"                 # string offset=607
.Linfo_string93:
	.asciz	"dttz2"                 # string offset=613
.Linfo_string94:
	.asciz	"c2dttx1"               # string offset=619
.Linfo_string95:
	.asciz	"c2dtty1"               # string offset=627
.Linfo_string96:
	.asciz	"c2dttz1"               # string offset=635
.Linfo_string97:
	.asciz	"comz1"                 # string offset=643
.Linfo_string98:
	.asciz	"comz4"                 # string offset=649
.Linfo_string99:
	.asciz	"comz5"                 # string offset=655
.Linfo_string100:
	.asciz	"comz6"                 # string offset=661
.Linfo_string101:
	.asciz	"c3c4tx3"               # string offset=667
.Linfo_string102:
	.asciz	"c3c4ty3"               # string offset=675
.Linfo_string103:
	.asciz	"c3c4tz3"               # string offset=683
.Linfo_string104:
	.asciz	"c2iv"                  # string offset=691
.Linfo_string105:
	.asciz	"con43"                 # string offset=696
.Linfo_string106:
	.asciz	"con16"                 # string offset=702
.Linfo_string107:
	.asciz	"us"                    # string offset=708
.Linfo_string108:
	.asciz	"vs"                    # string offset=711
.Linfo_string109:
	.asciz	"ws"                    # string offset=714
.Linfo_string110:
	.asciz	"qs"                    # string offset=717
.Linfo_string111:
	.asciz	"rho_i"                 # string offset=720
.Linfo_string112:
	.asciz	"square"                # string offset=726
.Linfo_string113:
	.asciz	"forcing"               # string offset=733
.Linfo_string114:
	.asciz	"u"                     # string offset=741
.Linfo_string115:
	.asciz	"rhs"                   # string offset=743
.Linfo_string116:
	.asciz	"cuf"                   # string offset=747
.Linfo_string117:
	.asciz	"q"                     # string offset=751
.Linfo_string118:
	.asciz	"ue"                    # string offset=753
.Linfo_string119:
	.asciz	"buf"                   # string offset=756
.Linfo_string120:
	.asciz	"fjac"                  # string offset=760
.Linfo_string121:
	.asciz	"njac"                  # string offset=765
.Linfo_string122:
	.asciz	"lhs"                   # string offset=770
.Linfo_string123:
	.asciz	"tmp1"                  # string offset=774
.Linfo_string124:
	.asciz	"tmp2"                  # string offset=779
.Linfo_string125:
	.asciz	"tmp3"                  # string offset=784
.Linfo_string126:
	.asciz	"initialize.c"          # string offset=789
.Linfo_string127:
	.asciz	"exact_solution.c"      # string offset=802
.Linfo_string128:
	.asciz	"exact_rhs.c"           # string offset=819
.Linfo_string129:
	.asciz	"set_constants.c"       # string offset=831
.Linfo_string130:
	.asciz	"adi.c"                 # string offset=847
.Linfo_string131:
	.asciz	"rhs.c"                 # string offset=853
.Linfo_string132:
	.asciz	"x_solve.c"             # string offset=859
.Linfo_string133:
	.asciz	"y_solve.c"             # string offset=869
.Linfo_string134:
	.asciz	"solve_subs.c"          # string offset=879
.Linfo_string135:
	.asciz	"z_solve.c"             # string offset=892
.Linfo_string136:
	.asciz	"add.c"                 # string offset=902
.Linfo_string137:
	.asciz	"error.c"               # string offset=908
.Linfo_string138:
	.asciz	"verify.c"              # string offset=916
.Linfo_string139:
	.asciz	"../common/print_results.c" # string offset=925
.Linfo_string140:
	.asciz	"/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common" # string offset=951
.Linfo_string141:
	.asciz	"../common/c_timers.c"  # string offset=1017
.Linfo_string142:
	.asciz	"start"                 # string offset=1038
.Linfo_string143:
	.asciz	"elapsed"               # string offset=1044
.Linfo_string144:
	.asciz	"../common/wtime.c"     # string offset=1052
.Linfo_string145:
	.asciz	"sec"                   # string offset=1070
.Linfo_string146:
	.asciz	"t"                     # string offset=1074
.Linfo_string147:
	.asciz	"main"                  # string offset=1076
.Linfo_string148:
	.asciz	"initialize"            # string offset=1081
.Linfo_string149:
	.asciz	"lhsinit"               # string offset=1092
.Linfo_string150:
	.asciz	"exact_solution"        # string offset=1100
.Linfo_string151:
	.asciz	"exact_rhs"             # string offset=1115
.Linfo_string152:
	.asciz	"set_constants"         # string offset=1125
.Linfo_string153:
	.asciz	"adi"                   # string offset=1139
.Linfo_string154:
	.asciz	"compute_rhs"           # string offset=1143
.Linfo_string155:
	.asciz	"x_solve"               # string offset=1155
.Linfo_string156:
	.asciz	"y_solve"               # string offset=1163
.Linfo_string157:
	.asciz	"matvec_sub"            # string offset=1171
.Linfo_string158:
	.asciz	"matmul_sub"            # string offset=1182
.Linfo_string159:
	.asciz	"binvcrhs"              # string offset=1193
.Linfo_string160:
	.asciz	"binvrhs"               # string offset=1202
.Linfo_string161:
	.asciz	"z_solve"               # string offset=1210
.Linfo_string162:
	.asciz	"add"                   # string offset=1218
.Linfo_string163:
	.asciz	"error_norm"            # string offset=1222
.Linfo_string164:
	.asciz	"rhs_norm"              # string offset=1233
.Linfo_string165:
	.asciz	"verify"                # string offset=1242
.Linfo_string166:
	.asciz	"print_results"         # string offset=1249
.Linfo_string167:
	.asciz	"timer_clear"           # string offset=1263
.Linfo_string168:
	.asciz	"timer_start"           # string offset=1275
.Linfo_string169:
	.asciz	"timer_stop"            # string offset=1287
.Linfo_string170:
	.asciz	"timer_read"            # string offset=1298
.Linfo_string171:
	.asciz	"wtime_"                # string offset=1309
.Linfo_string172:
	.asciz	"trecs"                 # string offset=1316
.Linfo_string173:
	.asciz	"t_names"               # string offset=1322
.Linfo_string174:
	.asciz	"char"                  # string offset=1330
.Linfo_string175:
	.asciz	"argc"                  # string offset=1335
.Linfo_string176:
	.asciz	"argv"                  # string offset=1340
.Linfo_string177:
	.asciz	"fp"                    # string offset=1345
.Linfo_string178:
	.asciz	"_flags"                # string offset=1348
.Linfo_string179:
	.asciz	"_IO_read_ptr"          # string offset=1355
.Linfo_string180:
	.asciz	"_IO_read_end"          # string offset=1368
.Linfo_string181:
	.asciz	"_IO_read_base"         # string offset=1381
.Linfo_string182:
	.asciz	"_IO_write_base"        # string offset=1395
.Linfo_string183:
	.asciz	"_IO_write_ptr"         # string offset=1410
.Linfo_string184:
	.asciz	"_IO_write_end"         # string offset=1424
.Linfo_string185:
	.asciz	"_IO_buf_base"          # string offset=1438
.Linfo_string186:
	.asciz	"_IO_buf_end"           # string offset=1451
.Linfo_string187:
	.asciz	"_IO_save_base"         # string offset=1463
.Linfo_string188:
	.asciz	"_IO_backup_base"       # string offset=1477
.Linfo_string189:
	.asciz	"_IO_save_end"          # string offset=1493
.Linfo_string190:
	.asciz	"_markers"              # string offset=1506
.Linfo_string191:
	.asciz	"_next"                 # string offset=1515
.Linfo_string192:
	.asciz	"_sbuf"                 # string offset=1521
.Linfo_string193:
	.asciz	"_pos"                  # string offset=1527
.Linfo_string194:
	.asciz	"_IO_marker"            # string offset=1532
.Linfo_string195:
	.asciz	"_chain"                # string offset=1543
.Linfo_string196:
	.asciz	"_fileno"               # string offset=1550
.Linfo_string197:
	.asciz	"_flags2"               # string offset=1558
.Linfo_string198:
	.asciz	"_old_offset"           # string offset=1566
.Linfo_string199:
	.asciz	"long int"              # string offset=1578
.Linfo_string200:
	.asciz	"__off_t"               # string offset=1587
.Linfo_string201:
	.asciz	"_cur_column"           # string offset=1595
.Linfo_string202:
	.asciz	"unsigned short"        # string offset=1607
.Linfo_string203:
	.asciz	"_vtable_offset"        # string offset=1622
.Linfo_string204:
	.asciz	"signed char"           # string offset=1637
.Linfo_string205:
	.asciz	"_shortbuf"             # string offset=1649
.Linfo_string206:
	.asciz	"_lock"                 # string offset=1659
.Linfo_string207:
	.asciz	"_IO_lock_t"            # string offset=1665
.Linfo_string208:
	.asciz	"_offset"               # string offset=1676
.Linfo_string209:
	.asciz	"__off64_t"             # string offset=1684
.Linfo_string210:
	.asciz	"__pad1"                # string offset=1694
.Linfo_string211:
	.asciz	"__pad2"                # string offset=1701
.Linfo_string212:
	.asciz	"__pad3"                # string offset=1708
.Linfo_string213:
	.asciz	"__pad4"                # string offset=1715
.Linfo_string214:
	.asciz	"__pad5"                # string offset=1722
.Linfo_string215:
	.asciz	"long unsigned int"     # string offset=1729
.Linfo_string216:
	.asciz	"size_t"                # string offset=1747
.Linfo_string217:
	.asciz	"_mode"                 # string offset=1754
.Linfo_string218:
	.asciz	"_unused2"              # string offset=1760
.Linfo_string219:
	.asciz	"_IO_FILE"              # string offset=1769
.Linfo_string220:
	.asciz	"FILE"                  # string offset=1778
.Linfo_string221:
	.asciz	"niter"                 # string offset=1783
.Linfo_string222:
	.asciz	"result"                # string offset=1789
.Linfo_string223:
	.asciz	"i"                     # string offset=1796
.Linfo_string224:
	.asciz	"step"                  # string offset=1798
.Linfo_string225:
	.asciz	"tmax"                  # string offset=1803
.Linfo_string226:
	.asciz	"Class"                 # string offset=1808
.Linfo_string227:
	.asciz	"verified"              # string offset=1814
.Linfo_string228:
	.asciz	"navg"                  # string offset=1823
.Linfo_string229:
	.asciz	"n3"                    # string offset=1828
.Linfo_string230:
	.asciz	"mflops"                # string offset=1831
.Linfo_string231:
	.asciz	"Pface"                 # string offset=1838
.Linfo_string232:
	.asciz	"temp"                  # string offset=1844
.Linfo_string233:
	.asciz	"k"                     # string offset=1849
.Linfo_string234:
	.asciz	"j"                     # string offset=1851
.Linfo_string235:
	.asciz	"zeta"                  # string offset=1853
.Linfo_string236:
	.asciz	"eta"                   # string offset=1858
.Linfo_string237:
	.asciz	"ix"                    # string offset=1862
.Linfo_string238:
	.asciz	"xi"                    # string offset=1865
.Linfo_string239:
	.asciz	"m"                     # string offset=1868
.Linfo_string240:
	.asciz	"iy"                    # string offset=1870
.Linfo_string241:
	.asciz	"iz"                    # string offset=1873
.Linfo_string242:
	.asciz	"Pxi"                   # string offset=1876
.Linfo_string243:
	.asciz	"Peta"                  # string offset=1880
.Linfo_string244:
	.asciz	"Pzeta"                 # string offset=1885
.Linfo_string245:
	.asciz	"dtemp"                 # string offset=1891
.Linfo_string246:
	.asciz	"dtpp"                  # string offset=1897
.Linfo_string247:
	.asciz	"ip1"                   # string offset=1902
.Linfo_string248:
	.asciz	"im1"                   # string offset=1906
.Linfo_string249:
	.asciz	"jp1"                   # string offset=1910
.Linfo_string250:
	.asciz	"jm1"                   # string offset=1914
.Linfo_string251:
	.asciz	"km1"                   # string offset=1918
.Linfo_string252:
	.asciz	"kp1"                   # string offset=1922
.Linfo_string253:
	.asciz	"rho_inv"               # string offset=1926
.Linfo_string254:
	.asciz	"uijk"                  # string offset=1934
.Linfo_string255:
	.asciz	"up1"                   # string offset=1939
.Linfo_string256:
	.asciz	"um1"                   # string offset=1943
.Linfo_string257:
	.asciz	"vijk"                  # string offset=1947
.Linfo_string258:
	.asciz	"vp1"                   # string offset=1952
.Linfo_string259:
	.asciz	"vm1"                   # string offset=1956
.Linfo_string260:
	.asciz	"wijk"                  # string offset=1960
.Linfo_string261:
	.asciz	"wp1"                   # string offset=1965
.Linfo_string262:
	.asciz	"wm1"                   # string offset=1969
.Linfo_string263:
	.asciz	"isize"                 # string offset=1973
.Linfo_string264:
	.asciz	"n"                     # string offset=1979
.Linfo_string265:
	.asciz	"size"                  # string offset=1981
.Linfo_string266:
	.asciz	"c"                     # string offset=1986
.Linfo_string267:
	.asciz	"r"                     # string offset=1988
.Linfo_string268:
	.asciz	"pivot"                 # string offset=1990
.Linfo_string269:
	.asciz	"coeff"                 # string offset=1996
.Linfo_string270:
	.asciz	"ablock"                # string offset=2002
.Linfo_string271:
	.asciz	"avec"                  # string offset=2009
.Linfo_string272:
	.asciz	"bvec"                  # string offset=2014
.Linfo_string273:
	.asciz	"bblock"                # string offset=2019
.Linfo_string274:
	.asciz	"cblock"                # string offset=2026
.Linfo_string275:
	.asciz	"jsize"                 # string offset=2033
.Linfo_string276:
	.asciz	"ksize"                 # string offset=2039
.Linfo_string277:
	.asciz	"xcrref"                # string offset=2045
.Linfo_string278:
	.asciz	"xceref"                # string offset=2052
.Linfo_string279:
	.asciz	"xcrdif"                # string offset=2059
.Linfo_string280:
	.asciz	"xcedif"                # string offset=2066
.Linfo_string281:
	.asciz	"xce"                   # string offset=2073
.Linfo_string282:
	.asciz	"xcr"                   # string offset=2077
.Linfo_string283:
	.asciz	"no_time_steps"         # string offset=2081
.Linfo_string284:
	.asciz	"epsilon"               # string offset=2095
.Linfo_string285:
	.asciz	"dtref"                 # string offset=2103
.Linfo_string286:
	.asciz	"u_exact"               # string offset=2109
.Linfo_string287:
	.asciz	"rms"                   # string offset=2117
.Linfo_string288:
	.asciz	"d"                     # string offset=2121
.Linfo_string289:
	.asciz	"name"                  # string offset=2123
.Linfo_string290:
	.asciz	"class"                 # string offset=2128
.Linfo_string291:
	.asciz	"n1"                    # string offset=2134
.Linfo_string292:
	.asciz	"n2"                    # string offset=2137
.Linfo_string293:
	.asciz	"mops"                  # string offset=2140
.Linfo_string294:
	.asciz	"optype"                # string offset=2145
.Linfo_string295:
	.asciz	"cs7"                   # string offset=2152
.Linfo_string296:
	.asciz	"cs6"                   # string offset=2156
.Linfo_string297:
	.asciz	"cs5"                   # string offset=2160
.Linfo_string298:
	.asciz	"cs4"                   # string offset=2164
.Linfo_string299:
	.asciz	"cs3"                   # string offset=2168
.Linfo_string300:
	.asciz	"npbversion"            # string offset=2172
.Linfo_string301:
	.asciz	"compiletime"           # string offset=2183
.Linfo_string302:
	.asciz	"cs1"                   # string offset=2195
.Linfo_string303:
	.asciz	"cs2"                   # string offset=2199
.Linfo_string304:
	.asciz	"now"                   # string offset=2203
.Linfo_string305:
	.asciz	"tv"                    # string offset=2207
.Linfo_string306:
	.asciz	"tv_sec"                # string offset=2210
.Linfo_string307:
	.asciz	"__time_t"              # string offset=2217
.Linfo_string308:
	.asciz	"tv_usec"               # string offset=2226
.Linfo_string309:
	.asciz	"__suseconds_t"         # string offset=2234
.Linfo_string310:
	.asciz	"timeval"               # string offset=2248
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp3-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	.Ltmp8-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp9-.Lfunc_begin0
	.quad	.Ltmp10-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp12-.Lfunc_begin0
	.quad	.Ltmp16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp18-.Lfunc_begin0
	.quad	.Ltmp21-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Ltmp15-.Lfunc_begin0
	.quad	.Ltmp16-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp22-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	200                     # 200
	.byte	1                       # DW_OP_stack_value
	.byte	159                     # 
	.quad	.Ltmp22-.Lfunc_begin0
	.quad	.Ltmp24-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp39-.Lfunc_begin0
	.quad	.Ltmp50-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp50-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp56-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp59-.Lfunc_begin0
	.quad	.Ltmp78-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp26-.Lfunc_begin0
	.quad	.Ltmp27-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp29-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp29-.Lfunc_begin0
	.quad	.Ltmp30-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp30-.Lfunc_begin0
	.quad	.Ltmp67-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp67-.Lfunc_begin0
	.quad	.Lfunc_end0-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp38-.Lfunc_begin0
	.quad	.Ltmp42-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp43-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp62-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp40-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp58-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp41-.Lfunc_begin0
	.quad	.Ltmp44-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.quad	.Ltmp57-.Lfunc_begin0
	.quad	.Ltmp66-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp48-.Lfunc_begin0
	.quad	.Ltmp52-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp49-.Lfunc_begin0
	.quad	.Ltmp51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp53-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp69-.Lfunc_begin0
	.quad	.Ltmp70-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp70-.Lfunc_begin0
	.quad	.Ltmp71-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp71-.Lfunc_begin0
	.quad	.Ltmp73-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp73-.Lfunc_begin0
	.quad	.Ltmp74-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp74-.Lfunc_begin0
	.quad	.Ltmp76-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	248                     # 120
	.byte	0                       # 
	.quad	.Ltmp76-.Lfunc_begin0
	.quad	.Ltmp77-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp77-.Lfunc_begin0
	.quad	.Ltmp78-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp102
	.quad	.Ltmp165
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp165
	.quad	.Ltmp166
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp166
	.quad	.Ltmp183
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp183
	.quad	.Ltmp186
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp198
	.quad	.Ltmp199
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp199
	.quad	.Ltmp216
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp216
	.quad	.Ltmp217
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp117
	.quad	.Ltmp162
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp162
	.quad	.Ltmp164
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp171
	.quad	.Ltmp180
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp180
	.quad	.Ltmp182
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp231
	.quad	.Ltmp232
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp232
	.quad	.Ltmp249
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp249
	.quad	.Ltmp250
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp119
	.quad	.Ltmp122
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp155
	.quad	.Ltmp156
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp156
	.quad	.Ltmp157
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp173
	.quad	.Ltmp174
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp174
	.quad	.Ltmp175
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp188
	.quad	.Ltmp189
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp189
	.quad	.Ltmp190
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp206
	.quad	.Ltmp207
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp207
	.quad	.Ltmp208
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp122
	.quad	.Ltmp195
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp195
	.quad	.Ltmp197
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp204
	.quad	.Ltmp213
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp213
	.quad	.Ltmp215
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp219
	.quad	.Ltmp228
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp228
	.quad	.Ltmp230
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp237
	.quad	.Ltmp246
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp246
	.quad	.Ltmp248
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp124
	.quad	.Ltmp125
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp125
	.quad	.Ltmp126
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp158
	.quad	.Ltmp160
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp176
	.quad	.Ltmp178
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp221
	.quad	.Ltmp222
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp222
	.quad	.Ltmp223
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp239
	.quad	.Ltmp240
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp240
	.quad	.Ltmp241
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp133
	.quad	.Ltmp134
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp134
	.quad	.Ltmp135
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp142
	.quad	.Ltmp143
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp143
	.quad	.Ltmp144
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	.Ltmp191
	.quad	.Ltmp193
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp209
	.quad	.Ltmp211
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp224
	.quad	.Ltmp226
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp242
	.quad	.Ltmp244
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Lfunc_begin3-.Lfunc_begin3
	.quad	.Ltmp252-.Lfunc_begin3
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp270-.Lfunc_begin4
	.quad	.Ltmp282-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp282-.Lfunc_begin4
	.quad	.Ltmp283-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp380-.Lfunc_begin4
	.quad	.Ltmp400-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp400-.Lfunc_begin4
	.quad	.Ltmp401-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp401-.Lfunc_begin4
	.quad	.Ltmp402-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp402-.Lfunc_begin4
	.quad	.Ltmp403-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp403-.Lfunc_begin4
	.quad	.Ltmp404-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp404-.Lfunc_begin4
	.quad	.Ltmp405-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp405-.Lfunc_begin4
	.quad	.Ltmp406-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp406-.Lfunc_begin4
	.quad	.Ltmp407-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp407-.Lfunc_begin4
	.quad	.Lfunc_end4-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp285-.Lfunc_begin4
	.quad	.Ltmp334-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp334-.Lfunc_begin4
	.quad	.Ltmp353-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp353-.Lfunc_begin4
	.quad	.Ltmp354-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp354-.Lfunc_begin4
	.quad	.Ltmp355-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp355-.Lfunc_begin4
	.quad	.Ltmp356-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp356-.Lfunc_begin4
	.quad	.Ltmp357-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp357-.Lfunc_begin4
	.quad	.Ltmp358-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp358-.Lfunc_begin4
	.quad	.Ltmp359-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp359-.Lfunc_begin4
	.quad	.Ltmp360-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp360-.Lfunc_begin4
	.quad	.Lfunc_end4-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp287-.Lfunc_begin4
	.quad	.Ltmp288-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp333-.Lfunc_begin4
	.quad	.Ltmp334-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp385-.Lfunc_begin4
	.quad	.Ltmp387-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp288-.Lfunc_begin4
	.quad	.Ltmp307-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp307-.Lfunc_begin4
	.quad	.Ltmp308-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp308-.Lfunc_begin4
	.quad	.Ltmp309-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp309-.Lfunc_begin4
	.quad	.Ltmp310-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp310-.Lfunc_begin4
	.quad	.Ltmp311-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp311-.Lfunc_begin4
	.quad	.Ltmp312-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp312-.Lfunc_begin4
	.quad	.Ltmp313-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp313-.Lfunc_begin4
	.quad	.Ltmp314-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp314-.Lfunc_begin4
	.quad	.Lfunc_end4-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp290-.Lfunc_begin4
	.quad	.Ltmp291-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp291-.Lfunc_begin4
	.quad	.Ltmp292-.Lfunc_begin4
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp339-.Lfunc_begin4
	.quad	.Ltmp341-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp379-.Lfunc_begin4
	.quad	.Ltmp380-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp293-.Lfunc_begin4
	.quad	.Ltmp295-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp336-.Lfunc_begin4
	.quad	.Ltmp337-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp337-.Lfunc_begin4
	.quad	.Ltmp338-.Lfunc_begin4
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp382-.Lfunc_begin4
	.quad	.Ltmp383-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp383-.Lfunc_begin4
	.quad	.Ltmp384-.Lfunc_begin4
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp294-.Lfunc_begin4
	.quad	.Ltmp298-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp298-.Lfunc_begin4
	.quad	.Ltmp316-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp316-.Lfunc_begin4
	.quad	.Ltmp343-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp343-.Lfunc_begin4
	.quad	.Ltmp362-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp362-.Lfunc_begin4
	.quad	.Ltmp389-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp389-.Lfunc_begin4
	.quad	.Ltmp409-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp409-.Lfunc_begin4
	.quad	.Lfunc_end4-.Lfunc_begin4
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp298-.Lfunc_begin4
	.quad	.Ltmp299-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp343-.Lfunc_begin4
	.quad	.Ltmp344-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp389-.Lfunc_begin4
	.quad	.Ltmp390-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp464-.Lfunc_begin6
	.quad	.Ltmp466-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp477-.Lfunc_begin6
	.quad	.Ltmp478-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp629-.Lfunc_begin6
	.quad	.Ltmp631-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp638-.Lfunc_begin6
	.quad	.Ltmp639-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp483-.Lfunc_begin6
	.quad	.Ltmp484-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp487-.Lfunc_begin6
	.quad	.Ltmp492-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp582-.Lfunc_begin6
	.quad	.Lfunc_end6-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp494-.Lfunc_begin6
	.quad	.Ltmp497-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	.Ltmp497-.Lfunc_begin6
	.quad	.Ltmp501-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp495-.Lfunc_begin6
	.quad	.Ltmp498-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp496-.Lfunc_begin6
	.quad	.Ltmp499-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp534-.Lfunc_begin6
	.quad	.Ltmp557-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp625-.Lfunc_begin6
	.quad	.Lfunc_end6-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp562-.Lfunc_begin6
	.quad	.Ltmp568-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp563-.Lfunc_begin6
	.quad	.Ltmp565-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	107                     # DW_OP_reg27
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp564-.Lfunc_begin6
	.quad	.Ltmp566-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp596-.Lfunc_begin6
	.quad	.Ltmp602-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	111                     # DW_OP_reg31
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp597-.Lfunc_begin6
	.quad	.Ltmp599-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp598-.Lfunc_begin6
	.quad	.Ltmp600-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	108                     # DW_OP_reg28
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp675-.Lfunc_begin7
	.quad	.Ltmp677-.Lfunc_begin7
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp678-.Lfunc_begin7
	.quad	.Ltmp683-.Lfunc_begin7
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp676-.Lfunc_begin7
	.quad	.Ltmp683-.Lfunc_begin7
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp689-.Lfunc_begin7
	.quad	.Lfunc_end7-.Lfunc_begin7
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Lfunc_begin8
	.quad	.Ltmp711
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Lfunc_begin8
	.quad	.Ltmp711
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp716-.Lfunc_begin9
	.quad	.Ltmp717-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp726-.Lfunc_begin9
	.quad	.Ltmp727-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp736-.Lfunc_begin9
	.quad	.Ltmp737-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp746-.Lfunc_begin9
	.quad	.Ltmp747-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp756-.Lfunc_begin9
	.quad	.Ltmp757-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp718-.Lfunc_begin9
	.quad	.Ltmp719-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp720-.Lfunc_begin9
	.quad	.Ltmp721-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp722-.Lfunc_begin9
	.quad	.Ltmp723-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp724-.Lfunc_begin9
	.quad	.Ltmp725-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp728-.Lfunc_begin9
	.quad	.Ltmp729-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp730-.Lfunc_begin9
	.quad	.Ltmp731-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp732-.Lfunc_begin9
	.quad	.Ltmp733-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp734-.Lfunc_begin9
	.quad	.Ltmp735-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp738-.Lfunc_begin9
	.quad	.Ltmp739-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp740-.Lfunc_begin9
	.quad	.Ltmp741-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp742-.Lfunc_begin9
	.quad	.Ltmp743-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp744-.Lfunc_begin9
	.quad	.Ltmp745-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp748-.Lfunc_begin9
	.quad	.Ltmp749-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp750-.Lfunc_begin9
	.quad	.Ltmp751-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp752-.Lfunc_begin9
	.quad	.Ltmp753-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp754-.Lfunc_begin9
	.quad	.Ltmp755-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp758-.Lfunc_begin9
	.quad	.Ltmp759-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp760-.Lfunc_begin9
	.quad	.Ltmp761-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp762-.Lfunc_begin9
	.quad	.Ltmp763-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp764-.Lfunc_begin9
	.quad	.Ltmp765-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp769-.Lfunc_begin9
	.quad	.Ltmp770-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp779-.Lfunc_begin9
	.quad	.Ltmp780-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp789-.Lfunc_begin9
	.quad	.Ltmp790-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp799-.Lfunc_begin9
	.quad	.Ltmp800-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp809-.Lfunc_begin9
	.quad	.Ltmp810-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp771-.Lfunc_begin9
	.quad	.Ltmp772-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp773-.Lfunc_begin9
	.quad	.Ltmp774-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp775-.Lfunc_begin9
	.quad	.Ltmp776-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp777-.Lfunc_begin9
	.quad	.Ltmp778-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp781-.Lfunc_begin9
	.quad	.Ltmp782-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp783-.Lfunc_begin9
	.quad	.Ltmp784-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp785-.Lfunc_begin9
	.quad	.Ltmp786-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp787-.Lfunc_begin9
	.quad	.Ltmp788-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp791-.Lfunc_begin9
	.quad	.Ltmp792-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp793-.Lfunc_begin9
	.quad	.Ltmp794-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp795-.Lfunc_begin9
	.quad	.Ltmp796-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp797-.Lfunc_begin9
	.quad	.Ltmp798-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp801-.Lfunc_begin9
	.quad	.Ltmp802-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp803-.Lfunc_begin9
	.quad	.Ltmp804-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp805-.Lfunc_begin9
	.quad	.Ltmp806-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp807-.Lfunc_begin9
	.quad	.Ltmp808-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp829-.Lfunc_begin13
	.quad	.Ltmp831-.Lfunc_begin13
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp832-.Lfunc_begin13
	.quad	.Ltmp836-.Lfunc_begin13
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp830-.Lfunc_begin13
	.quad	.Ltmp836-.Lfunc_begin13
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp842-.Lfunc_begin13
	.quad	.Lfunc_end13-.Lfunc_begin13
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp879-.Lfunc_begin14
	.quad	.Ltmp881-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp882-.Lfunc_begin14
	.quad	.Ltmp887-.Lfunc_begin14
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp880-.Lfunc_begin14
	.quad	.Ltmp887-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp893-.Lfunc_begin14
	.quad	.Lfunc_end14-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Lfunc_begin16-.Lfunc_begin16
	.quad	.Ltmp937-.Lfunc_begin16
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp937-.Lfunc_begin16
	.quad	.Ltmp1000-.Lfunc_begin16
	.short	3                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Lfunc_begin16-.Lfunc_begin16
	.quad	.Ltmp936-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp936-.Lfunc_begin16
	.quad	.Ltmp1000-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Lfunc_begin16-.Lfunc_begin16
	.quad	.Ltmp935-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp935-.Lfunc_begin16
	.quad	.Ltmp1000-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1044-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1044-.Lfunc_begin17
	.quad	.Ltmp1047-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1063-.Lfunc_begin17
	.quad	.Ltmp1064-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp1049-.Lfunc_begin17
	.quad	.Ltmp1050-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp1052-.Lfunc_begin17
	.quad	.Ltmp1053-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1053-.Lfunc_begin17
	.quad	.Ltmp1054-.Lfunc_begin17
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp1055-.Lfunc_begin17
	.quad	.Ltmp1057-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp1058-.Lfunc_begin17
	.quad	.Ltmp1059-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Lfunc_begin18-.Lfunc_begin17
	.quad	.Ltmp1081-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1081-.Lfunc_begin17
	.quad	.Ltmp1087-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp1089-.Lfunc_begin17
	.quad	.Ltmp1090-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1126-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1126-.Lfunc_begin19
	.quad	.Ltmp1145-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1125-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1125-.Lfunc_begin19
	.quad	.Ltmp1128-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1128-.Lfunc_begin19
	.quad	.Ltmp1131-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1132-.Lfunc_begin19
	.quad	.Ltmp1135-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1139-.Lfunc_begin19
	.quad	.Ltmp1140-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1124-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1124-.Lfunc_begin19
	.quad	.Ltmp1144-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1123-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1123-.Lfunc_begin19
	.quad	.Ltmp1143-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1122-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1122-.Lfunc_begin19
	.quad	.Ltmp1142-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1121-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1121-.Lfunc_begin19
	.quad	.Ltmp1151-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1120-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1120-.Lfunc_begin19
	.quad	.Ltmp1127-.Lfunc_begin19
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1119-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp1119-.Lfunc_begin19
	.quad	.Ltmp1127-.Lfunc_begin19
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp1136-.Lfunc_begin19
	.quad	.Ltmp1138-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	14                      # 14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1138-.Lfunc_begin19
	.quad	.Lfunc_end19-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1154-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1155-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1156-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1157-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Lfunc_begin19-.Lfunc_begin19
	.quad	.Ltmp1153-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Lfunc_begin21-.Lfunc_begin20
	.quad	.Ltmp1163-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1163-.Lfunc_begin20
	.quad	.Ltmp1166-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Lfunc_begin22-.Lfunc_begin20
	.quad	.Ltmp1171-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1171-.Lfunc_begin20
	.quad	.Ltmp1176-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Ltmp1172-.Lfunc_begin20
	.quad	.Ltmp1173-.Lfunc_begin20
	.short	2                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.quad	.Ltmp1173-.Lfunc_begin20
	.quad	.Ltmp1174-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp1173-.Lfunc_begin20
	.quad	.Ltmp1174-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp1174-.Lfunc_begin20
	.quad	.Ltmp1175-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin24-.Lfunc_begin24
	.quad	.Ltmp1182-.Lfunc_begin24
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1182-.Lfunc_begin24
	.quad	.Ltmp1189-.Lfunc_begin24
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp1183-.Lfunc_begin24
	.quad	.Lfunc_end24-.Lfunc_begin24
	.short	2                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
.Lsection_abbrev:
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	4                       # DW_TAG_enumeration_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	40                      # DW_TAG_enumerator
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	10                      # DW_FORM_block1
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	44                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	45                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	46                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	47                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	48                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	49                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
	.section	.debug_info,"",@progbits
.Lsection_info:
.Lcu_begin0:
	.long	3577                    # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xdf2 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
	.byte	2                       # Abbrev [2] 0x2a:0x15 DW_TAG_variable
	.long	.Linfo_string3          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	elapsed_time
	.byte	3                       # Abbrev [3] 0x3f:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0x46:0x15 DW_TAG_variable
	.long	.Linfo_string5          # DW_AT_name
	.long	91                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	grid_points
	.byte	4                       # Abbrev [4] 0x5b:0xc DW_TAG_array_type
	.long	103                     # DW_AT_type
	.byte	5                       # Abbrev [5] 0x60:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0x67:0x7 DW_TAG_base_type
	.long	.Linfo_string6          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	6                       # Abbrev [6] 0x6e:0x7 DW_TAG_base_type
	.long	.Linfo_string7          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	2                       # Abbrev [2] 0x75:0x15 DW_TAG_variable
	.long	.Linfo_string8          # DW_AT_name
	.long	138                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	timeron
	.byte	7                       # Abbrev [7] 0x8a:0xb DW_TAG_typedef
	.long	149                     # DW_AT_type
	.long	.Linfo_string11         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0x95:0x11 DW_TAG_enumeration_type
	.byte	4                       # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0x99:0x6 DW_TAG_enumerator
	.long	.Linfo_string9          # DW_AT_name
	.byte	0                       # DW_AT_const_value
	.byte	9                       # Abbrev [9] 0x9f:0x6 DW_TAG_enumerator
	.long	.Linfo_string10         # DW_AT_name
	.byte	1                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0xa6:0x15 DW_TAG_variable
	.long	.Linfo_string12         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx1
	.byte	2                       # Abbrev [2] 0xbb:0x15 DW_TAG_variable
	.long	.Linfo_string13         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx2
	.byte	2                       # Abbrev [2] 0xd0:0x15 DW_TAG_variable
	.long	.Linfo_string14         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx3
	.byte	2                       # Abbrev [2] 0xe5:0x15 DW_TAG_variable
	.long	.Linfo_string15         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty1
	.byte	2                       # Abbrev [2] 0xfa:0x15 DW_TAG_variable
	.long	.Linfo_string16         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty2
	.byte	2                       # Abbrev [2] 0x10f:0x15 DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty3
	.byte	2                       # Abbrev [2] 0x124:0x15 DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz1
	.byte	2                       # Abbrev [2] 0x139:0x15 DW_TAG_variable
	.long	.Linfo_string19         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz2
	.byte	2                       # Abbrev [2] 0x14e:0x15 DW_TAG_variable
	.long	.Linfo_string20         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz3
	.byte	2                       # Abbrev [2] 0x163:0x15 DW_TAG_variable
	.long	.Linfo_string21         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx1
	.byte	2                       # Abbrev [2] 0x178:0x15 DW_TAG_variable
	.long	.Linfo_string22         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx2
	.byte	2                       # Abbrev [2] 0x18d:0x15 DW_TAG_variable
	.long	.Linfo_string23         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx3
	.byte	2                       # Abbrev [2] 0x1a2:0x15 DW_TAG_variable
	.long	.Linfo_string24         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx4
	.byte	2                       # Abbrev [2] 0x1b7:0x15 DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx5
	.byte	2                       # Abbrev [2] 0x1cc:0x15 DW_TAG_variable
	.long	.Linfo_string26         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy1
	.byte	2                       # Abbrev [2] 0x1e1:0x15 DW_TAG_variable
	.long	.Linfo_string27         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy2
	.byte	2                       # Abbrev [2] 0x1f6:0x15 DW_TAG_variable
	.long	.Linfo_string28         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy3
	.byte	2                       # Abbrev [2] 0x20b:0x15 DW_TAG_variable
	.long	.Linfo_string29         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy4
	.byte	2                       # Abbrev [2] 0x220:0x15 DW_TAG_variable
	.long	.Linfo_string30         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy5
	.byte	2                       # Abbrev [2] 0x235:0x15 DW_TAG_variable
	.long	.Linfo_string31         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz1
	.byte	2                       # Abbrev [2] 0x24a:0x15 DW_TAG_variable
	.long	.Linfo_string32         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz2
	.byte	2                       # Abbrev [2] 0x25f:0x15 DW_TAG_variable
	.long	.Linfo_string33         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz3
	.byte	2                       # Abbrev [2] 0x274:0x15 DW_TAG_variable
	.long	.Linfo_string34         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz4
	.byte	2                       # Abbrev [2] 0x289:0x15 DW_TAG_variable
	.long	.Linfo_string35         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz5
	.byte	2                       # Abbrev [2] 0x29e:0x15 DW_TAG_variable
	.long	.Linfo_string36         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dssp
	.byte	2                       # Abbrev [2] 0x2b3:0x15 DW_TAG_variable
	.long	.Linfo_string37         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dt
	.byte	2                       # Abbrev [2] 0x2c8:0x15 DW_TAG_variable
	.long	.Linfo_string38         # DW_AT_name
	.long	733                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ce
	.byte	4                       # Abbrev [4] 0x2dd:0x12 DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x2e2:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x2e8:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	13                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x2ef:0x15 DW_TAG_variable
	.long	.Linfo_string39         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dxmax
	.byte	2                       # Abbrev [2] 0x304:0x15 DW_TAG_variable
	.long	.Linfo_string40         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dymax
	.byte	2                       # Abbrev [2] 0x319:0x15 DW_TAG_variable
	.long	.Linfo_string41         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dzmax
	.byte	2                       # Abbrev [2] 0x32e:0x15 DW_TAG_variable
	.long	.Linfo_string42         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon1
	.byte	2                       # Abbrev [2] 0x343:0x15 DW_TAG_variable
	.long	.Linfo_string43         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon2
	.byte	2                       # Abbrev [2] 0x358:0x15 DW_TAG_variable
	.long	.Linfo_string44         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon3
	.byte	2                       # Abbrev [2] 0x36d:0x15 DW_TAG_variable
	.long	.Linfo_string45         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon4
	.byte	2                       # Abbrev [2] 0x382:0x15 DW_TAG_variable
	.long	.Linfo_string46         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon5
	.byte	2                       # Abbrev [2] 0x397:0x15 DW_TAG_variable
	.long	.Linfo_string47         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx1tx1
	.byte	2                       # Abbrev [2] 0x3ac:0x15 DW_TAG_variable
	.long	.Linfo_string48         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx2tx1
	.byte	2                       # Abbrev [2] 0x3c1:0x15 DW_TAG_variable
	.long	.Linfo_string49         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx3tx1
	.byte	2                       # Abbrev [2] 0x3d6:0x15 DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx4tx1
	.byte	2                       # Abbrev [2] 0x3eb:0x15 DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx5tx1
	.byte	2                       # Abbrev [2] 0x400:0x15 DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon1
	.byte	2                       # Abbrev [2] 0x415:0x15 DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon2
	.byte	2                       # Abbrev [2] 0x42a:0x15 DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon3
	.byte	2                       # Abbrev [2] 0x43f:0x15 DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon4
	.byte	2                       # Abbrev [2] 0x454:0x15 DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon5
	.byte	2                       # Abbrev [2] 0x469:0x15 DW_TAG_variable
	.long	.Linfo_string57         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy1ty1
	.byte	2                       # Abbrev [2] 0x47e:0x15 DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy2ty1
	.byte	2                       # Abbrev [2] 0x493:0x15 DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy3ty1
	.byte	2                       # Abbrev [2] 0x4a8:0x15 DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy4ty1
	.byte	2                       # Abbrev [2] 0x4bd:0x15 DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy5ty1
	.byte	2                       # Abbrev [2] 0x4d2:0x15 DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon1
	.byte	2                       # Abbrev [2] 0x4e7:0x15 DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon2
	.byte	2                       # Abbrev [2] 0x4fc:0x15 DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon3
	.byte	2                       # Abbrev [2] 0x511:0x15 DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon4
	.byte	2                       # Abbrev [2] 0x526:0x15 DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon5
	.byte	2                       # Abbrev [2] 0x53b:0x15 DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz1tz1
	.byte	2                       # Abbrev [2] 0x550:0x15 DW_TAG_variable
	.long	.Linfo_string68         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz2tz1
	.byte	2                       # Abbrev [2] 0x565:0x15 DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz3tz1
	.byte	2                       # Abbrev [2] 0x57a:0x15 DW_TAG_variable
	.long	.Linfo_string70         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz4tz1
	.byte	2                       # Abbrev [2] 0x58f:0x15 DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz5tz1
	.byte	2                       # Abbrev [2] 0x5a4:0x15 DW_TAG_variable
	.long	.Linfo_string72         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dnxm1
	.byte	2                       # Abbrev [2] 0x5b9:0x15 DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dnym1
	.byte	2                       # Abbrev [2] 0x5ce:0x15 DW_TAG_variable
	.long	.Linfo_string74         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dnzm1
	.byte	2                       # Abbrev [2] 0x5e3:0x15 DW_TAG_variable
	.long	.Linfo_string75         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1c2
	.byte	2                       # Abbrev [2] 0x5f8:0x15 DW_TAG_variable
	.long	.Linfo_string76         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1c5
	.byte	2                       # Abbrev [2] 0x60d:0x15 DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4
	.byte	2                       # Abbrev [2] 0x622:0x15 DW_TAG_variable
	.long	.Linfo_string78         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1345
	.byte	2                       # Abbrev [2] 0x637:0x15 DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	conz1
	.byte	2                       # Abbrev [2] 0x64c:0x15 DW_TAG_variable
	.long	.Linfo_string80         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1
	.byte	2                       # Abbrev [2] 0x661:0x15 DW_TAG_variable
	.long	.Linfo_string81         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2
	.byte	2                       # Abbrev [2] 0x676:0x15 DW_TAG_variable
	.long	.Linfo_string82         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3
	.byte	2                       # Abbrev [2] 0x68b:0x15 DW_TAG_variable
	.long	.Linfo_string83         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c4
	.byte	2                       # Abbrev [2] 0x6a0:0x15 DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c5
	.byte	2                       # Abbrev [2] 0x6b5:0x15 DW_TAG_variable
	.long	.Linfo_string85         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c4dssp
	.byte	2                       # Abbrev [2] 0x6ca:0x15 DW_TAG_variable
	.long	.Linfo_string86         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c5dssp
	.byte	2                       # Abbrev [2] 0x6df:0x15 DW_TAG_variable
	.long	.Linfo_string87         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dtdssp
	.byte	2                       # Abbrev [2] 0x6f4:0x15 DW_TAG_variable
	.long	.Linfo_string88         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttx1
	.byte	2                       # Abbrev [2] 0x709:0x15 DW_TAG_variable
	.long	.Linfo_string89         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttx2
	.byte	2                       # Abbrev [2] 0x71e:0x15 DW_TAG_variable
	.long	.Linfo_string90         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dtty1
	.byte	2                       # Abbrev [2] 0x733:0x15 DW_TAG_variable
	.long	.Linfo_string91         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dtty2
	.byte	2                       # Abbrev [2] 0x748:0x15 DW_TAG_variable
	.long	.Linfo_string92         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttz1
	.byte	2                       # Abbrev [2] 0x75d:0x15 DW_TAG_variable
	.long	.Linfo_string93         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttz2
	.byte	2                       # Abbrev [2] 0x772:0x15 DW_TAG_variable
	.long	.Linfo_string94         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2dttx1
	.byte	2                       # Abbrev [2] 0x787:0x15 DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2dtty1
	.byte	2                       # Abbrev [2] 0x79c:0x15 DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2dttz1
	.byte	2                       # Abbrev [2] 0x7b1:0x15 DW_TAG_variable
	.long	.Linfo_string97         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz1
	.byte	2                       # Abbrev [2] 0x7c6:0x15 DW_TAG_variable
	.long	.Linfo_string98         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz4
	.byte	2                       # Abbrev [2] 0x7db:0x15 DW_TAG_variable
	.long	.Linfo_string99         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz5
	.byte	2                       # Abbrev [2] 0x7f0:0x15 DW_TAG_variable
	.long	.Linfo_string100        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz6
	.byte	2                       # Abbrev [2] 0x805:0x15 DW_TAG_variable
	.long	.Linfo_string101        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4tx3
	.byte	2                       # Abbrev [2] 0x81a:0x15 DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4ty3
	.byte	2                       # Abbrev [2] 0x82f:0x15 DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4tz3
	.byte	2                       # Abbrev [2] 0x844:0x15 DW_TAG_variable
	.long	.Linfo_string104        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2iv
	.byte	2                       # Abbrev [2] 0x859:0x15 DW_TAG_variable
	.long	.Linfo_string105        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	con43
	.byte	2                       # Abbrev [2] 0x86e:0x15 DW_TAG_variable
	.long	.Linfo_string106        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	con16
	.byte	2                       # Abbrev [2] 0x883:0x15 DW_TAG_variable
	.long	.Linfo_string107        # DW_AT_name
	.long	2200                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	69                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	us
	.byte	4                       # Abbrev [4] 0x898:0x18 DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x89d:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x8a3:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x8a9:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x8b0:0x15 DW_TAG_variable
	.long	.Linfo_string108        # DW_AT_name
	.long	2200                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	70                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	vs
	.byte	2                       # Abbrev [2] 0x8c5:0x15 DW_TAG_variable
	.long	.Linfo_string109        # DW_AT_name
	.long	2200                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	71                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ws
	.byte	2                       # Abbrev [2] 0x8da:0x15 DW_TAG_variable
	.long	.Linfo_string110        # DW_AT_name
	.long	2200                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	qs
	.byte	2                       # Abbrev [2] 0x8ef:0x15 DW_TAG_variable
	.long	.Linfo_string111        # DW_AT_name
	.long	2200                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	73                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rho_i
	.byte	2                       # Abbrev [2] 0x904:0x15 DW_TAG_variable
	.long	.Linfo_string112        # DW_AT_name
	.long	2200                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	square
	.byte	2                       # Abbrev [2] 0x919:0x15 DW_TAG_variable
	.long	.Linfo_string113        # DW_AT_name
	.long	2350                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	forcing
	.byte	4                       # Abbrev [4] 0x92e:0x1e DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x933:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x939:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x93f:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x945:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x94c:0x15 DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.long	2350                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	u
	.byte	2                       # Abbrev [2] 0x961:0x15 DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.long	2350                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rhs
	.byte	2                       # Abbrev [2] 0x976:0x15 DW_TAG_variable
	.long	.Linfo_string116        # DW_AT_name
	.long	2443                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	cuf
	.byte	4                       # Abbrev [4] 0x98b:0xc DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x990:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x997:0x15 DW_TAG_variable
	.long	.Linfo_string117        # DW_AT_name
	.long	2443                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	q
	.byte	2                       # Abbrev [2] 0x9ac:0x15 DW_TAG_variable
	.long	.Linfo_string118        # DW_AT_name
	.long	2497                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	82                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ue
	.byte	4                       # Abbrev [4] 0x9c1:0x12 DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x9c6:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x9cc:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x9d3:0x15 DW_TAG_variable
	.long	.Linfo_string119        # DW_AT_name
	.long	2497                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	buf
	.byte	2                       # Abbrev [2] 0x9e8:0x15 DW_TAG_variable
	.long	.Linfo_string120        # DW_AT_name
	.long	2557                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	fjac
	.byte	4                       # Abbrev [4] 0x9fd:0x18 DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0xa02:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0xa08:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0xa0e:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0xa15:0x15 DW_TAG_variable
	.long	.Linfo_string121        # DW_AT_name
	.long	2557                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	njac
	.byte	2                       # Abbrev [2] 0xa2a:0x15 DW_TAG_variable
	.long	.Linfo_string122        # DW_AT_name
	.long	2623                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	lhs
	.byte	4                       # Abbrev [4] 0xa3f:0x1e DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0xa44:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0xa4a:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0xa50:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0xa56:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0xa5d:0x15 DW_TAG_variable
	.long	.Linfo_string123        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	89                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tmp1
	.byte	2                       # Abbrev [2] 0xa72:0x15 DW_TAG_variable
	.long	.Linfo_string124        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	89                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tmp2
	.byte	2                       # Abbrev [2] 0xa87:0x15 DW_TAG_variable
	.long	.Linfo_string125        # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	89                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tmp3
	.byte	10                      # Abbrev [10] 0xa9c:0x1 DW_TAG_pointer_type
	.byte	11                      # Abbrev [11] 0xa9d:0x112 DW_TAG_subprogram
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string147        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	103                     # DW_AT_type
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	12                      # Abbrev [12] 0xab6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc0            # DW_AT_location
	.long	.Linfo_string175        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
	.long	103                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0xac5:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc1            # DW_AT_location
	.long	.Linfo_string176        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
	.long	3027                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0xad4:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\001"
	.long	.Linfo_string172        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	97                      # DW_AT_decl_line
	.long	2991                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0xae3:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\002"
	.long	.Linfo_string173        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	3003                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0xaf2:0xf DW_TAG_variable
	.long	.Ldebug_loc2            # DW_AT_location
	.long	.Linfo_string177        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
	.long	3032                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb01:0xf DW_TAG_variable
	.long	.Ldebug_loc3            # DW_AT_location
	.long	.Linfo_string221        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	103                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb10:0xf DW_TAG_variable
	.long	.Ldebug_loc4            # DW_AT_location
	.long	.Linfo_string223        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	103                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0xb1f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string224        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	103                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb2b:0xf DW_TAG_variable
	.long	.Ldebug_loc5            # DW_AT_location
	.long	.Linfo_string225        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	97                      # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb3a:0xf DW_TAG_variable
	.long	.Ldebug_loc6            # DW_AT_location
	.long	.Linfo_string226        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	99                      # DW_AT_decl_line
	.long	3020                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb49:0xf DW_TAG_variable
	.long	.Ldebug_loc7            # DW_AT_location
	.long	.Linfo_string227        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	138                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb58:0xf DW_TAG_variable
	.long	.Ldebug_loc8            # DW_AT_location
	.long	.Linfo_string228        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb67:0xf DW_TAG_variable
	.long	.Ldebug_loc9            # DW_AT_location
	.long	.Linfo_string229        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb76:0xf DW_TAG_variable
	.long	.Ldebug_loc10           # DW_AT_location
	.long	.Linfo_string230        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb85:0xf DW_TAG_variable
	.long	.Ldebug_loc11           # DW_AT_location
	.long	.Linfo_string146        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	97                      # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0xb94:0x1a DW_TAG_lexical_block
	.quad	.Ltmp14                 # DW_AT_low_pc
	.long	.Ltmp17-.Ltmp14         # DW_AT_high_pc
	.byte	15                      # Abbrev [15] 0xba1:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string222        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	128                     # DW_AT_decl_line
	.long	103                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0xbaf:0xc DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0xbb4:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	12                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0xbbb:0xc DW_TAG_array_type
	.long	3015                    # DW_AT_type
	.byte	5                       # Abbrev [5] 0xbc0:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	12                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xbc7:0x5 DW_TAG_pointer_type
	.long	3020                    # DW_AT_type
	.byte	3                       # Abbrev [3] 0xbcc:0x7 DW_TAG_base_type
	.long	.Linfo_string174        # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	17                      # Abbrev [17] 0xbd3:0x5 DW_TAG_pointer_type
	.long	3015                    # DW_AT_type
	.byte	17                      # Abbrev [17] 0xbd8:0x5 DW_TAG_pointer_type
	.long	3037                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0xbdd:0xb DW_TAG_typedef
	.long	3048                    # DW_AT_type
	.long	.Linfo_string220        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0xbe8:0x17c DW_TAG_structure_type
	.long	.Linfo_string219        # DW_AT_name
	.byte	216                     # DW_AT_byte_size
	.byte	20                      # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0xbf0:0xc DW_TAG_member
	.long	.Linfo_string178        # DW_AT_name
	.long	103                     # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xbfc:0xc DW_TAG_member
	.long	.Linfo_string179        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	251                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc08:0xc DW_TAG_member
	.long	.Linfo_string180        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	252                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc14:0xc DW_TAG_member
	.long	.Linfo_string181        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc20:0xc DW_TAG_member
	.long	.Linfo_string182        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	254                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc2c:0xc DW_TAG_member
	.long	.Linfo_string183        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	255                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc38:0xd DW_TAG_member
	.long	.Linfo_string184        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc45:0xd DW_TAG_member
	.long	.Linfo_string185        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	257                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc52:0xd DW_TAG_member
	.long	.Linfo_string186        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	258                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc5f:0xd DW_TAG_member
	.long	.Linfo_string187        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc6c:0xd DW_TAG_member
	.long	.Linfo_string188        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	80                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc79:0xd DW_TAG_member
	.long	.Linfo_string189        # DW_AT_name
	.long	3015                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	262                     # DW_AT_decl_line
	.byte	88                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc86:0xd DW_TAG_member
	.long	.Linfo_string190        # DW_AT_name
	.long	3428                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	96                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc93:0xd DW_TAG_member
	.long	.Linfo_string195        # DW_AT_name
	.long	3478                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.byte	104                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xca0:0xd DW_TAG_member
	.long	.Linfo_string196        # DW_AT_name
	.long	103                     # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	268                     # DW_AT_decl_line
	.byte	112                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcad:0xd DW_TAG_member
	.long	.Linfo_string197        # DW_AT_name
	.long	103                     # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.byte	116                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcba:0xd DW_TAG_member
	.long	.Linfo_string198        # DW_AT_name
	.long	3483                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	274                     # DW_AT_decl_line
	.byte	120                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcc7:0xd DW_TAG_member
	.long	.Linfo_string201        # DW_AT_name
	.long	3501                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	278                     # DW_AT_decl_line
	.byte	128                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcd4:0xd DW_TAG_member
	.long	.Linfo_string203        # DW_AT_name
	.long	3508                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	279                     # DW_AT_decl_line
	.byte	130                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xce1:0xd DW_TAG_member
	.long	.Linfo_string205        # DW_AT_name
	.long	3515                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	280                     # DW_AT_decl_line
	.byte	131                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcee:0xd DW_TAG_member
	.long	.Linfo_string206        # DW_AT_name
	.long	3527                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	136                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcfb:0xd DW_TAG_member
	.long	.Linfo_string208        # DW_AT_name
	.long	3539                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	293                     # DW_AT_decl_line
	.byte	144                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd08:0xd DW_TAG_member
	.long	.Linfo_string210        # DW_AT_name
	.long	2716                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	302                     # DW_AT_decl_line
	.byte	152                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd15:0xd DW_TAG_member
	.long	.Linfo_string211        # DW_AT_name
	.long	2716                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	303                     # DW_AT_decl_line
	.byte	160                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd22:0xd DW_TAG_member
	.long	.Linfo_string212        # DW_AT_name
	.long	2716                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	304                     # DW_AT_decl_line
	.byte	168                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd2f:0xd DW_TAG_member
	.long	.Linfo_string213        # DW_AT_name
	.long	2716                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	305                     # DW_AT_decl_line
	.byte	176                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd3c:0xd DW_TAG_member
	.long	.Linfo_string214        # DW_AT_name
	.long	3550                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	306                     # DW_AT_decl_line
	.byte	184                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd49:0xd DW_TAG_member
	.long	.Linfo_string217        # DW_AT_name
	.long	103                     # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	308                     # DW_AT_decl_line
	.byte	192                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd56:0xd DW_TAG_member
	.long	.Linfo_string218        # DW_AT_name
	.long	3568                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.short	310                     # DW_AT_decl_line
	.byte	196                     # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xd64:0x5 DW_TAG_pointer_type
	.long	3433                    # DW_AT_type
	.byte	18                      # Abbrev [18] 0xd69:0x2d DW_TAG_structure_type
	.long	.Linfo_string194        # DW_AT_name
	.byte	24                      # DW_AT_byte_size
	.byte	20                      # DW_AT_decl_file
	.byte	160                     # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0xd71:0xc DW_TAG_member
	.long	.Linfo_string191        # DW_AT_name
	.long	3428                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	161                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xd7d:0xc DW_TAG_member
	.long	.Linfo_string192        # DW_AT_name
	.long	3478                    # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	162                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xd89:0xc DW_TAG_member
	.long	.Linfo_string193        # DW_AT_name
	.long	103                     # DW_AT_type
	.byte	20                      # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xd96:0x5 DW_TAG_pointer_type
	.long	3048                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0xd9b:0xb DW_TAG_typedef
	.long	3494                    # DW_AT_type
	.long	.Linfo_string200        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	131                     # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0xda6:0x7 DW_TAG_base_type
	.long	.Linfo_string199        # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0xdad:0x7 DW_TAG_base_type
	.long	.Linfo_string202        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	2                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0xdb4:0x7 DW_TAG_base_type
	.long	.Linfo_string204        # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	4                       # Abbrev [4] 0xdbb:0xc DW_TAG_array_type
	.long	3020                    # DW_AT_type
	.byte	5                       # Abbrev [5] 0xdc0:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	1                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xdc7:0x5 DW_TAG_pointer_type
	.long	3532                    # DW_AT_type
	.byte	21                      # Abbrev [21] 0xdcc:0x7 DW_TAG_typedef
	.long	.Linfo_string207        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	154                     # DW_AT_decl_line
	.byte	7                       # Abbrev [7] 0xdd3:0xb DW_TAG_typedef
	.long	3494                    # DW_AT_type
	.long	.Linfo_string209        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
	.byte	7                       # Abbrev [7] 0xdde:0xb DW_TAG_typedef
	.long	3561                    # DW_AT_type
	.long	.Linfo_string216        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0xde9:0x7 DW_TAG_base_type
	.long	.Linfo_string215        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	4                       # Abbrev [4] 0xdf0:0xc DW_TAG_array_type
	.long	3020                    # DW_AT_type
	.byte	5                       # Abbrev [5] 0xdf5:0x6 DW_TAG_subrange_type
	.long	110                     # DW_AT_type
	.byte	20                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin1:
	.long	420                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	22                      # Abbrev [22] 0xb:0x19d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string126        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	0                       # DW_AT_low_pc
	.long	.Ldebug_ranges0         # DW_AT_ranges
	.byte	23                      # Abbrev [23] 0x2a:0xdc DW_TAG_subprogram
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string148        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	13                      # Abbrev [13] 0x3f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\001"
	.long	.Linfo_string231        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	351                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x4e:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string232        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	382                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5c:0xf DW_TAG_variable
	.long	.Ldebug_loc12           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x6b:0xf DW_TAG_variable
	.long	.Ldebug_loc13           # DW_AT_location
	.long	.Linfo_string234        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x7a:0xf DW_TAG_variable
	.long	.Ldebug_loc14           # DW_AT_location
	.long	.Linfo_string235        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x89:0xf DW_TAG_variable
	.long	.Ldebug_loc15           # DW_AT_location
	.long	.Linfo_string223        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x98:0xf DW_TAG_variable
	.long	.Ldebug_loc16           # DW_AT_location
	.long	.Linfo_string236        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	25                      # Abbrev [25] 0xa7:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string237        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xb3:0xf DW_TAG_variable
	.long	.Ldebug_loc17           # DW_AT_location
	.long	.Linfo_string238        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc2:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string239        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xce:0xb DW_TAG_variable
	.long	.Linfo_string240        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xd9:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xe4:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	26                      # Abbrev [26] 0xef:0xb DW_TAG_variable
	.long	.Linfo_string243        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	26                      # Abbrev [26] 0xfa:0xb DW_TAG_variable
	.long	.Linfo_string244        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	27                      # Abbrev [27] 0x106:0x59 DW_TAG_subprogram
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string149        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	28                      # Abbrev [28] 0x11b:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string122        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
	.long	394                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x128:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc42           # DW_AT_location
	.long	.Linfo_string265        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x137:0xf DW_TAG_variable
	.long	.Ldebug_loc43           # DW_AT_location
	.long	.Linfo_string223        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	200                     # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x146:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string264        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	200                     # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x152:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string239        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	200                     # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x15f:0x18 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x164:0x6 DW_TAG_subrange_type
	.long	375                     # DW_AT_type
	.byte	2                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x16a:0x6 DW_TAG_subrange_type
	.long	375                     # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x170:0x6 DW_TAG_subrange_type
	.long	375                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x177:0x7 DW_TAG_base_type
	.long	.Linfo_string7          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	30                      # Abbrev [30] 0x17e:0xc DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x183:0x6 DW_TAG_subrange_type
	.long	375                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x18a:0x5 DW_TAG_pointer_type
	.long	399                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x18f:0x18 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x194:0x6 DW_TAG_subrange_type
	.long	375                     # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x19a:0x6 DW_TAG_subrange_type
	.long	375                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x1a0:0x6 DW_TAG_subrange_type
	.long	375                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin2:
	.long	132                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x7d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string127        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
	.byte	27                      # Abbrev [27] 0x2a:0x58 DW_TAG_subprogram
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string150        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0x3f:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	97
	.long	.Linfo_string238        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x4c:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	98
	.long	.Linfo_string236        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x59:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	99
	.long	.Linfo_string235        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	12                      # Abbrev [12] 0x66:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc18           # DW_AT_location
	.long	.Linfo_string245        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	130                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x75:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string239        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x82:0x5 DW_TAG_pointer_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin3:
	.long	262                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xff DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string128        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0xdf DW_TAG_subprogram
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string151        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	33                      # Abbrev [33] 0x3f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\360"
	.long	.Linfo_string245        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc19           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc20           # DW_AT_location
	.long	.Linfo_string234        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc21           # DW_AT_location
	.long	.Linfo_string235        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc22           # DW_AT_location
	.long	.Linfo_string223        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc23           # DW_AT_location
	.long	.Linfo_string236        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc24           # DW_AT_location
	.long	.Linfo_string238        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0xa8:0xf DW_TAG_variable
	.long	.Ldebug_loc25           # DW_AT_location
	.long	.Linfo_string239        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xb7:0xf DW_TAG_variable
	.long	.Ldebug_loc26           # DW_AT_location
	.long	.Linfo_string246        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	26                      # Abbrev [26] 0xc6:0xb DW_TAG_variable
	.long	.Linfo_string247        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xd1:0xb DW_TAG_variable
	.long	.Linfo_string248        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xdc:0xb DW_TAG_variable
	.long	.Linfo_string249        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xe7:0xb DW_TAG_variable
	.long	.Linfo_string250        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xf2:0xb DW_TAG_variable
	.long	.Linfo_string251        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xfd:0xb DW_TAG_variable
	.long	.Linfo_string252        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin4:
	.long	60                      # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x35 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string129        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
	.byte	34                      # Abbrev [34] 0x2a:0x15 DW_TAG_subprogram
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string152        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	0                       # End Of Children Mark
.Lcu_begin5:
	.long	60                      # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x35 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string130        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
	.byte	34                      # Abbrev [34] 0x2a:0x15 DW_TAG_subprogram
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string153        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	0                       # End Of Children Mark
.Lcu_begin6:
	.long	268                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x105 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string131        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0xe5 DW_TAG_subprogram
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string154        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	24                      # Abbrev [24] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc27           # DW_AT_location
	.long	.Linfo_string253        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc28           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc29           # DW_AT_location
	.long	.Linfo_string223        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc30           # DW_AT_location
	.long	.Linfo_string254        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc31           # DW_AT_location
	.long	.Linfo_string255        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc32           # DW_AT_location
	.long	.Linfo_string256        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x99:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string239        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xa5:0xf DW_TAG_variable
	.long	.Ldebug_loc33           # DW_AT_location
	.long	.Linfo_string234        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xb4:0xf DW_TAG_variable
	.long	.Ldebug_loc34           # DW_AT_location
	.long	.Linfo_string257        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc3:0xf DW_TAG_variable
	.long	.Ldebug_loc35           # DW_AT_location
	.long	.Linfo_string258        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0xd2:0xf DW_TAG_variable
	.long	.Ldebug_loc36           # DW_AT_location
	.long	.Linfo_string259        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe1:0xf DW_TAG_variable
	.long	.Ldebug_loc37           # DW_AT_location
	.long	.Linfo_string260        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0xf0:0xf DW_TAG_variable
	.long	.Ldebug_loc38           # DW_AT_location
	.long	.Linfo_string261        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0xff:0xf DW_TAG_variable
	.long	.Ldebug_loc39           # DW_AT_location
	.long	.Linfo_string262        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin7:
	.long	136                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x81 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string132        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x61 DW_TAG_subprogram
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string155        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string233        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4b:0xf DW_TAG_variable
	.long	.Ldebug_loc40           # DW_AT_location
	.long	.Linfo_string263        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5a:0xf DW_TAG_variable
	.long	.Ldebug_loc41           # DW_AT_location
	.long	.Linfo_string223        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x69:0xb DW_TAG_variable
	.long	.Linfo_string234        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x74:0xb DW_TAG_variable
	.long	.Linfo_string239        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x7f:0xb DW_TAG_variable
	.long	.Linfo_string264        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin8:
	.long	136                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x81 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string133        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x61 DW_TAG_subprogram
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string156        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string233        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4b:0xf DW_TAG_variable
	.long	.Ldebug_loc48           # DW_AT_location
	.long	.Linfo_string275        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5a:0xf DW_TAG_variable
	.long	.Ldebug_loc49           # DW_AT_location
	.long	.Linfo_string234        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x69:0xb DW_TAG_variable
	.long	.Linfo_string223        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x74:0xb DW_TAG_variable
	.long	.Linfo_string239        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x7f:0xb DW_TAG_variable
	.long	.Linfo_string264        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin9:
	.long	340                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x14d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string134        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin9 # DW_AT_high_pc
	.byte	27                      # Abbrev [27] 0x2a:0x5b DW_TAG_subprogram
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string159        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	28                      # Abbrev [28] 0x3f:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string122        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.long	338                     # DW_AT_type
	.byte	28                      # Abbrev [28] 0x4c:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	.Linfo_string266        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.long	338                     # DW_AT_type
	.byte	31                      # Abbrev [31] 0x59:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	.Linfo_string267        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.long	.Lsection_info+4135     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x66:0xf DW_TAG_variable
	.long	.Ldebug_loc44           # DW_AT_location
	.long	.Linfo_string268        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x75:0xf DW_TAG_variable
	.long	.Ldebug_loc45           # DW_AT_location
	.long	.Linfo_string269        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	27                      # Abbrev [27] 0x85:0x3d DW_TAG_subprogram
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string157        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	28                      # Abbrev [28] 0x9a:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string270        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
	.long	338                     # DW_AT_type
	.byte	31                      # Abbrev [31] 0xa7:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	.Linfo_string271        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
	.long	.Lsection_info+4135     # DW_AT_type
	.byte	31                      # Abbrev [31] 0xb4:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	.Linfo_string272        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
	.long	.Lsection_info+4135     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	27                      # Abbrev [27] 0xc2:0x3d DW_TAG_subprogram
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string158        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	28                      # Abbrev [28] 0xd7:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string270        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.long	338                     # DW_AT_type
	.byte	28                      # Abbrev [28] 0xe4:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	.Linfo_string273        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.long	338                     # DW_AT_type
	.byte	28                      # Abbrev [28] 0xf1:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	.Linfo_string274        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.long	338                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0xff:0x53 DW_TAG_subprogram
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string160        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	36                      # Abbrev [36] 0x115:0xe DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string122        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
	.long	338                     # DW_AT_type
	.byte	37                      # Abbrev [37] 0x123:0xe DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	.Linfo_string267        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
	.long	.Lsection_info+4135     # DW_AT_type
	.byte	38                      # Abbrev [38] 0x131:0x10 DW_TAG_variable
	.long	.Ldebug_loc46           # DW_AT_location
	.long	.Linfo_string268        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.short	466                     # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	38                      # Abbrev [38] 0x141:0x10 DW_TAG_variable
	.long	.Ldebug_loc47           # DW_AT_location
	.long	.Linfo_string269        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.short	466                     # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x152:0x5 DW_TAG_pointer_type
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin10:
	.long	136                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x81 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string135        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x61 DW_TAG_subprogram
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string161        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string234        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4b:0xf DW_TAG_variable
	.long	.Ldebug_loc50           # DW_AT_location
	.long	.Linfo_string276        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5a:0xf DW_TAG_variable
	.long	.Ldebug_loc51           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x69:0xb DW_TAG_variable
	.long	.Linfo_string223        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x74:0xb DW_TAG_variable
	.long	.Linfo_string239        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x7f:0xb DW_TAG_variable
	.long	.Linfo_string264        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin11:
	.long	105                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x62 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string136        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x42 DW_TAG_subprogram
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string162        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	26                      # Abbrev [26] 0x3f:0xb DW_TAG_variable
	.long	.Linfo_string223        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x4a:0xb DW_TAG_variable
	.long	.Linfo_string234        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x55:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x60:0xb DW_TAG_variable
	.long	.Linfo_string239        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin12:
	.long	316                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x135 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string137        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin17 # DW_AT_high_pc
	.byte	27                      # Abbrev [27] 0x2a:0xa9 DW_TAG_subprogram
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string163        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc55           # DW_AT_location
	.long	.Linfo_string287        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+4135     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x4e:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	32
	.long	.Linfo_string286        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5c:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string239        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x68:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string234        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x74:0xf DW_TAG_variable
	.long	.Ldebug_loc56           # DW_AT_location
	.long	.Linfo_string235        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x83:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string223        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x8f:0xf DW_TAG_variable
	.long	.Ldebug_loc57           # DW_AT_location
	.long	.Linfo_string236        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x9e:0xf DW_TAG_variable
	.long	.Ldebug_loc58           # DW_AT_location
	.long	.Linfo_string238        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0xad:0xf DW_TAG_variable
	.long	.Ldebug_loc59           # DW_AT_location
	.long	.Linfo_string162        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	26                      # Abbrev [26] 0xbc:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xc7:0xb DW_TAG_variable
	.long	.Linfo_string288        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	27                      # Abbrev [27] 0xd3:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string164        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0xe8:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc60           # DW_AT_location
	.long	.Linfo_string287        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.long	.Lsection_info+4135     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xf7:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string239        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x103:0xf DW_TAG_variable
	.long	.Ldebug_loc61           # DW_AT_location
	.long	.Linfo_string162        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	78                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	26                      # Abbrev [26] 0x112:0xb DW_TAG_variable
	.long	.Linfo_string223        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x11d:0xb DW_TAG_variable
	.long	.Linfo_string234        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x128:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x133:0xb DW_TAG_variable
	.long	.Linfo_string288        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin13:
	.long	243                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xec DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string138        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
	.byte	27                      # Abbrev [27] 0x2a:0xc7 DW_TAG_subprogram
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string165        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc52           # DW_AT_location
	.long	.Linfo_string283        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc53           # DW_AT_location
	.long	.Linfo_string226        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x5d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc54           # DW_AT_location
	.long	.Linfo_string227        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	241                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x6c:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	.Linfo_string277        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x7b:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string278        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x89:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\200\002"
	.long	.Linfo_string279        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x98:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\320\001"
	.long	.Linfo_string280        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	33                      # Abbrev [33] 0xa7:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.long	.Linfo_string281        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	33                      # Abbrev [33] 0xb6:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\360"
	.long	.Linfo_string282        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+3963     # DW_AT_type
	.byte	39                      # Abbrev [39] 0xc5:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	58
	.byte	140
	.byte	48
	.byte	226
	.byte	142
	.byte	121
	.byte	69
	.byte	62
	.long	.Linfo_string284        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	26                      # Abbrev [26] 0xd9:0xb DW_TAG_variable
	.long	.Linfo_string285        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	25                      # Abbrev [25] 0xe4:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string239        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0xf1:0x5 DW_TAG_pointer_type
	.long	.Lsection_info+138      # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin14:
	.long	398                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x187 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string139        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string140        # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
	.byte	8                       # Abbrev [8] 0x2a:0x11 DW_TAG_enumeration_type
	.byte	4                       # DW_AT_byte_size
	.byte	3                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0x2e:0x6 DW_TAG_enumerator
	.long	.Linfo_string9          # DW_AT_name
	.byte	0                       # DW_AT_const_value
	.byte	9                       # Abbrev [9] 0x34:0x6 DW_TAG_enumerator
	.long	.Linfo_string10         # DW_AT_name
	.byte	1                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	27                      # Abbrev [27] 0x3b:0x138 DW_TAG_subprogram
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string166        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0x50:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc62           # DW_AT_location
	.long	.Linfo_string289        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x5f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc63           # DW_AT_location
	.long	.Linfo_string290        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+3020     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x6e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc64           # DW_AT_location
	.long	.Linfo_string291        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x7d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc65           # DW_AT_location
	.long	.Linfo_string292        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x8c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc66           # DW_AT_location
	.long	.Linfo_string229        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x9b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc67           # DW_AT_location
	.long	.Linfo_string221        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	29                      # Abbrev [29] 0xaa:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc68           # DW_AT_location
	.long	.Linfo_string146        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	29                      # Abbrev [29] 0xb9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc69           # DW_AT_location
	.long	.Linfo_string293        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	40                      # Abbrev [40] 0xc8:0xb DW_TAG_formal_parameter
	.long	.Linfo_string294        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	41                      # Abbrev [41] 0xd3:0xb DW_TAG_formal_parameter
	.long	.Linfo_string227        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	390                     # DW_AT_type
	.byte	40                      # Abbrev [40] 0xde:0xb DW_TAG_formal_parameter
	.long	.Linfo_string300        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	40                      # Abbrev [40] 0xe9:0xb DW_TAG_formal_parameter
	.long	.Linfo_string301        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	40                      # Abbrev [40] 0xf4:0xb DW_TAG_formal_parameter
	.long	.Linfo_string302        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	29                      # Abbrev [29] 0xff:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc75           # DW_AT_location
	.long	.Linfo_string303        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x10e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc74           # DW_AT_location
	.long	.Linfo_string299        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x11d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc73           # DW_AT_location
	.long	.Linfo_string298        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x12c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc72           # DW_AT_location
	.long	.Linfo_string297        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x13b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc71           # DW_AT_location
	.long	.Linfo_string296        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	40                      # Abbrev [40] 0x14a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string295        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	.Lsection_info+3015     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x155:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string265        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	371                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x163:0xf DW_TAG_variable
	.long	.Ldebug_loc70           # DW_AT_location
	.long	.Linfo_string234        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x173:0xc DW_TAG_array_type
	.long	.Lsection_info+3020     # DW_AT_type
	.byte	5                       # Abbrev [5] 0x178:0x6 DW_TAG_subrange_type
	.long	383                     # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x17f:0x7 DW_TAG_base_type
	.long	.Linfo_string7          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	7                       # Abbrev [7] 0x186:0xb DW_TAG_typedef
	.long	42                      # DW_AT_type
	.long	.Linfo_string11         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	0                       # End Of Children Mark
.Lcu_begin15:
	.long	363                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x164 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string141        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string140        # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin20 # DW_AT_high_pc
	.byte	42                      # Abbrev [42] 0x2a:0x15 DW_TAG_variable
	.long	.Linfo_string142        # DW_AT_name
	.long	63                      # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	start
	.byte	30                      # Abbrev [30] 0x3f:0xc DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x44:0x6 DW_TAG_subrange_type
	.long	75                      # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x4b:0x7 DW_TAG_base_type
	.long	.Linfo_string7          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	42                      # Abbrev [42] 0x52:0x15 DW_TAG_variable
	.long	.Linfo_string143        # DW_AT_name
	.long	63                      # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	elapsed
	.byte	27                      # Abbrev [27] 0x67:0x25 DW_TAG_subprogram
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string167        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0x7c:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string264        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	43                      # Abbrev [43] 0x8c:0x18 DW_TAG_subprogram
	.long	.Linfo_string3          # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+63       # DW_AT_type
                                        # DW_AT_APPLE_optimized
	.byte	1                       # DW_AT_inline
	.byte	26                      # Abbrev [26] 0x98:0xb DW_TAG_variable
	.long	.Linfo_string146        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	27                      # Abbrev [27] 0xa4:0x41 DW_TAG_subprogram
	.quad	.Lfunc_begin21          # DW_AT_low_pc
	.long	.Lfunc_end21-.Lfunc_begin21 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string168        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0xb9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc76           # DW_AT_location
	.long	.Linfo_string264        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	44                      # Abbrev [44] 0xc8:0x1c DW_TAG_inlined_subroutine
	.long	140                     # DW_AT_abstract_origin
	.quad	.Ltmp1164               # DW_AT_low_pc
	.long	.Ltmp1165-.Ltmp1164     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	45                      # Abbrev [45] 0xdb:0x8 DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	117
	.byte	0
	.long	152                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	27                      # Abbrev [27] 0xe5:0x60 DW_TAG_subprogram
	.quad	.Lfunc_begin22          # DW_AT_low_pc
	.long	.Lfunc_end22-.Lfunc_begin22 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string169        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0xfa:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc77           # DW_AT_location
	.long	.Linfo_string264        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x109:0xf DW_TAG_variable
	.long	.Ldebug_loc79           # DW_AT_location
	.long	.Linfo_string304        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	24                      # Abbrev [24] 0x118:0xf DW_TAG_variable
	.long	.Ldebug_loc80           # DW_AT_location
	.long	.Linfo_string146        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	44                      # Abbrev [44] 0x127:0x1d DW_TAG_inlined_subroutine
	.long	140                     # DW_AT_abstract_origin
	.quad	.Ltmp1172               # DW_AT_low_pc
	.long	.Ltmp1173-.Ltmp1172     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	46                      # Abbrev [46] 0x13a:0x9 DW_TAG_variable
	.long	.Ldebug_loc78           # DW_AT_location
	.long	152                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	47                      # Abbrev [47] 0x145:0x29 DW_TAG_subprogram
	.quad	.Lfunc_begin23          # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin23 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string170        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+63       # DW_AT_type
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0x15e:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string264        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	.Lsection_info+103      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin16:
	.long	167                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string144        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string140        # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin24          # DW_AT_low_pc
	.long	.Lfunc_end24-.Lfunc_begin24 # DW_AT_high_pc
	.byte	27                      # Abbrev [27] 0x2a:0x49 DW_TAG_subprogram
	.quad	.Lfunc_begin24          # DW_AT_low_pc
	.long	.Lfunc_end24-.Lfunc_begin24 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string171        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	48                      # Abbrev [48] 0x3f:0x15 DW_TAG_variable
	.long	.Linfo_string145        # DW_AT_name
	.long	.Lsection_info+103      # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	wtime_.sec
	.byte	29                      # Abbrev [29] 0x54:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc81           # DW_AT_location
	.long	.Linfo_string146        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+4135     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x63:0xf DW_TAG_variable
	.long	.Ldebug_loc82           # DW_AT_location
	.long	.Linfo_string305        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.long	115                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x73:0x21 DW_TAG_structure_type
	.long	.Linfo_string310        # DW_AT_name
	.byte	16                      # DW_AT_byte_size
	.byte	25                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x7b:0xc DW_TAG_member
	.long	.Linfo_string306        # DW_AT_name
	.long	148                     # DW_AT_type
	.byte	25                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x87:0xc DW_TAG_member
	.long	.Linfo_string308        # DW_AT_name
	.long	159                     # DW_AT_type
	.byte	25                      # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	49                      # Abbrev [49] 0x94:0xb DW_TAG_typedef
	.long	.Lsection_info+3494     # DW_AT_type
	.long	.Linfo_string307        # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	139                     # DW_AT_decl_line
	.byte	49                      # Abbrev [49] 0x9f:0xb DW_TAG_typedef
	.long	.Lsection_info+3494     # DW_AT_type
	.long	.Linfo_string309        # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.byte	0                       # End Of Children Mark
	.section	.debug_ranges,"",@progbits
.Ldebug_range:
.Ldebug_ranges0:
	.quad	.Lfunc_begin2
	.quad	.Lfunc_end2
	.quad	.Lfunc_begin8
	.quad	.Lfunc_end8
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
.Ldebug_macinfo:
.Lcu_macro_begin0:
.Lcu_macro_begin1:
.Lcu_macro_begin2:
.Lcu_macro_begin3:
.Lcu_macro_begin4:
.Lcu_macro_begin5:
.Lcu_macro_begin6:
.Lcu_macro_begin7:
.Lcu_macro_begin8:
.Lcu_macro_begin9:
.Lcu_macro_begin10:
.Lcu_macro_begin11:
.Lcu_macro_begin12:
.Lcu_macro_begin13:
.Lcu_macro_begin14:
.Lcu_macro_begin15:
.Lcu_macro_begin16:
	.byte	0                       # End Of Macro List Mark
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0 # Length of Public Names Info
.LpubNames_begin0:
	.short	2                       # DWARF Version
	.long	.Lcu_begin0             # Offset of Compilation Unit Info
	.long	3581                    # Compilation Unit Length
	.long	814                     # DIE offset
	.asciz	"xxcon1"                # External Name
	.long	835                     # DIE offset
	.asciz	"xxcon2"                # External Name
	.long	856                     # DIE offset
	.asciz	"xxcon3"                # External Name
	.long	877                     # DIE offset
	.asciz	"xxcon4"                # External Name
	.long	898                     # DIE offset
	.asciz	"xxcon5"                # External Name
	.long	2266                    # DIE offset
	.asciz	"qs"                    # External Name
	.long	1465                    # DIE offset
	.asciz	"dnym1"                 # External Name
	.long	919                     # DIE offset
	.asciz	"dx1tx1"                # External Name
	.long	355                     # DIE offset
	.asciz	"dx1"                   # External Name
	.long	376                     # DIE offset
	.asciz	"dx2"                   # External Name
	.long	397                     # DIE offset
	.asciz	"dx3"                   # External Name
	.long	418                     # DIE offset
	.asciz	"dx4"                   # External Name
	.long	439                     # DIE offset
	.asciz	"dx5"                   # External Name
	.long	1150                    # DIE offset
	.asciz	"dy2ty1"                # External Name
	.long	1381                    # DIE offset
	.asciz	"dz3tz1"                # External Name
	.long	166                     # DIE offset
	.asciz	"tx1"                   # External Name
	.long	187                     # DIE offset
	.asciz	"tx2"                   # External Name
	.long	208                     # DIE offset
	.asciz	"tx3"                   # External Name
	.long	1024                    # DIE offset
	.asciz	"yycon1"                # External Name
	.long	1045                    # DIE offset
	.asciz	"yycon2"                # External Name
	.long	1066                    # DIE offset
	.asciz	"yycon3"                # External Name
	.long	1087                    # DIE offset
	.asciz	"yycon4"                # External Name
	.long	1108                    # DIE offset
	.asciz	"yycon5"                # External Name
	.long	712                     # DIE offset
	.asciz	"ce"                    # External Name
	.long	982                     # DIE offset
	.asciz	"dx4tx1"                # External Name
	.long	460                     # DIE offset
	.asciz	"dy1"                   # External Name
	.long	481                     # DIE offset
	.asciz	"dy2"                   # External Name
	.long	502                     # DIE offset
	.asciz	"dy3"                   # External Name
	.long	523                     # DIE offset
	.asciz	"dy4"                   # External Name
	.long	544                     # DIE offset
	.asciz	"dy5"                   # External Name
	.long	1213                    # DIE offset
	.asciz	"dy5ty1"                # External Name
	.long	2116                    # DIE offset
	.asciz	"c2iv"                  # External Name
	.long	229                     # DIE offset
	.asciz	"ty1"                   # External Name
	.long	250                     # DIE offset
	.asciz	"ty2"                   # External Name
	.long	271                     # DIE offset
	.asciz	"ty3"                   # External Name
	.long	70                      # DIE offset
	.asciz	"grid_points"           # External Name
	.long	2653                    # DIE offset
	.asciz	"tmp1"                  # External Name
	.long	793                     # DIE offset
	.asciz	"dzmax"                 # External Name
	.long	1234                    # DIE offset
	.asciz	"zzcon1"                # External Name
	.long	1255                    # DIE offset
	.asciz	"zzcon2"                # External Name
	.long	1276                    # DIE offset
	.asciz	"zzcon3"                # External Name
	.long	1297                    # DIE offset
	.asciz	"zzcon4"                # External Name
	.long	1318                    # DIE offset
	.asciz	"zzcon5"                # External Name
	.long	1486                    # DIE offset
	.asciz	"dnzm1"                 # External Name
	.long	2602                    # DIE offset
	.asciz	"lhs"                   # External Name
	.long	1339                    # DIE offset
	.asciz	"dz1tz1"                # External Name
	.long	565                     # DIE offset
	.asciz	"dz1"                   # External Name
	.long	586                     # DIE offset
	.asciz	"dz2"                   # External Name
	.long	607                     # DIE offset
	.asciz	"dz3"                   # External Name
	.long	628                     # DIE offset
	.asciz	"dz4"                   # External Name
	.long	649                     # DIE offset
	.asciz	"dz5"                   # External Name
	.long	2308                    # DIE offset
	.asciz	"square"                # External Name
	.long	1738                    # DIE offset
	.asciz	"c5dssp"                # External Name
	.long	1570                    # DIE offset
	.asciz	"c1345"                 # External Name
	.long	691                     # DIE offset
	.asciz	"dt"                    # External Name
	.long	2695                    # DIE offset
	.asciz	"tmp3"                  # External Name
	.long	670                     # DIE offset
	.asciz	"dssp"                  # External Name
	.long	2515                    # DIE offset
	.asciz	"buf"                   # External Name
	.long	117                     # DIE offset
	.asciz	"timeron"               # External Name
	.long	292                     # DIE offset
	.asciz	"tz1"                   # External Name
	.long	313                     # DIE offset
	.asciz	"tz2"                   # External Name
	.long	334                     # DIE offset
	.asciz	"tz3"                   # External Name
	.long	2158                    # DIE offset
	.asciz	"con16"                 # External Name
	.long	940                     # DIE offset
	.asciz	"dx2tx1"                # External Name
	.long	2053                    # DIE offset
	.asciz	"c3c4tx3"               # External Name
	.long	1549                    # DIE offset
	.asciz	"c3c4"                  # External Name
	.long	1171                    # DIE offset
	.asciz	"dy3ty1"                # External Name
	.long	2674                    # DIE offset
	.asciz	"tmp2"                  # External Name
	.long	1402                    # DIE offset
	.asciz	"dz4tz1"                # External Name
	.long	2455                    # DIE offset
	.asciz	"q"                     # External Name
	.long	2536                    # DIE offset
	.asciz	"fjac"                  # External Name
	.long	1780                    # DIE offset
	.asciz	"dttx1"                 # External Name
	.long	1801                    # DIE offset
	.asciz	"dttx2"                 # External Name
	.long	2380                    # DIE offset
	.asciz	"u"                     # External Name
	.long	2476                    # DIE offset
	.asciz	"ue"                    # External Name
	.long	2581                    # DIE offset
	.asciz	"njac"                  # External Name
	.long	751                     # DIE offset
	.asciz	"dxmax"                 # External Name
	.long	2179                    # DIE offset
	.asciz	"us"                    # External Name
	.long	1906                    # DIE offset
	.asciz	"c2dttx1"               # External Name
	.long	1969                    # DIE offset
	.asciz	"comz1"                 # External Name
	.long	1990                    # DIE offset
	.asciz	"comz4"                 # External Name
	.long	1003                    # DIE offset
	.asciz	"dx5tx1"                # External Name
	.long	2032                    # DIE offset
	.asciz	"comz6"                 # External Name
	.long	2074                    # DIE offset
	.asciz	"c3c4ty3"               # External Name
	.long	2011                    # DIE offset
	.asciz	"comz5"                 # External Name
	.long	1822                    # DIE offset
	.asciz	"dtty1"                 # External Name
	.long	1843                    # DIE offset
	.asciz	"dtty2"                 # External Name
	.long	2422                    # DIE offset
	.asciz	"cuf"                   # External Name
	.long	2224                    # DIE offset
	.asciz	"vs"                    # External Name
	.long	1927                    # DIE offset
	.asciz	"c2dtty1"               # External Name
	.long	42                      # DIE offset
	.asciz	"elapsed_time"          # External Name
	.long	1129                    # DIE offset
	.asciz	"dy1ty1"                # External Name
	.long	2095                    # DIE offset
	.asciz	"c3c4tz3"               # External Name
	.long	1360                    # DIE offset
	.asciz	"dz2tz1"                # External Name
	.long	2287                    # DIE offset
	.asciz	"rho_i"                 # External Name
	.long	1759                    # DIE offset
	.asciz	"dtdssp"                # External Name
	.long	1864                    # DIE offset
	.asciz	"dttz1"                 # External Name
	.long	1885                    # DIE offset
	.asciz	"dttz2"                 # External Name
	.long	2137                    # DIE offset
	.asciz	"con43"                 # External Name
	.long	1444                    # DIE offset
	.asciz	"dnxm1"                 # External Name
	.long	2245                    # DIE offset
	.asciz	"ws"                    # External Name
	.long	1591                    # DIE offset
	.asciz	"conz1"                 # External Name
	.long	961                     # DIE offset
	.asciz	"dx3tx1"                # External Name
	.long	1948                    # DIE offset
	.asciz	"c2dttz1"               # External Name
	.long	2401                    # DIE offset
	.asciz	"rhs"                   # External Name
	.long	1192                    # DIE offset
	.asciz	"dy4ty1"                # External Name
	.long	1717                    # DIE offset
	.asciz	"c4dssp"                # External Name
	.long	1423                    # DIE offset
	.asciz	"dz5tz1"                # External Name
	.long	772                     # DIE offset
	.asciz	"dymax"                 # External Name
	.long	2717                    # DIE offset
	.asciz	"main"                  # External Name
	.long	2329                    # DIE offset
	.asciz	"forcing"               # External Name
	.long	1507                    # DIE offset
	.asciz	"c1c2"                  # External Name
	.long	1528                    # DIE offset
	.asciz	"c1c5"                  # External Name
	.long	1612                    # DIE offset
	.asciz	"c1"                    # External Name
	.long	1633                    # DIE offset
	.asciz	"c2"                    # External Name
	.long	1654                    # DIE offset
	.asciz	"c3"                    # External Name
	.long	1675                    # DIE offset
	.asciz	"c4"                    # External Name
	.long	1696                    # DIE offset
	.asciz	"c5"                    # External Name
	.long	0                       # End Mark
.LpubNames_end0:
	.long	.LpubNames_end1-.LpubNames_begin1 # Length of Public Names Info
.LpubNames_begin1:
	.short	2                       # DWARF Version
	.long	.Lcu_begin1             # Offset of Compilation Unit Info
	.long	424                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"initialize"            # External Name
	.long	262                     # DIE offset
	.asciz	"lhsinit"               # External Name
	.long	0                       # End Mark
.LpubNames_end1:
	.long	.LpubNames_end2-.LpubNames_begin2 # Length of Public Names Info
.LpubNames_begin2:
	.short	2                       # DWARF Version
	.long	.Lcu_begin2             # Offset of Compilation Unit Info
	.long	136                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"exact_solution"        # External Name
	.long	0                       # End Mark
.LpubNames_end2:
	.long	.LpubNames_end3-.LpubNames_begin3 # Length of Public Names Info
.LpubNames_begin3:
	.short	2                       # DWARF Version
	.long	.Lcu_begin3             # Offset of Compilation Unit Info
	.long	266                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"exact_rhs"             # External Name
	.long	0                       # End Mark
.LpubNames_end3:
	.long	.LpubNames_end4-.LpubNames_begin4 # Length of Public Names Info
.LpubNames_begin4:
	.short	2                       # DWARF Version
	.long	.Lcu_begin4             # Offset of Compilation Unit Info
	.long	64                      # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"set_constants"         # External Name
	.long	0                       # End Mark
.LpubNames_end4:
	.long	.LpubNames_end5-.LpubNames_begin5 # Length of Public Names Info
.LpubNames_begin5:
	.short	2                       # DWARF Version
	.long	.Lcu_begin5             # Offset of Compilation Unit Info
	.long	64                      # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"adi"                   # External Name
	.long	0                       # End Mark
.LpubNames_end5:
	.long	.LpubNames_end6-.LpubNames_begin6 # Length of Public Names Info
.LpubNames_begin6:
	.short	2                       # DWARF Version
	.long	.Lcu_begin6             # Offset of Compilation Unit Info
	.long	272                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"compute_rhs"           # External Name
	.long	0                       # End Mark
.LpubNames_end6:
	.long	.LpubNames_end7-.LpubNames_begin7 # Length of Public Names Info
.LpubNames_begin7:
	.short	2                       # DWARF Version
	.long	.Lcu_begin7             # Offset of Compilation Unit Info
	.long	140                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"x_solve"               # External Name
	.long	0                       # End Mark
.LpubNames_end7:
	.long	.LpubNames_end8-.LpubNames_begin8 # Length of Public Names Info
.LpubNames_begin8:
	.short	2                       # DWARF Version
	.long	.Lcu_begin8             # Offset of Compilation Unit Info
	.long	140                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"y_solve"               # External Name
	.long	0                       # End Mark
.LpubNames_end8:
	.long	.LpubNames_end9-.LpubNames_begin9 # Length of Public Names Info
.LpubNames_begin9:
	.short	2                       # DWARF Version
	.long	.Lcu_begin9             # Offset of Compilation Unit Info
	.long	344                     # Compilation Unit Length
	.long	133                     # DIE offset
	.asciz	"matvec_sub"            # External Name
	.long	194                     # DIE offset
	.asciz	"matmul_sub"            # External Name
	.long	255                     # DIE offset
	.asciz	"binvrhs"               # External Name
	.long	42                      # DIE offset
	.asciz	"binvcrhs"              # External Name
	.long	0                       # End Mark
.LpubNames_end9:
	.long	.LpubNames_end10-.LpubNames_begin10 # Length of Public Names Info
.LpubNames_begin10:
	.short	2                       # DWARF Version
	.long	.Lcu_begin10            # Offset of Compilation Unit Info
	.long	140                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"z_solve"               # External Name
	.long	0                       # End Mark
.LpubNames_end10:
	.long	.LpubNames_end11-.LpubNames_begin11 # Length of Public Names Info
.LpubNames_begin11:
	.short	2                       # DWARF Version
	.long	.Lcu_begin11            # Offset of Compilation Unit Info
	.long	109                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"add"                   # External Name
	.long	0                       # End Mark
.LpubNames_end11:
	.long	.LpubNames_end12-.LpubNames_begin12 # Length of Public Names Info
.LpubNames_begin12:
	.short	2                       # DWARF Version
	.long	.Lcu_begin12            # Offset of Compilation Unit Info
	.long	320                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"error_norm"            # External Name
	.long	211                     # DIE offset
	.asciz	"rhs_norm"              # External Name
	.long	0                       # End Mark
.LpubNames_end12:
	.long	.LpubNames_end13-.LpubNames_begin13 # Length of Public Names Info
.LpubNames_begin13:
	.short	2                       # DWARF Version
	.long	.Lcu_begin13            # Offset of Compilation Unit Info
	.long	247                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"verify"                # External Name
	.long	0                       # End Mark
.LpubNames_end13:
	.long	.LpubNames_end14-.LpubNames_begin14 # Length of Public Names Info
.LpubNames_begin14:
	.short	2                       # DWARF Version
	.long	.Lcu_begin14            # Offset of Compilation Unit Info
	.long	402                     # Compilation Unit Length
	.long	59                      # DIE offset
	.asciz	"print_results"         # External Name
	.long	0                       # End Mark
.LpubNames_end14:
	.long	.LpubNames_end15-.LpubNames_begin15 # Length of Public Names Info
.LpubNames_begin15:
	.short	2                       # DWARF Version
	.long	.Lcu_begin15            # Offset of Compilation Unit Info
	.long	367                     # Compilation Unit Length
	.long	164                     # DIE offset
	.asciz	"timer_start"           # External Name
	.long	229                     # DIE offset
	.asciz	"timer_stop"            # External Name
	.long	103                     # DIE offset
	.asciz	"timer_clear"           # External Name
	.long	140                     # DIE offset
	.asciz	"elapsed_time"          # External Name
	.long	325                     # DIE offset
	.asciz	"timer_read"            # External Name
	.long	42                      # DIE offset
	.asciz	"start"                 # External Name
	.long	82                      # DIE offset
	.asciz	"elapsed"               # External Name
	.long	0                       # End Mark
.LpubNames_end15:
	.long	.LpubNames_end16-.LpubNames_begin16 # Length of Public Names Info
.LpubNames_begin16:
	.short	2                       # DWARF Version
	.long	.Lcu_begin16            # Offset of Compilation Unit Info
	.long	171                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"wtime_"                # External Name
	.long	63                      # DIE offset
	.asciz	"sec"                   # External Name
	.long	0                       # End Mark
.LpubNames_end16:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0 # Length of Public Types Info
.LpubTypes_begin0:
	.short	2                       # DWARF Version
	.long	.Lcu_begin0             # Offset of Compilation Unit Info
	.long	3581                    # Compilation Unit Length
	.long	3037                    # DIE offset
	.asciz	"FILE"                  # External Name
	.long	3561                    # DIE offset
	.asciz	"long unsigned int"     # External Name
	.long	103                     # DIE offset
	.asciz	"int"                   # External Name
	.long	3483                    # DIE offset
	.asciz	"__off_t"               # External Name
	.long	3501                    # DIE offset
	.asciz	"unsigned short"        # External Name
	.long	3550                    # DIE offset
	.asciz	"size_t"                # External Name
	.long	3532                    # DIE offset
	.asciz	"_IO_lock_t"            # External Name
	.long	3048                    # DIE offset
	.asciz	"_IO_FILE"              # External Name
	.long	3539                    # DIE offset
	.asciz	"__off64_t"             # External Name
	.long	3433                    # DIE offset
	.asciz	"_IO_marker"            # External Name
	.long	3508                    # DIE offset
	.asciz	"signed char"           # External Name
	.long	3494                    # DIE offset
	.asciz	"long int"              # External Name
	.long	63                      # DIE offset
	.asciz	"double"                # External Name
	.long	138                     # DIE offset
	.asciz	"logical"               # External Name
	.long	3020                    # DIE offset
	.asciz	"char"                  # External Name
	.long	0                       # End Mark
.LpubTypes_end0:
	.long	.LpubTypes_end1-.LpubTypes_begin1 # Length of Public Types Info
.LpubTypes_begin1:
	.short	2                       # DWARF Version
	.long	.Lcu_begin14            # Offset of Compilation Unit Info
	.long	402                     # Compilation Unit Length
	.long	390                     # DIE offset
	.asciz	"logical"               # External Name
	.long	0                       # End Mark
.LpubTypes_end1:
	.long	.LpubTypes_end2-.LpubTypes_begin2 # Length of Public Types Info
.LpubTypes_begin2:
	.short	2                       # DWARF Version
	.long	.Lcu_begin16            # Offset of Compilation Unit Info
	.long	171                     # Compilation Unit Length
	.long	148                     # DIE offset
	.asciz	"__time_t"              # External Name
	.long	115                     # DIE offset
	.asciz	"timeval"               # External Name
	.long	159                     # DIE offset
	.asciz	"__suseconds_t"         # External Name
	.long	0                       # End Mark
.LpubTypes_end2:

	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
