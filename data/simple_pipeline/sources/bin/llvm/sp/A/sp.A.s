	.text
	.file	"sp/A/sp.A.bc"
	.file	1 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/sp.c"
	.file	2 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/../common/type.h"
	.file	3 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/../common/type.h"
	.file	4 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/c_timers.c"
	.file	5 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/../common/wtime.c"
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI0_0:
	.quad	4613937818241073152     # double 3
.LCPI0_1:
	.quad	4650962104291732488     # double 881.17399999999998
.LCPI0_2:
	.quad	-4561500008645226660    # double -4683.9099999999999
.LCPI0_3:
	.quad	4667539284973060096     # double 11484.5
.LCPI0_4:
	.quad	-4552345265925154406    # double -19272.400000000001
.LCPI0_5:
	.quad	4696837146684686336     # double 1.0E+6
.LCPI0_6:
	.quad	4607182418800017408     # double 1
.LCPI0_7:
	.quad	4636737291354636288     # double 100
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin0:
	.loc	1 93 0                  # sp.c:93:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	1 105 13 prologue_end   # sp.c:105:13
	pushq	%rbx
.Ltmp0:
	.cfi_def_cfa_offset 16
	subq	$448, %rsp              # imm = 0x1C0
.Ltmp1:
	.cfi_def_cfa_offset 464
.Ltmp2:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: main:argc <- %EDI
	#DEBUG_VALUE: main:argv <- %RSI
	movl	$.L.str, %edi
.Ltmp3:
	movl	$.L.str.1, %esi
.Ltmp4:
	callq	fopen
.Ltmp5:
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 105 39 is_stmt 0      # sp.c:105:39
	testq	%rax, %rax
.Ltmp6:
	.loc	1 105 7                 # sp.c:105:7
	je	.LBB0_2
.Ltmp7:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 106 13 is_stmt 1      # sp.c:106:13
	movl	$1, timeron(%rip)
	.loc	1 107 22                # sp.c:107:22
	movl	$.L.str.3, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.2, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 328(%rsp)
	.loc	1 109 21                # sp.c:109:21
	movl	$.L.str.5, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.4, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 344(%rsp)
	.loc	1 111 20                # sp.c:111:20
	movl	$.L.str.7, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.6, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 360(%rsp)
	.loc	1 113 23                # sp.c:113:23
	movl	$.L.str.9, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.8, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 376(%rsp)
	.loc	1 115 22                # sp.c:115:22
	movl	$.L.str.11, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.10, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 392(%rsp)
	.loc	1 118 22                # sp.c:118:22
	movl	$.L.str.12, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.13, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 424(%rsp)
	.loc	1 120 23                # sp.c:120:23
	movl	$.L.str.14, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.15, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 408(%rsp)
	.loc	1 121 20                # sp.c:121:20
	movq	$.L.str.16, 440(%rsp)
	.loc	1 122 5                 # sp.c:122:5
	movq	%rax, %rdi
	callq	fclose
.Ltmp8:
	jmp	.LBB0_3
.Ltmp9:
.LBB0_2:                                # %if.else
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 124 13                # sp.c:124:13
	movl	$0, timeron(%rip)
.Ltmp10:
.LBB0_3:                                # %if.end
	.loc	1 127 3                 # sp.c:127:3
	movl	$.Lstr, %edi
	callq	puts
.Ltmp11:
	.loc	1 129 13                # sp.c:129:13
	movl	$.L.str.18, %edi
	movl	$.L.str.1, %esi
	callq	fopen
	movq	%rax, %rbx
.Ltmp12:
	#DEBUG_VALUE: main:fp <- %RBX
	.loc	1 129 41 is_stmt 0      # sp.c:129:41
	testq	%rbx, %rbx
.Ltmp13:
	.loc	1 129 7                 # sp.c:129:7
	je	.LBB0_9
.Ltmp14:
# BB#4:                                 # %if.then19
	#DEBUG_VALUE: main:fp <- %RBX
	.loc	1 131 5 is_stmt 1       # sp.c:131:5
	movl	$.Lstr.46, %edi
	callq	puts
	leaq	96(%rsp), %rdx
.Ltmp15:
	#DEBUG_VALUE: main:niter <- [%RDX+0]
	.loc	1 132 14                # sp.c:132:14
	movl	$.L.str.20, %esi
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
.Ltmp16:
	#DEBUG_VALUE: result <- 0
	.p2align	4, 0x90
.LBB0_5:                                # %while.cond
                                        # =>This Inner Loop Header: Depth=1
	.loc	1 133 12 discriminator 1 # sp.c:133:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	1 133 5 is_stmt 0 discriminator 1 # sp.c:133:5
	cmpl	$10, %eax
	jne	.LBB0_5
# BB#6:                                 # %while.end
	.loc	1 134 14 is_stmt 1      # sp.c:134:14
	movl	$.L.str.21, %esi
	movl	$dt, %edx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: result <- 0
	.p2align	4, 0x90
.LBB0_7:                                # %while.cond25
                                        # =>This Inner Loop Header: Depth=1
	.loc	1 135 12 discriminator 1 # sp.c:135:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	1 135 5 is_stmt 0 discriminator 1 # sp.c:135:5
	cmpl	$10, %eax
	jne	.LBB0_7
# BB#8:                                 # %while.end29
	.loc	1 136 14 is_stmt 1      # sp.c:136:14
	movl	$.L.str.22, %esi
	movl	$grid_points, %edx
	movl	$grid_points+4, %ecx
	movl	$grid_points+8, %r8d
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: result <- 0
	.loc	1 137 5                 # sp.c:137:5
	movq	%rbx, %rdi
	callq	fclose
.Ltmp17:
	.loc	1 148 7                 # sp.c:148:7
	movl	grid_points(%rip), %esi
	.loc	1 148 23 is_stmt 0      # sp.c:148:23
	movl	grid_points+4(%rip), %edx
	.loc	1 148 39                # sp.c:148:39
	movl	grid_points+8(%rip), %ecx
	jmp	.LBB0_10
.LBB0_9:                                # %if.else32
.Ltmp18:
	#DEBUG_VALUE: main:fp <- %RBX
	.loc	1 139 5 is_stmt 1       # sp.c:139:5
	movl	$.Lstr.43, %edi
	callq	puts
.Ltmp19:
	#DEBUG_VALUE: main:niter <- 400
	.loc	1 140 11                # sp.c:140:11
	movl	$400, 96(%rsp)          # imm = 0x190
	.loc	1 141 11                # sp.c:141:11
	movabsq	$4564560351926583034, %rax # imm = 0x3F589374BC6A7EFA
	movq	%rax, dt(%rip)
	.loc	1 142 20                # sp.c:142:20
	movabsq	$274877907008, %rax     # imm = 0x4000000040
	movq	%rax, grid_points(%rip)
	.loc	1 144 20                # sp.c:144:20
	movl	$64, grid_points+8(%rip)
	movl	$64, %ecx
.Ltmp20:
	.loc	1 148 23                # sp.c:148:23
	movl	$64, %edx
	.loc	1 148 7 is_stmt 0       # sp.c:148:7
	movl	$64, %esi
.Ltmp21:
.LBB0_10:                               # %if.end34
	.loc	1 147 3 is_stmt 1       # sp.c:147:3
	movl	$.L.str.24, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	1 149 46                # sp.c:149:46
	movl	96(%rsp), %esi
.Ltmp22:
	#DEBUG_VALUE: main:niter <- %ESI
	.loc	1 149 53 is_stmt 0      # sp.c:149:53
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	1 149 3                 # sp.c:149:3
	movl	$.L.str.25, %edi
	movb	$1, %al
	callq	printf
	.loc	1 150 3 is_stmt 1       # sp.c:150:3
	movl	$10, %edi
	callq	putchar
.Ltmp23:
	.loc	1 152 8                 # sp.c:152:8
	movl	grid_points(%rip), %esi
.Ltmp24:
	.loc	1 152 23 is_stmt 0      # sp.c:152:23
	cmpl	$64, %esi
.Ltmp25:
	.loc	1 160 9 is_stmt 1       # sp.c:160:9
	movl	grid_points+4(%rip), %edx
	.loc	1 161 9                 # sp.c:161:9
	movl	grid_points+8(%rip), %ecx
	jg	.LBB0_13
# BB#11:                                # %if.end34
	cmpl	$64, %edx
	jg	.LBB0_13
# BB#12:                                # %if.end34
	cmpl	$65, %ecx
	jge	.LBB0_13
# BB#15:                                # %if.end45
	.loc	1 159 24                # sp.c:159:24
	addl	$-2, %esi
	.loc	1 159 7 is_stmt 0       # sp.c:159:7
	movl	%esi, nx2(%rip)
	.loc	1 160 24 is_stmt 1      # sp.c:160:24
	addl	$-2, %edx
	.loc	1 160 7 is_stmt 0       # sp.c:160:7
	movl	%edx, ny2(%rip)
	.loc	1 161 24 is_stmt 1      # sp.c:161:24
	addl	$-2, %ecx
	.loc	1 161 7 is_stmt 0       # sp.c:161:7
	movl	%ecx, nz2(%rip)
	xorl	%ebx, %ebx
	.loc	1 163 3 is_stmt 1       # sp.c:163:3
	xorl	%eax, %eax
	callq	set_constants
.Ltmp26:
	#DEBUG_VALUE: main:i <- 1
	.loc	1 166 5                 # sp.c:166:5
	movl	$1, %edi
	callq	timer_clear
.Ltmp27:
	#DEBUG_VALUE: main:i <- 2
	movl	$2, %edi
	callq	timer_clear
	movl	$3, %edi
	callq	timer_clear
	movl	$4, %edi
	callq	timer_clear
	movl	$5, %edi
	callq	timer_clear
	movl	$6, %edi
	callq	timer_clear
	movl	$7, %edi
	callq	timer_clear
	movl	$8, %edi
	callq	timer_clear
	movl	$9, %edi
	callq	timer_clear
	movl	$10, %edi
	callq	timer_clear
	movl	$11, %edi
	callq	timer_clear
	movl	$12, %edi
	callq	timer_clear
	movl	$13, %edi
	callq	timer_clear
	movl	$14, %edi
	callq	timer_clear
	movl	$15, %edi
	callq	timer_clear
.Ltmp28:
	.loc	1 169 3                 # sp.c:169:3
	xorl	%eax, %eax
	callq	exact_rhs
	.loc	1 171 3                 # sp.c:171:3
	xorl	%eax, %eax
	callq	initialize
	.loc	1 176 3                 # sp.c:176:3
	xorl	%eax, %eax
	callq	adi
	.loc	1 177 3                 # sp.c:177:3
	xorl	%eax, %eax
	callq	initialize
.Ltmp29:
	#DEBUG_VALUE: main:i <- 1
	.loc	1 180 5                 # sp.c:180:5
	movl	$1, %edi
	callq	timer_clear
.Ltmp30:
	#DEBUG_VALUE: main:i <- 2
	movl	$2, %edi
	callq	timer_clear
	movl	$3, %edi
	callq	timer_clear
	movl	$4, %edi
	callq	timer_clear
	movl	$5, %edi
	callq	timer_clear
	movl	$6, %edi
	callq	timer_clear
	movl	$7, %edi
	callq	timer_clear
	movl	$8, %edi
	callq	timer_clear
	movl	$9, %edi
	callq	timer_clear
	movl	$10, %edi
	callq	timer_clear
	movl	$11, %edi
	callq	timer_clear
	movl	$12, %edi
	callq	timer_clear
	movl	$13, %edi
	callq	timer_clear
	movl	$14, %edi
	callq	timer_clear
	movl	$15, %edi
	callq	timer_clear
.Ltmp31:
	.loc	1 182 3                 # sp.c:182:3
	movl	$1, %edi
	callq	timer_start
.Ltmp32:
	#DEBUG_VALUE: main:step <- 1
	.loc	1 184 23 discriminator 1 # sp.c:184:23
	cmpl	$0, 96(%rsp)
	jle	.LBB0_20
	.p2align	4, 0x90
.LBB0_16:                               # %for.body57
                                        # =>This Inner Loop Header: Depth=1
	movl	%ebx, %eax
.Ltmp33:
	.loc	1 185 15                # sp.c:185:15
	leal	1(%rax), %ebx
	movslq	%ebx, %rcx
	imulq	$1717986919, %rcx, %rcx # imm = 0x66666667
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$35, %rcx
	addl	%edx, %ecx
	shll	$2, %ecx
	leal	(%rcx,%rcx,4), %ecx
	negl	%ecx
	.loc	1 185 34 is_stmt 0 discriminator 1 # sp.c:185:34
	testl	%eax, %eax
	je	.LBB0_18
# BB#17:                                # %for.body57
                                        #   in Loop: Header=BB0_16 Depth=1
	.loc	1 185 15                # sp.c:185:15
	leal	1(%rax,%rcx), %eax
	testl	%eax, %eax
	jne	.LBB0_19
.LBB0_18:                               # %if.then61
                                        #   in Loop: Header=BB0_16 Depth=1
.Ltmp34:
	.loc	1 186 7 is_stmt 1       # sp.c:186:7
	movl	$.L.str.29, %edi
	xorl	%eax, %eax
	movl	%ebx, %esi
	callq	printf
.Ltmp35:
.LBB0_19:                               # %if.end63
                                        #   in Loop: Header=BB0_16 Depth=1
	.loc	1 189 5                 # sp.c:189:5
	xorl	%eax, %eax
	callq	adi
.Ltmp36:
	.loc	1 184 23 discriminator 1 # sp.c:184:23
	cmpl	96(%rsp), %ebx
	jl	.LBB0_16
.Ltmp37:
.LBB0_20:                               # %for.end66
	.loc	1 192 3                 # sp.c:192:3
	movl	$1, %edi
	callq	timer_stop
	.loc	1 193 10                # sp.c:193:10
	movl	$1, %edi
	callq	timer_read
	movsd	%xmm0, 104(%rsp)        # 8-byte Spill
.Ltmp38:
	#DEBUG_VALUE: main:tmax <- [%RSP+104]
	.loc	1 195 10                # sp.c:195:10
	movl	96(%rsp), %edi
.Ltmp39:
	#DEBUG_VALUE: main:niter <- %EDI
	leaq	103(%rsp), %rsi
.Ltmp40:
	#DEBUG_VALUE: main:Class <- [%RSI+0]
	leaq	132(%rsp), %rdx
.Ltmp41:
	#DEBUG_VALUE: main:verified <- [%RDX+0]
	.loc	1 195 3 is_stmt 0       # sp.c:195:3
	callq	verify
.Ltmp42:
	movsd	104(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
.Ltmp43:
	#DEBUG_VALUE: main:tmax <- %XMM0
	.loc	1 198 10 is_stmt 1      # sp.c:198:10
	movl	grid_points(%rip), %edx
.Ltmp44:
	.loc	1 198 25 is_stmt 0      # sp.c:198:25
	movl	grid_points+4(%rip), %ecx
.Ltmp45:
	.loc	1 197 12 is_stmt 1      # sp.c:197:12
	pxor	%xmm1, %xmm1
.Ltmp46:
	.loc	1 197 7 is_stmt 0       # sp.c:197:7
	ucomisd	%xmm1, %xmm0
	jne	.LBB0_22
	jp	.LBB0_22
	jmp	.LBB0_21
.Ltmp47:
.LBB0_22:                               # %if.then69
	#DEBUG_VALUE: main:tmax <- %XMM0
	#DEBUG_VALUE: main:Class <- [%RSI+0]
	#DEBUG_VALUE: main:niter <- %EDI
	.loc	1 198 24 is_stmt 1      # sp.c:198:24
	movl	%ecx, %eax
	imull	%edx, %eax
	.loc	1 198 40 is_stmt 0      # sp.c:198:40
	movl	grid_points+8(%rip), %r8d
	.loc	1 198 39                # sp.c:198:39
	imull	%r8d, %eax
.Ltmp48:
	#DEBUG_VALUE: main:n3 <- %EAX
	.loc	1 199 24 is_stmt 1      # sp.c:199:24
	leal	(%rcx,%rdx), %esi
.Ltmp49:
	.loc	1 199 39 is_stmt 0      # sp.c:199:39
	addl	%r8d, %esi
	.loc	1 199 9                 # sp.c:199:9
	cvtsi2sdl	%esi, %xmm3
	.loc	1 199 55                # sp.c:199:55
	divsd	.LCPI0_0(%rip), %xmm3
.Ltmp50:
	#DEBUG_VALUE: main:t <- %XMM3
	.loc	1 200 25 is_stmt 1      # sp.c:200:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	1 200 23 is_stmt 0      # sp.c:200:23
	mulsd	.LCPI0_1(%rip), %xmm1
	.loc	1 201 29 is_stmt 1      # sp.c:201:29
	movapd	%xmm3, %xmm2
	mulsd	%xmm2, %xmm2
	.loc	1 201 24 is_stmt 0      # sp.c:201:24
	mulsd	.LCPI0_2(%rip), %xmm2
	.loc	1 201 14                # sp.c:201:14
	addsd	%xmm1, %xmm2
	.loc	1 202 24 is_stmt 1      # sp.c:202:24
	mulsd	.LCPI0_3(%rip), %xmm3
.Ltmp51:
	.loc	1 202 14 is_stmt 0      # sp.c:202:14
	addsd	%xmm2, %xmm3
	.loc	1 203 14 is_stmt 1      # sp.c:203:14
	addsd	.LCPI0_4(%rip), %xmm3
	.loc	1 203 35 is_stmt 0      # sp.c:203:35
	movl	96(%rsp), %r9d
.Ltmp52:
	#DEBUG_VALUE: main:niter <- %R9D
	.loc	1 203 27                # sp.c:203:27
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%r9d, %xmm1
	.loc	1 203 25                # sp.c:203:25
	mulsd	%xmm3, %xmm1
	movsd	.LCPI0_5(%rip), %xmm2   # xmm2 = mem[0],zero
	.loc	1 203 48                # sp.c:203:48
	mulsd	%xmm0, %xmm2
	.loc	1 203 41                # sp.c:203:41
	divsd	%xmm2, %xmm1
.Ltmp53:
	#DEBUG_VALUE: main:mflops <- %XMM1
	jmp	.LBB0_23
.Ltmp54:
.LBB0_13:                               # %if.then42
	.loc	1 155 5 is_stmt 1       # sp.c:155:5
	movl	$.L.str.27, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	1 156 5                 # sp.c:156:5
	movl	$.Lstr.45, %edi
	callq	puts
	jmp	.LBB0_14
.Ltmp55:
.LBB0_21:                               # %for.end66.if.end85_crit_edge
	#DEBUG_VALUE: main:tmax <- %XMM0
	#DEBUG_VALUE: main:Class <- [%RSI+0]
	#DEBUG_VALUE: main:niter <- %EDI
	.loc	1 209 33                # sp.c:209:33
	movl	grid_points+8(%rip), %r8d
	.loc	1 209 49 is_stmt 0      # sp.c:209:49
	movl	96(%rsp), %r9d
.Ltmp56:
.LBB0_23:                               # %if.end85
	#DEBUG_VALUE: main:tmax <- %XMM0
	.loc	1 211 17 is_stmt 1      # sp.c:211:17
	movl	132(%rsp), %eax
.Ltmp57:
	#DEBUG_VALUE: main:verified <- %EAX
	.loc	1 208 3                 # sp.c:208:3
	movsbl	103(%rsp), %esi
	movl	%eax, 8(%rsp)
	movq	$.L.str.34, 80(%rsp)
	movq	$.L.str.34, 72(%rsp)
	movq	$.L.str.34, 64(%rsp)
	movq	$.L.str.35, 56(%rsp)
	movq	$.L.str.34, 48(%rsp)
	movq	$.L.str.34, 40(%rsp)
	movq	$.L.str.34, 32(%rsp)
	movq	$.L.str.33, 24(%rsp)
	movq	$.L.str.32, 16(%rsp)
	movq	$.L.str.31, (%rsp)
.Ltmp58:
	#DEBUG_VALUE: main:niter <- %R9D
	movl	$.L.str.30, %edi
	callq	print_results
.Ltmp59:
	.loc	1 217 7                 # sp.c:217:7
	cmpl	$0, timeron(%rip)
	je	.LBB0_14
.Ltmp60:
# BB#24:                                # %for.body90.preheader
	#DEBUG_VALUE: main:tmax <- %XMM0
	#DEBUG_VALUE: main:niter <- %R9D
	#DEBUG_VALUE: main:verified <- %EAX
	.loc	1 219 18                # sp.c:219:18
	movl	$1, %edi
	callq	timer_read
.Ltmp61:
	.loc	1 219 16 is_stmt 0      # sp.c:219:16
	movsd	%xmm0, 152(%rsp)        # 8-byte Spill
	movsd	%xmm0, 200(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$2, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 208(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$3, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 216(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$4, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 224(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$5, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 232(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$6, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 240(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$7, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 248(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$8, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 256(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$9, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 112(%rsp)        # 8-byte Spill
	movsd	%xmm0, 264(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$10, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 120(%rsp)        # 8-byte Spill
	movsd	%xmm0, 272(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$11, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 280(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$12, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 288(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$13, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 296(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$14, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 304(%rsp)
	.loc	1 219 18                # sp.c:219:18
	movl	$15, %edi
	callq	timer_read
	.loc	1 219 16                # sp.c:219:16
	movsd	%xmm0, 312(%rsp)
.Ltmp62:
	.loc	1 221 14 is_stmt 1      # sp.c:221:14
	xorpd	%xmm0, %xmm0
.Ltmp63:
	#DEBUG_VALUE: main:tmax <- 1.000000e+00
	movsd	104(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
.Ltmp64:
	.loc	1 221 9 is_stmt 0       # sp.c:221:9
	movapd	%xmm1, %xmm2
	cmpeqsd	%xmm0, %xmm2
	movsd	.LCPI0_6(%rip), %xmm0   # xmm0 = mem[0],zero
	andpd	%xmm2, %xmm0
	andnpd	%xmm1, %xmm2
	orpd	%xmm0, %xmm2
	.loc	1 223 5 is_stmt 1       # sp.c:223:5
	movsd	%xmm2, 104(%rsp)        # 8-byte Spill
	movl	$.Lstr.44, %edi
	callq	puts
.Ltmp65:
	movsd	152(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
.Ltmp66:
	#DEBUG_VALUE: main:i <- 1
	.loc	1 228 13                # sp.c:228:13
	movsd	208(%rsp), %xmm1        # xmm1 = mem[0],zero
	.loc	1 230 13                # sp.c:230:13
	movsd	232(%rsp), %xmm2        # xmm2 = mem[0],zero
	.loc	1 228 27                # sp.c:228:27
	addsd	216(%rsp), %xmm1
	.loc	1 228 43 is_stmt 0      # sp.c:228:43
	addsd	224(%rsp), %xmm1
.Ltmp67:
	#DEBUG_VALUE: main:t <- %XMM1
	.loc	1 229 65 is_stmt 1      # sp.c:229:65
	movsd	%xmm1, 184(%rsp)        # 8-byte Spill
	movsd	.LCPI0_7(%rip), %xmm3   # xmm3 = mem[0],zero
	movapd	%xmm1, %xmm4
	mulsd	%xmm3, %xmm4
	movsd	104(%rsp), %xmm5        # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	1 229 70 is_stmt 0      # sp.c:229:70
	divsd	%xmm5, %xmm4
	movsd	%xmm4, 176(%rsp)        # 8-byte Spill
	.loc	1 230 26 is_stmt 1      # sp.c:230:26
	subsd	%xmm1, %xmm2
.Ltmp68:
	#DEBUG_VALUE: main:t <- %XMM2
	.loc	1 231 66                # sp.c:231:66
	movsd	%xmm2, 144(%rsp)        # 8-byte Spill
.Ltmp69:
	#DEBUG_VALUE: main:t <- [%RSP+144]
	mulsd	%xmm3, %xmm2
	.loc	1 231 71 is_stmt 0      # sp.c:231:71
	divsd	%xmm5, %xmm2
	movsd	%xmm2, 168(%rsp)        # 8-byte Spill
.Ltmp70:
	.loc	1 233 13 is_stmt 1      # sp.c:233:13
	movsd	256(%rsp), %xmm1        # xmm1 = mem[0],zero
	movsd	112(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	1 233 29 is_stmt 0      # sp.c:233:29
	subsd	%xmm2, %xmm1
	movsd	120(%rsp), %xmm4        # 8-byte Reload
                                        # xmm4 = mem[0],zero
	.loc	1 233 46                # sp.c:233:46
	subsd	%xmm4, %xmm1
.Ltmp71:
	#DEBUG_VALUE: main:t <- %XMM1
	.loc	1 234 66 is_stmt 1      # sp.c:234:66
	movsd	%xmm1, 136(%rsp)        # 8-byte Spill
.Ltmp72:
	#DEBUG_VALUE: main:t <- [%RSP+136]
	mulsd	%xmm3, %xmm1
	.loc	1 234 71 is_stmt 0      # sp.c:234:71
	divsd	%xmm5, %xmm1
	movsd	%xmm1, 160(%rsp)        # 8-byte Spill
	movapd	%xmm2, %xmm1
.Ltmp73:
	.loc	1 236 28 is_stmt 1      # sp.c:236:28
	addsd	%xmm4, %xmm1
.Ltmp74:
	#DEBUG_VALUE: main:t <- %XMM1
	.loc	1 237 64                # sp.c:237:64
	movsd	%xmm1, 112(%rsp)        # 8-byte Spill
.Ltmp75:
	#DEBUG_VALUE: main:t <- [%RSP+112]
	mulsd	%xmm3, %xmm1
	.loc	1 237 69 is_stmt 0      # sp.c:237:69
	divsd	%xmm5, %xmm1
	movsd	%xmm1, 120(%rsp)        # 8-byte Spill
	movl	$.L.str.2, %esi
	movl	$2, %ebx
	jmp	.LBB0_25
.Ltmp76:
	.p2align	4, 0x90
.LBB0_33:                               # %for.inc155.for.body104_crit_edge
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 226 11 is_stmt 1      # sp.c:226:11
	movq	320(%rsp,%rbx,8), %rsi
	.loc	1 226 23 is_stmt 0      # sp.c:226:23
	movsd	192(%rsp,%rbx,8), %xmm0 # xmm0 = mem[0],zero
.Ltmp77:
	.loc	1 224 5 is_stmt 1 discriminator 1 # sp.c:224:5
	incq	%rbx
.LBB0_25:                               # %for.body104
                                        # =>This Inner Loop Header: Depth=1
.Ltmp78:
	.loc	1 226 41                # sp.c:226:41
	movapd	%xmm0, %xmm1
	mulsd	.LCPI0_7(%rip), %xmm1
	.loc	1 226 46 is_stmt 0      # sp.c:226:46
	divsd	104(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	1 225 7 is_stmt 1       # sp.c:225:7
	movl	$.L.str.37, %edi
	movb	$2, %al
	callq	printf
	.loc	1 227 11                # sp.c:227:11
	leal	-1(%rbx), %eax
	cmpl	$10, %eax
	je	.LBB0_30
# BB#26:                                # %for.body104
                                        #   in Loop: Header=BB0_25 Depth=1
	cmpl	$8, %eax
	je	.LBB0_29
# BB#27:                                # %for.body104
                                        #   in Loop: Header=BB0_25 Depth=1
	cmpl	$5, %eax
	jne	.LBB0_32
# BB#28:                                # %if.then116
                                        #   in Loop: Header=BB0_25 Depth=1
.Ltmp79:
	.loc	1 229 9                 # sp.c:229:9
	movl	$.L.str.38, %edi
	movl	$.L.str.39, %esi
	movb	$2, %al
	movsd	184(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	176(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	printf
	.loc	1 231 9                 # sp.c:231:9
	movl	$.L.str.38, %edi
	movl	$.L.str.40, %esi
	movb	$2, %al
	movsd	144(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	168(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	jmp	.LBB0_31
.Ltmp80:
	.p2align	4, 0x90
.LBB0_30:                               # %if.then145
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 237 9                 # sp.c:237:9
	movl	$.L.str.38, %edi
	movl	$.L.str.42, %esi
	movb	$2, %al
	movsd	112(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	120(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	jmp	.LBB0_31
.Ltmp81:
	.p2align	4, 0x90
.LBB0_29:                               # %if.then133
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 234 9                 # sp.c:234:9
	movl	$.L.str.38, %edi
	movl	$.L.str.41, %esi
	movb	$2, %al
	movsd	136(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	160(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
.Ltmp82:
.LBB0_31:                               # %for.inc155
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 237 9                 # sp.c:237:9
	callq	printf
.Ltmp83:
.LBB0_32:                               # %for.inc155
                                        #   in Loop: Header=BB0_25 Depth=1
	.loc	1 224 5 discriminator 1 # sp.c:224:5
	cmpq	$16, %rbx
	jne	.LBB0_33
.Ltmp84:
.LBB0_14:                               # %cleanup
	.loc	1 243 1                 # sp.c:243:1
	xorl	%eax, %eax
	addq	$448, %rsp              # imm = 0x1C0
	popq	%rbx
	retq
.Ltmp85:
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI1_0:
	.quad	4616189618054758400     # double 4
	.quad	4617315517961601024     # double 5
.LCPI1_1:
	.quad	4613937818241073152     # double 3
	.quad	4602678819172646912     # double 0.5
.LCPI1_2:
	.quad	4581421828931458171     # double 0.02
	.quad	4576918229304087675     # double 0.01
.LCPI1_3:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4602678819172646912     # double 0.5
.LCPI1_4:
	.quad	4600877379321698714     # double 0.40000000000000002
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI1_5:
	.quad	4607182418800017408     # double 1
	.quad	4611686018427387904     # double 2
.LCPI1_6:
	.quad	4613937818241073152     # double 3
	.quad	4576918229304087675     # double 0.01
.LCPI1_7:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4581421828931458171     # double 0.02
.LCPI1_8:
	.quad	4602678819172646912     # double 0.5
	.quad	4611686018427387904     # double 2
.LCPI1_9:
	.quad	4611686018427387904     # double 2
	.quad	4613937818241073152     # double 3
.LCPI1_10:
	.quad	4585925428558828667     # double 0.040000000000000001
	.quad	4584304132692975288     # double 0.029999999999999999
.LCPI1_11:
	.quad	4587366580439587226     # double 0.050000000000000003
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI1_12:
	.quad	4602678819172646912     # double 0.5
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI1_13:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4587366580439587226     # double 0.050000000000000003
.LCPI1_14:
	.quad	4585925428558828667     # double 0.040000000000000001
	.quad	4596373779694328218     # double 0.20000000000000001
.LCPI1_15:
	.quad	4591870180066957722     # double 0.10000000000000001
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI1_16:
	.quad	4617315517961601024     # double 5
	.quad	4616189618054758400     # double 4
.LCPI1_17:
	.quad	4613937818241073152     # double 3
	.quad	4611686018427387904     # double 2
.LCPI1_18:
	.quad	4591870180066957722     # double 0.10000000000000001
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI1_19:
	.quad	4587366580439587226     # double 0.050000000000000003
	.quad	4585925428558828667     # double 0.040000000000000001
.LCPI1_20:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI1_21:
	.quad	4599075939470750515     # double 0.29999999999999999
	.quad	4596373779694328218     # double 0.20000000000000001
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI1_22:
	.quad	4607182418800017408     # double 1
.LCPI1_23:
	.quad	4598175219545276416     # double 0.25
.LCPI1_24:
	.quad	4616189618054758400     # double 4
.LCPI1_25:
	.quad	4617315517961601024     # double 5
.LCPI1_26:
	.quad	4618441417868443648     # double 6
.LCPI1_27:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI1_28:
	.quad	4604930618986332160     # double 0.75
.LCPI1_29:
	.quad	4608683618675807573     # double 1.3333333333333333
.LCPI1_30:
	.quad	4595172819793696085     # double 0.16666666666666666
	.text
	.globl	set_constants
	.p2align	4, 0x90
	.type	set_constants,@function
set_constants:                          # @set_constants
.Lfunc_begin1:
	.file	6 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/set_constants.c"
	.loc	6 38 0                  # set_constants.c:38:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	6 39 13 prologue_end    # set_constants.c:39:13
	movabsq	$4611686018427387904, %rcx # imm = 0x4000000000000000
	movq	%rcx, ce(%rip)
	.loc	6 41 13                 # set_constants.c:41:13
	xorps	%xmm0, %xmm0
	movups	%xmm0, ce+8(%rip)
	.loc	6 42 13                 # set_constants.c:42:13
	movaps	.LCPI1_0(%rip), %xmm1   # xmm1 = [4.000000e+00,5.000000e+00]
	movups	%xmm1, ce+24(%rip)
	.loc	6 44 13                 # set_constants.c:44:13
	movaps	.LCPI1_1(%rip), %xmm1   # xmm1 = [3.000000e+00,5.000000e-01]
	movups	%xmm1, ce+40(%rip)
	.loc	6 46 13                 # set_constants.c:46:13
	movaps	.LCPI1_2(%rip), %xmm1   # xmm1 = [2.000000e-02,1.000000e-02]
	movups	%xmm1, ce+56(%rip)
	.loc	6 48 13                 # set_constants.c:48:13
	movaps	.LCPI1_3(%rip), %xmm1   # xmm1 = [3.000000e-02,5.000000e-01]
	movups	%xmm1, ce+72(%rip)
	.loc	6 50 13                 # set_constants.c:50:13
	movaps	.LCPI1_4(%rip), %xmm1   # xmm1 = [4.000000e-01,3.000000e-01]
	movups	%xmm1, ce+88(%rip)
	.loc	6 53 13                 # set_constants.c:53:13
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, ce+104(%rip)
	.loc	6 55 13                 # set_constants.c:55:13
	movaps	%xmm0, ce+112(%rip)
	movq	$0, ce+128(%rip)
	.loc	6 57 13                 # set_constants.c:57:13
	movaps	.LCPI1_5(%rip), %xmm2   # xmm2 = [1.000000e+00,2.000000e+00]
	movups	%xmm2, ce+136(%rip)
	.loc	6 59 13                 # set_constants.c:59:13
	movaps	.LCPI1_6(%rip), %xmm2   # xmm2 = [3.000000e+00,1.000000e-02]
	movups	%xmm2, ce+152(%rip)
	.loc	6 61 13                 # set_constants.c:61:13
	movaps	.LCPI1_7(%rip), %xmm2   # xmm2 = [3.000000e-02,2.000000e-02]
	movups	%xmm2, ce+168(%rip)
	.loc	6 63 13                 # set_constants.c:63:13
	movups	%xmm1, ce+184(%rip)
	.loc	6 65 13                 # set_constants.c:65:13
	movaps	.LCPI1_8(%rip), %xmm1   # xmm1 = [5.000000e-01,2.000000e+00]
	movups	%xmm1, ce+200(%rip)
	.loc	6 68 13                 # set_constants.c:68:13
	movq	%rcx, ce+216(%rip)
	.loc	6 70 13                 # set_constants.c:70:13
	movaps	%xmm0, ce+224(%rip)
	movq	$0, ce+240(%rip)
	.loc	6 72 13                 # set_constants.c:72:13
	movaps	.LCPI1_9(%rip), %xmm1   # xmm1 = [2.000000e+00,3.000000e+00]
	movups	%xmm1, ce+248(%rip)
	.loc	6 74 13                 # set_constants.c:74:13
	movaps	.LCPI1_10(%rip), %xmm2  # xmm2 = [4.000000e-02,3.000000e-02]
	movups	%xmm2, ce+264(%rip)
	.loc	6 76 13                 # set_constants.c:76:13
	movaps	.LCPI1_11(%rip), %xmm2  # xmm2 = [5.000000e-02,3.000000e-01]
	movups	%xmm2, ce+280(%rip)
	.loc	6 78 13                 # set_constants.c:78:13
	movaps	.LCPI1_12(%rip), %xmm2  # xmm2 = [5.000000e-01,4.000000e-01]
	movups	%xmm2, ce+296(%rip)
	.loc	6 81 13                 # set_constants.c:81:13
	movq	%rcx, ce+312(%rip)
	.loc	6 82 13                 # set_constants.c:82:13
	movq	%rcx, ce+320(%rip)
	.loc	6 84 13                 # set_constants.c:84:13
	movups	%xmm0, ce+328(%rip)
	movq	$0, ce+344(%rip)
	.loc	6 86 13                 # set_constants.c:86:13
	movaps	%xmm1, ce+352(%rip)
	.loc	6 88 13                 # set_constants.c:88:13
	movaps	.LCPI1_13(%rip), %xmm0  # xmm0 = [3.000000e-02,5.000000e-02]
	movaps	%xmm0, ce+368(%rip)
	.loc	6 90 13                 # set_constants.c:90:13
	movaps	.LCPI1_14(%rip), %xmm0  # xmm0 = [4.000000e-02,2.000000e-01]
	movaps	%xmm0, ce+384(%rip)
	.loc	6 92 13                 # set_constants.c:92:13
	movaps	.LCPI1_15(%rip), %xmm0  # xmm0 = [1.000000e-01,3.000000e-01]
	movaps	%xmm0, ce+400(%rip)
	.loc	6 95 13                 # set_constants.c:95:13
	movaps	.LCPI1_16(%rip), %xmm0  # xmm0 = [5.000000e+00,4.000000e+00]
	movaps	%xmm0, ce+416(%rip)
	.loc	6 97 13                 # set_constants.c:97:13
	movaps	.LCPI1_17(%rip), %xmm0  # xmm0 = [3.000000e+00,2.000000e+00]
	movaps	%xmm0, ce+432(%rip)
	.loc	6 99 13                 # set_constants.c:99:13
	movaps	.LCPI1_18(%rip), %xmm0  # xmm0 = [1.000000e-01,4.000000e-01]
	movaps	%xmm0, ce+448(%rip)
	.loc	6 50 13                 # set_constants.c:50:13
	movabsq	$4599075939470750515, %rcx # imm = 0x3FD3333333333333
	.loc	6 101 13                # set_constants.c:101:13
	movq	%rcx, ce+464(%rip)
	.loc	6 102 13                # set_constants.c:102:13
	movaps	.LCPI1_19(%rip), %xmm0  # xmm0 = [5.000000e-02,4.000000e-02]
	movups	%xmm0, ce+472(%rip)
	.loc	6 104 13                # set_constants.c:104:13
	movaps	.LCPI1_20(%rip), %xmm0  # xmm0 = [3.000000e-02,1.000000e-01]
	movups	%xmm0, ce+488(%rip)
	.loc	6 106 13                # set_constants.c:106:13
	movaps	.LCPI1_21(%rip), %xmm0  # xmm0 = [3.000000e-01,2.000000e-01]
	movups	%xmm0, ce+504(%rip)
	.loc	6 109 6                 # set_constants.c:109:6
	movabsq	$4608983858650965606, %rcx # imm = 0x3FF6666666666666
	movq	%rcx, c1(%rip)
	.loc	6 50 13                 # set_constants.c:50:13
	movabsq	$4600877379321698714, %rdx # imm = 0x3FD999999999999A
	.loc	6 110 6                 # set_constants.c:110:6
	movq	%rdx, c2(%rip)
	.loc	6 92 13                 # set_constants.c:92:13
	movabsq	$4591870180066957722, %rdx # imm = 0x3FB999999999999A
	.loc	6 111 6                 # set_constants.c:111:6
	movq	%rdx, c3(%rip)
	.loc	6 112 6                 # set_constants.c:112:6
	movq	%rax, c4(%rip)
	.loc	6 113 6                 # set_constants.c:113:6
	movq	%rcx, c5(%rip)
	.loc	6 115 6                 # set_constants.c:115:6
	movabsq	$4604544271217802189, %rcx # imm = 0x3FE6A09E667F3BCD
	movq	%rcx, bt(%rip)
	.loc	6 117 26                # set_constants.c:117:26
	movl	grid_points(%rip), %ecx
	.loc	6 117 40 is_stmt 0      # set_constants.c:117:40
	decl	%ecx
	.loc	6 117 17                # set_constants.c:117:17
	cvtsi2sdl	%ecx, %xmm2
	.loc	6 53 13 is_stmt 1       # set_constants.c:53:13
	movsd	.LCPI1_22(%rip), %xmm0  # xmm0 = mem[0],zero
	.loc	6 117 15                # set_constants.c:117:15
	movapd	%xmm0, %xmm1
	divsd	%xmm2, %xmm1
	.loc	6 117 9 is_stmt 0       # set_constants.c:117:9
	movsd	%xmm1, dnxm1(%rip)
	.loc	6 118 26 is_stmt 1      # set_constants.c:118:26
	movl	grid_points+4(%rip), %ecx
	.loc	6 118 40 is_stmt 0      # set_constants.c:118:40
	decl	%ecx
	.loc	6 118 17                # set_constants.c:118:17
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%ecx, %xmm2
	.loc	6 118 15                # set_constants.c:118:15
	movapd	%xmm0, %xmm5
	divsd	%xmm2, %xmm5
	.loc	6 118 9                 # set_constants.c:118:9
	movsd	%xmm5, dnym1(%rip)
	.loc	6 119 26 is_stmt 1      # set_constants.c:119:26
	movl	grid_points+8(%rip), %ecx
	.loc	6 119 40 is_stmt 0      # set_constants.c:119:40
	decl	%ecx
	.loc	6 119 17                # set_constants.c:119:17
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%ecx, %xmm2
	.loc	6 119 15                # set_constants.c:119:15
	movapd	%xmm0, %xmm3
	divsd	%xmm2, %xmm3
	.loc	6 119 9                 # set_constants.c:119:9
	movsd	%xmm3, dnzm1(%rip)
	.loc	6 121 8 is_stmt 1       # set_constants.c:121:8
	movabsq	$4603219251127931371, %rcx # imm = 0x3FE1EB851EB851EB
	movq	%rcx, c1c2(%rip)
	.loc	6 122 8                 # set_constants.c:122:8
	movabsq	$4611505874442293083, %rcx # imm = 0x3FFF5C28F5C28F5B
	movq	%rcx, c1c5(%rip)
	.loc	6 123 8                 # set_constants.c:123:8
	movq	%rdx, c3c4(%rip)
	.loc	6 124 9                 # set_constants.c:124:9
	movabsq	$4596229664506252361, %rcx # imm = 0x3FC916872B020C49
	movq	%rcx, c1345(%rip)
	.loc	6 126 9                 # set_constants.c:126:9
	movabsq	$-4616549906024948042, %rcx # imm = 0xBFEEB851EB851EB6
	movq	%rcx, conz1(%rip)
	.loc	6 128 22                # set_constants.c:128:22
	movapd	%xmm1, %xmm4
	mulsd	%xmm4, %xmm4
	.loc	6 128 13 is_stmt 0      # set_constants.c:128:13
	movapd	%xmm0, %xmm10
	divsd	%xmm4, %xmm10
	.loc	6 128 7                 # set_constants.c:128:7
	movsd	%xmm10, tx1(%rip)
	.loc	6 130 13 is_stmt 1      # set_constants.c:130:13
	movapd	%xmm0, %xmm8
	divsd	%xmm1, %xmm8
	.loc	6 129 20                # set_constants.c:129:20
	addsd	%xmm1, %xmm1
	.loc	6 129 13 is_stmt 0      # set_constants.c:129:13
	movapd	%xmm0, %xmm6
	divsd	%xmm1, %xmm6
	.loc	6 129 7                 # set_constants.c:129:7
	movsd	%xmm6, tx2(%rip)
	.loc	6 130 7 is_stmt 1       # set_constants.c:130:7
	movsd	%xmm8, tx3(%rip)
	.loc	6 132 22                # set_constants.c:132:22
	movapd	%xmm5, %xmm1
	mulsd	%xmm1, %xmm1
	.loc	6 132 13 is_stmt 0      # set_constants.c:132:13
	movapd	%xmm0, %xmm4
	divsd	%xmm1, %xmm4
	.loc	6 132 7                 # set_constants.c:132:7
	movsd	%xmm4, ty1(%rip)
	.loc	6 134 13 is_stmt 1      # set_constants.c:134:13
	movapd	%xmm0, %xmm1
	divsd	%xmm5, %xmm1
	.loc	6 133 20                # set_constants.c:133:20
	addsd	%xmm5, %xmm5
	.loc	6 133 13 is_stmt 0      # set_constants.c:133:13
	movapd	%xmm0, %xmm7
	divsd	%xmm5, %xmm7
	.loc	6 133 7                 # set_constants.c:133:7
	movsd	%xmm7, ty2(%rip)
	.loc	6 134 7 is_stmt 1       # set_constants.c:134:7
	movsd	%xmm1, ty3(%rip)
	.loc	6 136 13                # set_constants.c:136:13
	movapd	%xmm0, %xmm9
	.loc	6 137 20                # set_constants.c:137:20
	movapd	%xmm3, %xmm2
	.loc	6 137 13 is_stmt 0      # set_constants.c:137:13
	movapd	%xmm0, %xmm5
	.loc	6 138 13 is_stmt 1      # set_constants.c:138:13
	divsd	%xmm3, %xmm0
	.loc	6 136 22                # set_constants.c:136:22
	mulsd	%xmm3, %xmm3
	.loc	6 136 13 is_stmt 0      # set_constants.c:136:13
	divsd	%xmm3, %xmm9
	.loc	6 136 7                 # set_constants.c:136:7
	movsd	%xmm9, tz1(%rip)
	.loc	6 137 20 is_stmt 1      # set_constants.c:137:20
	addsd	%xmm2, %xmm2
	.loc	6 137 13 is_stmt 0      # set_constants.c:137:13
	divsd	%xmm2, %xmm5
	.loc	6 137 7                 # set_constants.c:137:7
	movsd	%xmm5, tz2(%rip)
	.loc	6 138 7 is_stmt 1       # set_constants.c:138:7
	movsd	%xmm0, tz3(%rip)
	.loc	6 140 7                 # set_constants.c:140:7
	movabsq	$4604930618986332160, %rcx # imm = 0x3FE8000000000000
	movq	%rcx, dx1(%rip)
	.loc	6 141 7                 # set_constants.c:141:7
	movq	%rcx, dx2(%rip)
	.loc	6 142 7                 # set_constants.c:142:7
	movq	%rcx, dx3(%rip)
	.loc	6 143 7                 # set_constants.c:143:7
	movq	%rcx, dx4(%rip)
	.loc	6 144 7                 # set_constants.c:144:7
	movq	%rcx, dx5(%rip)
	.loc	6 146 7                 # set_constants.c:146:7
	movq	%rcx, dy1(%rip)
	.loc	6 147 7                 # set_constants.c:147:7
	movq	%rcx, dy2(%rip)
	.loc	6 148 7                 # set_constants.c:148:7
	movq	%rcx, dy3(%rip)
	.loc	6 149 7                 # set_constants.c:149:7
	movq	%rcx, dy4(%rip)
	.loc	6 150 7                 # set_constants.c:150:7
	movq	%rcx, dy5(%rip)
	.loc	6 152 7                 # set_constants.c:152:7
	movq	%rax, dz1(%rip)
	.loc	6 153 7                 # set_constants.c:153:7
	movq	%rax, dz2(%rip)
	.loc	6 154 7                 # set_constants.c:154:7
	movq	%rax, dz3(%rip)
	.loc	6 155 7                 # set_constants.c:155:7
	movq	%rax, dz4(%rip)
	.loc	6 156 7                 # set_constants.c:156:7
	movq	%rax, dz5(%rip)
	.loc	6 158 9 discriminator 3 # set_constants.c:158:9
	movq	%rcx, dxmax(%rip)
	.loc	6 159 9 discriminator 3 # set_constants.c:159:9
	movq	%rcx, dymax(%rip)
	.loc	6 160 9 discriminator 3 # set_constants.c:160:9
	movq	%rax, dzmax(%rip)
	.loc	6 162 8 discriminator 9 # set_constants.c:162:8
	movabsq	$4598175219545276416, %rcx # imm = 0x3FD0000000000000
	movq	%rcx, dssp(%rip)
	.loc	6 164 10                # set_constants.c:164:10
	movq	%rax, c4dssp(%rip)
	.loc	6 165 10                # set_constants.c:165:10
	movabsq	$4608308318706860032, %rax # imm = 0x3FF4000000000000
	movq	%rax, c5dssp(%rip)
	.loc	6 167 11                # set_constants.c:167:11
	movsd	dt(%rip), %xmm2         # xmm2 = mem[0],zero
	.loc	6 167 13 is_stmt 0      # set_constants.c:167:13
	movapd	%xmm2, %xmm3
	mulsd	%xmm10, %xmm3
	.loc	6 167 9                 # set_constants.c:167:9
	movsd	%xmm3, dttx1(%rip)
	.loc	6 168 13 is_stmt 1      # set_constants.c:168:13
	mulsd	%xmm2, %xmm6
	.loc	6 168 9 is_stmt 0       # set_constants.c:168:9
	movsd	%xmm6, dttx2(%rip)
	.loc	6 169 13 is_stmt 1      # set_constants.c:169:13
	movapd	%xmm2, %xmm6
	mulsd	%xmm4, %xmm6
	.loc	6 169 9 is_stmt 0       # set_constants.c:169:9
	movsd	%xmm6, dtty1(%rip)
	.loc	6 170 13 is_stmt 1      # set_constants.c:170:13
	mulsd	%xmm2, %xmm7
	.loc	6 170 9 is_stmt 0       # set_constants.c:170:9
	movsd	%xmm7, dtty2(%rip)
	.loc	6 171 13 is_stmt 1      # set_constants.c:171:13
	movapd	%xmm2, %xmm7
	mulsd	%xmm9, %xmm7
	.loc	6 171 9 is_stmt 0       # set_constants.c:171:9
	movsd	%xmm7, dttz1(%rip)
	.loc	6 172 13 is_stmt 1      # set_constants.c:172:13
	mulsd	%xmm2, %xmm5
	.loc	6 172 9 is_stmt 0       # set_constants.c:172:9
	movsd	%xmm5, dttz2(%rip)
	.loc	6 174 16 is_stmt 1      # set_constants.c:174:16
	addsd	%xmm3, %xmm3
	.loc	6 174 11 is_stmt 0      # set_constants.c:174:11
	movsd	%xmm3, c2dttx1(%rip)
	.loc	6 175 16 is_stmt 1      # set_constants.c:175:16
	addsd	%xmm6, %xmm6
	.loc	6 175 11 is_stmt 0      # set_constants.c:175:11
	movsd	%xmm6, c2dtty1(%rip)
	.loc	6 176 16 is_stmt 1      # set_constants.c:176:16
	addsd	%xmm7, %xmm7
	.loc	6 176 11 is_stmt 0      # set_constants.c:176:11
	movsd	%xmm7, c2dttz1(%rip)
	.loc	6 178 14 is_stmt 1      # set_constants.c:178:14
	mulsd	.LCPI1_23(%rip), %xmm2
	.loc	6 178 10 is_stmt 0      # set_constants.c:178:10
	movsd	%xmm2, dtdssp(%rip)
	.loc	6 180 10 is_stmt 1      # set_constants.c:180:10
	movsd	%xmm2, comz1(%rip)
	movsd	.LCPI1_24(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	6 181 15                # set_constants.c:181:15
	mulsd	%xmm2, %xmm3
	.loc	6 181 10 is_stmt 0      # set_constants.c:181:10
	movsd	%xmm3, comz4(%rip)
	movsd	.LCPI1_25(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	6 182 15 is_stmt 1      # set_constants.c:182:15
	mulsd	%xmm2, %xmm3
	.loc	6 182 10 is_stmt 0      # set_constants.c:182:10
	movsd	%xmm3, comz5(%rip)
	.loc	6 183 15 is_stmt 1      # set_constants.c:183:15
	mulsd	.LCPI1_26(%rip), %xmm2
	.loc	6 183 10 is_stmt 0      # set_constants.c:183:10
	movsd	%xmm2, comz6(%rip)
	.loc	6 92 13 is_stmt 1       # set_constants.c:92:13
	movsd	.LCPI1_27(%rip), %xmm2  # xmm2 = mem[0],zero
	.loc	6 185 17                # set_constants.c:185:17
	movapd	%xmm8, %xmm6
	mulsd	%xmm2, %xmm6
	.loc	6 185 11 is_stmt 0      # set_constants.c:185:11
	movsd	%xmm6, c3c4tx3(%rip)
	.loc	6 186 17 is_stmt 1      # set_constants.c:186:17
	mulsd	%xmm2, %xmm1
	.loc	6 186 11 is_stmt 0      # set_constants.c:186:11
	movsd	%xmm1, c3c4ty3(%rip)
	.loc	6 187 17 is_stmt 1      # set_constants.c:187:17
	mulsd	%xmm2, %xmm0
	.loc	6 187 11 is_stmt 0      # set_constants.c:187:11
	movsd	%xmm0, c3c4tz3(%rip)
	.loc	6 140 7 is_stmt 1       # set_constants.c:140:7
	movsd	.LCPI1_28(%rip), %xmm2  # xmm2 = mem[0],zero
	.loc	6 189 15                # set_constants.c:189:15
	mulsd	%xmm2, %xmm10
	.loc	6 189 10 is_stmt 0      # set_constants.c:189:10
	movsd	%xmm10, dx1tx1(%rip)
	.loc	6 190 10 is_stmt 1      # set_constants.c:190:10
	movsd	%xmm10, dx2tx1(%rip)
	.loc	6 191 10                # set_constants.c:191:10
	movsd	%xmm10, dx3tx1(%rip)
	.loc	6 192 10                # set_constants.c:192:10
	movsd	%xmm10, dx4tx1(%rip)
	.loc	6 193 10                # set_constants.c:193:10
	movsd	%xmm10, dx5tx1(%rip)
	.loc	6 195 15                # set_constants.c:195:15
	mulsd	%xmm2, %xmm4
	.loc	6 195 10 is_stmt 0      # set_constants.c:195:10
	movsd	%xmm4, dy1ty1(%rip)
	.loc	6 196 10 is_stmt 1      # set_constants.c:196:10
	movsd	%xmm4, dy2ty1(%rip)
	.loc	6 197 10                # set_constants.c:197:10
	movsd	%xmm4, dy3ty1(%rip)
	.loc	6 198 10                # set_constants.c:198:10
	movsd	%xmm4, dy4ty1(%rip)
	.loc	6 199 10                # set_constants.c:199:10
	movsd	%xmm4, dy5ty1(%rip)
	.loc	6 201 10                # set_constants.c:201:10
	movsd	%xmm9, dz1tz1(%rip)
	.loc	6 202 10                # set_constants.c:202:10
	movsd	%xmm9, dz2tz1(%rip)
	.loc	6 203 10                # set_constants.c:203:10
	movsd	%xmm9, dz3tz1(%rip)
	.loc	6 204 10                # set_constants.c:204:10
	movsd	%xmm9, dz4tz1(%rip)
	.loc	6 205 10                # set_constants.c:205:10
	movsd	%xmm9, dz5tz1(%rip)
	.loc	6 207 9                 # set_constants.c:207:9
	movabsq	$4612811918334230528, %rax # imm = 0x4004000000000000
	movq	%rax, c2iv(%rip)
	.loc	6 208 9                 # set_constants.c:208:9
	movabsq	$4608683618675807573, %rax # imm = 0x3FF5555555555555
	movq	%rax, con43(%rip)
	.loc	6 209 9                 # set_constants.c:209:9
	movabsq	$4595172819793696085, %rax # imm = 0x3FC5555555555555
	movq	%rax, con16(%rip)
	.loc	6 208 9                 # set_constants.c:208:9
	movsd	.LCPI1_29(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	6 211 19                # set_constants.c:211:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm3, %xmm2
	.loc	6 211 25 is_stmt 0      # set_constants.c:211:25
	mulsd	%xmm8, %xmm2
	.loc	6 211 10                # set_constants.c:211:10
	movsd	%xmm2, xxcon1(%rip)
	.loc	6 212 19 is_stmt 1      # set_constants.c:212:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm8, %xmm2
	.loc	6 212 10 is_stmt 0      # set_constants.c:212:10
	movsd	%xmm2, xxcon2(%rip)
	.loc	6 213 20 is_stmt 1      # set_constants.c:213:20
	movsd	conz1(%rip), %xmm4      # xmm4 = mem[0],zero
	.loc	6 213 19 is_stmt 0      # set_constants.c:213:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm4, %xmm2
	.loc	6 213 25                # set_constants.c:213:25
	mulsd	%xmm8, %xmm2
	.loc	6 213 10                # set_constants.c:213:10
	movsd	%xmm2, xxcon3(%rip)
	.loc	6 209 9 is_stmt 1       # set_constants.c:209:9
	movsd	.LCPI1_30(%rip), %xmm5  # xmm5 = mem[0],zero
	.loc	6 214 19                # set_constants.c:214:19
	movapd	%xmm6, %xmm2
	mulsd	%xmm5, %xmm2
	.loc	6 214 25 is_stmt 0      # set_constants.c:214:25
	mulsd	%xmm8, %xmm2
	.loc	6 214 10                # set_constants.c:214:10
	movsd	%xmm2, xxcon4(%rip)
	.loc	6 215 20 is_stmt 1      # set_constants.c:215:20
	movsd	c1c5(%rip), %xmm2       # xmm2 = mem[0],zero
	.loc	6 215 19 is_stmt 0      # set_constants.c:215:19
	mulsd	%xmm2, %xmm6
	.loc	6 215 24                # set_constants.c:215:24
	mulsd	tx3(%rip), %xmm6
	.loc	6 215 10                # set_constants.c:215:10
	movsd	%xmm6, xxcon5(%rip)
	.loc	6 217 19 is_stmt 1      # set_constants.c:217:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm3, %xmm6
	.loc	6 217 26 is_stmt 0      # set_constants.c:217:26
	movsd	ty3(%rip), %xmm7        # xmm7 = mem[0],zero
	.loc	6 217 25                # set_constants.c:217:25
	mulsd	%xmm7, %xmm6
	.loc	6 217 10                # set_constants.c:217:10
	movsd	%xmm6, yycon1(%rip)
	.loc	6 218 19 is_stmt 1      # set_constants.c:218:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	6 218 10 is_stmt 0      # set_constants.c:218:10
	movsd	%xmm6, yycon2(%rip)
	.loc	6 219 19 is_stmt 1      # set_constants.c:219:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm4, %xmm6
	.loc	6 219 25 is_stmt 0      # set_constants.c:219:25
	mulsd	%xmm7, %xmm6
	.loc	6 219 10                # set_constants.c:219:10
	movsd	%xmm6, yycon3(%rip)
	.loc	6 220 19 is_stmt 1      # set_constants.c:220:19
	movapd	%xmm1, %xmm6
	mulsd	%xmm5, %xmm6
	.loc	6 220 25 is_stmt 0      # set_constants.c:220:25
	mulsd	%xmm7, %xmm6
	.loc	6 220 10                # set_constants.c:220:10
	movsd	%xmm6, yycon4(%rip)
	.loc	6 221 19 is_stmt 1      # set_constants.c:221:19
	mulsd	%xmm2, %xmm1
	.loc	6 221 24 is_stmt 0      # set_constants.c:221:24
	mulsd	%xmm7, %xmm1
	.loc	6 221 10                # set_constants.c:221:10
	movsd	%xmm1, yycon5(%rip)
	.loc	6 223 19 is_stmt 1      # set_constants.c:223:19
	mulsd	%xmm0, %xmm3
	.loc	6 223 26 is_stmt 0      # set_constants.c:223:26
	movsd	tz3(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	6 223 25                # set_constants.c:223:25
	mulsd	%xmm1, %xmm3
	.loc	6 223 10                # set_constants.c:223:10
	movsd	%xmm3, zzcon1(%rip)
	.loc	6 224 19 is_stmt 1      # set_constants.c:224:19
	movapd	%xmm0, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	6 224 10 is_stmt 0      # set_constants.c:224:10
	movsd	%xmm3, zzcon2(%rip)
	.loc	6 225 19 is_stmt 1      # set_constants.c:225:19
	mulsd	%xmm0, %xmm4
	.loc	6 225 25 is_stmt 0      # set_constants.c:225:25
	mulsd	%xmm1, %xmm4
	.loc	6 225 10                # set_constants.c:225:10
	movsd	%xmm4, zzcon3(%rip)
	.loc	6 226 19 is_stmt 1      # set_constants.c:226:19
	mulsd	%xmm0, %xmm5
	.loc	6 226 25 is_stmt 0      # set_constants.c:226:25
	mulsd	%xmm1, %xmm5
	.loc	6 226 10                # set_constants.c:226:10
	movsd	%xmm5, zzcon4(%rip)
	.loc	6 227 19 is_stmt 1      # set_constants.c:227:19
	mulsd	%xmm2, %xmm0
	.loc	6 227 24 is_stmt 0      # set_constants.c:227:24
	mulsd	%xmm1, %xmm0
	.loc	6 227 10                # set_constants.c:227:10
	movsd	%xmm0, zzcon5(%rip)
	.loc	6 228 1 is_stmt 1       # set_constants.c:228:1
	retq
.Ltmp86:
.Lfunc_end1:
	.size	set_constants, .Lfunc_end1-set_constants
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI2_0:
	.quad	4607182418800017408     # double 1
.LCPI2_1:
	.quad	4602678819172646912     # double 0.5
.LCPI2_2:
	.quad	-4611686018427387904    # double -2
.LCPI2_3:
	.quad	4616189618054758400     # double 4
.LCPI2_4:
	.quad	4618441417868443648     # double 6
.LCPI2_8:
	.quad	4617315517961601024     # double 5
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI2_5:
	.quad	4617315517961601024     # double 5
	.quad	4617315517961601024     # double 5
.LCPI2_6:
	.quad	4616189618054758400     # double 4
	.quad	4616189618054758400     # double 4
.LCPI2_7:
	.quad	4618441417868443648     # double 6
	.quad	4618441417868443648     # double 6
.LCPI2_9:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	exact_rhs
	.p2align	4, 0x90
	.type	exact_rhs,@function
exact_rhs:                              # @exact_rhs
.Lfunc_begin2:
	.file	7 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/exact_rhs.c"
	.loc	7 40 0                  # exact_rhs.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	7 60 20 prologue_end discriminator 1 # exact_rhs.c:60:20
	pushq	%rbp
.Ltmp87:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp88:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp89:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp90:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp91:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp92:
	.cfi_def_cfa_offset 56
	subq	$296, %rsp              # imm = 0x128
.Ltmp93:
	.cfi_def_cfa_offset 352
.Ltmp94:
	.cfi_offset %rbx, -56
.Ltmp95:
	.cfi_offset %r12, -48
.Ltmp96:
	.cfi_offset %r13, -40
.Ltmp97:
	.cfi_offset %r14, -32
.Ltmp98:
	.cfi_offset %r15, -24
.Ltmp99:
	.cfi_offset %rbp, -16
.Ltmp100:
	#DEBUG_VALUE: exact_rhs:k <- 0
	movl	grid_points+8(%rip), %r12d
.Ltmp101:
	.loc	7 47 3 discriminator 1  # exact_rhs.c:47:3
	testl	%r12d, %r12d
	jle	.LBB2_10
# BB#1:                                 # %for.cond1.preheader.lr.ph
.Ltmp102:
	.loc	7 48 22 discriminator 1 # exact_rhs.c:48:22
	movl	grid_points+4(%rip), %ecx
	.loc	7 48 5 is_stmt 0 discriminator 1 # exact_rhs.c:48:5
	testl	%ecx, %ecx
	jle	.LBB2_10
# BB#2:                                 # %for.cond5.preheader.lr.ph.us.preheader
.Ltmp103:
	.loc	7 49 24 is_stmt 1 discriminator 1 # exact_rhs.c:49:24
	movl	grid_points(%rip), %eax
.Ltmp104:
	.loc	7 51 11                 # exact_rhs.c:51:11
	movq	%rax, 48(%rsp)          # 8-byte Spill
	leal	-1(%rax), %eax
	leaq	(%rax,%rax,4), %rax
	leaq	40(,%rax,8), %r15
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	leal	-1(%rcx), %eax
.Ltmp105:
	.loc	7 49 7 discriminator 1  # exact_rhs.c:49:7
	movl	%eax, 24(%rsp)          # 4-byte Spill
	andl	$7, %ecx
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	movl	$forcing, %eax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	xorl	%eax, %eax
	movl	$forcing+18200, %ecx
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	.p2align	4, 0x90
.LBB2_3:                                # %for.cond5.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_5 Depth 2
                                        #     Child Loop BB2_8 Depth 2
	movq	%rax, (%rsp)            # 8-byte Spill
	movq	48(%rsp), %rax          # 8-byte Reload
	testl	%eax, %eax
	jle	.LBB2_9
# BB#4:                                 # %for.cond9.preheader.lr.ph.us.us.preheader
                                        #   in Loop: Header=BB2_3 Depth=1
	movq	176(%rsp), %r14         # 8-byte Reload
	testl	%r14d, %r14d
	movq	16(%rsp), %rbx          # 8-byte Reload
	movl	$0, %ebp
	je	.LBB2_6
	.p2align	4, 0x90
.LBB2_5:                                # %for.cond9.preheader.lr.ph.us.us.prol
                                        #   Parent Loop BB2_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp106:
	.loc	7 51 31                 # exact_rhs.c:51:31
	xorl	%esi, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	memset
.Ltmp107:
	.loc	7 48 5 discriminator 1  # exact_rhs.c:48:5
	incq	%rbp
	addq	$2600, %rbx             # imm = 0xA28
	cmpl	%ebp, %r14d
	jne	.LBB2_5
.LBB2_6:                                # %for.cond9.preheader.lr.ph.us.us.preheader.split
                                        #   in Loop: Header=BB2_3 Depth=1
	cmpl	$7, 24(%rsp)            # 4-byte Folded Reload
	jb	.LBB2_9
# BB#7:                                 # %for.cond9.preheader.lr.ph.us.us.preheader.split.split
                                        #   in Loop: Header=BB2_3 Depth=1
.Ltmp108:
	.loc	7 49 7 discriminator 1  # exact_rhs.c:49:7
	movq	160(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ebx
	subl	%ebp, %ebx
	imulq	$2600, %rbp, %rbp       # imm = 0xA28
	movq	32(%rsp), %r13          # 8-byte Reload
	.p2align	4, 0x90
.LBB2_8:                                # %for.cond9.preheader.lr.ph.us.us
                                        #   Parent Loop BB2_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp109:
	.loc	7 51 31                 # exact_rhs.c:51:31
	leaq	(%r13,%rbp), %r14
	leaq	-18200(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-15600(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-13000(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-10400(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-7800(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-5200(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-2600(%r13,%rbp), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	xorl	%esi, %esi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	memset
.Ltmp110:
	.loc	7 48 5 discriminator 1  # exact_rhs.c:48:5
	addq	$20800, %r13            # imm = 0x5140
	addl	$-8, %ebx
	jne	.LBB2_8
.Ltmp111:
.LBB2_9:                                # %for.cond1.for.inc24_crit_edge.us
                                        #   in Loop: Header=BB2_3 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	.loc	7 47 39 discriminator 2 # exact_rhs.c:47:39
	incl	%eax
.Ltmp112:
	#DEBUG_VALUE: exact_rhs:k <- %EAX
	.loc	7 47 3 is_stmt 0 discriminator 1 # exact_rhs.c:47:3
	addq	$169000, 16(%rsp)       # 8-byte Folded Spill
                                        # imm = 0x29428
	addq	$169000, 32(%rsp)       # 8-byte Folded Spill
                                        # imm = 0x29428
	.loc	7 47 17 discriminator 1 # exact_rhs.c:47:17
	cmpl	%r12d, %eax
	jl	.LBB2_3
.Ltmp113:
.LBB2_10:                               # %for.cond27.preheader
	.loc	7 60 17 is_stmt 1 discriminator 1 # exact_rhs.c:60:17
	movl	%r12d, %eax
	addl	$-2, %eax
	jle	.LBB2_27
# BB#11:                                # %for.body30.lr.ph
.Ltmp114:
	.loc	7 62 22 discriminator 1 # exact_rhs.c:62:22
	movl	grid_points+4(%rip), %eax
	movl	$1, %ecx
	movq	%rcx, 96(%rsp)          # 8-byte Spill
	movl	$forcing+171672, %esi
	movl	$forcing+171752, %edi
	leaq	112(%rsp), %rbx
	.p2align	4, 0x90
.LBB2_12:                               # %for.body30
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_14 Depth 2
                                        #       Child Loop BB2_16 Depth 3
                                        #       Child Loop BB2_19 Depth 3
                                        #       Child Loop BB2_22 Depth 3
.Ltmp115:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	7 62 19 is_stmt 0 discriminator 1 # exact_rhs.c:62:19
	movl	%eax, %ecx
	addl	$-2, %ecx
	jle	.LBB2_26
.Ltmp116:
# BB#13:                                # %for.body35.lr.ph
                                        #   in Loop: Header=BB2_12 Depth=1
	.loc	7 61 12 is_stmt 1       # exact_rhs.c:61:12
	movq	96(%rsp), %rax          # 8-byte Reload
	cvtsi2sdl	%eax, %xmm5
	.loc	7 61 22 is_stmt 0       # exact_rhs.c:61:22
	mulsd	dnzm1(%rip), %xmm5
.Ltmp117:
	#DEBUG_VALUE: exact_rhs:zeta <- %XMM5
	.loc	7 65 24 is_stmt 1 discriminator 1 # exact_rhs.c:65:24
	movsd	%xmm5, 16(%rsp)         # 8-byte Spill
	movl	grid_points(%rip), %edx
	movq	%rdi, 192(%rsp)         # 8-byte Spill
	movq	%rdi, %r13
	movq	%rsi, %r12
	movq	%rsi, 80(%rsp)          # 8-byte Spill
	movl	$1, %r15d
.Ltmp118:
	.p2align	4, 0x90
.LBB2_14:                               # %for.body35
                                        #   Parent Loop BB2_12 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB2_16 Depth 3
                                        #       Child Loop BB2_19 Depth 3
                                        #       Child Loop BB2_22 Depth 3
	#DEBUG_VALUE: exact_rhs:i <- 0
	.loc	7 65 21 is_stmt 0 discriminator 1 # exact_rhs.c:65:21
	testl	%edx, %edx
	jle	.LBB2_17
.Ltmp119:
# BB#15:                                #   in Loop: Header=BB2_14 Depth=2
	.loc	7 63 13 is_stmt 1       # exact_rhs.c:63:13
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 63 23 is_stmt 0       # exact_rhs.c:63:23
	mulsd	dnym1(%rip), %xmm0
.Ltmp120:
	#DEBUG_VALUE: exact_rhs:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp121:
	#DEBUG_VALUE: exact_rhs:eta <- [%RSP+0]
	xorl	%ebp, %ebp
	xorl	%r14d, %r14d
.Ltmp122:
	.p2align	4, 0x90
.LBB2_16:                               # %for.body42
                                        #   Parent Loop BB2_12 Depth=1
                                        #     Parent Loop BB2_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 66 14 is_stmt 1       # exact_rhs.c:66:14
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r14d, %xmm0
	.loc	7 66 24 is_stmt 0       # exact_rhs.c:66:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp123:
	#DEBUG_VALUE: exact_rhs:xi <- %XMM0
	.loc	7 68 9 is_stmt 1        # exact_rhs.c:68:9
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movapd	%xmm5, %xmm2
	movq	%rbx, %rdi
	callq	exact_solution
.Ltmp124:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 73 20                 # exact_rhs.c:73:20
	movsd	.LCPI2_0(%rip), %xmm0   # xmm0 = mem[0],zero
.Ltmp125:
	movapd	%xmm0, %xmm2
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
.Ltmp126:
	.loc	7 70 20                 # exact_rhs.c:70:20
	movq	144(%rsp), %rax
	movq	%rax, ue+32(%rbp)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
	movups	%xmm1, ue+16(%rbp)
	movups	%xmm0, ue(%rbp)
.Ltmp127:
	.loc	7 73 20                 # exact_rhs.c:73:20
	movapd	%xmm2, %xmm0
	divsd	112(%rsp), %xmm0
.Ltmp128:
	#DEBUG_VALUE: exact_rhs:dtpp <- %XMM0
	#DEBUG_VALUE: exact_rhs:m <- 1
	.loc	7 76 30                 # exact_rhs.c:76:30
	movupd	120(%rsp), %xmm1
	.loc	7 76 28 is_stmt 0       # exact_rhs.c:76:28
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp129:
	mulpd	%xmm0, %xmm1
	.loc	7 76 21                 # exact_rhs.c:76:21
	movupd	%xmm1, buf+8(%rbp)
	.loc	7 76 30                 # exact_rhs.c:76:30
	movupd	136(%rsp), %xmm2
	.loc	7 76 28                 # exact_rhs.c:76:28
	mulpd	%xmm0, %xmm2
	.loc	7 76 21                 # exact_rhs.c:76:21
	movupd	%xmm2, buf+24(%rbp)
.Ltmp130:
	.loc	7 80 40 is_stmt 1       # exact_rhs.c:80:40
	movapd	%xmm1, %xmm0
	movsd	ue+8(%rbp), %xmm3       # xmm3 = mem[0],zero
	.loc	7 81 30                 # exact_rhs.c:81:30
	mulsd	%xmm1, %xmm3
	.loc	7 79 31                 # exact_rhs.c:79:31
	mulsd	%xmm1, %xmm1
	.loc	7 79 19 is_stmt 0       # exact_rhs.c:79:19
	movsd	%xmm1, cuf(,%r14,8)
	.loc	7 80 40 is_stmt 1       # exact_rhs.c:80:40
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	movsd	ue+16(%rbp), %xmm4      # xmm4 = mem[0],zero
	.loc	7 81 51                 # exact_rhs.c:81:51
	mulsd	%xmm0, %xmm4
	.loc	7 80 40                 # exact_rhs.c:80:40
	mulsd	%xmm0, %xmm0
	.loc	7 80 28 is_stmt 0       # exact_rhs.c:80:28
	addsd	%xmm1, %xmm0
	movsd	ue+24(%rbp), %xmm1      # xmm1 = mem[0],zero
	.loc	7 82 30 is_stmt 1       # exact_rhs.c:82:30
	mulsd	%xmm2, %xmm1
	.loc	7 80 64                 # exact_rhs.c:80:64
	mulsd	%xmm2, %xmm2
	.loc	7 80 52 is_stmt 0       # exact_rhs.c:80:52
	addsd	%xmm0, %xmm2
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	7 80 19                 # exact_rhs.c:80:19
	movsd	%xmm2, buf(%rbp)
	.loc	7 81 40 is_stmt 1       # exact_rhs.c:81:40
	addsd	%xmm3, %xmm4
	.loc	7 81 61 is_stmt 0       # exact_rhs.c:81:61
	addsd	%xmm4, %xmm1
	.loc	7 81 19                 # exact_rhs.c:81:19
	mulsd	%xmm0, %xmm1
	.loc	7 81 14                 # exact_rhs.c:81:14
	movsd	%xmm1, q(,%r14,8)
.Ltmp131:
	.loc	7 65 7 is_stmt 1 discriminator 1 # exact_rhs.c:65:7
	incq	%r14
	.loc	7 65 21 is_stmt 0 discriminator 1 # exact_rhs.c:65:21
	movslq	grid_points(%rip), %rdx
	addq	$40, %rbp
	cmpq	%rdx, %r14
	jl	.LBB2_16
.Ltmp132:
.LBB2_17:                               # %for.cond131.preheader
                                        #   in Loop: Header=BB2_14 Depth=2
	.loc	7 85 21 is_stmt 1 discriminator 1 # exact_rhs.c:85:21
	addl	$-2, %edx
	movsd	.LCPI2_2(%rip), %xmm0   # xmm0 = mem[0],zero
	jle	.LBB2_20
# BB#18:                                # %for.body135.lr.ph
                                        #   in Loop: Header=BB2_14 Depth=2
.Ltmp133:
	.loc	7 90 11                 # exact_rhs.c:90:11
	movsd	tx2(%rip), %xmm15       # xmm15 = mem[0],zero
	.loc	7 94 37                 # exact_rhs.c:94:37
	movsd	c2(%rip), %xmm13        # xmm13 = mem[0],zero
	.loc	7 110 26                # exact_rhs.c:110:26
	movsd	c1(%rip), %xmm6         # xmm6 = mem[0],zero
	movsd	xxcon3(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	7 112 14                # exact_rhs.c:112:14
	mulsd	.LCPI2_1(%rip), %xmm1
	movsd	%xmm1, (%rsp)           # 8-byte Spill
	.loc	7 113 11                # exact_rhs.c:113:11
	movsd	xxcon4(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	7 114 11                # exact_rhs.c:114:11
	movsd	%xmm1, 32(%rsp)         # 8-byte Spill
	movsd	xxcon5(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	7 115 11                # exact_rhs.c:115:11
	movsd	%xmm1, 48(%rsp)         # 8-byte Spill
	movsd	dx5tx1(%rip), %xmm1     # xmm1 = mem[0],zero
.Ltmp134:
	.loc	7 85 7 discriminator 1  # exact_rhs.c:85:7
	movsd	%xmm1, 24(%rsp)         # 8-byte Spill
	movslq	%edx, %rax
.Ltmp135:
	.loc	7 95 41                 # exact_rhs.c:95:41
	movsd	ue+32(%rip), %xmm5      # xmm5 = mem[0],zero
	.loc	7 96 35                 # exact_rhs.c:96:35
	movsd	buf+48(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	7 90 14                 # exact_rhs.c:90:14
	movapd	%xmm15, %xmm1
	movhpd	xxcon1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 176(%rsp)        # 16-byte Spill
	.loc	7 91 17                 # exact_rhs.c:91:17
	movsd	dx1tx1(%rip), %xmm1     # xmm1 = mem[0],zero
	movhpd	dx2tx1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 160(%rsp)        # 16-byte Spill
	.loc	7 99 57                 # exact_rhs.c:99:57
	movapd	%xmm15, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 240(%rsp)        # 16-byte Spill
	.loc	7 101 17                # exact_rhs.c:101:17
	movsd	xxcon2(%rip), %xmm1     # xmm1 = mem[0],zero
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 224(%rsp)        # 16-byte Spill
	.loc	7 102 17                # exact_rhs.c:102:17
	movsd	dx3tx1(%rip), %xmm1     # xmm1 = mem[0],zero
	movhpd	dx4tx1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 208(%rsp)        # 16-byte Spill
	.loc	7 96 35                 # exact_rhs.c:96:35
	movl	$0, %ecx
	movq	%r12, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB2_19:                               # %for.body135
                                        #   Parent Loop BB2_12 Depth=1
                                        #     Parent Loop BB2_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 90 17                 # exact_rhs.c:90:17
	movsd	ue+88(%rcx), %xmm12     # xmm12 = mem[0],zero
	.loc	7 90 28 is_stmt 0       # exact_rhs.c:90:28
	movsd	ue+8(%rcx), %xmm11      # xmm11 = mem[0],zero
	.loc	7 94 25 is_stmt 1       # exact_rhs.c:94:25
	movsd	buf+88(%rcx), %xmm10    # xmm10 = mem[0],zero
	.loc	7 94 24 is_stmt 0       # exact_rhs.c:94:24
	movapd	%xmm12, %xmm3
	mulsd	%xmm10, %xmm3
	.loc	7 94 41                 # exact_rhs.c:94:41
	movsd	ue+112(%rcx), %xmm7     # xmm7 = mem[0],zero
	.loc	7 94 52                 # exact_rhs.c:94:52
	movsd	q+16(,%rsi,8), %xmm14   # xmm14 = mem[0],zero
	.loc	7 94 51                 # exact_rhs.c:94:51
	movapd	%xmm7, %xmm2
	subsd	%xmm14, %xmm2
	.loc	7 94 39                 # exact_rhs.c:94:39
	mulsd	%xmm13, %xmm2
	.loc	7 94 36                 # exact_rhs.c:94:36
	addsd	%xmm3, %xmm2
	.loc	7 95 25 is_stmt 1       # exact_rhs.c:95:25
	movsd	buf+8(%rcx), %xmm8      # xmm8 = mem[0],zero
	.loc	7 95 24 is_stmt 0       # exact_rhs.c:95:24
	movapd	%xmm11, %xmm3
	mulsd	%xmm8, %xmm3
	.loc	7 95 52                 # exact_rhs.c:95:52
	movsd	q(,%rsi,8), %xmm9       # xmm9 = mem[0],zero
	.loc	7 95 51                 # exact_rhs.c:95:51
	subsd	%xmm9, %xmm5
	.loc	7 95 39                 # exact_rhs.c:95:39
	mulsd	%xmm13, %xmm5
	.loc	7 95 36                 # exact_rhs.c:95:36
	addsd	%xmm3, %xmm5
	.loc	7 91 29 is_stmt 1       # exact_rhs.c:91:29
	movsd	ue+80(%rcx), %xmm3      # xmm3 = mem[0],zero
	unpcklpd	%xmm12, %xmm3   # xmm3 = xmm3[0],xmm12[0]
	.loc	7 94 60                 # exact_rhs.c:94:60
	subsd	%xmm5, %xmm2
	.loc	7 93 31                 # exact_rhs.c:93:31
	movsd	-24(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	7 93 57 is_stmt 0       # exact_rhs.c:93:57
	mulsd	%xmm15, %xmm2
	.loc	7 93 51                 # exact_rhs.c:93:51
	subsd	%xmm2, %xmm5
	.loc	7 91 42 is_stmt 1       # exact_rhs.c:91:42
	movsd	ue(%rcx), %xmm2         # xmm2 = mem[0],zero
	unpcklpd	%xmm11, %xmm2   # xmm2 = xmm2[0],xmm11[0]
	.loc	7 96 34                 # exact_rhs.c:96:34
	mulsd	%xmm0, %xmm4
	.loc	7 96 30 is_stmt 0       # exact_rhs.c:96:30
	addsd	%xmm10, %xmm4
	.loc	7 90 27 is_stmt 1       # exact_rhs.c:90:27
	unpcklpd	%xmm8, %xmm12   # xmm12 = xmm12[0],xmm8[0]
	unpcklpd	%xmm4, %xmm11   # xmm11 = xmm11[0],xmm4[0]
	movapd	%xmm12, %xmm4
	subpd	%xmm11, %xmm4
	addpd	%xmm12, %xmm11
	movsd	%xmm4, %xmm11           # xmm11 = xmm4[0],xmm11[1]
	.loc	7 89 51                 # exact_rhs.c:89:51
	movsd	-32(%rdx), %xmm4        # xmm4 = mem[0],zero
	.loc	7 90 14                 # exact_rhs.c:90:14
	mulpd	176(%rsp), %xmm11       # 16-byte Folded Reload
	.loc	7 89 51                 # exact_rhs.c:89:51
	unpcklpd	%xmm5, %xmm4    # xmm4 = xmm4[0],xmm5[0]
	movapd	%xmm4, %xmm5
	subpd	%xmm11, %xmm5
	addpd	%xmm11, %xmm4
	movsd	%xmm5, %xmm4            # xmm4 = xmm5[0],xmm4[1]
	.loc	7 91 34                 # exact_rhs.c:91:34
	movupd	ue+40(%rcx), %xmm5
	.loc	7 91 33 is_stmt 0       # exact_rhs.c:91:33
	addpd	%xmm5, %xmm5
	.loc	7 91 29                 # exact_rhs.c:91:29
	subpd	%xmm5, %xmm3
	.loc	7 91 42                 # exact_rhs.c:91:42
	addpd	%xmm3, %xmm2
	.loc	7 91 17                 # exact_rhs.c:91:17
	mulpd	160(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	7 90 40 is_stmt 1       # exact_rhs.c:90:40
	addpd	%xmm4, %xmm2
	.loc	7 89 29                 # exact_rhs.c:89:29
	movupd	%xmm2, -32(%rdx)
	.loc	7 99 31                 # exact_rhs.c:99:31
	movupd	-16(%rdx), %xmm5
	.loc	7 100 13                # exact_rhs.c:100:13
	movupd	ue+96(%rcx), %xmm4
	.loc	7 100 23 is_stmt 0      # exact_rhs.c:100:23
	movapd	%xmm10, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm4, %xmm2
	.loc	7 111 29 is_stmt 1      # exact_rhs.c:111:29
	movsd	ue+32(%rcx), %xmm12     # xmm12 = mem[0],zero
	movapd	%xmm0, %xmm11
	movapd	%xmm6, %xmm3
	.loc	7 111 28 is_stmt 0      # exact_rhs.c:111:28
	movapd	%xmm3, %xmm0
	mulsd	%xmm12, %xmm0
	.loc	7 111 42                # exact_rhs.c:111:42
	mulsd	%xmm13, %xmm9
	.loc	7 111 39                # exact_rhs.c:111:39
	subsd	%xmm9, %xmm0
	.loc	7 100 36 is_stmt 1      # exact_rhs.c:100:36
	movupd	ue+16(%rcx), %xmm1
	.loc	7 111 24                # exact_rhs.c:111:24
	mulsd	%xmm8, %xmm0
	.loc	7 100 46                # exact_rhs.c:100:46
	movlhps	%xmm8, %xmm8            # xmm8 = xmm8[0,0]
	mulpd	%xmm1, %xmm8
	.loc	7 100 35 is_stmt 0      # exact_rhs.c:100:35
	subpd	%xmm8, %xmm2
	.loc	7 99 57 is_stmt 1       # exact_rhs.c:99:57
	mulpd	240(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	7 99 51 is_stmt 0       # exact_rhs.c:99:51
	subpd	%xmm2, %xmm5
	.loc	7 101 19 is_stmt 1      # exact_rhs.c:101:19
	movupd	buf+96(%rcx), %xmm2
	.loc	7 101 35 is_stmt 0      # exact_rhs.c:101:35
	movupd	buf+56(%rcx), %xmm6
	.loc	7 101 34                # exact_rhs.c:101:34
	addpd	%xmm6, %xmm6
	.loc	7 101 30                # exact_rhs.c:101:30
	subpd	%xmm6, %xmm2
	.loc	7 101 45                # exact_rhs.c:101:45
	movupd	buf+16(%rcx), %xmm6
	.loc	7 101 44                # exact_rhs.c:101:44
	addpd	%xmm2, %xmm6
	.loc	7 101 17                # exact_rhs.c:101:17
	mulpd	224(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	7 100 59 is_stmt 1      # exact_rhs.c:100:59
	addpd	%xmm5, %xmm6
	.loc	7 102 35                # exact_rhs.c:102:35
	movupd	ue+56(%rcx), %xmm2
	.loc	7 102 34 is_stmt 0      # exact_rhs.c:102:34
	addpd	%xmm2, %xmm2
	.loc	7 102 30                # exact_rhs.c:102:30
	subpd	%xmm2, %xmm4
	.loc	7 102 44                # exact_rhs.c:102:44
	addpd	%xmm1, %xmm4
	.loc	7 102 17                # exact_rhs.c:102:17
	mulpd	208(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	7 101 57 is_stmt 1      # exact_rhs.c:101:57
	addpd	%xmm6, %xmm4
	.loc	7 110 28                # exact_rhs.c:110:28
	movapd	%xmm3, %xmm1
	movapd	%xmm3, %xmm6
	mulsd	%xmm7, %xmm1
	.loc	7 110 42 is_stmt 0      # exact_rhs.c:110:42
	mulsd	%xmm13, %xmm14
	.loc	7 110 39                # exact_rhs.c:110:39
	subsd	%xmm14, %xmm1
	.loc	7 110 24                # exact_rhs.c:110:24
	mulsd	%xmm10, %xmm1
	.loc	7 99 29 is_stmt 1       # exact_rhs.c:99:29
	movupd	%xmm4, -16(%rdx)
	.loc	7 109 31                # exact_rhs.c:109:31
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	7 110 50                # exact_rhs.c:110:50
	subsd	%xmm0, %xmm1
	.loc	7 109 56                # exact_rhs.c:109:56
	mulsd	%xmm15, %xmm1
	.loc	7 109 51 is_stmt 0      # exact_rhs.c:109:51
	subsd	%xmm1, %xmm2
	.loc	7 112 23 is_stmt 1      # exact_rhs.c:112:23
	movsd	buf+80(%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	7 112 39 is_stmt 0      # exact_rhs.c:112:39
	movsd	buf+40(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	7 112 38                # exact_rhs.c:112:38
	addsd	%xmm1, %xmm1
	.loc	7 112 34                # exact_rhs.c:112:34
	subsd	%xmm1, %xmm0
	.loc	7 112 48                # exact_rhs.c:112:48
	addsd	buf(%rcx), %xmm0
	.loc	7 112 21                # exact_rhs.c:112:21
	mulsd	(%rsp), %xmm0           # 8-byte Folded Reload
	.loc	7 111 51 is_stmt 1      # exact_rhs.c:111:51
	addsd	%xmm2, %xmm0
	.loc	7 113 19                # exact_rhs.c:113:19
	movsd	cuf+16(,%rsi,8), %xmm1  # xmm1 = mem[0],zero
	.loc	7 113 32 is_stmt 0      # exact_rhs.c:113:32
	movsd	cuf+8(,%rsi,8), %xmm2   # xmm2 = mem[0],zero
	.loc	7 113 31                # exact_rhs.c:113:31
	addsd	%xmm2, %xmm2
	.loc	7 113 27                # exact_rhs.c:113:27
	subsd	%xmm2, %xmm1
	.loc	7 113 38                # exact_rhs.c:113:38
	addsd	cuf(,%rsi,8), %xmm1
	.loc	7 113 17                # exact_rhs.c:113:17
	mulsd	32(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	7 112 61 is_stmt 1      # exact_rhs.c:112:61
	addsd	%xmm0, %xmm1
	.loc	7 114 19                # exact_rhs.c:114:19
	movsd	buf+112(%rcx), %xmm0    # xmm0 = mem[0],zero
	.loc	7 114 35 is_stmt 0      # exact_rhs.c:114:35
	movsd	buf+72(%rcx), %xmm2     # xmm2 = mem[0],zero
	.loc	7 114 34                # exact_rhs.c:114:34
	addsd	%xmm2, %xmm2
	.loc	7 114 30                # exact_rhs.c:114:30
	subsd	%xmm2, %xmm0
	.loc	7 114 44                # exact_rhs.c:114:44
	addsd	buf+32(%rcx), %xmm0
	.loc	7 114 17                # exact_rhs.c:114:17
	mulsd	48(%rsp), %xmm0         # 8-byte Folded Reload
	.loc	7 113 48 is_stmt 1      # exact_rhs.c:113:48
	addsd	%xmm1, %xmm0
	.loc	7 115 36                # exact_rhs.c:115:36
	movsd	ue+72(%rcx), %xmm5      # xmm5 = mem[0],zero
	.loc	7 115 34 is_stmt 0      # exact_rhs.c:115:34
	movapd	%xmm5, %xmm1
	addsd	%xmm1, %xmm1
	.loc	7 115 30                # exact_rhs.c:115:30
	subsd	%xmm1, %xmm7
	.loc	7 115 44                # exact_rhs.c:115:44
	addsd	%xmm12, %xmm7
	.loc	7 115 17                # exact_rhs.c:115:17
	mulsd	24(%rsp), %xmm7         # 8-byte Folded Reload
	.loc	7 114 57 is_stmt 1      # exact_rhs.c:114:57
	addsd	%xmm0, %xmm7
	movapd	%xmm11, %xmm0
	.loc	7 109 29                # exact_rhs.c:109:29
	movsd	%xmm7, (%rdx)
	.loc	7 96 35                 # exact_rhs.c:96:35
	movapd	%xmm10, %xmm4
.Ltmp136:
	.loc	7 85 21 discriminator 1 # exact_rhs.c:85:21
	incq	%rsi
	addq	$40, %rdx
	addq	$40, %rcx
	cmpq	%rax, %rsi
	jl	.LBB2_19
.Ltmp137:
.LBB2_20:                               # %for.cond466.preheader
                                        #   in Loop: Header=BB2_14 Depth=2
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	7 123 31                # exact_rhs.c:123:31
	imulq	$2600, %r15, %rax       # imm = 0xA28
	imulq	$169000, 96(%rsp), %rcx # 8-byte Folded Reload
                                        # imm = 0x29428
	.loc	7 124 16                # exact_rhs.c:124:16
	movupd	ue+40(%rip), %xmm6
	.loc	7 127 16                # exact_rhs.c:127:16
	movapd	%xmm6, %xmm0
	movsd	.LCPI2_3(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	.loc	7 124 31                # exact_rhs.c:124:31
	movapd	ue+80(%rip), %xmm4
	.loc	7 127 33                # exact_rhs.c:127:33
	movapd	%xmm4, (%rsp)           # 16-byte Spill
	movapd	%xmm4, %xmm14
	movsd	.LCPI2_4(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm14
	.loc	7 127 16 is_stmt 0      # exact_rhs.c:127:16
	subsd	%xmm0, %xmm14
	.loc	7 124 43 is_stmt 1      # exact_rhs.c:124:43
	movupd	ue+120(%rip), %xmm9
.Ltmp138:
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	7 123 31                # exact_rhs.c:123:31
	movupd	forcing+40(%rcx,%rax), %xmm1
	.loc	7 124 15                # exact_rhs.c:124:15
	movapd	%xmm6, %xmm3
	movapd	.LCPI2_5(%rip), %xmm0   # xmm0 = [5.000000e+00,5.000000e+00]
	movapd	%xmm0, %xmm15
	mulpd	%xmm15, %xmm3
	.loc	7 124 30 is_stmt 0      # exact_rhs.c:124:30
	movapd	%xmm4, %xmm2
	movapd	.LCPI2_6(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	mulpd	%xmm10, %xmm2
	.loc	7 124 25                # exact_rhs.c:124:25
	subpd	%xmm2, %xmm3
	.loc	7 124 42                # exact_rhs.c:124:42
	addpd	%xmm9, %xmm3
	.loc	7 123 58 is_stmt 1      # exact_rhs.c:123:58
	movsd	dssp(%rip), %xmm2       # xmm2 = mem[0],zero
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm3
	.loc	7 123 51 is_stmt 0      # exact_rhs.c:123:51
	subpd	%xmm3, %xmm1
	.loc	7 123 29                # exact_rhs.c:123:29
	movupd	%xmm1, forcing+40(%rcx,%rax)
.Ltmp139:
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	7 128 34 is_stmt 1      # exact_rhs.c:128:34
	movsd	ue+168(%rip), %xmm13    # xmm13 = mem[0],zero
.Ltmp140:
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	7 124 16                # exact_rhs.c:124:16
	movupd	ue+56(%rip), %xmm5
	.loc	7 124 31 is_stmt 0      # exact_rhs.c:124:31
	movapd	ue+96(%rip), %xmm8
	.loc	7 124 43                # exact_rhs.c:124:43
	movupd	ue+136(%rip), %xmm11
.Ltmp141:
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	7 126 31 is_stmt 1      # exact_rhs.c:126:31
	movupd	forcing+88(%rcx,%rax), %xmm1
	.loc	7 127 16                # exact_rhs.c:127:16
	movapd	%xmm6, %xmm3
	shufpd	$1, %xmm5, %xmm3        # xmm3 = xmm3[1],xmm5[0]
	mulpd	%xmm10, %xmm3
	.loc	7 127 33 is_stmt 0      # exact_rhs.c:127:33
	movapd	%xmm4, %xmm7
	shufpd	$1, %xmm8, %xmm7        # xmm7 = xmm7[1],xmm8[0]
	movapd	.LCPI2_7(%rip), %xmm4   # xmm4 = [6.000000e+00,6.000000e+00]
	mulpd	%xmm4, %xmm7
	.loc	7 127 16                # exact_rhs.c:127:16
	subpd	%xmm3, %xmm7
	.loc	7 128 16 is_stmt 1      # exact_rhs.c:128:16
	movapd	%xmm9, %xmm3
	shufpd	$1, %xmm11, %xmm3       # xmm3 = xmm3[1],xmm11[0]
	mulpd	%xmm10, %xmm3
	.loc	7 127 43                # exact_rhs.c:127:43
	subpd	%xmm3, %xmm7
	.loc	7 128 34                # exact_rhs.c:128:34
	movapd	ue+176(%rip), %xmm12
	.loc	7 128 28 is_stmt 0      # exact_rhs.c:128:28
	movapd	%xmm13, %xmm3
	unpcklpd	%xmm12, %xmm3   # xmm3 = xmm3[0],xmm12[0]
	addpd	%xmm7, %xmm3
	.loc	7 126 58 is_stmt 1      # exact_rhs.c:126:58
	mulpd	%xmm2, %xmm3
	.loc	7 126 51 is_stmt 0      # exact_rhs.c:126:51
	subpd	%xmm3, %xmm1
	.loc	7 126 29                # exact_rhs.c:126:29
	movupd	%xmm1, forcing+88(%rcx,%rax)
.Ltmp142:
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	7 123 31 is_stmt 1      # exact_rhs.c:123:31
	movupd	forcing+56(%rcx,%rax), %xmm1
	.loc	7 124 15                # exact_rhs.c:124:15
	movapd	%xmm5, %xmm3
	mulpd	%xmm15, %xmm3
	.loc	7 124 30 is_stmt 0      # exact_rhs.c:124:30
	movapd	%xmm8, %xmm7
	mulpd	%xmm10, %xmm7
	.loc	7 124 25                # exact_rhs.c:124:25
	subpd	%xmm7, %xmm3
	.loc	7 124 42                # exact_rhs.c:124:42
	addpd	%xmm11, %xmm3
	.loc	7 123 58 is_stmt 1      # exact_rhs.c:123:58
	mulpd	%xmm2, %xmm3
	.loc	7 123 51 is_stmt 0      # exact_rhs.c:123:51
	subpd	%xmm3, %xmm1
	.loc	7 123 29                # exact_rhs.c:123:29
	movupd	%xmm1, forcing+56(%rcx,%rax)
.Ltmp143:
	#DEBUG_VALUE: exact_rhs:i <- 2
	.loc	7 123 31                # exact_rhs.c:123:31
	movupd	forcing+72(%rcx,%rax), %xmm3
	.loc	7 124 16 is_stmt 1      # exact_rhs.c:124:16
	movsd	ue+72(%rip), %xmm7      # xmm7 = mem[0],zero
	.loc	7 124 15 is_stmt 0      # exact_rhs.c:124:15
	movapd	%xmm7, %xmm4
	movsd	.LCPI2_8(%rip), %xmm0   # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm4
	.loc	7 124 31                # exact_rhs.c:124:31
	movsd	ue+112(%rip), %xmm15    # xmm15 = mem[0],zero
	.loc	7 124 25                # exact_rhs.c:124:25
	unpcklpd	%xmm14, %xmm4   # xmm4 = xmm4[0],xmm14[0]
	.loc	7 124 30                # exact_rhs.c:124:30
	movapd	%xmm15, %xmm1
	unpcklpd	%xmm9, %xmm1    # xmm1 = xmm1[0],xmm9[0]
	mulpd	%xmm10, %xmm1
	.loc	7 124 25                # exact_rhs.c:124:25
	subpd	%xmm1, %xmm4
	.loc	7 124 43                # exact_rhs.c:124:43
	movupd	ue+152(%rip), %xmm1
	.loc	7 124 42                # exact_rhs.c:124:42
	addpd	%xmm1, %xmm4
	.loc	7 123 58 is_stmt 1      # exact_rhs.c:123:58
	mulpd	%xmm2, %xmm4
	.loc	7 123 51 is_stmt 0      # exact_rhs.c:123:51
	subpd	%xmm4, %xmm3
	.loc	7 127 16 is_stmt 1      # exact_rhs.c:127:16
	movapd	%xmm5, %xmm4
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	.loc	7 123 29                # exact_rhs.c:123:29
	movupd	%xmm3, forcing+72(%rcx,%rax)
	.loc	7 127 33                # exact_rhs.c:127:33
	movapd	%xmm8, %xmm3
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	.loc	7 127 16 is_stmt 0      # exact_rhs.c:127:16
	unpcklpd	%xmm7, %xmm4    # xmm4 = xmm4[0],xmm7[0]
	mulpd	%xmm10, %xmm4
	.loc	7 127 33                # exact_rhs.c:127:33
	unpcklpd	%xmm15, %xmm3   # xmm3 = xmm3[0],xmm15[0]
	mulpd	.LCPI2_7(%rip), %xmm3
	.loc	7 127 16                # exact_rhs.c:127:16
	subpd	%xmm4, %xmm3
	.loc	7 128 16 is_stmt 1      # exact_rhs.c:128:16
	movapd	%xmm11, %xmm4
	shufpd	$1, %xmm1, %xmm4        # xmm4 = xmm4[1],xmm1[0]
	mulpd	%xmm10, %xmm4
	.loc	7 127 43                # exact_rhs.c:127:43
	subpd	%xmm4, %xmm3
	.loc	7 128 28                # exact_rhs.c:128:28
	movapd	%xmm12, %xmm1
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
.Ltmp144:
	#DEBUG_VALUE: exact_rhs:i <- 1
	movhpd	ue+192(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	addpd	%xmm3, %xmm1
	.loc	7 126 58                # exact_rhs.c:126:58
	mulpd	%xmm2, %xmm1
	.loc	7 126 31 is_stmt 0      # exact_rhs.c:126:31
	movupd	forcing+104(%rcx,%rax), %xmm2
	.loc	7 126 51                # exact_rhs.c:126:51
	subpd	%xmm1, %xmm2
	.loc	7 126 29                # exact_rhs.c:126:29
	movupd	%xmm2, forcing+104(%rcx,%rax)
.Ltmp145:
	.loc	7 131 7 is_stmt 1 discriminator 1 # exact_rhs.c:131:7
	movslq	grid_points(%rip), %rdx
	.loc	7 131 38 is_stmt 0 discriminator 1 # exact_rhs.c:131:38
	movq	%rdx, %rsi
	addq	$-4, %rsi
.Ltmp146:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 131 21 discriminator 1 # exact_rhs.c:131:21
	cmpl	$3, %esi
	jl	.LBB2_24
.Ltmp147:
# BB#21:                                # %for.cond557.preheader.lr.ph
                                        #   in Loop: Header=BB2_14 Depth=2
	movapd	(%rsp), %xmm1           # 16-byte Reload
.Ltmp148:
	.loc	7 127 33 is_stmt 1      # exact_rhs.c:127:33
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	.loc	7 127 16 is_stmt 0      # exact_rhs.c:127:16
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
.Ltmp149:
	.loc	7 133 55 is_stmt 1      # exact_rhs.c:133:55
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	7 135 33                # exact_rhs.c:135:33
	movapd	%xmm0, 32(%rsp)         # 16-byte Spill
	movsd	ue+160(%rip), %xmm2     # xmm2 = mem[0],zero
	unpcklpd	%xmm13, %xmm2   # xmm2 = xmm2[0],xmm13[0]
	.loc	7 135 18 is_stmt 0      # exact_rhs.c:135:18
	movlpd	ue+120(%rip), %xmm9     # xmm9 = mem[0],xmm9[1]
	.loc	7 133 59 is_stmt 1      # exact_rhs.c:133:59
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movapd	%xmm11, %xmm13
	movapd	%xmm8, %xmm11
	movaps	%xmm0, %xmm8
	.loc	7 134 31                # exact_rhs.c:134:31
	movl	$ue+232, %edx
	movq	%r13, %rdi
	movl	$2, %ebp
.Ltmp150:
	.loc	7 124 30                # exact_rhs.c:124:30
	movapd	.LCPI2_6(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	.loc	7 127 33                # exact_rhs.c:127:33
	movapd	.LCPI2_7(%rip), %xmm0   # xmm0 = [6.000000e+00,6.000000e+00]
	movapd	%xmm12, %xmm14
	movapd	%xmm0, %xmm12
	movapd	%xmm1, %xmm0
.Ltmp151:
	.p2align	4, 0x90
.LBB2_22:                               # %for.cond557.preheader
                                        #   Parent Loop BB2_12 Depth=1
                                        #     Parent Loop BB2_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 134 25                # exact_rhs.c:134:25
	movsd	-192(%rdx), %xmm1       # xmm1 = mem[0],zero
	unpcklpd	%xmm6, %xmm1    # xmm1 = xmm1[0],xmm6[0]
	.loc	7 134 31 is_stmt 0      # exact_rhs.c:134:31
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	movapd	%xmm15, %xmm6
	.loc	7 133 33 is_stmt 1      # exact_rhs.c:133:33
	movupd	-32(%rdi), %xmm4
	.loc	7 134 30                # exact_rhs.c:134:30
	movsd	-152(%rdx), %xmm3       # xmm3 = mem[0],zero
	unpcklpd	%xmm0, %xmm3    # xmm3 = xmm3[0],xmm0[0]
	mulpd	%xmm10, %xmm3
	.loc	7 134 25 is_stmt 0      # exact_rhs.c:134:25
	subpd	%xmm3, %xmm1
	.loc	7 135 17 is_stmt 1      # exact_rhs.c:135:17
	movapd	%xmm9, %xmm0
	mulpd	%xmm12, %xmm0
	.loc	7 134 42                # exact_rhs.c:134:42
	addpd	%xmm1, %xmm0
	.loc	7 135 32                # exact_rhs.c:135:32
	movapd	%xmm2, %xmm1
	mulpd	%xmm10, %xmm1
	.loc	7 135 27 is_stmt 0      # exact_rhs.c:135:27
	subpd	%xmm1, %xmm0
	.loc	7 135 46                # exact_rhs.c:135:46
	movupd	-32(%rdx), %xmm3
	.loc	7 135 44                # exact_rhs.c:135:44
	addpd	%xmm3, %xmm0
	.loc	7 133 59 is_stmt 1      # exact_rhs.c:133:59
	mulpd	%xmm8, %xmm0
	.loc	7 133 53 is_stmt 0      # exact_rhs.c:133:53
	subpd	%xmm0, %xmm4
	.loc	7 133 31                # exact_rhs.c:133:31
	movupd	%xmm4, -32(%rdi)
	.loc	7 133 33                # exact_rhs.c:133:33
	movupd	-16(%rdi), %xmm0
	.loc	7 134 30 is_stmt 1      # exact_rhs.c:134:30
	movapd	%xmm11, %xmm1
	mulpd	%xmm10, %xmm1
	.loc	7 134 25 is_stmt 0      # exact_rhs.c:134:25
	subpd	%xmm1, %xmm5
	.loc	7 135 17 is_stmt 1      # exact_rhs.c:135:17
	movapd	%xmm13, %xmm1
	mulpd	%xmm12, %xmm1
	.loc	7 134 42                # exact_rhs.c:134:42
	addpd	%xmm5, %xmm1
	.loc	7 135 32                # exact_rhs.c:135:32
	movapd	%xmm14, %xmm4
	mulpd	%xmm10, %xmm4
	.loc	7 135 27 is_stmt 0      # exact_rhs.c:135:27
	subpd	%xmm4, %xmm1
	.loc	7 135 46                # exact_rhs.c:135:46
	movupd	-16(%rdx), %xmm4
	.loc	7 135 44                # exact_rhs.c:135:44
	addpd	%xmm4, %xmm1
	.loc	7 133 59 is_stmt 1      # exact_rhs.c:133:59
	mulpd	%xmm8, %xmm1
	.loc	7 133 53 is_stmt 0      # exact_rhs.c:133:53
	subpd	%xmm1, %xmm0
	.loc	7 133 31                # exact_rhs.c:133:31
	movupd	%xmm0, -16(%rdi)
	.loc	7 134 30 is_stmt 1      # exact_rhs.c:134:30
	movapd	%xmm6, %xmm0
	movsd	.LCPI2_3(%rip), %xmm1   # xmm1 = mem[0],zero
	movapd	%xmm1, %xmm5
	mulsd	%xmm5, %xmm0
	.loc	7 134 25 is_stmt 0      # exact_rhs.c:134:25
	subsd	%xmm0, %xmm7
	.loc	7 135 18 is_stmt 1      # exact_rhs.c:135:18
	movsd	-80(%rdx), %xmm15       # xmm15 = mem[0],zero
	.loc	7 135 17 is_stmt 0      # exact_rhs.c:135:17
	movapd	%xmm15, %xmm0
	mulsd	.LCPI2_4(%rip), %xmm0
	.loc	7 134 42 is_stmt 1      # exact_rhs.c:134:42
	addsd	%xmm7, %xmm0
	movsd	-40(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	7 135 32                # exact_rhs.c:135:32
	mulsd	%xmm5, %xmm1
	.loc	7 135 27 is_stmt 0      # exact_rhs.c:135:27
	subsd	%xmm1, %xmm0
	.loc	7 133 33 is_stmt 1      # exact_rhs.c:133:33
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	7 135 44                # exact_rhs.c:135:44
	addsd	(%rdx), %xmm0
	.loc	7 133 59                # exact_rhs.c:133:59
	mulsd	32(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	7 133 53 is_stmt 0      # exact_rhs.c:133:53
	subsd	%xmm0, %xmm1
	.loc	7 133 31                # exact_rhs.c:133:31
	movsd	%xmm1, (%rdi)
.Ltmp152:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 131 7 is_stmt 1 discriminator 1 # exact_rhs.c:131:7
	shufpd	$1, %xmm9, %xmm9        # xmm9 = xmm9[1,0]
.Ltmp153:
	.loc	7 134 31                # exact_rhs.c:134:31
	movapd	%xmm9, %xmm0
	.loc	7 135 18                # exact_rhs.c:135:18
	movapd	%xmm2, %xmm9
	.loc	7 134 14                # exact_rhs.c:134:14
	movapd	%xmm11, %xmm5
	.loc	7 134 31 is_stmt 0      # exact_rhs.c:134:31
	movapd	%xmm13, %xmm11
	.loc	7 135 18 is_stmt 1      # exact_rhs.c:135:18
	movapd	%xmm14, %xmm13
	.loc	7 134 14                # exact_rhs.c:134:14
	movapd	(%rsp), %xmm1           # 16-byte Reload
.Ltmp154:
	.loc	7 131 21 discriminator 1 # exact_rhs.c:131:21
	incq	%rbp
	addq	$40, %rdi
	addq	$40, %rdx
	cmpq	%rsi, %rbp
.Ltmp155:
	.loc	7 134 14                # exact_rhs.c:134:14
	movapd	%xmm6, %xmm7
	movapd	%xmm1, %xmm6
	.loc	7 135 33                # exact_rhs.c:135:33
	movapd	%xmm3, %xmm2
	movapd	%xmm4, %xmm14
.Ltmp156:
	.loc	7 131 7 discriminator 1 # exact_rhs.c:131:7
	jl	.LBB2_22
.Ltmp157:
# BB#23:                                # %for.cond616.preheader.loopexit
                                        #   in Loop: Header=BB2_14 Depth=2
	.loc	7 140 13                # exact_rhs.c:140:13
	movl	grid_points(%rip), %edx
	movsd	.LCPI2_8(%rip), %xmm0   # xmm0 = mem[0],zero
.LBB2_24:                               # %for.body619
                                        #   in Loop: Header=BB2_14 Depth=2
	movapd	%xmm0, %xmm9
	.loc	7 141 53                # exact_rhs.c:141:53
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	7 143 31                # exact_rhs.c:143:31
	movslq	%edx, %rdi
	.loc	7 143 35 is_stmt 0      # exact_rhs.c:143:35
	shlq	$3, %rdi
	.loc	7 141 31 is_stmt 1      # exact_rhs.c:141:31
	leaq	forcing(%rcx,%rax), %rax
	leaq	-120(%rdi,%rdi,4), %rsi
	movsd	(%rax,%rsi), %xmm1      # xmm1 = mem[0],zero
	.loc	7 142 12                # exact_rhs.c:142:12
	movsd	ue-200(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 142 29 is_stmt 0      # exact_rhs.c:142:29
	movsd	ue-160(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 142 28                # exact_rhs.c:142:28
	movapd	%xmm3, %xmm4
	movsd	.LCPI2_3(%rip), %xmm7   # xmm7 = mem[0],zero
	mulsd	%xmm7, %xmm4
	.loc	7 142 23                # exact_rhs.c:142:23
	subsd	%xmm4, %xmm2
	.loc	7 143 16 is_stmt 1      # exact_rhs.c:143:16
	movsd	ue-120(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 143 15 is_stmt 0      # exact_rhs.c:143:15
	movapd	%xmm4, %xmm5
	movsd	.LCPI2_4(%rip), %xmm8   # xmm8 = mem[0],zero
	mulsd	%xmm8, %xmm5
	.loc	7 142 40 is_stmt 1      # exact_rhs.c:142:40
	addsd	%xmm2, %xmm5
	.loc	7 143 31                # exact_rhs.c:143:31
	leaq	-80(%rdi,%rdi,4), %rcx
	movsd	ue-80(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 143 30 is_stmt 0      # exact_rhs.c:143:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	7 143 25                # exact_rhs.c:143:25
	subsd	%xmm6, %xmm5
	.loc	7 141 58 is_stmt 1      # exact_rhs.c:141:58
	mulsd	%xmm0, %xmm5
	.loc	7 141 51 is_stmt 0      # exact_rhs.c:141:51
	subsd	%xmm5, %xmm1
	.loc	7 141 29                # exact_rhs.c:141:29
	movsd	%xmm1, (%rax,%rsi)
	.loc	7 145 31 is_stmt 1      # exact_rhs.c:145:31
	movsd	(%rax,%rcx), %xmm1      # xmm1 = mem[0],zero
	.loc	7 146 28                # exact_rhs.c:146:28
	mulsd	%xmm7, %xmm4
	.loc	7 146 23 is_stmt 0      # exact_rhs.c:146:23
	subsd	%xmm4, %xmm3
	.loc	7 146 45                # exact_rhs.c:146:45
	mulsd	%xmm9, %xmm2
	.loc	7 146 40                # exact_rhs.c:146:40
	addsd	%xmm3, %xmm2
	.loc	7 145 58 is_stmt 1      # exact_rhs.c:145:58
	mulsd	%xmm0, %xmm2
	.loc	7 145 51 is_stmt 0      # exact_rhs.c:145:51
	subsd	%xmm2, %xmm1
	.loc	7 145 29                # exact_rhs.c:145:29
	movsd	%xmm1, (%rax,%rcx)
	.loc	7 141 31 is_stmt 1      # exact_rhs.c:141:31
	movsd	8(%rax,%rsi), %xmm1     # xmm1 = mem[0],zero
	.loc	7 142 12                # exact_rhs.c:142:12
	movsd	ue-192(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 142 29 is_stmt 0      # exact_rhs.c:142:29
	movsd	ue-152(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 142 28                # exact_rhs.c:142:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	7 142 23                # exact_rhs.c:142:23
	subsd	%xmm4, %xmm2
	.loc	7 143 16 is_stmt 1      # exact_rhs.c:143:16
	movsd	ue-112(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 143 15 is_stmt 0      # exact_rhs.c:143:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	7 142 40 is_stmt 1      # exact_rhs.c:142:40
	addsd	%xmm2, %xmm5
	.loc	7 143 31                # exact_rhs.c:143:31
	movsd	ue-72(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 143 30 is_stmt 0      # exact_rhs.c:143:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	7 143 25                # exact_rhs.c:143:25
	subsd	%xmm6, %xmm5
	.loc	7 141 58 is_stmt 1      # exact_rhs.c:141:58
	mulsd	%xmm0, %xmm5
	.loc	7 141 51 is_stmt 0      # exact_rhs.c:141:51
	subsd	%xmm5, %xmm1
	.loc	7 141 29                # exact_rhs.c:141:29
	movsd	%xmm1, 8(%rax,%rsi)
	.loc	7 145 31 is_stmt 1      # exact_rhs.c:145:31
	movsd	8(%rax,%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	7 146 28                # exact_rhs.c:146:28
	mulsd	%xmm7, %xmm4
	.loc	7 146 23 is_stmt 0      # exact_rhs.c:146:23
	subsd	%xmm4, %xmm3
	.loc	7 146 45                # exact_rhs.c:146:45
	mulsd	%xmm9, %xmm2
	.loc	7 146 40                # exact_rhs.c:146:40
	addsd	%xmm3, %xmm2
	.loc	7 145 58 is_stmt 1      # exact_rhs.c:145:58
	mulsd	%xmm0, %xmm2
	.loc	7 145 51 is_stmt 0      # exact_rhs.c:145:51
	subsd	%xmm2, %xmm1
	.loc	7 145 29                # exact_rhs.c:145:29
	movsd	%xmm1, 8(%rax,%rcx)
	.loc	7 141 31 is_stmt 1      # exact_rhs.c:141:31
	movsd	16(%rax,%rsi), %xmm1    # xmm1 = mem[0],zero
	.loc	7 142 12                # exact_rhs.c:142:12
	movsd	ue-184(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 142 29 is_stmt 0      # exact_rhs.c:142:29
	movsd	ue-144(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 142 28                # exact_rhs.c:142:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	7 142 23                # exact_rhs.c:142:23
	subsd	%xmm4, %xmm2
	.loc	7 143 16 is_stmt 1      # exact_rhs.c:143:16
	movsd	ue-104(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 143 15 is_stmt 0      # exact_rhs.c:143:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	7 142 40 is_stmt 1      # exact_rhs.c:142:40
	addsd	%xmm2, %xmm5
	.loc	7 143 31                # exact_rhs.c:143:31
	movsd	ue-64(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 143 30 is_stmt 0      # exact_rhs.c:143:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	7 143 25                # exact_rhs.c:143:25
	subsd	%xmm6, %xmm5
	.loc	7 141 58 is_stmt 1      # exact_rhs.c:141:58
	mulsd	%xmm0, %xmm5
	.loc	7 141 51 is_stmt 0      # exact_rhs.c:141:51
	subsd	%xmm5, %xmm1
	.loc	7 141 29                # exact_rhs.c:141:29
	movsd	%xmm1, 16(%rax,%rsi)
	.loc	7 145 31 is_stmt 1      # exact_rhs.c:145:31
	movsd	16(%rax,%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	7 146 28                # exact_rhs.c:146:28
	mulsd	%xmm7, %xmm4
	.loc	7 146 23 is_stmt 0      # exact_rhs.c:146:23
	subsd	%xmm4, %xmm3
	.loc	7 146 45                # exact_rhs.c:146:45
	mulsd	%xmm9, %xmm2
	.loc	7 146 40                # exact_rhs.c:146:40
	addsd	%xmm3, %xmm2
	.loc	7 145 58 is_stmt 1      # exact_rhs.c:145:58
	mulsd	%xmm0, %xmm2
	.loc	7 145 51 is_stmt 0      # exact_rhs.c:145:51
	subsd	%xmm2, %xmm1
	.loc	7 145 29                # exact_rhs.c:145:29
	movsd	%xmm1, 16(%rax,%rcx)
	.loc	7 141 31 is_stmt 1      # exact_rhs.c:141:31
	movsd	24(%rax,%rsi), %xmm1    # xmm1 = mem[0],zero
	.loc	7 142 12                # exact_rhs.c:142:12
	movsd	ue-176(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 142 29 is_stmt 0      # exact_rhs.c:142:29
	movsd	ue-136(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 142 28                # exact_rhs.c:142:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	7 142 23                # exact_rhs.c:142:23
	subsd	%xmm4, %xmm2
	.loc	7 143 16 is_stmt 1      # exact_rhs.c:143:16
	movsd	ue-96(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 143 15 is_stmt 0      # exact_rhs.c:143:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	7 142 40 is_stmt 1      # exact_rhs.c:142:40
	addsd	%xmm2, %xmm5
	.loc	7 143 31                # exact_rhs.c:143:31
	movsd	ue-56(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 143 30 is_stmt 0      # exact_rhs.c:143:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	7 143 25                # exact_rhs.c:143:25
	subsd	%xmm6, %xmm5
	.loc	7 141 58 is_stmt 1      # exact_rhs.c:141:58
	mulsd	%xmm0, %xmm5
	.loc	7 141 51 is_stmt 0      # exact_rhs.c:141:51
	subsd	%xmm5, %xmm1
	.loc	7 141 29                # exact_rhs.c:141:29
	movsd	%xmm1, 24(%rax,%rsi)
	.loc	7 145 31 is_stmt 1      # exact_rhs.c:145:31
	movsd	24(%rax,%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	7 146 28                # exact_rhs.c:146:28
	mulsd	%xmm7, %xmm4
	.loc	7 146 23 is_stmt 0      # exact_rhs.c:146:23
	subsd	%xmm4, %xmm3
	.loc	7 146 45                # exact_rhs.c:146:45
	mulsd	%xmm9, %xmm2
	.loc	7 146 40                # exact_rhs.c:146:40
	addsd	%xmm3, %xmm2
	.loc	7 145 58 is_stmt 1      # exact_rhs.c:145:58
	mulsd	%xmm0, %xmm2
	.loc	7 145 51 is_stmt 0      # exact_rhs.c:145:51
	subsd	%xmm2, %xmm1
	.loc	7 145 29                # exact_rhs.c:145:29
	movsd	%xmm1, 24(%rax,%rcx)
	.loc	7 141 31 is_stmt 1      # exact_rhs.c:141:31
	movsd	32(%rax,%rsi), %xmm1    # xmm1 = mem[0],zero
	.loc	7 142 12                # exact_rhs.c:142:12
	movsd	ue-168(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 142 29 is_stmt 0      # exact_rhs.c:142:29
	movsd	ue-128(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 142 28                # exact_rhs.c:142:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	7 142 23                # exact_rhs.c:142:23
	subsd	%xmm4, %xmm2
	.loc	7 143 16 is_stmt 1      # exact_rhs.c:143:16
	movsd	ue-88(%rdi,%rdi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 143 15 is_stmt 0      # exact_rhs.c:143:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm8, %xmm5
	.loc	7 142 40 is_stmt 1      # exact_rhs.c:142:40
	addsd	%xmm2, %xmm5
	.loc	7 143 31                # exact_rhs.c:143:31
	movsd	ue-48(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 143 30 is_stmt 0      # exact_rhs.c:143:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	7 143 25                # exact_rhs.c:143:25
	subsd	%xmm6, %xmm5
	.loc	7 141 58 is_stmt 1      # exact_rhs.c:141:58
	mulsd	%xmm0, %xmm5
	.loc	7 141 51 is_stmt 0      # exact_rhs.c:141:51
	subsd	%xmm5, %xmm1
	.loc	7 141 29                # exact_rhs.c:141:29
	movsd	%xmm1, 32(%rax,%rsi)
	.loc	7 145 31 is_stmt 1      # exact_rhs.c:145:31
	movsd	32(%rax,%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	7 146 28                # exact_rhs.c:146:28
	mulsd	%xmm7, %xmm4
	.loc	7 146 23 is_stmt 0      # exact_rhs.c:146:23
	subsd	%xmm4, %xmm3
	.loc	7 146 45                # exact_rhs.c:146:45
	mulsd	%xmm9, %xmm2
	.loc	7 146 40                # exact_rhs.c:146:40
	addsd	%xmm3, %xmm2
	.loc	7 145 58 is_stmt 1      # exact_rhs.c:145:58
	mulsd	%xmm0, %xmm2
	.loc	7 145 51 is_stmt 0      # exact_rhs.c:145:51
	subsd	%xmm2, %xmm1
	.loc	7 145 29                # exact_rhs.c:145:29
	movsd	%xmm1, 32(%rax,%rcx)
.Ltmp158:
	.loc	7 62 19 is_stmt 1 discriminator 1 # exact_rhs.c:62:19
	movslq	grid_points+4(%rip), %rax
	.loc	7 62 36 is_stmt 0 discriminator 1 # exact_rhs.c:62:36
	leaq	-2(%rax), %rcx
	.loc	7 62 5 discriminator 1  # exact_rhs.c:62:5
	addq	$2600, %r12             # imm = 0xA28
	addq	$2600, %r13             # imm = 0xA28
	.loc	7 62 19 discriminator 1 # exact_rhs.c:62:19
	cmpq	%rcx, %r15
	.loc	7 62 5 discriminator 1  # exact_rhs.c:62:5
	leaq	1(%r15), %r15
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	jl	.LBB2_14
.Ltmp159:
# BB#25:                                # %for.inc707.loopexit
                                        #   in Loop: Header=BB2_12 Depth=1
	.loc	7 60 20 is_stmt 1 discriminator 1 # exact_rhs.c:60:20
	movl	grid_points+8(%rip), %r12d
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	192(%rsp), %rdi         # 8-byte Reload
.LBB2_26:                               # %for.inc707
                                        #   in Loop: Header=BB2_12 Depth=1
	.loc	7 60 34 is_stmt 0 discriminator 1 # exact_rhs.c:60:34
	leal	-2(%r12), %ecx
	.loc	7 60 17 discriminator 1 # exact_rhs.c:60:17
	movslq	%ecx, %rcx
	.loc	7 60 3 discriminator 1  # exact_rhs.c:60:3
	addq	$169000, %rsi           # imm = 0x29428
	addq	$169000, %rdi           # imm = 0x29428
	movq	96(%rsp), %rdx          # 8-byte Reload
	.loc	7 60 17 discriminator 1 # exact_rhs.c:60:17
	cmpq	%rcx, %rdx
	.loc	7 60 3 discriminator 1  # exact_rhs.c:60:3
	leaq	1(%rdx), %rdx
	movq	%rdx, 96(%rsp)          # 8-byte Spill
	jl	.LBB2_12
.Ltmp160:
.LBB2_27:                               # %for.cond710.preheader
	.loc	7 154 17 is_stmt 1 discriminator 1 # exact_rhs.c:154:17
	movl	%r12d, %eax
	addl	$-2, %eax
	jle	.LBB2_44
# BB#28:                                # %for.body714.lr.ph
.Ltmp161:
	.loc	7 156 22 discriminator 1 # exact_rhs.c:156:22
	movl	grid_points(%rip), %eax
	movl	$1, %ecx
	movq	%rcx, 80(%rsp)          # 8-byte Spill
	movl	$forcing+171672, %esi
	movl	$forcing+176872, %edi
	leaq	112(%rsp), %rbx
	.p2align	4, 0x90
.LBB2_29:                               # %for.body714
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_31 Depth 2
                                        #       Child Loop BB2_33 Depth 3
                                        #       Child Loop BB2_36 Depth 3
                                        #       Child Loop BB2_39 Depth 3
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	7 156 19 is_stmt 0 discriminator 1 # exact_rhs.c:156:19
	movl	%eax, %ecx
	addl	$-2, %ecx
	jle	.LBB2_43
.Ltmp162:
# BB#30:                                # %for.body721.lr.ph
                                        #   in Loop: Header=BB2_29 Depth=1
	.loc	7 155 12 is_stmt 1      # exact_rhs.c:155:12
	movq	80(%rsp), %rax          # 8-byte Reload
	cvtsi2sdl	%eax, %xmm5
	.loc	7 155 22 is_stmt 0      # exact_rhs.c:155:22
	mulsd	dnzm1(%rip), %xmm5
.Ltmp163:
	#DEBUG_VALUE: exact_rhs:zeta <- %XMM5
	.loc	7 159 24 is_stmt 1 discriminator 1 # exact_rhs.c:159:24
	movsd	%xmm5, 16(%rsp)         # 8-byte Spill
	movl	grid_points+4(%rip), %ecx
	movq	%rdi, 256(%rsp)         # 8-byte Spill
	movq	%rdi, %r13
	movq	%rsi, %r12
	movq	%rsi, 192(%rsp)         # 8-byte Spill
	movl	$1, %r15d
.Ltmp164:
	.p2align	4, 0x90
.LBB2_31:                               # %for.body721
                                        #   Parent Loop BB2_29 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB2_33 Depth 3
                                        #       Child Loop BB2_36 Depth 3
                                        #       Child Loop BB2_39 Depth 3
	#DEBUG_VALUE: exact_rhs:j <- 0
	.loc	7 159 21 is_stmt 0 discriminator 1 # exact_rhs.c:159:21
	testl	%ecx, %ecx
	jle	.LBB2_34
.Ltmp165:
# BB#32:                                #   in Loop: Header=BB2_31 Depth=2
	.loc	7 157 12 is_stmt 1      # exact_rhs.c:157:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 157 22 is_stmt 0      # exact_rhs.c:157:22
	mulsd	dnxm1(%rip), %xmm0
.Ltmp166:
	#DEBUG_VALUE: exact_rhs:xi <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp167:
	#DEBUG_VALUE: exact_rhs:xi <- [%RSP+0]
	xorl	%ebp, %ebp
	xorl	%r14d, %r14d
.Ltmp168:
	.p2align	4, 0x90
.LBB2_33:                               # %for.body728
                                        #   Parent Loop BB2_29 Depth=1
                                        #     Parent Loop BB2_31 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 160 15 is_stmt 1      # exact_rhs.c:160:15
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%r14d, %xmm1
	.loc	7 160 25 is_stmt 0      # exact_rhs.c:160:25
	mulsd	dnym1(%rip), %xmm1
.Ltmp169:
	#DEBUG_VALUE: exact_rhs:eta <- %XMM1
	.loc	7 162 9 is_stmt 1       # exact_rhs.c:162:9
	movsd	(%rsp), %xmm0           # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movapd	%xmm5, %xmm2
	movq	%rbx, %rdi
	callq	exact_solution
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 166 19                # exact_rhs.c:166:19
	movsd	.LCPI2_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm2
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
.Ltmp170:
	.loc	7 164 20                # exact_rhs.c:164:20
	movq	144(%rsp), %rax
	movq	%rax, ue+32(%rbp)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
.Ltmp171:
	movups	%xmm1, ue+16(%rbp)
	movups	%xmm0, ue(%rbp)
.Ltmp172:
	.loc	7 166 19                # exact_rhs.c:166:19
	movapd	%xmm2, %xmm0
	divsd	112(%rsp), %xmm0
.Ltmp173:
	#DEBUG_VALUE: exact_rhs:dtpp <- %XMM0
	#DEBUG_VALUE: exact_rhs:m <- 1
	.loc	7 169 30                # exact_rhs.c:169:30
	movupd	120(%rsp), %xmm1
	.loc	7 169 28 is_stmt 0      # exact_rhs.c:169:28
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp174:
	mulpd	%xmm0, %xmm1
	.loc	7 169 21                # exact_rhs.c:169:21
	movupd	%xmm1, buf+8(%rbp)
	.loc	7 169 30                # exact_rhs.c:169:30
	movupd	136(%rsp), %xmm2
	.loc	7 169 28                # exact_rhs.c:169:28
	mulpd	%xmm0, %xmm2
	.loc	7 169 21                # exact_rhs.c:169:21
	movupd	%xmm2, buf+24(%rbp)
.Ltmp175:
	.loc	7 173 40 is_stmt 1      # exact_rhs.c:173:40
	movapd	%xmm1, %xmm0
	movsd	ue+8(%rbp), %xmm3       # xmm3 = mem[0],zero
	.loc	7 174 30                # exact_rhs.c:174:30
	mulsd	%xmm1, %xmm3
	.loc	7 172 31                # exact_rhs.c:172:31
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	movsd	ue+16(%rbp), %xmm4      # xmm4 = mem[0],zero
	.loc	7 174 51                # exact_rhs.c:174:51
	mulsd	%xmm1, %xmm4
	.loc	7 172 31                # exact_rhs.c:172:31
	mulsd	%xmm1, %xmm1
	.loc	7 172 19 is_stmt 0      # exact_rhs.c:172:19
	movsd	%xmm1, cuf(,%r14,8)
	.loc	7 173 40 is_stmt 1      # exact_rhs.c:173:40
	mulsd	%xmm0, %xmm0
	.loc	7 173 28 is_stmt 0      # exact_rhs.c:173:28
	addsd	%xmm1, %xmm0
	movsd	ue+24(%rbp), %xmm1      # xmm1 = mem[0],zero
	.loc	7 175 30 is_stmt 1      # exact_rhs.c:175:30
	mulsd	%xmm2, %xmm1
	.loc	7 173 64                # exact_rhs.c:173:64
	mulsd	%xmm2, %xmm2
	.loc	7 173 52 is_stmt 0      # exact_rhs.c:173:52
	addsd	%xmm0, %xmm2
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	7 173 19                # exact_rhs.c:173:19
	movsd	%xmm2, buf(%rbp)
	.loc	7 174 40 is_stmt 1      # exact_rhs.c:174:40
	addsd	%xmm3, %xmm4
	.loc	7 174 61 is_stmt 0      # exact_rhs.c:174:61
	addsd	%xmm4, %xmm1
	.loc	7 174 19                # exact_rhs.c:174:19
	mulsd	%xmm0, %xmm1
	.loc	7 174 14                # exact_rhs.c:174:14
	movsd	%xmm1, q(,%r14,8)
.Ltmp176:
	.loc	7 159 7 is_stmt 1 discriminator 1 # exact_rhs.c:159:7
	incq	%r14
	.loc	7 159 21 is_stmt 0 discriminator 1 # exact_rhs.c:159:21
	movslq	grid_points+4(%rip), %rcx
	addq	$40, %rbp
	cmpq	%rcx, %r14
	jl	.LBB2_33
.Ltmp177:
.LBB2_34:                               # %for.cond820.preheader
                                        #   in Loop: Header=BB2_31 Depth=2
	.loc	7 178 21 is_stmt 1 discriminator 1 # exact_rhs.c:178:21
	addl	$-2, %ecx
	movsd	.LCPI2_2(%rip), %xmm14  # xmm14 = mem[0],zero
	jle	.LBB2_37
# BB#35:                                # %for.body824.lr.ph
                                        #   in Loop: Header=BB2_31 Depth=2
.Ltmp178:
	.loc	7 183 11                # exact_rhs.c:183:11
	movsd	ty2(%rip), %xmm13       # xmm13 = mem[0],zero
	.loc	7 192 37                # exact_rhs.c:192:37
	movsd	c2(%rip), %xmm15        # xmm15 = mem[0],zero
	.loc	7 203 26                # exact_rhs.c:203:26
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	movsd	yycon3(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	7 205 14                # exact_rhs.c:205:14
	mulsd	.LCPI2_1(%rip), %xmm0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
	.loc	7 207 11                # exact_rhs.c:207:11
	movsd	yycon4(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	7 208 11                # exact_rhs.c:208:11
	movsd	%xmm0, 48(%rsp)         # 8-byte Spill
	movsd	yycon5(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	7 209 11                # exact_rhs.c:209:11
	movsd	%xmm0, 24(%rsp)         # 8-byte Spill
	movsd	dy5ty1(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp179:
	.loc	7 178 7 discriminator 1 # exact_rhs.c:178:7
	movsd	%xmm0, 176(%rsp)        # 8-byte Spill
	movslq	%ecx, %rax
.Ltmp180:
	.loc	7 193 41                # exact_rhs.c:193:41
	movsd	ue+32(%rip), %xmm7      # xmm7 = mem[0],zero
	.loc	7 194 35                # exact_rhs.c:194:35
	movsd	buf+56(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	7 183 14                # exact_rhs.c:183:14
	movsd	yycon2(%rip), %xmm0     # xmm0 = mem[0],zero
	movapd	%xmm13, %xmm2
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	movapd	%xmm2, 160(%rsp)        # 16-byte Spill
	.loc	7 184 17                # exact_rhs.c:184:17
	movsd	dy1ty1(%rip), %xmm2     # xmm2 = mem[0],zero
	movhpd	dy2ty1(%rip), %xmm2     # xmm2 = xmm2[0],mem[0]
	movapd	%xmm2, 240(%rsp)        # 16-byte Spill
	.loc	7 191 56                # exact_rhs.c:191:56
	movapd	%xmm13, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 224(%rsp)        # 16-byte Spill
	.loc	7 194 17                # exact_rhs.c:194:17
	movsd	yycon1(%rip), %xmm1     # xmm1 = mem[0],zero
	unpcklpd	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movapd	%xmm1, 208(%rsp)        # 16-byte Spill
	.loc	7 195 17                # exact_rhs.c:195:17
	movsd	dy3ty1(%rip), %xmm0     # xmm0 = mem[0],zero
	movhpd	dy4ty1(%rip), %xmm0     # xmm0 = xmm0[0],mem[0]
	movapd	%xmm0, 96(%rsp)         # 16-byte Spill
	.loc	7 194 35                # exact_rhs.c:194:35
	movl	$0, %ecx
	movq	%r12, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB2_36:                               # %for.body824
                                        #   Parent Loop BB2_29 Depth=1
                                        #     Parent Loop BB2_31 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 186 31                # exact_rhs.c:186:31
	movsd	-24(%rdx), %xmm3        # xmm3 = mem[0],zero
	.loc	7 184 19                # exact_rhs.c:184:19
	movupd	ue+80(%rcx), %xmm2
	.loc	7 187 23                # exact_rhs.c:187:23
	movapd	%xmm2, %xmm5
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
	.loc	7 187 24 is_stmt 0      # exact_rhs.c:187:24
	movupd	buf+96(%rcx), %xmm6
	.loc	7 187 23                # exact_rhs.c:187:23
	mulsd	%xmm6, %xmm5
	.loc	7 184 43 is_stmt 1      # exact_rhs.c:184:43
	movupd	ue(%rcx), %xmm0
	.loc	7 184 34 is_stmt 0      # exact_rhs.c:184:34
	movupd	ue+40(%rcx), %xmm1
	.loc	7 184 33                # exact_rhs.c:184:33
	addpd	%xmm1, %xmm1
	.loc	7 184 29                # exact_rhs.c:184:29
	subpd	%xmm1, %xmm2
	.loc	7 184 42                # exact_rhs.c:184:42
	addpd	%xmm0, %xmm2
	.loc	7 187 46 is_stmt 1      # exact_rhs.c:187:46
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	7 187 47 is_stmt 0      # exact_rhs.c:187:47
	movupd	buf+16(%rcx), %xmm8
	.loc	7 187 46                # exact_rhs.c:187:46
	mulsd	%xmm8, %xmm0
	.loc	7 187 35                # exact_rhs.c:187:35
	subsd	%xmm0, %xmm5
	.loc	7 186 56 is_stmt 1      # exact_rhs.c:186:56
	mulsd	%xmm13, %xmm5
	.loc	7 186 51 is_stmt 0      # exact_rhs.c:186:51
	subsd	%xmm5, %xmm3
	movsd	buf+48(%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	7 188 34 is_stmt 1      # exact_rhs.c:188:34
	mulsd	%xmm14, %xmm0
	.loc	7 188 30 is_stmt 0      # exact_rhs.c:188:30
	addsd	buf+88(%rcx), %xmm0
	.loc	7 183 17 is_stmt 1      # exact_rhs.c:183:17
	movupd	ue+96(%rcx), %xmm9
	.loc	7 183 27 is_stmt 0      # exact_rhs.c:183:27
	movapd	%xmm9, %xmm1
	movhpd	buf+8(%rcx), %xmm1      # xmm1 = xmm1[0],mem[0]
	.loc	7 183 28                # exact_rhs.c:183:28
	movupd	ue+16(%rcx), %xmm12
	.loc	7 183 27                # exact_rhs.c:183:27
	movapd	%xmm12, %xmm5
	unpcklpd	%xmm0, %xmm5    # xmm5 = xmm5[0],xmm0[0]
	movapd	%xmm1, %xmm0
	subpd	%xmm5, %xmm0
	addpd	%xmm1, %xmm5
	.loc	7 182 51 is_stmt 1      # exact_rhs.c:182:51
	movsd	-32(%rdx), %xmm1        # xmm1 = mem[0],zero
	.loc	7 183 27                # exact_rhs.c:183:27
	movsd	%xmm0, %xmm5            # xmm5 = xmm0[0],xmm5[1]
	.loc	7 183 14 is_stmt 0      # exact_rhs.c:183:14
	mulpd	160(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	7 182 51 is_stmt 1      # exact_rhs.c:182:51
	unpcklpd	%xmm3, %xmm1    # xmm1 = xmm1[0],xmm3[0]
	movapd	%xmm1, %xmm0
	subpd	%xmm5, %xmm0
	addpd	%xmm5, %xmm1
	movsd	%xmm0, %xmm1            # xmm1 = xmm0[0],xmm1[1]
	.loc	7 184 17                # exact_rhs.c:184:17
	mulpd	240(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	7 183 40                # exact_rhs.c:183:40
	addpd	%xmm1, %xmm2
	.loc	7 182 29                # exact_rhs.c:182:29
	movupd	%xmm2, -32(%rdx)
	.loc	7 192 24                # exact_rhs.c:192:24
	movapd	%xmm9, %xmm0
	mulsd	%xmm6, %xmm0
	.loc	7 192 41 is_stmt 0      # exact_rhs.c:192:41
	movsd	ue+112(%rcx), %xmm5     # xmm5 = mem[0],zero
	.loc	7 192 52                # exact_rhs.c:192:52
	movsd	q+16(,%rsi,8), %xmm11   # xmm11 = mem[0],zero
	.loc	7 192 51                # exact_rhs.c:192:51
	movapd	%xmm5, %xmm3
	subsd	%xmm11, %xmm3
	.loc	7 192 39                # exact_rhs.c:192:39
	mulsd	%xmm15, %xmm3
	.loc	7 192 36                # exact_rhs.c:192:36
	addsd	%xmm0, %xmm3
	.loc	7 193 24 is_stmt 1      # exact_rhs.c:193:24
	movapd	%xmm12, %xmm0
	mulsd	%xmm8, %xmm0
	.loc	7 193 52 is_stmt 0      # exact_rhs.c:193:52
	movsd	q(,%rsi,8), %xmm10      # xmm10 = mem[0],zero
	.loc	7 193 51                # exact_rhs.c:193:51
	subsd	%xmm10, %xmm7
	.loc	7 193 39                # exact_rhs.c:193:39
	mulsd	%xmm15, %xmm7
	.loc	7 193 36                # exact_rhs.c:193:36
	addsd	%xmm0, %xmm7
	.loc	7 198 23 is_stmt 1      # exact_rhs.c:198:23
	movapd	%xmm9, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	mulsd	%xmm6, %xmm0
	.loc	7 192 60                # exact_rhs.c:192:60
	unpcklpd	%xmm0, %xmm3    # xmm3 = xmm3[0],xmm0[0]
	.loc	7 195 35                # exact_rhs.c:195:35
	movupd	ue+56(%rcx), %xmm0
	.loc	7 195 34 is_stmt 0      # exact_rhs.c:195:34
	addpd	%xmm0, %xmm0
	.loc	7 195 30                # exact_rhs.c:195:30
	subpd	%xmm0, %xmm9
	.loc	7 195 44                # exact_rhs.c:195:44
	addpd	%xmm12, %xmm9
	.loc	7 198 46 is_stmt 1      # exact_rhs.c:198:46
	shufpd	$1, %xmm12, %xmm12      # xmm12 = xmm12[1,0]
	mulsd	%xmm8, %xmm12
	.loc	7 192 60                # exact_rhs.c:192:60
	unpcklpd	%xmm12, %xmm7   # xmm7 = xmm7[0],xmm12[0]
	subpd	%xmm7, %xmm3
	.loc	7 191 31                # exact_rhs.c:191:31
	movupd	-16(%rdx), %xmm0
	.loc	7 191 56 is_stmt 0      # exact_rhs.c:191:56
	mulpd	224(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	7 191 51                # exact_rhs.c:191:51
	subpd	%xmm3, %xmm0
	.loc	7 194 34 is_stmt 1      # exact_rhs.c:194:34
	movhpd	buf+64(%rcx), %xmm4     # xmm4 = xmm4[0],mem[0]
	addpd	%xmm4, %xmm4
	.loc	7 194 30 is_stmt 0      # exact_rhs.c:194:30
	movapd	%xmm6, %xmm1
	subpd	%xmm4, %xmm1
	.loc	7 194 44                # exact_rhs.c:194:44
	addpd	%xmm8, %xmm1
	.loc	7 194 17                # exact_rhs.c:194:17
	mulpd	208(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	7 193 61 is_stmt 1      # exact_rhs.c:193:61
	addpd	%xmm0, %xmm1
	.loc	7 195 17                # exact_rhs.c:195:17
	mulpd	96(%rsp), %xmm9         # 16-byte Folded Reload
	.loc	7 194 57                # exact_rhs.c:194:57
	addpd	%xmm1, %xmm9
	.loc	7 191 29                # exact_rhs.c:191:29
	movupd	%xmm9, -16(%rdx)
	movsd	32(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	7 203 28                # exact_rhs.c:203:28
	movapd	%xmm1, %xmm0
	mulsd	%xmm5, %xmm0
	.loc	7 203 42 is_stmt 0      # exact_rhs.c:203:42
	mulsd	%xmm15, %xmm11
	.loc	7 203 39                # exact_rhs.c:203:39
	subsd	%xmm11, %xmm0
	.loc	7 204 29 is_stmt 1      # exact_rhs.c:204:29
	movsd	ue+32(%rcx), %xmm4      # xmm4 = mem[0],zero
	.loc	7 204 28 is_stmt 0      # exact_rhs.c:204:28
	mulsd	%xmm4, %xmm1
	.loc	7 204 42                # exact_rhs.c:204:42
	mulsd	%xmm15, %xmm10
	.loc	7 204 39                # exact_rhs.c:204:39
	subsd	%xmm10, %xmm1
	.loc	7 204 24                # exact_rhs.c:204:24
	mulsd	%xmm8, %xmm1
	.loc	7 202 31 is_stmt 1      # exact_rhs.c:202:31
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	7 203 24                # exact_rhs.c:203:24
	mulsd	%xmm6, %xmm0
	.loc	7 203 50 is_stmt 0      # exact_rhs.c:203:50
	subsd	%xmm1, %xmm0
	.loc	7 202 56 is_stmt 1      # exact_rhs.c:202:56
	mulsd	%xmm13, %xmm0
	.loc	7 202 51 is_stmt 0      # exact_rhs.c:202:51
	subsd	%xmm0, %xmm2
	.loc	7 205 23 is_stmt 1      # exact_rhs.c:205:23
	movsd	buf+80(%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	7 205 39 is_stmt 0      # exact_rhs.c:205:39
	movsd	buf+40(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	7 205 38                # exact_rhs.c:205:38
	addsd	%xmm1, %xmm1
	.loc	7 205 34                # exact_rhs.c:205:34
	subsd	%xmm1, %xmm0
	.loc	7 205 48                # exact_rhs.c:205:48
	addsd	buf(%rcx), %xmm0
	.loc	7 205 21                # exact_rhs.c:205:21
	mulsd	(%rsp), %xmm0           # 8-byte Folded Reload
	.loc	7 204 51 is_stmt 1      # exact_rhs.c:204:51
	addsd	%xmm2, %xmm0
	.loc	7 207 19                # exact_rhs.c:207:19
	movsd	cuf+16(,%rsi,8), %xmm1  # xmm1 = mem[0],zero
	.loc	7 207 32 is_stmt 0      # exact_rhs.c:207:32
	movsd	cuf+8(,%rsi,8), %xmm2   # xmm2 = mem[0],zero
	.loc	7 207 31                # exact_rhs.c:207:31
	addsd	%xmm2, %xmm2
	.loc	7 207 27                # exact_rhs.c:207:27
	subsd	%xmm2, %xmm1
	.loc	7 207 38                # exact_rhs.c:207:38
	addsd	cuf(,%rsi,8), %xmm1
	.loc	7 207 17                # exact_rhs.c:207:17
	mulsd	48(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	7 206 27 is_stmt 1      # exact_rhs.c:206:27
	addsd	%xmm0, %xmm1
	.loc	7 208 19                # exact_rhs.c:208:19
	movsd	buf+112(%rcx), %xmm0    # xmm0 = mem[0],zero
	.loc	7 208 35 is_stmt 0      # exact_rhs.c:208:35
	movsd	buf+72(%rcx), %xmm2     # xmm2 = mem[0],zero
	.loc	7 208 34                # exact_rhs.c:208:34
	addsd	%xmm2, %xmm2
	.loc	7 208 30                # exact_rhs.c:208:30
	subsd	%xmm2, %xmm0
	.loc	7 208 44                # exact_rhs.c:208:44
	addsd	buf+32(%rcx), %xmm0
	.loc	7 208 17                # exact_rhs.c:208:17
	mulsd	24(%rsp), %xmm0         # 8-byte Folded Reload
	.loc	7 207 48 is_stmt 1      # exact_rhs.c:207:48
	addsd	%xmm1, %xmm0
	.loc	7 209 34                # exact_rhs.c:209:34
	movsd	ue+72(%rcx), %xmm7      # xmm7 = mem[0],zero
	.loc	7 209 33 is_stmt 0      # exact_rhs.c:209:33
	movapd	%xmm7, %xmm1
	addsd	%xmm1, %xmm1
	.loc	7 209 29                # exact_rhs.c:209:29
	subsd	%xmm1, %xmm5
	.loc	7 209 42                # exact_rhs.c:209:42
	addsd	%xmm4, %xmm5
	.loc	7 209 17                # exact_rhs.c:209:17
	mulsd	176(%rsp), %xmm5        # 8-byte Folded Reload
	.loc	7 208 57 is_stmt 1      # exact_rhs.c:208:57
	addsd	%xmm0, %xmm5
	.loc	7 202 29                # exact_rhs.c:202:29
	movsd	%xmm5, (%rdx)
.Ltmp181:
	.loc	7 178 21 discriminator 1 # exact_rhs.c:178:21
	incq	%rsi
	addq	$2600, %rdx             # imm = 0xA28
	addq	$40, %rcx
	cmpq	%rax, %rsi
.Ltmp182:
	.loc	7 194 35                # exact_rhs.c:194:35
	movapd	%xmm6, %xmm4
	jl	.LBB2_36
.Ltmp183:
.LBB2_37:                               # %for.cond1155.preheader
                                        #   in Loop: Header=BB2_31 Depth=2
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	7 217 53                # exact_rhs.c:217:53
	movsd	dssp(%rip), %xmm9       # xmm9 = mem[0],zero
	.loc	7 217 31 is_stmt 0      # exact_rhs.c:217:31
	leaq	(%r15,%r15,4), %rcx
	imulq	$169000, 80(%rsp), %rax # 8-byte Folded Reload
                                        # imm = 0x29428
.Ltmp184:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	7 218 16 is_stmt 1      # exact_rhs.c:218:16
	movupd	ue+40(%rip), %xmm13
	.loc	7 218 31 is_stmt 0      # exact_rhs.c:218:31
	movapd	ue+80(%rip), %xmm1
	.loc	7 218 43                # exact_rhs.c:218:43
	movapd	%xmm1, (%rsp)           # 16-byte Spill
	movupd	ue+120(%rip), %xmm15
.Ltmp185:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	7 217 31 is_stmt 1      # exact_rhs.c:217:31
	movupd	forcing+2600(%rax,%rcx,8), %xmm11
	.loc	7 218 15                # exact_rhs.c:218:15
	movapd	%xmm13, %xmm4
	movapd	.LCPI2_5(%rip), %xmm6   # xmm6 = [5.000000e+00,5.000000e+00]
	mulpd	%xmm6, %xmm4
	.loc	7 218 30 is_stmt 0      # exact_rhs.c:218:30
	movapd	.LCPI2_6(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	mulpd	%xmm10, %xmm1
	.loc	7 218 25                # exact_rhs.c:218:25
	subpd	%xmm1, %xmm4
	.loc	7 218 42                # exact_rhs.c:218:42
	addpd	%xmm15, %xmm4
	.loc	7 218 16                # exact_rhs.c:218:16
	movsd	ue+72(%rip), %xmm3      # xmm3 = mem[0],zero
	.loc	7 218 15                # exact_rhs.c:218:15
	movapd	%xmm3, %xmm12
	movsd	.LCPI2_8(%rip), %xmm0   # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm12
	.loc	7 218 31                # exact_rhs.c:218:31
	movsd	ue+112(%rip), %xmm7     # xmm7 = mem[0],zero
	.loc	7 218 30                # exact_rhs.c:218:30
	movapd	%xmm7, %xmm1
	movsd	.LCPI2_3(%rip), %xmm8   # xmm8 = mem[0],zero
	mulsd	%xmm8, %xmm1
	.loc	7 218 25                # exact_rhs.c:218:25
	subsd	%xmm1, %xmm12
	.loc	7 218 43                # exact_rhs.c:218:43
	movsd	ue+152(%rip), %xmm5     # xmm5 = mem[0],zero
	.loc	7 218 42                # exact_rhs.c:218:42
	addsd	%xmm5, %xmm12
	.loc	7 217 58 is_stmt 1      # exact_rhs.c:217:58
	mulsd	%xmm9, %xmm12
	.loc	7 221 16                # exact_rhs.c:221:16
	movapd	%xmm3, %xmm2
	mulsd	%xmm8, %xmm2
	.loc	7 221 33 is_stmt 0      # exact_rhs.c:221:33
	movapd	%xmm7, %xmm0
	movsd	.LCPI2_4(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	.loc	7 221 16                # exact_rhs.c:221:16
	subsd	%xmm2, %xmm0
	.loc	7 222 16 is_stmt 1      # exact_rhs.c:222:16
	mulsd	%xmm8, %xmm5
	.loc	7 221 43                # exact_rhs.c:221:43
	subsd	%xmm5, %xmm0
	.loc	7 222 28                # exact_rhs.c:222:28
	addsd	ue+192(%rip), %xmm0
	.loc	7 220 58                # exact_rhs.c:220:58
	mulsd	%xmm9, %xmm0
	.loc	7 217 58                # exact_rhs.c:217:58
	movlhps	%xmm9, %xmm9            # xmm9 = xmm9[0,0]
	mulpd	%xmm9, %xmm4
	.loc	7 217 51 is_stmt 0      # exact_rhs.c:217:51
	subpd	%xmm4, %xmm11
	.loc	7 217 29                # exact_rhs.c:217:29
	movupd	%xmm11, forcing+2600(%rax,%rcx,8)
.Ltmp186:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	7 220 31 is_stmt 1      # exact_rhs.c:220:31
	movupd	forcing+5200(%rax,%rcx,8), %xmm4
	.loc	7 221 16                # exact_rhs.c:221:16
	movapd	%xmm13, %xmm2
	mulpd	%xmm10, %xmm2
	.loc	7 221 33 is_stmt 0      # exact_rhs.c:221:33
	movapd	(%rsp), %xmm5           # 16-byte Reload
	movapd	.LCPI2_7(%rip), %xmm1   # xmm1 = [6.000000e+00,6.000000e+00]
	mulpd	%xmm1, %xmm5
	.loc	7 221 16                # exact_rhs.c:221:16
	subpd	%xmm2, %xmm5
	.loc	7 222 16 is_stmt 1      # exact_rhs.c:222:16
	movapd	%xmm15, %xmm2
	mulpd	%xmm10, %xmm2
	.loc	7 221 43                # exact_rhs.c:221:43
	subpd	%xmm2, %xmm5
	.loc	7 222 34                # exact_rhs.c:222:34
	movapd	ue+160(%rip), %xmm2
	.loc	7 222 28 is_stmt 0      # exact_rhs.c:222:28
	addpd	%xmm2, %xmm5
	.loc	7 220 58 is_stmt 1      # exact_rhs.c:220:58
	mulpd	%xmm9, %xmm5
	.loc	7 220 51 is_stmt 0      # exact_rhs.c:220:51
	subpd	%xmm5, %xmm4
	.loc	7 220 29                # exact_rhs.c:220:29
	movupd	%xmm4, forcing+5200(%rax,%rcx,8)
.Ltmp187:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	7 218 16 is_stmt 1      # exact_rhs.c:218:16
	movupd	ue+56(%rip), %xmm4
	.loc	7 218 31 is_stmt 0      # exact_rhs.c:218:31
	movapd	ue+96(%rip), %xmm11
	.loc	7 218 43                # exact_rhs.c:218:43
	movupd	ue+136(%rip), %xmm14
.Ltmp188:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	7 218 15                # exact_rhs.c:218:15
	movapd	%xmm4, %xmm5
	mulpd	%xmm6, %xmm5
	.loc	7 218 30                # exact_rhs.c:218:30
	movapd	%xmm11, %xmm6
	mulpd	%xmm10, %xmm6
	.loc	7 218 25                # exact_rhs.c:218:25
	subpd	%xmm6, %xmm5
	.loc	7 217 31 is_stmt 1      # exact_rhs.c:217:31
	movupd	forcing+2616(%rax,%rcx,8), %xmm6
	.loc	7 218 42                # exact_rhs.c:218:42
	addpd	%xmm14, %xmm5
	.loc	7 217 58                # exact_rhs.c:217:58
	mulpd	%xmm9, %xmm5
	.loc	7 217 51 is_stmt 0      # exact_rhs.c:217:51
	subpd	%xmm5, %xmm6
	.loc	7 217 29                # exact_rhs.c:217:29
	movupd	%xmm6, forcing+2616(%rax,%rcx,8)
	.loc	7 221 16 is_stmt 1      # exact_rhs.c:221:16
	movapd	%xmm4, %xmm5
	mulpd	%xmm10, %xmm5
	.loc	7 221 33 is_stmt 0      # exact_rhs.c:221:33
	movapd	%xmm11, %xmm6
	mulpd	%xmm1, %xmm6
	.loc	7 221 16                # exact_rhs.c:221:16
	subpd	%xmm5, %xmm6
	.loc	7 222 16 is_stmt 1      # exact_rhs.c:222:16
	movapd	%xmm14, %xmm5
	mulpd	%xmm10, %xmm5
	.loc	7 221 43                # exact_rhs.c:221:43
	subpd	%xmm5, %xmm6
	.loc	7 222 34                # exact_rhs.c:222:34
	movapd	ue+176(%rip), %xmm5
.Ltmp189:
	#DEBUG_VALUE: exact_rhs:j <- 1
	.loc	7 222 28 is_stmt 0      # exact_rhs.c:222:28
	addpd	%xmm5, %xmm6
	.loc	7 220 58 is_stmt 1      # exact_rhs.c:220:58
	mulpd	%xmm9, %xmm6
	movsd	.LCPI2_8(%rip), %xmm9   # xmm9 = mem[0],zero
	.loc	7 220 31 is_stmt 0      # exact_rhs.c:220:31
	movupd	forcing+5216(%rax,%rcx,8), %xmm1
	.loc	7 220 51                # exact_rhs.c:220:51
	subpd	%xmm6, %xmm1
	.loc	7 220 29                # exact_rhs.c:220:29
	movupd	%xmm1, forcing+5216(%rax,%rcx,8)
	.loc	7 217 31 is_stmt 1      # exact_rhs.c:217:31
	movsd	forcing+2632(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	7 217 51 is_stmt 0      # exact_rhs.c:217:51
	subsd	%xmm12, %xmm1
	.loc	7 217 29                # exact_rhs.c:217:29
	movsd	%xmm1, forcing+2632(%rax,%rcx,8)
.Ltmp190:
	#DEBUG_VALUE: exact_rhs:j <- 2
	.loc	7 220 31 is_stmt 1      # exact_rhs.c:220:31
	movsd	forcing+5232(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	7 220 51 is_stmt 0      # exact_rhs.c:220:51
	subsd	%xmm0, %xmm1
	.loc	7 220 29                # exact_rhs.c:220:29
	movsd	%xmm1, forcing+5232(%rax,%rcx,8)
.Ltmp191:
	.loc	7 225 7 is_stmt 1 discriminator 1 # exact_rhs.c:225:7
	movslq	grid_points+4(%rip), %rcx
	.loc	7 225 38 is_stmt 0 discriminator 1 # exact_rhs.c:225:38
	movq	%rcx, %rdx
	addq	$-4, %rdx
.Ltmp192:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 225 21 discriminator 1 # exact_rhs.c:225:21
	cmpl	$3, %edx
	jl	.LBB2_41
# BB#38:                                # %for.cond1246.preheader.lr.ph
                                        #   in Loop: Header=BB2_31 Depth=2
.Ltmp193:
	.loc	7 227 55 is_stmt 1      # exact_rhs.c:227:55
	movsd	dssp(%rip), %xmm12      # xmm12 = mem[0],zero
	.loc	7 229 33                # exact_rhs.c:229:33
	movapd	%xmm12, 32(%rsp)        # 16-byte Spill
	movlpd	ue+160(%rip), %xmm2     # xmm2 = mem[0],xmm2[1]
	.loc	7 229 18 is_stmt 0      # exact_rhs.c:229:18
	movlpd	ue+120(%rip), %xmm15    # xmm15 = mem[0],xmm15[1]
.Ltmp194:
	.loc	7 225 7 is_stmt 1 discriminator 1 # exact_rhs.c:225:7
	shufpd	$1, %xmm13, %xmm13      # xmm13 = xmm13[1,0]
	movapd	(%rsp), %xmm0           # 16-byte Reload
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
.Ltmp195:
	.loc	7 227 59                # exact_rhs.c:227:59
	movlhps	%xmm12, %xmm12          # xmm12 = xmm12[0,0]
	.loc	7 228 31                # exact_rhs.c:228:31
	movl	$ue+232, %ecx
	movq	%r13, %rsi
	movl	$2, %edi
.Ltmp196:
	.loc	7 218 30                # exact_rhs.c:218:30
	movapd	.LCPI2_6(%rip), %xmm9   # xmm9 = [4.000000e+00,4.000000e+00]
	.loc	7 221 33                # exact_rhs.c:221:33
	movapd	.LCPI2_7(%rip), %xmm10  # xmm10 = [6.000000e+00,6.000000e+00]
.Ltmp197:
	.p2align	4, 0x90
.LBB2_39:                               # %for.cond1246.preheader
                                        #   Parent Loop BB2_29 Depth=1
                                        #     Parent Loop BB2_31 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 228 25                # exact_rhs.c:228:25
	movsd	-192(%rcx), %xmm1       # xmm1 = mem[0],zero
	unpcklpd	%xmm13, %xmm1   # xmm1 = xmm1[0],xmm13[0]
	.loc	7 228 31 is_stmt 0      # exact_rhs.c:228:31
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	movapd	%xmm7, %xmm13
	.loc	7 227 33 is_stmt 1      # exact_rhs.c:227:33
	movupd	-32(%rsi), %xmm7
	.loc	7 228 30                # exact_rhs.c:228:30
	movsd	-152(%rcx), %xmm6       # xmm6 = mem[0],zero
	unpcklpd	%xmm0, %xmm6    # xmm6 = xmm6[0],xmm0[0]
	mulpd	%xmm9, %xmm6
	.loc	7 228 25 is_stmt 0      # exact_rhs.c:228:25
	subpd	%xmm6, %xmm1
	.loc	7 229 17 is_stmt 1      # exact_rhs.c:229:17
	movapd	%xmm15, %xmm0
	mulpd	%xmm10, %xmm0
	.loc	7 228 42                # exact_rhs.c:228:42
	addpd	%xmm1, %xmm0
	.loc	7 229 32                # exact_rhs.c:229:32
	movapd	%xmm2, %xmm1
	mulpd	%xmm9, %xmm1
	.loc	7 229 27 is_stmt 0      # exact_rhs.c:229:27
	subpd	%xmm1, %xmm0
	.loc	7 229 46                # exact_rhs.c:229:46
	movupd	-32(%rcx), %xmm6
	.loc	7 229 44                # exact_rhs.c:229:44
	addpd	%xmm6, %xmm0
	.loc	7 227 59 is_stmt 1      # exact_rhs.c:227:59
	mulpd	%xmm12, %xmm0
	.loc	7 227 53 is_stmt 0      # exact_rhs.c:227:53
	subpd	%xmm0, %xmm7
	.loc	7 227 31                # exact_rhs.c:227:31
	movupd	%xmm7, -32(%rsi)
	.loc	7 227 33                # exact_rhs.c:227:33
	movupd	-16(%rsi), %xmm0
	.loc	7 228 30 is_stmt 1      # exact_rhs.c:228:30
	movapd	%xmm11, %xmm1
	mulpd	%xmm9, %xmm1
	.loc	7 228 25 is_stmt 0      # exact_rhs.c:228:25
	subpd	%xmm1, %xmm4
	.loc	7 229 17 is_stmt 1      # exact_rhs.c:229:17
	movapd	%xmm14, %xmm7
	mulpd	%xmm10, %xmm7
	.loc	7 228 42                # exact_rhs.c:228:42
	addpd	%xmm4, %xmm7
	.loc	7 229 32                # exact_rhs.c:229:32
	movapd	%xmm5, %xmm1
	mulpd	%xmm9, %xmm1
	.loc	7 229 27 is_stmt 0      # exact_rhs.c:229:27
	subpd	%xmm1, %xmm7
	.loc	7 229 46                # exact_rhs.c:229:46
	movupd	-16(%rcx), %xmm1
	.loc	7 229 44                # exact_rhs.c:229:44
	addpd	%xmm1, %xmm7
	.loc	7 227 59 is_stmt 1      # exact_rhs.c:227:59
	mulpd	%xmm12, %xmm7
	.loc	7 227 53 is_stmt 0      # exact_rhs.c:227:53
	subpd	%xmm7, %xmm0
	.loc	7 227 31                # exact_rhs.c:227:31
	movupd	%xmm0, -16(%rsi)
	.loc	7 228 30 is_stmt 1      # exact_rhs.c:228:30
	movapd	%xmm13, %xmm0
	mulsd	%xmm8, %xmm0
	.loc	7 228 25 is_stmt 0      # exact_rhs.c:228:25
	subsd	%xmm0, %xmm3
	.loc	7 229 18 is_stmt 1      # exact_rhs.c:229:18
	movsd	-80(%rcx), %xmm7        # xmm7 = mem[0],zero
	.loc	7 229 17 is_stmt 0      # exact_rhs.c:229:17
	movapd	%xmm7, %xmm0
	mulsd	.LCPI2_4(%rip), %xmm0
	.loc	7 228 42 is_stmt 1      # exact_rhs.c:228:42
	addsd	%xmm3, %xmm0
	movsd	-40(%rcx), %xmm3        # xmm3 = mem[0],zero
	.loc	7 229 32                # exact_rhs.c:229:32
	mulsd	%xmm8, %xmm3
	.loc	7 229 27 is_stmt 0      # exact_rhs.c:229:27
	subsd	%xmm3, %xmm0
	.loc	7 227 33 is_stmt 1      # exact_rhs.c:227:33
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	7 229 44                # exact_rhs.c:229:44
	addsd	(%rcx), %xmm0
	.loc	7 227 59                # exact_rhs.c:227:59
	mulsd	32(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	7 227 53 is_stmt 0      # exact_rhs.c:227:53
	subsd	%xmm0, %xmm3
	.loc	7 227 31                # exact_rhs.c:227:31
	movsd	%xmm3, (%rsi)
.Ltmp198:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 225 7 is_stmt 1 discriminator 1 # exact_rhs.c:225:7
	shufpd	$1, %xmm15, %xmm15      # xmm15 = xmm15[1,0]
.Ltmp199:
	.loc	7 228 31                # exact_rhs.c:228:31
	movapd	%xmm15, %xmm0
	.loc	7 229 18                # exact_rhs.c:229:18
	movapd	%xmm2, %xmm15
	.loc	7 228 14                # exact_rhs.c:228:14
	movapd	%xmm11, %xmm4
	.loc	7 228 31 is_stmt 0      # exact_rhs.c:228:31
	movapd	%xmm14, %xmm11
	.loc	7 229 18 is_stmt 1      # exact_rhs.c:229:18
	movapd	%xmm5, %xmm14
	.loc	7 228 14                # exact_rhs.c:228:14
	movapd	(%rsp), %xmm2           # 16-byte Reload
.Ltmp200:
	.loc	7 225 21 discriminator 1 # exact_rhs.c:225:21
	incq	%rdi
	addq	$2600, %rsi             # imm = 0xA28
	addq	$40, %rcx
	cmpq	%rdx, %rdi
.Ltmp201:
	.loc	7 228 14                # exact_rhs.c:228:14
	movapd	%xmm13, %xmm3
	movapd	%xmm2, %xmm13
	.loc	7 229 33                # exact_rhs.c:229:33
	movapd	%xmm6, %xmm2
	movapd	%xmm1, %xmm5
.Ltmp202:
	.loc	7 225 7 discriminator 1 # exact_rhs.c:225:7
	jl	.LBB2_39
.Ltmp203:
# BB#40:                                # %for.cond1305.preheader.loopexit
                                        #   in Loop: Header=BB2_31 Depth=2
	.loc	7 234 13                # exact_rhs.c:234:13
	movl	grid_points+4(%rip), %ecx
	movsd	.LCPI2_8(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm9
.LBB2_41:                               # %for.body1308
                                        #   in Loop: Header=BB2_31 Depth=2
	.loc	7 237 31                # exact_rhs.c:237:31
	movslq	%ecx, %rdi
	.loc	7 234 27                # exact_rhs.c:234:27
	imulq	$2600, %rdi, %rdx       # imm = 0xA28
	.loc	7 235 53                # exact_rhs.c:235:53
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	7 236 33                # exact_rhs.c:236:33
	leaq	(,%rdi,8), %rsi
	.loc	7 235 31                # exact_rhs.c:235:31
	leaq	forcing(%rdx,%rax), %rax
	leaq	(,%r15,8), %rdx
	leaq	(%rdx,%rdx,4), %rdx
	movsd	-7800(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 236 12                # exact_rhs.c:236:12
	movsd	ue-200(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 236 29 is_stmt 0      # exact_rhs.c:236:29
	movsd	ue-160(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 236 28                # exact_rhs.c:236:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 236 23                # exact_rhs.c:236:23
	subsd	%xmm4, %xmm2
	.loc	7 237 16 is_stmt 1      # exact_rhs.c:237:16
	movsd	ue-120(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 237 15 is_stmt 0      # exact_rhs.c:237:15
	movapd	%xmm4, %xmm5
	movsd	.LCPI2_4(%rip), %xmm7   # xmm7 = mem[0],zero
	mulsd	%xmm7, %xmm5
	.loc	7 236 40 is_stmt 1      # exact_rhs.c:236:40
	addsd	%xmm2, %xmm5
	.loc	7 237 31                # exact_rhs.c:237:31
	leaq	-16(,%rdi,8), %rdi
	movsd	ue(%rdi,%rdi,4), %xmm2  # xmm2 = mem[0],zero
	.loc	7 237 30 is_stmt 0      # exact_rhs.c:237:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 237 25                # exact_rhs.c:237:25
	subsd	%xmm6, %xmm5
	.loc	7 235 58 is_stmt 1      # exact_rhs.c:235:58
	mulsd	%xmm0, %xmm5
	.loc	7 235 51 is_stmt 0      # exact_rhs.c:235:51
	subsd	%xmm5, %xmm1
	.loc	7 235 29                # exact_rhs.c:235:29
	movsd	%xmm1, -7800(%rax,%rdx)
	.loc	7 239 31 is_stmt 1      # exact_rhs.c:239:31
	movsd	-5200(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 240 28                # exact_rhs.c:240:28
	mulsd	%xmm8, %xmm4
	.loc	7 240 23 is_stmt 0      # exact_rhs.c:240:23
	subsd	%xmm4, %xmm3
	.loc	7 240 45                # exact_rhs.c:240:45
	mulsd	%xmm9, %xmm2
	.loc	7 240 40                # exact_rhs.c:240:40
	addsd	%xmm3, %xmm2
	.loc	7 239 58 is_stmt 1      # exact_rhs.c:239:58
	mulsd	%xmm0, %xmm2
	.loc	7 239 51 is_stmt 0      # exact_rhs.c:239:51
	subsd	%xmm2, %xmm1
	.loc	7 239 29                # exact_rhs.c:239:29
	movsd	%xmm1, -5200(%rax,%rdx)
	.loc	7 235 31 is_stmt 1      # exact_rhs.c:235:31
	movsd	-7792(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 236 12                # exact_rhs.c:236:12
	movsd	ue-192(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 236 29 is_stmt 0      # exact_rhs.c:236:29
	movsd	ue-152(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 236 28                # exact_rhs.c:236:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 236 23                # exact_rhs.c:236:23
	subsd	%xmm4, %xmm2
	.loc	7 237 16 is_stmt 1      # exact_rhs.c:237:16
	movsd	ue-112(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 237 15 is_stmt 0      # exact_rhs.c:237:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 236 40 is_stmt 1      # exact_rhs.c:236:40
	addsd	%xmm2, %xmm5
	.loc	7 237 31                # exact_rhs.c:237:31
	movsd	ue+8(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 237 30 is_stmt 0      # exact_rhs.c:237:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 237 25                # exact_rhs.c:237:25
	subsd	%xmm6, %xmm5
	.loc	7 235 58 is_stmt 1      # exact_rhs.c:235:58
	mulsd	%xmm0, %xmm5
	.loc	7 235 51 is_stmt 0      # exact_rhs.c:235:51
	subsd	%xmm5, %xmm1
	.loc	7 235 29                # exact_rhs.c:235:29
	movsd	%xmm1, -7792(%rax,%rdx)
	.loc	7 239 31 is_stmt 1      # exact_rhs.c:239:31
	movsd	-5192(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 240 28                # exact_rhs.c:240:28
	mulsd	%xmm8, %xmm4
	.loc	7 240 23 is_stmt 0      # exact_rhs.c:240:23
	subsd	%xmm4, %xmm3
	.loc	7 240 45                # exact_rhs.c:240:45
	mulsd	%xmm9, %xmm2
	.loc	7 240 40                # exact_rhs.c:240:40
	addsd	%xmm3, %xmm2
	.loc	7 239 58 is_stmt 1      # exact_rhs.c:239:58
	mulsd	%xmm0, %xmm2
	.loc	7 239 51 is_stmt 0      # exact_rhs.c:239:51
	subsd	%xmm2, %xmm1
	.loc	7 239 29                # exact_rhs.c:239:29
	movsd	%xmm1, -5192(%rax,%rdx)
	.loc	7 235 31 is_stmt 1      # exact_rhs.c:235:31
	movsd	-7784(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 236 12                # exact_rhs.c:236:12
	movsd	ue-184(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 236 29 is_stmt 0      # exact_rhs.c:236:29
	movsd	ue-144(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 236 28                # exact_rhs.c:236:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 236 23                # exact_rhs.c:236:23
	subsd	%xmm4, %xmm2
	.loc	7 237 16 is_stmt 1      # exact_rhs.c:237:16
	movsd	ue-104(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 237 15 is_stmt 0      # exact_rhs.c:237:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 236 40 is_stmt 1      # exact_rhs.c:236:40
	addsd	%xmm2, %xmm5
	.loc	7 237 31                # exact_rhs.c:237:31
	movsd	ue+16(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 237 30 is_stmt 0      # exact_rhs.c:237:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 237 25                # exact_rhs.c:237:25
	subsd	%xmm6, %xmm5
	.loc	7 235 58 is_stmt 1      # exact_rhs.c:235:58
	mulsd	%xmm0, %xmm5
	.loc	7 235 51 is_stmt 0      # exact_rhs.c:235:51
	subsd	%xmm5, %xmm1
	.loc	7 235 29                # exact_rhs.c:235:29
	movsd	%xmm1, -7784(%rax,%rdx)
	.loc	7 239 31 is_stmt 1      # exact_rhs.c:239:31
	movsd	-5184(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 240 28                # exact_rhs.c:240:28
	mulsd	%xmm8, %xmm4
	.loc	7 240 23 is_stmt 0      # exact_rhs.c:240:23
	subsd	%xmm4, %xmm3
	.loc	7 240 45                # exact_rhs.c:240:45
	mulsd	%xmm9, %xmm2
	.loc	7 240 40                # exact_rhs.c:240:40
	addsd	%xmm3, %xmm2
	.loc	7 239 58 is_stmt 1      # exact_rhs.c:239:58
	mulsd	%xmm0, %xmm2
	.loc	7 239 51 is_stmt 0      # exact_rhs.c:239:51
	subsd	%xmm2, %xmm1
	.loc	7 239 29                # exact_rhs.c:239:29
	movsd	%xmm1, -5184(%rax,%rdx)
	.loc	7 235 31 is_stmt 1      # exact_rhs.c:235:31
	movsd	-7776(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 236 12                # exact_rhs.c:236:12
	movsd	ue-176(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 236 29 is_stmt 0      # exact_rhs.c:236:29
	movsd	ue-136(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 236 28                # exact_rhs.c:236:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 236 23                # exact_rhs.c:236:23
	subsd	%xmm4, %xmm2
	.loc	7 237 16 is_stmt 1      # exact_rhs.c:237:16
	movsd	ue-96(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 237 15 is_stmt 0      # exact_rhs.c:237:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 236 40 is_stmt 1      # exact_rhs.c:236:40
	addsd	%xmm2, %xmm5
	.loc	7 237 31                # exact_rhs.c:237:31
	movsd	ue+24(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 237 30 is_stmt 0      # exact_rhs.c:237:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 237 25                # exact_rhs.c:237:25
	subsd	%xmm6, %xmm5
	.loc	7 235 58 is_stmt 1      # exact_rhs.c:235:58
	mulsd	%xmm0, %xmm5
	.loc	7 235 51 is_stmt 0      # exact_rhs.c:235:51
	subsd	%xmm5, %xmm1
	.loc	7 235 29                # exact_rhs.c:235:29
	movsd	%xmm1, -7776(%rax,%rdx)
	.loc	7 239 31 is_stmt 1      # exact_rhs.c:239:31
	movsd	-5176(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 240 28                # exact_rhs.c:240:28
	mulsd	%xmm8, %xmm4
	.loc	7 240 23 is_stmt 0      # exact_rhs.c:240:23
	subsd	%xmm4, %xmm3
	.loc	7 240 45                # exact_rhs.c:240:45
	mulsd	%xmm9, %xmm2
	.loc	7 240 40                # exact_rhs.c:240:40
	addsd	%xmm3, %xmm2
	.loc	7 239 58 is_stmt 1      # exact_rhs.c:239:58
	mulsd	%xmm0, %xmm2
	.loc	7 239 51 is_stmt 0      # exact_rhs.c:239:51
	subsd	%xmm2, %xmm1
	.loc	7 239 29                # exact_rhs.c:239:29
	movsd	%xmm1, -5176(%rax,%rdx)
	.loc	7 235 31 is_stmt 1      # exact_rhs.c:235:31
	movsd	-7768(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 236 12                # exact_rhs.c:236:12
	movsd	ue-168(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 236 29 is_stmt 0      # exact_rhs.c:236:29
	movsd	ue-128(%rsi,%rsi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 236 28                # exact_rhs.c:236:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 236 23                # exact_rhs.c:236:23
	subsd	%xmm4, %xmm2
	.loc	7 237 16 is_stmt 1      # exact_rhs.c:237:16
	movsd	ue-88(%rsi,%rsi,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 237 15 is_stmt 0      # exact_rhs.c:237:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 236 40 is_stmt 1      # exact_rhs.c:236:40
	addsd	%xmm2, %xmm5
	.loc	7 237 31                # exact_rhs.c:237:31
	movsd	ue+32(%rdi,%rdi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 237 30 is_stmt 0      # exact_rhs.c:237:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 237 25                # exact_rhs.c:237:25
	subsd	%xmm6, %xmm5
	.loc	7 235 58 is_stmt 1      # exact_rhs.c:235:58
	mulsd	%xmm0, %xmm5
	.loc	7 235 51 is_stmt 0      # exact_rhs.c:235:51
	subsd	%xmm5, %xmm1
	.loc	7 235 29                # exact_rhs.c:235:29
	movsd	%xmm1, -7768(%rax,%rdx)
	.loc	7 239 31 is_stmt 1      # exact_rhs.c:239:31
	movsd	-5168(%rax,%rdx), %xmm1 # xmm1 = mem[0],zero
	.loc	7 240 28                # exact_rhs.c:240:28
	mulsd	%xmm8, %xmm4
	.loc	7 240 23 is_stmt 0      # exact_rhs.c:240:23
	subsd	%xmm4, %xmm3
	.loc	7 240 45                # exact_rhs.c:240:45
	mulsd	%xmm9, %xmm2
	.loc	7 240 40                # exact_rhs.c:240:40
	addsd	%xmm3, %xmm2
	.loc	7 239 58 is_stmt 1      # exact_rhs.c:239:58
	mulsd	%xmm0, %xmm2
	.loc	7 239 51 is_stmt 0      # exact_rhs.c:239:51
	subsd	%xmm2, %xmm1
	.loc	7 239 29                # exact_rhs.c:239:29
	movsd	%xmm1, -5168(%rax,%rdx)
.Ltmp204:
	.loc	7 156 19 is_stmt 1 discriminator 1 # exact_rhs.c:156:19
	movslq	grid_points(%rip), %rax
	.loc	7 156 36 is_stmt 0 discriminator 1 # exact_rhs.c:156:36
	leaq	-2(%rax), %rdx
	.loc	7 156 5 discriminator 1 # exact_rhs.c:156:5
	addq	$40, %r12
	addq	$40, %r13
	.loc	7 156 19 discriminator 1 # exact_rhs.c:156:19
	cmpq	%rdx, %r15
	.loc	7 156 5 discriminator 1 # exact_rhs.c:156:5
	leaq	1(%r15), %r15
	movsd	16(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	jl	.LBB2_31
.Ltmp205:
# BB#42:                                # %for.inc1396.loopexit
                                        #   in Loop: Header=BB2_29 Depth=1
	.loc	7 154 20 is_stmt 1 discriminator 1 # exact_rhs.c:154:20
	movl	grid_points+8(%rip), %r12d
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdi         # 8-byte Reload
.LBB2_43:                               # %for.inc1396
                                        #   in Loop: Header=BB2_29 Depth=1
	.loc	7 154 34 is_stmt 0 discriminator 1 # exact_rhs.c:154:34
	leal	-2(%r12), %ecx
	.loc	7 154 17 discriminator 1 # exact_rhs.c:154:17
	movslq	%ecx, %rcx
	.loc	7 154 3 discriminator 1 # exact_rhs.c:154:3
	addq	$169000, %rsi           # imm = 0x29428
	addq	$169000, %rdi           # imm = 0x29428
	movq	80(%rsp), %rdx          # 8-byte Reload
	.loc	7 154 17 discriminator 1 # exact_rhs.c:154:17
	cmpq	%rcx, %rdx
	.loc	7 154 3 discriminator 1 # exact_rhs.c:154:3
	leaq	1(%rdx), %rdx
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	jl	.LBB2_29
.Ltmp206:
.LBB2_44:                               # %for.cond1399.preheader
	.loc	7 248 20 is_stmt 1 discriminator 1 # exact_rhs.c:248:20
	movl	grid_points+4(%rip), %ebp
	.loc	7 248 17 is_stmt 0 discriminator 1 # exact_rhs.c:248:17
	movl	%ebp, %eax
	addl	$-2, %eax
	jle	.LBB2_61
# BB#45:                                # %for.body1403.lr.ph
.Ltmp207:
	.loc	7 250 22 is_stmt 1 discriminator 1 # exact_rhs.c:250:22
	movl	grid_points(%rip), %eax
	movl	$1, %edx
	movq	%rdx, 72(%rsp)          # 8-byte Spill
	movl	$forcing+171672, %edi
	movl	$forcing+509672, %ecx
	leaq	112(%rsp), %r8
	.p2align	4, 0x90
.LBB2_46:                               # %for.body1403
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_48 Depth 2
                                        #       Child Loop BB2_50 Depth 3
                                        #       Child Loop BB2_53 Depth 3
                                        #       Child Loop BB2_56 Depth 3
	#DEBUG_VALUE: exact_rhs:i <- 1
	.loc	7 250 19 is_stmt 0 discriminator 1 # exact_rhs.c:250:19
	movl	%eax, %edx
	addl	$-2, %edx
	jle	.LBB2_60
.Ltmp208:
# BB#47:                                #   in Loop: Header=BB2_46 Depth=1
	.loc	7 249 11 is_stmt 1      # exact_rhs.c:249:11
	movq	72(%rsp), %rax          # 8-byte Reload
	cvtsi2sdl	%eax, %xmm1
	.loc	7 249 21 is_stmt 0      # exact_rhs.c:249:21
	mulsd	dnym1(%rip), %xmm1
.Ltmp209:
	#DEBUG_VALUE: exact_rhs:eta <- %XMM1
	.loc	7 253 24 is_stmt 1 discriminator 1 # exact_rhs.c:253:24
	movsd	%xmm1, 16(%rsp)         # 8-byte Spill
	movq	%rcx, %rbp
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	movq	%rdi, 280(%rsp)         # 8-byte Spill
	movq	%rdi, %rbx
	movl	$1, %r15d
.Ltmp210:
	.p2align	4, 0x90
.LBB2_48:                               # %for.body1410
                                        #   Parent Loop BB2_46 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB2_50 Depth 3
                                        #       Child Loop BB2_53 Depth 3
                                        #       Child Loop BB2_56 Depth 3
	#DEBUG_VALUE: exact_rhs:k <- 0
	movq	%rbp, 288(%rsp)         # 8-byte Spill
	.loc	7 253 21 is_stmt 0 discriminator 1 # exact_rhs.c:253:21
	testl	%r12d, %r12d
	movq	%r8, %rbp
	jle	.LBB2_51
.Ltmp211:
# BB#49:                                #   in Loop: Header=BB2_48 Depth=2
	.loc	7 251 12 is_stmt 1      # exact_rhs.c:251:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	7 251 22 is_stmt 0      # exact_rhs.c:251:22
	mulsd	dnxm1(%rip), %xmm0
.Ltmp212:
	#DEBUG_VALUE: exact_rhs:xi <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp213:
	#DEBUG_VALUE: exact_rhs:xi <- [%RSP+0]
	xorl	%r14d, %r14d
	xorl	%r13d, %r13d
.Ltmp214:
	.p2align	4, 0x90
.LBB2_50:                               # %for.body1417
                                        #   Parent Loop BB2_46 Depth=1
                                        #     Parent Loop BB2_48 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 254 16 is_stmt 1      # exact_rhs.c:254:16
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%r13d, %xmm2
	.loc	7 254 26 is_stmt 0      # exact_rhs.c:254:26
	mulsd	dnzm1(%rip), %xmm2
.Ltmp215:
	#DEBUG_VALUE: exact_rhs:zeta <- %XMM2
	.loc	7 256 9 is_stmt 1       # exact_rhs.c:256:9
	movsd	(%rsp), %xmm0           # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	%rbp, %rdi
	callq	exact_solution
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 261 19                # exact_rhs.c:261:19
	movsd	.LCPI2_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm3
	movsd	16(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
.Ltmp216:
	.loc	7 258 20                # exact_rhs.c:258:20
	movq	144(%rsp), %rax
	movq	%rax, ue+32(%r14)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm2
.Ltmp217:
	movups	%xmm2, ue+16(%r14)
	movups	%xmm0, ue(%r14)
.Ltmp218:
	.loc	7 261 19                # exact_rhs.c:261:19
	divsd	112(%rsp), %xmm3
.Ltmp219:
	#DEBUG_VALUE: exact_rhs:dtpp <- %XMM3
	#DEBUG_VALUE: exact_rhs:m <- 1
	.loc	7 264 30                # exact_rhs.c:264:30
	movupd	120(%rsp), %xmm0
	.loc	7 264 28 is_stmt 0      # exact_rhs.c:264:28
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
.Ltmp220:
	mulpd	%xmm3, %xmm0
	.loc	7 264 21                # exact_rhs.c:264:21
	movupd	%xmm0, buf+8(%r14)
	.loc	7 264 30                # exact_rhs.c:264:30
	movupd	136(%rsp), %xmm2
	.loc	7 264 28                # exact_rhs.c:264:28
	mulpd	%xmm3, %xmm2
	.loc	7 264 21                # exact_rhs.c:264:21
	movupd	%xmm2, buf+24(%r14)
	movsd	ue+24(%r14), %xmm5      # xmm5 = mem[0],zero
.Ltmp221:
	.loc	7 270 30 is_stmt 1      # exact_rhs.c:270:30
	mulsd	%xmm2, %xmm5
	.loc	7 267 31                # exact_rhs.c:267:31
	mulsd	%xmm2, %xmm2
	.loc	7 267 19 is_stmt 0      # exact_rhs.c:267:19
	movsd	%xmm2, cuf(,%r13,8)
	.loc	7 268 64 is_stmt 1      # exact_rhs.c:268:64
	movapd	%xmm0, %xmm3
	movsd	ue+8(%r14), %xmm4       # xmm4 = mem[0],zero
	.loc	7 269 30                # exact_rhs.c:269:30
	mulsd	%xmm0, %xmm4
	.loc	7 268 40                # exact_rhs.c:268:40
	mulsd	%xmm0, %xmm0
	.loc	7 268 28 is_stmt 0      # exact_rhs.c:268:28
	addsd	%xmm2, %xmm0
	.loc	7 268 64                # exact_rhs.c:268:64
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	movsd	ue+16(%r14), %xmm2      # xmm2 = mem[0],zero
	.loc	7 269 51 is_stmt 1      # exact_rhs.c:269:51
	mulsd	%xmm3, %xmm2
	.loc	7 268 64                # exact_rhs.c:268:64
	mulsd	%xmm3, %xmm3
	.loc	7 268 52 is_stmt 0      # exact_rhs.c:268:52
	addsd	%xmm0, %xmm3
	movsd	.LCPI2_1(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	7 268 19                # exact_rhs.c:268:19
	movsd	%xmm3, buf(%r14)
	.loc	7 269 40 is_stmt 1      # exact_rhs.c:269:40
	addsd	%xmm4, %xmm2
	.loc	7 269 61 is_stmt 0      # exact_rhs.c:269:61
	addsd	%xmm2, %xmm5
	.loc	7 269 19                # exact_rhs.c:269:19
	mulsd	%xmm0, %xmm5
	.loc	7 269 14                # exact_rhs.c:269:14
	movsd	%xmm5, q(,%r13,8)
.Ltmp222:
	.loc	7 253 7 is_stmt 1 discriminator 1 # exact_rhs.c:253:7
	incq	%r13
	.loc	7 253 21 is_stmt 0 discriminator 1 # exact_rhs.c:253:21
	movslq	grid_points+8(%rip), %r12
	addq	$40, %r14
	cmpq	%r12, %r13
	jl	.LBB2_50
.Ltmp223:
.LBB2_51:                               # %for.cond1509.preheader
                                        #   in Loop: Header=BB2_48 Depth=2
	movq	%rbp, %r8
.Ltmp224:
	.loc	7 273 21 is_stmt 1 discriminator 1 # exact_rhs.c:273:21
	addl	$-2, %r12d
	movsd	.LCPI2_2(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm3
	jle	.LBB2_54
# BB#52:                                # %for.body1513.lr.ph
                                        #   in Loop: Header=BB2_48 Depth=2
.Ltmp225:
	.loc	7 278 11                # exact_rhs.c:278:11
	movsd	tz2(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	7 292 37                # exact_rhs.c:292:37
	movapd	%xmm0, 256(%rsp)        # 16-byte Spill
	movsd	c2(%rip), %xmm1         # xmm1 = mem[0],zero
	.loc	7 298 26                # exact_rhs.c:298:26
	movsd	%xmm1, 32(%rsp)         # 8-byte Spill
	movsd	c1(%rip), %xmm1         # xmm1 = mem[0],zero
	movsd	%xmm1, 48(%rsp)         # 8-byte Spill
	movsd	zzcon3(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	7 300 14                # exact_rhs.c:300:14
	mulsd	.LCPI2_1(%rip), %xmm1
	movsd	%xmm1, 24(%rsp)         # 8-byte Spill
	.loc	7 301 11                # exact_rhs.c:301:11
	movsd	zzcon4(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	7 302 11                # exact_rhs.c:302:11
	movsd	%xmm1, 176(%rsp)        # 8-byte Spill
	movsd	zzcon5(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	7 303 11                # exact_rhs.c:303:11
	movsd	%xmm1, 160(%rsp)        # 8-byte Spill
	movsd	dz5tz1(%rip), %xmm1     # xmm1 = mem[0],zero
.Ltmp226:
	.loc	7 273 7 discriminator 1 # exact_rhs.c:273:7
	movsd	%xmm1, 240(%rsp)        # 8-byte Spill
	movslq	%r12d, %rax
.Ltmp227:
	.loc	7 278 28                # exact_rhs.c:278:28
	movsd	ue+24(%rip), %xmm9      # xmm9 = mem[0],zero
	.loc	7 282 47                # exact_rhs.c:282:47
	movsd	buf+24(%rip), %xmm4     # xmm4 = mem[0],zero
	.loc	7 278 14                # exact_rhs.c:278:14
	movsd	zzcon2(%rip), %xmm1     # xmm1 = mem[0],zero
	movapd	%xmm0, %xmm2
	unpcklpd	%xmm1, %xmm2    # xmm2 = xmm2[0],xmm1[0]
	movapd	%xmm2, 208(%rsp)        # 16-byte Spill
	.loc	7 279 17                # exact_rhs.c:279:17
	movsd	dz1tz1(%rip), %xmm2     # xmm2 = mem[0],zero
	movhpd	dz2tz1(%rip), %xmm2     # xmm2 = xmm2[0],mem[0]
	movapd	%xmm2, 96(%rsp)         # 16-byte Spill
	.loc	7 286 57                # exact_rhs.c:286:57
	movapd	%xmm0, %xmm2
	movapd	%xmm0, %xmm5
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 80(%rsp)         # 16-byte Spill
	.loc	7 288 17                # exact_rhs.c:288:17
	movhpd	zzcon1(%rip), %xmm1     # xmm1 = xmm1[0],mem[0]
	movapd	%xmm1, 224(%rsp)        # 16-byte Spill
	.loc	7 289 17                # exact_rhs.c:289:17
	movsd	dz3tz1(%rip), %xmm0     # xmm0 = mem[0],zero
	movhpd	dz4tz1(%rip), %xmm0     # xmm0 = xmm0[0],mem[0]
	movapd	%xmm0, 192(%rsp)        # 16-byte Spill
	.loc	7 293 25                # exact_rhs.c:293:25
	movl	$0, %ecx
	movq	%rbx, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB2_53:                               # %for.body1513
                                        #   Parent Loop BB2_46 Depth=1
                                        #     Parent Loop BB2_48 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 277 51                # exact_rhs.c:277:51
	movsd	-32(%rdx), %xmm12       # xmm12 = mem[0],zero
	.loc	7 281 31                # exact_rhs.c:281:31
	movsd	-24(%rdx), %xmm14       # xmm14 = mem[0],zero
	.loc	7 279 19                # exact_rhs.c:279:19
	movupd	ue+80(%rcx), %xmm13
	.loc	7 282 23                # exact_rhs.c:282:23
	movapd	%xmm13, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	7 288 19                # exact_rhs.c:288:19
	movupd	buf+96(%rcx), %xmm11
	.loc	7 282 23                # exact_rhs.c:282:23
	movapd	%xmm11, (%rsp)          # 16-byte Spill
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	mulsd	%xmm11, %xmm0
	.loc	7 279 43                # exact_rhs.c:279:43
	movupd	ue(%rcx), %xmm1
	.loc	7 279 34 is_stmt 0      # exact_rhs.c:279:34
	movupd	ue+40(%rcx), %xmm2
	.loc	7 279 33                # exact_rhs.c:279:33
	addpd	%xmm2, %xmm2
	.loc	7 279 29                # exact_rhs.c:279:29
	subpd	%xmm2, %xmm13
	.loc	7 279 42                # exact_rhs.c:279:42
	addpd	%xmm1, %xmm13
	.loc	7 282 46 is_stmt 1      # exact_rhs.c:282:46
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	mulsd	%xmm4, %xmm1
	.loc	7 282 35 is_stmt 0      # exact_rhs.c:282:35
	subsd	%xmm1, %xmm0
	.loc	7 281 57 is_stmt 1      # exact_rhs.c:281:57
	mulsd	%xmm5, %xmm0
	.loc	7 281 51 is_stmt 0      # exact_rhs.c:281:51
	subsd	%xmm0, %xmm14
	movsd	buf+48(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	7 283 34 is_stmt 1      # exact_rhs.c:283:34
	mulsd	%xmm3, %xmm1
	.loc	7 283 30 is_stmt 0      # exact_rhs.c:283:30
	addsd	buf+88(%rcx), %xmm1
	.loc	7 287 13 is_stmt 1      # exact_rhs.c:287:13
	movupd	ue+96(%rcx), %xmm6
	.loc	7 278 27                # exact_rhs.c:278:27
	movapd	%xmm6, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	movapd	%xmm0, %xmm2
	movhpd	buf+8(%rcx), %xmm2      # xmm2 = xmm2[0],mem[0]
	.loc	7 287 36                # exact_rhs.c:287:36
	movsd	ue+16(%rcx), %xmm8      # xmm8 = mem[0],zero
	.loc	7 287 46 is_stmt 0      # exact_rhs.c:287:46
	movapd	%xmm8, %xmm10
	.loc	7 293 24 is_stmt 1      # exact_rhs.c:293:24
	movapd	%xmm9, %xmm7
	.loc	7 289 42                # exact_rhs.c:289:42
	unpcklpd	%xmm9, %xmm8    # xmm8 = xmm8[0],xmm9[0]
	.loc	7 278 27                # exact_rhs.c:278:27
	unpcklpd	%xmm1, %xmm9    # xmm9 = xmm9[0],xmm1[0]
	movapd	%xmm2, %xmm1
	subpd	%xmm9, %xmm1
	addpd	%xmm2, %xmm9
	movsd	%xmm1, %xmm9            # xmm9 = xmm1[0],xmm9[1]
	.loc	7 278 14 is_stmt 0      # exact_rhs.c:278:14
	mulpd	208(%rsp), %xmm9        # 16-byte Folded Reload
	.loc	7 277 51 is_stmt 1      # exact_rhs.c:277:51
	unpcklpd	%xmm14, %xmm12  # xmm12 = xmm12[0],xmm14[0]
	movapd	%xmm12, %xmm1
	subpd	%xmm9, %xmm1
	addpd	%xmm9, %xmm12
	movsd	%xmm1, %xmm12           # xmm12 = xmm1[0],xmm12[1]
	.loc	7 279 17                # exact_rhs.c:279:17
	mulpd	96(%rsp), %xmm13        # 16-byte Folded Reload
	.loc	7 278 40                # exact_rhs.c:278:40
	addpd	%xmm12, %xmm13
	.loc	7 277 29                # exact_rhs.c:277:29
	movupd	%xmm13, -32(%rdx)
	.loc	7 292 24                # exact_rhs.c:292:24
	mulsd	%xmm11, %xmm0
	movapd	%xmm3, %xmm14
	.loc	7 292 41 is_stmt 0      # exact_rhs.c:292:41
	movsd	ue+112(%rcx), %xmm3     # xmm3 = mem[0],zero
	.loc	7 292 52                # exact_rhs.c:292:52
	movsd	q+16(,%rsi,8), %xmm12   # xmm12 = mem[0],zero
	.loc	7 292 51                # exact_rhs.c:292:51
	movapd	%xmm3, %xmm5
	subsd	%xmm12, %xmm5
	movsd	32(%rsp), %xmm15        # 8-byte Reload
                                        # xmm15 = mem[0],zero
	.loc	7 292 39                # exact_rhs.c:292:39
	mulsd	%xmm15, %xmm5
	.loc	7 292 36                # exact_rhs.c:292:36
	addsd	%xmm0, %xmm5
	.loc	7 293 24 is_stmt 1      # exact_rhs.c:293:24
	mulsd	%xmm4, %xmm7
	movapd	%xmm7, %xmm2
	.loc	7 293 41 is_stmt 0      # exact_rhs.c:293:41
	movsd	ue+32(%rcx), %xmm9      # xmm9 = mem[0],zero
	.loc	7 293 52                # exact_rhs.c:293:52
	movsd	q(,%rsi,8), %xmm13      # xmm13 = mem[0],zero
	movsd	48(%rsp), %xmm0         # 8-byte Reload
                                        # xmm0 = mem[0],zero
	.loc	7 298 28 is_stmt 1      # exact_rhs.c:298:28
	movapd	%xmm0, %xmm1
	mulsd	%xmm3, %xmm1
	.loc	7 303 35                # exact_rhs.c:303:35
	movsd	ue+72(%rcx), %xmm7      # xmm7 = mem[0],zero
	.loc	7 303 34 is_stmt 0      # exact_rhs.c:303:34
	addsd	%xmm7, %xmm7
	.loc	7 303 30                # exact_rhs.c:303:30
	subsd	%xmm7, %xmm3
	.loc	7 299 28 is_stmt 1      # exact_rhs.c:299:28
	movapd	%xmm0, %xmm7
	mulsd	%xmm9, %xmm7
	.loc	7 303 43                # exact_rhs.c:303:43
	addsd	%xmm9, %xmm3
	.loc	7 293 51                # exact_rhs.c:293:51
	subsd	%xmm13, %xmm9
	.loc	7 293 39 is_stmt 0      # exact_rhs.c:293:39
	mulsd	%xmm15, %xmm9
	.loc	7 293 36                # exact_rhs.c:293:36
	addsd	%xmm2, %xmm9
	.loc	7 287 23 is_stmt 1      # exact_rhs.c:287:23
	movapd	%xmm6, %xmm2
	mulsd	%xmm11, %xmm2
	.loc	7 287 35 is_stmt 0      # exact_rhs.c:287:35
	unpcklpd	%xmm5, %xmm2    # xmm2 = xmm2[0],xmm5[0]
	.loc	7 287 46                # exact_rhs.c:287:46
	mulsd	%xmm4, %xmm10
	.loc	7 287 35                # exact_rhs.c:287:35
	unpcklpd	%xmm9, %xmm10   # xmm10 = xmm10[0],xmm9[0]
	.loc	7 286 31 is_stmt 1      # exact_rhs.c:286:31
	movupd	-16(%rdx), %xmm0
	.loc	7 287 35                # exact_rhs.c:287:35
	subpd	%xmm10, %xmm2
	.loc	7 286 57                # exact_rhs.c:286:57
	mulpd	80(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	7 286 51 is_stmt 0      # exact_rhs.c:286:51
	subpd	%xmm2, %xmm0
	.loc	7 288 44 is_stmt 1      # exact_rhs.c:288:44
	movsd	buf+16(%rcx), %xmm2     # xmm2 = mem[0],zero
	unpcklpd	%xmm4, %xmm2    # xmm2 = xmm2[0],xmm4[0]
	.loc	7 288 35 is_stmt 0      # exact_rhs.c:288:35
	movupd	buf+56(%rcx), %xmm9
	.loc	7 288 34                # exact_rhs.c:288:34
	movapd	%xmm9, %xmm5
	addpd	%xmm5, %xmm5
	movapd	(%rsp), %xmm4           # 16-byte Reload
	.loc	7 288 30                # exact_rhs.c:288:30
	subpd	%xmm5, %xmm4
	.loc	7 288 44                # exact_rhs.c:288:44
	addpd	%xmm4, %xmm2
	.loc	7 288 17                # exact_rhs.c:288:17
	mulpd	224(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	7 287 59 is_stmt 1      # exact_rhs.c:287:59
	addpd	%xmm0, %xmm2
	.loc	7 289 34                # exact_rhs.c:289:34
	movupd	ue+56(%rcx), %xmm0
	.loc	7 289 33 is_stmt 0      # exact_rhs.c:289:33
	movapd	%xmm0, %xmm5
	addpd	%xmm5, %xmm5
	.loc	7 289 29                # exact_rhs.c:289:29
	subpd	%xmm5, %xmm6
	.loc	7 289 42                # exact_rhs.c:289:42
	addpd	%xmm6, %xmm8
	.loc	7 289 17                # exact_rhs.c:289:17
	mulpd	192(%rsp), %xmm8        # 16-byte Folded Reload
	.loc	7 288 57 is_stmt 1      # exact_rhs.c:288:57
	addpd	%xmm2, %xmm8
	.loc	7 286 29                # exact_rhs.c:286:29
	movupd	%xmm8, -16(%rdx)
	.loc	7 298 42                # exact_rhs.c:298:42
	mulsd	%xmm15, %xmm12
	.loc	7 298 39 is_stmt 0      # exact_rhs.c:298:39
	subsd	%xmm12, %xmm1
	.loc	7 298 24                # exact_rhs.c:298:24
	mulsd	%xmm11, %xmm1
	.loc	7 299 42 is_stmt 1      # exact_rhs.c:299:42
	mulsd	%xmm15, %xmm13
	.loc	7 299 39 is_stmt 0      # exact_rhs.c:299:39
	subsd	%xmm13, %xmm7
	.loc	7 297 31 is_stmt 1      # exact_rhs.c:297:31
	movsd	(%rdx), %xmm2           # xmm2 = mem[0],zero
	.loc	7 299 24                # exact_rhs.c:299:24
	mulsd	buf+24(%rcx), %xmm7
	.loc	7 298 50                # exact_rhs.c:298:50
	subsd	%xmm7, %xmm1
	movapd	256(%rsp), %xmm4        # 16-byte Reload
	.loc	7 297 57                # exact_rhs.c:297:57
	mulsd	%xmm4, %xmm1
	movapd	%xmm4, %xmm5
	.loc	7 297 51 is_stmt 0      # exact_rhs.c:297:51
	subsd	%xmm1, %xmm2
	.loc	7 300 23 is_stmt 1      # exact_rhs.c:300:23
	movsd	buf+80(%rcx), %xmm1     # xmm1 = mem[0],zero
	.loc	7 300 39 is_stmt 0      # exact_rhs.c:300:39
	movsd	buf+40(%rcx), %xmm4     # xmm4 = mem[0],zero
	.loc	7 300 38                # exact_rhs.c:300:38
	addsd	%xmm4, %xmm4
	.loc	7 300 34                # exact_rhs.c:300:34
	subsd	%xmm4, %xmm1
	.loc	7 300 48                # exact_rhs.c:300:48
	addsd	buf(%rcx), %xmm1
	.loc	7 300 21                # exact_rhs.c:300:21
	mulsd	24(%rsp), %xmm1         # 8-byte Folded Reload
	.loc	7 299 51 is_stmt 1      # exact_rhs.c:299:51
	addsd	%xmm2, %xmm1
	.loc	7 301 19                # exact_rhs.c:301:19
	movsd	cuf+16(,%rsi,8), %xmm2  # xmm2 = mem[0],zero
	.loc	7 301 32 is_stmt 0      # exact_rhs.c:301:32
	movsd	cuf+8(,%rsi,8), %xmm4   # xmm4 = mem[0],zero
	.loc	7 301 31                # exact_rhs.c:301:31
	addsd	%xmm4, %xmm4
	.loc	7 301 27                # exact_rhs.c:301:27
	subsd	%xmm4, %xmm2
	.loc	7 301 38                # exact_rhs.c:301:38
	addsd	cuf(,%rsi,8), %xmm2
	.loc	7 301 17                # exact_rhs.c:301:17
	mulsd	176(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	7 300 61 is_stmt 1      # exact_rhs.c:300:61
	addsd	%xmm1, %xmm2
	.loc	7 302 19                # exact_rhs.c:302:19
	movsd	buf+112(%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	7 302 35 is_stmt 0      # exact_rhs.c:302:35
	movsd	buf+72(%rcx), %xmm4     # xmm4 = mem[0],zero
	.loc	7 302 34                # exact_rhs.c:302:34
	addsd	%xmm4, %xmm4
	.loc	7 302 30                # exact_rhs.c:302:30
	subsd	%xmm4, %xmm1
	.loc	7 302 44                # exact_rhs.c:302:44
	addsd	buf+32(%rcx), %xmm1
	.loc	7 302 17                # exact_rhs.c:302:17
	mulsd	160(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	7 301 48 is_stmt 1      # exact_rhs.c:301:48
	addsd	%xmm2, %xmm1
	.loc	7 303 17                # exact_rhs.c:303:17
	mulsd	240(%rsp), %xmm3        # 8-byte Folded Reload
	.loc	7 302 57                # exact_rhs.c:302:57
	addsd	%xmm1, %xmm3
	.loc	7 297 29                # exact_rhs.c:297:29
	movsd	%xmm3, (%rdx)
	movapd	%xmm14, %xmm3
.Ltmp228:
	.loc	7 273 7 discriminator 1 # exact_rhs.c:273:7
	shufpd	$1, %xmm9, %xmm9        # xmm9 = xmm9[1,0]
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	7 273 21 is_stmt 0 discriminator 1 # exact_rhs.c:273:21
	incq	%rsi
	addq	$169000, %rdx           # imm = 0x29428
	addq	$40, %rcx
	cmpq	%rax, %rsi
.Ltmp229:
	.loc	7 293 25 is_stmt 1      # exact_rhs.c:293:25
	movapd	%xmm9, %xmm4
	.loc	7 293 14 is_stmt 0      # exact_rhs.c:293:14
	movapd	%xmm0, %xmm9
	jl	.LBB2_53
.Ltmp230:
.LBB2_54:                               # %for.cond1844.preheader
                                        #   in Loop: Header=BB2_48 Depth=2
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	7 311 53 is_stmt 1      # exact_rhs.c:311:53
	movsd	dssp(%rip), %xmm10      # xmm10 = mem[0],zero
	.loc	7 311 31 is_stmt 0      # exact_rhs.c:311:31
	leaq	(%r15,%r15,4), %rcx
	imulq	$2600, 72(%rsp), %rax   # 8-byte Folded Reload
                                        # imm = 0xA28
.Ltmp231:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	7 312 16 is_stmt 1      # exact_rhs.c:312:16
	movupd	ue+40(%rip), %xmm11
	.loc	7 312 31 is_stmt 0      # exact_rhs.c:312:31
	movapd	%xmm11, 48(%rsp)        # 16-byte Spill
	movapd	ue+80(%rip), %xmm15
	.loc	7 312 43                # exact_rhs.c:312:43
	movapd	%xmm15, (%rsp)          # 16-byte Spill
	movupd	ue+120(%rip), %xmm0
.Ltmp232:
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	7 311 31 is_stmt 1      # exact_rhs.c:311:31
	movupd	forcing+169000(%rax,%rcx,8), %xmm14
	.loc	7 312 15                # exact_rhs.c:312:15
	movapd	%xmm11, %xmm5
	movapd	.LCPI2_5(%rip), %xmm13  # xmm13 = [5.000000e+00,5.000000e+00]
	mulpd	%xmm13, %xmm5
	.loc	7 312 30 is_stmt 0      # exact_rhs.c:312:30
	movapd	%xmm15, %xmm1
	movapd	.LCPI2_6(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	mulpd	%xmm2, %xmm1
	.loc	7 312 25                # exact_rhs.c:312:25
	subpd	%xmm1, %xmm5
	.loc	7 312 42                # exact_rhs.c:312:42
	addpd	%xmm0, %xmm5
	.loc	7 312 16                # exact_rhs.c:312:16
	movsd	ue+72(%rip), %xmm3      # xmm3 = mem[0],zero
	.loc	7 312 15                # exact_rhs.c:312:15
	movapd	%xmm3, %xmm9
	movsd	.LCPI2_8(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm9
	.loc	7 312 31                # exact_rhs.c:312:31
	movsd	ue+112(%rip), %xmm7     # xmm7 = mem[0],zero
	.loc	7 312 30                # exact_rhs.c:312:30
	movapd	%xmm7, %xmm1
	movsd	.LCPI2_3(%rip), %xmm8   # xmm8 = mem[0],zero
	mulsd	%xmm8, %xmm1
	.loc	7 312 25                # exact_rhs.c:312:25
	subsd	%xmm1, %xmm9
	.loc	7 312 43                # exact_rhs.c:312:43
	movsd	ue+152(%rip), %xmm6     # xmm6 = mem[0],zero
	.loc	7 312 42                # exact_rhs.c:312:42
	addsd	%xmm6, %xmm9
	.loc	7 311 58 is_stmt 1      # exact_rhs.c:311:58
	mulsd	%xmm10, %xmm9
	.loc	7 315 16                # exact_rhs.c:315:16
	movapd	%xmm3, %xmm2
	mulsd	%xmm8, %xmm2
	.loc	7 315 33 is_stmt 0      # exact_rhs.c:315:33
	movapd	%xmm7, %xmm12
	movsd	.LCPI2_4(%rip), %xmm1   # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm12
	.loc	7 315 16                # exact_rhs.c:315:16
	subsd	%xmm2, %xmm12
	.loc	7 316 16 is_stmt 1      # exact_rhs.c:316:16
	mulsd	%xmm8, %xmm6
	.loc	7 315 43                # exact_rhs.c:315:43
	subsd	%xmm6, %xmm12
	.loc	7 316 28                # exact_rhs.c:316:28
	addsd	ue+192(%rip), %xmm12
	.loc	7 314 58                # exact_rhs.c:314:58
	mulsd	%xmm10, %xmm12
	.loc	7 311 58                # exact_rhs.c:311:58
	movlhps	%xmm10, %xmm10          # xmm10 = xmm10[0,0]
	mulpd	%xmm10, %xmm5
	.loc	7 311 51 is_stmt 0      # exact_rhs.c:311:51
	subpd	%xmm5, %xmm14
	.loc	7 311 29                # exact_rhs.c:311:29
	movupd	%xmm14, forcing+169000(%rax,%rcx,8)
.Ltmp233:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	7 314 31 is_stmt 1      # exact_rhs.c:314:31
	movupd	forcing+338000(%rax,%rcx,8), %xmm2
	.loc	7 315 16                # exact_rhs.c:315:16
	movapd	%xmm11, %xmm4
	.loc	7 312 30                # exact_rhs.c:312:30
	movapd	.LCPI2_6(%rip), %xmm11  # xmm11 = [4.000000e+00,4.000000e+00]
	.loc	7 315 16                # exact_rhs.c:315:16
	mulpd	%xmm11, %xmm4
	.loc	7 315 33 is_stmt 0      # exact_rhs.c:315:33
	movapd	%xmm15, %xmm5
	movapd	.LCPI2_7(%rip), %xmm1   # xmm1 = [6.000000e+00,6.000000e+00]
	mulpd	%xmm1, %xmm5
	.loc	7 315 16                # exact_rhs.c:315:16
	subpd	%xmm4, %xmm5
	.loc	7 316 16 is_stmt 1      # exact_rhs.c:316:16
	movapd	%xmm0, %xmm4
	mulpd	%xmm11, %xmm4
	.loc	7 315 43                # exact_rhs.c:315:43
	subpd	%xmm4, %xmm5
	.loc	7 316 34                # exact_rhs.c:316:34
	movapd	ue+160(%rip), %xmm6
	.loc	7 316 28 is_stmt 0      # exact_rhs.c:316:28
	addpd	%xmm6, %xmm5
	.loc	7 314 58 is_stmt 1      # exact_rhs.c:314:58
	mulpd	%xmm10, %xmm5
	.loc	7 314 51 is_stmt 0      # exact_rhs.c:314:51
	subpd	%xmm5, %xmm2
	.loc	7 314 29                # exact_rhs.c:314:29
	movupd	%xmm2, forcing+338000(%rax,%rcx,8)
.Ltmp234:
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	7 312 16 is_stmt 1      # exact_rhs.c:312:16
	movupd	ue+56(%rip), %xmm4
	.loc	7 312 31 is_stmt 0      # exact_rhs.c:312:31
	movapd	ue+96(%rip), %xmm14
	.loc	7 312 43                # exact_rhs.c:312:43
	movupd	ue+136(%rip), %xmm15
.Ltmp235:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	7 312 15                # exact_rhs.c:312:15
	movapd	%xmm4, %xmm2
	mulpd	%xmm13, %xmm2
	.loc	7 312 30                # exact_rhs.c:312:30
	movapd	%xmm14, %xmm1
	mulpd	%xmm11, %xmm1
	.loc	7 312 25                # exact_rhs.c:312:25
	subpd	%xmm1, %xmm2
	.loc	7 311 31 is_stmt 1      # exact_rhs.c:311:31
	movupd	forcing+169016(%rax,%rcx,8), %xmm1
	.loc	7 312 42                # exact_rhs.c:312:42
	addpd	%xmm15, %xmm2
	.loc	7 311 58                # exact_rhs.c:311:58
	mulpd	%xmm10, %xmm2
	.loc	7 311 51 is_stmt 0      # exact_rhs.c:311:51
	subpd	%xmm2, %xmm1
	.loc	7 311 29                # exact_rhs.c:311:29
	movupd	%xmm1, forcing+169016(%rax,%rcx,8)
	.loc	7 315 16 is_stmt 1      # exact_rhs.c:315:16
	movapd	%xmm4, %xmm2
	mulpd	%xmm11, %xmm2
	.loc	7 315 33 is_stmt 0      # exact_rhs.c:315:33
	movapd	%xmm14, %xmm13
	mulpd	.LCPI2_7(%rip), %xmm13
	.loc	7 315 16                # exact_rhs.c:315:16
	subpd	%xmm2, %xmm13
	.loc	7 316 16 is_stmt 1      # exact_rhs.c:316:16
	movapd	%xmm15, %xmm2
	mulpd	%xmm11, %xmm2
	.loc	7 315 43                # exact_rhs.c:315:43
	subpd	%xmm2, %xmm13
	.loc	7 316 34                # exact_rhs.c:316:34
	movapd	ue+176(%rip), %xmm2
.Ltmp236:
	#DEBUG_VALUE: exact_rhs:k <- 1
	.loc	7 316 28 is_stmt 0      # exact_rhs.c:316:28
	addpd	%xmm2, %xmm13
	.loc	7 314 58 is_stmt 1      # exact_rhs.c:314:58
	mulpd	%xmm10, %xmm13
	.loc	7 314 31 is_stmt 0      # exact_rhs.c:314:31
	movupd	forcing+338016(%rax,%rcx,8), %xmm1
	.loc	7 314 51                # exact_rhs.c:314:51
	subpd	%xmm13, %xmm1
	.loc	7 314 29                # exact_rhs.c:314:29
	movupd	%xmm1, forcing+338016(%rax,%rcx,8)
	.loc	7 311 31 is_stmt 1      # exact_rhs.c:311:31
	movsd	forcing+169032(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	7 311 51 is_stmt 0      # exact_rhs.c:311:51
	subsd	%xmm9, %xmm1
	movsd	.LCPI2_8(%rip), %xmm9   # xmm9 = mem[0],zero
	.loc	7 311 29                # exact_rhs.c:311:29
	movsd	%xmm1, forcing+169032(%rax,%rcx,8)
.Ltmp237:
	#DEBUG_VALUE: exact_rhs:k <- 2
	.loc	7 314 31 is_stmt 1      # exact_rhs.c:314:31
	movsd	forcing+338032(%rax,%rcx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	7 314 51 is_stmt 0      # exact_rhs.c:314:51
	subsd	%xmm12, %xmm1
	.loc	7 314 29                # exact_rhs.c:314:29
	movsd	%xmm1, forcing+338032(%rax,%rcx,8)
.Ltmp238:
	.loc	7 319 7 is_stmt 1 discriminator 1 # exact_rhs.c:319:7
	movslq	grid_points+8(%rip), %r12
	.loc	7 319 38 is_stmt 0 discriminator 1 # exact_rhs.c:319:38
	movq	%r12, %rcx
	addq	$-4, %rcx
.Ltmp239:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 319 21 discriminator 1 # exact_rhs.c:319:21
	cmpl	$3, %ecx
	movq	288(%rsp), %rbp         # 8-byte Reload
	jl	.LBB2_58
# BB#55:                                # %for.cond1935.preheader.lr.ph
                                        #   in Loop: Header=BB2_48 Depth=2
.Ltmp240:
	.loc	7 321 55 is_stmt 1      # exact_rhs.c:321:55
	movsd	dssp(%rip), %xmm12      # xmm12 = mem[0],zero
	.loc	7 323 33                # exact_rhs.c:323:33
	movapd	%xmm12, 32(%rsp)        # 16-byte Spill
	movlpd	ue+160(%rip), %xmm6     # xmm6 = mem[0],xmm6[1]
	.loc	7 323 18 is_stmt 0      # exact_rhs.c:323:18
	movlpd	ue+120(%rip), %xmm0     # xmm0 = mem[0],xmm0[1]
	movapd	48(%rsp), %xmm11        # 16-byte Reload
.Ltmp241:
	.loc	7 319 7 is_stmt 1 discriminator 1 # exact_rhs.c:319:7
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	movapd	(%rsp), %xmm5           # 16-byte Reload
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
.Ltmp242:
	.loc	7 321 59                # exact_rhs.c:321:59
	movlhps	%xmm12, %xmm12          # xmm12 = xmm12[0,0]
	.loc	7 322 31                # exact_rhs.c:322:31
	movl	$ue+232, %edx
	movq	%rbp, %rsi
	movl	$2, %edi
.Ltmp243:
	.loc	7 312 30                # exact_rhs.c:312:30
	movapd	.LCPI2_6(%rip), %xmm13  # xmm13 = [4.000000e+00,4.000000e+00]
	.loc	7 315 33                # exact_rhs.c:315:33
	movapd	.LCPI2_7(%rip), %xmm10  # xmm10 = [6.000000e+00,6.000000e+00]
.Ltmp244:
	.p2align	4, 0x90
.LBB2_56:                               # %for.cond1935.preheader
                                        #   Parent Loop BB2_46 Depth=1
                                        #     Parent Loop BB2_48 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	7 322 25                # exact_rhs.c:322:25
	movsd	-192(%rdx), %xmm1       # xmm1 = mem[0],zero
	unpcklpd	%xmm11, %xmm1   # xmm1 = xmm1[0],xmm11[0]
	.loc	7 322 31 is_stmt 0      # exact_rhs.c:322:31
	movapd	%xmm5, %xmm11
	movapd	%xmm7, %xmm9
	.loc	7 321 33 is_stmt 1      # exact_rhs.c:321:33
	movupd	-32(%rsi), %xmm7
	.loc	7 322 30                # exact_rhs.c:322:30
	movsd	-152(%rdx), %xmm5       # xmm5 = mem[0],zero
	unpcklpd	%xmm11, %xmm5   # xmm5 = xmm5[0],xmm11[0]
	mulpd	%xmm13, %xmm5
	.loc	7 322 25 is_stmt 0      # exact_rhs.c:322:25
	subpd	%xmm5, %xmm1
	.loc	7 323 17 is_stmt 1      # exact_rhs.c:323:17
	movapd	%xmm0, %xmm5
	mulpd	%xmm10, %xmm5
	.loc	7 322 42                # exact_rhs.c:322:42
	addpd	%xmm1, %xmm5
	.loc	7 323 32                # exact_rhs.c:323:32
	movapd	%xmm6, %xmm1
	mulpd	%xmm13, %xmm1
	.loc	7 323 27 is_stmt 0      # exact_rhs.c:323:27
	subpd	%xmm1, %xmm5
	.loc	7 323 46                # exact_rhs.c:323:46
	movupd	-32(%rdx), %xmm1
	.loc	7 323 44                # exact_rhs.c:323:44
	movapd	%xmm1, (%rsp)           # 16-byte Spill
	addpd	%xmm1, %xmm5
	.loc	7 321 59 is_stmt 1      # exact_rhs.c:321:59
	mulpd	%xmm12, %xmm5
	.loc	7 321 53 is_stmt 0      # exact_rhs.c:321:53
	subpd	%xmm5, %xmm7
	.loc	7 321 31                # exact_rhs.c:321:31
	movupd	%xmm7, -32(%rsi)
	.loc	7 321 33                # exact_rhs.c:321:33
	movupd	-16(%rsi), %xmm5
	.loc	7 322 30 is_stmt 1      # exact_rhs.c:322:30
	movapd	%xmm14, %xmm1
	mulpd	%xmm13, %xmm1
	.loc	7 322 25 is_stmt 0      # exact_rhs.c:322:25
	subpd	%xmm1, %xmm4
	.loc	7 323 17 is_stmt 1      # exact_rhs.c:323:17
	movapd	%xmm15, %xmm7
	mulpd	%xmm10, %xmm7
	.loc	7 322 42                # exact_rhs.c:322:42
	addpd	%xmm4, %xmm7
	.loc	7 323 32                # exact_rhs.c:323:32
	movapd	%xmm2, %xmm1
	mulpd	%xmm13, %xmm1
	.loc	7 323 27 is_stmt 0      # exact_rhs.c:323:27
	subpd	%xmm1, %xmm7
	.loc	7 323 46                # exact_rhs.c:323:46
	movupd	-16(%rdx), %xmm1
	.loc	7 323 44                # exact_rhs.c:323:44
	addpd	%xmm1, %xmm7
	.loc	7 321 59 is_stmt 1      # exact_rhs.c:321:59
	mulpd	%xmm12, %xmm7
	.loc	7 321 53 is_stmt 0      # exact_rhs.c:321:53
	subpd	%xmm7, %xmm5
	.loc	7 321 31                # exact_rhs.c:321:31
	movupd	%xmm5, -16(%rsi)
	.loc	7 322 30 is_stmt 1      # exact_rhs.c:322:30
	movapd	%xmm9, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 322 25 is_stmt 0      # exact_rhs.c:322:25
	subsd	%xmm4, %xmm3
	.loc	7 323 18 is_stmt 1      # exact_rhs.c:323:18
	movsd	-80(%rdx), %xmm7        # xmm7 = mem[0],zero
	.loc	7 323 17 is_stmt 0      # exact_rhs.c:323:17
	movapd	%xmm7, %xmm4
	mulsd	.LCPI2_4(%rip), %xmm4
	.loc	7 322 42 is_stmt 1      # exact_rhs.c:322:42
	addsd	%xmm3, %xmm4
	movsd	-40(%rdx), %xmm3        # xmm3 = mem[0],zero
	.loc	7 323 32                # exact_rhs.c:323:32
	mulsd	%xmm8, %xmm3
	.loc	7 323 27 is_stmt 0      # exact_rhs.c:323:27
	subsd	%xmm3, %xmm4
	.loc	7 321 33 is_stmt 1      # exact_rhs.c:321:33
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	7 323 44                # exact_rhs.c:323:44
	addsd	(%rdx), %xmm4
	.loc	7 321 59                # exact_rhs.c:321:59
	mulsd	32(%rsp), %xmm4         # 16-byte Folded Reload
	.loc	7 321 53 is_stmt 0      # exact_rhs.c:321:53
	subsd	%xmm4, %xmm3
	.loc	7 321 31                # exact_rhs.c:321:31
	movsd	%xmm3, (%rsi)
.Ltmp245:
	#DEBUG_VALUE: exact_rhs:m <- 0
	.loc	7 319 7 is_stmt 1 discriminator 1 # exact_rhs.c:319:7
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
.Ltmp246:
	.loc	7 322 31                # exact_rhs.c:322:31
	movapd	%xmm0, %xmm5
	.loc	7 323 18                # exact_rhs.c:323:18
	movapd	%xmm6, %xmm0
	.loc	7 322 14                # exact_rhs.c:322:14
	movapd	%xmm14, %xmm4
	.loc	7 322 31 is_stmt 0      # exact_rhs.c:322:31
	movapd	%xmm15, %xmm14
	.loc	7 323 18 is_stmt 1      # exact_rhs.c:323:18
	movapd	%xmm2, %xmm15
.Ltmp247:
	.loc	7 319 21 discriminator 1 # exact_rhs.c:319:21
	incq	%rdi
	addq	$169000, %rsi           # imm = 0x29428
	addq	$40, %rdx
	cmpq	%rcx, %rdi
.Ltmp248:
	.loc	7 322 14                # exact_rhs.c:322:14
	movapd	%xmm9, %xmm3
	.loc	7 323 33                # exact_rhs.c:323:33
	movapd	(%rsp), %xmm6           # 16-byte Reload
	movapd	%xmm1, %xmm2
.Ltmp249:
	.loc	7 319 7 discriminator 1 # exact_rhs.c:319:7
	jl	.LBB2_56
.Ltmp250:
# BB#57:                                # %for.cond1994.preheader.loopexit
                                        #   in Loop: Header=BB2_48 Depth=2
	.loc	7 328 13                # exact_rhs.c:328:13
	movl	grid_points+8(%rip), %r12d
	movsd	.LCPI2_8(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm9
.LBB2_58:                               # %for.body1997
                                        #   in Loop: Header=BB2_48 Depth=2
	.loc	7 331 31                # exact_rhs.c:331:31
	movslq	%r12d, %rsi
	.loc	7 328 27                # exact_rhs.c:328:27
	imulq	$169000, %rsi, %rcx     # imm = 0x29428
	.loc	7 329 53                # exact_rhs.c:329:53
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	7 330 33                # exact_rhs.c:330:33
	leaq	(,%rsi,8), %rdx
	.loc	7 329 31                # exact_rhs.c:329:31
	addq	%rax, %rcx
	leaq	(,%r15,8), %rax
	leaq	(%rax,%rax,4), %rax
	movsd	forcing-507000(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 330 12                # exact_rhs.c:330:12
	movsd	ue-200(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 330 29 is_stmt 0      # exact_rhs.c:330:29
	movsd	ue-160(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 330 28                # exact_rhs.c:330:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 330 23                # exact_rhs.c:330:23
	subsd	%xmm4, %xmm2
	.loc	7 331 16 is_stmt 1      # exact_rhs.c:331:16
	movsd	ue-120(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 331 15 is_stmt 0      # exact_rhs.c:331:15
	movapd	%xmm4, %xmm5
	movsd	.LCPI2_4(%rip), %xmm7   # xmm7 = mem[0],zero
	mulsd	%xmm7, %xmm5
	.loc	7 330 40 is_stmt 1      # exact_rhs.c:330:40
	addsd	%xmm2, %xmm5
	.loc	7 331 31                # exact_rhs.c:331:31
	leaq	-16(,%rsi,8), %rsi
	movsd	ue(%rsi,%rsi,4), %xmm2  # xmm2 = mem[0],zero
	.loc	7 331 30 is_stmt 0      # exact_rhs.c:331:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 331 25                # exact_rhs.c:331:25
	subsd	%xmm6, %xmm5
	.loc	7 329 58 is_stmt 1      # exact_rhs.c:329:58
	mulsd	%xmm0, %xmm5
	.loc	7 329 51 is_stmt 0      # exact_rhs.c:329:51
	subsd	%xmm5, %xmm1
	.loc	7 329 29                # exact_rhs.c:329:29
	movsd	%xmm1, forcing-507000(%rcx,%rax)
	.loc	7 333 31 is_stmt 1      # exact_rhs.c:333:31
	movsd	forcing-338000(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 334 28                # exact_rhs.c:334:28
	mulsd	%xmm8, %xmm4
	.loc	7 334 23 is_stmt 0      # exact_rhs.c:334:23
	subsd	%xmm4, %xmm3
	.loc	7 334 45                # exact_rhs.c:334:45
	mulsd	%xmm9, %xmm2
	.loc	7 334 40                # exact_rhs.c:334:40
	addsd	%xmm3, %xmm2
	.loc	7 333 58 is_stmt 1      # exact_rhs.c:333:58
	mulsd	%xmm0, %xmm2
	.loc	7 333 51 is_stmt 0      # exact_rhs.c:333:51
	subsd	%xmm2, %xmm1
	.loc	7 333 29                # exact_rhs.c:333:29
	movsd	%xmm1, forcing-338000(%rcx,%rax)
	.loc	7 329 31 is_stmt 1      # exact_rhs.c:329:31
	movsd	forcing-506992(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 330 12                # exact_rhs.c:330:12
	movsd	ue-192(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 330 29 is_stmt 0      # exact_rhs.c:330:29
	movsd	ue-152(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 330 28                # exact_rhs.c:330:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 330 23                # exact_rhs.c:330:23
	subsd	%xmm4, %xmm2
	.loc	7 331 16 is_stmt 1      # exact_rhs.c:331:16
	movsd	ue-112(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 331 15 is_stmt 0      # exact_rhs.c:331:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 330 40 is_stmt 1      # exact_rhs.c:330:40
	addsd	%xmm2, %xmm5
	.loc	7 331 31                # exact_rhs.c:331:31
	movsd	ue+8(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 331 30 is_stmt 0      # exact_rhs.c:331:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 331 25                # exact_rhs.c:331:25
	subsd	%xmm6, %xmm5
	.loc	7 329 58 is_stmt 1      # exact_rhs.c:329:58
	mulsd	%xmm0, %xmm5
	.loc	7 329 51 is_stmt 0      # exact_rhs.c:329:51
	subsd	%xmm5, %xmm1
	.loc	7 329 29                # exact_rhs.c:329:29
	movsd	%xmm1, forcing-506992(%rcx,%rax)
	.loc	7 333 31 is_stmt 1      # exact_rhs.c:333:31
	movsd	forcing-337992(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 334 28                # exact_rhs.c:334:28
	mulsd	%xmm8, %xmm4
	.loc	7 334 23 is_stmt 0      # exact_rhs.c:334:23
	subsd	%xmm4, %xmm3
	.loc	7 334 45                # exact_rhs.c:334:45
	mulsd	%xmm9, %xmm2
	.loc	7 334 40                # exact_rhs.c:334:40
	addsd	%xmm3, %xmm2
	.loc	7 333 58 is_stmt 1      # exact_rhs.c:333:58
	mulsd	%xmm0, %xmm2
	.loc	7 333 51 is_stmt 0      # exact_rhs.c:333:51
	subsd	%xmm2, %xmm1
	.loc	7 333 29                # exact_rhs.c:333:29
	movsd	%xmm1, forcing-337992(%rcx,%rax)
	.loc	7 329 31 is_stmt 1      # exact_rhs.c:329:31
	movsd	forcing-506984(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 330 12                # exact_rhs.c:330:12
	movsd	ue-184(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 330 29 is_stmt 0      # exact_rhs.c:330:29
	movsd	ue-144(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 330 28                # exact_rhs.c:330:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 330 23                # exact_rhs.c:330:23
	subsd	%xmm4, %xmm2
	.loc	7 331 16 is_stmt 1      # exact_rhs.c:331:16
	movsd	ue-104(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 331 15 is_stmt 0      # exact_rhs.c:331:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 330 40 is_stmt 1      # exact_rhs.c:330:40
	addsd	%xmm2, %xmm5
	.loc	7 331 31                # exact_rhs.c:331:31
	movsd	ue+16(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 331 30 is_stmt 0      # exact_rhs.c:331:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 331 25                # exact_rhs.c:331:25
	subsd	%xmm6, %xmm5
	.loc	7 329 58 is_stmt 1      # exact_rhs.c:329:58
	mulsd	%xmm0, %xmm5
	.loc	7 329 51 is_stmt 0      # exact_rhs.c:329:51
	subsd	%xmm5, %xmm1
	.loc	7 329 29                # exact_rhs.c:329:29
	movsd	%xmm1, forcing-506984(%rcx,%rax)
	.loc	7 333 31 is_stmt 1      # exact_rhs.c:333:31
	movsd	forcing-337984(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 334 28                # exact_rhs.c:334:28
	mulsd	%xmm8, %xmm4
	.loc	7 334 23 is_stmt 0      # exact_rhs.c:334:23
	subsd	%xmm4, %xmm3
	.loc	7 334 45                # exact_rhs.c:334:45
	mulsd	%xmm9, %xmm2
	.loc	7 334 40                # exact_rhs.c:334:40
	addsd	%xmm3, %xmm2
	.loc	7 333 58 is_stmt 1      # exact_rhs.c:333:58
	mulsd	%xmm0, %xmm2
	.loc	7 333 51 is_stmt 0      # exact_rhs.c:333:51
	subsd	%xmm2, %xmm1
	.loc	7 333 29                # exact_rhs.c:333:29
	movsd	%xmm1, forcing-337984(%rcx,%rax)
	.loc	7 329 31 is_stmt 1      # exact_rhs.c:329:31
	movsd	forcing-506976(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 330 12                # exact_rhs.c:330:12
	movsd	ue-176(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 330 29 is_stmt 0      # exact_rhs.c:330:29
	movsd	ue-136(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 330 28                # exact_rhs.c:330:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 330 23                # exact_rhs.c:330:23
	subsd	%xmm4, %xmm2
	.loc	7 331 16 is_stmt 1      # exact_rhs.c:331:16
	movsd	ue-96(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 331 15 is_stmt 0      # exact_rhs.c:331:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 330 40 is_stmt 1      # exact_rhs.c:330:40
	addsd	%xmm2, %xmm5
	.loc	7 331 31                # exact_rhs.c:331:31
	movsd	ue+24(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 331 30 is_stmt 0      # exact_rhs.c:331:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 331 25                # exact_rhs.c:331:25
	subsd	%xmm6, %xmm5
	.loc	7 329 58 is_stmt 1      # exact_rhs.c:329:58
	mulsd	%xmm0, %xmm5
	.loc	7 329 51 is_stmt 0      # exact_rhs.c:329:51
	subsd	%xmm5, %xmm1
	.loc	7 329 29                # exact_rhs.c:329:29
	movsd	%xmm1, forcing-506976(%rcx,%rax)
	.loc	7 333 31 is_stmt 1      # exact_rhs.c:333:31
	movsd	forcing-337976(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 334 28                # exact_rhs.c:334:28
	mulsd	%xmm8, %xmm4
	.loc	7 334 23 is_stmt 0      # exact_rhs.c:334:23
	subsd	%xmm4, %xmm3
	.loc	7 334 45                # exact_rhs.c:334:45
	mulsd	%xmm9, %xmm2
	.loc	7 334 40                # exact_rhs.c:334:40
	addsd	%xmm3, %xmm2
	.loc	7 333 58 is_stmt 1      # exact_rhs.c:333:58
	mulsd	%xmm0, %xmm2
	.loc	7 333 51 is_stmt 0      # exact_rhs.c:333:51
	subsd	%xmm2, %xmm1
	.loc	7 333 29                # exact_rhs.c:333:29
	movsd	%xmm1, forcing-337976(%rcx,%rax)
	.loc	7 329 31 is_stmt 1      # exact_rhs.c:329:31
	movsd	forcing-506968(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 330 12                # exact_rhs.c:330:12
	movsd	ue-168(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 330 29 is_stmt 0      # exact_rhs.c:330:29
	movsd	ue-128(%rdx,%rdx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	7 330 28                # exact_rhs.c:330:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	7 330 23                # exact_rhs.c:330:23
	subsd	%xmm4, %xmm2
	.loc	7 331 16 is_stmt 1      # exact_rhs.c:331:16
	movsd	ue-88(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	.loc	7 331 15 is_stmt 0      # exact_rhs.c:331:15
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	7 330 40 is_stmt 1      # exact_rhs.c:330:40
	addsd	%xmm2, %xmm5
	.loc	7 331 31                # exact_rhs.c:331:31
	movsd	ue+32(%rsi,%rsi,4), %xmm2 # xmm2 = mem[0],zero
	.loc	7 331 30 is_stmt 0      # exact_rhs.c:331:30
	movapd	%xmm2, %xmm6
	mulsd	%xmm8, %xmm6
	.loc	7 331 25                # exact_rhs.c:331:25
	subsd	%xmm6, %xmm5
	.loc	7 329 58 is_stmt 1      # exact_rhs.c:329:58
	mulsd	%xmm0, %xmm5
	.loc	7 329 51 is_stmt 0      # exact_rhs.c:329:51
	subsd	%xmm5, %xmm1
	.loc	7 329 29                # exact_rhs.c:329:29
	movsd	%xmm1, forcing-506968(%rcx,%rax)
	.loc	7 333 31 is_stmt 1      # exact_rhs.c:333:31
	movsd	forcing-337968(%rcx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	7 334 28                # exact_rhs.c:334:28
	mulsd	%xmm8, %xmm4
	.loc	7 334 23 is_stmt 0      # exact_rhs.c:334:23
	subsd	%xmm4, %xmm3
	.loc	7 334 45                # exact_rhs.c:334:45
	mulsd	%xmm9, %xmm2
	.loc	7 334 40                # exact_rhs.c:334:40
	addsd	%xmm3, %xmm2
	.loc	7 333 58 is_stmt 1      # exact_rhs.c:333:58
	mulsd	%xmm0, %xmm2
	.loc	7 333 51 is_stmt 0      # exact_rhs.c:333:51
	subsd	%xmm2, %xmm1
	.loc	7 333 29                # exact_rhs.c:333:29
	movsd	%xmm1, forcing-337968(%rcx,%rax)
.Ltmp251:
	.loc	7 250 19 is_stmt 1 discriminator 1 # exact_rhs.c:250:19
	movslq	grid_points(%rip), %rax
	.loc	7 250 36 is_stmt 0 discriminator 1 # exact_rhs.c:250:36
	leaq	-2(%rax), %rcx
	.loc	7 250 5 discriminator 1 # exact_rhs.c:250:5
	addq	$40, %rbx
	addq	$40, %rbp
	.loc	7 250 19 discriminator 1 # exact_rhs.c:250:19
	cmpq	%rcx, %r15
	.loc	7 250 5 discriminator 1 # exact_rhs.c:250:5
	leaq	1(%r15), %r15
	movsd	16(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	jl	.LBB2_48
.Ltmp252:
# BB#59:                                # %for.inc2085.loopexit
                                        #   in Loop: Header=BB2_46 Depth=1
	.loc	7 248 20 is_stmt 1 discriminator 1 # exact_rhs.c:248:20
	movl	grid_points+4(%rip), %ebp
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rcx         # 8-byte Reload
.LBB2_60:                               # %for.inc2085
                                        #   in Loop: Header=BB2_46 Depth=1
	.loc	7 248 34 is_stmt 0 discriminator 1 # exact_rhs.c:248:34
	leal	-2(%rbp), %edx
	.loc	7 248 17 discriminator 1 # exact_rhs.c:248:17
	movslq	%edx, %rdx
	.loc	7 248 3 discriminator 1 # exact_rhs.c:248:3
	addq	$2600, %rdi             # imm = 0xA28
	addq	$2600, %rcx             # imm = 0xA28
	movq	72(%rsp), %rsi          # 8-byte Reload
	.loc	7 248 17 discriminator 1 # exact_rhs.c:248:17
	cmpq	%rdx, %rsi
	.loc	7 248 3 discriminator 1 # exact_rhs.c:248:3
	leaq	1(%rsi), %rsi
	movq	%rsi, 72(%rsp)          # 8-byte Spill
	jl	.LBB2_46
.Ltmp253:
.LBB2_61:                               # %for.cond2088.preheader
	.loc	7 343 17 is_stmt 1 discriminator 1 # exact_rhs.c:343:17
	addl	$-2, %r12d
	jle	.LBB2_72
# BB#62:                                # %for.cond2093.preheader.lr.ph
.Ltmp254:
	.loc	7 344 19 discriminator 1 # exact_rhs.c:344:19
	addl	$-2, %ebp
	jle	.LBB2_72
# BB#63:                                # %for.cond2098.preheader.lr.ph.preheader
.Ltmp255:
	.loc	7 345 24 discriminator 1 # exact_rhs.c:345:24
	movl	grid_points(%rip), %r15d
	.loc	7 345 38 is_stmt 0 discriminator 1 # exact_rhs.c:345:38
	leal	-2(%r15), %r8d
.Ltmp256:
	.loc	7 347 40 is_stmt 1      # exact_rhs.c:347:40
	movslq	%ebp, %rdx
	movslq	%r12d, %r9
.Ltmp257:
	.loc	7 345 7 discriminator 1 # exact_rhs.c:345:7
	movl	%r15d, %edi
	andl	$1, %edi
	leal	-1(%r15), %r11d
	movl	$1, %r14d
	movl	$forcing+171672, %r10d
.Ltmp258:
	.loc	7 347 38                # exact_rhs.c:347:38
	movapd	.LCPI2_9(%rip), %xmm0   # xmm0 = [9223372036854775808,9223372036854775808]
	.p2align	4, 0x90
.LBB2_64:                               # %for.cond2098.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_65 Depth 2
                                        #       Child Loop BB2_69 Depth 3
	testl	%r8d, %r8d
	movq	%r10, %rax
	movl	$1, %ecx
	jle	.LBB2_71
	.p2align	4, 0x90
.LBB2_65:                               # %for.cond2103.preheader.lr.ph
                                        #   Parent Loop BB2_64 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB2_69 Depth 3
	testl	%edi, %edi
	movl	$1, %esi
	je	.LBB2_67
# BB#66:                                # %for.cond2103.preheader.prol
                                        #   in Loop: Header=BB2_65 Depth=2
	.loc	7 347 40 is_stmt 0      # exact_rhs.c:347:40
	imulq	$2600, %rcx, %rsi       # imm = 0xA28
	imulq	$169000, %r14, %rbx     # imm = 0x29428
	movupd	forcing+40(%rbx,%rsi), %xmm1
	.loc	7 347 38                # exact_rhs.c:347:38
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movupd	%xmm1, forcing+40(%rbx,%rsi)
	.loc	7 347 40                # exact_rhs.c:347:40
	movupd	forcing+56(%rbx,%rsi), %xmm1
	.loc	7 347 38                # exact_rhs.c:347:38
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movupd	%xmm1, forcing+56(%rbx,%rsi)
	.loc	7 347 38                # exact_rhs.c:347:38
	movsd	forcing+72(%rbx,%rsi), %xmm1 # xmm1 = mem[0],zero
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movlpd	%xmm1, forcing+72(%rbx,%rsi)
	movl	$2, %esi
.Ltmp259:
.LBB2_67:                               # %for.cond2103.preheader.lr.ph.split
                                        #   in Loop: Header=BB2_65 Depth=2
	cmpl	$3, %r15d
	je	.LBB2_70
# BB#68:                                # %for.cond2103.preheader.lr.ph.split.split
                                        #   in Loop: Header=BB2_65 Depth=2
	.loc	7 345 7 is_stmt 1 discriminator 1 # exact_rhs.c:345:7
	movl	%r11d, %ebp
	subl	%esi, %ebp
	shlq	$3, %rsi
	leaq	(%rsi,%rsi,4), %rbx
	movq	%rax, %rsi
	.p2align	4, 0x90
.LBB2_69:                               # %for.cond2103.preheader
                                        #   Parent Loop BB2_64 Depth=1
                                        #     Parent Loop BB2_65 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp260:
	.loc	7 347 40                # exact_rhs.c:347:40
	movupd	-72(%rbx,%rsi), %xmm1
	.loc	7 347 38 is_stmt 0      # exact_rhs.c:347:38
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movupd	%xmm1, -72(%rbx,%rsi)
	.loc	7 347 40                # exact_rhs.c:347:40
	movupd	-56(%rbx,%rsi), %xmm1
	.loc	7 347 38                # exact_rhs.c:347:38
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movupd	%xmm1, -56(%rbx,%rsi)
	.loc	7 347 38                # exact_rhs.c:347:38
	movsd	-40(%rbx,%rsi), %xmm1   # xmm1 = mem[0],zero
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movlpd	%xmm1, -40(%rbx,%rsi)
	.loc	7 347 40                # exact_rhs.c:347:40
	movupd	-32(%rbx,%rsi), %xmm1
	.loc	7 347 38                # exact_rhs.c:347:38
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movupd	%xmm1, -32(%rbx,%rsi)
	.loc	7 347 40                # exact_rhs.c:347:40
	movupd	-16(%rbx,%rsi), %xmm1
	.loc	7 347 38                # exact_rhs.c:347:38
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movupd	%xmm1, -16(%rbx,%rsi)
	.loc	7 347 38                # exact_rhs.c:347:38
	movsd	(%rbx,%rsi), %xmm1      # xmm1 = mem[0],zero
	xorpd	%xmm0, %xmm1
	.loc	7 347 31                # exact_rhs.c:347:31
	movlpd	%xmm1, (%rbx,%rsi)
.Ltmp261:
	.loc	7 345 7 is_stmt 1 discriminator 1 # exact_rhs.c:345:7
	addq	$80, %rsi
	addl	$-2, %ebp
	jne	.LBB2_69
.Ltmp262:
.LBB2_70:                               # %for.inc2130
                                        #   in Loop: Header=BB2_65 Depth=2
	.loc	7 344 5 discriminator 1 # exact_rhs.c:344:5
	addq	$2600, %rax             # imm = 0xA28
	.loc	7 344 19 is_stmt 0 discriminator 1 # exact_rhs.c:344:19
	cmpq	%rdx, %rcx
	.loc	7 344 5 discriminator 1 # exact_rhs.c:344:5
	leaq	1(%rcx), %rcx
	jl	.LBB2_65
.Ltmp263:
.LBB2_71:                               # %for.inc2133
                                        #   in Loop: Header=BB2_64 Depth=1
	.loc	7 343 3 is_stmt 1 discriminator 1 # exact_rhs.c:343:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	7 343 17 is_stmt 0 discriminator 1 # exact_rhs.c:343:17
	cmpq	%r9, %r14
	.loc	7 343 3 discriminator 1 # exact_rhs.c:343:3
	leaq	1(%r14), %r14
	jl	.LBB2_64
.Ltmp264:
.LBB2_72:                               # %for.end2135
	.loc	7 352 1 is_stmt 1       # exact_rhs.c:352:1
	addq	$296, %rsp              # imm = 0x128
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp265:
.Lfunc_end2:
	.size	exact_rhs, .Lfunc_end2-exact_rhs
	.cfi_endproc

	.globl	exact_solution
	.p2align	4, 0x90
	.type	exact_solution,@function
exact_solution:                         # @exact_solution
.Lfunc_begin3:
	.file	8 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/exact_solution.c"
	.loc	8 40 0                  # exact_solution.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: exact_solution:xi <- %XMM0
	#DEBUG_VALUE: exact_solution:eta <- %XMM1
	#DEBUG_VALUE: exact_solution:zeta <- %XMM2
	#DEBUG_VALUE: exact_solution:dtemp <- %RDI
	movq	$-520, %rax             # imm = 0xFFFFFFFFFFFFFDF8
.Ltmp266:
	#DEBUG_VALUE: exact_solution:m <- 0
	.p2align	4, 0x90
.LBB3_1:                                # %for.body
                                        # =>This Inner Loop Header: Depth=1
	movsd	ce+600(%rax), %xmm3     # xmm3 = mem[0],zero
.Ltmp267:
	.loc	8 45 62 prologue_end    # exact_solution.c:45:62
	mulsd	%xmm0, %xmm3
	.loc	8 45 56 is_stmt 0       # exact_solution.c:45:56
	addsd	ce+576(%rax), %xmm3
	.loc	8 45 45                 # exact_solution.c:45:45
	mulsd	%xmm0, %xmm3
	.loc	8 45 39                 # exact_solution.c:45:39
	addsd	ce+552(%rax), %xmm3
	.loc	8 45 28                 # exact_solution.c:45:28
	mulsd	%xmm0, %xmm3
	.loc	8 45 22                 # exact_solution.c:45:22
	addsd	ce+528(%rax), %xmm3
	.loc	8 45 11                 # exact_solution.c:45:11
	mulsd	%xmm0, %xmm3
	.loc	8 44 25 is_stmt 1       # exact_solution.c:44:25
	addsd	ce+520(%rax), %xmm3
	movsd	ce+608(%rax), %xmm4     # xmm4 = mem[0],zero
	.loc	8 46 62                 # exact_solution.c:46:62
	mulsd	%xmm1, %xmm4
	.loc	8 46 56 is_stmt 0       # exact_solution.c:46:56
	addsd	ce+584(%rax), %xmm4
	.loc	8 46 45                 # exact_solution.c:46:45
	mulsd	%xmm1, %xmm4
	.loc	8 46 39                 # exact_solution.c:46:39
	addsd	ce+560(%rax), %xmm4
	.loc	8 46 28                 # exact_solution.c:46:28
	mulsd	%xmm1, %xmm4
	.loc	8 46 22                 # exact_solution.c:46:22
	addsd	ce+536(%rax), %xmm4
	.loc	8 46 11                 # exact_solution.c:46:11
	mulsd	%xmm1, %xmm4
	.loc	8 45 76 is_stmt 1       # exact_solution.c:45:76
	addsd	%xmm3, %xmm4
	movsd	ce+616(%rax), %xmm3     # xmm3 = mem[0],zero
	.loc	8 47 62                 # exact_solution.c:47:62
	mulsd	%xmm2, %xmm3
	.loc	8 47 56 is_stmt 0       # exact_solution.c:47:56
	addsd	ce+592(%rax), %xmm3
	.loc	8 47 45                 # exact_solution.c:47:45
	mulsd	%xmm2, %xmm3
	.loc	8 47 39                 # exact_solution.c:47:39
	addsd	ce+568(%rax), %xmm3
	.loc	8 47 28                 # exact_solution.c:47:28
	mulsd	%xmm2, %xmm3
	.loc	8 47 22                 # exact_solution.c:47:22
	addsd	ce+544(%rax), %xmm3
	.loc	8 47 11                 # exact_solution.c:47:11
	mulsd	%xmm2, %xmm3
	.loc	8 46 76 is_stmt 1       # exact_solution.c:46:76
	addsd	%xmm4, %xmm3
	.loc	8 44 14                 # exact_solution.c:44:14
	movsd	%xmm3, (%rdi)
.Ltmp268:
	.loc	8 43 3 discriminator 1  # exact_solution.c:43:3
	addq	$8, %rdi
	addq	$104, %rax
	jne	.LBB3_1
.Ltmp269:
# BB#2:                                 # %for.end
	.loc	8 49 1                  # exact_solution.c:49:1
	retq
.Ltmp270:
.Lfunc_end3:
	.size	exact_solution, .Lfunc_end3-exact_solution
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI4_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	initialize
	.p2align	4, 0x90
	.type	initialize,@function
initialize:                             # @initialize
.Lfunc_begin4:
	.file	9 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/initialize.c"
	.loc	9 41 0                  # initialize.c:41:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	9 54 9 prologue_end     # initialize.c:54:9
	pushq	%rbp
.Ltmp271:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp272:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp273:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp274:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp275:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp276:
	.cfi_def_cfa_offset 56
	subq	$472, %rsp              # imm = 0x1D8
.Ltmp277:
	.cfi_def_cfa_offset 528
.Ltmp278:
	.cfi_offset %rbx, -56
.Ltmp279:
	.cfi_offset %r12, -48
.Ltmp280:
	.cfi_offset %r13, -40
.Ltmp281:
	.cfi_offset %r14, -32
.Ltmp282:
	.cfi_offset %r15, -24
.Ltmp283:
	.cfi_offset %rbp, -16
	movslq	grid_points+8(%rip), %r8
.Ltmp284:
	#DEBUG_VALUE: initialize:k <- 0
	.loc	9 66 20 discriminator 1 # initialize.c:66:20
	testq	%r8, %r8
	jle	.LBB4_44
.Ltmp285:
# BB#1:                                 # %for.cond1.preheader.lr.ph
	.loc	9 52 22 discriminator 1 # initialize.c:52:22
	movl	grid_points+4(%rip), %r11d
	.loc	9 52 5 is_stmt 0 discriminator 1 # initialize.c:52:5
	testl	%r11d, %r11d
	jle	.LBB4_6
# BB#2:                                 # %for.cond5.preheader.lr.ph.us.preheader
.Ltmp286:
	.loc	9 53 24 is_stmt 1 discriminator 1 # initialize.c:53:24
	movl	grid_points(%rip), %edi
	.loc	9 53 7 is_stmt 0 discriminator 1 # initialize.c:53:7
	movl	%edi, %r14d
	andl	$1, %r14d
	xorl	%r10d, %r10d
	movl	$u+40, %r9d
.Ltmp287:
	.loc	9 54 23 is_stmt 1       # initialize.c:54:23
	movabsq	$4607182418800017408, %rbx # imm = 0x3FF0000000000000
	.loc	9 56 23                 # initialize.c:56:23
	xorpd	%xmm0, %xmm0
	.p2align	4, 0x90
.LBB4_3:                                # %for.cond5.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_59 Depth 2
                                        #       Child Loop BB4_63 Depth 3
	testl	%edi, %edi
	movq	%r9, %rsi
	movl	$0, %ebp
	jle	.LBB4_4
	.p2align	4, 0x90
.LBB4_59:                               # %for.body8.lr.ph.us.us
                                        #   Parent Loop BB4_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB4_63 Depth 3
	testl	%r14d, %r14d
	movl	$0, %eax
	je	.LBB4_61
# BB#60:                                # %for.body8.us.us.prol
                                        #   in Loop: Header=BB4_59 Depth=2
	.loc	9 54 9                  # initialize.c:54:9
	imulq	$2600, %rbp, %rax       # imm = 0xA28
	imulq	$169000, %r10, %rcx     # imm = 0x29428
	.loc	9 54 23 is_stmt 0       # initialize.c:54:23
	movq	%rbx, u(%rcx,%rax)
	.loc	9 56 23 is_stmt 1       # initialize.c:56:23
	movupd	%xmm0, u+8(%rcx,%rax)
	movq	$0, u+24(%rcx,%rax)
	.loc	9 58 23                 # initialize.c:58:23
	movq	%rbx, u+32(%rcx,%rax)
	movl	$1, %eax
.Ltmp288:
.LBB4_61:                               # %for.body8.lr.ph.us.us.split
                                        #   in Loop: Header=BB4_59 Depth=2
	cmpl	$1, %edi
	je	.LBB4_64
# BB#62:                                # %for.body8.lr.ph.us.us.split.split
                                        #   in Loop: Header=BB4_59 Depth=2
	.loc	9 53 7 discriminator 1  # initialize.c:53:7
	movl	%edi, %edx
	subl	%eax, %edx
	shlq	$3, %rax
	leaq	(%rax,%rax,4), %rcx
	movq	%rsi, %rax
	.p2align	4, 0x90
.LBB4_63:                               # %for.body8.us.us
                                        #   Parent Loop BB4_3 Depth=1
                                        #     Parent Loop BB4_59 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp289:
	.loc	9 54 23                 # initialize.c:54:23
	movq	%rbx, -40(%rcx,%rax)
	.loc	9 56 23                 # initialize.c:56:23
	movupd	%xmm0, -32(%rcx,%rax)
	movq	$0, -16(%rcx,%rax)
	.loc	9 58 23                 # initialize.c:58:23
	movq	%rbx, -8(%rcx,%rax)
	.loc	9 54 23                 # initialize.c:54:23
	movq	%rbx, (%rcx,%rax)
	.loc	9 56 23                 # initialize.c:56:23
	movupd	%xmm0, 8(%rcx,%rax)
	movq	$0, 24(%rcx,%rax)
	.loc	9 58 23                 # initialize.c:58:23
	movq	%rbx, 32(%rcx,%rax)
.Ltmp290:
	.loc	9 53 7 discriminator 1  # initialize.c:53:7
	addq	$80, %rax
	addl	$-2, %edx
	jne	.LBB4_63
.Ltmp291:
.LBB4_64:                               # %for.cond5.for.inc42_crit_edge.us.us
                                        #   in Loop: Header=BB4_59 Depth=2
	.loc	9 52 5 discriminator 1  # initialize.c:52:5
	incq	%rbp
	addq	$2600, %rsi             # imm = 0xA28
	cmpl	%r11d, %ebp
	jne	.LBB4_59
.Ltmp292:
.LBB4_4:                                # %for.cond1.for.inc45_crit_edge.us
                                        #   in Loop: Header=BB4_3 Depth=1
	.loc	9 51 3 discriminator 1  # initialize.c:51:3
	incq	%r10
	addq	$169000, %r9            # imm = 0x29428
	.loc	9 51 17 is_stmt 0 discriminator 1 # initialize.c:51:17
	cmpq	%r8, %r10
	jl	.LBB4_3
.Ltmp293:
# BB#5:                                 # %for.cond48.preheader
	.loc	9 66 3 is_stmt 1 discriminator 1 # initialize.c:66:3
	testl	%r8d, %r8d
	jle	.LBB4_44
.LBB4_6:                                # %for.body51.preheader
.Ltmp294:
	.loc	9 68 22 discriminator 1 # initialize.c:68:22
	movl	grid_points+4(%rip), %r9d
.Ltmp295:
	.loc	9 89 26                 # initialize.c:89:26
	leaq	344(%rsp), %r12
.Ltmp296:
	.loc	9 80 43                 # initialize.c:80:43
	leaq	264(%rsp), %r13
	leaq	384(%rsp), %rbx
.Ltmp297:
	.loc	9 85 43                 # initialize.c:85:43
	leaq	304(%rsp), %rbp
	leaq	424(%rsp), %rsi
	xorl	%edx, %edx
	movl	$u+32, %eax
.Ltmp298:
	.loc	9 91 47                 # initialize.c:91:47
	movq	%rax, 56(%rsp)          # 8-byte Spill
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
	leaq	224(%rsp), %rdi
.Ltmp299:
	.p2align	4, 0x90
.LBB4_7:                                # %for.body51
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_9 Depth 2
                                        #       Child Loop BB4_11 Depth 3
	#DEBUG_VALUE: initialize:j <- 0
	.loc	9 68 5 discriminator 1  # initialize.c:68:5
	testl	%r9d, %r9d
	jle	.LBB4_15
.Ltmp300:
# BB#8:                                 # %for.body56.lr.ph
                                        #   in Loop: Header=BB4_7 Depth=1
	movq	%rsi, %r10
	movq	%r13, %r14
	movq	%r12, %r11
	.loc	9 67 12                 # initialize.c:67:12
	cvtsi2sdl	%edx, %xmm2
	movq	%rdx, 104(%rsp)         # 8-byte Spill
	.loc	9 67 22 is_stmt 0       # initialize.c:67:22
	mulsd	dnzm1(%rip), %xmm2
.Ltmp301:
	#DEBUG_VALUE: initialize:zeta <- %XMM2
	.loc	9 91 47 is_stmt 1       # initialize.c:91:47
	movapd	%xmm2, 64(%rsp)         # 16-byte Spill
	movapd	%xmm0, %xmm1
	subsd	%xmm2, %xmm1
.Ltmp302:
	.loc	9 70 24 discriminator 1 # initialize.c:70:24
	movapd	%xmm1, 160(%rsp)        # 16-byte Spill
	movl	grid_points(%rip), %eax
.Ltmp303:
	.loc	9 91 24                 # initialize.c:91:24
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	.loc	9 91 54 is_stmt 0       # initialize.c:91:54
	movaps	%xmm3, 144(%rsp)        # 16-byte Spill
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 128(%rsp)        # 16-byte Spill
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	%rdx, %rcx
	xorl	%esi, %esi
.Ltmp304:
	.p2align	4, 0x90
.LBB4_9:                                # %for.body56
                                        #   Parent Loop BB4_7 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB4_11 Depth 3
	#DEBUG_VALUE: initialize:i <- 0
	.loc	9 70 7 is_stmt 1 discriminator 1 # initialize.c:70:7
	testl	%eax, %eax
	jle	.LBB4_13
.Ltmp305:
# BB#10:                                # %for.body63.lr.ph
                                        #   in Loop: Header=BB4_9 Depth=2
	.loc	9 69 13                 # initialize.c:69:13
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%esi, %xmm1
	movq	%rsi, 112(%rsp)         # 8-byte Spill
	.loc	9 69 23 is_stmt 0       # initialize.c:69:23
	mulsd	dnym1(%rip), %xmm1
.Ltmp306:
	#DEBUG_VALUE: initialize:eta <- %XMM1
	.loc	9 90 47 is_stmt 1       # initialize.c:90:47
	movapd	%xmm1, 80(%rsp)         # 16-byte Spill
	movapd	%xmm0, %xmm3
	subsd	%xmm1, %xmm3
	.loc	9 90 24 is_stmt 0       # initialize.c:90:24
	movapd	%xmm3, 208(%rsp)        # 16-byte Spill
	movapd	%xmm1, %xmm4
	movapd	%xmm1, %xmm7
.Ltmp307:
	#DEBUG_VALUE: initialize:eta <- %XMM7
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movaps	%xmm4, 192(%rsp)        # 16-byte Spill
	.loc	9 90 54                 # initialize.c:90:54
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 176(%rsp)        # 16-byte Spill
	movq	%rcx, %r14
	movq	%r14, 120(%rsp)         # 8-byte Spill
	xorl	%r15d, %r15d
	movq	%r10, %r12
.Ltmp308:
	.p2align	4, 0x90
.LBB4_11:                               # %for.body63
                                        #   Parent Loop BB4_7 Depth=1
                                        #     Parent Loop BB4_9 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	9 71 26 is_stmt 1       # initialize.c:71:26
	movsd	dnxm1(%rip), %xmm0      # xmm0 = mem[0],zero
.Ltmp309:
	#DEBUG_VALUE: initialize:Pxi <- 0.000000e+00
	#DEBUG_VALUE: initialize:ix <- 0
	.loc	9 75 11                 # initialize.c:75:11
	movsd	%xmm0, (%rsp)           # 8-byte Spill
	xorpd	%xmm0, %xmm0
	movapd	%xmm7, %xmm1
	movq	%rdi, %r13
	callq	exact_solution
.Ltmp310:
	.loc	9 91 47                 # initialize.c:91:47
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
.Ltmp311:
	.loc	9 75 11                 # initialize.c:75:11
	movaps	80(%rsp), %xmm1         # 16-byte Reload
	movaps	64(%rsp), %xmm2         # 16-byte Reload
.Ltmp312:
	.loc	9 89 26                 # initialize.c:89:26
	leaq	344(%rsp), %rdi
.Ltmp313:
	.loc	9 75 11                 # initialize.c:75:11
	callq	exact_solution
.Ltmp314:
	.loc	9 71 14                 # initialize.c:71:14
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 71 24 is_stmt 0       # initialize.c:71:24
	mulsd	(%rsp), %xmm0           # 8-byte Folded Reload
.Ltmp315:
	#DEBUG_VALUE: initialize:Peta <- 0.000000e+00
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	9 80 11 is_stmt 1       # initialize.c:80:11
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	xorps	%xmm1, %xmm1
.Ltmp316:
	#DEBUG_VALUE: initialize:xi <- [%RSP+0]
	movaps	64(%rsp), %xmm2         # 16-byte Reload
	.loc	9 80 43 is_stmt 0       # initialize.c:80:43
	leaq	264(%rsp), %rdi
	.loc	9 80 11                 # initialize.c:80:11
	callq	exact_solution
.Ltmp317:
	movaps	(%rsp), %xmm0           # 16-byte Reload
.Ltmp318:
	.loc	9 91 47 is_stmt 1       # initialize.c:91:47
	movsd	.LCPI4_0(%rip), %xmm1   # xmm1 = mem[0],zero
.Ltmp319:
	.loc	9 80 11                 # initialize.c:80:11
	movaps	64(%rsp), %xmm2         # 16-byte Reload
	movq	%rbx, %rdi
	callq	exact_solution
.Ltmp320:
	#DEBUG_VALUE: initialize:Pzeta <- 0.000000e+00
	.loc	9 85 11                 # initialize.c:85:11
	xorps	%xmm2, %xmm2
	movaps	(%rsp), %xmm0           # 16-byte Reload
	movaps	80(%rsp), %xmm1         # 16-byte Reload
	movq	%rbp, %rdi
	callq	exact_solution
	movaps	(%rsp), %xmm0           # 16-byte Reload
	movaps	80(%rsp), %xmm1         # 16-byte Reload
.Ltmp321:
	.loc	9 91 47                 # initialize.c:91:47
	movsd	.LCPI4_0(%rip), %xmm2   # xmm2 = mem[0],zero
.Ltmp322:
	.loc	9 85 11                 # initialize.c:85:11
	movq	%r12, %rdi
	callq	exact_solution
	movapd	128(%rsp), %xmm9        # 16-byte Reload
	movapd	144(%rsp), %xmm8        # 16-byte Reload
	movq	%r13, %rdi
.Ltmp323:
	.loc	9 91 47                 # initialize.c:91:47
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	(%rsp), %xmm1           # 16-byte Reload
.Ltmp324:
	#DEBUG_VALUE: initialize:xi <- %XMM1
	.loc	9 89 47                 # initialize.c:89:47
	subsd	%xmm1, %xmm0
	.loc	9 89 26 is_stmt 0       # initialize.c:89:26
	movupd	344(%rsp), %xmm3
	.loc	9 89 24                 # initialize.c:89:24
	movapd	%xmm1, %xmm2
	movapd	%xmm1, %xmm12
.Ltmp325:
	#DEBUG_VALUE: initialize:xi <- %XMM12
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm3
	.loc	9 89 54                 # initialize.c:89:54
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movapd	224(%rsp), %xmm4
	mulpd	%xmm1, %xmm4
	.loc	9 89 41                 # initialize.c:89:41
	addpd	%xmm3, %xmm4
	movapd	384(%rsp), %xmm3
	movapd	192(%rsp), %xmm10       # 16-byte Reload
	.loc	9 90 24 is_stmt 1       # initialize.c:90:24
	mulpd	%xmm10, %xmm3
	.loc	9 90 56 is_stmt 0       # initialize.c:90:56
	movupd	264(%rsp), %xmm5
	movapd	176(%rsp), %xmm11       # 16-byte Reload
	.loc	9 90 54                 # initialize.c:90:54
	mulpd	%xmm11, %xmm5
	.loc	9 90 41                 # initialize.c:90:41
	addpd	%xmm3, %xmm5
	.loc	9 91 26 is_stmt 1       # initialize.c:91:26
	movupd	424(%rsp), %xmm3
	.loc	9 91 24 is_stmt 0       # initialize.c:91:24
	mulpd	%xmm8, %xmm3
	movapd	304(%rsp), %xmm6
	.loc	9 91 54                 # initialize.c:91:54
	mulpd	%xmm9, %xmm6
	.loc	9 91 41                 # initialize.c:91:41
	addpd	%xmm3, %xmm6
	.loc	9 93 31 is_stmt 1       # initialize.c:93:31
	movapd	%xmm4, %xmm3
	addpd	%xmm5, %xmm3
	.loc	9 93 38 is_stmt 0       # initialize.c:93:38
	addpd	%xmm6, %xmm3
	.loc	9 94 30 is_stmt 1       # initialize.c:94:30
	movapd	%xmm4, %xmm7
	mulpd	%xmm5, %xmm7
	.loc	9 93 46                 # initialize.c:93:46
	subpd	%xmm7, %xmm3
	.loc	9 94 41                 # initialize.c:94:41
	mulpd	%xmm6, %xmm4
	.loc	9 94 36 is_stmt 0       # initialize.c:94:36
	subpd	%xmm4, %xmm3
	.loc	9 94 54                 # initialize.c:94:54
	mulpd	%xmm6, %xmm5
	.loc	9 94 48                 # initialize.c:94:48
	subpd	%xmm5, %xmm3
	.loc	9 95 35 is_stmt 1       # initialize.c:95:35
	mulpd	%xmm6, %xmm7
	movapd	160(%rsp), %xmm6        # 16-byte Reload
	.loc	9 94 61                 # initialize.c:94:61
	addpd	%xmm3, %xmm7
	.loc	9 93 25                 # initialize.c:93:25
	movupd	%xmm7, -32(%r14)
	.loc	9 89 26                 # initialize.c:89:26
	movupd	360(%rsp), %xmm3
	.loc	9 89 24 is_stmt 0       # initialize.c:89:24
	mulpd	%xmm2, %xmm3
	.loc	9 89 54                 # initialize.c:89:54
	mulpd	240(%rsp), %xmm1
	.loc	9 89 41                 # initialize.c:89:41
	addpd	%xmm3, %xmm1
	movapd	400(%rsp), %xmm2
	.loc	9 90 24 is_stmt 1       # initialize.c:90:24
	mulpd	%xmm10, %xmm2
	.loc	9 90 56 is_stmt 0       # initialize.c:90:56
	movupd	280(%rsp), %xmm3
	.loc	9 90 54                 # initialize.c:90:54
	mulpd	%xmm11, %xmm3
	.loc	9 90 41                 # initialize.c:90:41
	addpd	%xmm2, %xmm3
	.loc	9 91 26 is_stmt 1       # initialize.c:91:26
	movupd	440(%rsp), %xmm2
	.loc	9 91 24 is_stmt 0       # initialize.c:91:24
	mulpd	%xmm8, %xmm2
	movapd	320(%rsp), %xmm4
	.loc	9 91 54                 # initialize.c:91:54
	mulpd	%xmm9, %xmm4
	.loc	9 91 41                 # initialize.c:91:41
	addpd	%xmm2, %xmm4
	.loc	9 93 31 is_stmt 1       # initialize.c:93:31
	movapd	%xmm1, %xmm2
	addpd	%xmm3, %xmm2
	.loc	9 93 38 is_stmt 0       # initialize.c:93:38
	addpd	%xmm4, %xmm2
	.loc	9 94 30 is_stmt 1       # initialize.c:94:30
	movapd	%xmm1, %xmm5
	mulpd	%xmm3, %xmm5
	.loc	9 93 46                 # initialize.c:93:46
	subpd	%xmm5, %xmm2
	.loc	9 94 41                 # initialize.c:94:41
	mulpd	%xmm4, %xmm1
	.loc	9 94 36 is_stmt 0       # initialize.c:94:36
	subpd	%xmm1, %xmm2
	.loc	9 94 54                 # initialize.c:94:54
	mulpd	%xmm4, %xmm3
	.loc	9 94 48                 # initialize.c:94:48
	subpd	%xmm3, %xmm2
	.loc	9 95 35 is_stmt 1       # initialize.c:95:35
	mulpd	%xmm4, %xmm5
	.loc	9 94 61                 # initialize.c:94:61
	addpd	%xmm2, %xmm5
	.loc	9 93 25                 # initialize.c:93:25
	movupd	%xmm5, -16(%r14)
	movapd	64(%rsp), %xmm2         # 16-byte Reload
	.loc	9 89 24                 # initialize.c:89:24
	mulsd	376(%rsp), %xmm12
.Ltmp326:
	.loc	9 89 54 is_stmt 0       # initialize.c:89:54
	mulsd	256(%rsp), %xmm0
	.loc	9 89 41                 # initialize.c:89:41
	addsd	%xmm12, %xmm0
	movsd	416(%rsp), %xmm1        # xmm1 = mem[0],zero
	movapd	80(%rsp), %xmm3         # 16-byte Reload
	.loc	9 90 24 is_stmt 1       # initialize.c:90:24
	mulsd	%xmm3, %xmm1
	movapd	%xmm3, %xmm7
	movsd	296(%rsp), %xmm5        # xmm5 = mem[0],zero
	.loc	9 90 54 is_stmt 0       # initialize.c:90:54
	mulsd	208(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	9 90 41                 # initialize.c:90:41
	addsd	%xmm1, %xmm5
	movsd	456(%rsp), %xmm1        # xmm1 = mem[0],zero
	.loc	9 91 24 is_stmt 1       # initialize.c:91:24
	mulsd	%xmm2, %xmm1
	movsd	336(%rsp), %xmm3        # xmm3 = mem[0],zero
	.loc	9 91 54 is_stmt 0       # initialize.c:91:54
	mulsd	%xmm6, %xmm3
	.loc	9 91 41                 # initialize.c:91:41
	addsd	%xmm1, %xmm3
	.loc	9 93 31 is_stmt 1       # initialize.c:93:31
	movapd	%xmm0, %xmm1
	addsd	%xmm5, %xmm1
	.loc	9 93 38 is_stmt 0       # initialize.c:93:38
	addsd	%xmm3, %xmm1
	.loc	9 94 30 is_stmt 1       # initialize.c:94:30
	movapd	%xmm0, %xmm4
	mulsd	%xmm5, %xmm4
	.loc	9 93 46                 # initialize.c:93:46
	subsd	%xmm4, %xmm1
	.loc	9 94 41                 # initialize.c:94:41
	mulsd	%xmm3, %xmm0
	.loc	9 94 36 is_stmt 0       # initialize.c:94:36
	subsd	%xmm0, %xmm1
	.loc	9 94 54                 # initialize.c:94:54
	mulsd	%xmm3, %xmm5
	.loc	9 94 48                 # initialize.c:94:48
	subsd	%xmm5, %xmm1
	.loc	9 95 35 is_stmt 1       # initialize.c:95:35
	mulsd	%xmm3, %xmm4
	.loc	9 94 61                 # initialize.c:94:61
	addsd	%xmm1, %xmm4
	.loc	9 93 25                 # initialize.c:93:25
	movsd	%xmm4, (%r14)
.Ltmp327:
	.loc	9 70 7 discriminator 1  # initialize.c:70:7
	incq	%r15
	.loc	9 70 21 is_stmt 0 discriminator 1 # initialize.c:70:21
	movslq	grid_points(%rip), %rax
	addq	$40, %r14
	cmpq	%rax, %r15
	.loc	9 70 7 discriminator 1  # initialize.c:70:7
	jl	.LBB4_11
# BB#12:                                # %for.inc166.loopexit
                                        #   in Loop: Header=BB4_9 Depth=2
	movq	%r12, %r10
.Ltmp328:
	.loc	9 80 43 is_stmt 1       # initialize.c:80:43
	leaq	264(%rsp), %r14
.Ltmp329:
	.loc	9 89 26                 # initialize.c:89:26
	leaq	344(%rsp), %r11
.Ltmp330:
	.loc	9 68 22 discriminator 1 # initialize.c:68:22
	movl	grid_points+4(%rip), %r9d
.Ltmp331:
	.loc	9 91 47                 # initialize.c:91:47
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
.Ltmp332:
.LBB4_13:                               # %for.inc166
                                        #   in Loop: Header=BB4_9 Depth=2
	.loc	9 68 5 discriminator 1  # initialize.c:68:5
	incq	%rsi
	.loc	9 68 19 is_stmt 0 discriminator 1 # initialize.c:68:19
	movslq	%r9d, %rdx
	.loc	9 68 5 discriminator 1  # initialize.c:68:5
	addq	$2600, %rcx             # imm = 0xA28
	.loc	9 68 19 discriminator 1 # initialize.c:68:19
	cmpq	%rdx, %rsi
	jl	.LBB4_9
.Ltmp333:
# BB#14:                                # %for.inc169.loopexit
                                        #   in Loop: Header=BB4_7 Depth=1
	.loc	9 66 20 is_stmt 1 discriminator 1 # initialize.c:66:20
	movl	grid_points+8(%rip), %r8d
	movq	%r11, %r12
	movq	%r14, %r13
	movq	%r10, %rsi
	movq	104(%rsp), %rdx         # 8-byte Reload
.LBB4_15:                               # %for.inc169
                                        #   in Loop: Header=BB4_7 Depth=1
	.loc	9 66 3 is_stmt 0 discriminator 1 # initialize.c:66:3
	incq	%rdx
	.loc	9 66 17 discriminator 1 # initialize.c:66:17
	movslq	%r8d, %rax
	.loc	9 66 3 discriminator 1  # initialize.c:66:3
	addq	$169000, 56(%rsp)       # 8-byte Folded Spill
                                        # imm = 0x29428
	.loc	9 66 17 discriminator 1 # initialize.c:66:17
	cmpq	%rax, %rdx
	jl	.LBB4_7
.Ltmp334:
# BB#16:                                # %for.cond172.preheader
	.loc	9 111 3 is_stmt 1 discriminator 1 # initialize.c:111:3
	testl	%r8d, %r8d
	jle	.LBB4_44
# BB#17:                                # %for.body176.lr.ph
	movl	$u, %r14d
	xorl	%r15d, %r15d
.Ltmp335:
	.loc	9 113 22 discriminator 1 # initialize.c:113:22
	movl	grid_points+4(%rip), %eax
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB4_18:                               # %for.body176
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_20 Depth 2
	#DEBUG_VALUE: initialize:j <- 0
	.loc	9 113 5 is_stmt 0 discriminator 1 # initialize.c:113:5
	testl	%eax, %eax
	jle	.LBB4_22
.Ltmp336:
# BB#19:                                #   in Loop: Header=BB4_18 Depth=1
	.loc	9 112 12 is_stmt 1      # initialize.c:112:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 112 22 is_stmt 0      # initialize.c:112:22
	mulsd	dnzm1(%rip), %xmm0
.Ltmp337:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp338:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp339:
	.p2align	4, 0x90
.LBB4_20:                               # %for.body183
                                        #   Parent Loop BB4_18 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	9 114 13 is_stmt 1      # initialize.c:114:13
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%ebx, %xmm1
	.loc	9 114 23 is_stmt 0      # initialize.c:114:23
	mulsd	dnym1(%rip), %xmm1
.Ltmp340:
	#DEBUG_VALUE: initialize:eta <- %XMM1
	.loc	9 115 7 is_stmt 1       # initialize.c:115:7
	xorpd	%xmm0, %xmm0
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
.Ltmp341:
	#DEBUG_VALUE: initialize:m <- 0
	.loc	9 117 23                # initialize.c:117:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
	movaps	32(%rsp), %xmm1
.Ltmp342:
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp343:
	.loc	9 113 41 discriminator 2 # initialize.c:113:41
	incl	%ebx
.Ltmp344:
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	9 113 22 is_stmt 0 discriminator 1 # initialize.c:113:22
	movl	grid_points+4(%rip), %eax
	.loc	9 113 19 discriminator 1 # initialize.c:113:19
	addq	$2600, %rbp             # imm = 0xA28
	cmpl	%eax, %ebx
	.loc	9 113 5 discriminator 1 # initialize.c:113:5
	jl	.LBB4_20
.Ltmp345:
# BB#21:                                # %for.inc206.loopexit
                                        #   in Loop: Header=BB4_18 Depth=1
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	9 111 20 is_stmt 1 discriminator 1 # initialize.c:111:20
	movl	grid_points+8(%rip), %r8d
.Ltmp346:
.LBB4_22:                               # %for.inc206
                                        #   in Loop: Header=BB4_18 Depth=1
	.loc	9 111 39 is_stmt 0 discriminator 2 # initialize.c:111:39
	incl	%r15d
.Ltmp347:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	9 111 3 discriminator 1 # initialize.c:111:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	9 111 17 discriminator 1 # initialize.c:111:17
	cmpl	%r8d, %r15d
	jl	.LBB4_18
.Ltmp348:
# BB#23:                                # %for.end208
	#DEBUG_VALUE: initialize:k <- %R15D
	#DEBUG_VALUE: initialize:k <- 0
	#DEBUG_VALUE: initialize:xi <- 1.000000e+00
	.loc	9 127 3 is_stmt 1 discriminator 1 # initialize.c:127:3
	testl	%r8d, %r8d
	jle	.LBB4_44
# BB#24:                                # %for.body214.lr.ph
.Ltmp349:
	.loc	9 133 9                 # initialize.c:133:9
	movslq	grid_points(%rip), %rax
.Ltmp350:
	.loc	9 126 22                # initialize.c:126:22
	leaq	(%rax,%rax,4), %rcx
.Ltmp351:
	.loc	9 129 22 discriminator 1 # initialize.c:129:22
	movl	grid_points+4(%rip), %eax
.Ltmp352:
	.loc	9 127 3 discriminator 1 # initialize.c:127:3
	leaq	u-40(,%rcx,8), %r14
	xorl	%r15d, %r15d
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB4_25:                               # %for.body214
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_27 Depth 2
.Ltmp353:
	#DEBUG_VALUE: initialize:j <- 0
	.loc	9 129 5 discriminator 1 # initialize.c:129:5
	testl	%eax, %eax
	jle	.LBB4_29
.Ltmp354:
# BB#26:                                #   in Loop: Header=BB4_25 Depth=1
	.loc	9 128 12                # initialize.c:128:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 128 22 is_stmt 0      # initialize.c:128:22
	mulsd	dnzm1(%rip), %xmm0
.Ltmp355:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp356:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp357:
	.p2align	4, 0x90
.LBB4_27:                               # %for.body221
                                        #   Parent Loop BB4_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	9 130 13 is_stmt 1      # initialize.c:130:13
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%ebx, %xmm1
	.loc	9 130 23 is_stmt 0      # initialize.c:130:23
	mulsd	dnym1(%rip), %xmm1
.Ltmp358:
	#DEBUG_VALUE: initialize:eta <- %XMM1
	.loc	9 131 7 is_stmt 1       # initialize.c:131:7
	movsd	.LCPI4_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp359:
	.loc	9 133 23                # initialize.c:133:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
	movaps	32(%rsp), %xmm1
.Ltmp360:
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp361:
	.loc	9 129 41 discriminator 2 # initialize.c:129:41
	incl	%ebx
.Ltmp362:
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	9 129 22 is_stmt 0 discriminator 1 # initialize.c:129:22
	movl	grid_points+4(%rip), %eax
	.loc	9 129 19 discriminator 1 # initialize.c:129:19
	addq	$2600, %rbp             # imm = 0xA28
	cmpl	%eax, %ebx
	.loc	9 129 5 discriminator 1 # initialize.c:129:5
	jl	.LBB4_27
.Ltmp363:
# BB#28:                                # %for.inc245.loopexit
                                        #   in Loop: Header=BB4_25 Depth=1
	#DEBUG_VALUE: initialize:j <- %EBX
	.loc	9 127 20 is_stmt 1 discriminator 1 # initialize.c:127:20
	movl	grid_points+8(%rip), %r8d
.Ltmp364:
.LBB4_29:                               # %for.inc245
                                        #   in Loop: Header=BB4_25 Depth=1
	.loc	9 127 39 is_stmt 0 discriminator 2 # initialize.c:127:39
	incl	%r15d
.Ltmp365:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	9 127 3 discriminator 1 # initialize.c:127:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	9 127 17 discriminator 1 # initialize.c:127:17
	cmpl	%r8d, %r15d
	jl	.LBB4_25
.Ltmp366:
# BB#30:                                # %for.cond248.preheader
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	9 143 3 is_stmt 1 discriminator 1 # initialize.c:143:3
	testl	%r8d, %r8d
	jle	.LBB4_44
.Ltmp367:
# BB#31:                                # %for.body252.lr.ph
	#DEBUG_VALUE: initialize:k <- %R15D
	movl	$u, %r14d
	xorl	%r15d, %r15d
.Ltmp368:
	.loc	9 145 22 discriminator 1 # initialize.c:145:22
	movl	grid_points(%rip), %eax
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB4_32:                               # %for.body252
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_34 Depth 2
	#DEBUG_VALUE: initialize:i <- 0
	.loc	9 145 5 is_stmt 0 discriminator 1 # initialize.c:145:5
	testl	%eax, %eax
	jle	.LBB4_36
.Ltmp369:
# BB#33:                                #   in Loop: Header=BB4_32 Depth=1
	.loc	9 144 12 is_stmt 1      # initialize.c:144:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 144 22 is_stmt 0      # initialize.c:144:22
	mulsd	dnzm1(%rip), %xmm0
.Ltmp370:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp371:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp372:
	.p2align	4, 0x90
.LBB4_34:                               # %for.body259
                                        #   Parent Loop BB4_32 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	9 146 12 is_stmt 1      # initialize.c:146:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	9 146 22 is_stmt 0      # initialize.c:146:22
	mulsd	dnxm1(%rip), %xmm0
.Ltmp373:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	9 147 7 is_stmt 1       # initialize.c:147:7
	xorps	%xmm1, %xmm1
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp374:
	.loc	9 149 23                # initialize.c:149:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp375:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp376:
	.loc	9 145 41 discriminator 2 # initialize.c:145:41
	incl	%ebx
.Ltmp377:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 145 22 is_stmt 0 discriminator 1 # initialize.c:145:22
	movl	grid_points(%rip), %eax
	.loc	9 145 19 discriminator 1 # initialize.c:145:19
	addq	$40, %rbp
	cmpl	%eax, %ebx
	.loc	9 145 5 discriminator 1 # initialize.c:145:5
	jl	.LBB4_34
.Ltmp378:
# BB#35:                                # %for.inc283.loopexit
                                        #   in Loop: Header=BB4_32 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 143 20 is_stmt 1 discriminator 1 # initialize.c:143:20
	movl	grid_points+8(%rip), %r8d
.Ltmp379:
.LBB4_36:                               # %for.inc283
                                        #   in Loop: Header=BB4_32 Depth=1
	.loc	9 143 39 is_stmt 0 discriminator 2 # initialize.c:143:39
	incl	%r15d
.Ltmp380:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	9 143 3 discriminator 1 # initialize.c:143:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	9 143 17 discriminator 1 # initialize.c:143:17
	cmpl	%r8d, %r15d
	jl	.LBB4_32
.Ltmp381:
# BB#37:                                # %for.end285
	#DEBUG_VALUE: initialize:k <- %R15D
	#DEBUG_VALUE: initialize:k <- 0
	#DEBUG_VALUE: initialize:eta <- 1.000000e+00
	.loc	9 159 3 is_stmt 1 discriminator 1 # initialize.c:159:3
	testl	%r8d, %r8d
	jle	.LBB4_44
# BB#38:                                # %for.body291.lr.ph
.Ltmp382:
	.loc	9 165 9                 # initialize.c:165:9
	movslq	grid_points+4(%rip), %rax
.Ltmp383:
	.loc	9 158 23                # initialize.c:158:23
	imulq	$2600, %rax, %rcx       # imm = 0xA28
.Ltmp384:
	.loc	9 161 22 discriminator 1 # initialize.c:161:22
	movl	grid_points(%rip), %eax
.Ltmp385:
	.loc	9 159 3 discriminator 1 # initialize.c:159:3
	leaq	u-2600(%rcx), %r14
	xorl	%r15d, %r15d
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB4_39:                               # %for.body291
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_41 Depth 2
.Ltmp386:
	#DEBUG_VALUE: initialize:i <- 0
	.loc	9 161 5 discriminator 1 # initialize.c:161:5
	testl	%eax, %eax
	jle	.LBB4_43
.Ltmp387:
# BB#40:                                #   in Loop: Header=BB4_39 Depth=1
	.loc	9 160 12                # initialize.c:160:12
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 160 22 is_stmt 0      # initialize.c:160:22
	mulsd	dnzm1(%rip), %xmm0
.Ltmp388:
	#DEBUG_VALUE: initialize:zeta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp389:
	#DEBUG_VALUE: initialize:zeta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp390:
	.p2align	4, 0x90
.LBB4_41:                               # %for.body298
                                        #   Parent Loop BB4_39 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	9 162 12 is_stmt 1      # initialize.c:162:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	9 162 22 is_stmt 0      # initialize.c:162:22
	mulsd	dnxm1(%rip), %xmm0
.Ltmp391:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	9 163 7 is_stmt 1       # initialize.c:163:7
	movsd	.LCPI4_0(%rip), %xmm1   # xmm1 = mem[0],zero
	movsd	(%rsp), %xmm2           # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp392:
	.loc	9 165 23                # initialize.c:165:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp393:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp394:
	.loc	9 161 41 discriminator 2 # initialize.c:161:41
	incl	%ebx
.Ltmp395:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 161 22 is_stmt 0 discriminator 1 # initialize.c:161:22
	movl	grid_points(%rip), %eax
	.loc	9 161 19 discriminator 1 # initialize.c:161:19
	addq	$40, %rbp
	cmpl	%eax, %ebx
	.loc	9 161 5 discriminator 1 # initialize.c:161:5
	jl	.LBB4_41
.Ltmp396:
# BB#42:                                # %for.inc322.loopexit
                                        #   in Loop: Header=BB4_39 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 159 20 is_stmt 1 discriminator 1 # initialize.c:159:20
	movl	grid_points+8(%rip), %r8d
.Ltmp397:
.LBB4_43:                               # %for.inc322
                                        #   in Loop: Header=BB4_39 Depth=1
	.loc	9 159 39 is_stmt 0 discriminator 2 # initialize.c:159:39
	incl	%r15d
.Ltmp398:
	#DEBUG_VALUE: initialize:k <- %R15D
	.loc	9 159 3 discriminator 1 # initialize.c:159:3
	addq	$169000, %r14           # imm = 0x29428
	.loc	9 159 17 discriminator 1 # initialize.c:159:17
	cmpl	%r8d, %r15d
	jl	.LBB4_39
.Ltmp399:
.LBB4_44:                               # %for.cond325.preheader
	.loc	9 175 20 is_stmt 1 discriminator 1 # initialize.c:175:20
	movl	grid_points+4(%rip), %eax
	.loc	9 175 3 is_stmt 0 discriminator 1 # initialize.c:175:3
	testl	%eax, %eax
	jle	.LBB4_58
# BB#45:                                # %for.body329.lr.ph
	movl	$u, %r14d
	xorl	%r15d, %r15d
.Ltmp400:
	.loc	9 177 21 is_stmt 1 discriminator 1 # initialize.c:177:21
	movl	grid_points(%rip), %ecx
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB4_46:                               # %for.body329
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_48 Depth 2
.Ltmp401:
	#DEBUG_VALUE: initialize:i <- 0
	.loc	9 177 5 is_stmt 0 discriminator 1 # initialize.c:177:5
	testl	%ecx, %ecx
	jle	.LBB4_50
.Ltmp402:
# BB#47:                                #   in Loop: Header=BB4_46 Depth=1
	.loc	9 176 11 is_stmt 1      # initialize.c:176:11
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 176 21 is_stmt 0      # initialize.c:176:21
	mulsd	dnym1(%rip), %xmm0
.Ltmp403:
	#DEBUG_VALUE: initialize:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp404:
	#DEBUG_VALUE: initialize:eta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp405:
	.p2align	4, 0x90
.LBB4_48:                               # %for.body336
                                        #   Parent Loop BB4_46 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	9 178 12 is_stmt 1      # initialize.c:178:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	9 178 22 is_stmt 0      # initialize.c:178:22
	mulsd	dnxm1(%rip), %xmm0
.Ltmp406:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	9 179 7 is_stmt 1       # initialize.c:179:7
	xorpd	%xmm2, %xmm2
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp407:
	.loc	9 181 23                # initialize.c:181:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp408:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp409:
	.loc	9 177 40 discriminator 2 # initialize.c:177:40
	incl	%ebx
.Ltmp410:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 177 21 is_stmt 0 discriminator 1 # initialize.c:177:21
	movl	grid_points(%rip), %ecx
	.loc	9 177 18 discriminator 1 # initialize.c:177:18
	addq	$40, %rbp
	cmpl	%ecx, %ebx
	.loc	9 177 5 discriminator 1 # initialize.c:177:5
	jl	.LBB4_48
.Ltmp411:
# BB#49:                                # %for.inc360.loopexit
                                        #   in Loop: Header=BB4_46 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 175 20 is_stmt 1 discriminator 1 # initialize.c:175:20
	movl	grid_points+4(%rip), %eax
.Ltmp412:
.LBB4_50:                               # %for.inc360
                                        #   in Loop: Header=BB4_46 Depth=1
	.loc	9 175 39 is_stmt 0 discriminator 2 # initialize.c:175:39
	incl	%r15d
.Ltmp413:
	#DEBUG_VALUE: initialize:j <- %R15D
	.loc	9 175 3 discriminator 1 # initialize.c:175:3
	addq	$2600, %r14             # imm = 0xA28
	.loc	9 175 17 discriminator 1 # initialize.c:175:17
	cmpl	%eax, %r15d
	jl	.LBB4_46
.Ltmp414:
# BB#51:                                # %for.end362
	#DEBUG_VALUE: initialize:j <- %R15D
	#DEBUG_VALUE: initialize:j <- 0
	#DEBUG_VALUE: initialize:zeta <- 1.000000e+00
	.loc	9 191 3 is_stmt 1 discriminator 1 # initialize.c:191:3
	testl	%eax, %eax
	jle	.LBB4_58
# BB#52:                                # %for.body368.lr.ph
.Ltmp415:
	.loc	9 197 9                 # initialize.c:197:9
	movslq	grid_points+8(%rip), %rcx
.Ltmp416:
	.loc	9 190 24                # initialize.c:190:24
	imulq	$169000, %rcx, %rdx     # imm = 0x29428
.Ltmp417:
	.loc	9 193 21 discriminator 1 # initialize.c:193:21
	movl	grid_points(%rip), %ecx
.Ltmp418:
	.loc	9 191 3 discriminator 1 # initialize.c:191:3
	leaq	u-169000(%rdx), %r14
	xorl	%r15d, %r15d
	leaq	16(%rsp), %r12
	.p2align	4, 0x90
.LBB4_53:                               # %for.body368
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_55 Depth 2
.Ltmp419:
	#DEBUG_VALUE: initialize:i <- 0
	.loc	9 193 5 discriminator 1 # initialize.c:193:5
	testl	%ecx, %ecx
	jle	.LBB4_57
.Ltmp420:
# BB#54:                                #   in Loop: Header=BB4_53 Depth=1
	.loc	9 192 11                # initialize.c:192:11
	cvtsi2sdl	%r15d, %xmm0
	.loc	9 192 21 is_stmt 0      # initialize.c:192:21
	mulsd	dnym1(%rip), %xmm0
.Ltmp421:
	#DEBUG_VALUE: initialize:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp422:
	#DEBUG_VALUE: initialize:eta <- [%RSP+0]
	movq	%r14, %rbp
	xorl	%ebx, %ebx
.Ltmp423:
	.p2align	4, 0x90
.LBB4_55:                               # %for.body375
                                        #   Parent Loop BB4_53 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	9 194 12 is_stmt 1      # initialize.c:194:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%ebx, %xmm0
	.loc	9 194 22 is_stmt 0      # initialize.c:194:22
	mulsd	dnxm1(%rip), %xmm0
.Ltmp424:
	#DEBUG_VALUE: initialize:xi <- %XMM0
	.loc	9 195 7 is_stmt 1       # initialize.c:195:7
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	.LCPI4_0(%rip), %xmm2   # xmm2 = mem[0],zero
	movq	%r12, %rdi
	callq	exact_solution
	#DEBUG_VALUE: initialize:m <- 0
.Ltmp425:
	.loc	9 197 23                # initialize.c:197:23
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbp)
	movapd	16(%rsp), %xmm0
.Ltmp426:
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbp)
	movupd	%xmm0, (%rbp)
.Ltmp427:
	.loc	9 193 40 discriminator 2 # initialize.c:193:40
	incl	%ebx
.Ltmp428:
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 193 21 is_stmt 0 discriminator 1 # initialize.c:193:21
	movl	grid_points(%rip), %ecx
	.loc	9 193 18 discriminator 1 # initialize.c:193:18
	addq	$40, %rbp
	cmpl	%ecx, %ebx
	.loc	9 193 5 discriminator 1 # initialize.c:193:5
	jl	.LBB4_55
.Ltmp429:
# BB#56:                                # %for.inc399.loopexit
                                        #   in Loop: Header=BB4_53 Depth=1
	#DEBUG_VALUE: initialize:i <- %EBX
	.loc	9 191 20 is_stmt 1 discriminator 1 # initialize.c:191:20
	movl	grid_points+4(%rip), %eax
.Ltmp430:
.LBB4_57:                               # %for.inc399
                                        #   in Loop: Header=BB4_53 Depth=1
	.loc	9 191 39 is_stmt 0 discriminator 2 # initialize.c:191:39
	incl	%r15d
.Ltmp431:
	#DEBUG_VALUE: initialize:j <- %R15D
	.loc	9 191 3 discriminator 1 # initialize.c:191:3
	addq	$2600, %r14             # imm = 0xA28
	.loc	9 191 17 discriminator 1 # initialize.c:191:17
	cmpl	%eax, %r15d
	jl	.LBB4_53
.Ltmp432:
.LBB4_58:                               # %for.end401
	.loc	9 201 1 is_stmt 1       # initialize.c:201:1
	addq	$472, %rsp              # imm = 0x1D8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp433:
.Lfunc_end4:
	.size	initialize, .Lfunc_end4-initialize
	.cfi_endproc

	.globl	adi
	.p2align	4, 0x90
	.type	adi,@function
adi:                                    # @adi
.Lfunc_begin5:
	.file	10 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/adi.c"
	.loc	10 37 0                 # adi.c:37:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	10 38 3 prologue_end    # adi.c:38:3
	pushq	%rax
.Ltmp434:
	.cfi_def_cfa_offset 16
	xorl	%eax, %eax
	callq	compute_rhs
	.loc	10 40 3                 # adi.c:40:3
	xorl	%eax, %eax
	callq	txinvr
	.loc	10 42 3                 # adi.c:42:3
	xorl	%eax, %eax
	callq	x_solve
	.loc	10 44 3                 # adi.c:44:3
	xorl	%eax, %eax
	callq	y_solve
	.loc	10 46 3                 # adi.c:46:3
	xorl	%eax, %eax
	callq	z_solve
	.loc	10 48 3                 # adi.c:48:3
	xorl	%eax, %eax
	popq	%rcx
	jmp	add                     # TAILCALL
.Ltmp435:
.Lfunc_end5:
	.size	adi, .Lfunc_end5-adi
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI6_0:
	.quad	4607182418800017408     # double 1
.LCPI6_1:
	.quad	4602678819172646912     # double 0.5
.LCPI6_2:
	.quad	-4611686018427387904    # double -2
.LCPI6_5:
	.quad	4617315517961601024     # double 5
.LCPI6_6:
	.quad	4616189618054758400     # double 4
.LCPI6_7:
	.quad	4618441417868443648     # double 6
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI6_3:
	.quad	4617315517961601024     # double 5
	.quad	4617315517961601024     # double 5
.LCPI6_4:
	.quad	4616189618054758400     # double 4
	.quad	4616189618054758400     # double 4
.LCPI6_8:
	.quad	4618441417868443648     # double 6
	.quad	4618441417868443648     # double 6
	.text
	.globl	compute_rhs
	.p2align	4, 0x90
	.type	compute_rhs,@function
compute_rhs:                            # @compute_rhs
.Lfunc_begin6:
	.file	11 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/rhs.c"
	.loc	11 38 0                 # rhs.c:38:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	11 43 7 prologue_end    # rhs.c:43:7
	pushq	%rbp
.Ltmp436:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp437:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp438:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp439:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp440:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp441:
	.cfi_def_cfa_offset 56
	subq	$488, %rsp              # imm = 0x1E8
.Ltmp442:
	.cfi_def_cfa_offset 544
.Ltmp443:
	.cfi_offset %rbx, -56
.Ltmp444:
	.cfi_offset %r12, -48
.Ltmp445:
	.cfi_offset %r13, -40
.Ltmp446:
	.cfi_offset %r14, -32
.Ltmp447:
	.cfi_offset %r15, -24
.Ltmp448:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB6_2
# BB#1:                                 # %if.then
	.loc	11 43 16 is_stmt 0 discriminator 1 # rhs.c:43:16
	movl	$5, %edi
	callq	timer_start
.Ltmp449:
.LBB6_2:                                # %for.cond.preheader
	.loc	11 48 20 is_stmt 1 discriminator 1 # rhs.c:48:20
	movl	grid_points+8(%rip), %edx
	.loc	11 48 3 is_stmt 0 discriminator 1 # rhs.c:48:3
	testl	%edx, %edx
	jle	.LBB6_19
# BB#3:                                 # %for.cond1.preheader.preheader
.Ltmp450:
	.loc	11 49 22 is_stmt 1 discriminator 1 # rhs.c:49:22
	movl	grid_points+4(%rip), %eax
	xorl	%r14d, %r14d
.Ltmp451:
	.loc	11 51 22                # rhs.c:51:22
	movsd	.LCPI6_0(%rip), %xmm5   # xmm5 = mem[0],zero
	movsd	.LCPI6_1(%rip), %xmm6   # xmm6 = mem[0],zero
	xorl	%r15d, %r15d
.Ltmp452:
	.p2align	4, 0x90
.LBB6_4:                                # %for.cond1.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_6 Depth 2
                                        #       Child Loop BB6_7 Depth 3
	.loc	11 49 5 discriminator 1 # rhs.c:49:5
	testl	%eax, %eax
	jle	.LBB6_13
# BB#5:                                 # %for.cond5.preheader.lr.ph
                                        #   in Loop: Header=BB6_4 Depth=1
.Ltmp453:
	.loc	11 50 24 discriminator 1 # rhs.c:50:24
	movl	grid_points(%rip), %ecx
	movq	%r14, %r12
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB6_6:                                # %for.cond5.preheader
                                        #   Parent Loop BB6_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_7 Depth 3
	.loc	11 50 7 is_stmt 0 discriminator 1 # rhs.c:50:7
	testl	%ecx, %ecx
	movq	%r12, %rbx
	movl	$0, %ebp
	jle	.LBB6_11
	.p2align	4, 0x90
.LBB6_7:                                # %for.body8
                                        #   Parent Loop BB6_4 Depth=1
                                        #     Parent Loop BB6_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp454:
	.loc	11 51 22 is_stmt 1      # rhs.c:51:22
	movapd	%xmm5, %xmm1
	divsd	u(%rbx,%rbx,4), %xmm1
.Ltmp455:
	#DEBUG_VALUE: compute_rhs:rho_inv <- %XMM1
	.loc	11 52 24                # rhs.c:52:24
	movsd	%xmm1, rho_i(%rbx)
	.loc	11 53 23                # rhs.c:53:23
	movsd	u+8(%rbx,%rbx,4), %xmm0 # xmm0 = mem[0],zero
	.loc	11 53 37 is_stmt 0      # rhs.c:53:37
	movapd	%xmm1, %xmm2
	mulsd	%xmm0, %xmm2
	.loc	11 53 21                # rhs.c:53:21
	movsd	%xmm2, us(%rbx)
	.loc	11 54 23 is_stmt 1      # rhs.c:54:23
	movsd	u+16(%rbx,%rbx,4), %xmm2 # xmm2 = mem[0],zero
	.loc	11 54 37 is_stmt 0      # rhs.c:54:37
	movapd	%xmm1, %xmm3
	mulsd	%xmm2, %xmm3
	.loc	11 54 21                # rhs.c:54:21
	movsd	%xmm3, vs(%rbx)
	.loc	11 55 23 is_stmt 1      # rhs.c:55:23
	movsd	u+24(%rbx,%rbx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	11 55 37 is_stmt 0      # rhs.c:55:37
	movapd	%xmm1, %xmm4
	mulsd	%xmm3, %xmm4
	.loc	11 55 21                # rhs.c:55:21
	movsd	%xmm4, ws(%rbx)
	.loc	11 57 26 is_stmt 1      # rhs.c:57:26
	mulsd	%xmm0, %xmm0
	.loc	11 58 26                # rhs.c:58:26
	mulsd	%xmm2, %xmm2
	.loc	11 57 41                # rhs.c:57:41
	addsd	%xmm0, %xmm2
	.loc	11 59 26                # rhs.c:59:26
	mulsd	%xmm3, %xmm3
	.loc	11 58 41                # rhs.c:58:41
	addsd	%xmm2, %xmm3
	.loc	11 56 30                # rhs.c:56:30
	mulsd	%xmm6, %xmm3
	.loc	11 59 43                # rhs.c:59:43
	mulsd	%xmm1, %xmm3
	.loc	11 56 25                # rhs.c:56:25
	movsd	%xmm3, square(%rbx)
	.loc	11 60 39                # rhs.c:60:39
	movapd	%xmm1, %xmm0
	mulsd	%xmm3, %xmm0
	.loc	11 60 21 is_stmt 0      # rhs.c:60:21
	movsd	%xmm0, qs(%rbx)
	.loc	11 64 19 is_stmt 1      # rhs.c:64:19
	mulsd	c1c2(%rip), %xmm1
.Ltmp456:
	.loc	11 64 30 is_stmt 0      # rhs.c:64:30
	movsd	u+32(%rbx,%rbx,4), %xmm0 # xmm0 = mem[0],zero
	.loc	11 64 44                # rhs.c:64:44
	subsd	%xmm3, %xmm0
	.loc	11 64 27                # rhs.c:64:27
	mulsd	%xmm1, %xmm0
.Ltmp457:
	#DEBUG_VALUE: compute_rhs:aux <- %XMM0
	.loc	11 65 26 is_stmt 1      # rhs.c:65:26
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	11 65 24 is_stmt 0      # rhs.c:65:24
	ucomisd	%xmm1, %xmm1
	jnp	.LBB6_9
.Ltmp458:
# BB#8:                                 # %call.sqrt
                                        #   in Loop: Header=BB6_7 Depth=3
	#DEBUG_VALUE: compute_rhs:aux <- %XMM0
	callq	sqrt
.Ltmp459:
	movsd	.LCPI6_1(%rip), %xmm6   # xmm6 = mem[0],zero
	.loc	11 51 22 is_stmt 1      # rhs.c:51:22
	movsd	.LCPI6_0(%rip), %xmm5   # xmm5 = mem[0],zero
	.loc	11 65 24                # rhs.c:65:24
	movapd	%xmm0, %xmm1
.LBB6_9:                                # %for.body8.split
                                        #   in Loop: Header=BB6_7 Depth=3
	movsd	%xmm1, speed(%rbx)
.Ltmp460:
	.loc	11 50 7 discriminator 1 # rhs.c:50:7
	incq	%rbp
	.loc	11 50 21 is_stmt 0 discriminator 1 # rhs.c:50:21
	movslq	grid_points(%rip), %rcx
	addq	$8, %rbx
	cmpq	%rcx, %rbp
	jl	.LBB6_7
.Ltmp461:
# BB#10:                                # %for.inc150.loopexit
                                        #   in Loop: Header=BB6_6 Depth=2
	.loc	11 49 22 is_stmt 1 discriminator 1 # rhs.c:49:22
	movl	grid_points+4(%rip), %eax
.LBB6_11:                               # %for.inc150
                                        #   in Loop: Header=BB6_6 Depth=2
	.loc	11 49 5 is_stmt 0 discriminator 1 # rhs.c:49:5
	incq	%r13
	.loc	11 49 19 discriminator 1 # rhs.c:49:19
	movslq	%eax, %rdx
	.loc	11 49 5 discriminator 1 # rhs.c:49:5
	addq	$520, %r12              # imm = 0x208
	.loc	11 49 19 discriminator 1 # rhs.c:49:19
	cmpq	%rdx, %r13
	jl	.LBB6_6
.Ltmp462:
# BB#12:                                # %for.inc153.loopexit
                                        #   in Loop: Header=BB6_4 Depth=1
	.loc	11 48 20 is_stmt 1 discriminator 1 # rhs.c:48:20
	movl	grid_points+8(%rip), %edx
.LBB6_13:                               # %for.inc153
                                        #   in Loop: Header=BB6_4 Depth=1
	.loc	11 48 3 is_stmt 0 discriminator 1 # rhs.c:48:3
	incq	%r15
	.loc	11 48 17 discriminator 1 # rhs.c:48:17
	movslq	%edx, %rcx
	.loc	11 48 3 discriminator 1 # rhs.c:48:3
	addq	$33800, %r14            # imm = 0x8408
	.loc	11 48 17 discriminator 1 # rhs.c:48:17
	cmpq	%rcx, %r15
	jl	.LBB6_4
.Ltmp463:
# BB#14:                                # %for.cond156.preheader
	.loc	11 75 3 is_stmt 1 discriminator 1 # rhs.c:75:3
	testl	%edx, %edx
	jle	.LBB6_19
# BB#15:                                # %for.cond160.preheader.lr.ph
.Ltmp464:
	.loc	11 76 22 discriminator 1 # rhs.c:76:22
	movl	grid_points+4(%rip), %r12d
	.loc	11 76 5 is_stmt 0 discriminator 1 # rhs.c:76:5
	testl	%r12d, %r12d
	jle	.LBB6_19
# BB#16:                                # %for.cond164.preheader.lr.ph.us.preheader
.Ltmp465:
	.loc	11 77 24 is_stmt 1 discriminator 1 # rhs.c:77:24
	movl	grid_points(%rip), %r15d
	.loc	11 77 7 is_stmt 0 discriminator 1 # rhs.c:77:7
	leal	-1(%r15), %r13d
	movl	%r15d, %edi
	andl	$3, %edi
	movl	$forcing, %eax
	movl	$rhs, %r10d
	xorl	%r11d, %r11d
	xorl	%r14d, %r14d
	.p2align	4, 0x90
.LBB6_17:                               # %for.cond164.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_34 Depth 2
                                        #       Child Loop BB6_35 Depth 3
                                        #       Child Loop BB6_38 Depth 3
	movq	%r10, 16(%rsp)          # 8-byte Spill
	movq	%rax, (%rsp)            # 8-byte Spill
	movl	%edx, 48(%rsp)          # 4-byte Spill
	testl	%r15d, %r15d
	movq	%r11, %r9
	movq	%rax, %rbp
	movl	$0, %edx
	jle	.LBB6_18
	.p2align	4, 0x90
.LBB6_34:                               # %for.cond168.preheader.lr.ph.us.us
                                        #   Parent Loop BB6_17 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_35 Depth 3
                                        #       Child Loop BB6_38 Depth 3
	testl	%edi, %edi
	movq	%r10, %rcx
	movq	%rbp, %rsi
	movl	$0, %ebx
	je	.LBB6_36
	.p2align	4, 0x90
.LBB6_35:                               # %for.cond168.preheader.us.us.prol
                                        #   Parent Loop BB6_17 Depth=1
                                        #     Parent Loop BB6_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp466:
	.loc	11 79 27 is_stmt 1      # rhs.c:79:27
	movq	32(%rsi), %rax
	movq	%rax, 32(%rcx)
	movupd	(%rsi), %xmm0
	movupd	16(%rsi), %xmm1
	movupd	%xmm1, 16(%rcx)
	movupd	%xmm0, (%rcx)
.Ltmp467:
	.loc	11 77 7 discriminator 1 # rhs.c:77:7
	incq	%rbx
	addq	$40, %rsi
	addq	$40, %rcx
	cmpl	%ebx, %edi
	jne	.LBB6_35
.LBB6_36:                               # %for.cond168.preheader.lr.ph.us.us.split
                                        #   in Loop: Header=BB6_34 Depth=2
	cmpl	$3, %r13d
	jb	.LBB6_39
# BB#37:                                # %for.cond168.preheader.lr.ph.us.us.split.split
                                        #   in Loop: Header=BB6_34 Depth=2
	movl	%r15d, %ecx
	subl	%ebx, %ecx
	shlq	$3, %rbx
	leaq	forcing(%rbx,%rbx,4), %rsi
	leaq	rhs(%rbx,%rbx,4), %r8
	movq	%r9, %rbx
	.p2align	4, 0x90
.LBB6_38:                               # %for.cond168.preheader.us.us
                                        #   Parent Loop BB6_17 Depth=1
                                        #     Parent Loop BB6_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp468:
	.loc	11 79 27                # rhs.c:79:27
	movq	32(%rsi,%rbx), %rax
	movq	%rax, 32(%r8,%rbx)
	movups	(%rsi,%rbx), %xmm0
	movups	16(%rsi,%rbx), %xmm1
	movups	%xmm1, 16(%r8,%rbx)
	movups	%xmm0, (%r8,%rbx)
	movq	72(%rsi,%rbx), %rax
	movq	%rax, 72(%r8,%rbx)
	movups	40(%rsi,%rbx), %xmm0
	movups	56(%rsi,%rbx), %xmm1
	movups	%xmm1, 56(%r8,%rbx)
	movups	%xmm0, 40(%r8,%rbx)
	movq	112(%rsi,%rbx), %rax
	movq	%rax, 112(%r8,%rbx)
	movups	80(%rsi,%rbx), %xmm0
	movups	96(%rsi,%rbx), %xmm1
	movups	%xmm1, 96(%r8,%rbx)
	movups	%xmm0, 80(%r8,%rbx)
	movq	152(%rsi,%rbx), %rax
	movq	%rax, 152(%r8,%rbx)
	movupd	120(%rsi,%rbx), %xmm0
	movupd	136(%rsi,%rbx), %xmm1
	movupd	%xmm1, 136(%r8,%rbx)
	movupd	%xmm0, 120(%r8,%rbx)
.Ltmp469:
	.loc	11 77 7 discriminator 1 # rhs.c:77:7
	addq	$160, %rbx
	addl	$-4, %ecx
	jne	.LBB6_38
.Ltmp470:
.LBB6_39:                               # %for.cond164.for.inc193_crit_edge.us.us
                                        #   in Loop: Header=BB6_34 Depth=2
	.loc	11 76 5 discriminator 1 # rhs.c:76:5
	incq	%rdx
	addq	$2600, %rbp             # imm = 0xA28
	addq	$2600, %r10             # imm = 0xA28
	addq	$2600, %r9              # imm = 0xA28
	cmpl	%r12d, %edx
	jne	.LBB6_34
.Ltmp471:
.LBB6_18:                               # %for.cond160.for.inc196_crit_edge.us
                                        #   in Loop: Header=BB6_17 Depth=1
	.loc	11 75 39 discriminator 2 # rhs.c:75:39
	incl	%r14d
.Ltmp472:
	#DEBUG_VALUE: compute_rhs:k <- %R14D
	movq	(%rsp), %rax            # 8-byte Reload
	.loc	11 75 3 is_stmt 0 discriminator 1 # rhs.c:75:3
	addq	$169000, %rax           # imm = 0x29428
	movq	16(%rsp), %r10          # 8-byte Reload
	addq	$169000, %r10           # imm = 0x29428
	addq	$169000, %r11           # imm = 0x29428
	movl	48(%rsp), %edx          # 4-byte Reload
	.loc	11 75 17 discriminator 1 # rhs.c:75:17
	cmpl	%edx, %r14d
	jl	.LBB6_17
.Ltmp473:
.LBB6_19:                               # %for.end198
	.loc	11 88 7 is_stmt 1       # rhs.c:88:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_21
# BB#20:                                # %if.then200
	.loc	11 88 16 is_stmt 0 discriminator 1 # rhs.c:88:16
	movl	$2, %edi
	callq	timer_start
.Ltmp474:
.LBB6_21:                               # %for.cond202.preheader
	.loc	11 89 3 is_stmt 1 discriminator 1 # rhs.c:89:3
	movslq	nz2(%rip), %rax
	.loc	11 89 20 is_stmt 0 discriminator 1 # rhs.c:89:20
	movq	%rax, 144(%rsp)         # 8-byte Spill
	testq	%rax, %rax
	jle	.LBB6_45
# BB#22:                                # %for.cond205.preheader.lr.ph
.Ltmp475:
	.loc	11 162 35 is_stmt 1     # rhs.c:162:35
	movslq	nx2(%rip), %rcx
.Ltmp476:
	.loc	11 159 14               # rhs.c:159:14
	leal	-1(%rcx), %eax
.Ltmp477:
	#DEBUG_VALUE: compute_rhs:i <- %EAX
	.loc	11 161 27               # rhs.c:161:27
	cltq
.Ltmp478:
	.loc	11 161 45 is_stmt 0     # rhs.c:161:45
	movsd	dssp(%rip), %xmm1       # xmm1 = mem[0],zero
	.loc	11 162 44 is_stmt 1     # rhs.c:162:44
	movapd	%xmm1, 64(%rsp)         # 16-byte Spill
	leal	-2(%rcx), %edx
.Ltmp479:
	.loc	11 98 11                # rhs.c:98:11
	movl	%edx, 128(%rsp)         # 4-byte Spill
	movsd	tx2(%rip), %xmm4        # xmm4 = mem[0],zero
	.loc	11 100 45               # rhs.c:100:45
	movapd	%xmm4, 32(%rsp)         # 16-byte Spill
	movsd	dx2tx1(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 102 11               # rhs.c:102:11
	movsd	%xmm0, 48(%rsp)         # 8-byte Spill
	movsd	xxcon2(%rip), %xmm2     # xmm2 = mem[0],zero
	movsd	con43(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	11 102 17 is_stmt 0     # rhs.c:102:17
	mulsd	%xmm2, %xmm0
	.loc	11 105 57 is_stmt 1     # rhs.c:105:57
	movsd	c2(%rip), %xmm3         # xmm3 = mem[0],zero
	.loc	11 117 45               # rhs.c:117:45
	movsd	%xmm3, 224(%rsp)        # 8-byte Spill
	movsd	dx5tx1(%rip), %xmm3     # xmm3 = mem[0],zero
	.loc	11 119 11               # rhs.c:119:11
	movsd	%xmm3, 320(%rsp)        # 8-byte Spill
	movsd	xxcon3(%rip), %xmm3     # xmm3 = mem[0],zero
	.loc	11 120 11               # rhs.c:120:11
	movsd	%xmm3, 304(%rsp)        # 8-byte Spill
	movsd	xxcon4(%rip), %xmm3     # xmm3 = mem[0],zero
	.loc	11 121 11               # rhs.c:121:11
	movsd	%xmm3, 288(%rsp)        # 8-byte Spill
	movsd	xxcon5(%rip), %xmm3     # xmm3 = mem[0],zero
	.loc	11 124 20               # rhs.c:124:20
	movsd	%xmm3, 272(%rsp)        # 8-byte Spill
	movsd	c1(%rip), %xmm3         # xmm3 = mem[0],zero
.Ltmp480:
	.loc	11 89 3 discriminator 1 # rhs.c:89:3
	movsd	%xmm3, 256(%rsp)        # 8-byte Spill
	movslq	ny2(%rip), %r14
.Ltmp481:
	.loc	11 96 52                # rhs.c:96:52
	movsd	dx1tx1(%rip), %xmm3     # xmm3 = mem[0],zero
	unpcklpd	%xmm0, %xmm3    # xmm3 = xmm3[0],xmm0[0]
	movapd	%xmm3, 16(%rsp)         # 16-byte Spill
	.loc	11 98 15                # rhs.c:98:15
	movapd	%xmm4, %xmm0
	movapd	%xmm4, %xmm3
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 208(%rsp)        # 16-byte Spill
	.loc	11 107 52               # rhs.c:107:52
	movsd	dx3tx1(%rip), %xmm0     # xmm0 = mem[0],zero
	movhpd	dx4tx1(%rip), %xmm0     # xmm0 = xmm0[0],mem[0]
	movapd	%xmm0, 80(%rsp)         # 16-byte Spill
	.loc	11 109 18               # rhs.c:109:18
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 240(%rsp)        # 16-byte Spill
.Ltmp482:
	.loc	11 135 49               # rhs.c:135:49
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp483:
	.loc	11 89 3 discriminator 1 # rhs.c:89:3
	movaps	%xmm0, 192(%rsp)        # 16-byte Spill
	leal	-4(%rcx), %edx
	movl	%edx, 160(%rsp)         # 4-byte Spill
	shlq	$3, %rax
	leaq	(%rax,%rax,4), %rax
	movq	%rax, 112(%rsp)         # 8-byte Spill
	leaq	(,%rcx,8), %rax
	leaq	u+171512(%rax,%rax,4), %rdx
	movq	%rdx, 176(%rsp)         # 8-byte Spill
	leaq	u+171552(%rax,%rax,4), %r12
	leaq	171600(%rax,%rax,4), %rax
	movq	%rax, 96(%rsp)          # 8-byte Spill
	movl	$1, %r11d
	movl	$171640, %r13d          # imm = 0x29E78
	xorl	%r15d, %r15d
	xorl	%r10d, %r10d
	.p2align	4, 0x90
.LBB6_23:                               # %for.cond205.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_24 Depth 2
                                        #       Child Loop BB6_26 Depth 3
                                        #     Child Loop BB6_29 Depth 2
                                        #     Child Loop BB6_40 Depth 2
                                        #       Child Loop BB6_41 Depth 3
                                        #     Child Loop BB6_33 Depth 2
	testl	%r14d, %r14d
	movq	%r10, %r8
	movl	$1, %eax
	jle	.LBB6_44
	.p2align	4, 0x90
.LBB6_24:                               # %for.cond208.preheader
                                        #   Parent Loop BB6_23 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_26 Depth 3
	testl	%ecx, %ecx
	movapd	240(%rsp), %xmm12       # 16-byte Reload
	movsd	224(%rsp), %xmm14       # 8-byte Reload
                                        # xmm14 = mem[0],zero
	movapd	16(%rsp), %xmm6         # 16-byte Reload
	movapd	208(%rsp), %xmm7        # 16-byte Reload
	movapd	80(%rsp), %xmm5         # 16-byte Reload
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm2
	jle	.LBB6_27
# BB#25:                                # %for.body210.lr.ph
                                        #   in Loop: Header=BB6_24 Depth=2
.Ltmp484:
	.loc	11 105 18               # rhs.c:105:18
	imulq	$2600, %rax, %rdx       # imm = 0xA28
	imulq	$169000, %r11, %rsi     # imm = 0x29428
	movsd	u+32(%rsi,%rdx), %xmm10 # xmm10 = mem[0],zero
	.loc	11 113 34               # rhs.c:113:34
	movsd	u+64(%rsi,%rdx), %xmm11 # xmm11 = mem[0],zero
	movq	%r8, %rbp
	xorl	%r9d, %r9d
	.p2align	4, 0x90
.LBB6_26:                               # %for.body210
                                        #   Parent Loop BB6_23 Depth=1
                                        #     Parent Loop BB6_24 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 92 16                # rhs.c:92:16
	movsd	us+34328(%rbp), %xmm4   # xmm4 = mem[0],zero
.Ltmp485:
	#DEBUG_VALUE: compute_rhs:uijk <- %XMM4
	.loc	11 93 16                # rhs.c:93:16
	movapd	%xmm4, (%rsp)           # 16-byte Spill
	movsd	us+34336(%rbp), %xmm15  # xmm15 = mem[0],zero
.Ltmp486:
	#DEBUG_VALUE: compute_rhs:up1 <- %XMM15
	.loc	11 94 16                # rhs.c:94:16
	movsd	us+34320(%rbp), %xmm8   # xmm8 = mem[0],zero
.Ltmp487:
	#DEBUG_VALUE: compute_rhs:um1 <- %XMM8
	.loc	11 98 18                # rhs.c:98:18
	movsd	u+171688(%rbp,%rbp,4), %xmm1 # xmm1 = mem[0],zero
	.loc	11 98 36 is_stmt 0      # rhs.c:98:36
	movsd	u+171608(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171648(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	.loc	11 101 33 is_stmt 1     # rhs.c:101:33
	mulsd	%xmm2, %xmm3
	.loc	11 101 28 is_stmt 0     # rhs.c:101:28
	addsd	%xmm1, %xmm3
	.loc	11 101 48               # rhs.c:101:48
	addsd	%xmm0, %xmm3
	movsd	48(%rsp), %xmm2         # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	11 100 52 is_stmt 1     # rhs.c:100:52
	mulsd	%xmm2, %xmm3
	.loc	11 100 43 is_stmt 0     # rhs.c:100:43
	addsd	rhs+171648(%rbp,%rbp,4), %xmm3
	.loc	11 97 33 is_stmt 1      # rhs.c:97:33
	movsd	u+171640(%rbp,%rbp,4), %xmm13 # xmm13 = mem[0],zero
	unpcklpd	%xmm4, %xmm13   # xmm13 = xmm13[0],xmm4[0]
.Ltmp488:
	#DEBUG_VALUE: compute_rhs:uijk <- [%RSP+0]
	addpd	%xmm13, %xmm13
	.loc	11 97 28 is_stmt 0      # rhs.c:97:28
	movsd	u+171680(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	unpcklpd	%xmm15, %xmm2   # xmm2 = xmm2[0],xmm15[0]
	subpd	%xmm13, %xmm2
	.loc	11 97 48                # rhs.c:97:48
	movsd	u+171600(%rbp,%rbp,4), %xmm4 # xmm4 = mem[0],zero
	unpcklpd	%xmm8, %xmm4    # xmm4 = xmm4[0],xmm8[0]
	addpd	%xmm2, %xmm4
	.loc	11 96 52 is_stmt 1      # rhs.c:96:52
	mulpd	%xmm6, %xmm4
	.loc	11 96 43 is_stmt 0      # rhs.c:96:43
	movsd	rhs+171640(%rbp,%rbp,4), %xmm2 # xmm2 = mem[0],zero
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	addpd	%xmm4, %xmm2
	.loc	11 103 33 is_stmt 1     # rhs.c:103:33
	movapd	%xmm15, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	11 103 55 is_stmt 0     # rhs.c:103:55
	movapd	%xmm8, %xmm4
	mulsd	%xmm0, %xmm4
	.loc	11 103 38               # rhs.c:103:38
	subsd	%xmm4, %xmm3
	.loc	11 104 18 is_stmt 1     # rhs.c:104:18
	movsd	u+171712(%rbp,%rbp,4), %xmm9 # xmm9 = mem[0],zero
	.loc	11 104 34 is_stmt 0     # rhs.c:104:34
	movapd	%xmm9, %xmm4
	subsd	square+34336(%rbp), %xmm4
	.loc	11 104 54               # rhs.c:104:54
	subsd	%xmm10, %xmm4
	.loc	11 105 34 is_stmt 1     # rhs.c:105:34
	addsd	square+34320(%rbp), %xmm4
	.loc	11 105 55 is_stmt 0     # rhs.c:105:55
	mulsd	%xmm14, %xmm4
	.loc	11 98 34 is_stmt 1      # rhs.c:98:34
	unpcklpd	%xmm3, %xmm1    # xmm1 = xmm1[0],xmm3[0]
	unpcklpd	%xmm4, %xmm0    # xmm0 = xmm0[0],xmm4[0]
	movapd	%xmm1, %xmm3
	subpd	%xmm0, %xmm3
	addpd	%xmm1, %xmm0
	movsd	%xmm3, %xmm0            # xmm0 = xmm3[0],xmm0[1]
	.loc	11 98 15 is_stmt 0      # rhs.c:98:15
	mulpd	%xmm7, %xmm0
	.loc	11 97 67 is_stmt 1      # rhs.c:97:67
	subpd	%xmm0, %xmm2
	.loc	11 96 25                # rhs.c:96:25
	movupd	%xmm2, rhs+171640(%rbp,%rbp,4)
	.loc	11 107 27               # rhs.c:107:27
	movupd	rhs+171656(%rbp,%rbp,4), %xmm1
	.loc	11 108 33               # rhs.c:108:33
	movsd	u+171656(%rbp,%rbp,4), %xmm0 # xmm0 = mem[0],zero
	unpcklpd	%xmm11, %xmm0   # xmm0 = xmm0[0],xmm11[0]
	.loc	11 108 12 is_stmt 0     # rhs.c:108:12
	movupd	u+171696(%rbp,%rbp,4), %xmm11
	.loc	11 108 33               # rhs.c:108:33
	addpd	%xmm0, %xmm0
	.loc	11 108 28               # rhs.c:108:28
	movapd	%xmm11, %xmm2
	subpd	%xmm0, %xmm2
	.loc	11 108 50               # rhs.c:108:50
	movupd	u+171616(%rbp,%rbp,4), %xmm0
	.loc	11 108 48               # rhs.c:108:48
	addpd	%xmm0, %xmm2
	.loc	11 107 52 is_stmt 1     # rhs.c:107:52
	mulpd	%xmm5, %xmm2
	.loc	11 107 43 is_stmt 0     # rhs.c:107:43
	addpd	%xmm1, %xmm2
	.loc	11 109 40 is_stmt 1     # rhs.c:109:40
	movsd	vs+34328(%rbp), %xmm1   # xmm1 = mem[0],zero
	movhpd	ws+34328(%rbp), %xmm1   # xmm1 = xmm1[0],mem[0]
	addpd	%xmm1, %xmm1
	.loc	11 109 35 is_stmt 0     # rhs.c:109:35
	movsd	vs+34336(%rbp), %xmm3   # xmm3 = mem[0],zero
	movhpd	ws+34336(%rbp), %xmm3   # xmm3 = xmm3[0],mem[0]
	subpd	%xmm1, %xmm3
	.loc	11 109 53               # rhs.c:109:53
	movsd	vs+34320(%rbp), %xmm1   # xmm1 = mem[0],zero
	movhpd	ws+34320(%rbp), %xmm1   # xmm1 = xmm1[0],mem[0]
	addpd	%xmm3, %xmm1
	movapd	%xmm12, %xmm5
	.loc	11 109 18               # rhs.c:109:18
	mulpd	%xmm5, %xmm1
	.loc	11 108 67 is_stmt 1     # rhs.c:108:67
	addpd	%xmm2, %xmm1
	.loc	11 110 33               # rhs.c:110:33
	movapd	%xmm15, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm11, %xmm2
	.loc	11 110 55 is_stmt 0     # rhs.c:110:55
	movapd	%xmm8, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm0, %xmm3
	.loc	11 110 38               # rhs.c:110:38
	subpd	%xmm3, %xmm2
	.loc	11 110 15               # rhs.c:110:15
	mulpd	%xmm7, %xmm2
	.loc	11 109 70 is_stmt 1     # rhs.c:109:70
	subpd	%xmm2, %xmm1
	.loc	11 107 25               # rhs.c:107:25
	movupd	%xmm1, rhs+171656(%rbp,%rbp,4)
	.loc	11 118 34               # rhs.c:118:34
	movsd	u+171672(%rbp,%rbp,4), %xmm10 # xmm10 = mem[0],zero
	.loc	11 118 33 is_stmt 0     # rhs.c:118:33
	movapd	%xmm10, %xmm0
	addsd	%xmm0, %xmm0
	.loc	11 118 28               # rhs.c:118:28
	movapd	%xmm9, %xmm3
	subsd	%xmm0, %xmm3
	.loc	11 118 50               # rhs.c:118:50
	movsd	u+171632(%rbp,%rbp,4), %xmm1 # xmm1 = mem[0],zero
	.loc	11 118 48               # rhs.c:118:48
	addsd	%xmm1, %xmm3
	.loc	11 117 52 is_stmt 1     # rhs.c:117:52
	mulsd	320(%rsp), %xmm3        # 8-byte Folded Reload
	.loc	11 117 43 is_stmt 0     # rhs.c:117:43
	addsd	rhs+171672(%rbp,%rbp,4), %xmm3
	.loc	11 119 21 is_stmt 1     # rhs.c:119:21
	movsd	qs+34336(%rbp), %xmm2   # xmm2 = mem[0],zero
	.loc	11 119 41 is_stmt 0     # rhs.c:119:41
	movsd	qs+34328(%rbp), %xmm4   # xmm4 = mem[0],zero
	.loc	11 119 40               # rhs.c:119:40
	addsd	%xmm4, %xmm4
	.loc	11 119 35               # rhs.c:119:35
	subsd	%xmm4, %xmm2
	.loc	11 119 53               # rhs.c:119:53
	addsd	qs+34320(%rbp), %xmm2
	.loc	11 119 18               # rhs.c:119:18
	mulsd	304(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	11 118 67 is_stmt 1     # rhs.c:118:67
	addsd	%xmm3, %xmm2
	movsd	rho_i+34336(%rbp), %xmm3 # xmm3 = mem[0],zero
	.loc	11 121 36               # rhs.c:121:36
	mulsd	%xmm9, %xmm3
	movsd	256(%rsp), %xmm12       # 8-byte Reload
                                        # xmm12 = mem[0],zero
	.loc	11 124 22               # rhs.c:124:22
	mulsd	%xmm12, %xmm9
	movsd	square+34336(%rbp), %xmm4 # xmm4 = mem[0],zero
	.loc	11 124 43 is_stmt 0     # rhs.c:124:43
	mulsd	%xmm14, %xmm4
	.loc	11 124 39               # rhs.c:124:39
	subsd	%xmm4, %xmm9
	.loc	11 124 62               # rhs.c:124:62
	mulsd	%xmm15, %xmm9
	.loc	11 120 24 is_stmt 1     # rhs.c:120:24
	mulsd	%xmm15, %xmm15
.Ltmp489:
	.loc	11 120 45 is_stmt 0     # rhs.c:120:45
	shufpd	$1, %xmm13, %xmm13      # xmm13 = xmm13[1,0]
	mulsd	(%rsp), %xmm13          # 16-byte Folded Reload
	.loc	11 120 29               # rhs.c:120:29
	subsd	%xmm13, %xmm15
	movapd	32(%rsp), %xmm6         # 16-byte Reload
	movsd	rho_i+34320(%rbp), %xmm4 # xmm4 = mem[0],zero
	.loc	11 123 36 is_stmt 1     # rhs.c:123:36
	mulsd	%xmm1, %xmm4
	.loc	11 125 22               # rhs.c:125:22
	mulsd	%xmm12, %xmm1
	movapd	%xmm5, %xmm13
	movsd	square+34320(%rbp), %xmm5 # xmm5 = mem[0],zero
	.loc	11 125 43 is_stmt 0     # rhs.c:125:43
	mulsd	%xmm14, %xmm5
	.loc	11 125 39               # rhs.c:125:39
	subsd	%xmm5, %xmm1
	movapd	%xmm13, %xmm12
	movsd	288(%rsp), %xmm5        # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	11 125 62               # rhs.c:125:62
	mulsd	%xmm8, %xmm1
	.loc	11 120 56 is_stmt 1     # rhs.c:120:56
	mulsd	%xmm8, %xmm8
.Ltmp490:
	.loc	11 120 51 is_stmt 0     # rhs.c:120:51
	addsd	%xmm15, %xmm8
	.loc	11 120 18               # rhs.c:120:18
	mulsd	%xmm5, %xmm8
	movapd	80(%rsp), %xmm5         # 16-byte Reload
	.loc	11 119 70 is_stmt 1     # rhs.c:119:70
	addsd	%xmm2, %xmm8
	movsd	272(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	11 122 34               # rhs.c:122:34
	mulsd	rho_i+34328(%rbp), %xmm0
	.loc	11 121 54               # rhs.c:121:54
	subsd	%xmm0, %xmm3
	.loc	11 122 50               # rhs.c:122:50
	addsd	%xmm3, %xmm4
	.loc	11 121 18               # rhs.c:121:18
	mulsd	%xmm2, %xmm4
	movsd	.LCPI6_2(%rip), %xmm2   # xmm2 = mem[0],zero
	.loc	11 120 62               # rhs.c:120:62
	addsd	%xmm8, %xmm4
	.loc	11 124 67               # rhs.c:124:67
	subsd	%xmm1, %xmm9
	.loc	11 124 15 is_stmt 0     # rhs.c:124:15
	mulsd	%xmm6, %xmm9
	movapd	%xmm6, %xmm3
	.loc	11 123 55 is_stmt 1     # rhs.c:123:55
	subsd	%xmm9, %xmm4
	movapd	16(%rsp), %xmm6         # 16-byte Reload
	.loc	11 117 25               # rhs.c:117:25
	movsd	%xmm4, rhs+171672(%rbp,%rbp,4)
.Ltmp491:
	.loc	11 91 7 discriminator 1 # rhs.c:91:7
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	.loc	11 91 21 is_stmt 0 discriminator 1 # rhs.c:91:21
	incq	%r9
	addq	$8, %rbp
	cmpq	%rcx, %r9
	.loc	11 91 7 discriminator 1 # rhs.c:91:7
	jl	.LBB6_26
.Ltmp492:
.LBB6_27:                               # %for.inc742
                                        #   in Loop: Header=BB6_24 Depth=2
	.loc	11 90 5 is_stmt 1 discriminator 1 # rhs.c:90:5
	addq	$520, %r8               # imm = 0x208
	.loc	11 90 19 is_stmt 0 discriminator 1 # rhs.c:90:19
	cmpq	%r14, %rax
	.loc	11 90 5 discriminator 1 # rhs.c:90:5
	leaq	1(%rax), %rax
	movapd	192(%rsp), %xmm14       # 16-byte Reload
.Ltmp493:
	.loc	11 136 35 is_stmt 1     # rhs.c:136:35
	movapd	.LCPI6_4(%rip), %xmm10  # xmm10 = [4.000000e+00,4.000000e+00]
	jl	.LBB6_24
# BB#28:                                # %for.cond745.preheader
                                        #   in Loop: Header=BB6_23 Depth=1
	testl	%r14d, %r14d
	movq	%r13, %rax
	movl	$0, %ebp
	jle	.LBB6_44
	.p2align	4, 0x90
.LBB6_29:                               # %for.cond748.preheader
                                        #   Parent Loop BB6_23 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 135 27               # rhs.c:135:27
	movupd	rhs(%rax), %xmm1
	.loc	11 136 16               # rhs.c:136:16
	movupd	u(%rax), %xmm8
	.loc	11 136 15 is_stmt 0     # rhs.c:136:15
	movapd	%xmm8, %xmm2
	movapd	.LCPI6_3(%rip), %xmm0   # xmm0 = [5.000000e+00,5.000000e+00]
	movapd	%xmm0, %xmm5
	mulpd	%xmm5, %xmm2
	.loc	11 136 36               # rhs.c:136:36
	movupd	u+40(%rax), %xmm0
	.loc	11 136 35               # rhs.c:136:35
	movapd	%xmm0, %xmm4
	mulpd	%xmm10, %xmm4
	.loc	11 136 30               # rhs.c:136:30
	subpd	%xmm4, %xmm2
	.loc	11 136 54               # rhs.c:136:54
	movupd	u+80(%rax), %xmm12
	.loc	11 136 52               # rhs.c:136:52
	addpd	%xmm12, %xmm2
	.loc	11 135 49 is_stmt 1     # rhs.c:135:49
	mulpd	%xmm14, %xmm2
	.loc	11 135 42 is_stmt 0     # rhs.c:135:42
	subpd	%xmm2, %xmm1
	.loc	11 135 25               # rhs.c:135:25
	movupd	%xmm1, rhs(%rax)
	.loc	11 135 27               # rhs.c:135:27
	movupd	rhs+16(%rax), %xmm1
	movapd	%xmm10, %xmm11
	.loc	11 136 16 is_stmt 1     # rhs.c:136:16
	movupd	u+16(%rax), %xmm6
	.loc	11 136 15 is_stmt 0     # rhs.c:136:15
	movapd	%xmm6, %xmm4
	mulpd	%xmm5, %xmm4
	movapd	%xmm3, %xmm9
	.loc	11 136 36               # rhs.c:136:36
	movupd	u+56(%rax), %xmm5
	.loc	11 136 35               # rhs.c:136:35
	movapd	%xmm5, %xmm2
	mulpd	%xmm11, %xmm2
	.loc	11 136 30               # rhs.c:136:30
	subpd	%xmm2, %xmm4
	.loc	11 136 54               # rhs.c:136:54
	movupd	u+96(%rax), %xmm2
	.loc	11 136 52               # rhs.c:136:52
	addpd	%xmm2, %xmm4
	.loc	11 135 49 is_stmt 1     # rhs.c:135:49
	mulpd	%xmm14, %xmm4
	.loc	11 135 42 is_stmt 0     # rhs.c:135:42
	subpd	%xmm4, %xmm1
	.loc	11 135 25               # rhs.c:135:25
	movupd	%xmm1, rhs+16(%rax)
	.loc	11 136 16 is_stmt 1     # rhs.c:136:16
	movsd	u+32(%rax), %xmm1       # xmm1 = mem[0],zero
.Ltmp494:
	.loc	11 142 16               # rhs.c:142:16
	movapd	%xmm8, %xmm4
	shufpd	$1, %xmm6, %xmm8        # xmm8 = xmm8[1],xmm6[0]
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	unpcklpd	%xmm1, %xmm6    # xmm6 = xmm6[0],xmm1[0]
.Ltmp495:
	.loc	11 136 15               # rhs.c:136:15
	mulsd	.LCPI6_5(%rip), %xmm1
.Ltmp496:
	.loc	11 142 16               # rhs.c:142:16
	mulsd	.LCPI6_6(%rip), %xmm4
	.loc	11 142 38 is_stmt 0     # rhs.c:142:38
	movapd	%xmm0, %xmm3
	mulsd	.LCPI6_7(%rip), %xmm3
	.loc	11 142 16               # rhs.c:142:16
	subsd	%xmm4, %xmm3
.Ltmp497:
	.loc	11 135 27 is_stmt 1     # rhs.c:135:27
	movupd	rhs+32(%rax), %xmm4
	.loc	11 136 30               # rhs.c:136:30
	unpcklpd	%xmm3, %xmm1    # xmm1 = xmm1[0],xmm3[0]
	.loc	11 136 35 is_stmt 0     # rhs.c:136:35
	movsd	u+72(%rax), %xmm3       # xmm3 = mem[0],zero
.Ltmp498:
	.loc	11 142 38 is_stmt 1     # rhs.c:142:38
	shufpd	$1, %xmm5, %xmm0        # xmm0 = xmm0[1],xmm5[0]
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
.Ltmp499:
	.loc	11 136 35               # rhs.c:136:35
	unpcklpd	%xmm12, %xmm3   # xmm3 = xmm3[0],xmm12[0]
	mulpd	%xmm11, %xmm3
	.loc	11 136 30 is_stmt 0     # rhs.c:136:30
	subpd	%xmm3, %xmm1
	.loc	11 136 54               # rhs.c:136:54
	movupd	u+112(%rax), %xmm3
	.loc	11 136 52               # rhs.c:136:52
	addpd	%xmm3, %xmm1
	.loc	11 135 49 is_stmt 1     # rhs.c:135:49
	mulpd	%xmm14, %xmm1
	.loc	11 135 42 is_stmt 0     # rhs.c:135:42
	subpd	%xmm1, %xmm4
	.loc	11 135 25               # rhs.c:135:25
	movupd	%xmm4, rhs+32(%rax)
.Ltmp500:
	.loc	11 142 16 is_stmt 1     # rhs.c:142:16
	mulpd	%xmm11, %xmm8
	.loc	11 142 38 is_stmt 0     # rhs.c:142:38
	movapd	.LCPI6_8(%rip), %xmm1   # xmm1 = [6.000000e+00,6.000000e+00]
	movapd	%xmm1, %xmm4
	mulpd	%xmm4, %xmm0
	.loc	11 142 16               # rhs.c:142:16
	subpd	%xmm8, %xmm0
	.loc	11 143 16 is_stmt 1     # rhs.c:143:16
	shufpd	$1, %xmm2, %xmm12       # xmm12 = xmm12[1],xmm2[0]
	mulpd	%xmm11, %xmm12
	.loc	11 142 53               # rhs.c:142:53
	subpd	%xmm12, %xmm0
	.loc	11 143 35               # rhs.c:143:35
	movupd	u+128(%rax), %xmm1
	.loc	11 143 33 is_stmt 0     # rhs.c:143:33
	addpd	%xmm0, %xmm1
	.loc	11 141 27 is_stmt 1     # rhs.c:141:27
	movupd	rhs+48(%rax), %xmm0
	.loc	11 141 50 is_stmt 0     # rhs.c:141:50
	mulpd	%xmm14, %xmm1
	.loc	11 141 43               # rhs.c:141:43
	subpd	%xmm1, %xmm0
	.loc	11 141 25               # rhs.c:141:25
	movupd	%xmm0, rhs+48(%rax)
	.loc	11 142 16 is_stmt 1     # rhs.c:142:16
	mulpd	%xmm11, %xmm6
	.loc	11 142 38 is_stmt 0     # rhs.c:142:38
	mulpd	%xmm4, %xmm5
	.loc	11 142 16               # rhs.c:142:16
	subpd	%xmm6, %xmm5
	.loc	11 143 16 is_stmt 1     # rhs.c:143:16
	shufpd	$1, %xmm3, %xmm2        # xmm2 = xmm2[1],xmm3[0]
	mulpd	%xmm10, %xmm2
	.loc	11 142 53               # rhs.c:142:53
	subpd	%xmm2, %xmm5
	.loc	11 143 35               # rhs.c:143:35
	movupd	u+144(%rax), %xmm0
	.loc	11 143 33 is_stmt 0     # rhs.c:143:33
	addpd	%xmm5, %xmm0
	movapd	%xmm9, %xmm3
	.loc	11 141 27 is_stmt 1     # rhs.c:141:27
	movupd	rhs+64(%rax), %xmm1
	.loc	11 141 50 is_stmt 0     # rhs.c:141:50
	mulpd	%xmm14, %xmm0
	.loc	11 141 43               # rhs.c:141:43
	subpd	%xmm0, %xmm1
	.loc	11 141 25               # rhs.c:141:25
	movupd	%xmm1, rhs+64(%rax)
.Ltmp501:
	.loc	11 132 19 is_stmt 1 discriminator 1 # rhs.c:132:19
	incq	%rbp
	addq	$2600, %rax             # imm = 0xA28
	cmpq	%r14, %rbp
	.loc	11 132 5 is_stmt 0 discriminator 1 # rhs.c:132:5
	jl	.LBB6_29
.Ltmp502:
# BB#30:                                # %for.cond870.preheader
                                        #   in Loop: Header=BB6_23 Depth=1
	testl	%r14d, %r14d
	jle	.LBB6_44
# BB#31:                                # %for.cond873.preheader.lr.ph
                                        #   in Loop: Header=BB6_23 Depth=1
.Ltmp503:
	.loc	11 148 7 is_stmt 1 discriminator 1 # rhs.c:148:7
	cmpl	$2, 128(%rsp)           # 4-byte Folded Reload
	movq	%r15, %rbx
	movl	$1, %ebp
	jle	.LBB6_32
	.p2align	4, 0x90
.LBB6_40:                               # %for.cond877.preheader.lr.ph
                                        #   Parent Loop BB6_23 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_41 Depth 3
.Ltmp504:
	.loc	11 152 37               # rhs.c:152:37
	imulq	$2600, %rbp, %rax       # imm = 0xA28
	imulq	$169000, %r11, %rdx     # imm = 0x29428
	.loc	11 151 15               # rhs.c:151:15
	movsd	u+48(%rdx,%rax), %xmm9  # xmm9 = mem[0],zero
	.loc	11 151 37 is_stmt 0     # rhs.c:151:37
	movsd	u+88(%rdx,%rax), %xmm11 # xmm11 = mem[0],zero
	.loc	11 152 17 is_stmt 1     # rhs.c:152:17
	movsd	u+128(%rdx,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	11 152 37 is_stmt 0     # rhs.c:152:37
	movupd	u+160(%rdx,%rax), %xmm7
	.loc	11 151 15 is_stmt 1     # rhs.c:151:15
	movupd	u+56(%rdx,%rax), %xmm0
	.loc	11 151 37 is_stmt 0     # rhs.c:151:37
	movupd	u+96(%rdx,%rax), %xmm13
	movapd	%xmm14, %xmm8
	.loc	11 152 17 is_stmt 1     # rhs.c:152:17
	movupd	u+136(%rdx,%rax), %xmm14
	.loc	11 152 37 is_stmt 0     # rhs.c:152:37
	movupd	u+176(%rdx,%rax), %xmm6
	.loc	11 151 15 is_stmt 1     # rhs.c:151:15
	movsd	u+72(%rdx,%rax), %xmm2  # xmm2 = mem[0],zero
	.loc	11 151 37 is_stmt 0     # rhs.c:151:37
	movsd	u+112(%rdx,%rax), %xmm1 # xmm1 = mem[0],zero
	movl	160(%rsp), %edx         # 4-byte Reload
	movq	%rbx, %rax
.Ltmp505:
	.loc	11 142 38 is_stmt 1     # rhs.c:142:38
	movapd	.LCPI6_8(%rip), %xmm15  # xmm15 = [6.000000e+00,6.000000e+00]
.Ltmp506:
	.p2align	4, 0x90
.LBB6_41:                               # %for.cond877.preheader
                                        #   Parent Loop BB6_23 Depth=1
                                        #     Parent Loop BB6_40 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 151 31               # rhs.c:151:31
	movsd	u+171640(%rax), %xmm5   # xmm5 = mem[0],zero
	unpcklpd	%xmm9, %xmm5    # xmm5 = xmm5[0],xmm9[0]
	.loc	11 151 36 is_stmt 0     # rhs.c:151:36
	movapd	%xmm11, (%rsp)          # 16-byte Spill
	movsd	u+171680(%rax), %xmm3   # xmm3 = mem[0],zero
	unpcklpd	%xmm11, %xmm3   # xmm3 = xmm3[0],xmm11[0]
	.loc	11 152 17 is_stmt 1     # rhs.c:152:17
	movapd	%xmm4, %xmm11
	.loc	11 151 37               # rhs.c:151:37
	movapd	%xmm1, %xmm9
	.loc	11 150 29               # rhs.c:150:29
	movupd	rhs+171720(%rax), %xmm1
	.loc	11 151 36               # rhs.c:151:36
	mulpd	%xmm10, %xmm3
	.loc	11 151 31 is_stmt 0     # rhs.c:151:31
	subpd	%xmm3, %xmm5
	.loc	11 152 16 is_stmt 1     # rhs.c:152:16
	movsd	u+171720(%rax), %xmm3   # xmm3 = mem[0],zero
	unpcklpd	%xmm11, %xmm3   # xmm3 = xmm3[0],xmm11[0]
	mulpd	%xmm15, %xmm3
	.loc	11 151 53               # rhs.c:151:53
	addpd	%xmm5, %xmm3
	.loc	11 152 36               # rhs.c:152:36
	movapd	%xmm7, %xmm4
	mulpd	%xmm10, %xmm4
	.loc	11 152 31 is_stmt 0     # rhs.c:152:31
	subpd	%xmm4, %xmm3
	movapd	%xmm10, %xmm12
	.loc	11 153 15 is_stmt 1     # rhs.c:153:15
	movupd	u+171800(%rax), %xmm10
	.loc	11 152 53               # rhs.c:152:53
	addpd	%xmm10, %xmm3
	.loc	11 150 52               # rhs.c:150:52
	mulpd	%xmm8, %xmm3
	.loc	11 150 45 is_stmt 0     # rhs.c:150:45
	subpd	%xmm3, %xmm1
	.loc	11 150 27               # rhs.c:150:27
	movupd	%xmm1, rhs+171720(%rax)
	.loc	11 150 29               # rhs.c:150:29
	movupd	rhs+171736(%rax), %xmm1
	.loc	11 151 36 is_stmt 1     # rhs.c:151:36
	movapd	%xmm13, %xmm3
	mulpd	%xmm12, %xmm3
	.loc	11 151 31 is_stmt 0     # rhs.c:151:31
	subpd	%xmm3, %xmm0
	.loc	11 152 16 is_stmt 1     # rhs.c:152:16
	movapd	%xmm14, %xmm3
	mulpd	%xmm15, %xmm3
	.loc	11 151 53               # rhs.c:151:53
	addpd	%xmm0, %xmm3
	.loc	11 152 36               # rhs.c:152:36
	movapd	%xmm6, %xmm0
	mulpd	%xmm12, %xmm0
	.loc	11 152 31 is_stmt 0     # rhs.c:152:31
	subpd	%xmm0, %xmm3
	.loc	11 153 15 is_stmt 1     # rhs.c:153:15
	movupd	u+171816(%rax), %xmm5
	.loc	11 152 53               # rhs.c:152:53
	addpd	%xmm5, %xmm3
	.loc	11 150 52               # rhs.c:150:52
	mulpd	%xmm8, %xmm3
	.loc	11 150 45 is_stmt 0     # rhs.c:150:45
	subpd	%xmm3, %xmm1
	.loc	11 150 27               # rhs.c:150:27
	movupd	%xmm1, rhs+171736(%rax)
	movapd	%xmm9, %xmm4
	.loc	11 151 36 is_stmt 1     # rhs.c:151:36
	movapd	%xmm4, %xmm0
	movsd	.LCPI6_6(%rip), %xmm1   # xmm1 = mem[0],zero
	movapd	%xmm1, %xmm3
	mulsd	%xmm3, %xmm0
	.loc	11 151 31 is_stmt 0     # rhs.c:151:31
	subsd	%xmm0, %xmm2
	.loc	11 152 17 is_stmt 1     # rhs.c:152:17
	movsd	u+171752(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 152 16 is_stmt 0     # rhs.c:152:16
	movapd	%xmm1, %xmm0
	mulsd	.LCPI6_7(%rip), %xmm0
	.loc	11 151 53 is_stmt 1     # rhs.c:151:53
	addsd	%xmm2, %xmm0
	movsd	u+171792(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 152 36               # rhs.c:152:36
	mulsd	%xmm3, %xmm2
	.loc	11 152 31 is_stmt 0     # rhs.c:152:31
	subsd	%xmm2, %xmm0
	.loc	11 150 29 is_stmt 1     # rhs.c:150:29
	movsd	rhs+171752(%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	11 152 53               # rhs.c:152:53
	addsd	u+171832(%rax), %xmm0
	.loc	11 150 52               # rhs.c:150:52
	mulsd	64(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	11 150 45 is_stmt 0     # rhs.c:150:45
	subsd	%xmm0, %xmm2
	.loc	11 150 27               # rhs.c:150:27
	movsd	%xmm2, rhs+171752(%rax)
	.loc	11 151 15 is_stmt 1     # rhs.c:151:15
	movapd	%xmm13, %xmm0
	.loc	11 151 37 is_stmt 0     # rhs.c:151:37
	movapd	%xmm14, %xmm13
	.loc	11 152 17 is_stmt 1     # rhs.c:152:17
	movapd	%xmm6, %xmm14
	.loc	11 151 15               # rhs.c:151:15
	movapd	(%rsp), %xmm9           # 16-byte Reload
.Ltmp507:
	.loc	11 148 7 discriminator 1 # rhs.c:148:7
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	addq	$40, %rax
	decl	%edx
.Ltmp508:
	.loc	11 151 15               # rhs.c:151:15
	movapd	%xmm4, %xmm2
	.loc	11 152 17               # rhs.c:152:17
	movapd	%xmm7, %xmm4
	.loc	11 152 37 is_stmt 0     # rhs.c:152:37
	movapd	%xmm10, %xmm7
	movapd	%xmm12, %xmm10
	movapd	%xmm5, %xmm6
.Ltmp509:
	.loc	11 148 7 is_stmt 1 discriminator 1 # rhs.c:148:7
	jne	.LBB6_41
.Ltmp510:
# BB#42:                                # %for.inc955
                                        #   in Loop: Header=BB6_40 Depth=2
	.loc	11 147 5 discriminator 1 # rhs.c:147:5
	addq	$2600, %rbx             # imm = 0xA28
	.loc	11 147 19 is_stmt 0 discriminator 1 # rhs.c:147:19
	cmpq	%r14, %rbp
	.loc	11 147 5 discriminator 1 # rhs.c:147:5
	leaq	1(%rbp), %rbp
	movapd	32(%rsp), %xmm3         # 16-byte Reload
	movapd	%xmm8, %xmm14
	jl	.LBB6_40
.Ltmp511:
# BB#43:                                # %for.cond958.preheader
                                        #   in Loop: Header=BB6_23 Depth=1
	testl	%r14d, %r14d
	jle	.LBB6_44
.LBB6_32:                               # %for.body960.preheader
                                        #   in Loop: Header=BB6_23 Depth=1
	.loc	11 39 7 is_stmt 1       # rhs.c:39:7
	movq	112(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%r15), %rax
	movq	96(%rsp), %rdx          # 8-byte Reload
	leaq	(%rdx,%r15), %rbp
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB6_33:                               # %for.body960
                                        #   Parent Loop BB6_23 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp512:
	#DEBUG_VALUE: compute_rhs:m <- 0
	.loc	11 161 27               # rhs.c:161:27
	movupd	rhs+171600(%rax,%rbx), %xmm0
	.loc	11 162 13               # rhs.c:162:13
	movq	176(%rsp), %rsi         # 8-byte Reload
	leaq	(%rsi,%rbx), %rsi
	movupd	-32(%r15,%rsi), %xmm1
	.loc	11 162 35 is_stmt 0     # rhs.c:162:35
	leaq	(%r12,%rbx), %rdi
	movupd	-32(%r15,%rdi), %xmm8
	.loc	11 162 34               # rhs.c:162:34
	movapd	%xmm8, %xmm2
	mulpd	%xmm10, %xmm2
	.loc	11 162 29               # rhs.c:162:29
	subpd	%xmm2, %xmm1
	movapd	%xmm10, %xmm13
	.loc	11 163 15 is_stmt 1     # rhs.c:163:15
	movupd	u+171600(%rax,%rbx), %xmm10
	.loc	11 163 14 is_stmt 0     # rhs.c:163:14
	movapd	%xmm10, %xmm2
.Ltmp513:
	.loc	11 142 38 is_stmt 1     # rhs.c:142:38
	movapd	.LCPI6_8(%rip), %xmm3   # xmm3 = [6.000000e+00,6.000000e+00]
.Ltmp514:
	.loc	11 163 14               # rhs.c:163:14
	mulpd	%xmm3, %xmm2
	.loc	11 162 51               # rhs.c:162:51
	addpd	%xmm1, %xmm2
	.loc	11 163 35               # rhs.c:163:35
	movupd	u(%rbp,%rbx), %xmm1
	.loc	11 163 34 is_stmt 0     # rhs.c:163:34
	movapd	%xmm1, %xmm4
	mulpd	%xmm13, %xmm4
	.loc	11 163 29               # rhs.c:163:29
	subpd	%xmm4, %xmm2
	.loc	11 161 50 is_stmt 1     # rhs.c:161:50
	mulpd	%xmm14, %xmm2
	.loc	11 161 43 is_stmt 0     # rhs.c:161:43
	subpd	%xmm2, %xmm0
	.loc	11 161 25               # rhs.c:161:25
	movupd	%xmm0, rhs+171600(%rax,%rbx)
	.loc	11 161 27               # rhs.c:161:27
	movupd	rhs+171616(%rax,%rbx), %xmm0
	.loc	11 162 13 is_stmt 1     # rhs.c:162:13
	movupd	-16(%r15,%rsi), %xmm4
	.loc	11 162 35 is_stmt 0     # rhs.c:162:35
	movupd	-16(%r15,%rdi), %xmm9
	.loc	11 162 34               # rhs.c:162:34
	movapd	%xmm9, %xmm5
	mulpd	%xmm13, %xmm5
	.loc	11 162 29               # rhs.c:162:29
	subpd	%xmm5, %xmm4
	.loc	11 163 15 is_stmt 1     # rhs.c:163:15
	movupd	u+171616(%rax,%rbx), %xmm12
	.loc	11 163 14 is_stmt 0     # rhs.c:163:14
	movapd	%xmm12, %xmm5
	mulpd	%xmm3, %xmm5
	.loc	11 162 51 is_stmt 1     # rhs.c:162:51
	addpd	%xmm4, %xmm5
	.loc	11 163 35               # rhs.c:163:35
	movupd	u+16(%rbp,%rbx), %xmm4
	.loc	11 163 34 is_stmt 0     # rhs.c:163:34
	movapd	%xmm4, %xmm7
	mulpd	%xmm13, %xmm7
	.loc	11 163 29               # rhs.c:163:29
	subpd	%xmm7, %xmm5
	.loc	11 161 50 is_stmt 1     # rhs.c:161:50
	mulpd	%xmm14, %xmm5
	.loc	11 161 43 is_stmt 0     # rhs.c:161:43
	subpd	%xmm5, %xmm0
	.loc	11 161 25               # rhs.c:161:25
	movupd	%xmm0, rhs+171616(%rax,%rbx)
	.loc	11 162 13 is_stmt 1     # rhs.c:162:13
	movsd	(%r15,%rsi), %xmm7      # xmm7 = mem[0],zero
	.loc	11 162 35 is_stmt 0     # rhs.c:162:35
	movsd	(%r15,%rdi), %xmm15     # xmm15 = mem[0],zero
	.loc	11 162 34               # rhs.c:162:34
	movapd	%xmm15, %xmm0
	movsd	.LCPI6_6(%rip), %xmm5   # xmm5 = mem[0],zero
	mulsd	%xmm5, %xmm0
	.loc	11 162 29               # rhs.c:162:29
	subsd	%xmm0, %xmm7
	.loc	11 163 15 is_stmt 1     # rhs.c:163:15
	movsd	u+171632(%rax,%rbx), %xmm2 # xmm2 = mem[0],zero
	.loc	11 163 14 is_stmt 0     # rhs.c:163:14
	movapd	%xmm2, %xmm0
	mulsd	.LCPI6_7(%rip), %xmm0
	.loc	11 162 51 is_stmt 1     # rhs.c:162:51
	addsd	%xmm7, %xmm0
	.loc	11 163 35               # rhs.c:163:35
	movsd	u+32(%rbp,%rbx), %xmm6  # xmm6 = mem[0],zero
	.loc	11 163 34 is_stmt 0     # rhs.c:163:34
	movapd	%xmm6, %xmm7
	mulsd	%xmm5, %xmm7
	.loc	11 163 29               # rhs.c:163:29
	subsd	%xmm7, %xmm0
	.loc	11 161 27 is_stmt 1     # rhs.c:161:27
	movsd	rhs+171632(%rax,%rbx), %xmm7 # xmm7 = mem[0],zero
	movapd	64(%rsp), %xmm11        # 16-byte Reload
	.loc	11 161 50 is_stmt 0     # rhs.c:161:50
	mulsd	%xmm11, %xmm0
	.loc	11 161 43               # rhs.c:161:43
	subsd	%xmm0, %xmm7
	.loc	11 161 25               # rhs.c:161:25
	movsd	%xmm7, rhs+171632(%rax,%rbx)
.Ltmp515:
	.loc	11 169 34 is_stmt 1     # rhs.c:169:34
	mulpd	%xmm13, %xmm10
	.loc	11 169 29 is_stmt 0     # rhs.c:169:29
	subpd	%xmm10, %xmm8
	movapd	%xmm13, %xmm10
.Ltmp516:
	.loc	11 136 15 is_stmt 1     # rhs.c:136:15
	movapd	.LCPI6_3(%rip), %xmm0   # xmm0 = [5.000000e+00,5.000000e+00]
	movapd	%xmm0, %xmm7
.Ltmp517:
	.loc	11 169 56               # rhs.c:169:56
	mulpd	%xmm7, %xmm1
	.loc	11 169 51 is_stmt 0     # rhs.c:169:51
	addpd	%xmm8, %xmm1
	.loc	11 168 27 is_stmt 1     # rhs.c:168:27
	movupd	rhs(%rbp,%rbx), %xmm0
	.loc	11 168 50 is_stmt 0     # rhs.c:168:50
	mulpd	%xmm14, %xmm1
	.loc	11 168 43               # rhs.c:168:43
	subpd	%xmm1, %xmm0
	.loc	11 168 25               # rhs.c:168:25
	movupd	%xmm0, rhs(%rbp,%rbx)
	.loc	11 169 34 is_stmt 1     # rhs.c:169:34
	mulpd	%xmm10, %xmm12
	.loc	11 169 29 is_stmt 0     # rhs.c:169:29
	subpd	%xmm12, %xmm9
	movapd	32(%rsp), %xmm3         # 16-byte Reload
	.loc	11 169 56               # rhs.c:169:56
	mulpd	%xmm7, %xmm4
	.loc	11 169 51               # rhs.c:169:51
	addpd	%xmm9, %xmm4
	.loc	11 168 27 is_stmt 1     # rhs.c:168:27
	movupd	rhs+16(%rbp,%rbx), %xmm0
	.loc	11 168 50 is_stmt 0     # rhs.c:168:50
	mulpd	%xmm14, %xmm4
	.loc	11 168 43               # rhs.c:168:43
	subpd	%xmm4, %xmm0
	.loc	11 168 25               # rhs.c:168:25
	movupd	%xmm0, rhs+16(%rbp,%rbx)
	.loc	11 169 34 is_stmt 1     # rhs.c:169:34
	mulsd	%xmm5, %xmm2
	.loc	11 169 29 is_stmt 0     # rhs.c:169:29
	subsd	%xmm2, %xmm15
	.loc	11 169 56               # rhs.c:169:56
	mulsd	.LCPI6_5(%rip), %xmm6
	.loc	11 169 51               # rhs.c:169:51
	addsd	%xmm15, %xmm6
	.loc	11 168 27 is_stmt 1     # rhs.c:168:27
	movsd	rhs+32(%rbp,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	11 168 50 is_stmt 0     # rhs.c:168:50
	mulsd	%xmm11, %xmm6
	.loc	11 168 43               # rhs.c:168:43
	subsd	%xmm6, %xmm0
	.loc	11 168 25               # rhs.c:168:25
	movsd	%xmm0, rhs+32(%rbp,%rbx)
.Ltmp518:
	.loc	11 158 19 is_stmt 1 discriminator 1 # rhs.c:158:19
	incq	%rdx
	addq	$2600, %rbx             # imm = 0xA28
	cmpq	%r14, %rdx
	jl	.LBB6_33
.Ltmp519:
	.p2align	4, 0x90
.LBB6_44:                               # %for.inc1084
                                        #   in Loop: Header=BB6_23 Depth=1
	.loc	11 89 3 discriminator 1 # rhs.c:89:3
	addq	$33800, %r10            # imm = 0x8408
	addq	$169000, %r13           # imm = 0x29428
	addq	$169000, %r15           # imm = 0x29428
	.loc	11 89 17 is_stmt 0 discriminator 1 # rhs.c:89:17
	cmpq	144(%rsp), %r11         # 8-byte Folded Reload
	.loc	11 89 3 discriminator 1 # rhs.c:89:3
	leaq	1(%r11), %r11
	jl	.LBB6_23
.Ltmp520:
.LBB6_45:                               # %for.end1086
	.loc	11 173 7 is_stmt 1      # rhs.c:173:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_48
# BB#46:                                # %if.end1089
	.loc	11 173 16 is_stmt 0 discriminator 1 # rhs.c:173:16
	movl	$2, %edi
	callq	timer_stop
.Ltmp521:
	.loc	11 178 7 is_stmt 1      # rhs.c:178:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_48
# BB#47:                                # %if.then1091
	.loc	11 178 16 is_stmt 0 discriminator 1 # rhs.c:178:16
	movl	$3, %edi
	callq	timer_start
.Ltmp522:
.LBB6_48:                               # %for.cond1093.preheader
	.loc	11 179 3 is_stmt 1 discriminator 1 # rhs.c:179:3
	movslq	nz2(%rip), %r8
	.loc	11 179 20 is_stmt 0 discriminator 1 # rhs.c:179:20
	testq	%r8, %r8
	jle	.LBB6_65
# BB#49:                                # %for.cond1096.preheader.lr.ph
.Ltmp523:
	.loc	11 254 13 is_stmt 1     # rhs.c:254:13
	movslq	ny2(%rip), %r14
.Ltmp524:
	.loc	11 223 22 discriminator 1 # rhs.c:223:22
	movl	nx2(%rip), %r9d
.Ltmp525:
	.loc	11 239 25 discriminator 1 # rhs.c:239:25
	leaq	-2(%r14), %rax
.Ltmp526:
	.loc	11 262 45               # rhs.c:262:45
	movq	%rax, 384(%rsp)         # 8-byte Spill
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
.Ltmp527:
	.loc	11 188 11               # rhs.c:188:11
	movapd	%xmm0, 448(%rsp)        # 16-byte Spill
	movsd	ty2(%rip), %xmm11       # xmm11 = mem[0],zero
	.loc	11 190 45               # rhs.c:190:45
	movapd	%xmm11, 48(%rsp)        # 16-byte Spill
	movsd	dy2ty1(%rip), %xmm1     # xmm1 = mem[0],zero
	.loc	11 192 11               # rhs.c:192:11
	movapd	%xmm1, (%rsp)           # 16-byte Spill
	movsd	yycon2(%rip), %xmm2     # xmm2 = mem[0],zero
	movsd	con43(%rip), %xmm3      # xmm3 = mem[0],zero
	.loc	11 197 17               # rhs.c:197:17
	mulsd	%xmm2, %xmm3
	.loc	11 200 57               # rhs.c:200:57
	movsd	c2(%rip), %xmm13        # xmm13 = mem[0],zero
.Ltmp528:
	.loc	11 179 3 discriminator 1 # rhs.c:179:3
	movapd	%xmm13, 464(%rsp)       # 16-byte Spill
	movslq	%r9d, %rdi
.Ltmp529:
	.loc	11 253 50               # rhs.c:253:50
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp530:
	.loc	11 186 52               # rhs.c:186:52
	movaps	%xmm0, 432(%rsp)        # 16-byte Spill
	movsd	dy1ty1(%rip), %xmm0     # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm4
	unpcklpd	%xmm2, %xmm4    # xmm4 = xmm4[0],xmm2[0]
	movapd	%xmm4, 16(%rsp)         # 16-byte Spill
.Ltmp531:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movlhps	%xmm11, %xmm11          # xmm11 = xmm11[0,0]
.Ltmp532:
	.loc	11 195 52               # rhs.c:195:52
	movsd	dy3ty1(%rip), %xmm4     # xmm4 = mem[0],zero
.Ltmp533:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movsd	dy4ty1(%rip), %xmm5     # xmm5 = mem[0],zero
.Ltmp534:
	.loc	11 195 52               # rhs.c:195:52
	movapd	%xmm4, %xmm6
	unpcklpd	%xmm5, %xmm6    # xmm6 = xmm6[0],xmm5[0]
	movapd	%xmm6, 80(%rsp)         # 16-byte Spill
	.loc	11 197 24               # rhs.c:197:24
	movapd	%xmm3, %xmm6
	unpcklpd	%xmm2, %xmm6    # xmm6 = xmm6[0],xmm2[0]
	movapd	%xmm6, 32(%rsp)         # 16-byte Spill
.Ltmp535:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movq	%rdi, %rsi
	andq	$-2, %rsi
	movq	%rsi, 392(%rsp)         # 8-byte Spill
	movq	%rdi, %rax
	orq	$1, %rax
	movq	%rax, 424(%rsp)         # 8-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 224(%rsp)        # 16-byte Spill
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 176(%rsp)        # 16-byte Spill
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 64(%rsp)         # 16-byte Spill
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movaps	%xmm4, 208(%rsp)        # 16-byte Spill
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 240(%rsp)        # 16-byte Spill
	movapd	%xmm13, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 160(%rsp)        # 16-byte Spill
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movaps	%xmm5, 192(%rsp)        # 16-byte Spill
.Ltmp536:
	.loc	11 207 45               # rhs.c:207:45
	movsd	dy5ty1(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp537:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movapd	%xmm0, 320(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 144(%rsp)        # 16-byte Spill
.Ltmp538:
	.loc	11 209 11               # rhs.c:209:11
	movsd	yycon3(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp539:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movapd	%xmm0, 304(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 128(%rsp)        # 16-byte Spill
.Ltmp540:
	.loc	11 210 11               # rhs.c:210:11
	movsd	yycon4(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp541:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movapd	%xmm0, 288(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 112(%rsp)        # 16-byte Spill
.Ltmp542:
	.loc	11 211 11               # rhs.c:211:11
	movsd	yycon5(%rip), %xmm0     # xmm0 = mem[0],zero
.Ltmp543:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movapd	%xmm0, 272(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 96(%rsp)         # 16-byte Spill
.Ltmp544:
	.loc	11 214 19               # rhs.c:214:19
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
.Ltmp545:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	movapd	%xmm0, 256(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 336(%rsp)        # 16-byte Spill
.Ltmp546:
	.loc	11 179 3 discriminator 1 # rhs.c:179:3
	imulq	$2600, %r14, %rax       # imm = 0xA28
	movq	%rax, 376(%rsp)         # 8-byte Spill
	leaq	-2600(%rax), %rcx
	movq	%rcx, 368(%rsp)         # 8-byte Spill
	leaq	u+161272(%rax), %rcx
	movq	%rcx, 400(%rsp)         # 8-byte Spill
	leaq	u+163872(%rax), %r15
	leaq	u+169072(%rax), %rcx
	movq	%rcx, 360(%rsp)         # 8-byte Spill
	leaq	u+166472(%rax), %rax
	movq	%rax, 352(%rsp)         # 8-byte Spill
	movl	$1, %eax
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB6_50:                               # %for.cond1096.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_103 Depth 2
                                        #       Child Loop BB6_106 Depth 3
                                        #       Child Loop BB6_109 Depth 3
                                        #     Child Loop BB6_52 Depth 2
                                        #     Child Loop BB6_138 Depth 2
                                        #     Child Loop BB6_56 Depth 2
                                        #       Child Loop BB6_57 Depth 3
                                        #     Child Loop BB6_61 Depth 2
                                        #     Child Loop BB6_63 Depth 2
	movq	%r8, %rdx
	movq	%r13, 408(%rsp)         # 8-byte Spill
	movq	%rax, 416(%rsp)         # 8-byte Spill
	movq	%r15, %rbp
.Ltmp547:
	.loc	11 180 5 discriminator 1 # rhs.c:180:5
	testl	%r14d, %r14d
	movq	%r12, %rcx
	movl	$1, %r8d
	jle	.LBB6_51
	.p2align	4, 0x90
.LBB6_103:                              # %for.cond1099.preheader
                                        #   Parent Loop BB6_50 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_106 Depth 3
                                        #       Child Loop BB6_109 Depth 3
	testl	%r9d, %r9d
	jle	.LBB6_110
# BB#104:                               # %for.body1101.lr.ph
                                        #   in Loop: Header=BB6_103 Depth=2
	cmpl	$2, %r9d
	movl	$1, %r11d
	jb	.LBB6_108
# BB#105:                               # %min.iters.checked
                                        #   in Loop: Header=BB6_103 Depth=2
	testq	%rsi, %rsi
	movq	%rsi, %r15
	movq	%r13, %r10
	movl	$1, %r11d
	je	.LBB6_108
	.p2align	4, 0x90
.LBB6_106:                              # %vector.body
                                        #   Parent Loop BB6_50 Depth=1
                                        #     Parent Loop BB6_103 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp548:
	.loc	11 182 16               # rhs.c:182:16
	movupd	vs+34328(%r10), %xmm9
	.loc	11 183 16               # rhs.c:183:16
	movupd	vs+34848(%r10), %xmm12
	.loc	11 184 16               # rhs.c:184:16
	movupd	vs+33808(%r10), %xmm15
	.loc	11 186 27               # rhs.c:186:27
	movsd	rhs+171640(%r10,%r10,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	rhs+171680(%r10,%r10,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 187 12               # rhs.c:187:12
	movsd	u+174240(%r10,%r10,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+174280(%r10,%r10,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 187 34 is_stmt 0     # rhs.c:187:34
	movsd	u+171640(%r10,%r10,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+171680(%r10,%r10,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 187 33               # rhs.c:187:33
	addpd	%xmm2, %xmm2
	.loc	11 187 28               # rhs.c:187:28
	subpd	%xmm2, %xmm1
	.loc	11 187 50               # rhs.c:187:50
	movsd	u+169040(%r10,%r10,4), %xmm4 # xmm4 = mem[0],zero
	movhpd	u+169080(%r10,%r10,4), %xmm4 # xmm4 = xmm4[0],mem[0]
	.loc	11 187 48               # rhs.c:187:48
	addpd	%xmm1, %xmm4
	.loc	11 186 52 is_stmt 1     # rhs.c:186:52
	mulpd	224(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 186 43 is_stmt 0     # rhs.c:186:43
	addpd	%xmm0, %xmm4
	.loc	11 188 18 is_stmt 1     # rhs.c:188:18
	movsd	u+174256(%r10,%r10,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+174296(%r10,%r10,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 188 36 is_stmt 0     # rhs.c:188:36
	movsd	u+169056(%r10,%r10,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+169096(%r10,%r10,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 188 34               # rhs.c:188:34
	movapd	%xmm0, %xmm1
	subpd	%xmm2, %xmm1
	.loc	11 188 15               # rhs.c:188:15
	mulpd	%xmm11, %xmm1
	.loc	11 187 67 is_stmt 1     # rhs.c:187:67
	subpd	%xmm1, %xmm4
	.loc	11 186 25               # rhs.c:186:25
	movlpd	%xmm4, rhs+171640(%r10,%r10,4)
	movhpd	%xmm4, rhs+171680(%r10,%r10,4)
	.loc	11 190 27               # rhs.c:190:27
	movsd	rhs+171648(%r10,%r10,4), %xmm4 # xmm4 = mem[0],zero
	movhpd	rhs+171688(%r10,%r10,4), %xmm4 # xmm4 = xmm4[0],mem[0]
	.loc	11 191 12               # rhs.c:191:12
	movsd	u+174248(%r10,%r10,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+174288(%r10,%r10,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 191 34 is_stmt 0     # rhs.c:191:34
	movsd	u+171648(%r10,%r10,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+171688(%r10,%r10,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 191 33               # rhs.c:191:33
	addpd	%xmm5, %xmm5
	.loc	11 191 28               # rhs.c:191:28
	movapd	%xmm1, %xmm6
	subpd	%xmm5, %xmm6
	.loc	11 191 50               # rhs.c:191:50
	movsd	u+169048(%r10,%r10,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+169088(%r10,%r10,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 191 48               # rhs.c:191:48
	addpd	%xmm5, %xmm6
	.loc	11 190 52 is_stmt 1     # rhs.c:190:52
	mulpd	176(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	11 190 43 is_stmt 0     # rhs.c:190:43
	addpd	%xmm4, %xmm6
	.loc	11 192 21 is_stmt 1     # rhs.c:192:21
	movupd	us+34848(%r10), %xmm4
	.loc	11 192 41 is_stmt 0     # rhs.c:192:41
	movupd	us+34328(%r10), %xmm7
	.loc	11 192 40               # rhs.c:192:40
	addpd	%xmm7, %xmm7
	.loc	11 192 35               # rhs.c:192:35
	subpd	%xmm7, %xmm4
	.loc	11 192 55               # rhs.c:192:55
	movupd	us+33808(%r10), %xmm7
	.loc	11 192 53               # rhs.c:192:53
	addpd	%xmm4, %xmm7
	movapd	64(%rsp), %xmm3         # 16-byte Reload
	.loc	11 192 18               # rhs.c:192:18
	mulpd	%xmm3, %xmm7
	.loc	11 191 67 is_stmt 1     # rhs.c:191:67
	addpd	%xmm6, %xmm7
	.loc	11 193 33               # rhs.c:193:33
	mulpd	%xmm12, %xmm1
	.loc	11 193 55 is_stmt 0     # rhs.c:193:55
	mulpd	%xmm15, %xmm5
	.loc	11 193 38               # rhs.c:193:38
	subpd	%xmm5, %xmm1
	.loc	11 193 15               # rhs.c:193:15
	mulpd	%xmm11, %xmm1
	.loc	11 192 70 is_stmt 1     # rhs.c:192:70
	subpd	%xmm1, %xmm7
	.loc	11 190 25               # rhs.c:190:25
	movlpd	%xmm7, rhs+171648(%r10,%r10,4)
	movhpd	%xmm7, rhs+171688(%r10,%r10,4)
	.loc	11 195 27               # rhs.c:195:27
	movsd	rhs+171656(%r10,%r10,4), %xmm4 # xmm4 = mem[0],zero
	movhpd	rhs+171696(%r10,%r10,4), %xmm4 # xmm4 = xmm4[0],mem[0]
	.loc	11 196 34               # rhs.c:196:34
	movsd	u+171656(%r10,%r10,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+171696(%r10,%r10,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 196 33 is_stmt 0     # rhs.c:196:33
	addpd	%xmm5, %xmm5
	.loc	11 197 31 is_stmt 1     # rhs.c:197:31
	movapd	%xmm12, %xmm1
	.loc	11 198 33               # rhs.c:198:33
	movapd	%xmm12, %xmm6
	mulpd	%xmm0, %xmm6
	.loc	11 196 28               # rhs.c:196:28
	subpd	%xmm5, %xmm0
	.loc	11 196 48 is_stmt 0     # rhs.c:196:48
	addpd	%xmm2, %xmm0
	.loc	11 195 52 is_stmt 1     # rhs.c:195:52
	mulpd	208(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 195 43 is_stmt 0     # rhs.c:195:43
	addpd	%xmm4, %xmm0
	.loc	11 197 36 is_stmt 1     # rhs.c:197:36
	movapd	%xmm9, %xmm4
	addpd	%xmm4, %xmm4
	.loc	11 197 31 is_stmt 0     # rhs.c:197:31
	subpd	%xmm4, %xmm1
	.loc	11 197 42               # rhs.c:197:42
	addpd	%xmm15, %xmm1
	.loc	11 197 24               # rhs.c:197:24
	mulpd	240(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 196 67 is_stmt 1     # rhs.c:196:67
	addpd	%xmm0, %xmm1
	.loc	11 198 55               # rhs.c:198:55
	mulpd	%xmm15, %xmm2
	.loc	11 198 38 is_stmt 0     # rhs.c:198:38
	subpd	%xmm2, %xmm6
	.loc	11 199 18 is_stmt 1     # rhs.c:199:18
	movsd	u+174272(%r10,%r10,4), %xmm8 # xmm8 = mem[0],zero
	movhpd	u+174312(%r10,%r10,4), %xmm8 # xmm8 = xmm8[0],mem[0]
	.loc	11 199 36 is_stmt 0     # rhs.c:199:36
	movupd	square+34848(%r10), %xmm10
	.loc	11 199 34               # rhs.c:199:34
	movapd	%xmm8, %xmm2
	subpd	%xmm10, %xmm2
	.loc	11 200 18 is_stmt 1     # rhs.c:200:18
	movsd	u+169072(%r10,%r10,4), %xmm14 # xmm14 = mem[0],zero
	movhpd	u+169112(%r10,%r10,4), %xmm14 # xmm14 = xmm14[0],mem[0]
	.loc	11 199 54               # rhs.c:199:54
	subpd	%xmm14, %xmm2
	.loc	11 200 36               # rhs.c:200:36
	movupd	square+33808(%r10), %xmm0
	.loc	11 200 34 is_stmt 0     # rhs.c:200:34
	addpd	%xmm0, %xmm2
	movapd	160(%rsp), %xmm13       # 16-byte Reload
	.loc	11 200 55               # rhs.c:200:55
	mulpd	%xmm13, %xmm2
	.loc	11 198 60 is_stmt 1     # rhs.c:198:60
	addpd	%xmm6, %xmm2
	.loc	11 198 15 is_stmt 0     # rhs.c:198:15
	mulpd	%xmm11, %xmm2
	.loc	11 197 49 is_stmt 1     # rhs.c:197:49
	subpd	%xmm2, %xmm1
	.loc	11 195 25               # rhs.c:195:25
	movlpd	%xmm1, rhs+171656(%r10,%r10,4)
	movhpd	%xmm1, rhs+171696(%r10,%r10,4)
	.loc	11 202 27               # rhs.c:202:27
	movsd	rhs+171664(%r10,%r10,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171704(%r10,%r10,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 203 12               # rhs.c:203:12
	movsd	u+174264(%r10,%r10,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+174304(%r10,%r10,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 203 34 is_stmt 0     # rhs.c:203:34
	movsd	u+171664(%r10,%r10,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+171704(%r10,%r10,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 203 33               # rhs.c:203:33
	addpd	%xmm5, %xmm5
	.loc	11 203 28               # rhs.c:203:28
	movapd	%xmm1, %xmm6
	subpd	%xmm5, %xmm6
	.loc	11 203 50               # rhs.c:203:50
	movsd	u+169064(%r10,%r10,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+169104(%r10,%r10,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 203 48               # rhs.c:203:48
	addpd	%xmm5, %xmm6
	.loc	11 202 52 is_stmt 1     # rhs.c:202:52
	mulpd	192(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	11 202 43 is_stmt 0     # rhs.c:202:43
	addpd	%xmm2, %xmm6
	.loc	11 204 21 is_stmt 1     # rhs.c:204:21
	movupd	ws+34848(%r10), %xmm2
	.loc	11 204 41 is_stmt 0     # rhs.c:204:41
	movupd	ws+34328(%r10), %xmm7
	.loc	11 204 40               # rhs.c:204:40
	addpd	%xmm7, %xmm7
	.loc	11 204 35               # rhs.c:204:35
	subpd	%xmm7, %xmm2
	.loc	11 204 55               # rhs.c:204:55
	movupd	ws+33808(%r10), %xmm7
	.loc	11 204 53               # rhs.c:204:53
	addpd	%xmm2, %xmm7
	.loc	11 205 33 is_stmt 1     # rhs.c:205:33
	mulpd	%xmm12, %xmm1
	.loc	11 204 18               # rhs.c:204:18
	mulpd	%xmm3, %xmm7
	.loc	11 203 67               # rhs.c:203:67
	addpd	%xmm6, %xmm7
	.loc	11 205 55               # rhs.c:205:55
	mulpd	%xmm15, %xmm5
	.loc	11 205 38 is_stmt 0     # rhs.c:205:38
	subpd	%xmm5, %xmm1
	.loc	11 205 15               # rhs.c:205:15
	mulpd	%xmm11, %xmm1
	.loc	11 204 70 is_stmt 1     # rhs.c:204:70
	subpd	%xmm1, %xmm7
	.loc	11 202 25               # rhs.c:202:25
	movlpd	%xmm7, rhs+171664(%r10,%r10,4)
	movhpd	%xmm7, rhs+171704(%r10,%r10,4)
	.loc	11 207 27               # rhs.c:207:27
	movsd	rhs+171672(%r10,%r10,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171712(%r10,%r10,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 208 34               # rhs.c:208:34
	movsd	u+171672(%r10,%r10,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+171712(%r10,%r10,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 208 33 is_stmt 0     # rhs.c:208:33
	addpd	%xmm1, %xmm1
	.loc	11 208 28               # rhs.c:208:28
	movapd	%xmm8, %xmm5
	subpd	%xmm1, %xmm5
	.loc	11 208 48               # rhs.c:208:48
	addpd	%xmm14, %xmm5
	.loc	11 207 52 is_stmt 1     # rhs.c:207:52
	mulpd	144(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	11 207 43 is_stmt 0     # rhs.c:207:43
	addpd	%xmm2, %xmm5
	.loc	11 209 21 is_stmt 1     # rhs.c:209:21
	movupd	qs+34848(%r10), %xmm6
	.loc	11 209 41 is_stmt 0     # rhs.c:209:41
	movupd	qs+34328(%r10), %xmm2
	.loc	11 209 40               # rhs.c:209:40
	addpd	%xmm2, %xmm2
	.loc	11 209 35               # rhs.c:209:35
	subpd	%xmm2, %xmm6
	.loc	11 209 55               # rhs.c:209:55
	movupd	qs+33808(%r10), %xmm2
	.loc	11 209 53               # rhs.c:209:53
	addpd	%xmm6, %xmm2
	.loc	11 209 18               # rhs.c:209:18
	mulpd	128(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	11 208 67 is_stmt 1     # rhs.c:208:67
	addpd	%xmm5, %xmm2
	.loc	11 210 45               # rhs.c:210:45
	mulpd	%xmm9, %xmm4
	.loc	11 211 37               # rhs.c:211:37
	movupd	rho_i+34848(%r10), %xmm5
	.loc	11 211 36 is_stmt 0     # rhs.c:211:36
	mulpd	%xmm8, %xmm5
	movapd	336(%rsp), %xmm6        # 16-byte Reload
	.loc	11 214 21 is_stmt 1     # rhs.c:214:21
	mulpd	%xmm6, %xmm8
	.loc	11 214 42 is_stmt 0     # rhs.c:214:42
	mulpd	%xmm13, %xmm10
	.loc	11 214 38               # rhs.c:214:38
	subpd	%xmm10, %xmm8
	.loc	11 214 62               # rhs.c:214:62
	mulpd	%xmm12, %xmm8
	.loc	11 210 24 is_stmt 1     # rhs.c:210:24
	mulpd	%xmm12, %xmm12
	.loc	11 210 35 is_stmt 0     # rhs.c:210:35
	subpd	%xmm4, %xmm12
	.loc	11 213 37 is_stmt 1     # rhs.c:213:37
	movupd	rho_i+33808(%r10), %xmm4
	.loc	11 213 36 is_stmt 0     # rhs.c:213:36
	mulpd	%xmm14, %xmm4
	.loc	11 215 21 is_stmt 1     # rhs.c:215:21
	mulpd	%xmm6, %xmm14
	.loc	11 215 42 is_stmt 0     # rhs.c:215:42
	mulpd	%xmm13, %xmm0
	movapd	464(%rsp), %xmm13       # 16-byte Reload
	.loc	11 215 38               # rhs.c:215:38
	subpd	%xmm0, %xmm14
	.loc	11 215 62               # rhs.c:215:62
	mulpd	%xmm15, %xmm14
	.loc	11 210 56 is_stmt 1     # rhs.c:210:56
	mulpd	%xmm15, %xmm15
	.loc	11 210 51 is_stmt 0     # rhs.c:210:51
	addpd	%xmm12, %xmm15
	.loc	11 210 18               # rhs.c:210:18
	mulpd	112(%rsp), %xmm15       # 16-byte Folded Reload
	.loc	11 209 70 is_stmt 1     # rhs.c:209:70
	addpd	%xmm2, %xmm15
	.loc	11 212 37               # rhs.c:212:37
	movupd	rho_i+34328(%r10), %xmm0
	.loc	11 212 36 is_stmt 0     # rhs.c:212:36
	mulpd	%xmm1, %xmm0
	.loc	11 211 54 is_stmt 1     # rhs.c:211:54
	subpd	%xmm0, %xmm5
	.loc	11 212 52               # rhs.c:212:52
	addpd	%xmm5, %xmm4
	.loc	11 211 18               # rhs.c:211:18
	mulpd	96(%rsp), %xmm4         # 16-byte Folded Reload
	.loc	11 210 62               # rhs.c:210:62
	addpd	%xmm15, %xmm4
	.loc	11 214 68               # rhs.c:214:68
	subpd	%xmm14, %xmm8
	.loc	11 214 15 is_stmt 0     # rhs.c:214:15
	mulpd	%xmm11, %xmm8
	.loc	11 213 55 is_stmt 1     # rhs.c:213:55
	subpd	%xmm8, %xmm4
	.loc	11 207 25               # rhs.c:207:25
	movlpd	%xmm4, rhs+171672(%r10,%r10,4)
	movhpd	%xmm4, rhs+171712(%r10,%r10,4)
.Ltmp549:
	.loc	11 181 7 discriminator 1 # rhs.c:181:7
	addq	$16, %r10
	addq	$-2, %r15
	jne	.LBB6_106
# BB#107:                               # %middle.block
                                        #   in Loop: Header=BB6_103 Depth=2
	cmpq	%rsi, %rdi
	movq	424(%rsp), %r11         # 8-byte Reload
	je	.LBB6_110
	.p2align	4, 0x90
.LBB6_108:                              # %scalar.ph
                                        #   in Loop: Header=BB6_103 Depth=2
	leaq	(,%r11,8), %rax
	leaq	(%rax,%rax,4), %rbx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB6_109:                              # %for.body1101
                                        #   Parent Loop BB6_50 Depth=1
                                        #     Parent Loop BB6_103 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp550:
	.loc	11 182 16               # rhs.c:182:16
	movsd	vs+34320(%r13,%r11,8), %xmm8 # xmm8 = mem[0],zero
.Ltmp551:
	#DEBUG_VALUE: compute_rhs:vijk <- %XMM8
	.loc	11 183 16               # rhs.c:183:16
	movsd	vs+34840(%r13,%r11,8), %xmm10 # xmm10 = mem[0],zero
.Ltmp552:
	#DEBUG_VALUE: compute_rhs:vp1 <- %XMM10
	.loc	11 184 16               # rhs.c:184:16
	movsd	vs+33800(%r13,%r11,8), %xmm12 # xmm12 = mem[0],zero
.Ltmp553:
	#DEBUG_VALUE: compute_rhs:vm1 <- %XMM12
	.loc	11 191 12               # rhs.c:191:12
	movsd	u+174208(%rbx,%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171608(%rbx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	11 191 33 is_stmt 0     # rhs.c:191:33
	mulsd	.LCPI6_2(%rip), %xmm2
	.loc	11 191 28               # rhs.c:191:28
	addsd	%xmm0, %xmm2
	.loc	11 191 50               # rhs.c:191:50
	movsd	u+169008(%rbx,%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	11 191 48               # rhs.c:191:48
	addsd	%xmm1, %xmm2
	.loc	11 190 52 is_stmt 1     # rhs.c:190:52
	mulsd	(%rsp), %xmm2           # 16-byte Folded Reload
	.loc	11 190 43 is_stmt 0     # rhs.c:190:43
	addsd	rhs+171608(%rbx,%rax), %xmm2
	.loc	11 187 33 is_stmt 1     # rhs.c:187:33
	movsd	u+171600(%rbx,%rax), %xmm3 # xmm3 = mem[0],zero
	movhpd	us+34320(%r13,%r11,8), %xmm3 # xmm3 = xmm3[0],mem[0]
	addpd	%xmm3, %xmm3
	.loc	11 187 28 is_stmt 0     # rhs.c:187:28
	movsd	u+174200(%rbx,%rax), %xmm4 # xmm4 = mem[0],zero
	movhpd	us+34840(%r13,%r11,8), %xmm4 # xmm4 = xmm4[0],mem[0]
	subpd	%xmm3, %xmm4
	.loc	11 187 48               # rhs.c:187:48
	movsd	u+169000(%rbx,%rax), %xmm3 # xmm3 = mem[0],zero
	movhpd	us+33800(%r13,%r11,8), %xmm3 # xmm3 = xmm3[0],mem[0]
	addpd	%xmm4, %xmm3
	.loc	11 186 52 is_stmt 1     # rhs.c:186:52
	mulpd	16(%rsp), %xmm3         # 16-byte Folded Reload
	.loc	11 186 43 is_stmt 0     # rhs.c:186:43
	movsd	rhs+171600(%rbx,%rax), %xmm4 # xmm4 = mem[0],zero
	unpcklpd	%xmm2, %xmm4    # xmm4 = xmm4[0],xmm2[0]
	addpd	%xmm3, %xmm4
	.loc	11 193 33 is_stmt 1     # rhs.c:193:33
	mulsd	%xmm10, %xmm0
	.loc	11 193 55 is_stmt 0     # rhs.c:193:55
	mulsd	%xmm12, %xmm1
	.loc	11 188 18 is_stmt 1     # rhs.c:188:18
	movupd	u+174216(%rbx,%rax), %xmm7
	.loc	11 188 34 is_stmt 0     # rhs.c:188:34
	movapd	%xmm7, %xmm2
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	.loc	11 188 36               # rhs.c:188:36
	movupd	u+169016(%rbx,%rax), %xmm6
	.loc	11 188 34               # rhs.c:188:34
	movapd	%xmm6, %xmm0
	unpcklpd	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0]
	subpd	%xmm0, %xmm2
	.loc	11 188 15               # rhs.c:188:15
	mulpd	%xmm11, %xmm2
	.loc	11 187 67 is_stmt 1     # rhs.c:187:67
	subpd	%xmm2, %xmm4
	.loc	11 186 25               # rhs.c:186:25
	movupd	%xmm4, rhs+171600(%rbx,%rax)
	.loc	11 198 33               # rhs.c:198:33
	movapd	%xmm10, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	11 198 55 is_stmt 0     # rhs.c:198:55
	movapd	%xmm12, %xmm0
	mulsd	%xmm6, %xmm0
	.loc	11 198 38               # rhs.c:198:38
	subsd	%xmm0, %xmm4
	.loc	11 199 18 is_stmt 1     # rhs.c:199:18
	movsd	u+174232(%rbx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	11 199 36 is_stmt 0     # rhs.c:199:36
	movsd	square+34840(%r13,%r11,8), %xmm14 # xmm14 = mem[0],zero
	.loc	11 199 34               # rhs.c:199:34
	movapd	%xmm2, %xmm0
	subsd	%xmm14, %xmm0
	.loc	11 195 27 is_stmt 1     # rhs.c:195:27
	movupd	rhs+171616(%rbx,%rax), %xmm1
	.loc	11 196 34               # rhs.c:196:34
	movupd	u+171616(%rbx,%rax), %xmm5
	.loc	11 196 33 is_stmt 0     # rhs.c:196:33
	addpd	%xmm5, %xmm5
	.loc	11 196 28               # rhs.c:196:28
	movapd	%xmm7, %xmm3
	subpd	%xmm5, %xmm3
	.loc	11 196 48               # rhs.c:196:48
	addpd	%xmm6, %xmm3
	.loc	11 195 52 is_stmt 1     # rhs.c:195:52
	mulpd	80(%rsp), %xmm3         # 16-byte Folded Reload
	.loc	11 195 43 is_stmt 0     # rhs.c:195:43
	addpd	%xmm1, %xmm3
	.loc	11 197 36 is_stmt 1     # rhs.c:197:36
	movapd	%xmm8, %xmm1
	movhpd	ws+34320(%r13,%r11,8), %xmm1 # xmm1 = xmm1[0],mem[0]
	addpd	%xmm1, %xmm1
	.loc	11 197 31 is_stmt 0     # rhs.c:197:31
	movapd	%xmm10, %xmm5
	movhpd	ws+34840(%r13,%r11,8), %xmm5 # xmm5 = xmm5[0],mem[0]
	subpd	%xmm1, %xmm5
	.loc	11 197 42               # rhs.c:197:42
	movapd	%xmm12, %xmm9
	movhpd	ws+33800(%r13,%r11,8), %xmm9 # xmm9 = xmm9[0],mem[0]
	addpd	%xmm5, %xmm9
	.loc	11 200 18 is_stmt 1     # rhs.c:200:18
	movsd	u+169032(%rbx,%rax), %xmm5 # xmm5 = mem[0],zero
	.loc	11 199 54               # rhs.c:199:54
	subsd	%xmm5, %xmm0
	.loc	11 197 24               # rhs.c:197:24
	mulpd	32(%rsp), %xmm9         # 16-byte Folded Reload
	.loc	11 196 67               # rhs.c:196:67
	addpd	%xmm3, %xmm9
	.loc	11 200 36               # rhs.c:200:36
	movsd	square+33800(%r13,%r11,8), %xmm15 # xmm15 = mem[0],zero
	.loc	11 200 34 is_stmt 0     # rhs.c:200:34
	addsd	%xmm15, %xmm0
	.loc	11 200 55               # rhs.c:200:55
	unpcklpd	%xmm12, %xmm0   # xmm0 = xmm0[0],xmm12[0]
	movsd	%xmm13, %xmm6           # xmm6 = xmm13[0],xmm6[1]
	mulpd	%xmm0, %xmm6
	.loc	11 205 33 is_stmt 1     # rhs.c:205:33
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	mulsd	%xmm10, %xmm7
	.loc	11 198 60               # rhs.c:198:60
	unpcklpd	%xmm7, %xmm4    # xmm4 = xmm4[0],xmm7[0]
	movapd	%xmm4, %xmm0
	addpd	%xmm6, %xmm0
	subpd	%xmm6, %xmm4
	movsd	%xmm0, %xmm4            # xmm4 = xmm0[0],xmm4[1]
	.loc	11 198 15 is_stmt 0     # rhs.c:198:15
	mulpd	%xmm11, %xmm4
	.loc	11 197 49 is_stmt 1     # rhs.c:197:49
	subpd	%xmm4, %xmm9
	.loc	11 195 25               # rhs.c:195:25
	movupd	%xmm9, rhs+171616(%rbx,%rax)
	.loc	11 208 34               # rhs.c:208:34
	movsd	u+171632(%rbx,%rax), %xmm3 # xmm3 = mem[0],zero
	.loc	11 208 33 is_stmt 0     # rhs.c:208:33
	addsd	%xmm3, %xmm3
	.loc	11 209 21 is_stmt 1     # rhs.c:209:21
	movsd	qs+34840(%r13,%r11,8), %xmm4 # xmm4 = mem[0],zero
	.loc	11 209 41 is_stmt 0     # rhs.c:209:41
	movsd	qs+34320(%r13,%r11,8), %xmm0 # xmm0 = mem[0],zero
	.loc	11 209 40               # rhs.c:209:40
	addsd	%xmm0, %xmm0
	.loc	11 209 35               # rhs.c:209:35
	subsd	%xmm0, %xmm4
	.loc	11 208 28 is_stmt 1     # rhs.c:208:28
	movapd	%xmm2, %xmm0
	subsd	%xmm3, %xmm0
	.loc	11 208 48 is_stmt 0     # rhs.c:208:48
	addsd	%xmm5, %xmm0
	.loc	11 207 52 is_stmt 1     # rhs.c:207:52
	mulsd	320(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 207 43 is_stmt 0     # rhs.c:207:43
	addsd	rhs+171632(%rbx,%rax), %xmm0
	.loc	11 209 53 is_stmt 1     # rhs.c:209:53
	addsd	qs+33800(%r13,%r11,8), %xmm4
	.loc	11 209 18 is_stmt 0     # rhs.c:209:18
	mulsd	304(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 208 67 is_stmt 1     # rhs.c:208:67
	addsd	%xmm0, %xmm4
	.loc	11 210 45               # rhs.c:210:45
	mulsd	%xmm8, %xmm1
	movsd	rho_i+34840(%r13,%r11,8), %xmm0 # xmm0 = mem[0],zero
	.loc	11 211 36               # rhs.c:211:36
	mulsd	%xmm2, %xmm0
	movapd	256(%rsp), %xmm6        # 16-byte Reload
	.loc	11 214 21               # rhs.c:214:21
	mulsd	%xmm6, %xmm2
	.loc	11 214 42 is_stmt 0     # rhs.c:214:42
	mulsd	%xmm13, %xmm14
	.loc	11 214 38               # rhs.c:214:38
	subsd	%xmm14, %xmm2
	.loc	11 214 62               # rhs.c:214:62
	mulsd	%xmm10, %xmm2
	.loc	11 210 24 is_stmt 1     # rhs.c:210:24
	mulsd	%xmm10, %xmm10
.Ltmp554:
	.loc	11 210 35 is_stmt 0     # rhs.c:210:35
	subsd	%xmm1, %xmm10
	movsd	rho_i+33800(%r13,%r11,8), %xmm1 # xmm1 = mem[0],zero
	.loc	11 213 36 is_stmt 1     # rhs.c:213:36
	mulsd	%xmm5, %xmm1
	.loc	11 215 21               # rhs.c:215:21
	mulsd	%xmm6, %xmm5
	.loc	11 215 42 is_stmt 0     # rhs.c:215:42
	mulsd	%xmm13, %xmm15
	.loc	11 215 38               # rhs.c:215:38
	subsd	%xmm15, %xmm5
	.loc	11 215 62               # rhs.c:215:62
	mulsd	%xmm12, %xmm5
	.loc	11 210 56 is_stmt 1     # rhs.c:210:56
	mulsd	%xmm12, %xmm12
.Ltmp555:
	.loc	11 210 51 is_stmt 0     # rhs.c:210:51
	addsd	%xmm10, %xmm12
	.loc	11 210 18               # rhs.c:210:18
	mulsd	288(%rsp), %xmm12       # 16-byte Folded Reload
	.loc	11 209 70 is_stmt 1     # rhs.c:209:70
	addsd	%xmm4, %xmm12
	.loc	11 212 36               # rhs.c:212:36
	mulsd	rho_i+34320(%r13,%r11,8), %xmm3
	.loc	11 211 54               # rhs.c:211:54
	subsd	%xmm3, %xmm0
	.loc	11 212 52               # rhs.c:212:52
	addsd	%xmm0, %xmm1
	.loc	11 211 18               # rhs.c:211:18
	mulsd	272(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 210 62               # rhs.c:210:62
	addsd	%xmm12, %xmm1
	.loc	11 214 68               # rhs.c:214:68
	subsd	%xmm5, %xmm2
	.loc	11 214 15 is_stmt 0     # rhs.c:214:15
	mulsd	48(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	11 213 55 is_stmt 1     # rhs.c:213:55
	subsd	%xmm2, %xmm1
	.loc	11 207 25               # rhs.c:207:25
	movsd	%xmm1, rhs+171632(%rbx,%rax)
.Ltmp556:
	.loc	11 181 21 discriminator 1 # rhs.c:181:21
	addq	$40, %rax
	cmpq	%rdi, %r11
	.loc	11 181 7 is_stmt 0 discriminator 1 # rhs.c:181:7
	leaq	1(%r11), %r11
	jl	.LBB6_109
.Ltmp557:
.LBB6_110:                              # %for.inc1633
                                        #   in Loop: Header=BB6_103 Depth=2
	.loc	11 180 5 is_stmt 1 discriminator 1 # rhs.c:180:5
	addq	$520, %r13              # imm = 0x208
	addq	$2600, %rcx             # imm = 0xA28
	.loc	11 180 19 is_stmt 0 discriminator 1 # rhs.c:180:19
	cmpq	%r14, %r8
	.loc	11 180 5 discriminator 1 # rhs.c:180:5
	leaq	1(%r8), %r8
	jl	.LBB6_103
.Ltmp558:
.LBB6_51:                               # %for.cond1636.preheader
                                        #   in Loop: Header=BB6_50 Depth=1
	testl	%r9d, %r9d
	movq	%r12, %rax
	movl	$0, %ecx
	movapd	448(%rsp), %xmm3        # 16-byte Reload
	movapd	432(%rsp), %xmm4        # 16-byte Reload
	movq	%rbp, %r15
.Ltmp559:
	.loc	11 254 34 is_stmt 1     # rhs.c:254:34
	movapd	.LCPI6_4(%rip), %xmm5   # xmm5 = [4.000000e+00,4.000000e+00]
	.loc	11 255 14               # rhs.c:255:14
	movapd	.LCPI6_8(%rip), %xmm6   # xmm6 = [6.000000e+00,6.000000e+00]
	.loc	11 254 34               # rhs.c:254:34
	movsd	.LCPI6_6(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI6_7(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp560:
	.loc	11 263 56               # rhs.c:263:56
	movapd	.LCPI6_3(%rip), %xmm9   # xmm9 = [5.000000e+00,5.000000e+00]
	movsd	.LCPI6_5(%rip), %xmm10  # xmm10 = mem[0],zero
	movq	%rdx, %r8
	jle	.LBB6_54
.Ltmp561:
	.p2align	4, 0x90
.LBB6_52:                               # %for.cond1639.preheader
                                        #   Parent Loop BB6_50 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 225 27               # rhs.c:225:27
	movupd	rhs+171640(%rax), %xmm0
	.loc	11 226 17               # rhs.c:226:17
	movupd	u+171640(%rax), %xmm1
	.loc	11 226 16 is_stmt 0     # rhs.c:226:16
	mulpd	%xmm9, %xmm1
	.loc	11 226 37               # rhs.c:226:37
	movupd	u+174240(%rax), %xmm2
	.loc	11 226 36               # rhs.c:226:36
	mulpd	%xmm5, %xmm2
	.loc	11 226 31               # rhs.c:226:31
	subpd	%xmm2, %xmm1
	.loc	11 226 55               # rhs.c:226:55
	movupd	u+176840(%rax), %xmm2
	.loc	11 226 53               # rhs.c:226:53
	addpd	%xmm1, %xmm2
	.loc	11 225 49 is_stmt 1     # rhs.c:225:49
	mulpd	%xmm4, %xmm2
	.loc	11 225 42 is_stmt 0     # rhs.c:225:42
	subpd	%xmm2, %xmm0
	.loc	11 225 25               # rhs.c:225:25
	movupd	%xmm0, rhs+171640(%rax)
	.loc	11 225 27               # rhs.c:225:27
	movupd	rhs+171656(%rax), %xmm0
	.loc	11 226 17 is_stmt 1     # rhs.c:226:17
	movupd	u+171656(%rax), %xmm1
	.loc	11 226 16 is_stmt 0     # rhs.c:226:16
	mulpd	%xmm9, %xmm1
	.loc	11 226 37               # rhs.c:226:37
	movupd	u+174256(%rax), %xmm2
	.loc	11 226 36               # rhs.c:226:36
	mulpd	%xmm5, %xmm2
	.loc	11 226 31               # rhs.c:226:31
	subpd	%xmm2, %xmm1
	.loc	11 226 55               # rhs.c:226:55
	movupd	u+176856(%rax), %xmm2
	.loc	11 226 53               # rhs.c:226:53
	addpd	%xmm1, %xmm2
	.loc	11 225 49 is_stmt 1     # rhs.c:225:49
	mulpd	%xmm4, %xmm2
	.loc	11 225 42 is_stmt 0     # rhs.c:225:42
	subpd	%xmm2, %xmm0
	.loc	11 225 25               # rhs.c:225:25
	movupd	%xmm0, rhs+171656(%rax)
	.loc	11 225 27               # rhs.c:225:27
	movsd	rhs+171672(%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171672(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 226 16 is_stmt 1     # rhs.c:226:16
	mulsd	%xmm10, %xmm1
	movsd	u+174272(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 226 36 is_stmt 0     # rhs.c:226:36
	mulsd	%xmm7, %xmm2
	.loc	11 226 31               # rhs.c:226:31
	subsd	%xmm2, %xmm1
	.loc	11 226 53               # rhs.c:226:53
	addsd	u+176872(%rax), %xmm1
	.loc	11 225 49 is_stmt 1     # rhs.c:225:49
	mulsd	%xmm3, %xmm1
	.loc	11 225 42 is_stmt 0     # rhs.c:225:42
	subsd	%xmm1, %xmm0
	.loc	11 225 25               # rhs.c:225:25
	movsd	%xmm0, rhs+171672(%rax)
.Ltmp562:
	.loc	11 223 19 is_stmt 1 discriminator 1 # rhs.c:223:19
	incq	%rcx
	addq	$40, %rax
	cmpq	%rdi, %rcx
	.loc	11 223 5 is_stmt 0 discriminator 1 # rhs.c:223:5
	jl	.LBB6_52
.Ltmp563:
# BB#53:                                # %for.cond1696.preheader
                                        #   in Loop: Header=BB6_50 Depth=1
	testl	%r9d, %r9d
	movq	%r12, %rax
	movl	$0, %ecx
	jle	.LBB6_54
	.p2align	4, 0x90
.LBB6_138:                              # %for.cond1699.preheader
                                        #   Parent Loop BB6_50 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp564:
	.loc	11 233 27 is_stmt 1     # rhs.c:233:27
	movupd	rhs+174240(%rax), %xmm0
	.loc	11 234 17               # rhs.c:234:17
	movupd	u+171640(%rax), %xmm1
	.loc	11 234 16 is_stmt 0     # rhs.c:234:16
	mulpd	%xmm5, %xmm1
	.loc	11 234 39               # rhs.c:234:39
	movupd	u+174240(%rax), %xmm2
	.loc	11 234 38               # rhs.c:234:38
	mulpd	%xmm6, %xmm2
	.loc	11 234 16               # rhs.c:234:16
	subpd	%xmm1, %xmm2
	.loc	11 235 17 is_stmt 1     # rhs.c:235:17
	movupd	u+176840(%rax), %xmm1
	.loc	11 235 16 is_stmt 0     # rhs.c:235:16
	mulpd	%xmm5, %xmm1
	.loc	11 234 53 is_stmt 1     # rhs.c:234:53
	subpd	%xmm1, %xmm2
	.loc	11 235 35               # rhs.c:235:35
	movupd	u+179440(%rax), %xmm1
	.loc	11 235 33 is_stmt 0     # rhs.c:235:33
	addpd	%xmm2, %xmm1
	.loc	11 233 50 is_stmt 1     # rhs.c:233:50
	mulpd	%xmm4, %xmm1
	.loc	11 233 43 is_stmt 0     # rhs.c:233:43
	subpd	%xmm1, %xmm0
	.loc	11 233 25               # rhs.c:233:25
	movupd	%xmm0, rhs+174240(%rax)
	.loc	11 233 27               # rhs.c:233:27
	movupd	rhs+174256(%rax), %xmm0
	.loc	11 234 17 is_stmt 1     # rhs.c:234:17
	movupd	u+171656(%rax), %xmm1
	.loc	11 234 16 is_stmt 0     # rhs.c:234:16
	mulpd	%xmm5, %xmm1
	.loc	11 234 39               # rhs.c:234:39
	movupd	u+174256(%rax), %xmm2
	.loc	11 234 38               # rhs.c:234:38
	mulpd	%xmm6, %xmm2
	.loc	11 234 16               # rhs.c:234:16
	subpd	%xmm1, %xmm2
	.loc	11 235 17 is_stmt 1     # rhs.c:235:17
	movupd	u+176856(%rax), %xmm1
	.loc	11 235 16 is_stmt 0     # rhs.c:235:16
	mulpd	%xmm5, %xmm1
	.loc	11 234 53 is_stmt 1     # rhs.c:234:53
	subpd	%xmm1, %xmm2
	.loc	11 235 35               # rhs.c:235:35
	movupd	u+179456(%rax), %xmm1
	.loc	11 235 33 is_stmt 0     # rhs.c:235:33
	addpd	%xmm2, %xmm1
	.loc	11 233 50 is_stmt 1     # rhs.c:233:50
	mulpd	%xmm4, %xmm1
	.loc	11 233 43 is_stmt 0     # rhs.c:233:43
	subpd	%xmm1, %xmm0
	.loc	11 233 25               # rhs.c:233:25
	movupd	%xmm0, rhs+174256(%rax)
	.loc	11 233 27               # rhs.c:233:27
	movsd	rhs+174272(%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	u+171672(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 234 16 is_stmt 1     # rhs.c:234:16
	mulsd	%xmm7, %xmm1
	movsd	u+174272(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 234 38 is_stmt 0     # rhs.c:234:38
	mulsd	%xmm8, %xmm2
	.loc	11 234 16               # rhs.c:234:16
	subsd	%xmm1, %xmm2
	movsd	u+176872(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 235 16 is_stmt 1     # rhs.c:235:16
	mulsd	%xmm7, %xmm1
	.loc	11 234 53               # rhs.c:234:53
	subsd	%xmm1, %xmm2
	.loc	11 235 33               # rhs.c:235:33
	addsd	u+179472(%rax), %xmm2
	.loc	11 233 50               # rhs.c:233:50
	mulsd	%xmm3, %xmm2
	.loc	11 233 43 is_stmt 0     # rhs.c:233:43
	subsd	%xmm2, %xmm0
	.loc	11 233 25               # rhs.c:233:25
	movsd	%xmm0, rhs+174272(%rax)
.Ltmp565:
	.loc	11 231 19 is_stmt 1 discriminator 1 # rhs.c:231:19
	incq	%rcx
	addq	$40, %rax
	cmpq	%rdi, %rcx
	jl	.LBB6_138
.Ltmp566:
.LBB6_54:                               # %for.cond1767.preheader
                                        #   in Loop: Header=BB6_50 Depth=1
	movq	384(%rsp), %rbp         # 8-byte Reload
	cmpl	$3, %ebp
	movq	400(%rsp), %r13         # 8-byte Reload
	jl	.LBB6_59
# BB#55:                                # %for.cond1771.preheader.lr.ph
                                        #   in Loop: Header=BB6_50 Depth=1
	testl	%r9d, %r9d
	movq	%r12, %rcx
	movl	$3, %ebx
	jle	.LBB6_64
	.p2align	4, 0x90
.LBB6_56:                               # %for.cond1774.preheader.lr.ph
                                        #   Parent Loop BB6_50 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_57 Depth 3
.Ltmp567:
	.loc	11 239 5 discriminator 1 # rhs.c:239:5
	leaq	1(%rbx), %rsi
	movl	%r9d, %edx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB6_57:                               # %for.cond1774.preheader
                                        #   Parent Loop BB6_50 Depth=1
                                        #     Parent Loop BB6_56 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp568:
	.loc	11 242 29               # rhs.c:242:29
	movupd	rhs+176840(%rax), %xmm0
	.loc	11 243 15               # rhs.c:243:15
	movupd	u+171640(%rax), %xmm1
	.loc	11 243 37 is_stmt 0     # rhs.c:243:37
	movupd	u+174240(%rax), %xmm2
	.loc	11 243 36               # rhs.c:243:36
	mulpd	%xmm5, %xmm2
	.loc	11 243 31               # rhs.c:243:31
	subpd	%xmm2, %xmm1
	.loc	11 244 17 is_stmt 1     # rhs.c:244:17
	movupd	u+176840(%rax), %xmm2
	.loc	11 244 16 is_stmt 0     # rhs.c:244:16
	mulpd	%xmm6, %xmm2
	.loc	11 243 53 is_stmt 1     # rhs.c:243:53
	addpd	%xmm1, %xmm2
	.loc	11 244 37               # rhs.c:244:37
	movupd	u+179440(%rax), %xmm1
	.loc	11 244 36 is_stmt 0     # rhs.c:244:36
	mulpd	%xmm5, %xmm1
	.loc	11 244 31               # rhs.c:244:31
	subpd	%xmm1, %xmm2
	.loc	11 245 15 is_stmt 1     # rhs.c:245:15
	movupd	u+182040(%rax), %xmm1
	.loc	11 244 53               # rhs.c:244:53
	addpd	%xmm2, %xmm1
	.loc	11 242 52               # rhs.c:242:52
	mulpd	%xmm4, %xmm1
	.loc	11 242 45 is_stmt 0     # rhs.c:242:45
	subpd	%xmm1, %xmm0
	.loc	11 242 27               # rhs.c:242:27
	movupd	%xmm0, rhs+176840(%rax)
	.loc	11 242 29               # rhs.c:242:29
	movupd	rhs+176856(%rax), %xmm0
	.loc	11 243 15 is_stmt 1     # rhs.c:243:15
	movupd	u+171656(%rax), %xmm1
	.loc	11 243 37 is_stmt 0     # rhs.c:243:37
	movupd	u+174256(%rax), %xmm2
	.loc	11 243 36               # rhs.c:243:36
	mulpd	%xmm5, %xmm2
	.loc	11 243 31               # rhs.c:243:31
	subpd	%xmm2, %xmm1
	.loc	11 244 17 is_stmt 1     # rhs.c:244:17
	movupd	u+176856(%rax), %xmm2
	.loc	11 244 16 is_stmt 0     # rhs.c:244:16
	mulpd	%xmm6, %xmm2
	.loc	11 243 53 is_stmt 1     # rhs.c:243:53
	addpd	%xmm1, %xmm2
	.loc	11 244 37               # rhs.c:244:37
	movupd	u+179456(%rax), %xmm1
	.loc	11 244 36 is_stmt 0     # rhs.c:244:36
	mulpd	%xmm5, %xmm1
	.loc	11 244 31               # rhs.c:244:31
	subpd	%xmm1, %xmm2
	.loc	11 245 15 is_stmt 1     # rhs.c:245:15
	movupd	u+182056(%rax), %xmm1
	.loc	11 244 53               # rhs.c:244:53
	addpd	%xmm2, %xmm1
	.loc	11 242 52               # rhs.c:242:52
	mulpd	%xmm4, %xmm1
	.loc	11 242 45 is_stmt 0     # rhs.c:242:45
	subpd	%xmm1, %xmm0
	.loc	11 242 27               # rhs.c:242:27
	movupd	%xmm0, rhs+176856(%rax)
	.loc	11 242 29               # rhs.c:242:29
	movsd	rhs+176872(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	11 243 15 is_stmt 1     # rhs.c:243:15
	movsd	u+171672(%rax), %xmm1   # xmm1 = mem[0],zero
	movsd	u+174272(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 243 36 is_stmt 0     # rhs.c:243:36
	mulsd	%xmm7, %xmm2
	.loc	11 243 31               # rhs.c:243:31
	subsd	%xmm2, %xmm1
	movsd	u+176872(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	11 244 16 is_stmt 1     # rhs.c:244:16
	mulsd	%xmm8, %xmm2
	.loc	11 243 53               # rhs.c:243:53
	addsd	%xmm1, %xmm2
	movsd	u+179472(%rax), %xmm1   # xmm1 = mem[0],zero
	.loc	11 244 36               # rhs.c:244:36
	mulsd	%xmm7, %xmm1
	.loc	11 244 31 is_stmt 0     # rhs.c:244:31
	subsd	%xmm1, %xmm2
	.loc	11 244 53               # rhs.c:244:53
	addsd	u+182072(%rax), %xmm2
	.loc	11 242 52 is_stmt 1     # rhs.c:242:52
	mulsd	%xmm3, %xmm2
	.loc	11 242 45 is_stmt 0     # rhs.c:242:45
	subsd	%xmm2, %xmm0
	.loc	11 242 27               # rhs.c:242:27
	movsd	%xmm0, rhs+176872(%rax)
.Ltmp569:
	.loc	11 240 7 is_stmt 1 discriminator 1 # rhs.c:240:7
	addq	$40, %rax
	decl	%edx
	jne	.LBB6_57
.Ltmp570:
# BB#58:                                # %for.inc1852
                                        #   in Loop: Header=BB6_56 Depth=2
	.loc	11 239 5 discriminator 1 # rhs.c:239:5
	addq	$2600, %rcx             # imm = 0xA28
	.loc	11 239 19 is_stmt 0 discriminator 1 # rhs.c:239:19
	cmpq	%rbp, %rbx
	movq	%rsi, %rbx
	jl	.LBB6_56
.Ltmp571:
.LBB6_59:                               # %for.end1854
                                        #   in Loop: Header=BB6_50 Depth=1
	#DEBUG_VALUE: compute_rhs:i <- 1
	testl	%r9d, %r9d
	jle	.LBB6_64
# BB#60:                                # %for.cond1859.preheader.preheader
                                        #   in Loop: Header=BB6_50 Depth=1
.Ltmp572:
	.loc	11 253 27 is_stmt 1     # rhs.c:253:27
	movq	368(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%r12), %rax
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	movq	360(%rsp), %r11         # 8-byte Reload
	.p2align	4, 0x90
.LBB6_61:                               # %for.cond1859.preheader
                                        #   Parent Loop BB6_50 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movupd	rhs+169040(%rax,%rcx), %xmm0
	.loc	11 254 13               # rhs.c:254:13
	leaq	(%r13,%rcx), %rsi
	movupd	-32(%r12,%rsi), %xmm1
	.loc	11 254 35 is_stmt 0     # rhs.c:254:35
	leaq	(%r15,%rcx), %rbx
	movupd	-32(%r12,%rbx), %xmm2
	.loc	11 254 34               # rhs.c:254:34
	mulpd	%xmm5, %xmm2
	.loc	11 254 29               # rhs.c:254:29
	subpd	%xmm2, %xmm1
	.loc	11 255 15 is_stmt 1     # rhs.c:255:15
	movupd	u+169040(%rax,%rcx), %xmm2
	.loc	11 255 14 is_stmt 0     # rhs.c:255:14
	mulpd	%xmm6, %xmm2
	.loc	11 254 51 is_stmt 1     # rhs.c:254:51
	addpd	%xmm1, %xmm2
	.loc	11 255 35               # rhs.c:255:35
	leaq	(%r11,%rcx), %rbp
	movupd	-32(%r12,%rbp), %xmm1
	.loc	11 255 34 is_stmt 0     # rhs.c:255:34
	mulpd	%xmm5, %xmm1
	.loc	11 255 29               # rhs.c:255:29
	subpd	%xmm1, %xmm2
	.loc	11 253 50 is_stmt 1     # rhs.c:253:50
	mulpd	%xmm4, %xmm2
	.loc	11 253 43 is_stmt 0     # rhs.c:253:43
	subpd	%xmm2, %xmm0
	.loc	11 253 25               # rhs.c:253:25
	movupd	%xmm0, rhs+169040(%rax,%rcx)
	.loc	11 253 27               # rhs.c:253:27
	movupd	rhs+169056(%rax,%rcx), %xmm0
	.loc	11 254 13 is_stmt 1     # rhs.c:254:13
	movupd	-16(%r12,%rsi), %xmm1
	.loc	11 254 35 is_stmt 0     # rhs.c:254:35
	movupd	-16(%r12,%rbx), %xmm2
	.loc	11 254 34               # rhs.c:254:34
	mulpd	%xmm5, %xmm2
	.loc	11 254 29               # rhs.c:254:29
	subpd	%xmm2, %xmm1
	.loc	11 255 15 is_stmt 1     # rhs.c:255:15
	movupd	u+169056(%rax,%rcx), %xmm2
	.loc	11 255 14 is_stmt 0     # rhs.c:255:14
	mulpd	%xmm6, %xmm2
	.loc	11 254 51 is_stmt 1     # rhs.c:254:51
	addpd	%xmm1, %xmm2
	.loc	11 255 35               # rhs.c:255:35
	movupd	-16(%r12,%rbp), %xmm1
	.loc	11 255 34 is_stmt 0     # rhs.c:255:34
	mulpd	%xmm5, %xmm1
	.loc	11 255 29               # rhs.c:255:29
	subpd	%xmm1, %xmm2
	.loc	11 253 50 is_stmt 1     # rhs.c:253:50
	mulpd	%xmm4, %xmm2
	.loc	11 253 43 is_stmt 0     # rhs.c:253:43
	subpd	%xmm2, %xmm0
	.loc	11 253 25               # rhs.c:253:25
	movupd	%xmm0, rhs+169056(%rax,%rcx)
	.loc	11 253 27               # rhs.c:253:27
	movsd	rhs+169072(%rax,%rcx), %xmm0 # xmm0 = mem[0],zero
	.loc	11 254 13 is_stmt 1     # rhs.c:254:13
	movsd	(%r12,%rsi), %xmm1      # xmm1 = mem[0],zero
	movsd	(%r12,%rbx), %xmm2      # xmm2 = mem[0],zero
	.loc	11 254 34 is_stmt 0     # rhs.c:254:34
	mulsd	%xmm7, %xmm2
	.loc	11 254 29               # rhs.c:254:29
	subsd	%xmm2, %xmm1
	movsd	u+169072(%rax,%rcx), %xmm2 # xmm2 = mem[0],zero
	.loc	11 255 14 is_stmt 1     # rhs.c:255:14
	mulsd	%xmm8, %xmm2
	.loc	11 254 51               # rhs.c:254:51
	addsd	%xmm1, %xmm2
	movsd	(%r12,%rbp), %xmm1      # xmm1 = mem[0],zero
	.loc	11 255 34               # rhs.c:255:34
	mulsd	%xmm7, %xmm1
	.loc	11 255 29 is_stmt 0     # rhs.c:255:29
	subsd	%xmm1, %xmm2
	.loc	11 253 50 is_stmt 1     # rhs.c:253:50
	mulsd	%xmm3, %xmm2
	.loc	11 253 43 is_stmt 0     # rhs.c:253:43
	subsd	%xmm2, %xmm0
	.loc	11 253 25               # rhs.c:253:25
	movsd	%xmm0, rhs+169072(%rax,%rcx)
.Ltmp573:
	.loc	11 251 19 is_stmt 1 discriminator 1 # rhs.c:251:19
	incq	%rdx
	addq	$40, %rcx
	cmpq	%rdi, %rdx
	.loc	11 251 5 is_stmt 0 discriminator 1 # rhs.c:251:5
	jl	.LBB6_61
.Ltmp574:
# BB#62:                                # %for.end1926
                                        #   in Loop: Header=BB6_50 Depth=1
	testl	%r9d, %r9d
	#DEBUG_VALUE: compute_rhs:i <- 1
	movq	352(%rsp), %rax         # 8-byte Reload
	movq	%r15, %rcx
	movq	376(%rsp), %rdx         # 8-byte Reload
	movl	$0, %esi
	jle	.LBB6_64
	.p2align	4, 0x90
.LBB6_63:                               # %for.cond1930.preheader
                                        #   Parent Loop BB6_50 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp575:
	.loc	11 262 27 is_stmt 1     # rhs.c:262:27
	movupd	rhs+169040(%rdx,%r12), %xmm0
	.loc	11 263 13               # rhs.c:263:13
	movupd	-32(%rcx,%r12), %xmm1
	.loc	11 263 35 is_stmt 0     # rhs.c:263:35
	movupd	-32(%rax,%r12), %xmm2
	.loc	11 263 34               # rhs.c:263:34
	mulpd	%xmm5, %xmm2
	.loc	11 263 29               # rhs.c:263:29
	subpd	%xmm2, %xmm1
	.loc	11 263 57               # rhs.c:263:57
	movupd	u+169040(%rdx,%r12), %xmm2
	.loc	11 263 56               # rhs.c:263:56
	mulpd	%xmm9, %xmm2
	.loc	11 263 51               # rhs.c:263:51
	addpd	%xmm1, %xmm2
	.loc	11 262 50 is_stmt 1     # rhs.c:262:50
	mulpd	%xmm4, %xmm2
	.loc	11 262 43 is_stmt 0     # rhs.c:262:43
	subpd	%xmm2, %xmm0
	.loc	11 262 25               # rhs.c:262:25
	movupd	%xmm0, rhs+169040(%rdx,%r12)
	.loc	11 262 27               # rhs.c:262:27
	movupd	rhs+169056(%rdx,%r12), %xmm0
	.loc	11 263 13 is_stmt 1     # rhs.c:263:13
	movupd	-16(%rcx,%r12), %xmm1
	.loc	11 263 35 is_stmt 0     # rhs.c:263:35
	movupd	-16(%rax,%r12), %xmm2
	.loc	11 263 34               # rhs.c:263:34
	mulpd	%xmm5, %xmm2
	.loc	11 263 29               # rhs.c:263:29
	subpd	%xmm2, %xmm1
	.loc	11 263 57               # rhs.c:263:57
	movupd	u+169056(%rdx,%r12), %xmm2
	.loc	11 263 56               # rhs.c:263:56
	mulpd	%xmm9, %xmm2
	.loc	11 263 51               # rhs.c:263:51
	addpd	%xmm1, %xmm2
	.loc	11 262 50 is_stmt 1     # rhs.c:262:50
	mulpd	%xmm4, %xmm2
	.loc	11 262 43 is_stmt 0     # rhs.c:262:43
	subpd	%xmm2, %xmm0
	.loc	11 262 25               # rhs.c:262:25
	movupd	%xmm0, rhs+169056(%rdx,%r12)
	.loc	11 262 27               # rhs.c:262:27
	movsd	rhs+169072(%rdx,%r12), %xmm0 # xmm0 = mem[0],zero
	.loc	11 263 13 is_stmt 1     # rhs.c:263:13
	movsd	(%rcx,%r12), %xmm1      # xmm1 = mem[0],zero
	movsd	(%rax,%r12), %xmm2      # xmm2 = mem[0],zero
	.loc	11 263 34 is_stmt 0     # rhs.c:263:34
	mulsd	%xmm7, %xmm2
	.loc	11 263 29               # rhs.c:263:29
	subsd	%xmm2, %xmm1
	movsd	u+169072(%rdx,%r12), %xmm2 # xmm2 = mem[0],zero
	.loc	11 263 56               # rhs.c:263:56
	mulsd	%xmm10, %xmm2
	.loc	11 263 51               # rhs.c:263:51
	addsd	%xmm1, %xmm2
	.loc	11 262 50 is_stmt 1     # rhs.c:262:50
	mulsd	%xmm3, %xmm2
	.loc	11 262 43 is_stmt 0     # rhs.c:262:43
	subsd	%xmm2, %xmm0
	.loc	11 262 25               # rhs.c:262:25
	movsd	%xmm0, rhs+169072(%rdx,%r12)
.Ltmp576:
	.loc	11 260 19 is_stmt 1 discriminator 1 # rhs.c:260:19
	incq	%rsi
	addq	$40, %rdx
	addq	$40, %rcx
	addq	$40, %rax
	cmpq	%rdi, %rsi
	.loc	11 260 5 is_stmt 0 discriminator 1 # rhs.c:260:5
	jl	.LBB6_63
.Ltmp577:
.LBB6_64:                               # %for.inc1987
                                        #   in Loop: Header=BB6_50 Depth=1
	movq	408(%rsp), %r13         # 8-byte Reload
	.loc	11 179 3 is_stmt 1 discriminator 1 # rhs.c:179:3
	addq	$33800, %r13            # imm = 0x8408
	addq	$169000, %r12           # imm = 0x29428
	movq	416(%rsp), %rax         # 8-byte Reload
	.loc	11 179 17 is_stmt 0 discriminator 1 # rhs.c:179:17
	cmpq	%r8, %rax
	.loc	11 179 3 discriminator 1 # rhs.c:179:3
	leaq	1(%rax), %rax
	movq	392(%rsp), %rsi         # 8-byte Reload
	jl	.LBB6_50
.Ltmp578:
.LBB6_65:                               # %for.end1989
	.loc	11 267 7 is_stmt 1      # rhs.c:267:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_68
# BB#66:                                # %if.end1992
	.loc	11 267 16 is_stmt 0 discriminator 1 # rhs.c:267:16
	movl	$3, %edi
	callq	timer_stop
.Ltmp579:
	.loc	11 272 7 is_stmt 1      # rhs.c:272:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_68
# BB#67:                                # %if.then1994
	.loc	11 272 16 is_stmt 0 discriminator 1 # rhs.c:272:16
	movl	$4, %edi
	callq	timer_start
.Ltmp580:
.LBB6_68:                               # %for.cond1996.preheader
	.loc	11 273 3 is_stmt 1 discriminator 1 # rhs.c:273:3
	movslq	nz2(%rip), %r9
	.loc	11 273 20 is_stmt 0 discriminator 1 # rhs.c:273:20
	testq	%r9, %r9
	jle	.LBB6_80
# BB#69:                                # %for.cond1999.preheader.lr.ph
.Ltmp581:
	.loc	11 274 22 is_stmt 1 discriminator 1 # rhs.c:274:22
	movl	ny2(%rip), %r8d
.Ltmp582:
	.loc	11 282 11               # rhs.c:282:11
	movsd	tz2(%rip), %xmm9        # xmm9 = mem[0],zero
	.loc	11 284 45               # rhs.c:284:45
	movapd	%xmm9, 48(%rsp)         # 16-byte Spill
	movsd	dz2tz1(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 286 11               # rhs.c:286:11
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	movsd	zzcon2(%rip), %xmm1     # xmm1 = mem[0],zero
	movsd	con43(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	11 296 17               # rhs.c:296:17
	mulsd	%xmm1, %xmm2
	.loc	11 299 57               # rhs.c:299:57
	movsd	c2(%rip), %xmm3         # xmm3 = mem[0],zero
	.loc	11 301 45               # rhs.c:301:45
	movsd	dz5tz1(%rip), %xmm8     # xmm8 = mem[0],zero
.Ltmp583:
	.loc	11 273 3 discriminator 1 # rhs.c:273:3
	movapd	%xmm8, 16(%rsp)         # 16-byte Spill
	movslq	nx2(%rip), %rdx
	leal	1(%r8), %r13d
.Ltmp584:
	.loc	11 280 52               # rhs.c:280:52
	movsd	dz1tz1(%rip), %xmm4     # xmm4 = mem[0],zero
	movapd	%xmm4, %xmm5
	unpcklpd	%xmm1, %xmm5    # xmm5 = xmm5[0],xmm1[0]
	movapd	%xmm5, 80(%rsp)         # 16-byte Spill
	.loc	11 276 16               # rhs.c:276:16
	movapd	%xmm9, %xmm12
	movlhps	%xmm12, %xmm12          # xmm12 = xmm12[0,0]
	.loc	11 289 52               # rhs.c:289:52
	movsd	dz3tz1(%rip), %xmm5     # xmm5 = mem[0],zero
	.loc	11 276 16               # rhs.c:276:16
	movsd	dz4tz1(%rip), %xmm6     # xmm6 = mem[0],zero
	.loc	11 289 52               # rhs.c:289:52
	movapd	%xmm5, %xmm7
	unpcklpd	%xmm6, %xmm7    # xmm7 = xmm7[0],xmm6[0]
	movapd	%xmm7, 32(%rsp)         # 16-byte Spill
	.loc	11 291 18               # rhs.c:291:18
	movapd	%xmm1, %xmm7
	unpcklpd	%xmm2, %xmm7    # xmm7 = xmm7[0],xmm2[0]
	movapd	%xmm7, 320(%rsp)        # 16-byte Spill
	.loc	11 276 16               # rhs.c:276:16
	movq	%rdx, %r12
	andq	$-2, %r12
	movq	%rdx, %r10
	orq	$1, %r10
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movaps	%xmm4, 224(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 176(%rsp)        # 16-byte Spill
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 64(%rsp)         # 16-byte Spill
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movaps	%xmm5, 208(%rsp)        # 16-byte Spill
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	movaps	%xmm6, 192(%rsp)        # 16-byte Spill
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 240(%rsp)        # 16-byte Spill
	movapd	%xmm3, %xmm0
	movapd	%xmm3, %xmm9
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 160(%rsp)        # 16-byte Spill
	movapd	%xmm8, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 144(%rsp)        # 16-byte Spill
	.loc	11 303 11               # rhs.c:303:11
	movsd	zzcon3(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 276 16               # rhs.c:276:16
	movapd	%xmm0, 304(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 128(%rsp)        # 16-byte Spill
	.loc	11 304 11               # rhs.c:304:11
	movsd	zzcon4(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 276 16               # rhs.c:276:16
	movapd	%xmm0, 288(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 112(%rsp)        # 16-byte Spill
	.loc	11 305 11               # rhs.c:305:11
	movsd	zzcon5(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	11 276 16               # rhs.c:276:16
	movapd	%xmm0, 272(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 96(%rsp)         # 16-byte Spill
	.loc	11 308 19               # rhs.c:308:19
	movsd	c1(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	11 276 16               # rhs.c:276:16
	movapd	%xmm0, 256(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 336(%rsp)        # 16-byte Spill
	movl	$1, %r11d
	xorl	%r14d, %r14d
	xorl	%r15d, %r15d
	.p2align	4, 0x90
.LBB6_70:                               # %for.cond1999.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_71 Depth 2
                                        #       Child Loop BB6_74 Depth 3
                                        #       Child Loop BB6_77 Depth 3
	testl	%r8d, %r8d
	movq	%r14, %rbp
	movq	%r15, %rax
	movl	$1, %ecx
	jle	.LBB6_79
	.p2align	4, 0x90
.LBB6_71:                               # %for.cond2002.preheader
                                        #   Parent Loop BB6_70 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_74 Depth 3
                                        #       Child Loop BB6_77 Depth 3
	testl	%edx, %edx
	jle	.LBB6_78
# BB#72:                                # %for.body2004.preheader
                                        #   in Loop: Header=BB6_71 Depth=2
	cmpl	$2, %edx
	movl	$1, %esi
	jb	.LBB6_76
# BB#73:                                # %min.iters.checked4506
                                        #   in Loop: Header=BB6_71 Depth=2
	testq	%r12, %r12
	movq	%r12, %rdi
	movq	%rax, %rbx
	movl	$1, %esi
	je	.LBB6_76
	.p2align	4, 0x90
.LBB6_74:                               # %vector.body4502
                                        #   Parent Loop BB6_70 Depth=1
                                        #     Parent Loop BB6_71 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movupd	ws+34328(%rbx), %xmm11
	movaps	%xmm12, %xmm10
	.loc	11 277 16               # rhs.c:277:16
	movupd	ws+68128(%rbx), %xmm12
	.loc	11 278 16               # rhs.c:278:16
	movupd	ws+528(%rbx), %xmm15
	.loc	11 280 27               # rhs.c:280:27
	movsd	rhs+171640(%rbx,%rbx,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	rhs+171680(%rbx,%rbx,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 281 12               # rhs.c:281:12
	movsd	u+340640(%rbx,%rbx,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+340680(%rbx,%rbx,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 281 34 is_stmt 0     # rhs.c:281:34
	movsd	u+171640(%rbx,%rbx,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+171680(%rbx,%rbx,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 281 33               # rhs.c:281:33
	addpd	%xmm2, %xmm2
	.loc	11 281 28               # rhs.c:281:28
	subpd	%xmm2, %xmm1
	.loc	11 281 50               # rhs.c:281:50
	movsd	u+2640(%rbx,%rbx,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	u+2680(%rbx,%rbx,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 281 48               # rhs.c:281:48
	addpd	%xmm1, %xmm2
	.loc	11 280 52 is_stmt 1     # rhs.c:280:52
	mulpd	224(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	11 280 43 is_stmt 0     # rhs.c:280:43
	addpd	%xmm0, %xmm2
	.loc	11 282 18 is_stmt 1     # rhs.c:282:18
	movsd	u+340664(%rbx,%rbx,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+340704(%rbx,%rbx,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 282 36 is_stmt 0     # rhs.c:282:36
	movsd	u+2664(%rbx,%rbx,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+2704(%rbx,%rbx,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 282 34               # rhs.c:282:34
	movapd	%xmm1, %xmm0
	subpd	%xmm5, %xmm0
	.loc	11 282 15               # rhs.c:282:15
	mulpd	%xmm10, %xmm0
	.loc	11 281 67 is_stmt 1     # rhs.c:281:67
	subpd	%xmm0, %xmm2
	.loc	11 280 25               # rhs.c:280:25
	movlpd	%xmm2, rhs+171640(%rbx,%rbx,4)
	movhpd	%xmm2, rhs+171680(%rbx,%rbx,4)
	.loc	11 284 27               # rhs.c:284:27
	movsd	rhs+171648(%rbx,%rbx,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171688(%rbx,%rbx,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 285 12               # rhs.c:285:12
	movsd	u+340648(%rbx,%rbx,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+340688(%rbx,%rbx,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 285 34 is_stmt 0     # rhs.c:285:34
	movsd	u+171648(%rbx,%rbx,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+171688(%rbx,%rbx,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 285 33               # rhs.c:285:33
	addpd	%xmm3, %xmm3
	.loc	11 285 28               # rhs.c:285:28
	movapd	%xmm0, %xmm4
	subpd	%xmm3, %xmm4
	.loc	11 285 50               # rhs.c:285:50
	movsd	u+2648(%rbx,%rbx,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+2688(%rbx,%rbx,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 285 48               # rhs.c:285:48
	addpd	%xmm3, %xmm4
	.loc	11 284 52 is_stmt 1     # rhs.c:284:52
	mulpd	176(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 284 43 is_stmt 0     # rhs.c:284:43
	addpd	%xmm2, %xmm4
	.loc	11 286 21 is_stmt 1     # rhs.c:286:21
	movupd	us+68128(%rbx), %xmm2
	.loc	11 286 41 is_stmt 0     # rhs.c:286:41
	movupd	us+34328(%rbx), %xmm6
	.loc	11 286 40               # rhs.c:286:40
	addpd	%xmm6, %xmm6
	.loc	11 286 35               # rhs.c:286:35
	subpd	%xmm6, %xmm2
	.loc	11 286 55               # rhs.c:286:55
	movupd	us+528(%rbx), %xmm6
	.loc	11 286 53               # rhs.c:286:53
	addpd	%xmm2, %xmm6
	movapd	64(%rsp), %xmm7         # 16-byte Reload
	.loc	11 286 18               # rhs.c:286:18
	mulpd	%xmm7, %xmm6
	.loc	11 285 67 is_stmt 1     # rhs.c:285:67
	addpd	%xmm4, %xmm6
	.loc	11 287 33               # rhs.c:287:33
	mulpd	%xmm12, %xmm0
	.loc	11 287 55 is_stmt 0     # rhs.c:287:55
	mulpd	%xmm15, %xmm3
	.loc	11 287 38               # rhs.c:287:38
	subpd	%xmm3, %xmm0
	.loc	11 287 15               # rhs.c:287:15
	mulpd	%xmm10, %xmm0
	.loc	11 286 70 is_stmt 1     # rhs.c:286:70
	subpd	%xmm0, %xmm6
	.loc	11 284 25               # rhs.c:284:25
	movlpd	%xmm6, rhs+171648(%rbx,%rbx,4)
	movhpd	%xmm6, rhs+171688(%rbx,%rbx,4)
	.loc	11 289 27               # rhs.c:289:27
	movsd	rhs+171656(%rbx,%rbx,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171696(%rbx,%rbx,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 290 12               # rhs.c:290:12
	movsd	u+340656(%rbx,%rbx,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+340696(%rbx,%rbx,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 290 34 is_stmt 0     # rhs.c:290:34
	movsd	u+171656(%rbx,%rbx,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+171696(%rbx,%rbx,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 290 33               # rhs.c:290:33
	addpd	%xmm3, %xmm3
	.loc	11 290 28               # rhs.c:290:28
	movapd	%xmm0, %xmm4
	subpd	%xmm3, %xmm4
	.loc	11 290 50               # rhs.c:290:50
	movsd	u+2656(%rbx,%rbx,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+2696(%rbx,%rbx,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 290 48               # rhs.c:290:48
	addpd	%xmm3, %xmm4
	.loc	11 289 52 is_stmt 1     # rhs.c:289:52
	mulpd	208(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	11 289 43 is_stmt 0     # rhs.c:289:43
	addpd	%xmm2, %xmm4
	.loc	11 291 21 is_stmt 1     # rhs.c:291:21
	movupd	vs+68128(%rbx), %xmm2
	.loc	11 291 41 is_stmt 0     # rhs.c:291:41
	movupd	vs+34328(%rbx), %xmm6
	.loc	11 291 40               # rhs.c:291:40
	addpd	%xmm6, %xmm6
	.loc	11 291 35               # rhs.c:291:35
	subpd	%xmm6, %xmm2
	.loc	11 291 55               # rhs.c:291:55
	movupd	vs+528(%rbx), %xmm6
	.loc	11 291 53               # rhs.c:291:53
	addpd	%xmm2, %xmm6
	.loc	11 291 18               # rhs.c:291:18
	mulpd	%xmm7, %xmm6
	.loc	11 290 67 is_stmt 1     # rhs.c:290:67
	addpd	%xmm4, %xmm6
	.loc	11 292 33               # rhs.c:292:33
	mulpd	%xmm12, %xmm0
	.loc	11 292 55 is_stmt 0     # rhs.c:292:55
	mulpd	%xmm15, %xmm3
	.loc	11 292 38               # rhs.c:292:38
	subpd	%xmm3, %xmm0
	.loc	11 292 15               # rhs.c:292:15
	mulpd	%xmm10, %xmm0
	.loc	11 291 70 is_stmt 1     # rhs.c:291:70
	subpd	%xmm0, %xmm6
	.loc	11 289 25               # rhs.c:289:25
	movlpd	%xmm6, rhs+171656(%rbx,%rbx,4)
	movhpd	%xmm6, rhs+171696(%rbx,%rbx,4)
	.loc	11 294 27               # rhs.c:294:27
	movsd	rhs+171664(%rbx,%rbx,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171704(%rbx,%rbx,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	11 295 34               # rhs.c:295:34
	movsd	u+171664(%rbx,%rbx,4), %xmm3 # xmm3 = mem[0],zero
	movhpd	u+171704(%rbx,%rbx,4), %xmm3 # xmm3 = xmm3[0],mem[0]
	.loc	11 295 33 is_stmt 0     # rhs.c:295:33
	addpd	%xmm3, %xmm3
	.loc	11 296 31 is_stmt 1     # rhs.c:296:31
	movapd	%xmm12, %xmm0
	.loc	11 297 33               # rhs.c:297:33
	movapd	%xmm12, %xmm6
	mulpd	%xmm1, %xmm6
	.loc	11 295 28               # rhs.c:295:28
	subpd	%xmm3, %xmm1
	.loc	11 295 48 is_stmt 0     # rhs.c:295:48
	addpd	%xmm5, %xmm1
	.loc	11 294 52 is_stmt 1     # rhs.c:294:52
	mulpd	192(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 294 43 is_stmt 0     # rhs.c:294:43
	addpd	%xmm2, %xmm1
	.loc	11 296 36 is_stmt 1     # rhs.c:296:36
	movapd	%xmm11, %xmm2
	addpd	%xmm2, %xmm2
	.loc	11 296 31 is_stmt 0     # rhs.c:296:31
	subpd	%xmm2, %xmm0
	.loc	11 296 42               # rhs.c:296:42
	addpd	%xmm15, %xmm0
	.loc	11 296 24               # rhs.c:296:24
	mulpd	240(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 295 67 is_stmt 1     # rhs.c:295:67
	addpd	%xmm1, %xmm0
	.loc	11 297 55               # rhs.c:297:55
	mulpd	%xmm15, %xmm5
	.loc	11 297 38 is_stmt 0     # rhs.c:297:38
	subpd	%xmm5, %xmm6
	.loc	11 298 18 is_stmt 1     # rhs.c:298:18
	movsd	u+340672(%rbx,%rbx,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	u+340712(%rbx,%rbx,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	11 298 36 is_stmt 0     # rhs.c:298:36
	movupd	square+68128(%rbx), %xmm13
	.loc	11 298 34               # rhs.c:298:34
	movapd	%xmm1, %xmm7
	subpd	%xmm13, %xmm7
	.loc	11 299 18 is_stmt 1     # rhs.c:299:18
	movsd	u+2672(%rbx,%rbx,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	u+2712(%rbx,%rbx,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	11 298 54               # rhs.c:298:54
	subpd	%xmm5, %xmm7
	.loc	11 299 36               # rhs.c:299:36
	movupd	square+528(%rbx), %xmm8
	.loc	11 299 34 is_stmt 0     # rhs.c:299:34
	addpd	%xmm8, %xmm7
	movapd	160(%rsp), %xmm4        # 16-byte Reload
	.loc	11 299 55               # rhs.c:299:55
	mulpd	%xmm4, %xmm7
	.loc	11 297 60 is_stmt 1     # rhs.c:297:60
	addpd	%xmm6, %xmm7
	.loc	11 297 15 is_stmt 0     # rhs.c:297:15
	mulpd	%xmm10, %xmm7
	.loc	11 296 49 is_stmt 1     # rhs.c:296:49
	subpd	%xmm7, %xmm0
	.loc	11 294 25               # rhs.c:294:25
	movlpd	%xmm0, rhs+171664(%rbx,%rbx,4)
	movhpd	%xmm0, rhs+171704(%rbx,%rbx,4)
	.loc	11 301 27               # rhs.c:301:27
	movsd	rhs+171672(%rbx,%rbx,4), %xmm6 # xmm6 = mem[0],zero
	movhpd	rhs+171712(%rbx,%rbx,4), %xmm6 # xmm6 = xmm6[0],mem[0]
	.loc	11 302 34               # rhs.c:302:34
	movsd	u+171672(%rbx,%rbx,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	u+171712(%rbx,%rbx,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	11 302 33 is_stmt 0     # rhs.c:302:33
	addpd	%xmm0, %xmm0
	.loc	11 302 28               # rhs.c:302:28
	movapd	%xmm1, %xmm7
	subpd	%xmm0, %xmm7
	.loc	11 302 48               # rhs.c:302:48
	addpd	%xmm5, %xmm7
	.loc	11 301 52 is_stmt 1     # rhs.c:301:52
	mulpd	144(%rsp), %xmm7        # 16-byte Folded Reload
	.loc	11 301 43 is_stmt 0     # rhs.c:301:43
	addpd	%xmm6, %xmm7
	.loc	11 303 21 is_stmt 1     # rhs.c:303:21
	movupd	qs+68128(%rbx), %xmm3
	.loc	11 303 41 is_stmt 0     # rhs.c:303:41
	movupd	qs+34328(%rbx), %xmm6
	.loc	11 303 40               # rhs.c:303:40
	addpd	%xmm6, %xmm6
	.loc	11 303 35               # rhs.c:303:35
	subpd	%xmm6, %xmm3
	.loc	11 303 55               # rhs.c:303:55
	movupd	qs+528(%rbx), %xmm6
	.loc	11 303 53               # rhs.c:303:53
	addpd	%xmm3, %xmm6
	.loc	11 303 18               # rhs.c:303:18
	mulpd	128(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	11 302 67 is_stmt 1     # rhs.c:302:67
	addpd	%xmm7, %xmm6
	.loc	11 304 39               # rhs.c:304:39
	mulpd	%xmm11, %xmm2
	.loc	11 305 37               # rhs.c:305:37
	movupd	rho_i+68128(%rbx), %xmm7
	.loc	11 305 36 is_stmt 0     # rhs.c:305:36
	mulpd	%xmm1, %xmm7
	movapd	336(%rsp), %xmm3        # 16-byte Reload
	.loc	11 308 21 is_stmt 1     # rhs.c:308:21
	mulpd	%xmm3, %xmm1
	.loc	11 308 42 is_stmt 0     # rhs.c:308:42
	mulpd	%xmm4, %xmm13
	.loc	11 308 38               # rhs.c:308:38
	subpd	%xmm13, %xmm1
	.loc	11 308 61               # rhs.c:308:61
	mulpd	%xmm12, %xmm1
	.loc	11 304 24 is_stmt 1     # rhs.c:304:24
	mulpd	%xmm12, %xmm12
	.loc	11 304 29 is_stmt 0     # rhs.c:304:29
	subpd	%xmm2, %xmm12
	.loc	11 307 37 is_stmt 1     # rhs.c:307:37
	movupd	rho_i+528(%rbx), %xmm2
	.loc	11 307 36 is_stmt 0     # rhs.c:307:36
	mulpd	%xmm5, %xmm2
	.loc	11 309 21 is_stmt 1     # rhs.c:309:21
	mulpd	%xmm3, %xmm5
	.loc	11 309 42 is_stmt 0     # rhs.c:309:42
	mulpd	%xmm4, %xmm8
	.loc	11 309 38               # rhs.c:309:38
	subpd	%xmm8, %xmm5
	.loc	11 309 61               # rhs.c:309:61
	mulpd	%xmm15, %xmm5
	.loc	11 304 50 is_stmt 1     # rhs.c:304:50
	mulpd	%xmm15, %xmm15
	.loc	11 304 45 is_stmt 0     # rhs.c:304:45
	addpd	%xmm12, %xmm15
	movapd	%xmm10, %xmm12
	.loc	11 304 18               # rhs.c:304:18
	mulpd	112(%rsp), %xmm15       # 16-byte Folded Reload
	.loc	11 303 70 is_stmt 1     # rhs.c:303:70
	addpd	%xmm6, %xmm15
	.loc	11 306 37               # rhs.c:306:37
	movupd	rho_i+34328(%rbx), %xmm3
	.loc	11 306 36 is_stmt 0     # rhs.c:306:36
	mulpd	%xmm0, %xmm3
	.loc	11 305 54 is_stmt 1     # rhs.c:305:54
	subpd	%xmm3, %xmm7
	.loc	11 306 52               # rhs.c:306:52
	addpd	%xmm7, %xmm2
	.loc	11 305 18               # rhs.c:305:18
	mulpd	96(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	11 304 56               # rhs.c:304:56
	addpd	%xmm15, %xmm2
	.loc	11 308 66               # rhs.c:308:66
	subpd	%xmm5, %xmm1
	.loc	11 308 15 is_stmt 0     # rhs.c:308:15
	mulpd	%xmm12, %xmm1
	.loc	11 307 55 is_stmt 1     # rhs.c:307:55
	subpd	%xmm1, %xmm2
	.loc	11 301 25               # rhs.c:301:25
	movlpd	%xmm2, rhs+171672(%rbx,%rbx,4)
	movhpd	%xmm2, rhs+171712(%rbx,%rbx,4)
	.loc	11 276 16               # rhs.c:276:16
	addq	$16, %rbx
	addq	$-2, %rdi
	jne	.LBB6_74
# BB#75:                                # %middle.block4503
                                        #   in Loop: Header=BB6_71 Depth=2
	cmpq	%r12, %rdx
	movq	%r10, %rsi
	je	.LBB6_78
	.p2align	4, 0x90
.LBB6_76:                               # %scalar.ph4504
                                        #   in Loop: Header=BB6_71 Depth=2
	leaq	(,%rsi,8), %rdi
	leaq	(%rdi,%rdi,4), %rdi
	movq	%rbp, %rbx
	.p2align	4, 0x90
.LBB6_77:                               # %for.body2004
                                        #   Parent Loop BB6_70 Depth=1
                                        #     Parent Loop BB6_71 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	ws+34320(%rax,%rsi,8), %xmm14 # xmm14 = mem[0],zero
.Ltmp585:
	#DEBUG_VALUE: compute_rhs:wijk <- %XMM14
	.loc	11 277 16               # rhs.c:277:16
	movsd	ws+68120(%rax,%rsi,8), %xmm15 # xmm15 = mem[0],zero
.Ltmp586:
	#DEBUG_VALUE: compute_rhs:wp1 <- %XMM15
	.loc	11 278 16               # rhs.c:278:16
	movsd	ws+520(%rax,%rsi,8), %xmm11 # xmm11 = mem[0],zero
.Ltmp587:
	#DEBUG_VALUE: compute_rhs:wm1 <- %XMM11
	.loc	11 285 12               # rhs.c:285:12
	movsd	u+340608(%rdi,%rbx), %xmm1 # xmm1 = mem[0],zero
	movsd	u+171608(%rdi,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	11 285 33 is_stmt 0     # rhs.c:285:33
	mulsd	.LCPI6_2(%rip), %xmm0
	.loc	11 285 28               # rhs.c:285:28
	addsd	%xmm1, %xmm0
	.loc	11 285 50               # rhs.c:285:50
	movsd	u+2608(%rdi,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	11 285 48               # rhs.c:285:48
	addsd	%xmm3, %xmm0
	.loc	11 284 52 is_stmt 1     # rhs.c:284:52
	mulsd	(%rsp), %xmm0           # 16-byte Folded Reload
	.loc	11 284 43 is_stmt 0     # rhs.c:284:43
	addsd	rhs+171608(%rdi,%rbx), %xmm0
	.loc	11 281 33 is_stmt 1     # rhs.c:281:33
	movsd	u+171600(%rdi,%rbx), %xmm2 # xmm2 = mem[0],zero
	movhpd	us+34320(%rax,%rsi,8), %xmm2 # xmm2 = xmm2[0],mem[0]
	addpd	%xmm2, %xmm2
	.loc	11 281 28 is_stmt 0     # rhs.c:281:28
	movsd	u+340600(%rdi,%rbx), %xmm4 # xmm4 = mem[0],zero
	movhpd	us+68120(%rax,%rsi,8), %xmm4 # xmm4 = xmm4[0],mem[0]
	subpd	%xmm2, %xmm4
	.loc	11 281 48               # rhs.c:281:48
	movsd	u+2600(%rdi,%rbx), %xmm2 # xmm2 = mem[0],zero
	movhpd	us+520(%rax,%rsi,8), %xmm2 # xmm2 = xmm2[0],mem[0]
	addpd	%xmm4, %xmm2
	.loc	11 280 52 is_stmt 1     # rhs.c:280:52
	mulpd	80(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	11 280 43 is_stmt 0     # rhs.c:280:43
	movsd	rhs+171600(%rdi,%rbx), %xmm4 # xmm4 = mem[0],zero
	unpcklpd	%xmm0, %xmm4    # xmm4 = xmm4[0],xmm0[0]
	addpd	%xmm2, %xmm4
	.loc	11 287 33 is_stmt 1     # rhs.c:287:33
	mulsd	%xmm15, %xmm1
	.loc	11 287 55 is_stmt 0     # rhs.c:287:55
	mulsd	%xmm11, %xmm3
	.loc	11 290 12 is_stmt 1     # rhs.c:290:12
	movupd	u+340616(%rdi,%rbx), %xmm0
	.loc	11 282 34               # rhs.c:282:34
	movapd	%xmm0, %xmm7
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	movapd	%xmm7, %xmm5
	unpcklpd	%xmm1, %xmm5    # xmm5 = xmm5[0],xmm1[0]
	.loc	11 290 50               # rhs.c:290:50
	movupd	u+2616(%rdi,%rbx), %xmm1
	.loc	11 282 34               # rhs.c:282:34
	movapd	%xmm1, %xmm2
	shufpd	$1, %xmm2, %xmm2        # xmm2 = xmm2[1,0]
	movapd	%xmm2, %xmm6
	unpcklpd	%xmm3, %xmm6    # xmm6 = xmm6[0],xmm3[0]
	subpd	%xmm6, %xmm5
	.loc	11 282 15 is_stmt 0     # rhs.c:282:15
	mulpd	%xmm12, %xmm5
	.loc	11 281 67 is_stmt 1     # rhs.c:281:67
	subpd	%xmm5, %xmm4
	.loc	11 280 25               # rhs.c:280:25
	movupd	%xmm4, rhs+171600(%rdi,%rbx)
	.loc	11 292 33               # rhs.c:292:33
	movapd	%xmm15, %xmm5
	mulsd	%xmm0, %xmm5
	.loc	11 289 27               # rhs.c:289:27
	movupd	rhs+171616(%rdi,%rbx), %xmm3
	.loc	11 290 34               # rhs.c:290:34
	movupd	u+171616(%rdi,%rbx), %xmm4
	.loc	11 290 33 is_stmt 0     # rhs.c:290:33
	addpd	%xmm4, %xmm4
	.loc	11 290 28               # rhs.c:290:28
	subpd	%xmm4, %xmm0
	.loc	11 290 48               # rhs.c:290:48
	addpd	%xmm1, %xmm0
	.loc	11 289 52 is_stmt 1     # rhs.c:289:52
	mulpd	32(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	11 289 43 is_stmt 0     # rhs.c:289:43
	addpd	%xmm3, %xmm0
	.loc	11 291 40 is_stmt 1     # rhs.c:291:40
	movsd	vs+34320(%rax,%rsi,8), %xmm6 # xmm6 = mem[0],zero
	unpcklpd	%xmm14, %xmm6   # xmm6 = xmm6[0],xmm14[0]
	addpd	%xmm6, %xmm6
	.loc	11 291 35 is_stmt 0     # rhs.c:291:35
	movsd	vs+68120(%rax,%rsi,8), %xmm3 # xmm3 = mem[0],zero
	unpcklpd	%xmm15, %xmm3   # xmm3 = xmm3[0],xmm15[0]
	subpd	%xmm6, %xmm3
	.loc	11 291 53               # rhs.c:291:53
	movsd	vs+520(%rax,%rsi,8), %xmm13 # xmm13 = mem[0],zero
	unpcklpd	%xmm11, %xmm13  # xmm13 = xmm13[0],xmm11[0]
	addpd	%xmm3, %xmm13
	.loc	11 291 18               # rhs.c:291:18
	mulpd	320(%rsp), %xmm13       # 16-byte Folded Reload
	.loc	11 290 67 is_stmt 1     # rhs.c:290:67
	addpd	%xmm0, %xmm13
	.loc	11 297 33               # rhs.c:297:33
	mulsd	%xmm15, %xmm7
	.loc	11 297 55 is_stmt 0     # rhs.c:297:55
	mulsd	%xmm11, %xmm2
	.loc	11 297 38               # rhs.c:297:38
	subsd	%xmm2, %xmm7
	.loc	11 298 18 is_stmt 1     # rhs.c:298:18
	movsd	u+340632(%rdi,%rbx), %xmm8 # xmm8 = mem[0],zero
	.loc	11 298 36 is_stmt 0     # rhs.c:298:36
	movsd	square+68120(%rax,%rsi,8), %xmm4 # xmm4 = mem[0],zero
	.loc	11 298 34               # rhs.c:298:34
	movapd	%xmm8, %xmm2
	subsd	%xmm4, %xmm2
	.loc	11 299 18 is_stmt 1     # rhs.c:299:18
	movsd	u+2632(%rdi,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	11 298 54               # rhs.c:298:54
	subsd	%xmm3, %xmm2
	.loc	11 299 36               # rhs.c:299:36
	movsd	square+520(%rax,%rsi,8), %xmm10 # xmm10 = mem[0],zero
	.loc	11 299 34 is_stmt 0     # rhs.c:299:34
	addsd	%xmm10, %xmm2
	movapd	%xmm12, %xmm0
	.loc	11 292 55 is_stmt 1     # rhs.c:292:55
	movapd	%xmm11, %xmm12
	unpcklpd	%xmm2, %xmm12   # xmm12 = xmm12[0],xmm2[0]
	unpcklpd	%xmm9, %xmm1    # xmm1 = xmm1[0],xmm9[0]
	mulpd	%xmm12, %xmm1
	movapd	%xmm0, %xmm12
	.loc	11 292 38 is_stmt 0     # rhs.c:292:38
	unpcklpd	%xmm7, %xmm5    # xmm5 = xmm5[0],xmm7[0]
	movapd	%xmm5, %xmm2
	subpd	%xmm1, %xmm2
	addpd	%xmm1, %xmm5
	movsd	%xmm2, %xmm5            # xmm5 = xmm2[0],xmm5[1]
	.loc	11 292 15               # rhs.c:292:15
	mulpd	%xmm12, %xmm5
	.loc	11 291 70 is_stmt 1     # rhs.c:291:70
	subpd	%xmm5, %xmm13
	.loc	11 289 25               # rhs.c:289:25
	movupd	%xmm13, rhs+171616(%rdi,%rbx)
	.loc	11 302 34               # rhs.c:302:34
	movsd	u+171632(%rdi,%rbx), %xmm7 # xmm7 = mem[0],zero
	.loc	11 302 33 is_stmt 0     # rhs.c:302:33
	addsd	%xmm7, %xmm7
	.loc	11 303 21 is_stmt 1     # rhs.c:303:21
	movsd	qs+68120(%rax,%rsi,8), %xmm1 # xmm1 = mem[0],zero
	.loc	11 303 41 is_stmt 0     # rhs.c:303:41
	movsd	qs+34320(%rax,%rsi,8), %xmm2 # xmm2 = mem[0],zero
	.loc	11 303 40               # rhs.c:303:40
	addsd	%xmm2, %xmm2
	.loc	11 303 35               # rhs.c:303:35
	subsd	%xmm2, %xmm1
	.loc	11 302 28 is_stmt 1     # rhs.c:302:28
	movapd	%xmm8, %xmm2
	subsd	%xmm7, %xmm2
	.loc	11 302 48 is_stmt 0     # rhs.c:302:48
	addsd	%xmm3, %xmm2
	.loc	11 301 52 is_stmt 1     # rhs.c:301:52
	mulsd	16(%rsp), %xmm2         # 16-byte Folded Reload
	.loc	11 301 43 is_stmt 0     # rhs.c:301:43
	addsd	rhs+171632(%rdi,%rbx), %xmm2
	.loc	11 303 53 is_stmt 1     # rhs.c:303:53
	addsd	qs+520(%rax,%rsi,8), %xmm1
	.loc	11 303 18 is_stmt 0     # rhs.c:303:18
	mulsd	304(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	11 302 67 is_stmt 1     # rhs.c:302:67
	addsd	%xmm2, %xmm1
	.loc	11 304 39               # rhs.c:304:39
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	mulsd	%xmm14, %xmm6
	movsd	rho_i+68120(%rax,%rsi,8), %xmm5 # xmm5 = mem[0],zero
	.loc	11 305 36               # rhs.c:305:36
	mulsd	%xmm8, %xmm5
	movapd	256(%rsp), %xmm2        # 16-byte Reload
	.loc	11 308 21               # rhs.c:308:21
	mulsd	%xmm2, %xmm8
	.loc	11 308 42 is_stmt 0     # rhs.c:308:42
	mulsd	%xmm9, %xmm4
	.loc	11 308 38               # rhs.c:308:38
	subsd	%xmm4, %xmm8
	.loc	11 308 61               # rhs.c:308:61
	mulsd	%xmm15, %xmm8
	.loc	11 304 24 is_stmt 1     # rhs.c:304:24
	mulsd	%xmm15, %xmm15
.Ltmp588:
	.loc	11 304 29 is_stmt 0     # rhs.c:304:29
	subsd	%xmm6, %xmm15
	movsd	rho_i+520(%rax,%rsi,8), %xmm0 # xmm0 = mem[0],zero
	.loc	11 307 36 is_stmt 1     # rhs.c:307:36
	mulsd	%xmm3, %xmm0
	.loc	11 309 21               # rhs.c:309:21
	mulsd	%xmm2, %xmm3
	.loc	11 309 42 is_stmt 0     # rhs.c:309:42
	mulsd	%xmm9, %xmm10
	.loc	11 309 38               # rhs.c:309:38
	subsd	%xmm10, %xmm3
	.loc	11 309 61               # rhs.c:309:61
	mulsd	%xmm11, %xmm3
	.loc	11 304 50 is_stmt 1     # rhs.c:304:50
	mulsd	%xmm11, %xmm11
.Ltmp589:
	.loc	11 304 45 is_stmt 0     # rhs.c:304:45
	addsd	%xmm15, %xmm11
	.loc	11 304 18               # rhs.c:304:18
	mulsd	288(%rsp), %xmm11       # 16-byte Folded Reload
	.loc	11 303 70 is_stmt 1     # rhs.c:303:70
	addsd	%xmm1, %xmm11
	.loc	11 306 36               # rhs.c:306:36
	mulsd	rho_i+34320(%rax,%rsi,8), %xmm7
	.loc	11 305 54               # rhs.c:305:54
	subsd	%xmm7, %xmm5
	.loc	11 306 52               # rhs.c:306:52
	addsd	%xmm5, %xmm0
	.loc	11 305 18               # rhs.c:305:18
	mulsd	272(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	11 304 56               # rhs.c:304:56
	addsd	%xmm11, %xmm0
	.loc	11 308 66               # rhs.c:308:66
	subsd	%xmm3, %xmm8
	.loc	11 308 15 is_stmt 0     # rhs.c:308:15
	mulsd	48(%rsp), %xmm8         # 16-byte Folded Reload
	.loc	11 307 55 is_stmt 1     # rhs.c:307:55
	subsd	%xmm8, %xmm0
	.loc	11 301 25               # rhs.c:301:25
	movsd	%xmm0, rhs+171632(%rdi,%rbx)
.Ltmp590:
	.loc	11 275 21 discriminator 1 # rhs.c:275:21
	addq	$40, %rbx
	cmpq	%rdx, %rsi
	.loc	11 275 7 is_stmt 0 discriminator 1 # rhs.c:275:7
	leaq	1(%rsi), %rsi
	jl	.LBB6_77
.Ltmp591:
.LBB6_78:                               # %for.inc2536
                                        #   in Loop: Header=BB6_71 Depth=2
	.loc	11 274 5 is_stmt 1 discriminator 1 # rhs.c:274:5
	incq	%rcx
	addq	$520, %rax              # imm = 0x208
	addq	$2600, %rbp             # imm = 0xA28
	cmpl	%r13d, %ecx
	jne	.LBB6_71
.Ltmp592:
.LBB6_79:                               # %for.inc2539
                                        #   in Loop: Header=BB6_70 Depth=1
	.loc	11 273 3 discriminator 1 # rhs.c:273:3
	addq	$33800, %r15            # imm = 0x8408
	addq	$169000, %r14           # imm = 0x29428
	.loc	11 273 17 is_stmt 0 discriminator 1 # rhs.c:273:17
	cmpq	%r9, %r11
	.loc	11 273 3 discriminator 1 # rhs.c:273:3
	leaq	1(%r11), %r11
	jl	.LBB6_70
.Ltmp593:
.LBB6_80:                               # %for.cond2542.preheader
	.loc	11 331 27 is_stmt 1     # rhs.c:331:27
	movslq	ny2(%rip), %rax
.Ltmp594:
	.loc	11 328 20 discriminator 1 # rhs.c:328:20
	testq	%rax, %rax
	jle	.LBB6_92
.Ltmp595:
# BB#81:                                # %for.cond2545.preheader.lr.ph
	.loc	11 319 22 discriminator 1 # rhs.c:319:22
	movl	nx2(%rip), %ecx
	.loc	11 319 19 is_stmt 0 discriminator 1 # rhs.c:319:19
	testl	%ecx, %ecx
	jle	.LBB6_92
# BB#82:                                # %for.cond2548.preheader.lr.ph.preheader
.Ltmp596:
	.loc	11 321 44 is_stmt 1     # rhs.c:321:44
	movsd	dssp(%rip), %xmm2       # xmm2 = mem[0],zero
	.loc	11 321 49 is_stmt 0     # rhs.c:321:49
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movl	$1, %edx
	movl	$171640, %ebp           # imm = 0x29E78
	.loc	11 322 15 is_stmt 1     # rhs.c:322:15
	movapd	.LCPI6_3(%rip), %xmm4   # xmm4 = [5.000000e+00,5.000000e+00]
	.loc	11 322 35 is_stmt 0     # rhs.c:322:35
	movapd	.LCPI6_4(%rip), %xmm0   # xmm0 = [4.000000e+00,4.000000e+00]
	movsd	.LCPI6_5(%rip), %xmm5   # xmm5 = mem[0],zero
	movsd	.LCPI6_6(%rip), %xmm8   # xmm8 = mem[0],zero
	.p2align	4, 0x90
.LBB6_83:                               # %for.cond2548.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_84 Depth 2
	movl	%ecx, %edi
	movq	%rbp, %rsi
	.p2align	4, 0x90
.LBB6_84:                               # %for.cond2548.preheader
                                        #   Parent Loop BB6_83 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 321 27 is_stmt 1     # rhs.c:321:27
	movupd	rhs(%rsi), %xmm6
	.loc	11 322 16               # rhs.c:322:16
	movupd	u(%rsi), %xmm7
	.loc	11 322 15 is_stmt 0     # rhs.c:322:15
	mulpd	%xmm4, %xmm7
	.loc	11 322 36               # rhs.c:322:36
	movupd	u+169000(%rsi), %xmm1
	.loc	11 322 35               # rhs.c:322:35
	mulpd	%xmm0, %xmm1
	.loc	11 322 30               # rhs.c:322:30
	subpd	%xmm1, %xmm7
	.loc	11 322 54               # rhs.c:322:54
	movupd	u+338000(%rsi), %xmm1
	.loc	11 322 52               # rhs.c:322:52
	addpd	%xmm7, %xmm1
	.loc	11 321 49 is_stmt 1     # rhs.c:321:49
	mulpd	%xmm3, %xmm1
	.loc	11 321 42 is_stmt 0     # rhs.c:321:42
	subpd	%xmm1, %xmm6
	.loc	11 321 25               # rhs.c:321:25
	movupd	%xmm6, rhs(%rsi)
	.loc	11 321 27               # rhs.c:321:27
	movupd	rhs+16(%rsi), %xmm1
	.loc	11 322 16 is_stmt 1     # rhs.c:322:16
	movupd	u+16(%rsi), %xmm6
	.loc	11 322 15 is_stmt 0     # rhs.c:322:15
	mulpd	%xmm4, %xmm6
	.loc	11 322 36               # rhs.c:322:36
	movupd	u+169016(%rsi), %xmm7
	.loc	11 322 35               # rhs.c:322:35
	mulpd	%xmm0, %xmm7
	.loc	11 322 30               # rhs.c:322:30
	subpd	%xmm7, %xmm6
	.loc	11 322 54               # rhs.c:322:54
	movupd	u+338016(%rsi), %xmm7
	.loc	11 322 52               # rhs.c:322:52
	addpd	%xmm6, %xmm7
	.loc	11 321 49 is_stmt 1     # rhs.c:321:49
	mulpd	%xmm3, %xmm7
	.loc	11 321 42 is_stmt 0     # rhs.c:321:42
	subpd	%xmm7, %xmm1
	.loc	11 321 25               # rhs.c:321:25
	movupd	%xmm1, rhs+16(%rsi)
	.loc	11 321 27               # rhs.c:321:27
	movsd	rhs+32(%rsi), %xmm1     # xmm1 = mem[0],zero
	movsd	u+32(%rsi), %xmm6       # xmm6 = mem[0],zero
	.loc	11 322 15 is_stmt 1     # rhs.c:322:15
	mulsd	%xmm5, %xmm6
	movsd	u+169032(%rsi), %xmm7   # xmm7 = mem[0],zero
	.loc	11 322 35 is_stmt 0     # rhs.c:322:35
	mulsd	%xmm8, %xmm7
	.loc	11 322 30               # rhs.c:322:30
	subsd	%xmm7, %xmm6
	.loc	11 322 52               # rhs.c:322:52
	addsd	u+338032(%rsi), %xmm6
	.loc	11 321 49 is_stmt 1     # rhs.c:321:49
	mulsd	%xmm2, %xmm6
	.loc	11 321 42 is_stmt 0     # rhs.c:321:42
	subsd	%xmm6, %xmm1
	.loc	11 321 25               # rhs.c:321:25
	movsd	%xmm1, rhs+32(%rsi)
.Ltmp597:
	.loc	11 319 5 is_stmt 1 discriminator 1 # rhs.c:319:5
	addq	$40, %rsi
	decl	%edi
	jne	.LBB6_84
.Ltmp598:
# BB#85:                                # %for.inc2605
                                        #   in Loop: Header=BB6_83 Depth=1
	.loc	11 318 3 discriminator 1 # rhs.c:318:3
	addq	$2600, %rbp             # imm = 0xA28
	.loc	11 318 17 is_stmt 0 discriminator 1 # rhs.c:318:17
	cmpq	%rax, %rdx
	.loc	11 318 3 discriminator 1 # rhs.c:318:3
	leaq	1(%rdx), %rdx
	jl	.LBB6_83
.Ltmp599:
# BB#86:                                # %for.cond2608.preheader
	testl	%eax, %eax
	jle	.LBB6_92
# BB#87:                                # %for.cond2611.preheader.lr.ph
.Ltmp600:
	.loc	11 329 22 is_stmt 1 discriminator 1 # rhs.c:329:22
	movl	nx2(%rip), %ecx
	.loc	11 329 19 is_stmt 0 discriminator 1 # rhs.c:329:19
	testl	%ecx, %ecx
	jle	.LBB6_92
# BB#88:                                # %for.cond2614.preheader.lr.ph.preheader
.Ltmp601:
	.loc	11 331 45 is_stmt 1     # rhs.c:331:45
	movsd	dssp(%rip), %xmm2       # xmm2 = mem[0],zero
	.loc	11 331 50 is_stmt 0     # rhs.c:331:50
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movl	$1, %edx
	xorl	%ebp, %ebp
	.loc	11 332 38 is_stmt 1     # rhs.c:332:38
	movapd	.LCPI6_8(%rip), %xmm4   # xmm4 = [6.000000e+00,6.000000e+00]
	movsd	.LCPI6_7(%rip), %xmm5   # xmm5 = mem[0],zero
	.p2align	4, 0x90
.LBB6_89:                               # %for.cond2614.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_90 Depth 2
	movl	%ecx, %edi
	movq	%rbp, %rsi
	.p2align	4, 0x90
.LBB6_90:                               # %for.cond2614.preheader
                                        #   Parent Loop BB6_89 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 331 27               # rhs.c:331:27
	movupd	rhs+340640(%rsi), %xmm1
	.loc	11 332 17               # rhs.c:332:17
	movupd	u+171640(%rsi), %xmm6
	.loc	11 332 16 is_stmt 0     # rhs.c:332:16
	mulpd	%xmm0, %xmm6
	.loc	11 332 39               # rhs.c:332:39
	movupd	u+340640(%rsi), %xmm7
	.loc	11 332 38               # rhs.c:332:38
	mulpd	%xmm4, %xmm7
	.loc	11 332 16               # rhs.c:332:16
	subpd	%xmm6, %xmm7
	.loc	11 333 17 is_stmt 1     # rhs.c:333:17
	movupd	u+509640(%rsi), %xmm6
	.loc	11 333 16 is_stmt 0     # rhs.c:333:16
	mulpd	%xmm0, %xmm6
	.loc	11 332 53 is_stmt 1     # rhs.c:332:53
	subpd	%xmm6, %xmm7
	.loc	11 333 35               # rhs.c:333:35
	movupd	u+678640(%rsi), %xmm6
	.loc	11 333 33 is_stmt 0     # rhs.c:333:33
	addpd	%xmm7, %xmm6
	.loc	11 331 50 is_stmt 1     # rhs.c:331:50
	mulpd	%xmm3, %xmm6
	.loc	11 331 43 is_stmt 0     # rhs.c:331:43
	subpd	%xmm6, %xmm1
	.loc	11 331 25               # rhs.c:331:25
	movupd	%xmm1, rhs+340640(%rsi)
	.loc	11 331 27               # rhs.c:331:27
	movupd	rhs+340656(%rsi), %xmm1
	.loc	11 332 17 is_stmt 1     # rhs.c:332:17
	movupd	u+171656(%rsi), %xmm6
	.loc	11 332 16 is_stmt 0     # rhs.c:332:16
	mulpd	%xmm0, %xmm6
	.loc	11 332 39               # rhs.c:332:39
	movupd	u+340656(%rsi), %xmm7
	.loc	11 332 38               # rhs.c:332:38
	mulpd	%xmm4, %xmm7
	.loc	11 332 16               # rhs.c:332:16
	subpd	%xmm6, %xmm7
	.loc	11 333 17 is_stmt 1     # rhs.c:333:17
	movupd	u+509656(%rsi), %xmm6
	.loc	11 333 16 is_stmt 0     # rhs.c:333:16
	mulpd	%xmm0, %xmm6
	.loc	11 332 53 is_stmt 1     # rhs.c:332:53
	subpd	%xmm6, %xmm7
	.loc	11 333 35               # rhs.c:333:35
	movupd	u+678656(%rsi), %xmm6
	.loc	11 333 33 is_stmt 0     # rhs.c:333:33
	addpd	%xmm7, %xmm6
	.loc	11 331 50 is_stmt 1     # rhs.c:331:50
	mulpd	%xmm3, %xmm6
	.loc	11 331 43 is_stmt 0     # rhs.c:331:43
	subpd	%xmm6, %xmm1
	.loc	11 331 25               # rhs.c:331:25
	movupd	%xmm1, rhs+340656(%rsi)
	.loc	11 331 27               # rhs.c:331:27
	movsd	rhs+340672(%rsi), %xmm1 # xmm1 = mem[0],zero
	movsd	u+171672(%rsi), %xmm6   # xmm6 = mem[0],zero
	.loc	11 332 16 is_stmt 1     # rhs.c:332:16
	mulsd	%xmm8, %xmm6
	movsd	u+340672(%rsi), %xmm7   # xmm7 = mem[0],zero
	.loc	11 332 38 is_stmt 0     # rhs.c:332:38
	mulsd	%xmm5, %xmm7
	.loc	11 332 16               # rhs.c:332:16
	subsd	%xmm6, %xmm7
	movsd	u+509672(%rsi), %xmm6   # xmm6 = mem[0],zero
	.loc	11 333 16 is_stmt 1     # rhs.c:333:16
	mulsd	%xmm8, %xmm6
	.loc	11 332 53               # rhs.c:332:53
	subsd	%xmm6, %xmm7
	.loc	11 333 33               # rhs.c:333:33
	addsd	u+678672(%rsi), %xmm7
	.loc	11 331 50               # rhs.c:331:50
	mulsd	%xmm2, %xmm7
	.loc	11 331 43 is_stmt 0     # rhs.c:331:43
	subsd	%xmm7, %xmm1
	.loc	11 331 25               # rhs.c:331:25
	movsd	%xmm1, rhs+340672(%rsi)
.Ltmp602:
	.loc	11 329 5 is_stmt 1 discriminator 1 # rhs.c:329:5
	addq	$40, %rsi
	decl	%edi
	jne	.LBB6_90
.Ltmp603:
# BB#91:                                # %for.inc2682
                                        #   in Loop: Header=BB6_89 Depth=1
	.loc	11 328 3 discriminator 1 # rhs.c:328:3
	addq	$2600, %rbp             # imm = 0xA28
	.loc	11 328 17 is_stmt 0 discriminator 1 # rhs.c:328:17
	cmpq	%rax, %rdx
	.loc	11 328 3 discriminator 1 # rhs.c:328:3
	leaq	1(%rdx), %rdx
	jl	.LBB6_89
.Ltmp604:
.LBB6_92:                               # %for.cond2685.preheader
	.loc	11 357 35 is_stmt 1     # rhs.c:357:35
	movslq	nz2(%rip), %r8
.Ltmp605:
	.loc	11 338 23 discriminator 1 # rhs.c:338:23
	leaq	-2(%r8), %r9
	.loc	11 338 17 is_stmt 0 discriminator 1 # rhs.c:338:17
	cmpl	$3, %r9d
	jl	.LBB6_101
# BB#93:                                # %for.cond2689.preheader.lr.ph
.Ltmp606:
	.loc	11 339 22 is_stmt 1 discriminator 1 # rhs.c:339:22
	movl	ny2(%rip), %r10d
.Ltmp607:
	.loc	11 340 24 discriminator 1 # rhs.c:340:24
	movl	nx2(%rip), %eax
.Ltmp608:
	.loc	11 342 47               # rhs.c:342:47
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
.Ltmp609:
	.loc	11 338 3 discriminator 1 # rhs.c:338:3
	leal	1(%r10), %edi
.Ltmp610:
	.loc	11 342 52               # rhs.c:342:52
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movl	$3, %ebp
	.loc	11 343 36               # rhs.c:343:36
	movapd	.LCPI6_4(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	.loc	11 344 16               # rhs.c:344:16
	movapd	.LCPI6_8(%rip), %xmm3   # xmm3 = [6.000000e+00,6.000000e+00]
	.loc	11 343 36               # rhs.c:343:36
	movsd	.LCPI6_6(%rip), %xmm4   # xmm4 = mem[0],zero
	movsd	.LCPI6_7(%rip), %xmm8   # xmm8 = mem[0],zero
	.p2align	4, 0x90
.LBB6_94:                               # %for.cond2689.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_97 Depth 2
                                        #       Child Loop BB6_98 Depth 3
	.loc	11 344 40               # rhs.c:344:40
	leaq	1(%rbp), %r11
.Ltmp611:
	.loc	11 339 5 discriminator 1 # rhs.c:339:5
	testl	%r10d, %r10d
	jle	.LBB6_100
# BB#95:                                # %for.cond2692.preheader.lr.ph
                                        #   in Loop: Header=BB6_94 Depth=1
	testl	%eax, %eax
	jle	.LBB6_100
# BB#96:                                # %for.cond2695.preheader.lr.ph.preheader
                                        #   in Loop: Header=BB6_94 Depth=1
.Ltmp612:
	.loc	11 342 52               # rhs.c:342:52
	imulq	$169000, %rbp, %rbx     # imm = 0x29428
	movl	$1, %edx
	.p2align	4, 0x90
.LBB6_97:                               # %for.cond2695.preheader.lr.ph
                                        #   Parent Loop BB6_94 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_98 Depth 3
	movl	%eax, %esi
	movq	%rbx, %rcx
	.p2align	4, 0x90
.LBB6_98:                               # %for.cond2695.preheader
                                        #   Parent Loop BB6_94 Depth=1
                                        #     Parent Loop BB6_97 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 342 29 is_stmt 0     # rhs.c:342:29
	movupd	rhs+2640(%rcx), %xmm6
	.loc	11 343 15 is_stmt 1     # rhs.c:343:15
	movupd	u-335360(%rcx), %xmm7
	.loc	11 343 37 is_stmt 0     # rhs.c:343:37
	movupd	u-166360(%rcx), %xmm5
	.loc	11 343 36               # rhs.c:343:36
	mulpd	%xmm2, %xmm5
	.loc	11 343 31               # rhs.c:343:31
	subpd	%xmm5, %xmm7
	.loc	11 344 17 is_stmt 1     # rhs.c:344:17
	movupd	u+2640(%rcx), %xmm5
	.loc	11 344 16 is_stmt 0     # rhs.c:344:16
	mulpd	%xmm3, %xmm5
	.loc	11 343 53 is_stmt 1     # rhs.c:343:53
	addpd	%xmm7, %xmm5
	.loc	11 344 37               # rhs.c:344:37
	movupd	u+171640(%rcx), %xmm7
	.loc	11 344 36 is_stmt 0     # rhs.c:344:36
	mulpd	%xmm2, %xmm7
	.loc	11 344 31               # rhs.c:344:31
	subpd	%xmm7, %xmm5
	.loc	11 345 15 is_stmt 1     # rhs.c:345:15
	movupd	u+340640(%rcx), %xmm7
	.loc	11 344 53               # rhs.c:344:53
	addpd	%xmm5, %xmm7
	.loc	11 342 52               # rhs.c:342:52
	mulpd	%xmm1, %xmm7
	.loc	11 342 45 is_stmt 0     # rhs.c:342:45
	subpd	%xmm7, %xmm6
	.loc	11 342 27               # rhs.c:342:27
	movupd	%xmm6, rhs+2640(%rcx)
	.loc	11 342 29               # rhs.c:342:29
	movupd	rhs+2656(%rcx), %xmm5
	.loc	11 343 15 is_stmt 1     # rhs.c:343:15
	movupd	u-335344(%rcx), %xmm6
	.loc	11 343 37 is_stmt 0     # rhs.c:343:37
	movupd	u-166344(%rcx), %xmm7
	.loc	11 343 36               # rhs.c:343:36
	mulpd	%xmm2, %xmm7
	.loc	11 343 31               # rhs.c:343:31
	subpd	%xmm7, %xmm6
	.loc	11 344 17 is_stmt 1     # rhs.c:344:17
	movupd	u+2656(%rcx), %xmm7
	.loc	11 344 16 is_stmt 0     # rhs.c:344:16
	mulpd	%xmm3, %xmm7
	.loc	11 343 53 is_stmt 1     # rhs.c:343:53
	addpd	%xmm6, %xmm7
	.loc	11 344 37               # rhs.c:344:37
	movupd	u+171656(%rcx), %xmm6
	.loc	11 344 36 is_stmt 0     # rhs.c:344:36
	mulpd	%xmm2, %xmm6
	.loc	11 344 31               # rhs.c:344:31
	subpd	%xmm6, %xmm7
	.loc	11 345 15 is_stmt 1     # rhs.c:345:15
	movupd	u+340656(%rcx), %xmm6
	.loc	11 344 53               # rhs.c:344:53
	addpd	%xmm7, %xmm6
	.loc	11 342 52               # rhs.c:342:52
	mulpd	%xmm1, %xmm6
	.loc	11 342 45 is_stmt 0     # rhs.c:342:45
	subpd	%xmm6, %xmm5
	.loc	11 342 27               # rhs.c:342:27
	movupd	%xmm5, rhs+2656(%rcx)
	.loc	11 342 29               # rhs.c:342:29
	movsd	rhs+2672(%rcx), %xmm5   # xmm5 = mem[0],zero
	.loc	11 343 15 is_stmt 1     # rhs.c:343:15
	movsd	u-335328(%rcx), %xmm6   # xmm6 = mem[0],zero
	movsd	u-166328(%rcx), %xmm7   # xmm7 = mem[0],zero
	.loc	11 343 36 is_stmt 0     # rhs.c:343:36
	mulsd	%xmm4, %xmm7
	.loc	11 343 31               # rhs.c:343:31
	subsd	%xmm7, %xmm6
	movsd	u+2672(%rcx), %xmm7     # xmm7 = mem[0],zero
	.loc	11 344 16 is_stmt 1     # rhs.c:344:16
	mulsd	%xmm8, %xmm7
	.loc	11 343 53               # rhs.c:343:53
	addsd	%xmm6, %xmm7
	movsd	u+171672(%rcx), %xmm6   # xmm6 = mem[0],zero
	.loc	11 344 36               # rhs.c:344:36
	mulsd	%xmm4, %xmm6
	.loc	11 344 31 is_stmt 0     # rhs.c:344:31
	subsd	%xmm6, %xmm7
	.loc	11 344 53               # rhs.c:344:53
	addsd	u+340672(%rcx), %xmm7
	.loc	11 342 52 is_stmt 1     # rhs.c:342:52
	mulsd	%xmm0, %xmm7
	.loc	11 342 45 is_stmt 0     # rhs.c:342:45
	subsd	%xmm7, %xmm5
	.loc	11 342 27               # rhs.c:342:27
	movsd	%xmm5, rhs+2672(%rcx)
.Ltmp613:
	.loc	11 340 7 is_stmt 1 discriminator 1 # rhs.c:340:7
	addq	$40, %rcx
	decl	%esi
	jne	.LBB6_98
.Ltmp614:
# BB#99:                                # %for.inc2773
                                        #   in Loop: Header=BB6_97 Depth=2
	.loc	11 339 5 discriminator 1 # rhs.c:339:5
	incq	%rdx
	addq	$2600, %rbx             # imm = 0xA28
	cmpl	%edi, %edx
	jne	.LBB6_97
.Ltmp615:
.LBB6_100:                              # %for.inc2776
                                        #   in Loop: Header=BB6_94 Depth=1
	.loc	11 338 17 discriminator 1 # rhs.c:338:17
	cmpq	%r9, %rbp
	movq	%r11, %rbp
	jl	.LBB6_94
.Ltmp616:
.LBB6_101:                              # %for.end2778
	#DEBUG_VALUE: compute_rhs:j <- 1
	.loc	11 366 27               # rhs.c:366:27
	movslq	ny2(%rip), %r10
.Ltmp617:
	.loc	11 363 20 discriminator 1 # rhs.c:363:20
	testq	%r10, %r10
	jle	.LBB6_102
.Ltmp618:
# BB#111:                               # %for.cond2783.preheader.lr.ph
	.loc	11 355 27               # rhs.c:355:27
	movslq	nx2(%rip), %rsi
.Ltmp619:
	.loc	11 353 22 discriminator 1 # rhs.c:353:22
	testq	%rsi, %rsi
	jle	.LBB6_112
.Ltmp620:
# BB#113:                               # %for.cond2786.preheader.lr.ph.preheader
	.loc	11 351 10               # rhs.c:351:10
	leaq	-1(%r8), %rax
.Ltmp621:
	#DEBUG_VALUE: compute_rhs:k <- %RAX
	.loc	11 356 16               # rhs.c:356:16
	leal	-3(%r8), %ecx
	.loc	11 355 45               # rhs.c:355:45
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	11 356 13               # rhs.c:356:13
	movslq	%ecx, %rcx
	.loc	11 356 35 is_stmt 0     # rhs.c:356:35
	movslq	%r9d, %rbp
	.loc	11 355 50 is_stmt 1     # rhs.c:355:50
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	.loc	11 355 27 is_stmt 0     # rhs.c:355:27
	imulq	$169000, %rax, %rdx     # imm = 0x29428
	imulq	$169000, %rcx, %rdi     # imm = 0x29428
	imulq	$169000, %rbp, %rbp     # imm = 0x29428
	imulq	$169000, %r8, %rcx      # imm = 0x29428
	movl	$1, %r8d
	xorl	%r9d, %r9d
	.loc	11 356 34 is_stmt 1     # rhs.c:356:34
	movapd	.LCPI6_4(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	.loc	11 357 14               # rhs.c:357:14
	movapd	.LCPI6_8(%rip), %xmm3   # xmm3 = [6.000000e+00,6.000000e+00]
	.loc	11 356 34               # rhs.c:356:34
	movsd	.LCPI6_6(%rip), %xmm4   # xmm4 = mem[0],zero
	movsd	.LCPI6_7(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp622:
	.p2align	4, 0x90
.LBB6_114:                              # %for.cond2786.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_115 Depth 2
	movq	%r9, %rax
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB6_115:                              # %for.cond2786.preheader
                                        #   Parent Loop BB6_114 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 355 27               # rhs.c:355:27
	movupd	rhs+2640(%rdx,%rax), %xmm6
	.loc	11 356 13               # rhs.c:356:13
	movupd	u+2640(%rdi,%rax), %xmm7
	.loc	11 356 35 is_stmt 0     # rhs.c:356:35
	movupd	u+2640(%rbp,%rax), %xmm5
	.loc	11 356 34               # rhs.c:356:34
	mulpd	%xmm2, %xmm5
	.loc	11 356 29               # rhs.c:356:29
	subpd	%xmm5, %xmm7
	.loc	11 357 15 is_stmt 1     # rhs.c:357:15
	movupd	u+2640(%rdx,%rax), %xmm5
	.loc	11 357 14 is_stmt 0     # rhs.c:357:14
	mulpd	%xmm3, %xmm5
	.loc	11 356 51 is_stmt 1     # rhs.c:356:51
	addpd	%xmm7, %xmm5
	.loc	11 357 35               # rhs.c:357:35
	movupd	u+2640(%rcx,%rax), %xmm7
	.loc	11 357 34 is_stmt 0     # rhs.c:357:34
	mulpd	%xmm2, %xmm7
	.loc	11 357 29               # rhs.c:357:29
	subpd	%xmm7, %xmm5
	.loc	11 355 50 is_stmt 1     # rhs.c:355:50
	mulpd	%xmm1, %xmm5
	.loc	11 355 43 is_stmt 0     # rhs.c:355:43
	subpd	%xmm5, %xmm6
	.loc	11 355 25               # rhs.c:355:25
	movupd	%xmm6, rhs+2640(%rdx,%rax)
	.loc	11 355 27               # rhs.c:355:27
	movupd	rhs+2656(%rdx,%rax), %xmm5
	.loc	11 356 13 is_stmt 1     # rhs.c:356:13
	movupd	u+2656(%rdi,%rax), %xmm6
	.loc	11 356 35 is_stmt 0     # rhs.c:356:35
	movupd	u+2656(%rbp,%rax), %xmm7
	.loc	11 356 34               # rhs.c:356:34
	mulpd	%xmm2, %xmm7
	.loc	11 356 29               # rhs.c:356:29
	subpd	%xmm7, %xmm6
	.loc	11 357 15 is_stmt 1     # rhs.c:357:15
	movupd	u+2656(%rdx,%rax), %xmm7
	.loc	11 357 14 is_stmt 0     # rhs.c:357:14
	mulpd	%xmm3, %xmm7
	.loc	11 356 51 is_stmt 1     # rhs.c:356:51
	addpd	%xmm6, %xmm7
	.loc	11 357 35               # rhs.c:357:35
	movupd	u+2656(%rcx,%rax), %xmm6
	.loc	11 357 34 is_stmt 0     # rhs.c:357:34
	mulpd	%xmm2, %xmm6
	.loc	11 357 29               # rhs.c:357:29
	subpd	%xmm6, %xmm7
	.loc	11 355 50 is_stmt 1     # rhs.c:355:50
	mulpd	%xmm1, %xmm7
	.loc	11 355 43 is_stmt 0     # rhs.c:355:43
	subpd	%xmm7, %xmm5
	.loc	11 355 25               # rhs.c:355:25
	movupd	%xmm5, rhs+2656(%rdx,%rax)
	.loc	11 355 27               # rhs.c:355:27
	movsd	rhs+2672(%rdx,%rax), %xmm5 # xmm5 = mem[0],zero
	.loc	11 356 13 is_stmt 1     # rhs.c:356:13
	movsd	u+2672(%rdi,%rax), %xmm6 # xmm6 = mem[0],zero
	movsd	u+2672(%rbp,%rax), %xmm7 # xmm7 = mem[0],zero
	.loc	11 356 34 is_stmt 0     # rhs.c:356:34
	mulsd	%xmm4, %xmm7
	.loc	11 356 29               # rhs.c:356:29
	subsd	%xmm7, %xmm6
	movsd	u+2672(%rdx,%rax), %xmm7 # xmm7 = mem[0],zero
	.loc	11 357 14 is_stmt 1     # rhs.c:357:14
	mulsd	%xmm8, %xmm7
	.loc	11 356 51               # rhs.c:356:51
	addsd	%xmm6, %xmm7
	movsd	u+2672(%rcx,%rax), %xmm6 # xmm6 = mem[0],zero
	.loc	11 357 34               # rhs.c:357:34
	mulsd	%xmm4, %xmm6
	.loc	11 357 29 is_stmt 0     # rhs.c:357:29
	subsd	%xmm6, %xmm7
	.loc	11 355 50 is_stmt 1     # rhs.c:355:50
	mulsd	%xmm0, %xmm7
	.loc	11 355 43 is_stmt 0     # rhs.c:355:43
	subsd	%xmm7, %xmm5
	.loc	11 355 25               # rhs.c:355:25
	movsd	%xmm5, rhs+2672(%rdx,%rax)
.Ltmp623:
	.loc	11 353 19 is_stmt 1 discriminator 1 # rhs.c:353:19
	incq	%rbx
	addq	$40, %rax
	cmpq	%rsi, %rbx
	.loc	11 353 5 is_stmt 0 discriminator 1 # rhs.c:353:5
	jl	.LBB6_115
.Ltmp624:
# BB#116:                               # %for.inc2854
                                        #   in Loop: Header=BB6_114 Depth=1
	.loc	11 352 3 is_stmt 1 discriminator 1 # rhs.c:352:3
	addq	$2600, %r9              # imm = 0xA28
	.loc	11 352 17 is_stmt 0 discriminator 1 # rhs.c:352:17
	cmpq	%r10, %r8
	.loc	11 352 3 discriminator 1 # rhs.c:352:3
	leaq	1(%r8), %r8
	jl	.LBB6_114
.Ltmp625:
# BB#117:                               # %for.end2856
	testl	%r10d, %r10d
	.loc	11 362 7 is_stmt 1      # rhs.c:362:7
	movl	nz2(%rip), %r8d
	#DEBUG_VALUE: compute_rhs:j <- 1
.Ltmp626:
	#DEBUG_VALUE: compute_rhs:k <- %R8D
	jg	.LBB6_118
	jmp	.LBB6_123
.Ltmp627:
.LBB6_102:                              # %for.end2856.thread
	movl	nz2(%rip), %r8d
	#DEBUG_VALUE: compute_rhs:j <- 1
	jmp	.LBB6_123
.LBB6_112:                              # %for.end2856.thread4451
	movl	nz2(%rip), %r8d
	#DEBUG_VALUE: compute_rhs:j <- 1
.LBB6_118:                              # %for.cond2860.preheader.lr.ph
.Ltmp628:
	.loc	11 366 27               # rhs.c:366:27
	movslq	nx2(%rip), %rdx
.Ltmp629:
	.loc	11 364 22 discriminator 1 # rhs.c:364:22
	testq	%rdx, %rdx
	jle	.LBB6_123
# BB#119:                               # %for.cond2863.preheader.lr.ph.preheader
.Ltmp630:
	.loc	11 367 16               # rhs.c:367:16
	leal	-2(%r8), %eax
	.loc	11 367 38 is_stmt 0     # rhs.c:367:38
	leal	-1(%r8), %ecx
	.loc	11 366 27 is_stmt 1     # rhs.c:366:27
	movslq	%r8d, %rsi
	.loc	11 366 45 is_stmt 0     # rhs.c:366:45
	movsd	dssp(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	11 367 13 is_stmt 1     # rhs.c:367:13
	cltq
	.loc	11 367 35 is_stmt 0     # rhs.c:367:35
	movslq	%ecx, %rcx
	.loc	11 366 50 is_stmt 1     # rhs.c:366:50
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	.loc	11 366 27 is_stmt 0     # rhs.c:366:27
	imulq	$169000, %rsi, %r9      # imm = 0x29428
	imulq	$169000, %rax, %rax     # imm = 0x29428
	leaq	u+2672(%rax), %r11
	imulq	$169000, %rcx, %rax     # imm = 0x29428
	leaq	u+2672(%rax), %rbp
	movl	$1, %ebx
	.loc	11 367 34 is_stmt 1     # rhs.c:367:34
	movapd	.LCPI6_4(%rip), %xmm2   # xmm2 = [4.000000e+00,4.000000e+00]
	.loc	11 367 56 is_stmt 0     # rhs.c:367:56
	movapd	.LCPI6_3(%rip), %xmm3   # xmm3 = [5.000000e+00,5.000000e+00]
	movsd	.LCPI6_6(%rip), %xmm8   # xmm8 = mem[0],zero
	movsd	.LCPI6_5(%rip), %xmm5   # xmm5 = mem[0],zero
	.p2align	4, 0x90
.LBB6_120:                              # %for.cond2863.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_121 Depth 2
	movq	%rbp, %rax
	movq	%r11, %rdi
	movq	%r9, %rsi
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB6_121:                              # %for.cond2863.preheader
                                        #   Parent Loop BB6_120 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	11 366 27 is_stmt 1     # rhs.c:366:27
	movupd	rhs+2640(%rsi), %xmm6
	.loc	11 367 13               # rhs.c:367:13
	movupd	-32(%rdi), %xmm7
	.loc	11 367 35 is_stmt 0     # rhs.c:367:35
	movupd	-32(%rax), %xmm4
	.loc	11 367 34               # rhs.c:367:34
	mulpd	%xmm2, %xmm4
	.loc	11 367 29               # rhs.c:367:29
	subpd	%xmm4, %xmm7
	.loc	11 367 57               # rhs.c:367:57
	movupd	u+2640(%rsi), %xmm4
	.loc	11 367 56               # rhs.c:367:56
	mulpd	%xmm3, %xmm4
	.loc	11 367 51               # rhs.c:367:51
	addpd	%xmm7, %xmm4
	.loc	11 366 50 is_stmt 1     # rhs.c:366:50
	mulpd	%xmm1, %xmm4
	.loc	11 366 43 is_stmt 0     # rhs.c:366:43
	subpd	%xmm4, %xmm6
	.loc	11 366 25               # rhs.c:366:25
	movupd	%xmm6, rhs+2640(%rsi)
	.loc	11 366 27               # rhs.c:366:27
	movupd	rhs+2656(%rsi), %xmm4
	.loc	11 367 13 is_stmt 1     # rhs.c:367:13
	movupd	-16(%rdi), %xmm6
	.loc	11 367 35 is_stmt 0     # rhs.c:367:35
	movupd	-16(%rax), %xmm7
	.loc	11 367 34               # rhs.c:367:34
	mulpd	%xmm2, %xmm7
	.loc	11 367 29               # rhs.c:367:29
	subpd	%xmm7, %xmm6
	.loc	11 367 57               # rhs.c:367:57
	movupd	u+2656(%rsi), %xmm7
	.loc	11 367 56               # rhs.c:367:56
	mulpd	%xmm3, %xmm7
	.loc	11 367 51               # rhs.c:367:51
	addpd	%xmm6, %xmm7
	.loc	11 366 50 is_stmt 1     # rhs.c:366:50
	mulpd	%xmm1, %xmm7
	.loc	11 366 43 is_stmt 0     # rhs.c:366:43
	subpd	%xmm7, %xmm4
	.loc	11 366 25               # rhs.c:366:25
	movupd	%xmm4, rhs+2656(%rsi)
	.loc	11 366 27               # rhs.c:366:27
	movsd	rhs+2672(%rsi), %xmm4   # xmm4 = mem[0],zero
	.loc	11 367 13 is_stmt 1     # rhs.c:367:13
	movsd	(%rdi), %xmm6           # xmm6 = mem[0],zero
	movsd	(%rax), %xmm7           # xmm7 = mem[0],zero
	.loc	11 367 34 is_stmt 0     # rhs.c:367:34
	mulsd	%xmm8, %xmm7
	.loc	11 367 29               # rhs.c:367:29
	subsd	%xmm7, %xmm6
	movsd	u+2672(%rsi), %xmm7     # xmm7 = mem[0],zero
	.loc	11 367 56               # rhs.c:367:56
	mulsd	%xmm5, %xmm7
	.loc	11 367 51               # rhs.c:367:51
	addsd	%xmm6, %xmm7
	.loc	11 366 50 is_stmt 1     # rhs.c:366:50
	mulsd	%xmm0, %xmm7
	.loc	11 366 43 is_stmt 0     # rhs.c:366:43
	subsd	%xmm7, %xmm4
	.loc	11 366 25               # rhs.c:366:25
	movsd	%xmm4, rhs+2672(%rsi)
.Ltmp631:
	.loc	11 364 19 is_stmt 1 discriminator 1 # rhs.c:364:19
	incq	%rcx
	addq	$40, %rsi
	addq	$40, %rdi
	addq	$40, %rax
	cmpq	%rdx, %rcx
	.loc	11 364 5 is_stmt 0 discriminator 1 # rhs.c:364:5
	jl	.LBB6_121
.Ltmp632:
# BB#122:                               # %for.inc2920
                                        #   in Loop: Header=BB6_120 Depth=1
	.loc	11 363 3 is_stmt 1 discriminator 1 # rhs.c:363:3
	addq	$2600, %r9              # imm = 0xA28
	addq	$2600, %r11             # imm = 0xA28
	addq	$2600, %rbp             # imm = 0xA28
	.loc	11 363 17 is_stmt 0 discriminator 1 # rhs.c:363:17
	cmpq	%r10, %rbx
	.loc	11 363 3 discriminator 1 # rhs.c:363:3
	leaq	1(%rbx), %rbx
	jl	.LBB6_120
.Ltmp633:
.LBB6_123:                              # %for.end2922
	.loc	11 371 7 is_stmt 1      # rhs.c:371:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_125
# BB#124:                               # %if.then2924
	.loc	11 371 16 is_stmt 0 discriminator 1 # rhs.c:371:16
	movl	$4, %edi
	callq	timer_stop
.Ltmp634:
	.loc	11 373 20 is_stmt 1 discriminator 1 # rhs.c:373:20
	movl	nz2(%rip), %r8d
.LBB6_125:                              # %for.cond2926.preheader
	.loc	11 373 17 is_stmt 0 discriminator 1 # rhs.c:373:17
	testl	%r8d, %r8d
	jle	.LBB6_136
# BB#126:                               # %for.cond2929.preheader.lr.ph
.Ltmp635:
	.loc	11 374 22 is_stmt 1 discriminator 1 # rhs.c:374:22
	movl	ny2(%rip), %r14d
	.loc	11 374 19 is_stmt 0 discriminator 1 # rhs.c:374:19
	testl	%r14d, %r14d
	jle	.LBB6_136
# BB#127:                               # %for.cond2932.preheader.lr.ph.preheader
.Ltmp636:
	.loc	11 375 24 is_stmt 1 discriminator 1 # rhs.c:375:24
	movl	nx2(%rip), %edx
.Ltmp637:
	.loc	11 377 47               # rhs.c:377:47
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	11 377 29 is_stmt 0     # rhs.c:377:29
	incl	%r14d
	movslq	%r8d, %r8
	.loc	11 377 45               # rhs.c:377:45
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
.Ltmp638:
	.loc	11 375 7 is_stmt 1 discriminator 1 # rhs.c:375:7
	movl	%edx, %esi
	andl	$1, %esi
	leal	1(%rdx), %r10d
	movl	$1, %r11d
	movl	$rhs+171672, %r9d
	.p2align	4, 0x90
.LBB6_128:                              # %for.cond2932.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_129 Depth 2
                                        #       Child Loop BB6_133 Depth 3
	testl	%edx, %edx
	movq	%r9, %rax
	movl	$1, %ebx
	jle	.LBB6_135
	.p2align	4, 0x90
.LBB6_129:                              # %for.cond2935.preheader.lr.ph
                                        #   Parent Loop BB6_128 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_133 Depth 3
	testl	%esi, %esi
	movl	$1, %ecx
	je	.LBB6_131
# BB#130:                               # %for.cond2935.preheader.prol
                                        #   in Loop: Header=BB6_129 Depth=2
.Ltmp639:
	.loc	11 377 29               # rhs.c:377:29
	imulq	$2600, %rbx, %rcx       # imm = 0xA28
	imulq	$169000, %r11, %rdi     # imm = 0x29428
	movupd	rhs+40(%rdi,%rcx), %xmm2
	.loc	11 377 45 is_stmt 0     # rhs.c:377:45
	mulpd	%xmm1, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm2, rhs+40(%rdi,%rcx)
	.loc	11 377 29               # rhs.c:377:29
	movupd	rhs+56(%rdi,%rcx), %xmm2
	.loc	11 377 45               # rhs.c:377:45
	mulpd	%xmm1, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm2, rhs+56(%rdi,%rcx)
	movsd	rhs+72(%rdi,%rcx), %xmm2 # xmm2 = mem[0],zero
	.loc	11 377 45               # rhs.c:377:45
	mulsd	%xmm0, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movsd	%xmm2, rhs+72(%rdi,%rcx)
	movl	$2, %ecx
.Ltmp640:
.LBB6_131:                              # %for.cond2935.preheader.lr.ph.split
                                        #   in Loop: Header=BB6_129 Depth=2
	cmpl	$1, %edx
	je	.LBB6_134
# BB#132:                               # %for.cond2935.preheader.lr.ph.split.split
                                        #   in Loop: Header=BB6_129 Depth=2
	.loc	11 375 7 is_stmt 1 discriminator 1 # rhs.c:375:7
	movl	%r10d, %edi
	subl	%ecx, %edi
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,4), %rbp
	movq	%rax, %rcx
	.p2align	4, 0x90
.LBB6_133:                              # %for.cond2935.preheader
                                        #   Parent Loop BB6_128 Depth=1
                                        #     Parent Loop BB6_129 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp641:
	.loc	11 377 29               # rhs.c:377:29
	movupd	-72(%rbp,%rcx), %xmm2
	.loc	11 377 45 is_stmt 0     # rhs.c:377:45
	mulpd	%xmm1, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm2, -72(%rbp,%rcx)
	.loc	11 377 29               # rhs.c:377:29
	movupd	-56(%rbp,%rcx), %xmm2
	.loc	11 377 45               # rhs.c:377:45
	mulpd	%xmm1, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm2, -56(%rbp,%rcx)
	movsd	-40(%rbp,%rcx), %xmm2   # xmm2 = mem[0],zero
	.loc	11 377 45               # rhs.c:377:45
	mulsd	%xmm0, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movsd	%xmm2, -40(%rbp,%rcx)
	.loc	11 377 29               # rhs.c:377:29
	movupd	-32(%rbp,%rcx), %xmm2
	.loc	11 377 45               # rhs.c:377:45
	mulpd	%xmm1, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm2, -32(%rbp,%rcx)
	.loc	11 377 29               # rhs.c:377:29
	movupd	-16(%rbp,%rcx), %xmm2
	.loc	11 377 45               # rhs.c:377:45
	mulpd	%xmm1, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movupd	%xmm2, -16(%rbp,%rcx)
	movsd	(%rbp,%rcx), %xmm2      # xmm2 = mem[0],zero
	.loc	11 377 45               # rhs.c:377:45
	mulsd	%xmm0, %xmm2
	.loc	11 377 27               # rhs.c:377:27
	movsd	%xmm2, (%rbp,%rcx)
.Ltmp642:
	.loc	11 375 7 is_stmt 1 discriminator 1 # rhs.c:375:7
	addq	$80, %rcx
	addl	$-2, %edi
	jne	.LBB6_133
.Ltmp643:
.LBB6_134:                              # %for.inc2961
                                        #   in Loop: Header=BB6_129 Depth=2
	.loc	11 374 5 discriminator 1 # rhs.c:374:5
	incq	%rbx
	addq	$2600, %rax             # imm = 0xA28
	cmpl	%r14d, %ebx
	jne	.LBB6_129
.Ltmp644:
.LBB6_135:                              # %for.inc2964
                                        #   in Loop: Header=BB6_128 Depth=1
	.loc	11 373 3 discriminator 1 # rhs.c:373:3
	addq	$169000, %r9            # imm = 0x29428
	.loc	11 373 17 is_stmt 0 discriminator 1 # rhs.c:373:17
	cmpq	%r8, %r11
	.loc	11 373 3 discriminator 1 # rhs.c:373:3
	leaq	1(%r11), %r11
	jl	.LBB6_128
.Ltmp645:
.LBB6_136:                              # %for.end2966
	.loc	11 382 7 is_stmt 1      # rhs.c:382:7
	cmpl	$0, timeron(%rip)
	je	.LBB6_137
# BB#139:                               # %if.then2968
	.loc	11 382 16 is_stmt 0 discriminator 1 # rhs.c:382:16
	movl	$5, %edi
	addq	$488, %rsp              # imm = 0x1E8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	timer_stop              # TAILCALL
.Ltmp646:
.LBB6_137:                              # %if.end2969
	.loc	11 383 1 is_stmt 1      # rhs.c:383:1
	addq	$488, %rsp              # imm = 0x1E8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp647:
.Lfunc_end6:
	.size	compute_rhs, .Lfunc_end6-compute_rhs
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI7_0:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	txinvr
	.p2align	4, 0x90
	.type	txinvr,@function
txinvr:                                 # @txinvr
.Lfunc_begin7:
	.file	12 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/txinvr.c"
	.loc	12 40 0                 # txinvr.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	12 44 7 prologue_end    # txinvr.c:44:7
	pushq	%rbp
.Ltmp648:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp649:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp650:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp651:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp652:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp653:
	.cfi_def_cfa_offset 56
	subq	$104, %rsp
.Ltmp654:
	.cfi_def_cfa_offset 160
.Ltmp655:
	.cfi_offset %rbx, -56
.Ltmp656:
	.cfi_offset %r12, -48
.Ltmp657:
	.cfi_offset %r13, -40
.Ltmp658:
	.cfi_offset %r14, -32
.Ltmp659:
	.cfi_offset %r15, -24
.Ltmp660:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB7_2
# BB#1:                                 # %if.then
	.loc	12 44 16 is_stmt 0 discriminator 1 # txinvr.c:44:16
	movl	$11, %edi
	callq	timer_start
.Ltmp661:
.LBB7_2:                                # %for.cond.preheader
	.loc	12 45 3 is_stmt 1 discriminator 1 # txinvr.c:45:3
	movslq	nz2(%rip), %rax
	.loc	12 45 20 is_stmt 0 discriminator 1 # txinvr.c:45:20
	movq	%rax, 16(%rsp)          # 8-byte Spill
	testq	%rax, %rax
	jle	.LBB7_13
# BB#3:                                 # %for.cond1.preheader.lr.ph
.Ltmp662:
	.loc	12 46 22 is_stmt 1 discriminator 1 # txinvr.c:46:22
	movl	ny2(%rip), %r14d
	.loc	12 46 19 is_stmt 0 discriminator 1 # txinvr.c:46:19
	testl	%r14d, %r14d
	setle	%al
.Ltmp663:
	.loc	12 47 24 is_stmt 1 discriminator 1 # txinvr.c:47:24
	movl	nx2(%rip), %r10d
	.loc	12 47 21 is_stmt 0 discriminator 1 # txinvr.c:47:21
	testl	%r10d, %r10d
	setle	%cl
.Ltmp664:
	.loc	12 61 14 is_stmt 1      # txinvr.c:61:14
	movsd	c2(%rip), %xmm12        # xmm12 = mem[0],zero
	.loc	12 62 14                # txinvr.c:62:14
	movsd	bt(%rip), %xmm2         # xmm2 = mem[0],zero
.Ltmp665:
	.loc	12 45 3 discriminator 1 # txinvr.c:45:3
	movapd	%xmm2, 80(%rsp)         # 16-byte Spill
	incl	%r14d
	leal	-1(%r10), %edi
	incq	%rdi
.Ltmp666:
	.loc	12 46 5 discriminator 1 # txinvr.c:46:5
	orb	%al, %cl
	movb	%cl, 15(%rsp)           # 1-byte Spill
.Ltmp667:
	.loc	12 47 7 discriminator 1 # txinvr.c:47:7
	movabsq	$8589934590, %r8        # imm = 0x1FFFFFFFE
	andq	%rdi, %r8
	movq	%rdi, %rax
	orq	$1, %rax
	movq	%rax, 40(%rsp)          # 8-byte Spill
	movapd	%xmm12, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 64(%rsp)         # 16-byte Spill
	movapd	%xmm2, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 48(%rsp)         # 16-byte Spill
.Ltmp668:
	.loc	12 48 15                # txinvr.c:48:15
	incl	%r10d
	movl	$1, %eax
	movl	$34328, %r9d            # imm = 0x8618
	movl	$34320, %r15d           # imm = 0x8610
	movl	$rhs+171632, %r12d
	movapd	.LCPI7_0(%rip), %xmm11  # xmm11 = [9223372036854775808,9223372036854775808]
.Ltmp669:
	.p2align	4, 0x90
.LBB7_4:                                # %for.cond1.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_5 Depth 2
                                        #       Child Loop BB7_7 Depth 3
                                        #       Child Loop BB7_10 Depth 3
	movq	%r9, 24(%rsp)           # 8-byte Spill
	movq	%rax, 32(%rsp)          # 8-byte Spill
	.loc	12 46 5 discriminator 1 # txinvr.c:46:5
	cmpb	$0, 15(%rsp)            # 1-byte Folded Reload
	movq	%r12, %rax
	movq	%r15, %rbx
	movl	$1, %ebp
	jne	.LBB7_12
	.p2align	4, 0x90
.LBB7_5:                                # %for.body6.lr.ph
                                        #   Parent Loop BB7_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB7_7 Depth 3
                                        #       Child Loop BB7_10 Depth 3
	cmpq	$2, %rdi
	movl	$1, %ecx
	jb	.LBB7_9
# BB#6:                                 # %min.iters.checked
                                        #   in Loop: Header=BB7_5 Depth=2
	testq	%r8, %r8
	movq	%r8, %rsi
	movq	%r9, %rdx
	movl	$1, %ecx
	je	.LBB7_9
	.p2align	4, 0x90
.LBB7_7:                                # %vector.body
                                        #   Parent Loop BB7_4 Depth=1
                                        #     Parent Loop BB7_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp670:
	.loc	12 48 15                # txinvr.c:48:15
	movupd	rho_i(%rdx), %xmm15
	.loc	12 49 14                # txinvr.c:49:14
	movupd	us(%rdx), %xmm5
	.loc	12 50 14                # txinvr.c:50:14
	movupd	vs(%rdx), %xmm13
	.loc	12 51 14                # txinvr.c:51:14
	movupd	ws(%rdx), %xmm6
	.loc	12 52 14                # txinvr.c:52:14
	movupd	speed(%rdx), %xmm14
	.loc	12 55 14                # txinvr.c:55:14
	movsd	rhs(%rdx,%rdx,4), %xmm7 # xmm7 = mem[0],zero
	movhpd	rhs+40(%rdx,%rdx,4), %xmm7 # xmm7 = xmm7[0],mem[0]
	.loc	12 56 14                # txinvr.c:56:14
	movsd	rhs+8(%rdx,%rdx,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	rhs+48(%rdx,%rdx,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	12 57 14                # txinvr.c:57:14
	movsd	rhs+16(%rdx,%rdx,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	rhs+56(%rdx,%rdx,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	12 58 14                # txinvr.c:58:14
	movsd	rhs+24(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+64(%rdx,%rdx,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	12 61 30                # txinvr.c:61:30
	movupd	qs(%rdx), %xmm4
	.loc	12 61 41 is_stmt 0      # txinvr.c:61:41
	mulpd	%xmm7, %xmm4
	.loc	12 61 49                # txinvr.c:61:49
	movapd	%xmm5, %xmm3
	.loc	12 61 66                # txinvr.c:61:66
	movapd	%xmm6, %xmm8
	.loc	12 62 30 is_stmt 1      # txinvr.c:62:30
	mulpd	%xmm7, %xmm5
	.loc	12 65 30                # txinvr.c:65:30
	movapd	%xmm7, %xmm9
	.loc	12 66 39                # txinvr.c:66:39
	mulpd	%xmm7, %xmm6
	.loc	12 66 43 is_stmt 0      # txinvr.c:66:43
	subpd	%xmm2, %xmm6
	.loc	12 66 33                # txinvr.c:66:33
	mulpd	%xmm15, %xmm6
	.loc	12 67 39 is_stmt 1      # txinvr.c:67:39
	mulpd	%xmm13, %xmm7
	.loc	12 67 43 is_stmt 0      # txinvr.c:67:43
	subpd	%xmm1, %xmm7
	.loc	12 67 33                # txinvr.c:67:33
	mulpd	%xmm15, %xmm7
	.loc	12 62 17 is_stmt 1      # txinvr.c:62:17
	mulpd	48(%rsp), %xmm15        # 16-byte Folded Reload
	.loc	12 62 35 is_stmt 0      # txinvr.c:62:35
	subpd	%xmm0, %xmm5
	.loc	12 62 23                # txinvr.c:62:23
	mulpd	%xmm15, %xmm5
	.loc	12 63 25 is_stmt 1      # txinvr.c:63:25
	mulpd	%xmm14, %xmm15
	.loc	12 53 20                # txinvr.c:53:20
	mulpd	%xmm14, %xmm14
	.loc	12 61 17                # txinvr.c:61:17
	movapd	64(%rsp), %xmm10        # 16-byte Reload
	divpd	%xmm14, %xmm10
	.loc	12 61 49 is_stmt 0      # txinvr.c:61:49
	mulpd	%xmm0, %xmm3
	.loc	12 59 14 is_stmt 1      # txinvr.c:59:14
	movsd	rhs+32(%rdx,%rdx,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	rhs+72(%rdx,%rdx,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	12 61 45                # txinvr.c:61:45
	subpd	%xmm3, %xmm4
	.loc	12 61 58 is_stmt 0      # txinvr.c:61:58
	mulpd	%xmm1, %xmm13
	.loc	12 61 54                # txinvr.c:61:54
	subpd	%xmm13, %xmm4
	.loc	12 61 66                # txinvr.c:61:66
	mulpd	%xmm2, %xmm8
	.loc	12 61 62                # txinvr.c:61:62
	subpd	%xmm8, %xmm4
	.loc	12 61 70                # txinvr.c:61:70
	addpd	%xmm0, %xmm4
	.loc	12 61 26                # txinvr.c:61:26
	mulpd	%xmm10, %xmm4
	.loc	12 63 32 is_stmt 1      # txinvr.c:63:32
	mulpd	%xmm4, %xmm15
	.loc	12 65 30                # txinvr.c:65:30
	subpd	%xmm4, %xmm9
	.loc	12 66 33                # txinvr.c:66:33
	xorpd	%xmm11, %xmm6
	.loc	12 65 25                # txinvr.c:65:25
	movhpd	%xmm9, rhs+40(%rdx,%rdx,4)
	unpcklpd	%xmm6, %xmm9    # xmm9 = xmm9[0],xmm6[0]
	movupd	%xmm9, rhs(%rdx,%rdx,4)
	.loc	12 66 25                # txinvr.c:66:25
	movhpd	%xmm6, rhs+48(%rdx,%rdx,4)
	.loc	12 68 32                # txinvr.c:68:32
	movapd	%xmm15, %xmm0
	subpd	%xmm5, %xmm0
	.loc	12 67 25                # txinvr.c:67:25
	movhpd	%xmm7, rhs+56(%rdx,%rdx,4)
	unpcklpd	%xmm0, %xmm7    # xmm7 = xmm7[0],xmm0[0]
	movupd	%xmm7, rhs+16(%rdx,%rdx,4)
	.loc	12 68 25                # txinvr.c:68:25
	movhpd	%xmm0, rhs+64(%rdx,%rdx,4)
	.loc	12 69 32                # txinvr.c:69:32
	addpd	%xmm5, %xmm15
	.loc	12 69 25 is_stmt 0      # txinvr.c:69:25
	movlpd	%xmm15, rhs+32(%rdx,%rdx,4)
	movhpd	%xmm15, rhs+72(%rdx,%rdx,4)
.Ltmp671:
	.loc	12 47 7 is_stmt 1 discriminator 1 # txinvr.c:47:7
	addq	$16, %rdx
	addq	$-2, %rsi
	jne	.LBB7_7
# BB#8:                                 # %middle.block
                                        #   in Loop: Header=BB7_5 Depth=2
	cmpq	%r8, %rdi
	movq	40(%rsp), %rcx          # 8-byte Reload
	je	.LBB7_11
	.p2align	4, 0x90
.LBB7_9:                                # %for.body6.preheader
                                        #   in Loop: Header=BB7_5 Depth=2
.Ltmp672:
	.loc	12 48 15                # txinvr.c:48:15
	leaq	(%rbx,%rcx,8), %rdx
	leaq	(%rcx,%rcx,4), %rsi
	leaq	(%rax,%rsi,8), %rsi
	movl	%r10d, %r13d
	subl	%ecx, %r13d
	xorl	%r11d, %r11d
	.p2align	4, 0x90
.LBB7_10:                               # %for.body6
                                        #   Parent Loop BB7_4 Depth=1
                                        #     Parent Loop BB7_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	rho_i(%rdx,%r11,8), %xmm4 # xmm4 = mem[0],zero
.Ltmp673:
	#DEBUG_VALUE: txinvr:ru1 <- %XMM4
	.loc	12 49 14                # txinvr.c:49:14
	movsd	us(%rdx,%r11,8), %xmm2  # xmm2 = mem[0],zero
.Ltmp674:
	#DEBUG_VALUE: txinvr:uu <- %XMM2
	.loc	12 50 14                # txinvr.c:50:14
	movsd	vs(%rdx,%r11,8), %xmm0  # xmm0 = mem[0],zero
.Ltmp675:
	#DEBUG_VALUE: txinvr:vv <- %XMM0
	.loc	12 51 14                # txinvr.c:51:14
	movsd	ws(%rdx,%r11,8), %xmm1  # xmm1 = mem[0],zero
.Ltmp676:
	#DEBUG_VALUE: txinvr:ww <- %XMM1
	.loc	12 52 14                # txinvr.c:52:14
	movsd	speed(%rdx,%r11,8), %xmm13 # xmm13 = mem[0],zero
.Ltmp677:
	#DEBUG_VALUE: txinvr:ac <- %XMM13
	.loc	12 55 14                # txinvr.c:55:14
	movsd	-32(%rsi), %xmm3        # xmm3 = mem[0],zero
.Ltmp678:
	#DEBUG_VALUE: txinvr:r1 <- %XMM3
	.loc	12 56 14                # txinvr.c:56:14
	movsd	-24(%rsi), %xmm15       # xmm15 = mem[0],zero
.Ltmp679:
	#DEBUG_VALUE: txinvr:r2 <- %XMM15
	.loc	12 57 14                # txinvr.c:57:14
	movsd	-16(%rsi), %xmm14       # xmm14 = mem[0],zero
.Ltmp680:
	#DEBUG_VALUE: txinvr:r3 <- %XMM14
	.loc	12 58 14                # txinvr.c:58:14
	movsd	-8(%rsi), %xmm8         # xmm8 = mem[0],zero
.Ltmp681:
	#DEBUG_VALUE: txinvr:r4 <- %XMM8
	.loc	12 61 49                # txinvr.c:61:49
	movapd	%xmm2, %xmm9
	.loc	12 61 58 is_stmt 0      # txinvr.c:61:58
	movapd	%xmm0, %xmm10
	.loc	12 61 66                # txinvr.c:61:66
	movapd	%xmm1, %xmm5
	.loc	12 66 39 is_stmt 1      # txinvr.c:66:39
	mulsd	%xmm3, %xmm1
.Ltmp682:
	#DEBUG_VALUE: txinvr:ww <- %XMM5
	.loc	12 66 43 is_stmt 0      # txinvr.c:66:43
	subsd	%xmm8, %xmm1
	.loc	12 66 33                # txinvr.c:66:33
	mulsd	%xmm4, %xmm1
	.loc	12 67 39 is_stmt 1      # txinvr.c:67:39
	mulsd	%xmm3, %xmm0
.Ltmp683:
	#DEBUG_VALUE: txinvr:vv <- %XMM10
	.loc	12 67 43 is_stmt 0      # txinvr.c:67:43
	subsd	%xmm14, %xmm0
	.loc	12 67 33                # txinvr.c:67:33
	mulsd	%xmm4, %xmm0
	.loc	12 62 17 is_stmt 1      # txinvr.c:62:17
	mulsd	80(%rsp), %xmm4         # 16-byte Folded Reload
.Ltmp684:
	.loc	12 62 30 is_stmt 0      # txinvr.c:62:30
	mulsd	%xmm3, %xmm2
.Ltmp685:
	#DEBUG_VALUE: txinvr:uu <- %XMM9
	.loc	12 62 35                # txinvr.c:62:35
	subsd	%xmm15, %xmm2
	.loc	12 62 23                # txinvr.c:62:23
	mulsd	%xmm4, %xmm2
.Ltmp686:
	#DEBUG_VALUE: txinvr:t2 <- %XMM2
	.loc	12 63 25 is_stmt 1      # txinvr.c:63:25
	mulsd	%xmm13, %xmm4
	.loc	12 53 20                # txinvr.c:53:20
	mulsd	%xmm13, %xmm13
.Ltmp687:
	#DEBUG_VALUE: txinvr:ac2inv <- %XMM13
	.loc	12 61 17                # txinvr.c:61:17
	movapd	%xmm12, %xmm6
	divsd	%xmm13, %xmm6
	.loc	12 61 49 is_stmt 0      # txinvr.c:61:49
	mulsd	%xmm15, %xmm9
.Ltmp688:
	movsd	qs(%rdx,%r11,8), %xmm7  # xmm7 = mem[0],zero
	.loc	12 61 41                # txinvr.c:61:41
	mulsd	%xmm3, %xmm7
	.loc	12 61 45                # txinvr.c:61:45
	subsd	%xmm9, %xmm7
	.loc	12 61 58                # txinvr.c:61:58
	mulsd	%xmm14, %xmm10
.Ltmp689:
	.loc	12 61 54                # txinvr.c:61:54
	subsd	%xmm10, %xmm7
	.loc	12 61 66                # txinvr.c:61:66
	mulsd	%xmm8, %xmm5
.Ltmp690:
	.loc	12 61 62                # txinvr.c:61:62
	subsd	%xmm5, %xmm7
	.loc	12 61 70                # txinvr.c:61:70
	addsd	(%rsi), %xmm7
	.loc	12 61 26                # txinvr.c:61:26
	mulsd	%xmm6, %xmm7
.Ltmp691:
	#DEBUG_VALUE: txinvr:t1 <- %XMM7
	.loc	12 63 32 is_stmt 1      # txinvr.c:63:32
	mulsd	%xmm7, %xmm4
.Ltmp692:
	#DEBUG_VALUE: txinvr:t3 <- %XMM4
	.loc	12 65 30                # txinvr.c:65:30
	subsd	%xmm7, %xmm3
.Ltmp693:
	.loc	12 65 25 is_stmt 0      # txinvr.c:65:25
	movsd	%xmm3, -32(%rsi)
	.loc	12 66 33 is_stmt 1      # txinvr.c:66:33
	xorpd	%xmm11, %xmm1
	.loc	12 66 25 is_stmt 0      # txinvr.c:66:25
	movlpd	%xmm1, -24(%rsi)
	.loc	12 67 25 is_stmt 1      # txinvr.c:67:25
	movsd	%xmm0, -16(%rsi)
	.loc	12 68 32                # txinvr.c:68:32
	movapd	%xmm4, %xmm0
	subsd	%xmm2, %xmm0
	.loc	12 68 25 is_stmt 0      # txinvr.c:68:25
	movsd	%xmm0, -8(%rsi)
	.loc	12 69 32 is_stmt 1      # txinvr.c:69:32
	addsd	%xmm2, %xmm4
.Ltmp694:
	.loc	12 69 25 is_stmt 0      # txinvr.c:69:25
	movsd	%xmm4, (%rsi)
.Ltmp695:
	.loc	12 47 7 is_stmt 1 discriminator 1 # txinvr.c:47:7
	incq	%r11
	addq	$40, %rsi
	cmpl	%r11d, %r13d
	jne	.LBB7_10
.Ltmp696:
.LBB7_11:                               # %for.inc136
                                        #   in Loop: Header=BB7_5 Depth=2
	.loc	12 46 5 discriminator 1 # txinvr.c:46:5
	incq	%rbp
	addq	$520, %r9               # imm = 0x208
	addq	$520, %rbx              # imm = 0x208
	addq	$2600, %rax             # imm = 0xA28
	cmpl	%r14d, %ebp
	jne	.LBB7_5
.Ltmp697:
.LBB7_12:                               # %for.inc139
                                        #   in Loop: Header=BB7_4 Depth=1
	movq	24(%rsp), %r9           # 8-byte Reload
	.loc	12 45 3 discriminator 1 # txinvr.c:45:3
	addq	$33800, %r9             # imm = 0x8408
	addq	$33800, %r15            # imm = 0x8408
	addq	$169000, %r12           # imm = 0x29428
	movq	32(%rsp), %rax          # 8-byte Reload
	.loc	12 45 17 is_stmt 0 discriminator 1 # txinvr.c:45:17
	cmpq	16(%rsp), %rax          # 8-byte Folded Reload
	.loc	12 45 3 discriminator 1 # txinvr.c:45:3
	leaq	1(%rax), %rax
	jl	.LBB7_4
.Ltmp698:
.LBB7_13:                               # %for.end141
	.loc	12 73 7 is_stmt 1       # txinvr.c:73:7
	cmpl	$0, timeron(%rip)
	je	.LBB7_14
# BB#15:                                # %if.then143
	.loc	12 73 16 is_stmt 0 discriminator 1 # txinvr.c:73:16
	movl	$11, %edi
	addq	$104, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	timer_stop              # TAILCALL
.Ltmp699:
.LBB7_14:                               # %if.end144
	.loc	12 74 1 is_stmt 1       # txinvr.c:74:1
	addq	$104, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp700:
.Lfunc_end7:
	.size	txinvr, .Lfunc_end7-txinvr
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI8_0:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
.LCPI8_2:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI8_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	x_solve
	.p2align	4, 0x90
	.type	x_solve,@function
x_solve:                                # @x_solve
.Lfunc_begin8:
	.file	13 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/x_solve.c"
	.loc	13 43 0                 # x_solve.c:43:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	13 47 7 prologue_end    # x_solve.c:47:7
	pushq	%rbp
.Ltmp701:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp702:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp703:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp704:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp705:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp706:
	.cfi_def_cfa_offset 56
	subq	$344, %rsp              # imm = 0x158
.Ltmp707:
	.cfi_def_cfa_offset 400
.Ltmp708:
	.cfi_offset %rbx, -56
.Ltmp709:
	.cfi_offset %r12, -48
.Ltmp710:
	.cfi_offset %r13, -40
.Ltmp711:
	.cfi_offset %r14, -32
.Ltmp712:
	.cfi_offset %r15, -24
.Ltmp713:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB8_2
# BB#1:                                 # %if.then
	.loc	13 47 16 is_stmt 0 discriminator 1 # x_solve.c:47:16
	movl	$6, %edi
	callq	timer_start
.Ltmp714:
.LBB8_2:                                # %for.cond.preheader
	.loc	13 48 17 is_stmt 1 discriminator 1 # x_solve.c:48:17
	cmpl	$0, nz2(%rip)
	jle	.LBB8_7
# BB#3:                                 # %for.body.preheader
.Ltmp715:
	.loc	13 49 20                # x_solve.c:49:20
	movl	ny2(%rip), %r11d
	movl	$1, %r14d
	movl	$rho_i+34320, %r13d
	movl	$speed+34336, %r15d
	movl	$rhs+171696, %r12d
	xorl	%r9d, %r9d
	movl	$rhs+171704, %ebx
	xorl	%eax, %eax
	movq	%rax, 56(%rsp)          # 8-byte Spill
	jmp	.LBB8_4
.LBB8_47:                               #   in Loop: Header=BB8_4 Depth=1
	movq	8(%rsp), %rbx           # 8-byte Reload
	jmp	.LBB8_6
.LBB8_43:                               #   in Loop: Header=BB8_4 Depth=1
	movq	8(%rsp), %rbx           # 8-byte Reload
	jmp	.LBB8_6
.LBB8_60:                               #   in Loop: Header=BB8_4 Depth=1
	movq	%r10, %rbx
	jmp	.LBB8_6
	.p2align	4, 0x90
.LBB8_4:                                # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB8_12 Depth 2
                                        #       Child Loop BB8_13 Depth 3
                                        #     Child Loop BB8_21 Depth 2
                                        #       Child Loop BB8_23 Depth 3
                                        #       Child Loop BB8_19 Depth 3
                                        #       Child Loop BB8_15 Depth 3
                                        #     Child Loop BB8_45 Depth 2
                                        #     Child Loop BB8_30 Depth 2
                                        #       Child Loop BB8_31 Depth 3
                                        #     Child Loop BB8_35 Depth 2
                                        #     Child Loop BB8_39 Depth 2
                                        #       Child Loop BB8_40 Depth 3
                                        #     Child Loop BB8_49 Depth 2
                                        #       Child Loop BB8_51 Depth 3
                                        #     Child Loop BB8_62 Depth 2
                                        #     Child Loop BB8_55 Depth 2
                                        #       Child Loop BB8_57 Depth 3
                                        #     Child Loop BB8_73 Depth 2
                                        #     Child Loop BB8_65 Depth 2
                                        #     Child Loop BB8_68 Depth 2
                                        #       Child Loop BB8_69 Depth 3
	movq	%r9, 16(%rsp)           # 8-byte Spill
	.loc	13 49 13 is_stmt 0      # x_solve.c:49:13
	incq	56(%rsp)                # 8-byte Folded Spill
	movl	nx2(%rip), %edi
	.loc	13 49 16                # x_solve.c:49:16
	incl	%edi
	.loc	13 49 5                 # x_solve.c:49:5
	movl	%r11d, %esi
	callq	lhsinit
.Ltmp716:
	.loc	13 192 5 is_stmt 1 discriminator 1 # x_solve.c:192:5
	movslq	ny2(%rip), %r11
.Ltmp717:
	#DEBUG_VALUE: x_solve:j <- 1
	.loc	13 192 22 is_stmt 0 discriminator 1 # x_solve.c:192:22
	movq	%r11, 96(%rsp)          # 8-byte Spill
	testq	%r11, %r11
	jle	.LBB8_5
.Ltmp718:
# BB#10:                                # %for.cond4.preheader.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
	movq	%rbx, 8(%rsp)           # 8-byte Spill
	movq	%r12, 32(%rsp)          # 8-byte Spill
	movq	%r15, 40(%rsp)          # 8-byte Spill
	movq	%r14, 48(%rsp)          # 8-byte Spill
.Ltmp719:
	.loc	13 60 20 is_stmt 1      # x_solve.c:60:20
	movslq	grid_points(%rip), %r15
.Ltmp720:
	.loc	13 59 24 discriminator 1 # x_solve.c:59:24
	testq	%r15, %r15
.Ltmp721:
	.loc	13 60 20                # x_solve.c:60:20
	movl	nx2(%rip), %r12d
.Ltmp722:
	.loc	13 67 25                # x_solve.c:67:25
	movsd	dttx2(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	13 67 43 is_stmt 0      # x_solve.c:67:43
	movsd	%xmm0, 88(%rsp)         # 8-byte Spill
	movsd	dttx1(%rip), %xmm7      # xmm7 = mem[0],zero
	.loc	13 68 31 is_stmt 1      # x_solve.c:68:31
	movsd	%xmm7, 80(%rsp)         # 8-byte Spill
	movsd	c2dttx1(%rip), %xmm1    # xmm1 = mem[0],zero
	movsd	%xmm1, 72(%rsp)         # 8-byte Spill
	movapd	.LCPI8_0(%rip), %xmm6   # xmm6 = [9223372036854775808,9223372036854775808]
	movsd	.LCPI8_1(%rip), %xmm10  # xmm10 = mem[0],zero
	jle	.LBB8_11
.Ltmp723:
# BB#20:                                # %for.body6.lr.ph.us.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 60 15                # x_solve.c:60:15
	movsd	c3c4(%rip), %xmm0       # xmm0 = mem[0],zero
	.loc	13 62 19                # x_solve.c:62:19
	movapd	%xmm0, 304(%rsp)        # 16-byte Spill
	movsd	dx2(%rip), %xmm1        # xmm1 = mem[0],zero
	movapd	%xmm1, 288(%rsp)        # 16-byte Spill
	movsd	con43(%rip), %xmm2      # xmm2 = mem[0],zero
	movapd	%xmm2, 272(%rsp)        # 16-byte Spill
	movsd	dx5(%rip), %xmm3        # xmm3 = mem[0],zero
	movapd	%xmm3, 256(%rsp)        # 16-byte Spill
	movsd	c1c5(%rip), %xmm4       # xmm4 = mem[0],zero
	.loc	13 62 19 is_stmt 0 discriminator 3 # x_solve.c:62:19
	movapd	%xmm4, 240(%rsp)        # 16-byte Spill
	movsd	dxmax(%rip), %xmm5      # xmm5 = mem[0],zero
	movapd	%xmm5, 224(%rsp)        # 16-byte Spill
	movsd	dx1(%rip), %xmm6        # xmm6 = mem[0],zero
	.loc	13 60 20 is_stmt 1      # x_solve.c:60:20
	movapd	%xmm6, 208(%rsp)        # 16-byte Spill
	testl	%r15d, %r15d
	movl	$1, %eax
	cmovgl	%r15d, %eax
	decl	%eax
	leaq	8(,%rax,8), %rax
.Ltmp724:
	.loc	13 59 7 discriminator 1 # x_solve.c:59:7
	movq	%rax, 64(%rsp)          # 8-byte Spill
	movq	%r15, %rbp
	andq	$-2, %rbp
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 192(%rsp)        # 16-byte Spill
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 176(%rsp)        # 16-byte Spill
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 160(%rsp)        # 16-byte Spill
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movaps	%xmm4, 144(%rsp)        # 16-byte Spill
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 128(%rsp)        # 16-byte Spill
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movaps	%xmm5, 112(%rsp)        # 16-byte Spill
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	movaps	%xmm6, 320(%rsp)        # 16-byte Spill
	movl	$lhs+2672, %r14d
	movq	%r13, %rbx
	movq	%r13, 24(%rsp)          # 8-byte Spill
	movl	$1, %r13d
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB8_21:                               # %for.body6.lr.ph.us
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_23 Depth 3
                                        #       Child Loop BB8_19 Depth 3
                                        #       Child Loop BB8_15 Depth 3
.Ltmp725:
	.loc	13 60 20                # x_solve.c:60:20
	incq	%rcx
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	imulq	$33800, 56(%rsp), %rax  # 8-byte Folded Reload
                                        # imm = 0x8408
	imulq	$520, %rcx, %rcx        # imm = 0x208
	leaq	us(%rax,%rcx), %rsi
	.loc	13 61 15                # x_solve.c:61:15
	movl	$cv, %edi
	movq	64(%rsp), %rdx          # 8-byte Reload
	callq	memcpy
	cmpl	$2, %r15d
	movl	$0, %eax
	movapd	304(%rsp), %xmm8        # 16-byte Reload
	movapd	288(%rsp), %xmm9        # 16-byte Reload
	movapd	272(%rsp), %xmm5        # 16-byte Reload
	movapd	256(%rsp), %xmm6        # 16-byte Reload
	movapd	240(%rsp), %xmm7        # 16-byte Reload
	movapd	224(%rsp), %xmm3        # 16-byte Reload
	movapd	208(%rsp), %xmm4        # 16-byte Reload
	movapd	192(%rsp), %xmm10       # 16-byte Reload
	movapd	176(%rsp), %xmm11       # 16-byte Reload
	movapd	160(%rsp), %xmm12       # 16-byte Reload
	movapd	144(%rsp), %xmm13       # 16-byte Reload
	movapd	128(%rsp), %xmm14       # 16-byte Reload
	movapd	112(%rsp), %xmm15       # 16-byte Reload
	jb	.LBB8_19
.Ltmp726:
# BB#22:                                # %min.iters.checked
                                        #   in Loop: Header=BB8_21 Depth=2
	testq	%rbp, %rbp
	movl	$0, %eax
	.loc	13 59 7 discriminator 1 # x_solve.c:59:7
	movq	%rbx, %rcx
	movl	$0, %edx
	je	.LBB8_19
	.p2align	4, 0x90
.LBB8_23:                               # %vector.body
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_21 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp727:
	.loc	13 60 20                # x_solve.c:60:20
	movupd	(%rcx), %xmm0
	.loc	13 60 19 is_stmt 0      # x_solve.c:60:19
	mulpd	%xmm10, %xmm0
	.loc	13 62 19 is_stmt 1      # x_solve.c:62:19
	movapd	%xmm0, %xmm1
	mulpd	%xmm11, %xmm1
	addpd	%xmm12, %xmm1
	movapd	%xmm0, %xmm2
	mulpd	%xmm13, %xmm2
	addpd	%xmm14, %xmm2
	.loc	13 62 19 is_stmt 0 discriminator 1 # x_solve.c:62:19
	maxpd	%xmm2, %xmm1
	.loc	13 62 19 discriminator 3 # x_solve.c:62:19
	addpd	%xmm15, %xmm0
	maxpd	320(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	13 62 19 discriminator 6 # x_solve.c:62:19
	maxpd	%xmm0, %xmm1
	.loc	13 62 17 discriminator 15 # x_solve.c:62:17
	movapd	%xmm1, rhon(,%rdx,8)
.Ltmp728:
	.loc	13 59 7 is_stmt 1 discriminator 1 # x_solve.c:59:7
	addq	$2, %rdx
	addq	$16, %rcx
	cmpq	%rdx, %rbp
	jne	.LBB8_23
# BB#24:                                # %middle.block
                                        #   in Loop: Header=BB8_21 Depth=2
	cmpq	%rbp, %r15
	movq	%rbp, %rax
	je	.LBB8_25
	.p2align	4, 0x90
.LBB8_19:                               # %for.body6.us
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_21 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	(%rbx,%rax,8), %xmm0    # xmm0 = mem[0],zero
.Ltmp729:
	.loc	13 60 19                # x_solve.c:60:19
	mulsd	%xmm8, %xmm0
.Ltmp730:
	#DEBUG_VALUE: x_solve:ru1 <- %XMM0
	.loc	13 62 19                # x_solve.c:62:19
	movapd	%xmm0, %xmm1
	mulsd	%xmm5, %xmm1
	addsd	%xmm9, %xmm1
	movapd	%xmm0, %xmm2
	mulsd	%xmm7, %xmm2
	addsd	%xmm6, %xmm2
	.loc	13 62 19 is_stmt 0 discriminator 1 # x_solve.c:62:19
	maxsd	%xmm2, %xmm1
	.loc	13 62 19 discriminator 3 # x_solve.c:62:19
	addsd	%xmm3, %xmm0
.Ltmp731:
	maxsd	%xmm4, %xmm0
	.loc	13 62 19 discriminator 6 # x_solve.c:62:19
	maxsd	%xmm0, %xmm1
	.loc	13 62 17 discriminator 15 # x_solve.c:62:17
	movsd	%xmm1, rhon(,%rax,8)
.Ltmp732:
	.loc	13 59 7 is_stmt 1 discriminator 1 # x_solve.c:59:7
	incq	%rax
	.loc	13 59 21 is_stmt 0 discriminator 1 # x_solve.c:59:21
	cmpq	%r15, %rax
	jl	.LBB8_19
.Ltmp733:
.LBB8_25:                               # %for.cond4.for.cond62.preheader_crit_edge.us
                                        #   in Loop: Header=BB8_21 Depth=2
	testl	%r12d, %r12d
	movq	96(%rsp), %r11          # 8-byte Reload
	movapd	.LCPI8_0(%rip), %xmm4   # xmm4 = [9223372036854775808,9223372036854775808]
	movsd	.LCPI8_1(%rip), %xmm10  # xmm10 = mem[0],zero
	movsd	88(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	80(%rsp), %xmm6         # 8-byte Reload
                                        # xmm6 = mem[0],zero
	movsd	72(%rsp), %xmm7         # 8-byte Reload
                                        # xmm7 = mem[0],zero
	jle	.LBB8_16
# BB#26:                                # %for.body64.lr.ph.us
                                        #   in Loop: Header=BB8_21 Depth=2
.Ltmp734:
	.loc	13 67 51 is_stmt 1      # x_solve.c:67:51
	movsd	rhon(%rip), %xmm1       # xmm1 = mem[0],zero
	.loc	13 68 41                # x_solve.c:68:41
	movsd	rhon+8(%rip), %xmm0     # xmm0 = mem[0],zero
	movq	%r14, %rax
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB8_15:                               # %for.body64.us
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_21 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	13 66 22                # x_solve.c:66:22
	movq	$0, -32(%rax)
	movsd	cv(,%rcx,8), %xmm2      # xmm2 = mem[0],zero
	.loc	13 67 31                # x_solve.c:67:31
	mulsd	%xmm5, %xmm2
	xorpd	%xmm4, %xmm2
	.loc	13 67 49 is_stmt 0      # x_solve.c:67:49
	mulsd	%xmm6, %xmm1
	.loc	13 67 41                # x_solve.c:67:41
	subsd	%xmm1, %xmm2
	.loc	13 67 22                # x_solve.c:67:22
	movsd	%xmm2, -24(%rax)
	.loc	13 68 39 is_stmt 1      # x_solve.c:68:39
	movapd	%xmm7, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	13 68 29 is_stmt 0      # x_solve.c:68:29
	addsd	%xmm10, %xmm1
	.loc	13 68 22                # x_solve.c:68:22
	movsd	%xmm1, -16(%rax)
	movsd	cv+16(,%rcx,8), %xmm2   # xmm2 = mem[0],zero
	.loc	13 69 31 is_stmt 1      # x_solve.c:69:31
	mulsd	%xmm5, %xmm2
	.loc	13 67 51                # x_solve.c:67:51
	movapd	%xmm0, %xmm1
	.loc	13 69 51                # x_solve.c:69:51
	movsd	rhon+16(,%rcx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	13 69 49 is_stmt 0      # x_solve.c:69:49
	movapd	%xmm6, %xmm3
	mulsd	%xmm0, %xmm3
	.loc	13 69 41                # x_solve.c:69:41
	subsd	%xmm3, %xmm2
	.loc	13 69 22                # x_solve.c:69:22
	movsd	%xmm2, -8(%rax)
	.loc	13 70 22 is_stmt 1      # x_solve.c:70:22
	movq	$0, (%rax)
.Ltmp735:
	.loc	13 65 7 discriminator 1 # x_solve.c:65:7
	incq	%rcx
	addq	$40, %rax
	cmpl	%ecx, %r12d
	jne	.LBB8_15
.Ltmp736:
.LBB8_16:                               # %for.inc116.us
                                        #   in Loop: Header=BB8_21 Depth=2
	.loc	13 58 5 discriminator 1 # x_solve.c:58:5
	addq	$520, %rbx              # imm = 0x208
	addq	$2600, %r14             # imm = 0xA28
	.loc	13 58 19 is_stmt 0 discriminator 1 # x_solve.c:58:19
	cmpq	%r11, %r13
	.loc	13 58 5 discriminator 1 # x_solve.c:58:5
	leaq	1(%r13), %r13
	movq	104(%rsp), %rcx         # 8-byte Reload
	jl	.LBB8_21
	jmp	.LBB8_17
	.p2align	4, 0x90
.LBB8_5:                                #   in Loop: Header=BB8_4 Depth=1
	movq	16(%rsp), %r9           # 8-byte Reload
	jmp	.LBB8_6
	.p2align	4, 0x90
.LBB8_11:                               # %for.cond62.preheader.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	movq	%r13, 24(%rsp)          # 8-byte Spill
.Ltmp737:
	.loc	13 67 51 is_stmt 1      # x_solve.c:67:51
	movsd	rhon(%rip), %xmm8       # xmm8 = mem[0],zero
	.loc	13 68 41                # x_solve.c:68:41
	movsd	rhon+8(%rip), %xmm9     # xmm9 = mem[0],zero
	movl	$lhs+2672, %eax
	movl	$1, %ecx
	.p2align	4, 0x90
.LBB8_12:                               # %for.cond62.preheader
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_13 Depth 3
	testl	%r12d, %r12d
	movl	$0, %edx
	movq	%rax, %rsi
	movapd	%xmm9, %xmm2
	.loc	13 67 51                # x_solve.c:67:51
	movapd	%xmm8, %xmm3
	jle	.LBB8_14
	.p2align	4, 0x90
.LBB8_13:                               # %for.body64
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_12 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	13 66 22                # x_solve.c:66:22
	movq	$0, -32(%rsi)
	movsd	cv(,%rdx,8), %xmm4      # xmm4 = mem[0],zero
	.loc	13 67 31                # x_solve.c:67:31
	mulsd	%xmm0, %xmm4
	xorpd	%xmm6, %xmm4
	.loc	13 67 49 is_stmt 0      # x_solve.c:67:49
	mulsd	%xmm7, %xmm3
	.loc	13 67 41                # x_solve.c:67:41
	subsd	%xmm3, %xmm4
	.loc	13 67 22                # x_solve.c:67:22
	movsd	%xmm4, -24(%rsi)
	.loc	13 68 39 is_stmt 1      # x_solve.c:68:39
	movapd	%xmm1, %xmm3
	mulsd	%xmm2, %xmm3
	.loc	13 68 29 is_stmt 0      # x_solve.c:68:29
	addsd	%xmm10, %xmm3
	.loc	13 68 22                # x_solve.c:68:22
	movsd	%xmm3, -16(%rsi)
	movsd	cv+16(,%rdx,8), %xmm4   # xmm4 = mem[0],zero
	.loc	13 69 31 is_stmt 1      # x_solve.c:69:31
	mulsd	%xmm0, %xmm4
	.loc	13 67 51                # x_solve.c:67:51
	movapd	%xmm2, %xmm3
	.loc	13 69 51                # x_solve.c:69:51
	movsd	rhon+16(,%rdx,8), %xmm2 # xmm2 = mem[0],zero
	.loc	13 69 49 is_stmt 0      # x_solve.c:69:49
	movapd	%xmm7, %xmm5
	mulsd	%xmm2, %xmm5
	.loc	13 69 41                # x_solve.c:69:41
	subsd	%xmm5, %xmm4
	.loc	13 69 22                # x_solve.c:69:22
	movsd	%xmm4, -8(%rsi)
	.loc	13 70 22 is_stmt 1      # x_solve.c:70:22
	movq	$0, (%rsi)
.Ltmp738:
	.loc	13 65 7 discriminator 1 # x_solve.c:65:7
	addq	$40, %rsi
	incq	%rdx
	cmpl	%edx, %r12d
	jne	.LBB8_13
.Ltmp739:
.LBB8_14:                               # %for.inc116
                                        #   in Loop: Header=BB8_12 Depth=2
	.loc	13 58 5 discriminator 1 # x_solve.c:58:5
	addq	$2600, %rax             # imm = 0xA28
	.loc	13 58 19 is_stmt 0 discriminator 1 # x_solve.c:58:19
	cmpq	%r11, %rcx
	.loc	13 58 5 discriminator 1 # x_solve.c:58:5
	leaq	1(%rcx), %rcx
	jl	.LBB8_12
.Ltmp740:
.LBB8_17:                               # %for.cond119.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	jle	.LBB8_18
# BB#44:                                # %for.body121.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp741:
	.loc	13 79 37 is_stmt 1      # x_solve.c:79:37
	movsd	comz5(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	13 80 37                # x_solve.c:80:37
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	13 81 37                # x_solve.c:81:37
	movsd	comz1(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	13 84 41                # x_solve.c:84:41
	movsd	comz6(%rip), %xmm3      # xmm3 = mem[0],zero
	movl	$lhs+2712, %eax
	xorl	%ecx, %ecx
	movq	48(%rsp), %r14          # 8-byte Reload
	movq	40(%rsp), %r15          # 8-byte Reload
	movq	32(%rsp), %r12          # 8-byte Reload
	movq	16(%rsp), %r9           # 8-byte Reload
	movq	8(%rsp), %rbx           # 8-byte Reload
	.p2align	4, 0x90
.LBB8_45:                               # %for.body121
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp742:
	#DEBUG_VALUE: x_solve:i <- 1
	movsd	-56(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	13 79 35                # x_solve.c:79:35
	addsd	%xmm0, %xmm4
	.loc	13 79 20 is_stmt 0      # x_solve.c:79:20
	movsd	%xmm4, -56(%rax)
	.loc	13 80 22 is_stmt 1      # x_solve.c:80:22
	movsd	-48(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	13 80 35 is_stmt 0      # x_solve.c:80:35
	subsd	%xmm1, %xmm4
	.loc	13 80 20                # x_solve.c:80:20
	movsd	%xmm4, -48(%rax)
	movsd	-40(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	13 81 35 is_stmt 1      # x_solve.c:81:35
	addsd	%xmm2, %xmm4
	.loc	13 81 20 is_stmt 0      # x_solve.c:81:20
	movsd	%xmm4, -40(%rax)
	.loc	13 83 24 is_stmt 1      # x_solve.c:83:24
	movsd	-24(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	13 83 39 is_stmt 0      # x_solve.c:83:39
	subsd	%xmm1, %xmm4
	.loc	13 83 22                # x_solve.c:83:22
	movsd	%xmm4, -24(%rax)
	movsd	-16(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	13 84 39 is_stmt 1      # x_solve.c:84:39
	addsd	%xmm3, %xmm4
	.loc	13 84 22 is_stmt 0      # x_solve.c:84:22
	movsd	%xmm4, -16(%rax)
	.loc	13 85 24 is_stmt 1      # x_solve.c:85:24
	movsd	-8(%rax), %xmm4         # xmm4 = mem[0],zero
	.loc	13 85 39 is_stmt 0      # x_solve.c:85:39
	subsd	%xmm1, %xmm4
	.loc	13 85 22                # x_solve.c:85:22
	movsd	%xmm4, -8(%rax)
	movsd	(%rax), %xmm4           # xmm4 = mem[0],zero
	.loc	13 86 39 is_stmt 1      # x_solve.c:86:39
	addsd	%xmm2, %xmm4
	.loc	13 86 22 is_stmt 0      # x_solve.c:86:22
	movsd	%xmm4, (%rax)
.Ltmp743:
	.loc	13 77 19 is_stmt 1 discriminator 1 # x_solve.c:77:19
	incq	%rcx
	addq	$2600, %rax             # imm = 0xA28
	cmpq	%r11, %rcx
	jl	.LBB8_45
.Ltmp744:
# BB#27:                                # %for.cond210.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	movq	24(%rsp), %r13          # 8-byte Reload
	jle	.LBB8_6
# BB#28:                                # %for.cond213.preheader.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp745:
	.loc	13 91 24                # x_solve.c:91:24
	movslq	grid_points(%rip), %rax
.Ltmp746:
	.loc	13 90 38 discriminator 1 # x_solve.c:90:38
	addq	$-4, %rax
	.loc	13 90 21 is_stmt 0 discriminator 1 # x_solve.c:90:21
	cmpl	$3, %eax
	jl	.LBB8_34
# BB#29:                                # %for.body216.lr.ph.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp747:
	.loc	13 91 39 is_stmt 1      # x_solve.c:91:39
	movsd	comz1(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	13 92 39                # x_solve.c:92:39
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	13 93 39                # x_solve.c:93:39
	movsd	comz6(%rip), %xmm2      # xmm2 = mem[0],zero
	movl	$lhs+2752, %ecx
	movl	$1, %edx
	.p2align	4, 0x90
.LBB8_30:                               # %for.body216.lr.ph
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_31 Depth 3
	movq	%rcx, %rsi
	movl	$2, %edi
	.p2align	4, 0x90
.LBB8_31:                               # %for.body216
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_30 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	-32(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 91 37                # x_solve.c:91:37
	addsd	%xmm0, %xmm3
	.loc	13 91 22 is_stmt 0      # x_solve.c:91:22
	movsd	%xmm3, -32(%rsi)
	.loc	13 92 24 is_stmt 1      # x_solve.c:92:24
	movsd	-24(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 92 37 is_stmt 0      # x_solve.c:92:37
	subsd	%xmm1, %xmm3
	.loc	13 92 22                # x_solve.c:92:22
	movsd	%xmm3, -24(%rsi)
	movsd	-16(%rsi), %xmm3        # xmm3 = mem[0],zero
	.loc	13 93 37 is_stmt 1      # x_solve.c:93:37
	addsd	%xmm2, %xmm3
	.loc	13 93 22 is_stmt 0      # x_solve.c:93:22
	movsd	%xmm3, -16(%rsi)
	.loc	13 94 24 is_stmt 1      # x_solve.c:94:24
	movsd	-8(%rsi), %xmm3         # xmm3 = mem[0],zero
	.loc	13 94 37 is_stmt 0      # x_solve.c:94:37
	subsd	%xmm1, %xmm3
	.loc	13 94 22                # x_solve.c:94:22
	movsd	%xmm3, -8(%rsi)
	movsd	(%rsi), %xmm3           # xmm3 = mem[0],zero
	.loc	13 95 37 is_stmt 1      # x_solve.c:95:37
	addsd	%xmm0, %xmm3
	.loc	13 95 22 is_stmt 0      # x_solve.c:95:22
	movsd	%xmm3, (%rsi)
.Ltmp748:
	.loc	13 90 21 is_stmt 1 discriminator 1 # x_solve.c:90:21
	incq	%rdi
	addq	$40, %rsi
	cmpq	%rax, %rdi
	.loc	13 90 7 is_stmt 0 discriminator 1 # x_solve.c:90:7
	jl	.LBB8_31
.Ltmp749:
# BB#32:                                # %for.inc275
                                        #   in Loop: Header=BB8_30 Depth=2
	.loc	13 89 5 is_stmt 1 discriminator 1 # x_solve.c:89:5
	addq	$2600, %rcx             # imm = 0xA28
	.loc	13 89 19 is_stmt 0 discriminator 1 # x_solve.c:89:19
	cmpq	%r11, %rdx
	.loc	13 89 5 discriminator 1 # x_solve.c:89:5
	leaq	1(%rdx), %rdx
	jl	.LBB8_30
.Ltmp750:
# BB#33:                                # %for.cond278.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	jle	.LBB8_6
.LBB8_34:                               # %for.body280.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp751:
	.loc	13 106 24 is_stmt 1     # x_solve.c:106:24
	movslq	grid_points(%rip), %rcx
	.loc	13 101 37               # x_solve.c:101:37
	movsd	comz1(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	13 102 37               # x_solve.c:102:37
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	13 103 37               # x_solve.c:103:37
	movsd	comz6(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	13 106 32               # x_solve.c:106:32
	shlq	$3, %rcx
	.loc	13 108 41               # x_solve.c:108:41
	movsd	comz5(%rip), %xmm3      # xmm3 = mem[0],zero
.Ltmp752:
	.loc	13 99 5 discriminator 1 # x_solve.c:99:5
	leaq	lhs+2504(%rcx,%rcx,4), %rax
	leaq	lhs+2536(%rcx,%rcx,4), %rcx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB8_35:                               # %for.body280
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movsd	-24(%rax), %xmm4        # xmm4 = mem[0],zero
.Ltmp753:
	.loc	13 101 35               # x_solve.c:101:35
	addsd	%xmm0, %xmm4
	.loc	13 101 20 is_stmt 0     # x_solve.c:101:20
	movsd	%xmm4, -24(%rax)
	.loc	13 102 22 is_stmt 1     # x_solve.c:102:22
	movsd	-16(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	13 102 35 is_stmt 0     # x_solve.c:102:35
	subsd	%xmm1, %xmm4
	.loc	13 102 20               # x_solve.c:102:20
	movsd	%xmm4, -16(%rax)
	movsd	-8(%rax), %xmm4         # xmm4 = mem[0],zero
	.loc	13 103 35 is_stmt 1     # x_solve.c:103:35
	addsd	%xmm2, %xmm4
	.loc	13 103 20 is_stmt 0     # x_solve.c:103:20
	movsd	%xmm4, -8(%rax)
	.loc	13 104 22 is_stmt 1     # x_solve.c:104:22
	movsd	(%rax), %xmm4           # xmm4 = mem[0],zero
	.loc	13 104 35 is_stmt 0     # x_solve.c:104:35
	subsd	%xmm1, %xmm4
	.loc	13 104 20               # x_solve.c:104:20
	movsd	%xmm4, (%rax)
	movsd	-16(%rcx), %xmm4        # xmm4 = mem[0],zero
	.loc	13 106 39 is_stmt 1     # x_solve.c:106:39
	addsd	%xmm0, %xmm4
	.loc	13 106 22 is_stmt 0     # x_solve.c:106:22
	movsd	%xmm4, -16(%rcx)
	.loc	13 107 24 is_stmt 1     # x_solve.c:107:24
	movsd	-8(%rcx), %xmm4         # xmm4 = mem[0],zero
	.loc	13 107 39 is_stmt 0     # x_solve.c:107:39
	subsd	%xmm1, %xmm4
	.loc	13 107 22               # x_solve.c:107:22
	movsd	%xmm4, -8(%rcx)
	movsd	(%rcx), %xmm4           # xmm4 = mem[0],zero
	.loc	13 108 39 is_stmt 1     # x_solve.c:108:39
	addsd	%xmm3, %xmm4
	.loc	13 108 22 is_stmt 0     # x_solve.c:108:22
	movsd	%xmm4, (%rcx)
.Ltmp754:
	.loc	13 99 19 is_stmt 1 discriminator 1 # x_solve.c:99:19
	incq	%rdx
	addq	$2600, %rax             # imm = 0xA28
	addq	$2600, %rcx             # imm = 0xA28
	cmpq	%r11, %rdx
	.loc	13 99 5 is_stmt 0 discriminator 1 # x_solve.c:99:5
	jl	.LBB8_35
.Ltmp755:
# BB#36:                                # %for.cond368.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	jle	.LBB8_6
# BB#37:                                # %for.cond371.preheader.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp756:
	.loc	13 116 24 is_stmt 1 discriminator 1 # x_solve.c:116:24
	movl	nx2(%rip), %r8d
	.loc	13 116 21 is_stmt 0 discriminator 1 # x_solve.c:116:21
	testl	%r8d, %r8d
	jle	.LBB8_48
# BB#38:                                # %for.body373.lr.ph.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp757:
	.loc	13 118 40 is_stmt 1     # x_solve.c:118:40
	movsd	dttx2(%rip), %xmm0      # xmm0 = mem[0],zero
	movq	%r15, %r9
	xorl	%r10d, %r10d
	movl	$1, %esi
	.p2align	4, 0x90
.LBB8_39:                               # %for.body373.lr.ph
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_40 Depth 3
	movl	%r8d, %edi
	movq	%r9, %rcx
	movq	%r10, %rdx
	.p2align	4, 0x90
.LBB8_40:                               # %for.body373
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_39 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	13 117 25               # x_solve.c:117:25
	movq	lhs+2640(%rdx), %rax
	.loc	13 117 23 is_stmt 0     # x_solve.c:117:23
	movq	%rax, lhsp+2640(%rdx)
	.loc	13 118 25 is_stmt 1     # x_solve.c:118:25
	movsd	lhs+2648(%rdx), %xmm1   # xmm1 = mem[0],zero
	movsd	-16(%rcx), %xmm2        # xmm2 = mem[0],zero
	.loc	13 118 46 is_stmt 0     # x_solve.c:118:46
	mulsd	%xmm0, %xmm2
	.loc	13 118 38               # x_solve.c:118:38
	movapd	%xmm1, %xmm3
	subsd	%xmm2, %xmm3
	.loc	13 118 23               # x_solve.c:118:23
	movsd	%xmm3, lhsp+2648(%rdx)
	.loc	13 119 25 is_stmt 1     # x_solve.c:119:25
	movq	lhs+2656(%rdx), %rbp
	.loc	13 119 23 is_stmt 0     # x_solve.c:119:23
	movq	%rbp, lhsp+2656(%rdx)
	.loc	13 120 25 is_stmt 1     # x_solve.c:120:25
	movsd	lhs+2664(%rdx), %xmm3   # xmm3 = mem[0],zero
	movsd	(%rcx), %xmm4           # xmm4 = mem[0],zero
	.loc	13 120 46 is_stmt 0     # x_solve.c:120:46
	mulsd	%xmm0, %xmm4
	.loc	13 120 38               # x_solve.c:120:38
	movapd	%xmm3, %xmm5
	addsd	%xmm4, %xmm5
	.loc	13 120 23               # x_solve.c:120:23
	movsd	%xmm5, lhsp+2664(%rdx)
	.loc	13 121 25 is_stmt 1     # x_solve.c:121:25
	movq	lhs+2672(%rdx), %rbx
	.loc	13 121 23 is_stmt 0     # x_solve.c:121:23
	movq	%rbx, lhsp+2672(%rdx)
	.loc	13 122 23 is_stmt 1     # x_solve.c:122:23
	movq	%rax, lhsm+2640(%rdx)
	.loc	13 123 38               # x_solve.c:123:38
	addsd	%xmm1, %xmm2
	.loc	13 123 23 is_stmt 0     # x_solve.c:123:23
	movsd	%xmm2, lhsm+2648(%rdx)
	.loc	13 124 23 is_stmt 1     # x_solve.c:124:23
	movq	%rbp, lhsm+2656(%rdx)
	.loc	13 125 38               # x_solve.c:125:38
	subsd	%xmm4, %xmm3
	.loc	13 125 23 is_stmt 0     # x_solve.c:125:23
	movsd	%xmm3, lhsm+2664(%rdx)
	.loc	13 126 23 is_stmt 1     # x_solve.c:126:23
	movq	%rbx, lhsm+2672(%rdx)
.Ltmp758:
	.loc	13 116 7 discriminator 1 # x_solve.c:116:7
	addq	$40, %rdx
	addq	$8, %rcx
	decl	%edi
	jne	.LBB8_40
.Ltmp759:
# BB#41:                                # %for.inc513
                                        #   in Loop: Header=BB8_39 Depth=2
	.loc	13 115 5 discriminator 1 # x_solve.c:115:5
	addq	$2600, %r10             # imm = 0xA28
	addq	$520, %r9               # imm = 0x208
	.loc	13 115 19 is_stmt 0 discriminator 1 # x_solve.c:115:19
	cmpq	%r11, %rsi
	.loc	13 115 5 discriminator 1 # x_solve.c:115:5
	leaq	1(%rsi), %rsi
	jl	.LBB8_39
.Ltmp760:
# BB#42:                                # %for.cond516.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	movq	16(%rsp), %r9           # 8-byte Reload
	jle	.LBB8_43
.LBB8_48:                               # %for.cond519.preheader.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp761:
	.loc	13 138 24 is_stmt 1 discriminator 1 # x_solve.c:138:24
	movl	grid_points(%rip), %eax
.Ltmp762:
	.loc	13 137 5 discriminator 1 # x_solve.c:137:5
	leal	-2(%rax), %r8d
	movq	%r12, %rbx
	movl	$lhs+2688, %ebp
	movl	$1, %edi
	.p2align	4, 0x90
.LBB8_49:                               # %for.cond519.preheader
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_51 Depth 3
	cmpl	$3, %eax
	jl	.LBB8_52
# BB#50:                                # %for.body522.lr.ph
                                        #   in Loop: Header=BB8_49 Depth=2
.Ltmp763:
	.loc	13 141 20               # x_solve.c:141:20
	imulq	$2600, %rdi, %rcx       # imm = 0xA28
	movsd	lhs+16(%rcx), %xmm2     # xmm2 = mem[0],zero
	.loc	13 142 29               # x_solve.c:142:29
	movsd	lhs+24(%rcx), %xmm4     # xmm4 = mem[0],zero
.Ltmp764:
	.loc	13 145 34               # x_solve.c:145:34
	imulq	$169000, %r14, %rdx     # imm = 0x29428
	movupd	rhs(%rdx,%rcx), %xmm8
	movsd	rhs+16(%rdx,%rcx), %xmm3 # xmm3 = mem[0],zero
.Ltmp765:
	.loc	13 147 41               # x_solve.c:147:41
	movups	lhs+48(%rcx), %xmm0
.Ltmp766:
	.loc	13 150 30               # x_solve.c:150:30
	movupd	rhs+40(%rdx,%rcx), %xmm9
	movsd	rhs+56(%rdx,%rcx), %xmm7 # xmm7 = mem[0],zero
	movl	%r8d, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rsi
.Ltmp767:
	.p2align	4, 0x90
.LBB8_51:                               # %for.body522
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_49 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	13 141 19               # x_solve.c:141:19
	movapd	%xmm10, %xmm5
	divsd	%xmm2, %xmm5
.Ltmp768:
	#DEBUG_VALUE: x_solve:fac1 <- %XMM5
	.loc	13 142 28               # x_solve.c:142:28
	movapd	%xmm5, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	movhpd	-56(%rsi), %xmm4        # xmm4 = xmm4[0],mem[0]
	mulpd	%xmm6, %xmm4
	.loc	13 142 22 is_stmt 0     # x_solve.c:142:22
	movlpd	%xmm4, -64(%rsi)
.Ltmp769:
	#DEBUG_VALUE: x_solve:m <- 0
	.loc	13 143 22 is_stmt 1     # x_solve.c:143:22
	movhpd	%xmm4, -56(%rsi)
.Ltmp770:
	.loc	13 145 33               # x_solve.c:145:33
	mulpd	%xmm8, %xmm6
	.loc	13 145 27 is_stmt 0     # x_solve.c:145:27
	movupd	%xmm6, -96(%rdx)
	.loc	13 145 33               # x_solve.c:145:33
	mulsd	%xmm3, %xmm5
.Ltmp771:
	.loc	13 145 27               # x_solve.c:145:27
	movsd	%xmm5, -80(%rdx)
.Ltmp772:
	.loc	13 147 54 is_stmt 1     # x_solve.c:147:54
	movaps	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, %xmm1
	mulpd	%xmm4, %xmm1
	.loc	13 147 39 is_stmt 0     # x_solve.c:147:39
	movaps	%xmm0, %xmm2
	shufpd	$1, %xmm2, %xmm2        # xmm2 = xmm2[1,0]
	movhpd	-24(%rsi), %xmm2        # xmm2 = xmm2[0],mem[0]
	subpd	%xmm1, %xmm2
	.loc	13 147 23               # x_solve.c:147:23
	movupd	%xmm2, -32(%rsi)
.Ltmp773:
	.loc	13 150 62 is_stmt 1     # x_solve.c:150:62
	mulpd	%xmm6, %xmm3
	.loc	13 150 47 is_stmt 0     # x_solve.c:150:47
	subpd	%xmm3, %xmm9
	.loc	13 150 28               # x_solve.c:150:28
	movupd	%xmm9, -56(%rdx)
	.loc	13 150 62               # x_solve.c:150:62
	mulsd	%xmm5, %xmm0
	.loc	13 150 47               # x_solve.c:150:47
	movapd	%xmm7, %xmm3
	subsd	%xmm0, %xmm3
	.loc	13 150 28               # x_solve.c:150:28
	movsd	%xmm3, -40(%rdx)
.Ltmp774:
	.loc	13 152 41 is_stmt 1     # x_solve.c:152:41
	movsd	-8(%rsi), %xmm1         # xmm1 = mem[0],zero
	.loc	13 152 25 is_stmt 0     # x_solve.c:152:25
	movupd	(%rsi), %xmm0
.Ltmp775:
	.loc	13 155 62 is_stmt 1     # x_solve.c:155:62
	mulsd	%xmm1, %xmm5
.Ltmp776:
	.loc	13 152 54               # x_solve.c:152:54
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	mulpd	%xmm1, %xmm4
	.loc	13 152 39 is_stmt 0     # x_solve.c:152:39
	subpd	%xmm4, %xmm0
	.loc	13 152 23               # x_solve.c:152:23
	movupd	%xmm0, (%rsi)
.Ltmp777:
	.loc	13 145 34 is_stmt 1     # x_solve.c:145:34
	movapd	%xmm9, %xmm8
.Ltmp778:
	.loc	13 155 30               # x_solve.c:155:30
	movupd	-16(%rdx), %xmm9
	.loc	13 155 62 is_stmt 0     # x_solve.c:155:62
	mulpd	%xmm6, %xmm1
	.loc	13 155 47               # x_solve.c:155:47
	subpd	%xmm1, %xmm9
	.loc	13 155 28               # x_solve.c:155:28
	movupd	%xmm9, -16(%rdx)
	.loc	13 155 30               # x_solve.c:155:30
	movsd	(%rdx), %xmm7           # xmm7 = mem[0],zero
	.loc	13 155 47               # x_solve.c:155:47
	subsd	%xmm5, %xmm7
	.loc	13 155 28               # x_solve.c:155:28
	movsd	%xmm7, (%rdx)
.Ltmp779:
	.loc	13 138 7 is_stmt 1 discriminator 1 # x_solve.c:138:7
	movapd	%xmm2, %xmm4
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	addq	$40, %rsi
	addq	$40, %rdx
	decl	%ecx
	jne	.LBB8_51
.Ltmp780:
.LBB8_52:                               # %for.inc740
                                        #   in Loop: Header=BB8_49 Depth=2
	.loc	13 137 5 discriminator 1 # x_solve.c:137:5
	addq	$2600, %rbp             # imm = 0xA28
	addq	$2600, %rbx             # imm = 0xA28
	.loc	13 137 19 is_stmt 0 discriminator 1 # x_solve.c:137:19
	cmpq	%r11, %rdi
	.loc	13 137 5 discriminator 1 # x_solve.c:137:5
	leaq	1(%rdi), %rdi
	jl	.LBB8_49
.Ltmp781:
# BB#46:                                # %for.cond743.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	jle	.LBB8_47
# BB#61:                                # %for.body745.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp782:
	.loc	13 174 23 is_stmt 1     # x_solve.c:174:23
	movslq	grid_points(%rip), %rcx
	.loc	13 166 26               # x_solve.c:166:26
	leaq	(%rcx,%rcx,4), %rsi
.Ltmp783:
	.loc	13 165 5 discriminator 1 # x_solve.c:165:5
	leaq	-10(%rcx,%rcx,4), %rax
	leaq	-5(%rcx,%rcx,4), %rcx
	leaq	-40(%r9,%rsi,8), %rdx
	leaq	-80(%r9,%rsi,8), %rsi
	xorl	%edi, %edi
	xorl	%ebp, %ebp
	movq	8(%rsp), %rbx           # 8-byte Reload
	.p2align	4, 0x90
.LBB8_62:                               # %for.body745
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp784:
	.loc	13 168 17               # x_solve.c:168:17
	movapd	%xmm10, %xmm0
	divsd	lhs+2616(%rdi,%rax,8), %xmm0
.Ltmp785:
	#DEBUG_VALUE: x_solve:fac1 <- %XMM0
	.loc	13 169 27               # x_solve.c:169:27
	movupd	lhs+2624(%rdi,%rax,8), %xmm1
	.loc	13 169 26 is_stmt 0     # x_solve.c:169:26
	movapd	%xmm0, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm1
	.loc	13 169 20               # x_solve.c:169:20
	movupd	%xmm1, lhs+2624(%rdi,%rax,8)
	#DEBUG_VALUE: x_solve:m <- 0
.Ltmp786:
	.loc	13 172 32 is_stmt 1     # x_solve.c:172:32
	movupd	rhs+171600(%rsi,%rdi), %xmm3
	.loc	13 172 31 is_stmt 0     # x_solve.c:172:31
	mulpd	%xmm2, %xmm3
	.loc	13 172 25               # x_solve.c:172:25
	movupd	%xmm3, rhs+171600(%rsi,%rdi)
	.loc	13 172 31               # x_solve.c:172:31
	mulsd	rhs+171616(%rsi,%rdi), %xmm0
.Ltmp787:
	.loc	13 172 25               # x_solve.c:172:25
	movsd	%xmm0, rhs+171616(%rsi,%rdi)
.Ltmp788:
	.loc	13 174 39 is_stmt 1     # x_solve.c:174:39
	movsd	lhs+2608(%rdi,%rcx,8), %xmm2 # xmm2 = mem[0],zero
	.loc	13 174 23 is_stmt 0     # x_solve.c:174:23
	movupd	lhs+2616(%rdi,%rcx,8), %xmm4
.Ltmp789:
	.loc	13 177 60 is_stmt 1     # x_solve.c:177:60
	mulsd	%xmm2, %xmm0
.Ltmp790:
	.loc	13 174 52               # x_solve.c:174:52
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm1
	.loc	13 174 37 is_stmt 0     # x_solve.c:174:37
	subpd	%xmm1, %xmm4
	.loc	13 174 21               # x_solve.c:174:21
	movupd	%xmm4, lhs+2616(%rdi,%rcx,8)
.Ltmp791:
	.loc	13 177 28 is_stmt 1     # x_solve.c:177:28
	movupd	rhs+171600(%rdx,%rdi), %xmm1
	.loc	13 177 60 is_stmt 0     # x_solve.c:177:60
	mulpd	%xmm3, %xmm2
	.loc	13 177 45               # x_solve.c:177:45
	subpd	%xmm2, %xmm1
	.loc	13 177 28               # x_solve.c:177:28
	movsd	rhs+171616(%rdx,%rdi), %xmm2 # xmm2 = mem[0],zero
	.loc	13 177 45               # x_solve.c:177:45
	subsd	%xmm0, %xmm2
.Ltmp792:
	.loc	13 183 17 is_stmt 1     # x_solve.c:183:17
	movapd	%xmm10, %xmm0
	divsd	%xmm4, %xmm0
.Ltmp793:
	#DEBUG_VALUE: x_solve:fac2 <- %XMM0
	.loc	13 185 32               # x_solve.c:185:32
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	13 185 26 is_stmt 0     # x_solve.c:185:26
	movupd	%xmm3, rhs+171600(%rdx,%rdi)
	.loc	13 185 32               # x_solve.c:185:32
	mulsd	%xmm2, %xmm0
.Ltmp794:
	.loc	13 185 26               # x_solve.c:185:26
	movsd	%xmm0, rhs+171616(%rdx,%rdi)
.Ltmp795:
	.loc	13 165 19 is_stmt 1 discriminator 1 # x_solve.c:165:19
	incq	%rbp
	addq	$2600, %rdi             # imm = 0xA28
	cmpq	%r11, %rbp
	jl	.LBB8_62
.Ltmp796:
# BB#53:                                # %for.cond912.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	jle	.LBB8_6
# BB#54:                                # %for.cond915.preheader.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp797:
	.loc	13 193 24 discriminator 1 # x_solve.c:193:24
	movl	grid_points(%rip), %eax
.Ltmp798:
	.loc	13 192 5 discriminator 1 # x_solve.c:192:5
	leal	-2(%rax), %r8d
	movq	%rbx, %rcx
	movq	%rcx, %r10
	movl	$2688, %ebp             # imm = 0xA80
	movl	$1, %edi
.Ltmp799:
	.loc	13 231 17               # x_solve.c:231:17
	movapd	.LCPI8_2(%rip), %xmm12  # xmm12 = [1.000000e+00,1.000000e+00]
.Ltmp800:
	.p2align	4, 0x90
.LBB8_55:                               # %for.cond915.preheader
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_57 Depth 3
	cmpl	$3, %eax
	jl	.LBB8_58
# BB#56:                                # %for.body918.lr.ph
                                        #   in Loop: Header=BB8_55 Depth=2
.Ltmp801:
	.loc	13 198 20               # x_solve.c:198:20
	imulq	$2600, %rdi, %rcx       # imm = 0xA28
	.loc	13 199 33               # x_solve.c:199:33
	movsd	lhsp+24(%rcx), %xmm4    # xmm4 = mem[0],zero
	.loc	13 201 33               # x_solve.c:201:33
	imulq	$169000, %r14, %rdx     # imm = 0x29428
	.loc	13 202 28               # x_solve.c:202:28
	movsd	lhsp+56(%rcx), %xmm3    # xmm3 = mem[0],zero
	.loc	13 211 33               # x_solve.c:211:33
	movsd	lhsm+24(%rcx), %xmm2    # xmm2 = mem[0],zero
	.loc	13 201 33               # x_solve.c:201:33
	movupd	rhs+24(%rdx,%rcx), %xmm11
	.loc	13 214 28               # x_solve.c:214:28
	movsd	lhsm+56(%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	13 204 28               # x_solve.c:204:28
	movupd	rhs+64(%rdx,%rcx), %xmm9
	.loc	13 198 20               # x_solve.c:198:20
	movsd	lhsp+16(%rcx), %xmm0    # xmm0 = mem[0],zero
	movhpd	lhsm+16(%rcx), %xmm0    # xmm0 = xmm0[0],mem[0]
	.loc	13 204 47               # x_solve.c:204:47
	movsd	lhsp+48(%rcx), %xmm6    # xmm6 = mem[0],zero
	movhpd	lhsm+48(%rcx), %xmm6    # xmm6 = xmm6[0],mem[0]
	.loc	13 214 28               # x_solve.c:214:28
	movl	%r8d, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rsi
	.p2align	4, 0x90
.LBB8_57:                               # %for.body918
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp802:
	#DEBUG_VALUE: x_solve:m <- 3
	.loc	13 198 19               # x_solve.c:198:19
	movapd	%xmm12, %xmm7
	divpd	%xmm0, %xmm7
	.loc	13 199 32               # x_solve.c:199:32
	movapd	%xmm7, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movhpd	lhsp-56(%rsi), %xmm4    # xmm4 = xmm4[0],mem[0]
	mulpd	%xmm0, %xmm4
	.loc	13 199 26 is_stmt 0     # x_solve.c:199:26
	movlpd	%xmm4, lhsp-64(%rsi)
	.loc	13 200 26 is_stmt 1     # x_solve.c:200:26
	movhpd	%xmm4, lhsp-56(%rsi)
	.loc	13 202 59               # x_solve.c:202:59
	movapd	%xmm6, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm4, %xmm0
	.loc	13 202 43 is_stmt 0     # x_solve.c:202:43
	movhpd	lhsp-24(%rsi), %xmm3    # xmm3 = xmm3[0],mem[0]
	subpd	%xmm0, %xmm3
	.loc	13 202 26               # x_solve.c:202:26
	movupd	%xmm3, lhsp-32(%rsi)
	.loc	13 201 32 is_stmt 1     # x_solve.c:201:32
	mulpd	%xmm7, %xmm11
	.loc	13 204 61               # x_solve.c:204:61
	movapd	%xmm6, %xmm0
	mulpd	%xmm11, %xmm0
	.loc	13 204 45 is_stmt 0     # x_solve.c:204:45
	subpd	%xmm0, %xmm9
	.loc	13 205 28 is_stmt 1     # x_solve.c:205:28
	movupd	lhsp(%rsi), %xmm10
	.loc	13 205 59 is_stmt 0     # x_solve.c:205:59
	movsd	lhsp-8(%rsi), %xmm5     # xmm5 = mem[0],zero
	movapd	%xmm5, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm4, %xmm0
	.loc	13 205 43               # x_solve.c:205:43
	subpd	%xmm0, %xmm10
	.loc	13 205 26               # x_solve.c:205:26
	movupd	%xmm10, lhsp(%rsi)
	.loc	13 207 28 is_stmt 1     # x_solve.c:207:28
	movupd	(%rdx), %xmm8
	.loc	13 207 61 is_stmt 0     # x_solve.c:207:61
	movsd	lhsm-8(%rsi), %xmm0     # xmm0 = mem[0],zero
	unpcklpd	%xmm0, %xmm5    # xmm5 = xmm5[0],xmm0[0]
	mulpd	%xmm11, %xmm5
	.loc	13 207 45               # x_solve.c:207:45
	subpd	%xmm5, %xmm8
.Ltmp803:
	#DEBUG_VALUE: x_solve:m <- 4
	.loc	13 211 32 is_stmt 1     # x_solve.c:211:32
	movhlps	%xmm7, %xmm7            # xmm7 = xmm7[1,1]
	movhpd	lhsm-56(%rsi), %xmm2    # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm7, %xmm2
	.loc	13 211 26 is_stmt 0     # x_solve.c:211:26
	movlpd	%xmm2, lhsm-64(%rsi)
	.loc	13 212 26 is_stmt 1     # x_solve.c:212:26
	movhpd	%xmm2, lhsm-56(%rsi)
	.loc	13 201 26               # x_solve.c:201:26
	movupd	%xmm11, -80(%rdx)
	.loc	13 214 59               # x_solve.c:214:59
	movhlps	%xmm6, %xmm6            # xmm6 = xmm6[1,1]
	mulpd	%xmm2, %xmm6
	.loc	13 214 43 is_stmt 0     # x_solve.c:214:43
	movhpd	lhsm-24(%rsi), %xmm1    # xmm1 = xmm1[0],mem[0]
	subpd	%xmm6, %xmm1
	.loc	13 214 26               # x_solve.c:214:26
	movupd	%xmm1, lhsm-32(%rsi)
	.loc	13 204 26 is_stmt 1     # x_solve.c:204:26
	movupd	%xmm9, -40(%rdx)
	.loc	13 217 28               # x_solve.c:217:28
	movupd	lhsm(%rsi), %xmm5
	.loc	13 217 59 is_stmt 0     # x_solve.c:217:59
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm2, %xmm0
	.loc	13 217 43               # x_solve.c:217:43
	subpd	%xmm0, %xmm5
	.loc	13 217 26               # x_solve.c:217:26
	movupd	%xmm5, lhsm(%rsi)
	.loc	13 207 26 is_stmt 1     # x_solve.c:207:26
	movupd	%xmm8, (%rdx)
.Ltmp804:
	.loc	13 193 7 discriminator 1 # x_solve.c:193:7
	movapd	%xmm3, %xmm4
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
.Ltmp805:
	.loc	13 198 20               # x_solve.c:198:20
	movapd	%xmm3, %xmm0
.Ltmp806:
	.loc	13 193 7 discriminator 1 # x_solve.c:193:7
	movapd	%xmm10, %xmm3
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
.Ltmp807:
	.loc	13 198 20               # x_solve.c:198:20
	unpcklpd	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0]
	.loc	13 204 47               # x_solve.c:204:47
	unpcklpd	%xmm5, %xmm10   # xmm10 = xmm10[0],xmm5[0]
.Ltmp808:
	.loc	13 193 7 discriminator 1 # x_solve.c:193:7
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	movapd	%xmm1, %xmm2
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
	addq	$40, %rsi
	addq	$40, %rdx
	decl	%ecx
.Ltmp809:
	.loc	13 214 28               # x_solve.c:214:28
	movapd	%xmm5, %xmm1
	.loc	13 201 33               # x_solve.c:201:33
	movapd	%xmm9, %xmm11
	.loc	13 204 28               # x_solve.c:204:28
	movapd	%xmm8, %xmm9
	.loc	13 204 47 is_stmt 0     # x_solve.c:204:47
	movapd	%xmm10, %xmm6
.Ltmp810:
	.loc	13 193 7 is_stmt 1 discriminator 1 # x_solve.c:193:7
	jne	.LBB8_57
.Ltmp811:
.LBB8_58:                               # %for.inc1314
                                        #   in Loop: Header=BB8_55 Depth=2
	.loc	13 192 5 discriminator 1 # x_solve.c:192:5
	addq	$2600, %rbp             # imm = 0xA28
	addq	$2600, %rbx             # imm = 0xA28
	.loc	13 192 19 is_stmt 0 discriminator 1 # x_solve.c:192:19
	cmpq	%r11, %rdi
	.loc	13 192 5 discriminator 1 # x_solve.c:192:5
	leaq	1(%rdi), %rdi
	jl	.LBB8_55
.Ltmp812:
# BB#59:                                # %for.cond1317.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 44 7 is_stmt 1       # x_solve.c:44:7
	movslq	ny2(%rip), %r11
.Ltmp813:
	.loc	13 226 22 discriminator 1 # x_solve.c:226:22
	testq	%r11, %r11
	jle	.LBB8_60
# BB#72:                                # %for.body1319.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp814:
	.loc	13 235 26               # x_solve.c:235:26
	movslq	grid_points(%rip), %rcx
	.loc	13 228 26               # x_solve.c:228:26
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,4), %rdx
.Ltmp815:
	.loc	13 226 5 discriminator 1 # x_solve.c:226:5
	leaq	171544(%rcx,%rcx,4), %rax
	leaq	-40(%rcx,%rcx,4), %rcx
	leaq	-40(%r9,%rdx), %rdx
	xorl	%esi, %esi
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB8_73:                               # %for.body1319
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp816:
	#DEBUG_VALUE: x_solve:m <- 3
	.loc	13 231 18               # x_solve.c:231:18
	leaq	(%rax,%rsi), %rbp
	.loc	13 232 31               # x_solve.c:232:31
	movupd	lhsp-169000(%rax,%rsi), %xmm0
	.loc	13 231 17               # x_solve.c:231:17
	movsd	lhsp-169008(%rax,%rsi), %xmm2 # xmm2 = mem[0],zero
	movhpd	lhsm-169008(%rax,%rsi), %xmm2 # xmm2 = xmm2[0],mem[0]
	movapd	%xmm12, %xmm1
	divpd	%xmm2, %xmm1
	.loc	13 232 30               # x_solve.c:232:30
	movapd	%xmm1, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm0, %xmm3
	.loc	13 232 24 is_stmt 0     # x_solve.c:232:24
	movupd	%xmm3, lhsp-169000(%rax,%rsi)
	.loc	13 235 26 is_stmt 1     # x_solve.c:235:26
	movupd	lhsp+2616(%rcx,%rsi), %xmm0
	.loc	13 235 57 is_stmt 0     # x_solve.c:235:57
	movsd	lhsp+2608(%rcx,%rsi), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm3, %xmm4
	.loc	13 235 41               # x_solve.c:235:41
	subpd	%xmm4, %xmm0
	.loc	13 235 24               # x_solve.c:235:24
	movupd	%xmm0, lhsp+2616(%rcx,%rsi)
	.loc	13 234 31 is_stmt 1     # x_solve.c:234:31
	movupd	rhs(%r9,%rbp), %xmm3
	.loc	13 234 30 is_stmt 0     # x_solve.c:234:30
	mulpd	%xmm1, %xmm3
.Ltmp817:
	#DEBUG_VALUE: x_solve:m <- 4
	.loc	13 241 31 is_stmt 1     # x_solve.c:241:31
	movupd	lhsm-169000(%rax,%rsi), %xmm4
	.loc	13 241 30 is_stmt 0     # x_solve.c:241:30
	movhlps	%xmm1, %xmm1            # xmm1 = xmm1[1,1]
	mulpd	%xmm4, %xmm1
	.loc	13 241 24               # x_solve.c:241:24
	movupd	%xmm1, lhsm-169000(%rax,%rsi)
	.loc	13 234 24 is_stmt 1     # x_solve.c:234:24
	movupd	%xmm3, rhs(%r9,%rbp)
	.loc	13 244 26               # x_solve.c:244:26
	movupd	lhsm+2616(%rcx,%rsi), %xmm4
	.loc	13 237 59               # x_solve.c:237:59
	movsd	lhsm+2608(%rcx,%rsi), %xmm5 # xmm5 = mem[0],zero
	unpcklpd	%xmm5, %xmm2    # xmm2 = xmm2[0],xmm5[0]
	.loc	13 244 57               # x_solve.c:244:57
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	mulpd	%xmm1, %xmm5
	.loc	13 244 41 is_stmt 0     # x_solve.c:244:41
	subpd	%xmm5, %xmm4
	.loc	13 244 24               # x_solve.c:244:24
	movupd	%xmm4, lhsm+2616(%rcx,%rsi)
	.loc	13 237 26 is_stmt 1     # x_solve.c:237:26
	movupd	rhs+171624(%rdx,%rsi), %xmm1
	.loc	13 237 59 is_stmt 0     # x_solve.c:237:59
	mulpd	%xmm3, %xmm2
	.loc	13 237 43               # x_solve.c:237:43
	subpd	%xmm2, %xmm1
	.loc	13 251 42 is_stmt 1     # x_solve.c:251:42
	unpcklpd	%xmm4, %xmm0    # xmm0 = xmm0[0],xmm4[0]
	divpd	%xmm0, %xmm1
	.loc	13 251 24 is_stmt 0     # x_solve.c:251:24
	movupd	%xmm1, rhs+171624(%rdx,%rsi)
.Ltmp818:
	.loc	13 226 19 is_stmt 1 discriminator 1 # x_solve.c:226:19
	incq	%rdi
	addq	$2600, %rsi             # imm = 0xA28
	cmpq	%r11, %rdi
	jl	.LBB8_73
.Ltmp819:
# BB#63:                                # %for.cond1605.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	testl	%r11d, %r11d
	movq	%r10, %rbx
	jle	.LBB8_6
# BB#64:                                # %for.body1607.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp820:
	.loc	13 262 58               # x_solve.c:262:58
	movslq	grid_points(%rip), %rdx
.Ltmp821:
	.loc	13 260 26               # x_solve.c:260:26
	shlq	$3, %rdx
	leaq	(%rdx,%rdx,4), %rcx
.Ltmp822:
	.loc	13 258 5 discriminator 1 # x_solve.c:258:5
	leaq	-80(%rdx,%rdx,4), %rax
	leaq	-80(%r9,%rcx), %rcx
	leaq	rhs-40(%rdx,%rdx,4), %rdx
	xorl	%esi, %esi
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB8_65:                               # %for.body1607
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp823:
	#DEBUG_VALUE: x_solve:m <- 0
	.loc	13 262 27               # x_solve.c:262:27
	movupd	rhs+171600(%rcx,%rsi), %xmm0
	.loc	13 262 58 is_stmt 0     # x_solve.c:262:58
	leaq	(%rdx,%rsi), %rbp
	movupd	171600(%r9,%rbp), %xmm1
	.loc	13 262 57               # x_solve.c:262:57
	movsd	lhs+2624(%rax,%rsi), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	13 262 43               # x_solve.c:262:43
	subpd	%xmm3, %xmm0
	.loc	13 262 25               # x_solve.c:262:25
	movupd	%xmm0, rhs+171600(%rcx,%rsi)
	.loc	13 262 27               # x_solve.c:262:27
	movupd	rhs+171616(%rcx,%rsi), %xmm0
	.loc	13 262 58               # x_solve.c:262:58
	movupd	171616(%r9,%rbp), %xmm1
	.loc	13 262 57               # x_solve.c:262:57
	movhpd	lhsp+2624(%rax,%rsi), %xmm2 # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm1, %xmm2
	.loc	13 262 43               # x_solve.c:262:43
	subpd	%xmm2, %xmm0
	.loc	13 262 25               # x_solve.c:262:25
	movupd	%xmm0, rhs+171616(%rcx,%rsi)
.Ltmp824:
	.loc	13 266 25 is_stmt 1     # x_solve.c:266:25
	movsd	rhs+171632(%rcx,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	13 266 43 is_stmt 0     # x_solve.c:266:43
	movsd	lhsm+2624(%rax,%rsi), %xmm1 # xmm1 = mem[0],zero
	.loc	13 266 56               # x_solve.c:266:56
	mulsd	171632(%r9,%rbp), %xmm1
	.loc	13 266 41               # x_solve.c:266:41
	subsd	%xmm1, %xmm0
	.loc	13 266 23               # x_solve.c:266:23
	movsd	%xmm0, rhs+171632(%rcx,%rsi)
.Ltmp825:
	.loc	13 258 19 is_stmt 1 discriminator 1 # x_solve.c:258:19
	incq	%rdi
	addq	$2600, %rsi             # imm = 0xA28
	cmpq	%r11, %rdi
	.loc	13 258 5 is_stmt 0 discriminator 1 # x_solve.c:258:5
	jl	.LBB8_65
.Ltmp826:
# BB#66:                                # %for.body1708.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 44 7 is_stmt 1       # x_solve.c:44:7
	movslq	grid_points(%rip), %rax
.Ltmp827:
	.loc	13 273 30               # x_solve.c:273:30
	addq	$-3, %rax
.Ltmp828:
	#DEBUG_VALUE: x_solve:i <- %EAX
	.loc	13 273 7 is_stmt 0 discriminator 1 # x_solve.c:273:7
	testl	%eax, %eax
	js	.LBB8_6
.Ltmp829:
# BB#67:                                # %for.body1712.lr.ph.us.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	#DEBUG_VALUE: x_solve:i <- %EAX
	movq	%rbx, %r8
	.loc	13 44 7 is_stmt 1       # x_solve.c:44:7
	leaq	1(%rax), %rbp
	shlq	$3, %rax
.Ltmp830:
	leaq	(%rax,%rax,4), %rcx
	xorl	%edx, %edx
	movl	$1, %esi
	.p2align	4, 0x90
.LBB8_68:                               # %for.body1712.lr.ph.us
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_69 Depth 3
	movq	%rdx, %rdi
	movq	%rbp, %rax
	.p2align	4, 0x90
.LBB8_69:                               # %for.body1712.us
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_68 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: x_solve:m <- 0
.Ltmp831:
	.loc	13 278 29               # x_solve.c:278:29
	leaq	(%rcx,%rdi), %rbx
	.loc	13 277 29               # x_solve.c:277:29
	movupd	rhs+171600(%r9,%rbx), %xmm0
	.loc	13 278 42               # x_solve.c:278:42
	movupd	rhs+171640(%r9,%rbx), %xmm1
	.loc	13 278 41 is_stmt 0     # x_solve.c:278:41
	movsd	lhs+2624(%rcx,%rdi), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	13 277 45 is_stmt 1     # x_solve.c:277:45
	subpd	%xmm3, %xmm0
	.loc	13 279 42               # x_solve.c:279:42
	movupd	rhs+171680(%r9,%rbx), %xmm1
	.loc	13 279 41 is_stmt 0     # x_solve.c:279:41
	movsd	lhs+2632(%rcx,%rdi), %xmm3 # xmm3 = mem[0],zero
	movapd	%xmm3, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm1, %xmm4
	.loc	13 278 59 is_stmt 1     # x_solve.c:278:59
	subpd	%xmm4, %xmm0
	.loc	13 277 27               # x_solve.c:277:27
	movupd	%xmm0, rhs+171600(%r9,%rbx)
	.loc	13 277 29 is_stmt 0     # x_solve.c:277:29
	movupd	rhs+171616(%r9,%rbx), %xmm0
	.loc	13 278 42 is_stmt 1     # x_solve.c:278:42
	movupd	rhs+171656(%r9,%rbx), %xmm1
	.loc	13 278 41 is_stmt 0     # x_solve.c:278:41
	movhpd	lhsp+2624(%rcx,%rdi), %xmm2 # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm1, %xmm2
	.loc	13 277 45 is_stmt 1     # x_solve.c:277:45
	subpd	%xmm2, %xmm0
	.loc	13 279 42               # x_solve.c:279:42
	movupd	rhs+171696(%r9,%rbx), %xmm1
	.loc	13 279 41 is_stmt 0     # x_solve.c:279:41
	movhpd	lhsp+2632(%rcx,%rdi), %xmm3 # xmm3 = xmm3[0],mem[0]
	mulpd	%xmm1, %xmm3
	.loc	13 278 59 is_stmt 1     # x_solve.c:278:59
	subpd	%xmm3, %xmm0
	.loc	13 277 27               # x_solve.c:277:27
	movupd	%xmm0, rhs+171616(%r9,%rbx)
.Ltmp832:
	.loc	13 288 27               # x_solve.c:288:27
	movsd	rhs+171632(%r9,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	13 289 27               # x_solve.c:289:27
	movsd	lhsm+2624(%rcx,%rdi), %xmm1 # xmm1 = mem[0],zero
	.loc	13 289 40 is_stmt 0     # x_solve.c:289:40
	mulsd	rhs+171672(%r9,%rbx), %xmm1
	.loc	13 288 43 is_stmt 1     # x_solve.c:288:43
	subsd	%xmm1, %xmm0
	.loc	13 290 27               # x_solve.c:290:27
	movsd	lhsm+2632(%rcx,%rdi), %xmm1 # xmm1 = mem[0],zero
	.loc	13 290 40 is_stmt 0     # x_solve.c:290:40
	mulsd	rhs+171712(%r9,%rbx), %xmm1
	.loc	13 289 58 is_stmt 1     # x_solve.c:289:58
	subsd	%xmm1, %xmm0
	.loc	13 288 25               # x_solve.c:288:25
	movsd	%xmm0, rhs+171632(%r9,%rbx)
.Ltmp833:
	.loc	13 273 36 discriminator 1 # x_solve.c:273:36
	addq	$-40, %rdi
	decq	%rax
	.loc	13 273 7 is_stmt 0 discriminator 1 # x_solve.c:273:7
	jg	.LBB8_69
.Ltmp834:
# BB#70:                                # %for.cond1710.for.inc1853_crit_edge.us
                                        #   in Loop: Header=BB8_68 Depth=2
	.loc	13 272 5 is_stmt 1 discriminator 1 # x_solve.c:272:5
	addq	$2600, %rdx             # imm = 0xA28
	.loc	13 272 19 is_stmt 0 discriminator 1 # x_solve.c:272:19
	cmpq	%r11, %rsi
	.loc	13 272 5 discriminator 1 # x_solve.c:272:5
	leaq	1(%rsi), %rsi
	jl	.LBB8_68
.Ltmp835:
# BB#71:                                #   in Loop: Header=BB8_4 Depth=1
	movq	%r8, %rbx
	jmp	.LBB8_6
	.p2align	4, 0x90
.LBB8_18:                               #   in Loop: Header=BB8_4 Depth=1
	movq	48(%rsp), %r14          # 8-byte Reload
	movq	24(%rsp), %r13          # 8-byte Reload
	movq	40(%rsp), %r15          # 8-byte Reload
	movq	32(%rsp), %r12          # 8-byte Reload
	movq	16(%rsp), %r9           # 8-byte Reload
	movq	8(%rsp), %rbx           # 8-byte Reload
.LBB8_6:                                # %for.inc1856
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 48 17 is_stmt 1 discriminator 1 # x_solve.c:48:17
	movslq	nz2(%rip), %rax
	.loc	13 48 3 is_stmt 0 discriminator 1 # x_solve.c:48:3
	addq	$33800, %r13            # imm = 0x8408
	addq	$33800, %r15            # imm = 0x8408
	addq	$169000, %r12           # imm = 0x29428
	addq	$169000, %r9            # imm = 0x29428
	addq	$169000, %rbx           # imm = 0x29428
	.loc	13 48 17 discriminator 1 # x_solve.c:48:17
	cmpq	%rax, %r14
	.loc	13 48 3 discriminator 1 # x_solve.c:48:3
	leaq	1(%r14), %r14
	jl	.LBB8_4
.Ltmp836:
.LBB8_7:                                # %for.end1858
	.loc	13 294 7 is_stmt 1      # x_solve.c:294:7
	cmpl	$0, timeron(%rip)
	je	.LBB8_9
# BB#8:                                 # %if.then1860
	.loc	13 294 16 is_stmt 0 discriminator 1 # x_solve.c:294:16
	movl	$6, %edi
	callq	timer_stop
.Ltmp837:
.LBB8_9:                                # %if.end1861
	.loc	13 299 3 is_stmt 1      # x_solve.c:299:3
	xorl	%eax, %eax
	addq	$344, %rsp              # imm = 0x158
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	ninvr                   # TAILCALL
.Ltmp838:
.Lfunc_end8:
	.size	x_solve, .Lfunc_end8-x_solve
	.cfi_endproc

	.globl	lhsinit
	.p2align	4, 0x90
	.type	lhsinit,@function
lhsinit:                                # @lhsinit
.Lfunc_begin9:
	.loc	9 205 0                 # initialize.c:205:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: lhsinit:ni <- %EDI
	#DEBUG_VALUE: lhsinit:nj <- %ESI
	#DEBUG_VALUE: lhsinit:j <- 1
	.loc	9 212 17 prologue_end discriminator 1 # initialize.c:212:17
	testl	%esi, %esi
	jle	.LBB9_3
.Ltmp839:
# BB#1:                                 # %for.cond1.preheader.lr.ph
	#DEBUG_VALUE: lhsinit:nj <- %ESI
	#DEBUG_VALUE: lhsinit:ni <- %EDI
	.loc	9 217 7                 # initialize.c:217:7
	movslq	%edi, %rax
.Ltmp840:
	.loc	9 212 3 discriminator 1 # initialize.c:212:3
	shlq	$3, %rax
	leaq	(%rax,%rax,4), %rax
	xorl	%ecx, %ecx
.Ltmp841:
	.loc	9 221 19                # initialize.c:221:19
	movabsq	$4607182418800017408, %rdx # imm = 0x3FF0000000000000
.Ltmp842:
	.p2align	4, 0x90
.LBB9_2:                                # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	.loc	9 214 21                # initialize.c:214:21
	movq	$0, lhs+2600(%rcx)
	.loc	9 215 21                # initialize.c:215:21
	movq	$0, lhsp+2600(%rcx)
	.loc	9 216 21                # initialize.c:216:21
	movq	$0, lhsm+2600(%rcx)
	.loc	9 217 22                # initialize.c:217:22
	movq	$0, lhs+2600(%rax,%rcx)
	.loc	9 218 22                # initialize.c:218:22
	movq	$0, lhsp+2600(%rax,%rcx)
	.loc	9 219 22                # initialize.c:219:22
	movq	$0, lhsm+2600(%rax,%rcx)
	.loc	9 214 21                # initialize.c:214:21
	movq	$0, lhs+2608(%rcx)
	.loc	9 215 21                # initialize.c:215:21
	movq	$0, lhsp+2608(%rcx)
	.loc	9 216 21                # initialize.c:216:21
	movq	$0, lhsm+2608(%rcx)
	.loc	9 217 22                # initialize.c:217:22
	movq	$0, lhs+2608(%rax,%rcx)
	.loc	9 218 22                # initialize.c:218:22
	movq	$0, lhsp+2608(%rax,%rcx)
	.loc	9 219 22                # initialize.c:219:22
	movq	$0, lhsm+2608(%rax,%rcx)
	.loc	9 214 21                # initialize.c:214:21
	movq	$0, lhs+2624(%rcx)
	.loc	9 215 21                # initialize.c:215:21
	movq	$0, lhsp+2624(%rcx)
	.loc	9 216 21                # initialize.c:216:21
	movq	$0, lhsm+2624(%rcx)
	.loc	9 217 22                # initialize.c:217:22
	movq	$0, lhs+2624(%rax,%rcx)
	.loc	9 218 22                # initialize.c:218:22
	movq	$0, lhsp+2624(%rax,%rcx)
	.loc	9 219 22                # initialize.c:219:22
	movq	$0, lhsm+2624(%rax,%rcx)
	.loc	9 214 21                # initialize.c:214:21
	movq	$0, lhs+2632(%rcx)
	.loc	9 215 21                # initialize.c:215:21
	movq	$0, lhsp+2632(%rcx)
	.loc	9 216 21                # initialize.c:216:21
	movq	$0, lhsm+2632(%rcx)
	.loc	9 217 22                # initialize.c:217:22
	movq	$0, lhs+2632(%rax,%rcx)
	.loc	9 218 22                # initialize.c:218:22
	movq	$0, lhsp+2632(%rax,%rcx)
	.loc	9 219 22                # initialize.c:219:22
	movq	$0, lhsm+2632(%rax,%rcx)
.Ltmp843:
	.loc	9 221 19                # initialize.c:221:19
	movq	%rdx, lhs+2616(%rcx)
	.loc	9 222 19                # initialize.c:222:19
	movq	%rdx, lhsp+2616(%rcx)
	.loc	9 223 19                # initialize.c:223:19
	movq	%rdx, lhsm+2616(%rcx)
	.loc	9 224 20                # initialize.c:224:20
	movq	%rdx, lhs+2616(%rax,%rcx)
	.loc	9 225 20                # initialize.c:225:20
	movq	%rdx, lhsp+2616(%rax,%rcx)
	.loc	9 226 20                # initialize.c:226:20
	movq	%rdx, lhsm+2616(%rax,%rcx)
.Ltmp844:
	.loc	9 212 3 discriminator 1 # initialize.c:212:3
	addq	$2600, %rcx             # imm = 0xA28
	decl	%esi
	jne	.LBB9_2
.Ltmp845:
.LBB9_3:                                # %for.end64
	.loc	9 228 1                 # initialize.c:228:1
	retq
.Ltmp846:
.Lfunc_end9:
	.size	lhsinit, .Lfunc_end9-lhsinit
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI10_0:
	.quad	4602678819172646912     # double 0.5
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI10_1:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	ninvr
	.p2align	4, 0x90
	.type	ninvr,@function
ninvr:                                  # @ninvr
.Lfunc_begin10:
	.file	14 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/ninvr.c"
	.loc	14 40 0                 # ninvr.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	14 44 7 prologue_end    # ninvr.c:44:7
	pushq	%rbx
.Ltmp847:
	.cfi_def_cfa_offset 16
.Ltmp848:
	.cfi_offset %rbx, -16
	cmpl	$0, timeron(%rip)
	je	.LBB10_2
# BB#1:                                 # %if.then
	.loc	14 44 16 is_stmt 0 discriminator 1 # ninvr.c:44:16
	movl	$13, %edi
	callq	timer_start
.Ltmp849:
.LBB10_2:                               # %for.cond.preheader
	.loc	14 48 14 is_stmt 1      # ninvr.c:48:14
	movslq	nz2(%rip), %r8
.Ltmp850:
	.loc	14 45 20 discriminator 1 # ninvr.c:45:20
	testq	%r8, %r8
	jle	.LBB10_10
# BB#3:                                 # %for.cond1.preheader.lr.ph
.Ltmp851:
	.loc	14 46 22 discriminator 1 # ninvr.c:46:22
	movl	ny2(%rip), %r11d
	.loc	14 46 19 is_stmt 0 discriminator 1 # ninvr.c:46:19
	testl	%r11d, %r11d
	jle	.LBB10_10
# BB#4:                                 # %for.cond4.preheader.lr.ph.preheader
.Ltmp852:
	.loc	14 47 24 is_stmt 1 discriminator 1 # ninvr.c:47:24
	movl	nx2(%rip), %edi
.Ltmp853:
	.loc	14 54 14                # ninvr.c:54:14
	movsd	bt(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	14 48 14                # ninvr.c:48:14
	incl	%r11d
	movl	$1, %r9d
	movl	$rhs+171672, %r10d
	movsd	.LCPI10_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movapd	.LCPI10_1(%rip), %xmm2  # xmm2 = [9223372036854775808,9223372036854775808]
	.p2align	4, 0x90
.LBB10_5:                               # %for.cond4.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_6 Depth 2
                                        #       Child Loop BB10_7 Depth 3
	testl	%edi, %edi
	movq	%r10, %rcx
	movl	$1, %esi
	jle	.LBB10_9
	.p2align	4, 0x90
.LBB10_6:                               # %for.body6.lr.ph
                                        #   Parent Loop BB10_5 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB10_7 Depth 3
	movl	%edi, %edx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB10_7:                               # %for.body6
                                        #   Parent Loop BB10_5 Depth=1
                                        #     Parent Loop BB10_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-32(%rax), %rbx
	.loc	14 51 14                # ninvr.c:51:14
	movsd	-8(%rax), %xmm3         # xmm3 = mem[0],zero
.Ltmp854:
	#DEBUG_VALUE: ninvr:r4 <- %XMM3
	.loc	14 52 14                # ninvr.c:52:14
	movsd	(%rax), %xmm4           # xmm4 = mem[0],zero
.Ltmp855:
	#DEBUG_VALUE: ninvr:r5 <- %XMM4
	movsd	-16(%rax), %xmm5        # xmm5 = mem[0],zero
	.loc	14 54 17                # ninvr.c:54:17
	mulsd	%xmm0, %xmm5
.Ltmp856:
	#DEBUG_VALUE: ninvr:t1 <- %XMM5
	.loc	14 55 25                # ninvr.c:55:25
	movapd	%xmm3, %xmm6
	addsd	%xmm4, %xmm6
	.loc	14 55 18 is_stmt 0      # ninvr.c:55:18
	mulsd	%xmm1, %xmm6
.Ltmp857:
	#DEBUG_VALUE: ninvr:t2 <- %XMM6
	.loc	14 57 27 is_stmt 1      # ninvr.c:57:27
	movsd	-24(%rax), %xmm7        # xmm7 = mem[0],zero
	xorpd	%xmm2, %xmm7
	.loc	14 57 25 is_stmt 0      # ninvr.c:57:25
	movlpd	%xmm7, -32(%rax)
	.loc	14 58 25 is_stmt 1      # ninvr.c:58:25
	movq	%rbx, -24(%rax)
	.loc	14 59 37                # ninvr.c:59:37
	subsd	%xmm4, %xmm3
.Ltmp858:
	.loc	14 59 30 is_stmt 0      # ninvr.c:59:30
	mulsd	%xmm0, %xmm3
	.loc	14 59 25                # ninvr.c:59:25
	movsd	%xmm3, -16(%rax)
	.loc	14 60 31 is_stmt 1      # ninvr.c:60:31
	movapd	%xmm6, %xmm3
	subsd	%xmm5, %xmm3
	.loc	14 60 25 is_stmt 0      # ninvr.c:60:25
	movsd	%xmm3, -8(%rax)
	.loc	14 61 31 is_stmt 1      # ninvr.c:61:31
	addsd	%xmm5, %xmm6
.Ltmp859:
	.loc	14 61 25 is_stmt 0      # ninvr.c:61:25
	movsd	%xmm6, (%rax)
.Ltmp860:
	.loc	14 47 7 is_stmt 1 discriminator 1 # ninvr.c:47:7
	addq	$40, %rax
	decl	%edx
	jne	.LBB10_7
.Ltmp861:
# BB#8:                                 # %for.inc81
                                        #   in Loop: Header=BB10_6 Depth=2
	#DEBUG_VALUE: ninvr:t1 <- %XMM5
	#DEBUG_VALUE: ninvr:r5 <- %XMM4
	.loc	14 46 5 discriminator 1 # ninvr.c:46:5
	incq	%rsi
	addq	$2600, %rcx             # imm = 0xA28
	cmpl	%r11d, %esi
	jne	.LBB10_6
.Ltmp862:
.LBB10_9:                               # %for.inc84
                                        #   in Loop: Header=BB10_5 Depth=1
	.loc	14 45 3 discriminator 1 # ninvr.c:45:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	14 45 17 is_stmt 0 discriminator 1 # ninvr.c:45:17
	cmpq	%r8, %r9
	.loc	14 45 3 discriminator 1 # ninvr.c:45:3
	leaq	1(%r9), %r9
	jl	.LBB10_5
.Ltmp863:
.LBB10_10:                              # %for.end86
	.loc	14 65 7 is_stmt 1       # ninvr.c:65:7
	cmpl	$0, timeron(%rip)
	je	.LBB10_11
# BB#12:                                # %if.then88
	.loc	14 65 16 is_stmt 0 discriminator 1 # ninvr.c:65:16
	movl	$13, %edi
	popq	%rbx
	jmp	timer_stop              # TAILCALL
.Ltmp864:
.LBB10_11:                              # %if.end89
	.loc	14 66 1 is_stmt 1       # ninvr.c:66:1
	popq	%rbx
	retq
.Ltmp865:
.Lfunc_end10:
	.size	ninvr, .Lfunc_end10-ninvr
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI11_0:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
.LCPI11_2:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI11_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	y_solve
	.p2align	4, 0x90
	.type	y_solve,@function
y_solve:                                # @y_solve
.Lfunc_begin11:
	.file	15 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/y_solve.c"
	.loc	15 43 0                 # y_solve.c:43:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	15 47 7 prologue_end    # y_solve.c:47:7
	pushq	%rbp
.Ltmp866:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp867:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp868:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp869:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp870:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp871:
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
.Ltmp872:
	.cfi_def_cfa_offset 112
.Ltmp873:
	.cfi_offset %rbx, -56
.Ltmp874:
	.cfi_offset %r12, -48
.Ltmp875:
	.cfi_offset %r13, -40
.Ltmp876:
	.cfi_offset %r14, -32
.Ltmp877:
	.cfi_offset %r15, -24
.Ltmp878:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB11_2
# BB#1:                                 # %if.then
	.loc	15 47 16 is_stmt 0 discriminator 1 # y_solve.c:47:16
	movl	$7, %edi
	callq	timer_start
.Ltmp879:
.LBB11_2:                               # %for.cond.preheader
	.loc	15 48 20 is_stmt 1 discriminator 1 # y_solve.c:48:20
	movl	grid_points+8(%rip), %eax
	movl	$1, %r9d
	movl	$speed+34848, %ecx
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movl	$rhs+174256, %r12d
	xorl	%ebx, %ebx
	movl	$rhs+174264, %r13d
	.loc	15 48 17 is_stmt 0 discriminator 1 # y_solve.c:48:17
	addl	$-2, %eax
	jle	.LBB11_64
# BB#3:
	xorl	%eax, %eax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	.p2align	4, 0x90
.LBB11_4:                               # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_7 Depth 2
                                        #       Child Loop BB11_8 Depth 3
                                        #     Child Loop BB11_32 Depth 2
                                        #       Child Loop BB11_33 Depth 3
                                        #       Child Loop BB11_10 Depth 3
                                        #     Child Loop BB11_14 Depth 2
                                        #     Child Loop BB11_18 Depth 2
                                        #       Child Loop BB11_19 Depth 3
                                        #     Child Loop BB11_37 Depth 2
                                        #     Child Loop BB11_26 Depth 2
                                        #       Child Loop BB11_27 Depth 3
                                        #     Child Loop BB11_39 Depth 2
                                        #       Child Loop BB11_40 Depth 3
                                        #     Child Loop BB11_43 Depth 2
                                        #     Child Loop BB11_47 Depth 2
                                        #       Child Loop BB11_48 Depth 3
                                        #     Child Loop BB11_53 Depth 2
                                        #     Child Loop BB11_56 Depth 2
                                        #     Child Loop BB11_60 Depth 2
                                        #       Child Loop BB11_61 Depth 3
	movq	%r9, (%rsp)             # 8-byte Spill
.Ltmp880:
	.loc	15 49 14 is_stmt 1      # y_solve.c:49:14
	movl	ny2(%rip), %edi
	.loc	15 49 17 is_stmt 0      # y_solve.c:49:17
	incl	%edi
	.loc	15 49 21                # y_solve.c:49:21
	movl	nx2(%rip), %esi
	.loc	15 49 5                 # y_solve.c:49:5
	callq	lhsinitj
.Ltmp881:
	.loc	15 65 7 is_stmt 1 discriminator 1 # y_solve.c:65:7
	movslq	grid_points(%rip), %r8
.Ltmp882:
	#DEBUG_VALUE: y_solve:i <- 1
	.loc	15 58 36 discriminator 1 # y_solve.c:58:36
	leaq	-2(%r8), %r10
	.loc	15 58 19 is_stmt 0 discriminator 1 # y_solve.c:58:19
	testl	%r10d, %r10d
	jle	.LBB11_15
# BB#5:                                 # %for.cond5.preheader.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
.Ltmp883:
	.loc	15 60 20 is_stmt 1      # y_solve.c:60:20
	movslq	grid_points+4(%rip), %rsi
.Ltmp884:
	.loc	15 65 38 discriminator 1 # y_solve.c:65:38
	leaq	-2(%rsi), %rdx
.Ltmp885:
	.loc	15 59 24 discriminator 1 # y_solve.c:59:24
	testq	%rsi, %rsi
.Ltmp886:
	.loc	15 67 25                # y_solve.c:67:25
	movsd	dtty2(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	15 67 43 is_stmt 0      # y_solve.c:67:43
	movsd	dtty1(%rip), %xmm7      # xmm7 = mem[0],zero
	.loc	15 68 31 is_stmt 1      # y_solve.c:68:31
	movsd	c2dtty1(%rip), %xmm8    # xmm8 = mem[0],zero
.Ltmp887:
	.loc	15 224 17               # y_solve.c:224:17
	movsd	.LCPI11_1(%rip), %xmm14 # xmm14 = mem[0],zero
	movapd	.LCPI11_0(%rip), %xmm15 # xmm15 = [9223372036854775808,9223372036854775808]
	jle	.LBB11_6
.Ltmp888:
# BB#31:                                # %for.body8.lr.ph.us.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 60 15                # y_solve.c:60:15
	movsd	c3c4(%rip), %xmm9       # xmm9 = mem[0],zero
	.loc	15 62 19                # y_solve.c:62:19
	movsd	dy3(%rip), %xmm10       # xmm10 = mem[0],zero
	movsd	con43(%rip), %xmm11     # xmm11 = mem[0],zero
	movsd	dy5(%rip), %xmm12       # xmm12 = mem[0],zero
	movsd	c1c5(%rip), %xmm13      # xmm13 = mem[0],zero
	.loc	15 62 19 is_stmt 0 discriminator 3 # y_solve.c:62:19
	movsd	dymax(%rip), %xmm2      # xmm2 = mem[0],zero
	movsd	dy1(%rip), %xmm3        # xmm3 = mem[0],zero
	.loc	15 60 20 is_stmt 1      # y_solve.c:60:20
	movslq	%edx, %rdi
	movslq	%r10d, %r9
	movl	$lhs+2672, %r11d
	movq	16(%rsp), %r15          # 8-byte Reload
	movl	$1, %r14d
	.p2align	4, 0x90
.LBB11_32:                              # %for.body8.lr.ph.us
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB11_33 Depth 3
                                        #       Child Loop BB11_10 Depth 3
	movq	%r15, %rax
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB11_33:                              # %for.body8.us
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_32 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	rho_i+33808(%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	15 60 19 is_stmt 0      # y_solve.c:60:19
	mulsd	%xmm9, %xmm1
.Ltmp889:
	#DEBUG_VALUE: y_solve:ru1 <- %XMM1
	.loc	15 61 17 is_stmt 1      # y_solve.c:61:17
	movq	vs+33808(%rax), %rcx
	.loc	15 61 15 is_stmt 0      # y_solve.c:61:15
	movq	%rcx, cv(,%rbp,8)
	.loc	15 62 19 is_stmt 1      # y_solve.c:62:19
	movapd	%xmm1, %xmm4
	mulsd	%xmm11, %xmm4
	addsd	%xmm10, %xmm4
	movapd	%xmm1, %xmm5
	mulsd	%xmm13, %xmm5
	addsd	%xmm12, %xmm5
	.loc	15 62 19 is_stmt 0 discriminator 1 # y_solve.c:62:19
	maxsd	%xmm5, %xmm4
	.loc	15 62 19 discriminator 3 # y_solve.c:62:19
	addsd	%xmm2, %xmm1
.Ltmp890:
	maxsd	%xmm3, %xmm1
	.loc	15 62 19 discriminator 6 # y_solve.c:62:19
	maxsd	%xmm1, %xmm4
	.loc	15 62 17 discriminator 15 # y_solve.c:62:17
	movsd	%xmm4, rhoq(,%rbp,8)
.Ltmp891:
	.loc	15 59 7 is_stmt 1 discriminator 1 # y_solve.c:59:7
	incq	%rbp
	.loc	15 59 21 is_stmt 0 discriminator 1 # y_solve.c:59:21
	addq	$520, %rax              # imm = 0x208
	cmpq	%rsi, %rbp
	.loc	15 59 7 discriminator 1 # y_solve.c:59:7
	jl	.LBB11_33
.Ltmp892:
# BB#34:                                # %for.cond5.for.cond64.preheader_crit_edge.us
                                        #   in Loop: Header=BB11_32 Depth=2
	testl	%edx, %edx
	jle	.LBB11_11
# BB#35:                                # %for.body67.lr.ph.us
                                        #   in Loop: Header=BB11_32 Depth=2
.Ltmp893:
	.loc	15 67 51 is_stmt 1      # y_solve.c:67:51
	movsd	rhoq(%rip), %xmm4       # xmm4 = mem[0],zero
	.loc	15 68 41                # y_solve.c:68:41
	movsd	rhoq+8(%rip), %xmm5     # xmm5 = mem[0],zero
	movq	%r11, %rax
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB11_10:                              # %for.body67.us
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_32 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	15 66 22                # y_solve.c:66:22
	movq	$0, -32(%rax)
	movsd	cv(,%rbp,8), %xmm6      # xmm6 = mem[0],zero
	.loc	15 67 31                # y_solve.c:67:31
	mulsd	%xmm0, %xmm6
	xorpd	%xmm15, %xmm6
	.loc	15 67 49 is_stmt 0      # y_solve.c:67:49
	mulsd	%xmm7, %xmm4
	.loc	15 67 41                # y_solve.c:67:41
	subsd	%xmm4, %xmm6
	.loc	15 67 22                # y_solve.c:67:22
	movsd	%xmm6, -24(%rax)
	.loc	15 68 39 is_stmt 1      # y_solve.c:68:39
	movapd	%xmm8, %xmm4
	mulsd	%xmm5, %xmm4
	.loc	15 68 29 is_stmt 0      # y_solve.c:68:29
	addsd	%xmm14, %xmm4
	.loc	15 68 22                # y_solve.c:68:22
	movsd	%xmm4, -16(%rax)
	movsd	cv+16(,%rbp,8), %xmm6   # xmm6 = mem[0],zero
	.loc	15 69 31 is_stmt 1      # y_solve.c:69:31
	mulsd	%xmm0, %xmm6
	.loc	15 67 51                # y_solve.c:67:51
	movapd	%xmm5, %xmm4
	.loc	15 69 51                # y_solve.c:69:51
	movsd	rhoq+16(,%rbp,8), %xmm5 # xmm5 = mem[0],zero
	.loc	15 69 49 is_stmt 0      # y_solve.c:69:49
	movapd	%xmm7, %xmm1
	mulsd	%xmm5, %xmm1
	.loc	15 69 41                # y_solve.c:69:41
	subsd	%xmm1, %xmm6
	.loc	15 69 22                # y_solve.c:69:22
	movsd	%xmm6, -8(%rax)
	.loc	15 70 22 is_stmt 1      # y_solve.c:70:22
	movq	$0, (%rax)
.Ltmp894:
	.loc	15 65 21 discriminator 1 # y_solve.c:65:21
	incq	%rbp
	addq	$2600, %rax             # imm = 0xA28
	cmpq	%rdi, %rbp
	.loc	15 65 7 is_stmt 0 discriminator 1 # y_solve.c:65:7
	jl	.LBB11_10
.Ltmp895:
.LBB11_11:                              # %for.inc119.us
                                        #   in Loop: Header=BB11_32 Depth=2
	.loc	15 58 5 is_stmt 1 discriminator 1 # y_solve.c:58:5
	addq	$8, %r15
	addq	$40, %r11
	.loc	15 58 19 is_stmt 0 discriminator 1 # y_solve.c:58:19
	cmpq	%r9, %r14
	.loc	15 58 5 discriminator 1 # y_solve.c:58:5
	leaq	1(%r14), %r14
	jl	.LBB11_32
	jmp	.LBB11_12
	.p2align	4, 0x90
.LBB11_6:                               # %for.cond64.preheader.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
.Ltmp896:
	.loc	15 67 51 is_stmt 1      # y_solve.c:67:51
	movsd	rhoq(%rip), %xmm2       # xmm2 = mem[0],zero
	.loc	15 68 41                # y_solve.c:68:41
	movsd	rhoq+8(%rip), %xmm3     # xmm3 = mem[0],zero
	movl	$lhs+2672, %eax
	movl	$1, %ecx
	.p2align	4, 0x90
.LBB11_7:                               # %for.cond64.preheader
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB11_8 Depth 3
	testl	%edx, %edx
	movq	%rax, %rsi
	movl	$0, %edi
	movapd	%xmm3, %xmm4
	.loc	15 67 51                # y_solve.c:67:51
	movapd	%xmm2, %xmm5
	jle	.LBB11_9
	.p2align	4, 0x90
.LBB11_8:                               # %for.body67
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_7 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	15 66 22                # y_solve.c:66:22
	movq	$0, -32(%rsi)
	movsd	cv(,%rdi,8), %xmm1      # xmm1 = mem[0],zero
	.loc	15 67 31                # y_solve.c:67:31
	mulsd	%xmm0, %xmm1
	xorpd	%xmm15, %xmm1
	.loc	15 67 49 is_stmt 0      # y_solve.c:67:49
	mulsd	%xmm7, %xmm5
	.loc	15 67 41                # y_solve.c:67:41
	subsd	%xmm5, %xmm1
	.loc	15 67 22                # y_solve.c:67:22
	movsd	%xmm1, -24(%rsi)
	.loc	15 68 39 is_stmt 1      # y_solve.c:68:39
	movapd	%xmm8, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	15 68 29 is_stmt 0      # y_solve.c:68:29
	addsd	%xmm14, %xmm1
	.loc	15 68 22                # y_solve.c:68:22
	movsd	%xmm1, -16(%rsi)
	movsd	cv+16(,%rdi,8), %xmm1   # xmm1 = mem[0],zero
	.loc	15 69 31 is_stmt 1      # y_solve.c:69:31
	mulsd	%xmm0, %xmm1
	.loc	15 67 51                # y_solve.c:67:51
	movapd	%xmm4, %xmm5
	.loc	15 69 51                # y_solve.c:69:51
	movsd	rhoq+16(,%rdi,8), %xmm4 # xmm4 = mem[0],zero
	.loc	15 69 49 is_stmt 0      # y_solve.c:69:49
	movapd	%xmm7, %xmm6
	mulsd	%xmm4, %xmm6
	.loc	15 69 41                # y_solve.c:69:41
	subsd	%xmm6, %xmm1
	.loc	15 69 22                # y_solve.c:69:22
	movsd	%xmm1, -8(%rsi)
	.loc	15 70 22 is_stmt 1      # y_solve.c:70:22
	movq	$0, (%rsi)
.Ltmp897:
	.loc	15 65 21 discriminator 1 # y_solve.c:65:21
	incq	%rdi
	addq	$2600, %rsi             # imm = 0xA28
	cmpq	%rdx, %rdi
	.loc	15 65 7 is_stmt 0 discriminator 1 # y_solve.c:65:7
	jl	.LBB11_8
.Ltmp898:
.LBB11_9:                               # %for.inc119
                                        #   in Loop: Header=BB11_7 Depth=2
	.loc	15 58 5 is_stmt 1 discriminator 1 # y_solve.c:58:5
	addq	$40, %rax
	.loc	15 58 19 is_stmt 0 discriminator 1 # y_solve.c:58:19
	cmpq	%r10, %rcx
	.loc	15 58 5 discriminator 1 # y_solve.c:58:5
	leaq	1(%rcx), %rcx
	jl	.LBB11_7
.Ltmp899:
.LBB11_12:                              # %for.cond122.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	testl	%r10d, %r10d
	jle	.LBB11_15
# BB#13:                                # %for.body125.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
.Ltmp900:
	.loc	15 79 37 is_stmt 1      # y_solve.c:79:37
	movsd	comz5(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	15 80 37                # y_solve.c:80:37
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	15 81 37                # y_solve.c:81:37
	movsd	comz1(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	15 84 41                # y_solve.c:84:41
	movsd	comz6(%rip), %xmm3      # xmm3 = mem[0],zero
.Ltmp901:
	.loc	15 77 5 discriminator 1 # y_solve.c:77:5
	movslq	%r10d, %rax
	movl	$lhs+5272, %ecx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB11_14:                              # %for.body125
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp902:
	#DEBUG_VALUE: y_solve:j <- 1
	movsd	-2616(%rcx), %xmm4      # xmm4 = mem[0],zero
.Ltmp903:
	.loc	15 79 35                # y_solve.c:79:35
	addsd	%xmm0, %xmm4
	.loc	15 79 20 is_stmt 0      # y_solve.c:79:20
	movsd	%xmm4, -2616(%rcx)
	.loc	15 80 22 is_stmt 1      # y_solve.c:80:22
	movsd	-2608(%rcx), %xmm4      # xmm4 = mem[0],zero
	.loc	15 80 35 is_stmt 0      # y_solve.c:80:35
	subsd	%xmm1, %xmm4
	.loc	15 80 20                # y_solve.c:80:20
	movsd	%xmm4, -2608(%rcx)
	movsd	-2600(%rcx), %xmm4      # xmm4 = mem[0],zero
	.loc	15 81 35 is_stmt 1      # y_solve.c:81:35
	addsd	%xmm2, %xmm4
	.loc	15 81 20 is_stmt 0      # y_solve.c:81:20
	movsd	%xmm4, -2600(%rcx)
	.loc	15 83 24 is_stmt 1      # y_solve.c:83:24
	movsd	-24(%rcx), %xmm4        # xmm4 = mem[0],zero
	.loc	15 83 39 is_stmt 0      # y_solve.c:83:39
	subsd	%xmm1, %xmm4
	.loc	15 83 22                # y_solve.c:83:22
	movsd	%xmm4, -24(%rcx)
	movsd	-16(%rcx), %xmm4        # xmm4 = mem[0],zero
	.loc	15 84 39 is_stmt 1      # y_solve.c:84:39
	addsd	%xmm3, %xmm4
	.loc	15 84 22 is_stmt 0      # y_solve.c:84:22
	movsd	%xmm4, -16(%rcx)
	.loc	15 85 24 is_stmt 1      # y_solve.c:85:24
	movsd	-8(%rcx), %xmm4         # xmm4 = mem[0],zero
	.loc	15 85 39 is_stmt 0      # y_solve.c:85:39
	subsd	%xmm1, %xmm4
	.loc	15 85 22                # y_solve.c:85:22
	movsd	%xmm4, -8(%rcx)
	movsd	(%rcx), %xmm4           # xmm4 = mem[0],zero
	.loc	15 86 39 is_stmt 1      # y_solve.c:86:39
	addsd	%xmm2, %xmm4
	.loc	15 86 22 is_stmt 0      # y_solve.c:86:22
	movsd	%xmm4, (%rcx)
.Ltmp904:
	.loc	15 77 19 is_stmt 1 discriminator 1 # y_solve.c:77:19
	incq	%rdx
	addq	$40, %rcx
	cmpq	%rax, %rdx
	jl	.LBB11_14
.Ltmp905:
.LBB11_15:                              # %for.cond214.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 170 23               # y_solve.c:170:23
	movslq	grid_points+4(%rip), %r9
.Ltmp906:
	.loc	15 89 36 discriminator 1 # y_solve.c:89:36
	leaq	-4(%r9), %rax
	#DEBUG_VALUE: y_solve:i <- 1
	.loc	15 89 19 is_stmt 0 discriminator 1 # y_solve.c:89:19
	cmpl	$3, %eax
.Ltmp907:
	.loc	15 224 17 is_stmt 1     # y_solve.c:224:17
	movsd	.LCPI11_1(%rip), %xmm7  # xmm7 = mem[0],zero
.Ltmp908:
	.loc	15 192 19               # y_solve.c:192:19
	movapd	.LCPI11_2(%rip), %xmm8  # xmm8 = [1.000000e+00,1.000000e+00]
	jl	.LBB11_21
.Ltmp909:
# BB#16:                                # %for.cond218.preheader.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
	testl	%r10d, %r10d
	jle	.LBB11_22
# BB#17:                                # %for.body221.lr.ph.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
.Ltmp910:
	.loc	15 91 39                # y_solve.c:91:39
	movsd	comz1(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	15 92 39                # y_solve.c:92:39
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	15 93 39                # y_solve.c:93:39
	movsd	comz6(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	15 91 24                # y_solve.c:91:24
	movslq	%r10d, %rcx
	movl	$lhs+7872, %edx
	movl	$3, %esi
	.p2align	4, 0x90
.LBB11_18:                              # %for.body221.lr.ph
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB11_19 Depth 3
	movq	%rdx, %rdi
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB11_19:                              # %for.body221
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_18 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	-32(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	15 91 37 is_stmt 0      # y_solve.c:91:37
	addsd	%xmm0, %xmm3
	.loc	15 91 22                # y_solve.c:91:22
	movsd	%xmm3, -32(%rdi)
	.loc	15 92 24 is_stmt 1      # y_solve.c:92:24
	movsd	-24(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	15 92 37 is_stmt 0      # y_solve.c:92:37
	subsd	%xmm1, %xmm3
	.loc	15 92 22                # y_solve.c:92:22
	movsd	%xmm3, -24(%rdi)
	movsd	-16(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	15 93 37 is_stmt 1      # y_solve.c:93:37
	addsd	%xmm2, %xmm3
	.loc	15 93 22 is_stmt 0      # y_solve.c:93:22
	movsd	%xmm3, -16(%rdi)
	.loc	15 94 24 is_stmt 1      # y_solve.c:94:24
	movsd	-8(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	15 94 37 is_stmt 0      # y_solve.c:94:37
	subsd	%xmm1, %xmm3
	.loc	15 94 22                # y_solve.c:94:22
	movsd	%xmm3, -8(%rdi)
	movsd	(%rdi), %xmm3           # xmm3 = mem[0],zero
	.loc	15 95 37 is_stmt 1      # y_solve.c:95:37
	addsd	%xmm0, %xmm3
	.loc	15 95 22 is_stmt 0      # y_solve.c:95:22
	movsd	%xmm3, (%rdi)
.Ltmp911:
	.loc	15 90 21 is_stmt 1 discriminator 1 # y_solve.c:90:21
	incq	%rbp
	addq	$40, %rdi
	cmpq	%rcx, %rbp
	.loc	15 90 7 is_stmt 0 discriminator 1 # y_solve.c:90:7
	jl	.LBB11_19
.Ltmp912:
# BB#20:                                # %for.inc280
                                        #   in Loop: Header=BB11_18 Depth=2
	#DEBUG_VALUE: y_solve:i <- 1
	.loc	15 89 5 is_stmt 1 discriminator 1 # y_solve.c:89:5
	addq	$2600, %rdx             # imm = 0xA28
	.loc	15 89 19 is_stmt 0 discriminator 1 # y_solve.c:89:19
	cmpq	%rax, %rsi
	.loc	15 89 5 discriminator 1 # y_solve.c:89:5
	leaq	1(%rsi), %rsi
	jl	.LBB11_18
.Ltmp913:
.LBB11_21:                              # %for.cond283.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 99 5 is_stmt 1 discriminator 1 # y_solve.c:99:5
	testl	%r10d, %r10d
	jle	.LBB11_22
# BB#36:                                # %for.body286.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
	movq	%r13, 40(%rsp)          # 8-byte Spill
	movq	%r12, 48(%rsp)          # 8-byte Spill
.Ltmp914:
	.loc	15 100 25               # y_solve.c:100:25
	imulq	$2600, %r9, %rcx        # imm = 0xA28
	.loc	15 101 37               # y_solve.c:101:37
	movsd	comz1(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	15 102 37               # y_solve.c:102:37
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	15 103 37               # y_solve.c:103:37
	movsd	comz6(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	15 106 29               # y_solve.c:106:29
	leaq	-2(%r9), %rdi
	movq	%r9, 32(%rsp)           # 8-byte Spill
	.loc	15 108 41               # y_solve.c:108:41
	movsd	comz5(%rip), %xmm3      # xmm3 = mem[0],zero
.Ltmp915:
	.loc	15 99 5 discriminator 1 # y_solve.c:99:5
	movslq	%r10d, %rax
	leaq	lhs-7736(%rcx), %rcx
	imulq	$2600, %rdi, %rdx       # imm = 0xA28
	leaq	lhs+56(%rdx), %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB11_37:                              # %for.body286
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movsd	-24(%rcx), %xmm4        # xmm4 = mem[0],zero
.Ltmp916:
	.loc	15 101 35               # y_solve.c:101:35
	addsd	%xmm0, %xmm4
	.loc	15 101 20 is_stmt 0     # y_solve.c:101:20
	movsd	%xmm4, -24(%rcx)
	.loc	15 102 22 is_stmt 1     # y_solve.c:102:22
	movsd	-16(%rcx), %xmm4        # xmm4 = mem[0],zero
	.loc	15 102 35 is_stmt 0     # y_solve.c:102:35
	subsd	%xmm1, %xmm4
	.loc	15 102 20               # y_solve.c:102:20
	movsd	%xmm4, -16(%rcx)
	movsd	-8(%rcx), %xmm4         # xmm4 = mem[0],zero
	.loc	15 103 35 is_stmt 1     # y_solve.c:103:35
	addsd	%xmm2, %xmm4
	.loc	15 103 20 is_stmt 0     # y_solve.c:103:20
	movsd	%xmm4, -8(%rcx)
	.loc	15 104 22 is_stmt 1     # y_solve.c:104:22
	movsd	(%rcx), %xmm4           # xmm4 = mem[0],zero
	.loc	15 104 35 is_stmt 0     # y_solve.c:104:35
	subsd	%xmm1, %xmm4
	.loc	15 104 20               # y_solve.c:104:20
	movsd	%xmm4, (%rcx)
	movsd	-16(%rdx), %xmm4        # xmm4 = mem[0],zero
	.loc	15 106 39 is_stmt 1     # y_solve.c:106:39
	addsd	%xmm0, %xmm4
	.loc	15 106 22 is_stmt 0     # y_solve.c:106:22
	movsd	%xmm4, -16(%rdx)
	.loc	15 107 24 is_stmt 1     # y_solve.c:107:24
	movsd	-8(%rdx), %xmm4         # xmm4 = mem[0],zero
	.loc	15 107 39 is_stmt 0     # y_solve.c:107:39
	subsd	%xmm1, %xmm4
	.loc	15 107 22               # y_solve.c:107:22
	movsd	%xmm4, -8(%rdx)
	movsd	(%rdx), %xmm4           # xmm4 = mem[0],zero
	.loc	15 108 39 is_stmt 1     # y_solve.c:108:39
	addsd	%xmm3, %xmm4
	.loc	15 108 22 is_stmt 0     # y_solve.c:108:22
	movsd	%xmm4, (%rdx)
.Ltmp917:
	.loc	15 99 19 is_stmt 1 discriminator 1 # y_solve.c:99:19
	incq	%rsi
	addq	$40, %rcx
	addq	$40, %rdx
	cmpq	%rax, %rsi
	jl	.LBB11_37
	jmp	.LBB11_23
.Ltmp918:
	.p2align	4, 0x90
.LBB11_22:                              # %for.cond283.preheader.for.cond374.preheader_crit_edge
                                        #   in Loop: Header=BB11_4 Depth=1
	movq	%r13, 40(%rsp)          # 8-byte Spill
	movq	%r12, 48(%rsp)          # 8-byte Spill
.Ltmp919:
	.loc	15 114 36 discriminator 1 # y_solve.c:114:36
	leal	-2(%r9), %edi
	movq	%r9, 32(%rsp)           # 8-byte Spill
.LBB11_23:                              # %for.cond374.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
.Ltmp920:
	#DEBUG_VALUE: y_solve:j <- %EDI
	.loc	15 114 19 is_stmt 0 discriminator 1 # y_solve.c:114:19
	movq	%rdi, 8(%rsp)           # 8-byte Spill
	testl	%edi, %edi
.Ltmp921:
	#DEBUG_VALUE: y_solve:j <- [%RSP+8]
	jle	.LBB11_29
.Ltmp922:
# BB#24:                                # %for.cond378.preheader.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
	#DEBUG_VALUE: y_solve:j <- [%RSP+8]
	testl	%r10d, %r10d
	jle	.LBB11_29
.Ltmp923:
# BB#25:                                # %for.body381.lr.ph.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	#DEBUG_VALUE: y_solve:j <- [%RSP+8]
	.loc	15 117 40 is_stmt 1     # y_solve.c:117:40
	movsd	dtty2(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	15 116 25               # y_solve.c:116:25
	movslq	%r10d, %rax
	movq	8(%rsp), %rcx           # 8-byte Reload
	movslq	%ecx, %r14
	movq	24(%rsp), %rcx          # 8-byte Reload
	xorl	%ebp, %ebp
	movl	$1, %edi
.Ltmp924:
	.p2align	4, 0x90
.LBB11_26:                              # %for.body381.lr.ph
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB11_27 Depth 3
	.loc	15 114 5 discriminator 1 # y_solve.c:114:5
	leaq	1(%rdi), %r15
	movq	%rcx, %rdx
	movq	%rbp, %rsi
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB11_27:                              # %for.body381
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_26 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp925:
	.loc	15 116 25               # y_solve.c:116:25
	movq	lhs+2640(%rsi), %r12
	.loc	15 116 23 is_stmt 0     # y_solve.c:116:23
	movq	%r12, lhsp+2640(%rsi)
	.loc	15 117 25 is_stmt 1     # y_solve.c:117:25
	movsd	lhs+2648(%rsi), %xmm1   # xmm1 = mem[0],zero
	movsd	-1040(%rdx), %xmm2      # xmm2 = mem[0],zero
	.loc	15 117 46 is_stmt 0     # y_solve.c:117:46
	mulsd	%xmm0, %xmm2
	.loc	15 117 38               # y_solve.c:117:38
	movapd	%xmm1, %xmm3
	subsd	%xmm2, %xmm3
	.loc	15 117 23               # y_solve.c:117:23
	movsd	%xmm3, lhsp+2648(%rsi)
	.loc	15 118 25 is_stmt 1     # y_solve.c:118:25
	movq	lhs+2656(%rsi), %r9
	.loc	15 118 23 is_stmt 0     # y_solve.c:118:23
	movq	%r9, lhsp+2656(%rsi)
	.loc	15 119 25 is_stmt 1     # y_solve.c:119:25
	movsd	lhs+2664(%rsi), %xmm3   # xmm3 = mem[0],zero
	movsd	(%rdx), %xmm4           # xmm4 = mem[0],zero
	.loc	15 119 46 is_stmt 0     # y_solve.c:119:46
	mulsd	%xmm0, %xmm4
	.loc	15 119 38               # y_solve.c:119:38
	movapd	%xmm3, %xmm5
	addsd	%xmm4, %xmm5
	.loc	15 119 23               # y_solve.c:119:23
	movsd	%xmm5, lhsp+2664(%rsi)
	.loc	15 120 25 is_stmt 1     # y_solve.c:120:25
	movq	lhs+2672(%rsi), %r11
	.loc	15 120 23 is_stmt 0     # y_solve.c:120:23
	movq	%r11, lhsp+2672(%rsi)
	.loc	15 121 23 is_stmt 1     # y_solve.c:121:23
	movq	%r12, lhsm+2640(%rsi)
	.loc	15 122 38               # y_solve.c:122:38
	addsd	%xmm1, %xmm2
	.loc	15 122 23 is_stmt 0     # y_solve.c:122:23
	movsd	%xmm2, lhsm+2648(%rsi)
	.loc	15 123 23 is_stmt 1     # y_solve.c:123:23
	movq	%r9, lhsm+2656(%rsi)
	.loc	15 124 38               # y_solve.c:124:38
	subsd	%xmm4, %xmm3
	.loc	15 124 23 is_stmt 0     # y_solve.c:124:23
	movsd	%xmm3, lhsm+2664(%rsi)
	.loc	15 125 23 is_stmt 1     # y_solve.c:125:23
	movq	%r11, lhsm+2672(%rsi)
.Ltmp926:
	.loc	15 115 21 discriminator 1 # y_solve.c:115:21
	incq	%r13
	addq	$40, %rsi
	addq	$8, %rdx
	cmpq	%rax, %r13
	.loc	15 115 7 is_stmt 0 discriminator 1 # y_solve.c:115:7
	jl	.LBB11_27
.Ltmp927:
# BB#28:                                # %for.inc521
                                        #   in Loop: Header=BB11_26 Depth=2
	.loc	15 114 5 is_stmt 1 discriminator 1 # y_solve.c:114:5
	addq	$2600, %rbp             # imm = 0xA28
	addq	$520, %rcx              # imm = 0x208
	.loc	15 114 19 is_stmt 0 discriminator 1 # y_solve.c:114:19
	cmpq	%r14, %rdi
	movq	%r15, %rdi
	jl	.LBB11_26
.Ltmp928:
.LBB11_29:                              # %for.cond524.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	movq	32(%rsp), %r9           # 8-byte Reload
.Ltmp929:
	.loc	15 133 19 is_stmt 1 discriminator 1 # y_solve.c:133:19
	cmpl	$3, %r9d
	movq	48(%rsp), %r12          # 8-byte Reload
	movq	40(%rsp), %r13          # 8-byte Reload
	movq	8(%rsp), %r11           # 8-byte Reload
	jl	.LBB11_41
# BB#30:                                # %for.body527.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 133 36 is_stmt 0 discriminator 1 # y_solve.c:133:36
	leaq	-3(%r9), %rax
	.loc	15 133 5 discriminator 1 # y_solve.c:133:5
	movslq	%r10d, %rcx
	movq	%r12, %rsi
	movl	$lhs+5248, %r15d
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB11_39:                              # %for.body527
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB11_40 Depth 3
	testl	%r10d, %r10d
	#DEBUG_VALUE: y_solve:i <- 1
	movq	%rsi, %rdx
	movq	%r15, %rdi
	movl	$0, %r14d
	jle	.LBB11_38
	.p2align	4, 0x90
.LBB11_40:                              # %for.body533
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_39 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp930:
	.loc	15 137 19 is_stmt 1     # y_solve.c:137:19
	movapd	%xmm7, %xmm0
	divsd	-5192(%rdi), %xmm0
.Ltmp931:
	#DEBUG_VALUE: y_solve:fac1 <- %XMM0
	.loc	15 138 29               # y_solve.c:138:29
	movupd	-5184(%rdi), %xmm1
	.loc	15 138 28 is_stmt 0     # y_solve.c:138:28
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm3, %xmm1
	.loc	15 138 22               # y_solve.c:138:22
	movupd	%xmm1, -5184(%rdi)
.Ltmp932:
	#DEBUG_VALUE: y_solve:m <- 0
	.loc	15 141 34 is_stmt 1     # y_solve.c:141:34
	movupd	-5216(%rdx), %xmm2
	.loc	15 141 33 is_stmt 0     # y_solve.c:141:33
	mulpd	%xmm3, %xmm2
	.loc	15 141 27               # y_solve.c:141:27
	movupd	%xmm2, -5216(%rdx)
	.loc	15 141 33               # y_solve.c:141:33
	mulsd	-5200(%rdx), %xmm0
.Ltmp933:
	.loc	15 141 27               # y_solve.c:141:27
	movsd	%xmm0, -5200(%rdx)
.Ltmp934:
	.loc	15 143 41 is_stmt 1     # y_solve.c:143:41
	movsd	-2600(%rdi), %xmm3      # xmm3 = mem[0],zero
	.loc	15 143 25 is_stmt 0     # y_solve.c:143:25
	movupd	-2592(%rdi), %xmm4
	.loc	15 143 54               # y_solve.c:143:54
	movapd	%xmm3, %xmm5
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movaps	%xmm5, %xmm6
	mulpd	%xmm1, %xmm6
	.loc	15 143 39               # y_solve.c:143:39
	subpd	%xmm6, %xmm4
	.loc	15 143 23               # y_solve.c:143:23
	movupd	%xmm4, -2592(%rdi)
.Ltmp935:
	.loc	15 146 30 is_stmt 1     # y_solve.c:146:30
	movupd	-2616(%rdx), %xmm4
	.loc	15 146 62 is_stmt 0     # y_solve.c:146:62
	mulpd	%xmm2, %xmm5
	.loc	15 146 47               # y_solve.c:146:47
	subpd	%xmm5, %xmm4
	.loc	15 146 28               # y_solve.c:146:28
	movupd	%xmm4, -2616(%rdx)
	.loc	15 146 30               # y_solve.c:146:30
	movsd	-2600(%rdx), %xmm4      # xmm4 = mem[0],zero
	.loc	15 146 62               # y_solve.c:146:62
	mulsd	%xmm0, %xmm3
	.loc	15 146 47               # y_solve.c:146:47
	subsd	%xmm3, %xmm4
	.loc	15 146 28               # y_solve.c:146:28
	movsd	%xmm4, -2600(%rdx)
.Ltmp936:
	.loc	15 148 41 is_stmt 1     # y_solve.c:148:41
	movsd	-8(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	15 148 25 is_stmt 0     # y_solve.c:148:25
	movupd	(%rdi), %xmm4
.Ltmp937:
	.loc	15 151 62 is_stmt 1     # y_solve.c:151:62
	mulsd	%xmm3, %xmm0
.Ltmp938:
	.loc	15 148 54               # y_solve.c:148:54
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm3, %xmm1
	.loc	15 148 39 is_stmt 0     # y_solve.c:148:39
	subpd	%xmm1, %xmm4
	.loc	15 148 23               # y_solve.c:148:23
	movupd	%xmm4, (%rdi)
.Ltmp939:
	.loc	15 151 30 is_stmt 1     # y_solve.c:151:30
	movupd	-16(%rdx), %xmm1
	.loc	15 151 62 is_stmt 0     # y_solve.c:151:62
	mulpd	%xmm2, %xmm3
	.loc	15 151 47               # y_solve.c:151:47
	subpd	%xmm3, %xmm1
	.loc	15 151 28               # y_solve.c:151:28
	movupd	%xmm1, -16(%rdx)
	.loc	15 151 30               # y_solve.c:151:30
	movsd	(%rdx), %xmm1           # xmm1 = mem[0],zero
	.loc	15 151 47               # y_solve.c:151:47
	subsd	%xmm0, %xmm1
	.loc	15 151 28               # y_solve.c:151:28
	movsd	%xmm1, (%rdx)
.Ltmp940:
	.loc	15 136 21 is_stmt 1 discriminator 1 # y_solve.c:136:21
	incq	%r14
	addq	$40, %rdi
	addq	$40, %rdx
	cmpq	%rcx, %r14
	jl	.LBB11_40
.Ltmp941:
.LBB11_38:                              # %for.cond524.loopexit
                                        #   in Loop: Header=BB11_39 Depth=2
	.loc	15 133 5 discriminator 1 # y_solve.c:133:5
	addq	$2600, %r15             # imm = 0xA28
	addq	$2600, %rsi             # imm = 0xA28
	cmpq	%rax, %rbp
	leaq	1(%rbp), %rbp
	jl	.LBB11_39
.Ltmp942:
.LBB11_41:                              # %for.end751
                                        #   in Loop: Header=BB11_4 Depth=1
	#DEBUG_VALUE: y_solve:i <- 1
	testl	%r10d, %r10d
	jle	.LBB11_44
# BB#42:                                # %for.body757.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 162 24               # y_solve.c:162:24
	leaq	-1(%r9), %rax
.Ltmp943:
	#DEBUG_VALUE: y_solve:j1 <- %RAX
	.loc	15 164 18               # y_solve.c:164:18
	movslq	%r11d, %rdi
.Ltmp944:
	.loc	15 163 5 discriminator 1 # y_solve.c:163:5
	movslq	%r10d, %r14
	imulq	$325, %rdi, %rcx        # imm = 0x145
	imulq	$325, %rax, %rdx        # imm = 0x145
	imulq	$2600, %rax, %rsi       # imm = 0xA28
	addq	%rbx, %rsi
	imulq	$2600, %rdi, %rdi       # imm = 0xA28
	addq	%rbx, %rdi
	xorl	%ebp, %ebp
	xorl	%eax, %eax
.Ltmp945:
	.p2align	4, 0x90
.LBB11_43:                              # %for.body757
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	15 164 17               # y_solve.c:164:17
	movapd	%xmm7, %xmm0
	divsd	lhs+56(%rbp,%rcx,8), %xmm0
.Ltmp946:
	#DEBUG_VALUE: y_solve:fac1 <- %XMM0
	.loc	15 165 27               # y_solve.c:165:27
	movupd	lhs+64(%rbp,%rcx,8), %xmm1
	.loc	15 165 26 is_stmt 0     # y_solve.c:165:26
	movapd	%xmm0, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm1
	.loc	15 165 20               # y_solve.c:165:20
	movupd	%xmm1, lhs+64(%rbp,%rcx,8)
	#DEBUG_VALUE: y_solve:m <- 0
.Ltmp947:
	.loc	15 168 32 is_stmt 1     # y_solve.c:168:32
	movupd	rhs+169040(%rdi,%rbp), %xmm3
	.loc	15 168 31 is_stmt 0     # y_solve.c:168:31
	mulpd	%xmm2, %xmm3
	.loc	15 168 25               # y_solve.c:168:25
	movupd	%xmm3, rhs+169040(%rdi,%rbp)
	.loc	15 168 31               # y_solve.c:168:31
	mulsd	rhs+169056(%rdi,%rbp), %xmm0
.Ltmp948:
	.loc	15 168 25               # y_solve.c:168:25
	movsd	%xmm0, rhs+169056(%rdi,%rbp)
.Ltmp949:
	.loc	15 170 39 is_stmt 1     # y_solve.c:170:39
	movsd	lhs+48(%rbp,%rdx,8), %xmm2 # xmm2 = mem[0],zero
	.loc	15 170 23 is_stmt 0     # y_solve.c:170:23
	movupd	lhs+56(%rbp,%rdx,8), %xmm4
.Ltmp950:
	.loc	15 173 60 is_stmt 1     # y_solve.c:173:60
	mulsd	%xmm2, %xmm0
.Ltmp951:
	.loc	15 170 52               # y_solve.c:170:52
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm1
	.loc	15 170 37 is_stmt 0     # y_solve.c:170:37
	subpd	%xmm1, %xmm4
	.loc	15 170 21               # y_solve.c:170:21
	movupd	%xmm4, lhs+56(%rbp,%rdx,8)
.Ltmp952:
	.loc	15 173 28 is_stmt 1     # y_solve.c:173:28
	movupd	rhs+169040(%rsi,%rbp), %xmm1
	.loc	15 173 60 is_stmt 0     # y_solve.c:173:60
	mulpd	%xmm3, %xmm2
	.loc	15 173 45               # y_solve.c:173:45
	subpd	%xmm2, %xmm1
	.loc	15 173 28               # y_solve.c:173:28
	movsd	rhs+169056(%rsi,%rbp), %xmm2 # xmm2 = mem[0],zero
	.loc	15 173 45               # y_solve.c:173:45
	subsd	%xmm0, %xmm2
.Ltmp953:
	.loc	15 178 17 is_stmt 1     # y_solve.c:178:17
	movapd	%xmm7, %xmm0
	divsd	%xmm4, %xmm0
.Ltmp954:
	#DEBUG_VALUE: y_solve:fac2 <- %XMM0
	.loc	15 180 32               # y_solve.c:180:32
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	15 180 26 is_stmt 0     # y_solve.c:180:26
	movupd	%xmm3, rhs+169040(%rsi,%rbp)
	.loc	15 180 32               # y_solve.c:180:32
	mulsd	%xmm2, %xmm0
.Ltmp955:
	.loc	15 180 26               # y_solve.c:180:26
	movsd	%xmm0, rhs+169056(%rsi,%rbp)
.Ltmp956:
	.loc	15 163 19 is_stmt 1 discriminator 1 # y_solve.c:163:19
	incq	%rax
	addq	$40, %rbp
	cmpq	%r14, %rax
	jl	.LBB11_43
.Ltmp957:
.LBB11_44:                              # %for.cond922.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	cmpl	$3, %r9d
	jl	.LBB11_50
# BB#45:                                # %for.body925.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
.Ltmp958:
	.loc	15 187 36 discriminator 1 # y_solve.c:187:36
	leal	-3(%r9), %eax
	.loc	15 187 5 is_stmt 0 discriminator 1 # y_solve.c:187:5
	movslq	%eax, %r8
	movq	%r13, %rdx
	movl	$5248, %eax             # imm = 0x1480
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB11_47:                              # %for.body925
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB11_48 Depth 3
	#DEBUG_VALUE: y_solve:i <- 1
	testl	%r10d, %r10d
	movl	%r10d, %ecx
	movq	%rdx, %rdi
	movq	%rax, %rbp
	jle	.LBB11_46
	.p2align	4, 0x90
.LBB11_48:                              # %for.body931
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_47 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp959:
	#DEBUG_VALUE: y_solve:m <- 3
	.loc	15 193 33 is_stmt 1     # y_solve.c:193:33
	movupd	lhsp-5184(%rbp), %xmm1
	.loc	15 192 19               # y_solve.c:192:19
	movsd	lhsp-5192(%rbp), %xmm2  # xmm2 = mem[0],zero
	movhpd	lhsm-5192(%rbp), %xmm2  # xmm2 = xmm2[0],mem[0]
	movapd	%xmm8, %xmm0
	divpd	%xmm2, %xmm0
	.loc	15 193 32               # y_solve.c:193:32
	movapd	%xmm0, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm1, %xmm4
	.loc	15 193 26 is_stmt 0     # y_solve.c:193:26
	movupd	%xmm4, lhsp-5184(%rbp)
	.loc	15 196 28 is_stmt 1     # y_solve.c:196:28
	movupd	lhsp-2592(%rbp), %xmm1
	.loc	15 196 59 is_stmt 0     # y_solve.c:196:59
	movsd	lhsp-2600(%rbp), %xmm3  # xmm3 = mem[0],zero
	movapd	%xmm3, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm4, %xmm2
	.loc	15 196 43               # y_solve.c:196:43
	subpd	%xmm2, %xmm1
	.loc	15 196 26               # y_solve.c:196:26
	movupd	%xmm1, lhsp-2592(%rbp)
	.loc	15 195 33 is_stmt 1     # y_solve.c:195:33
	movupd	-5200(%rdi), %xmm1
	.loc	15 195 32 is_stmt 0     # y_solve.c:195:32
	mulpd	%xmm0, %xmm1
	.loc	15 199 28 is_stmt 1     # y_solve.c:199:28
	movupd	lhsp(%rbp), %xmm5
	.loc	15 199 59 is_stmt 0     # y_solve.c:199:59
	movsd	lhsp-8(%rbp), %xmm2     # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	mulpd	%xmm4, %xmm6
	.loc	15 199 43               # y_solve.c:199:43
	subpd	%xmm6, %xmm5
	.loc	15 199 26               # y_solve.c:199:26
	movupd	%xmm5, lhsp(%rbp)
.Ltmp960:
	#DEBUG_VALUE: y_solve:m <- 4
	.loc	15 205 33 is_stmt 1     # y_solve.c:205:33
	movupd	lhsm-5184(%rbp), %xmm4
	.loc	15 205 32 is_stmt 0     # y_solve.c:205:32
	movhlps	%xmm0, %xmm0            # xmm0 = xmm0[1,1]
	mulpd	%xmm4, %xmm0
	.loc	15 205 26               # y_solve.c:205:26
	movupd	%xmm0, lhsm-5184(%rbp)
	.loc	15 195 26 is_stmt 1     # y_solve.c:195:26
	movupd	%xmm1, -5200(%rdi)
	.loc	15 208 28               # y_solve.c:208:28
	movupd	lhsm-2592(%rbp), %xmm4
	.loc	15 198 61               # y_solve.c:198:61
	movsd	lhsm-2600(%rbp), %xmm5  # xmm5 = mem[0],zero
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	.loc	15 208 59               # y_solve.c:208:59
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	mulpd	%xmm0, %xmm5
	.loc	15 208 43 is_stmt 0     # y_solve.c:208:43
	subpd	%xmm5, %xmm4
	.loc	15 208 26               # y_solve.c:208:26
	movupd	%xmm4, lhsm-2592(%rbp)
	.loc	15 198 28 is_stmt 1     # y_solve.c:198:28
	movupd	-2600(%rdi), %xmm4
	.loc	15 198 61 is_stmt 0     # y_solve.c:198:61
	mulpd	%xmm1, %xmm3
	.loc	15 198 45               # y_solve.c:198:45
	subpd	%xmm3, %xmm4
	.loc	15 198 26               # y_solve.c:198:26
	movupd	%xmm4, -2600(%rdi)
	.loc	15 211 28 is_stmt 1     # y_solve.c:211:28
	movupd	lhsm(%rbp), %xmm3
	.loc	15 201 61               # y_solve.c:201:61
	movsd	lhsm-8(%rbp), %xmm4     # xmm4 = mem[0],zero
	unpcklpd	%xmm4, %xmm2    # xmm2 = xmm2[0],xmm4[0]
	.loc	15 211 59               # y_solve.c:211:59
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm0, %xmm4
	.loc	15 211 43 is_stmt 0     # y_solve.c:211:43
	subpd	%xmm4, %xmm3
	.loc	15 211 26               # y_solve.c:211:26
	movupd	%xmm3, lhsm(%rbp)
	.loc	15 201 28 is_stmt 1     # y_solve.c:201:28
	movupd	(%rdi), %xmm0
	.loc	15 201 61 is_stmt 0     # y_solve.c:201:61
	mulpd	%xmm1, %xmm2
	.loc	15 201 45               # y_solve.c:201:45
	subpd	%xmm2, %xmm0
	.loc	15 201 26               # y_solve.c:201:26
	movupd	%xmm0, (%rdi)
.Ltmp961:
	.loc	15 190 7 is_stmt 1 discriminator 1 # y_solve.c:190:7
	addq	$40, %rbp
	addq	$40, %rdi
	decl	%ecx
	jne	.LBB11_48
.Ltmp962:
.LBB11_46:                              # %for.cond922.loopexit
                                        #   in Loop: Header=BB11_47 Depth=2
	.loc	15 187 5 discriminator 1 # y_solve.c:187:5
	addq	$2600, %rax             # imm = 0xA28
	addq	$2600, %rdx             # imm = 0xA28
	cmpq	%r8, %rsi
	leaq	1(%rsi), %rsi
	jl	.LBB11_47
.Ltmp963:
# BB#49:                                # %for.end1327.loopexit
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 222 22 discriminator 1 # y_solve.c:222:22
	movl	grid_points(%rip), %r8d
.LBB11_50:                              # %for.end1327
                                        #   in Loop: Header=BB11_4 Depth=1
	#DEBUG_VALUE: y_solve:i <- 1
	.loc	15 222 5 is_stmt 0 discriminator 1 # y_solve.c:222:5
	addl	$-2, %r8d
	jle	.LBB11_51
.Ltmp964:
# BB#52:                                # %for.body1333.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 221 24 is_stmt 1     # y_solve.c:221:24
	decl	%r9d
.Ltmp965:
	#DEBUG_VALUE: y_solve:j1 <- %R9D
	.loc	15 224 18               # y_solve.c:224:18
	movslq	%r11d, %rax
	.loc	15 228 26               # y_solve.c:228:26
	movslq	%r9d, %rcx
.Ltmp966:
	.loc	15 222 5 discriminator 1 # y_solve.c:222:5
	movslq	%r8d, %r9
.Ltmp967:
	imulq	$2600, %rax, %rax       # imm = 0xA28
	leaq	169064(%rbx,%rax), %rdx
	addq	$169064, %rax           # imm = 0x29468
	imulq	$2600, %rcx, %rsi       # imm = 0xA28
	leaq	(%rbx,%rsi), %rdi
	xorl	%ebp, %ebp
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB11_53:                              # %for.body1333
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp968:
	#DEBUG_VALUE: y_solve:m <- 3
	.loc	15 224 17               # y_solve.c:224:17
	movapd	%xmm7, %xmm1
	divsd	lhsp-169008(%rax,%rbp), %xmm1
.Ltmp969:
	#DEBUG_VALUE: y_solve:fac1 <- %XMM1
	.loc	15 225 31               # y_solve.c:225:31
	movupd	lhsp-169000(%rax,%rbp), %xmm0
	.loc	15 225 30 is_stmt 0     # y_solve.c:225:30
	movapd	%xmm1, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm0, %xmm2
	.loc	15 225 24               # y_solve.c:225:24
	movupd	%xmm2, lhsp-169000(%rax,%rbp)
	.loc	15 227 30 is_stmt 1     # y_solve.c:227:30
	mulsd	rhs(%rdx,%rbp), %xmm1
.Ltmp970:
	.loc	15 227 24 is_stmt 0     # y_solve.c:227:24
	movsd	%xmm1, rhs(%rdx,%rbp)
	.loc	15 228 43 is_stmt 1     # y_solve.c:228:43
	movsd	lhsp+48(%rsi,%rbp), %xmm3 # xmm3 = mem[0],zero
	.loc	15 228 26 is_stmt 0     # y_solve.c:228:26
	movupd	lhsp+56(%rsi,%rbp), %xmm0
	.loc	15 230 59 is_stmt 1     # y_solve.c:230:59
	mulsd	%xmm3, %xmm1
	.loc	15 228 57               # y_solve.c:228:57
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm2, %xmm3
	.loc	15 228 41 is_stmt 0     # y_solve.c:228:41
	subpd	%xmm3, %xmm0
	.loc	15 228 24               # y_solve.c:228:24
	movupd	%xmm0, lhsp+56(%rsi,%rbp)
	.loc	15 230 26 is_stmt 1     # y_solve.c:230:26
	movsd	rhs+169064(%rdi,%rbp), %xmm2 # xmm2 = mem[0],zero
	.loc	15 230 43 is_stmt 0     # y_solve.c:230:43
	subsd	%xmm1, %xmm2
	.loc	15 230 24               # y_solve.c:230:24
	movsd	%xmm2, rhs+169064(%rdi,%rbp)
.Ltmp971:
	#DEBUG_VALUE: y_solve:m <- 4
	.loc	15 233 17 is_stmt 1     # y_solve.c:233:17
	movapd	%xmm7, %xmm1
	divsd	lhsm-169008(%rax,%rbp), %xmm1
.Ltmp972:
	#DEBUG_VALUE: y_solve:fac1 <- %XMM1
	.loc	15 234 31               # y_solve.c:234:31
	movupd	lhsm-169000(%rax,%rbp), %xmm3
	.loc	15 234 30 is_stmt 0     # y_solve.c:234:30
	movapd	%xmm1, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm3, %xmm4
	.loc	15 234 24               # y_solve.c:234:24
	movupd	%xmm4, lhsm-169000(%rax,%rbp)
	.loc	15 236 30 is_stmt 1     # y_solve.c:236:30
	mulsd	rhs+8(%rdx,%rbp), %xmm1
.Ltmp973:
	.loc	15 236 24 is_stmt 0     # y_solve.c:236:24
	movsd	%xmm1, rhs+8(%rdx,%rbp)
	.loc	15 237 43 is_stmt 1     # y_solve.c:237:43
	movsd	lhsm+48(%rsi,%rbp), %xmm3 # xmm3 = mem[0],zero
	.loc	15 237 26 is_stmt 0     # y_solve.c:237:26
	movupd	lhsm+56(%rsi,%rbp), %xmm5
	.loc	15 239 59 is_stmt 1     # y_solve.c:239:59
	mulsd	%xmm3, %xmm1
	.loc	15 237 57               # y_solve.c:237:57
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm4, %xmm3
	.loc	15 237 41 is_stmt 0     # y_solve.c:237:41
	subpd	%xmm3, %xmm5
	.loc	15 237 24               # y_solve.c:237:24
	movupd	%xmm5, lhsm+56(%rsi,%rbp)
	.loc	15 239 26 is_stmt 1     # y_solve.c:239:26
	movsd	rhs+169072(%rdi,%rbp), %xmm3 # xmm3 = mem[0],zero
	.loc	15 239 43 is_stmt 0     # y_solve.c:239:43
	subsd	%xmm1, %xmm3
	.loc	15 244 44 is_stmt 1     # y_solve.c:244:44
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	unpcklpd	%xmm5, %xmm0    # xmm0 = xmm0[0],xmm5[0]
	divpd	%xmm0, %xmm2
	.loc	15 244 26 is_stmt 0     # y_solve.c:244:26
	movupd	%xmm2, rhs+169064(%rdi,%rbp)
.Ltmp974:
	.loc	15 222 19 is_stmt 1 discriminator 1 # y_solve.c:222:19
	incq	%rcx
	addq	$40, %rbp
	cmpq	%r9, %rcx
	.loc	15 222 5 is_stmt 0 discriminator 1 # y_solve.c:222:5
	jl	.LBB11_53
.Ltmp975:
# BB#54:                                # %for.end1616
                                        #   in Loop: Header=BB11_4 Depth=1
	testl	%r8d, %r8d
.Ltmp976:
	.loc	15 266 14 is_stmt 1     # y_solve.c:266:14
	movl	grid_points+4(%rip), %r10d
	#DEBUG_VALUE: y_solve:i <- 1
	jle	.LBB11_57
.Ltmp977:
# BB#55:                                # %for.cond1623.preheader.lr.ph
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 256 58               # y_solve.c:256:58
	movslq	%r10d, %rcx
.Ltmp978:
	.loc	15 253 24               # y_solve.c:253:24
	imulq	$2600, %rcx, %rsi       # imm = 0xA28
.Ltmp979:
	.loc	15 254 5 discriminator 1 # y_solve.c:254:5
	leaq	-5200(%rbx,%rsi), %rcx
	leaq	rhs-2600(%rsi), %rdx
	leaq	-5200(%rsi), %rsi
	xorl	%edi, %edi
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB11_56:                              # %for.cond1623.preheader
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp980:
	.loc	15 256 27               # y_solve.c:256:27
	movupd	rhs+169040(%rcx,%rdi), %xmm0
	.loc	15 256 58 is_stmt 0     # y_solve.c:256:58
	leaq	(%rdx,%rdi), %rax
	movupd	169040(%rbx,%rax), %xmm1
	.loc	15 256 57               # y_solve.c:256:57
	movsd	lhs+64(%rsi,%rdi), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	15 256 43               # y_solve.c:256:43
	subpd	%xmm3, %xmm0
	.loc	15 256 25               # y_solve.c:256:25
	movupd	%xmm0, rhs+169040(%rcx,%rdi)
	.loc	15 256 27               # y_solve.c:256:27
	movupd	rhs+169056(%rcx,%rdi), %xmm0
	.loc	15 256 58               # y_solve.c:256:58
	movupd	169056(%rbx,%rax), %xmm1
	.loc	15 256 57               # y_solve.c:256:57
	movhpd	lhsp+64(%rsi,%rdi), %xmm2 # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm1, %xmm2
	.loc	15 256 43               # y_solve.c:256:43
	subpd	%xmm2, %xmm0
	.loc	15 256 25               # y_solve.c:256:25
	movupd	%xmm0, rhs+169056(%rcx,%rdi)
.Ltmp981:
	.loc	15 260 25 is_stmt 1     # y_solve.c:260:25
	movsd	rhs+169072(%rcx,%rdi), %xmm0 # xmm0 = mem[0],zero
	.loc	15 260 43 is_stmt 0     # y_solve.c:260:43
	movsd	lhsm+64(%rsi,%rdi), %xmm1 # xmm1 = mem[0],zero
	.loc	15 260 56               # y_solve.c:260:56
	mulsd	169072(%rbx,%rax), %xmm1
	.loc	15 260 41               # y_solve.c:260:41
	subsd	%xmm1, %xmm0
	.loc	15 260 23               # y_solve.c:260:23
	movsd	%xmm0, rhs+169072(%rcx,%rdi)
.Ltmp982:
	.loc	15 254 19 is_stmt 1 discriminator 1 # y_solve.c:254:19
	incq	%rbp
	addq	$40, %rdi
	cmpq	%r9, %rbp
	jl	.LBB11_56
	jmp	.LBB11_57
.Ltmp983:
	.p2align	4, 0x90
.LBB11_51:                              # %for.end1616.thread
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 266 14               # y_solve.c:266:14
	movl	grid_points+4(%rip), %r10d
.LBB11_57:                              #   in Loop: Header=BB11_4 Depth=1
	movq	(%rsp), %r9             # 8-byte Reload
.Ltmp984:
	.loc	15 266 5 is_stmt 0 discriminator 1 # y_solve.c:266:5
	cmpl	$3, %r10d
	jl	.LBB11_63
.Ltmp985:
# BB#58:                                # %for.end1718
                                        #   in Loop: Header=BB11_4 Depth=1
	testl	%r8d, %r8d
	jle	.LBB11_63
# BB#59:                                # %for.body1722.preheader
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 266 28               # y_solve.c:266:28
	addl	$-3, %r10d
.Ltmp986:
	#DEBUG_VALUE: y_solve:j <- %R10D
	.loc	15 267 14 is_stmt 1     # y_solve.c:267:14
	movslq	%r10d, %rax
	imulq	$2600, %rax, %rcx       # imm = 0xA28
	xorl	%edx, %edx
.Ltmp987:
	.p2align	4, 0x90
.LBB11_60:                              # %for.body1722
                                        #   Parent Loop BB11_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB11_61 Depth 3
	#DEBUG_VALUE: y_solve:i <- 1
	movl	%r8d, %esi
	movq	%rdx, %rdi
	.p2align	4, 0x90
.LBB11_61:                              # %for.cond1729.preheader
                                        #   Parent Loop BB11_4 Depth=1
                                        #     Parent Loop BB11_60 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp988:
	.loc	15 272 29               # y_solve.c:272:29
	leaq	(%rcx,%rdi), %rbp
	.loc	15 271 29               # y_solve.c:271:29
	movupd	rhs+169040(%rbx,%rbp), %xmm0
	.loc	15 272 42               # y_solve.c:272:42
	movupd	rhs+171640(%rbx,%rbp), %xmm1
	.loc	15 272 41 is_stmt 0     # y_solve.c:272:41
	movsd	lhs+64(%rcx,%rdi), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	15 271 45 is_stmt 1     # y_solve.c:271:45
	subpd	%xmm3, %xmm0
	.loc	15 273 42               # y_solve.c:273:42
	movupd	rhs+174240(%rbx,%rbp), %xmm1
	.loc	15 273 41 is_stmt 0     # y_solve.c:273:41
	movsd	lhs+72(%rcx,%rdi), %xmm3 # xmm3 = mem[0],zero
	movapd	%xmm3, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm1, %xmm4
	.loc	15 272 59 is_stmt 1     # y_solve.c:272:59
	subpd	%xmm4, %xmm0
	.loc	15 271 27               # y_solve.c:271:27
	movupd	%xmm0, rhs+169040(%rbx,%rbp)
	.loc	15 271 29 is_stmt 0     # y_solve.c:271:29
	movupd	rhs+169056(%rbx,%rbp), %xmm0
	.loc	15 272 42 is_stmt 1     # y_solve.c:272:42
	movupd	rhs+171656(%rbx,%rbp), %xmm1
	.loc	15 272 41 is_stmt 0     # y_solve.c:272:41
	movhpd	lhsp+64(%rcx,%rdi), %xmm2 # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm1, %xmm2
	.loc	15 271 45 is_stmt 1     # y_solve.c:271:45
	subpd	%xmm2, %xmm0
	.loc	15 273 42               # y_solve.c:273:42
	movupd	rhs+174256(%rbx,%rbp), %xmm1
	.loc	15 273 41 is_stmt 0     # y_solve.c:273:41
	movhpd	lhsp+72(%rcx,%rdi), %xmm3 # xmm3 = xmm3[0],mem[0]
	mulpd	%xmm1, %xmm3
	.loc	15 272 59 is_stmt 1     # y_solve.c:272:59
	subpd	%xmm3, %xmm0
	.loc	15 271 27               # y_solve.c:271:27
	movupd	%xmm0, rhs+169056(%rbx,%rbp)
.Ltmp989:
	.loc	15 282 27               # y_solve.c:282:27
	movsd	rhs+169072(%rbx,%rbp), %xmm0 # xmm0 = mem[0],zero
	.loc	15 283 27               # y_solve.c:283:27
	movsd	lhsm+64(%rcx,%rdi), %xmm1 # xmm1 = mem[0],zero
	.loc	15 283 40 is_stmt 0     # y_solve.c:283:40
	mulsd	rhs+171672(%rbx,%rbp), %xmm1
	.loc	15 282 43 is_stmt 1     # y_solve.c:282:43
	subsd	%xmm1, %xmm0
	.loc	15 284 27               # y_solve.c:284:27
	movsd	lhsm+72(%rcx,%rdi), %xmm1 # xmm1 = mem[0],zero
	.loc	15 284 40 is_stmt 0     # y_solve.c:284:40
	mulsd	rhs+174272(%rbx,%rbp), %xmm1
	.loc	15 283 58 is_stmt 1     # y_solve.c:283:58
	subsd	%xmm1, %xmm0
	.loc	15 282 25               # y_solve.c:282:25
	movsd	%xmm0, rhs+169072(%rbx,%rbp)
.Ltmp990:
	.loc	15 269 7 discriminator 1 # y_solve.c:269:7
	addq	$40, %rdi
	decl	%esi
	jne	.LBB11_61
.Ltmp991:
# BB#62:                                # %for.inc1868
                                        #   in Loop: Header=BB11_60 Depth=2
	.loc	15 266 5 discriminator 1 # y_solve.c:266:5
	addq	$-2600, %rdx            # imm = 0xFFFFFFFFFFFFF5D8
	.loc	15 266 34 is_stmt 0 discriminator 1 # y_solve.c:266:34
	testq	%rax, %rax
	.loc	15 266 5 discriminator 1 # y_solve.c:266:5
	leaq	-1(%rax), %rax
	jg	.LBB11_60
.Ltmp992:
.LBB11_63:                              # %for.inc1870
                                        #   in Loop: Header=BB11_4 Depth=1
	.loc	15 48 17 is_stmt 1 discriminator 1 # y_solve.c:48:17
	movslq	grid_points+8(%rip), %rax
	.loc	15 48 34 is_stmt 0 discriminator 1 # y_solve.c:48:34
	addq	$-2, %rax
	.loc	15 48 3 discriminator 1 # y_solve.c:48:3
	addq	$33800, 16(%rsp)        # 8-byte Folded Spill
                                        # imm = 0x8408
	addq	$33800, 24(%rsp)        # 8-byte Folded Spill
                                        # imm = 0x8408
	addq	$169000, %r12           # imm = 0x29428
	addq	$169000, %rbx           # imm = 0x29428
	addq	$169000, %r13           # imm = 0x29428
	.loc	15 48 17 discriminator 1 # y_solve.c:48:17
	cmpq	%rax, %r9
	.loc	15 48 3 discriminator 1 # y_solve.c:48:3
	leaq	1(%r9), %r9
	jl	.LBB11_4
.Ltmp993:
.LBB11_64:                              # %for.end1872
	.loc	15 288 7 is_stmt 1      # y_solve.c:288:7
	cmpl	$0, timeron(%rip)
	je	.LBB11_66
# BB#65:                                # %if.then1874
	.loc	15 288 16 is_stmt 0 discriminator 1 # y_solve.c:288:16
	movl	$7, %edi
	callq	timer_stop
.Ltmp994:
.LBB11_66:                              # %if.end1875
	.loc	15 290 3 is_stmt 1      # y_solve.c:290:3
	xorl	%eax, %eax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	pinvr                   # TAILCALL
.Ltmp995:
.Lfunc_end11:
	.size	y_solve, .Lfunc_end11-y_solve
	.cfi_endproc

	.globl	lhsinitj
	.p2align	4, 0x90
	.type	lhsinitj,@function
lhsinitj:                               # @lhsinitj
.Lfunc_begin12:
	.loc	9 232 0                 # initialize.c:232:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: lhsinitj:nj <- %EDI
	#DEBUG_VALUE: lhsinitj:ni <- %ESI
	#DEBUG_VALUE: lhsinitj:i <- 1
	.loc	9 239 17 prologue_end discriminator 1 # initialize.c:239:17
	testl	%esi, %esi
	jle	.LBB12_3
.Ltmp996:
# BB#1:                                 # %for.cond1.preheader.lr.ph
	#DEBUG_VALUE: lhsinitj:ni <- %ESI
	#DEBUG_VALUE: lhsinitj:nj <- %EDI
	.loc	9 244 7                 # initialize.c:244:7
	movslq	%edi, %rax
.Ltmp997:
	.loc	9 239 3 discriminator 1 # initialize.c:239:3
	imulq	$2600, %rax, %rax       # imm = 0xA28
	xorl	%ecx, %ecx
.Ltmp998:
	.loc	9 248 19                # initialize.c:248:19
	movabsq	$4607182418800017408, %rdx # imm = 0x3FF0000000000000
.Ltmp999:
	.p2align	4, 0x90
.LBB12_2:                               # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	.loc	9 241 21                # initialize.c:241:21
	movq	$0, lhs+40(%rcx)
	.loc	9 242 21                # initialize.c:242:21
	movq	$0, lhsp+40(%rcx)
	.loc	9 243 21                # initialize.c:243:21
	movq	$0, lhsm+40(%rcx)
	.loc	9 244 22                # initialize.c:244:22
	movq	$0, lhs+40(%rax,%rcx)
	.loc	9 245 22                # initialize.c:245:22
	movq	$0, lhsp+40(%rax,%rcx)
	.loc	9 246 22                # initialize.c:246:22
	movq	$0, lhsm+40(%rax,%rcx)
	.loc	9 241 21                # initialize.c:241:21
	movq	$0, lhs+48(%rcx)
	.loc	9 242 21                # initialize.c:242:21
	movq	$0, lhsp+48(%rcx)
	.loc	9 243 21                # initialize.c:243:21
	movq	$0, lhsm+48(%rcx)
	.loc	9 244 22                # initialize.c:244:22
	movq	$0, lhs+48(%rax,%rcx)
	.loc	9 245 22                # initialize.c:245:22
	movq	$0, lhsp+48(%rax,%rcx)
	.loc	9 246 22                # initialize.c:246:22
	movq	$0, lhsm+48(%rax,%rcx)
	.loc	9 241 21                # initialize.c:241:21
	movq	$0, lhs+64(%rcx)
	.loc	9 242 21                # initialize.c:242:21
	movq	$0, lhsp+64(%rcx)
	.loc	9 243 21                # initialize.c:243:21
	movq	$0, lhsm+64(%rcx)
	.loc	9 244 22                # initialize.c:244:22
	movq	$0, lhs+64(%rax,%rcx)
	.loc	9 245 22                # initialize.c:245:22
	movq	$0, lhsp+64(%rax,%rcx)
	.loc	9 246 22                # initialize.c:246:22
	movq	$0, lhsm+64(%rax,%rcx)
	.loc	9 241 21                # initialize.c:241:21
	movq	$0, lhs+72(%rcx)
	.loc	9 242 21                # initialize.c:242:21
	movq	$0, lhsp+72(%rcx)
	.loc	9 243 21                # initialize.c:243:21
	movq	$0, lhsm+72(%rcx)
	.loc	9 244 22                # initialize.c:244:22
	movq	$0, lhs+72(%rax,%rcx)
	.loc	9 245 22                # initialize.c:245:22
	movq	$0, lhsp+72(%rax,%rcx)
	.loc	9 246 22                # initialize.c:246:22
	movq	$0, lhsm+72(%rax,%rcx)
.Ltmp1000:
	.loc	9 248 19                # initialize.c:248:19
	movq	%rdx, lhs+56(%rcx)
	.loc	9 249 19                # initialize.c:249:19
	movq	%rdx, lhsp+56(%rcx)
	.loc	9 250 19                # initialize.c:250:19
	movq	%rdx, lhsm+56(%rcx)
	.loc	9 251 20                # initialize.c:251:20
	movq	%rdx, lhs+56(%rax,%rcx)
	.loc	9 252 20                # initialize.c:252:20
	movq	%rdx, lhsp+56(%rax,%rcx)
	.loc	9 253 20                # initialize.c:253:20
	movq	%rdx, lhsm+56(%rax,%rcx)
.Ltmp1001:
	.loc	9 239 3 discriminator 1 # initialize.c:239:3
	addq	$40, %rcx
	decl	%esi
	jne	.LBB12_2
.Ltmp1002:
.LBB12_3:                               # %for.end58
	.loc	9 255 1                 # initialize.c:255:1
	retq
.Ltmp1003:
.Lfunc_end12:
	.size	lhsinitj, .Lfunc_end12-lhsinitj
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI13_0:
	.quad	4602678819172646912     # double 0.5
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI13_1:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
	.text
	.globl	pinvr
	.p2align	4, 0x90
	.type	pinvr,@function
pinvr:                                  # @pinvr
.Lfunc_begin13:
	.file	16 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/pinvr.c"
	.loc	16 40 0                 # pinvr.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	16 44 7 prologue_end    # pinvr.c:44:7
	pushq	%rbx
.Ltmp1004:
	.cfi_def_cfa_offset 16
.Ltmp1005:
	.cfi_offset %rbx, -16
	cmpl	$0, timeron(%rip)
	je	.LBB13_2
# BB#1:                                 # %if.then
	.loc	16 44 16 is_stmt 0 discriminator 1 # pinvr.c:44:16
	movl	$12, %edi
	callq	timer_start
.Ltmp1006:
.LBB13_2:                               # %for.cond.preheader
	.loc	16 48 14 is_stmt 1      # pinvr.c:48:14
	movslq	nz2(%rip), %r8
.Ltmp1007:
	.loc	16 45 20 discriminator 1 # pinvr.c:45:20
	testq	%r8, %r8
	jle	.LBB13_10
# BB#3:                                 # %for.cond1.preheader.lr.ph
.Ltmp1008:
	.loc	16 46 22 discriminator 1 # pinvr.c:46:22
	movl	ny2(%rip), %r11d
	.loc	16 46 19 is_stmt 0 discriminator 1 # pinvr.c:46:19
	testl	%r11d, %r11d
	jle	.LBB13_10
# BB#4:                                 # %for.cond4.preheader.lr.ph.preheader
.Ltmp1009:
	.loc	16 47 24 is_stmt 1 discriminator 1 # pinvr.c:47:24
	movl	nx2(%rip), %edi
.Ltmp1010:
	.loc	16 54 14                # pinvr.c:54:14
	movsd	bt(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	16 48 14                # pinvr.c:48:14
	incl	%r11d
	movl	$1, %r9d
	movl	$rhs+171672, %r10d
	movsd	.LCPI13_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movapd	.LCPI13_1(%rip), %xmm2  # xmm2 = [9223372036854775808,9223372036854775808]
	.p2align	4, 0x90
.LBB13_5:                               # %for.cond4.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB13_6 Depth 2
                                        #       Child Loop BB13_7 Depth 3
	testl	%edi, %edi
	movq	%r10, %rcx
	movl	$1, %esi
	jle	.LBB13_9
	.p2align	4, 0x90
.LBB13_6:                               # %for.body6.lr.ph
                                        #   Parent Loop BB13_5 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB13_7 Depth 3
	movl	%edi, %edx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB13_7:                               # %for.body6
                                        #   Parent Loop BB13_5 Depth=1
                                        #     Parent Loop BB13_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	16 49 14                # pinvr.c:49:14
	movq	-24(%rax), %rbx
	.loc	16 51 14                # pinvr.c:51:14
	movsd	-8(%rax), %xmm3         # xmm3 = mem[0],zero
.Ltmp1011:
	#DEBUG_VALUE: pinvr:r4 <- %XMM3
	.loc	16 52 14                # pinvr.c:52:14
	movsd	(%rax), %xmm4           # xmm4 = mem[0],zero
.Ltmp1012:
	#DEBUG_VALUE: pinvr:r5 <- %XMM4
	movsd	-32(%rax), %xmm5        # xmm5 = mem[0],zero
	.loc	16 54 17                # pinvr.c:54:17
	mulsd	%xmm0, %xmm5
.Ltmp1013:
	#DEBUG_VALUE: pinvr:t1 <- %XMM5
	.loc	16 55 25                # pinvr.c:55:25
	movapd	%xmm3, %xmm6
	addsd	%xmm4, %xmm6
	.loc	16 55 18 is_stmt 0      # pinvr.c:55:18
	mulsd	%xmm1, %xmm6
.Ltmp1014:
	#DEBUG_VALUE: pinvr:t2 <- %XMM6
	.loc	16 57 38 is_stmt 1      # pinvr.c:57:38
	subsd	%xmm4, %xmm3
.Ltmp1015:
	.loc	16 57 31 is_stmt 0      # pinvr.c:57:31
	mulsd	%xmm0, %xmm3
	.loc	16 58 27 is_stmt 1      # pinvr.c:58:27
	movsd	-16(%rax), %xmm4        # xmm4 = mem[0],zero
.Ltmp1016:
	.loc	16 57 25                # pinvr.c:57:25
	movsd	%xmm3, -32(%rax)
	.loc	16 58 27                # pinvr.c:58:27
	xorpd	%xmm2, %xmm4
	.loc	16 58 25 is_stmt 0      # pinvr.c:58:25
	movlpd	%xmm4, -24(%rax)
	.loc	16 59 25 is_stmt 1      # pinvr.c:59:25
	movq	%rbx, -16(%rax)
	.loc	16 60 31                # pinvr.c:60:31
	movapd	%xmm6, %xmm3
	subsd	%xmm5, %xmm3
	.loc	16 60 25 is_stmt 0      # pinvr.c:60:25
	movsd	%xmm3, -8(%rax)
	.loc	16 61 31 is_stmt 1      # pinvr.c:61:31
	addsd	%xmm5, %xmm6
.Ltmp1017:
	.loc	16 61 25 is_stmt 0      # pinvr.c:61:25
	movsd	%xmm6, (%rax)
.Ltmp1018:
	.loc	16 47 7 is_stmt 1 discriminator 1 # pinvr.c:47:7
	addq	$40, %rax
	decl	%edx
	jne	.LBB13_7
.Ltmp1019:
# BB#8:                                 # %for.inc81
                                        #   in Loop: Header=BB13_6 Depth=2
	#DEBUG_VALUE: pinvr:t1 <- %XMM5
	.loc	16 46 5 discriminator 1 # pinvr.c:46:5
	incq	%rsi
	addq	$2600, %rcx             # imm = 0xA28
	cmpl	%r11d, %esi
	jne	.LBB13_6
.Ltmp1020:
.LBB13_9:                               # %for.inc84
                                        #   in Loop: Header=BB13_5 Depth=1
	.loc	16 45 3 discriminator 1 # pinvr.c:45:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	16 45 17 is_stmt 0 discriminator 1 # pinvr.c:45:17
	cmpq	%r8, %r9
	.loc	16 45 3 discriminator 1 # pinvr.c:45:3
	leaq	1(%r9), %r9
	jl	.LBB13_5
.Ltmp1021:
.LBB13_10:                              # %for.end86
	.loc	16 65 7 is_stmt 1       # pinvr.c:65:7
	cmpl	$0, timeron(%rip)
	je	.LBB13_11
# BB#12:                                # %if.then88
	.loc	16 65 16 is_stmt 0 discriminator 1 # pinvr.c:65:16
	movl	$12, %edi
	popq	%rbx
	jmp	timer_stop              # TAILCALL
.Ltmp1022:
.LBB13_11:                              # %if.end89
	.loc	16 66 1 is_stmt 1       # pinvr.c:66:1
	popq	%rbx
	retq
.Ltmp1023:
.Lfunc_end13:
	.size	pinvr, .Lfunc_end13-pinvr
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI14_0:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
.LCPI14_2:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI14_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	z_solve
	.p2align	4, 0x90
	.type	z_solve,@function
z_solve:                                # @z_solve
.Lfunc_begin14:
	.file	17 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/z_solve.c"
	.loc	17 43 0                 # z_solve.c:43:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	17 47 7 prologue_end    # z_solve.c:47:7
	pushq	%rbp
.Ltmp1024:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1025:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1026:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1027:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1028:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1029:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp1030:
	.cfi_def_cfa_offset 96
.Ltmp1031:
	.cfi_offset %rbx, -56
.Ltmp1032:
	.cfi_offset %r12, -48
.Ltmp1033:
	.cfi_offset %r13, -40
.Ltmp1034:
	.cfi_offset %r14, -32
.Ltmp1035:
	.cfi_offset %r15, -24
.Ltmp1036:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB14_2
# BB#1:                                 # %if.then
	.loc	17 47 16 is_stmt 0 discriminator 1 # z_solve.c:47:16
	movl	$8, %edi
	callq	timer_start
.Ltmp1037:
.LBB14_2:                               # %for.cond.preheader
	.loc	17 48 17 is_stmt 1 discriminator 1 # z_solve.c:48:17
	cmpl	$0, ny2(%rip)
	jle	.LBB14_64
# BB#3:                                 # %for.body.preheader
.Ltmp1038:
	.loc	17 49 21                # z_solve.c:49:21
	movl	nx2(%rip), %esi
	movl	$1, %ecx
	movl	$speed+68128, %eax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	movl	$rhs+340656, %r11d
	xorl	%ebx, %ebx
	movl	$rhs+340664, %r12d
	movl	$rhs+2664, %r15d
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB14_4:                               # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB14_35 Depth 2
                                        #       Child Loop BB14_36 Depth 3
                                        #       Child Loop BB14_33 Depth 3
                                        #     Child Loop BB14_10 Depth 2
                                        #       Child Loop BB14_8 Depth 3
                                        #     Child Loop BB14_13 Depth 2
                                        #     Child Loop BB14_17 Depth 2
                                        #       Child Loop BB14_18 Depth 3
                                        #     Child Loop BB14_22 Depth 2
                                        #     Child Loop BB14_26 Depth 2
                                        #       Child Loop BB14_27 Depth 3
                                        #     Child Loop BB14_38 Depth 2
                                        #       Child Loop BB14_39 Depth 3
                                        #     Child Loop BB14_42 Depth 2
                                        #     Child Loop BB14_46 Depth 2
                                        #       Child Loop BB14_47 Depth 3
                                        #     Child Loop BB14_52 Depth 2
                                        #     Child Loop BB14_55 Depth 2
                                        #     Child Loop BB14_60 Depth 2
                                        #       Child Loop BB14_61 Depth 3
	movq	%r11, %r14
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	.loc	17 49 14 is_stmt 0      # z_solve.c:49:14
	movl	nz2(%rip), %edi
	.loc	17 49 17                # z_solve.c:49:17
	incl	%edi
	.loc	17 49 5                 # z_solve.c:49:5
	callq	lhsinitj
.Ltmp1039:
	.loc	17 165 5 is_stmt 1 discriminator 1 # z_solve.c:165:5
	movslq	nx2(%rip), %rsi
.Ltmp1040:
	#DEBUG_VALUE: z_solve:i <- 1
	.loc	17 193 24 discriminator 1 # z_solve.c:193:24
	testq	%rsi, %rsi
	jle	.LBB14_14
.Ltmp1041:
# BB#5:                                 # %for.cond4.preheader.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 65 7 discriminator 1 # z_solve.c:65:7
	movslq	nz2(%rip), %rax
.Ltmp1042:
	.loc	17 59 24 discriminator 1 # z_solve.c:59:24
	cmpq	$-2, %rax
.Ltmp1043:
	.loc	17 67 25                # z_solve.c:67:25
	movsd	dttz2(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	17 67 43 is_stmt 0      # z_solve.c:67:43
	movsd	dttz1(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	17 68 31 is_stmt 1      # z_solve.c:68:31
	movsd	c2dttz1(%rip), %xmm8    # xmm8 = mem[0],zero
.Ltmp1044:
	.loc	17 166 17               # z_solve.c:166:17
	movsd	.LCPI14_1(%rip), %xmm14 # xmm14 = mem[0],zero
	movapd	.LCPI14_0(%rip), %xmm15 # xmm15 = [9223372036854775808,9223372036854775808]
	jg	.LBB14_6
.Ltmp1045:
# BB#7:                                 # %for.cond63.preheader.us.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 67 51                # z_solve.c:67:51
	movsd	rhos(%rip), %xmm1       # xmm1 = mem[0],zero
	.loc	17 68 41                # z_solve.c:68:41
	movsd	rhos+8(%rip), %xmm3     # xmm3 = mem[0],zero
	movl	$lhs+2672, %ecx
	movl	$1, %edx
	.p2align	4, 0x90
.LBB14_10:                              # %for.cond63.preheader.us
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_8 Depth 3
	testl	%eax, %eax
	movq	%rcx, %rdi
	movl	$0, %ebp
	movapd	%xmm3, %xmm4
	.loc	17 67 51                # z_solve.c:67:51
	movapd	%xmm1, %xmm5
	jle	.LBB14_9
	.p2align	4, 0x90
.LBB14_8:                               # %for.body65.us
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_10 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	17 66 22                # z_solve.c:66:22
	movq	$0, -32(%rdi)
	movsd	cv(,%rbp,8), %xmm6      # xmm6 = mem[0],zero
	.loc	17 67 31                # z_solve.c:67:31
	mulsd	%xmm0, %xmm6
	xorpd	%xmm15, %xmm6
	.loc	17 67 49 is_stmt 0      # z_solve.c:67:49
	mulsd	%xmm2, %xmm5
	.loc	17 67 41                # z_solve.c:67:41
	subsd	%xmm5, %xmm6
	.loc	17 67 22                # z_solve.c:67:22
	movsd	%xmm6, -24(%rdi)
	.loc	17 68 39 is_stmt 1      # z_solve.c:68:39
	movapd	%xmm8, %xmm5
	mulsd	%xmm4, %xmm5
	.loc	17 68 29 is_stmt 0      # z_solve.c:68:29
	addsd	%xmm14, %xmm5
	.loc	17 68 22                # z_solve.c:68:22
	movsd	%xmm5, -16(%rdi)
	movsd	cv+16(,%rbp,8), %xmm6   # xmm6 = mem[0],zero
	.loc	17 69 31 is_stmt 1      # z_solve.c:69:31
	mulsd	%xmm0, %xmm6
	.loc	17 67 51                # z_solve.c:67:51
	movapd	%xmm4, %xmm5
	.loc	17 69 51                # z_solve.c:69:51
	movsd	rhos+16(,%rbp,8), %xmm4 # xmm4 = mem[0],zero
	.loc	17 69 49 is_stmt 0      # z_solve.c:69:49
	movapd	%xmm2, %xmm7
	mulsd	%xmm4, %xmm7
	.loc	17 69 41                # z_solve.c:69:41
	subsd	%xmm7, %xmm6
	.loc	17 69 22                # z_solve.c:69:22
	movsd	%xmm6, -8(%rdi)
	.loc	17 70 22 is_stmt 1      # z_solve.c:70:22
	movq	$0, (%rdi)
.Ltmp1046:
	.loc	17 65 21 discriminator 1 # z_solve.c:65:21
	incq	%rbp
	addq	$2600, %rdi             # imm = 0xA28
	cmpq	%rax, %rbp
	.loc	17 65 7 is_stmt 0 discriminator 1 # z_solve.c:65:7
	jl	.LBB14_8
.Ltmp1047:
.LBB14_9:                               # %for.inc116.us
                                        #   in Loop: Header=BB14_10 Depth=2
	.loc	17 58 5 is_stmt 1 discriminator 1 # z_solve.c:58:5
	addq	$40, %rcx
	cmpq	%rsi, %rdx
	leaq	1(%rdx), %rdx
	jl	.LBB14_10
	jmp	.LBB14_11
	.p2align	4, 0x90
.LBB14_6:                               #   in Loop: Header=BB14_4 Depth=1
.Ltmp1048:
	.loc	17 60 15                # z_solve.c:60:15
	movsd	c3c4(%rip), %xmm9       # xmm9 = mem[0],zero
	.loc	17 62 19                # z_solve.c:62:19
	movsd	dz4(%rip), %xmm10       # xmm10 = mem[0],zero
	movsd	con43(%rip), %xmm11     # xmm11 = mem[0],zero
	movsd	dz5(%rip), %xmm12       # xmm12 = mem[0],zero
	movsd	c1c5(%rip), %xmm13      # xmm13 = mem[0],zero
	.loc	17 62 19 is_stmt 0 discriminator 3 # z_solve.c:62:19
	movsd	dzmax(%rip), %xmm7      # xmm7 = mem[0],zero
	movsd	dz1(%rip), %xmm3        # xmm3 = mem[0],zero
	movl	$lhs+2672, %r8d
	movq	%r13, %rdi
	movl	$1, %r9d
	.p2align	4, 0x90
.LBB14_35:                              # %for.body7.lr.ph
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_36 Depth 3
                                        #       Child Loop BB14_33 Depth 3
	movq	$-1, %rcx
	movq	%rdi, %rdx
	.p2align	4, 0x90
.LBB14_36:                              # %for.body7
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_35 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	rho_i+528(%rdx), %xmm6  # xmm6 = mem[0],zero
	.loc	17 60 19 is_stmt 1      # z_solve.c:60:19
	mulsd	%xmm9, %xmm6
.Ltmp1049:
	#DEBUG_VALUE: z_solve:ru1 <- %XMM6
	.loc	17 61 17                # z_solve.c:61:17
	movq	ws+528(%rdx), %rbp
	.loc	17 61 15 is_stmt 0      # z_solve.c:61:15
	movq	%rbp, cv+8(,%rcx,8)
	.loc	17 62 19 is_stmt 1      # z_solve.c:62:19
	movapd	%xmm6, %xmm5
	mulsd	%xmm11, %xmm5
	addsd	%xmm10, %xmm5
	movapd	%xmm6, %xmm4
	mulsd	%xmm13, %xmm4
	addsd	%xmm12, %xmm4
	.loc	17 62 19 is_stmt 0 discriminator 1 # z_solve.c:62:19
	maxsd	%xmm4, %xmm5
	.loc	17 62 19 discriminator 3 # z_solve.c:62:19
	addsd	%xmm7, %xmm6
.Ltmp1050:
	maxsd	%xmm3, %xmm6
	.loc	17 62 19 discriminator 6 # z_solve.c:62:19
	maxsd	%xmm6, %xmm5
	.loc	17 62 17 discriminator 15 # z_solve.c:62:17
	movsd	%xmm5, rhos+8(,%rcx,8)
.Ltmp1051:
	.loc	17 59 21 is_stmt 1 discriminator 1 # z_solve.c:59:21
	incq	%rcx
	addq	$33800, %rdx            # imm = 0x8408
	cmpq	%rax, %rcx
	jle	.LBB14_36
.Ltmp1052:
# BB#31:                                # %for.cond63.preheader
                                        #   in Loop: Header=BB14_35 Depth=2
	testl	%eax, %eax
	jle	.LBB14_34
# BB#32:                                # %for.body65.lr.ph
                                        #   in Loop: Header=BB14_35 Depth=2
.Ltmp1053:
	.loc	17 67 51                # z_solve.c:67:51
	movsd	rhos(%rip), %xmm4       # xmm4 = mem[0],zero
	.loc	17 68 41                # z_solve.c:68:41
	movsd	rhos+8(%rip), %xmm5     # xmm5 = mem[0],zero
	movq	%r8, %rcx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB14_33:                              # %for.body65
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_35 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	17 66 22                # z_solve.c:66:22
	movq	$0, -32(%rcx)
	movsd	cv(,%rbp,8), %xmm6      # xmm6 = mem[0],zero
	.loc	17 67 31                # z_solve.c:67:31
	mulsd	%xmm0, %xmm6
	xorpd	%xmm15, %xmm6
	.loc	17 67 49 is_stmt 0      # z_solve.c:67:49
	mulsd	%xmm2, %xmm4
	.loc	17 67 41                # z_solve.c:67:41
	subsd	%xmm4, %xmm6
	.loc	17 67 22                # z_solve.c:67:22
	movsd	%xmm6, -24(%rcx)
	.loc	17 68 39 is_stmt 1      # z_solve.c:68:39
	movapd	%xmm8, %xmm4
	mulsd	%xmm5, %xmm4
	.loc	17 68 29 is_stmt 0      # z_solve.c:68:29
	addsd	%xmm14, %xmm4
	.loc	17 68 22                # z_solve.c:68:22
	movsd	%xmm4, -16(%rcx)
	movsd	cv+16(,%rbp,8), %xmm6   # xmm6 = mem[0],zero
	.loc	17 69 31 is_stmt 1      # z_solve.c:69:31
	mulsd	%xmm0, %xmm6
	.loc	17 67 51                # z_solve.c:67:51
	movapd	%xmm5, %xmm4
	.loc	17 69 51                # z_solve.c:69:51
	movsd	rhos+16(,%rbp,8), %xmm5 # xmm5 = mem[0],zero
	.loc	17 69 49 is_stmt 0      # z_solve.c:69:49
	movapd	%xmm2, %xmm1
	mulsd	%xmm5, %xmm1
	.loc	17 69 41                # z_solve.c:69:41
	subsd	%xmm1, %xmm6
	.loc	17 69 22                # z_solve.c:69:22
	movsd	%xmm6, -8(%rcx)
	.loc	17 70 22 is_stmt 1      # z_solve.c:70:22
	movq	$0, (%rcx)
.Ltmp1054:
	.loc	17 65 21 discriminator 1 # z_solve.c:65:21
	incq	%rbp
	addq	$2600, %rcx             # imm = 0xA28
	cmpq	%rax, %rbp
	.loc	17 65 7 is_stmt 0 discriminator 1 # z_solve.c:65:7
	jl	.LBB14_33
.Ltmp1055:
.LBB14_34:                              # %for.inc116
                                        #   in Loop: Header=BB14_35 Depth=2
	.loc	17 58 5 is_stmt 1 discriminator 1 # z_solve.c:58:5
	addq	$8, %rdi
	addq	$40, %r8
	.loc	17 58 19 is_stmt 0 discriminator 1 # z_solve.c:58:19
	cmpq	%rsi, %r9
	.loc	17 58 5 discriminator 1 # z_solve.c:58:5
	leaq	1(%r9), %r9
	jl	.LBB14_35
.Ltmp1056:
.LBB14_11:                              # %for.cond119.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	testl	%esi, %esi
	jle	.LBB14_14
# BB#12:                                # %for.body121.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
.Ltmp1057:
	.loc	17 79 37 is_stmt 1      # z_solve.c:79:37
	movsd	comz5(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	17 80 37                # z_solve.c:80:37
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	17 81 37                # z_solve.c:81:37
	movsd	comz1(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	17 85 37                # z_solve.c:85:37
	movsd	comz6(%rip), %xmm3      # xmm3 = mem[0],zero
	movl	$lhs+5272, %eax
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB14_13:                              # %for.body121
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp1058:
	#DEBUG_VALUE: z_solve:k <- 1
	movsd	-2616(%rax), %xmm4      # xmm4 = mem[0],zero
	.loc	17 79 35                # z_solve.c:79:35
	addsd	%xmm0, %xmm4
	.loc	17 79 20 is_stmt 0      # z_solve.c:79:20
	movsd	%xmm4, -2616(%rax)
	.loc	17 80 22 is_stmt 1      # z_solve.c:80:22
	movsd	-2608(%rax), %xmm4      # xmm4 = mem[0],zero
	.loc	17 80 35 is_stmt 0      # z_solve.c:80:35
	subsd	%xmm1, %xmm4
	.loc	17 80 20                # z_solve.c:80:20
	movsd	%xmm4, -2608(%rax)
	movsd	-2600(%rax), %xmm4      # xmm4 = mem[0],zero
	.loc	17 81 35 is_stmt 1      # z_solve.c:81:35
	addsd	%xmm2, %xmm4
	.loc	17 81 20 is_stmt 0      # z_solve.c:81:20
	movsd	%xmm4, -2600(%rax)
.Ltmp1059:
	#DEBUG_VALUE: z_solve:k <- 2
	.loc	17 84 22 is_stmt 1      # z_solve.c:84:22
	movsd	-24(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	17 84 35 is_stmt 0      # z_solve.c:84:35
	subsd	%xmm1, %xmm4
	.loc	17 84 20                # z_solve.c:84:20
	movsd	%xmm4, -24(%rax)
	movsd	-16(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	17 85 35 is_stmt 1      # z_solve.c:85:35
	addsd	%xmm3, %xmm4
	.loc	17 85 20 is_stmt 0      # z_solve.c:85:20
	movsd	%xmm4, -16(%rax)
	.loc	17 86 22 is_stmt 1      # z_solve.c:86:22
	movsd	-8(%rax), %xmm4         # xmm4 = mem[0],zero
	.loc	17 86 35 is_stmt 0      # z_solve.c:86:35
	subsd	%xmm1, %xmm4
	.loc	17 86 20                # z_solve.c:86:20
	movsd	%xmm4, -8(%rax)
	movsd	(%rax), %xmm4           # xmm4 = mem[0],zero
	.loc	17 87 35 is_stmt 1      # z_solve.c:87:35
	addsd	%xmm2, %xmm4
	.loc	17 87 20 is_stmt 0      # z_solve.c:87:20
	movsd	%xmm4, (%rax)
.Ltmp1060:
	.loc	17 77 19 is_stmt 1 discriminator 1 # z_solve.c:77:19
	incq	%rcx
	addq	$40, %rax
	cmpq	%rsi, %rcx
	jl	.LBB14_13
.Ltmp1061:
.LBB14_14:                              # %for.cond202.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 108 22               # z_solve.c:108:22
	movslq	nz2(%rip), %r8
.Ltmp1062:
	.loc	17 90 25 discriminator 1 # z_solve.c:90:25
	leaq	-2(%r8), %rcx
	#DEBUG_VALUE: z_solve:i <- 1
	.loc	17 90 19 is_stmt 0 discriminator 1 # z_solve.c:90:19
	cmpl	$3, %ecx
.Ltmp1063:
	.loc	17 227 17 is_stmt 1     # z_solve.c:227:17
	movapd	.LCPI14_2(%rip), %xmm7  # xmm7 = [1.000000e+00,1.000000e+00]
	movapd	%xmm7, %xmm8
.Ltmp1064:
	.loc	17 166 17               # z_solve.c:166:17
	movsd	.LCPI14_1(%rip), %xmm7  # xmm7 = mem[0],zero
	movq	%r14, %r9
	jl	.LBB14_20
.Ltmp1065:
# BB#15:                                # %for.cond206.preheader.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
	testl	%esi, %esi
	jle	.LBB14_23
# BB#16:                                # %for.body208.lr.ph.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
.Ltmp1066:
	.loc	17 92 39                # z_solve.c:92:39
	movsd	comz1(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	17 93 39                # z_solve.c:93:39
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	17 94 39                # z_solve.c:94:39
	movsd	comz6(%rip), %xmm2      # xmm2 = mem[0],zero
	movl	$lhs+7872, %edx
	movl	$3, %edi
	.p2align	4, 0x90
.LBB14_17:                              # %for.body208.lr.ph
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_18 Depth 3
	movq	%rdx, %rax
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB14_18:                              # %for.body208
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_17 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	-32(%rax), %xmm3        # xmm3 = mem[0],zero
	.loc	17 92 37                # z_solve.c:92:37
	addsd	%xmm0, %xmm3
	.loc	17 92 22 is_stmt 0      # z_solve.c:92:22
	movsd	%xmm3, -32(%rax)
	.loc	17 93 24 is_stmt 1      # z_solve.c:93:24
	movsd	-24(%rax), %xmm3        # xmm3 = mem[0],zero
	.loc	17 93 37 is_stmt 0      # z_solve.c:93:37
	subsd	%xmm1, %xmm3
	.loc	17 93 22                # z_solve.c:93:22
	movsd	%xmm3, -24(%rax)
	movsd	-16(%rax), %xmm3        # xmm3 = mem[0],zero
	.loc	17 94 37 is_stmt 1      # z_solve.c:94:37
	addsd	%xmm2, %xmm3
	.loc	17 94 22 is_stmt 0      # z_solve.c:94:22
	movsd	%xmm3, -16(%rax)
	.loc	17 95 24 is_stmt 1      # z_solve.c:95:24
	movsd	-8(%rax), %xmm3         # xmm3 = mem[0],zero
	.loc	17 95 37 is_stmt 0      # z_solve.c:95:37
	subsd	%xmm1, %xmm3
	.loc	17 95 22                # z_solve.c:95:22
	movsd	%xmm3, -8(%rax)
	movsd	(%rax), %xmm3           # xmm3 = mem[0],zero
	.loc	17 96 37 is_stmt 1      # z_solve.c:96:37
	addsd	%xmm0, %xmm3
	.loc	17 96 22 is_stmt 0      # z_solve.c:96:22
	movsd	%xmm3, (%rax)
.Ltmp1067:
	.loc	17 91 21 is_stmt 1 discriminator 1 # z_solve.c:91:21
	incq	%rbp
	addq	$40, %rax
	cmpq	%rsi, %rbp
	.loc	17 91 7 is_stmt 0 discriminator 1 # z_solve.c:91:7
	jl	.LBB14_18
.Ltmp1068:
# BB#19:                                # %for.inc267
                                        #   in Loop: Header=BB14_17 Depth=2
	#DEBUG_VALUE: z_solve:i <- 1
	.loc	17 90 5 is_stmt 1 discriminator 1 # z_solve.c:90:5
	addq	$2600, %rdx             # imm = 0xA28
	.loc	17 90 19 is_stmt 0 discriminator 1 # z_solve.c:90:19
	cmpq	%rcx, %rdi
	.loc	17 90 5 discriminator 1 # z_solve.c:90:5
	leaq	1(%rdi), %rdi
	jl	.LBB14_17
.Ltmp1069:
.LBB14_20:                              # %for.cond270.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	testl	%esi, %esi
	jle	.LBB14_23
# BB#21:                                # %for.body272.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
.Ltmp1070:
	.loc	17 101 14 is_stmt 1     # z_solve.c:101:14
	imulq	$2600, %r8, %rax        # imm = 0xA28
	.loc	17 102 37               # z_solve.c:102:37
	movsd	comz1(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	17 103 37               # z_solve.c:103:37
	movsd	comz4(%rip), %xmm1      # xmm1 = mem[0],zero
	.loc	17 104 37               # z_solve.c:104:37
	movsd	comz6(%rip), %xmm2      # xmm2 = mem[0],zero
	.loc	17 110 37               # z_solve.c:110:37
	movsd	comz5(%rip), %xmm3      # xmm3 = mem[0],zero
.Ltmp1071:
	.loc	17 100 5 discriminator 1 # z_solve.c:100:5
	leaq	lhs-2536(%rax), %rcx
	leaq	lhs+56(%rax), %rdx
	xorl	%eax, %eax
	.p2align	4, 0x90
.LBB14_22:                              # %for.body272
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movsd	-24(%rcx), %xmm4        # xmm4 = mem[0],zero
.Ltmp1072:
	.loc	17 102 35               # z_solve.c:102:35
	addsd	%xmm0, %xmm4
	.loc	17 102 20 is_stmt 0     # z_solve.c:102:20
	movsd	%xmm4, -24(%rcx)
	.loc	17 103 22 is_stmt 1     # z_solve.c:103:22
	movsd	-16(%rcx), %xmm4        # xmm4 = mem[0],zero
	.loc	17 103 35 is_stmt 0     # z_solve.c:103:35
	subsd	%xmm1, %xmm4
	.loc	17 103 20               # z_solve.c:103:20
	movsd	%xmm4, -16(%rcx)
	movsd	-8(%rcx), %xmm4         # xmm4 = mem[0],zero
	.loc	17 104 35 is_stmt 1     # z_solve.c:104:35
	addsd	%xmm2, %xmm4
	.loc	17 104 20 is_stmt 0     # z_solve.c:104:20
	movsd	%xmm4, -8(%rcx)
	.loc	17 105 22 is_stmt 1     # z_solve.c:105:22
	movsd	(%rcx), %xmm4           # xmm4 = mem[0],zero
	.loc	17 105 35 is_stmt 0     # z_solve.c:105:35
	subsd	%xmm1, %xmm4
	.loc	17 105 20               # z_solve.c:105:20
	movsd	%xmm4, (%rcx)
	movsd	-16(%rdx), %xmm4        # xmm4 = mem[0],zero
	.loc	17 108 35 is_stmt 1     # z_solve.c:108:35
	addsd	%xmm0, %xmm4
	.loc	17 108 20 is_stmt 0     # z_solve.c:108:20
	movsd	%xmm4, -16(%rdx)
	.loc	17 109 22 is_stmt 1     # z_solve.c:109:22
	movsd	-8(%rdx), %xmm4         # xmm4 = mem[0],zero
	.loc	17 109 35 is_stmt 0     # z_solve.c:109:35
	subsd	%xmm1, %xmm4
	.loc	17 109 20               # z_solve.c:109:20
	movsd	%xmm4, -8(%rdx)
	movsd	(%rdx), %xmm4           # xmm4 = mem[0],zero
	.loc	17 110 35 is_stmt 1     # z_solve.c:110:35
	addsd	%xmm3, %xmm4
	.loc	17 110 20 is_stmt 0     # z_solve.c:110:20
	movsd	%xmm4, (%rdx)
.Ltmp1073:
	.loc	17 100 19 is_stmt 1 discriminator 1 # z_solve.c:100:19
	incq	%rax
	addq	$40, %rcx
	addq	$40, %rdx
	cmpq	%rsi, %rax
	jl	.LBB14_22
.Ltmp1074:
.LBB14_23:                              # %for.cond354.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	movq	%r13, %r14
	movq	%r15, 24(%rsp)          # 8-byte Spill
	movq	%r12, 16(%rsp)          # 8-byte Spill
	movq	%r9, %r12
.Ltmp1075:
	.loc	17 116 19 discriminator 1 # z_solve.c:116:19
	testl	%r8d, %r8d
	jle	.LBB14_29
# BB#24:                                # %for.cond357.preheader.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
	testl	%esi, %esi
	jle	.LBB14_29
# BB#25:                                # %for.body359.lr.ph.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
.Ltmp1076:
	.loc	17 119 40               # z_solve.c:119:40
	movsd	dttz2(%rip), %xmm0      # xmm0 = mem[0],zero
	movq	8(%rsp), %r11           # 8-byte Reload
	xorl	%edi, %edi
	movl	$1, %r10d
.Ltmp1077:
	.p2align	4, 0x90
.LBB14_26:                              # %for.body359.lr.ph
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_27 Depth 3
	.loc	17 116 5 discriminator 1 # z_solve.c:116:5
	leaq	1(%r10), %r9
	movl	%esi, %eax
	movq	%r11, %rcx
	movq	%rdi, %rdx
	.p2align	4, 0x90
.LBB14_27:                              # %for.body359
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_26 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp1078:
	.loc	17 118 25               # z_solve.c:118:25
	movq	lhs+2640(%rdx), %rbp
	.loc	17 118 23 is_stmt 0     # z_solve.c:118:23
	movq	%rbp, lhsp+2640(%rdx)
	.loc	17 119 25 is_stmt 1     # z_solve.c:119:25
	movsd	lhs+2648(%rdx), %xmm1   # xmm1 = mem[0],zero
	movsd	-67600(%rcx), %xmm2     # xmm2 = mem[0],zero
	.loc	17 119 46 is_stmt 0     # z_solve.c:119:46
	mulsd	%xmm0, %xmm2
	.loc	17 119 38               # z_solve.c:119:38
	movapd	%xmm1, %xmm3
	subsd	%xmm2, %xmm3
	.loc	17 119 23               # z_solve.c:119:23
	movsd	%xmm3, lhsp+2648(%rdx)
	.loc	17 120 25 is_stmt 1     # z_solve.c:120:25
	movq	lhs+2656(%rdx), %r15
	.loc	17 120 23 is_stmt 0     # z_solve.c:120:23
	movq	%r15, lhsp+2656(%rdx)
	.loc	17 121 25 is_stmt 1     # z_solve.c:121:25
	movsd	lhs+2664(%rdx), %xmm3   # xmm3 = mem[0],zero
	movsd	(%rcx), %xmm4           # xmm4 = mem[0],zero
	.loc	17 121 46 is_stmt 0     # z_solve.c:121:46
	mulsd	%xmm0, %xmm4
	.loc	17 121 38               # z_solve.c:121:38
	movapd	%xmm3, %xmm5
	addsd	%xmm4, %xmm5
	.loc	17 121 23               # z_solve.c:121:23
	movsd	%xmm5, lhsp+2664(%rdx)
	.loc	17 122 25 is_stmt 1     # z_solve.c:122:25
	movq	lhs+2672(%rdx), %r13
	.loc	17 122 23 is_stmt 0     # z_solve.c:122:23
	movq	%r13, lhsp+2672(%rdx)
	.loc	17 123 23 is_stmt 1     # z_solve.c:123:23
	movq	%rbp, lhsm+2640(%rdx)
	.loc	17 124 38               # z_solve.c:124:38
	addsd	%xmm1, %xmm2
	.loc	17 124 23 is_stmt 0     # z_solve.c:124:23
	movsd	%xmm2, lhsm+2648(%rdx)
	.loc	17 125 23 is_stmt 1     # z_solve.c:125:23
	movq	%r15, lhsm+2656(%rdx)
	.loc	17 126 38               # z_solve.c:126:38
	subsd	%xmm4, %xmm3
	.loc	17 126 23 is_stmt 0     # z_solve.c:126:23
	movsd	%xmm3, lhsm+2664(%rdx)
	.loc	17 127 23 is_stmt 1     # z_solve.c:127:23
	movq	%r13, lhsm+2672(%rdx)
.Ltmp1079:
	.loc	17 117 7 discriminator 1 # z_solve.c:117:7
	addq	$40, %rdx
	addq	$8, %rcx
	decl	%eax
	jne	.LBB14_27
.Ltmp1080:
# BB#28:                                # %for.inc499
                                        #   in Loop: Header=BB14_26 Depth=2
	.loc	17 116 5 discriminator 1 # z_solve.c:116:5
	addq	$2600, %rdi             # imm = 0xA28
	addq	$33800, %r11            # imm = 0x8408
	.loc	17 116 19 is_stmt 0 discriminator 1 # z_solve.c:116:19
	cmpq	%r8, %r10
	movq	%r9, %r10
	jl	.LBB14_26
.Ltmp1081:
.LBB14_29:                              # %for.cond502.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 190 5 is_stmt 1 discriminator 1 # z_solve.c:190:5
	movslq	grid_points+8(%rip), %r8
	.loc	17 190 22 is_stmt 0 discriminator 1 # z_solve.c:190:22
	cmpq	$3, %r8
	movq	%r12, %r11
	movq	%r14, %r13
	jl	.LBB14_40
.Ltmp1082:
# BB#30:                                # %for.body505.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 135 36 is_stmt 1 discriminator 1 # z_solve.c:135:36
	leaq	-3(%r8), %r9
	movq	%r11, %r10
	movl	$lhs+5248, %ecx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB14_38:                              # %for.body505
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_39 Depth 3
	testl	%esi, %esi
	#DEBUG_VALUE: z_solve:i <- 1
	movq	%r10, %rax
	movq	%rcx, %rdi
	movl	$0, %edx
	jle	.LBB14_37
	.p2align	4, 0x90
.LBB14_39:                              # %for.body510
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_38 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp1083:
	.loc	17 139 19               # z_solve.c:139:19
	movapd	%xmm7, %xmm0
	divsd	-5192(%rdi), %xmm0
.Ltmp1084:
	#DEBUG_VALUE: z_solve:fac1 <- %XMM0
	.loc	17 140 29               # z_solve.c:140:29
	movupd	-5184(%rdi), %xmm1
	.loc	17 140 28 is_stmt 0     # z_solve.c:140:28
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm3, %xmm1
	.loc	17 140 22               # z_solve.c:140:22
	movupd	%xmm1, -5184(%rdi)
.Ltmp1085:
	#DEBUG_VALUE: z_solve:m <- 0
	.loc	17 143 34 is_stmt 1     # z_solve.c:143:34
	movupd	-338016(%rax), %xmm2
	.loc	17 143 33 is_stmt 0     # z_solve.c:143:33
	mulpd	%xmm3, %xmm2
	.loc	17 143 27               # z_solve.c:143:27
	movupd	%xmm2, -338016(%rax)
	.loc	17 143 33               # z_solve.c:143:33
	mulsd	-338000(%rax), %xmm0
.Ltmp1086:
	.loc	17 143 27               # z_solve.c:143:27
	movsd	%xmm0, -338000(%rax)
.Ltmp1087:
	.loc	17 145 41 is_stmt 1     # z_solve.c:145:41
	movsd	-2600(%rdi), %xmm3      # xmm3 = mem[0],zero
	.loc	17 145 25 is_stmt 0     # z_solve.c:145:25
	movupd	-2592(%rdi), %xmm4
	.loc	17 145 54               # z_solve.c:145:54
	movapd	%xmm3, %xmm5
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movaps	%xmm5, %xmm6
	mulpd	%xmm1, %xmm6
	.loc	17 145 39               # z_solve.c:145:39
	subpd	%xmm6, %xmm4
	.loc	17 145 23               # z_solve.c:145:23
	movupd	%xmm4, -2592(%rdi)
.Ltmp1088:
	.loc	17 148 30 is_stmt 1     # z_solve.c:148:30
	movupd	-169016(%rax), %xmm4
	.loc	17 148 62 is_stmt 0     # z_solve.c:148:62
	mulpd	%xmm2, %xmm5
	.loc	17 148 47               # z_solve.c:148:47
	subpd	%xmm5, %xmm4
	.loc	17 148 28               # z_solve.c:148:28
	movupd	%xmm4, -169016(%rax)
	.loc	17 148 30               # z_solve.c:148:30
	movsd	-169000(%rax), %xmm4    # xmm4 = mem[0],zero
	.loc	17 148 62               # z_solve.c:148:62
	mulsd	%xmm0, %xmm3
	.loc	17 148 47               # z_solve.c:148:47
	subsd	%xmm3, %xmm4
	.loc	17 148 28               # z_solve.c:148:28
	movsd	%xmm4, -169000(%rax)
.Ltmp1089:
	.loc	17 150 41 is_stmt 1     # z_solve.c:150:41
	movsd	-8(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	17 150 25 is_stmt 0     # z_solve.c:150:25
	movupd	(%rdi), %xmm4
.Ltmp1090:
	.loc	17 153 62 is_stmt 1     # z_solve.c:153:62
	mulsd	%xmm3, %xmm0
.Ltmp1091:
	.loc	17 150 54               # z_solve.c:150:54
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm3, %xmm1
	.loc	17 150 39 is_stmt 0     # z_solve.c:150:39
	subpd	%xmm1, %xmm4
	.loc	17 150 23               # z_solve.c:150:23
	movupd	%xmm4, (%rdi)
.Ltmp1092:
	.loc	17 153 30 is_stmt 1     # z_solve.c:153:30
	movupd	-16(%rax), %xmm1
	.loc	17 153 62 is_stmt 0     # z_solve.c:153:62
	mulpd	%xmm2, %xmm3
	.loc	17 153 47               # z_solve.c:153:47
	subpd	%xmm3, %xmm1
	.loc	17 153 28               # z_solve.c:153:28
	movupd	%xmm1, -16(%rax)
	.loc	17 153 30               # z_solve.c:153:30
	movsd	(%rax), %xmm1           # xmm1 = mem[0],zero
	.loc	17 153 47               # z_solve.c:153:47
	subsd	%xmm0, %xmm1
	.loc	17 153 28               # z_solve.c:153:28
	movsd	%xmm1, (%rax)
.Ltmp1093:
	.loc	17 138 21 is_stmt 1 discriminator 1 # z_solve.c:138:21
	incq	%rdx
	addq	$40, %rdi
	addq	$40, %rax
	cmpq	%rsi, %rdx
	jl	.LBB14_39
.Ltmp1094:
.LBB14_37:                              # %for.cond502.loopexit
                                        #   in Loop: Header=BB14_38 Depth=2
	.loc	17 135 5 discriminator 1 # z_solve.c:135:5
	addq	$2600, %rcx             # imm = 0xA28
	addq	$169000, %r10           # imm = 0x29428
	cmpq	%r9, %rbp
	leaq	1(%rbp), %rbp
	jl	.LBB14_38
.Ltmp1095:
.LBB14_40:                              # %for.end728
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: z_solve:i <- 1
	testl	%esi, %esi
	movq	16(%rsp), %r12          # 8-byte Reload
	jle	.LBB14_43
# BB#41:                                # %for.body733.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 164 24               # z_solve.c:164:24
	leaq	-1(%r8), %rax
.Ltmp1096:
	#DEBUG_VALUE: z_solve:k1 <- %RAX
	.loc	17 163 24               # z_solve.c:163:24
	leaq	-2(%r8), %rdi
.Ltmp1097:
	#DEBUG_VALUE: z_solve:k <- %RDI
	.loc	17 165 5 discriminator 1 # z_solve.c:165:5
	imulq	$325, %rdi, %r9         # imm = 0x145
	imulq	$325, %rax, %rcx        # imm = 0x145
	imulq	$169000, %rax, %rdx     # imm = 0x29428
	addq	%rbx, %rdx
	imulq	$169000, %rdi, %rdi     # imm = 0x29428
.Ltmp1098:
	addq	%rbx, %rdi
	xorl	%ebp, %ebp
	xorl	%eax, %eax
.Ltmp1099:
	.p2align	4, 0x90
.LBB14_42:                              # %for.body733
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	17 166 17               # z_solve.c:166:17
	movapd	%xmm7, %xmm0
	divsd	lhs+56(%rbp,%r9,8), %xmm0
.Ltmp1100:
	#DEBUG_VALUE: z_solve:fac1 <- %XMM0
	.loc	17 167 27               # z_solve.c:167:27
	movupd	lhs+64(%rbp,%r9,8), %xmm1
	.loc	17 167 26 is_stmt 0     # z_solve.c:167:26
	movapd	%xmm0, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm1
	.loc	17 167 20               # z_solve.c:167:20
	movupd	%xmm1, lhs+64(%rbp,%r9,8)
	#DEBUG_VALUE: z_solve:m <- 0
.Ltmp1101:
	.loc	17 170 32 is_stmt 1     # z_solve.c:170:32
	movupd	rhs+2640(%rdi,%rbp), %xmm3
	.loc	17 170 31 is_stmt 0     # z_solve.c:170:31
	mulpd	%xmm2, %xmm3
	.loc	17 170 25               # z_solve.c:170:25
	movupd	%xmm3, rhs+2640(%rdi,%rbp)
	.loc	17 170 31               # z_solve.c:170:31
	mulsd	rhs+2656(%rdi,%rbp), %xmm0
.Ltmp1102:
	.loc	17 170 25               # z_solve.c:170:25
	movsd	%xmm0, rhs+2656(%rdi,%rbp)
.Ltmp1103:
	.loc	17 172 39 is_stmt 1     # z_solve.c:172:39
	movsd	lhs+48(%rbp,%rcx,8), %xmm2 # xmm2 = mem[0],zero
	.loc	17 172 23 is_stmt 0     # z_solve.c:172:23
	movupd	lhs+56(%rbp,%rcx,8), %xmm4
.Ltmp1104:
	.loc	17 175 60 is_stmt 1     # z_solve.c:175:60
	mulsd	%xmm2, %xmm0
.Ltmp1105:
	.loc	17 172 52               # z_solve.c:172:52
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm2, %xmm1
	.loc	17 172 37 is_stmt 0     # z_solve.c:172:37
	subpd	%xmm1, %xmm4
	.loc	17 172 21               # z_solve.c:172:21
	movupd	%xmm4, lhs+56(%rbp,%rcx,8)
.Ltmp1106:
	.loc	17 175 28 is_stmt 1     # z_solve.c:175:28
	movupd	rhs+2640(%rdx,%rbp), %xmm1
	.loc	17 175 60 is_stmt 0     # z_solve.c:175:60
	mulpd	%xmm3, %xmm2
	.loc	17 175 45               # z_solve.c:175:45
	subpd	%xmm2, %xmm1
	.loc	17 175 28               # z_solve.c:175:28
	movsd	rhs+2656(%rdx,%rbp), %xmm2 # xmm2 = mem[0],zero
	.loc	17 175 45               # z_solve.c:175:45
	subsd	%xmm0, %xmm2
.Ltmp1107:
	.loc	17 181 17 is_stmt 1     # z_solve.c:181:17
	movapd	%xmm7, %xmm0
	divsd	%xmm4, %xmm0
.Ltmp1108:
	#DEBUG_VALUE: z_solve:fac2 <- %XMM0
	.loc	17 183 32               # z_solve.c:183:32
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	17 183 26 is_stmt 0     # z_solve.c:183:26
	movupd	%xmm3, rhs+2640(%rdx,%rbp)
	.loc	17 183 32               # z_solve.c:183:32
	mulsd	%xmm2, %xmm0
.Ltmp1109:
	.loc	17 183 26               # z_solve.c:183:26
	movsd	%xmm0, rhs+2656(%rdx,%rbp)
.Ltmp1110:
	.loc	17 165 19 is_stmt 1 discriminator 1 # z_solve.c:165:19
	incq	%rax
	addq	$40, %rbp
	cmpq	%rsi, %rax
	jl	.LBB14_42
.Ltmp1111:
.LBB14_43:                              # %for.cond898.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	cmpl	$3, %r8d
	movq	24(%rsp), %r15          # 8-byte Reload
	jl	.LBB14_49
# BB#44:                                # %for.body901.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
.Ltmp1112:
	.loc	17 190 36 discriminator 1 # z_solve.c:190:36
	leaq	-3(%r8), %r9
	movq	%r12, %r10
	movl	$5248, %ecx             # imm = 0x1480
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB14_46:                              # %for.body901
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_47 Depth 3
	#DEBUG_VALUE: z_solve:i <- 1
	testl	%esi, %esi
	movl	%esi, %eax
	movq	%r10, %rdx
	movq	%rcx, %rdi
	jle	.LBB14_45
	.p2align	4, 0x90
.LBB14_47:                              # %for.body906
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_46 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp1113:
	#DEBUG_VALUE: z_solve:m <- 3
	.loc	17 196 33               # z_solve.c:196:33
	movupd	lhsp-5184(%rdi), %xmm1
	.loc	17 195 19               # z_solve.c:195:19
	movsd	lhsp-5192(%rdi), %xmm2  # xmm2 = mem[0],zero
	movhpd	lhsm-5192(%rdi), %xmm2  # xmm2 = xmm2[0],mem[0]
	movapd	%xmm8, %xmm0
	divpd	%xmm2, %xmm0
	.loc	17 196 32               # z_solve.c:196:32
	movapd	%xmm0, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm1, %xmm4
	.loc	17 196 26 is_stmt 0     # z_solve.c:196:26
	movupd	%xmm4, lhsp-5184(%rdi)
	.loc	17 199 28 is_stmt 1     # z_solve.c:199:28
	movupd	lhsp-2592(%rdi), %xmm1
	.loc	17 199 59 is_stmt 0     # z_solve.c:199:59
	movsd	lhsp-2600(%rdi), %xmm3  # xmm3 = mem[0],zero
	movapd	%xmm3, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm4, %xmm2
	.loc	17 199 43               # z_solve.c:199:43
	subpd	%xmm2, %xmm1
	.loc	17 199 26               # z_solve.c:199:26
	movupd	%xmm1, lhsp-2592(%rdi)
	.loc	17 198 33 is_stmt 1     # z_solve.c:198:33
	movupd	-338000(%rdx), %xmm1
	.loc	17 198 32 is_stmt 0     # z_solve.c:198:32
	mulpd	%xmm0, %xmm1
	.loc	17 202 28 is_stmt 1     # z_solve.c:202:28
	movupd	lhsp(%rdi), %xmm5
	.loc	17 202 59 is_stmt 0     # z_solve.c:202:59
	movsd	lhsp-8(%rdi), %xmm2     # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	mulpd	%xmm4, %xmm6
	.loc	17 202 43               # z_solve.c:202:43
	subpd	%xmm6, %xmm5
	.loc	17 202 26               # z_solve.c:202:26
	movupd	%xmm5, lhsp(%rdi)
.Ltmp1114:
	#DEBUG_VALUE: z_solve:m <- 4
	.loc	17 208 33 is_stmt 1     # z_solve.c:208:33
	movupd	lhsm-5184(%rdi), %xmm4
	.loc	17 208 32 is_stmt 0     # z_solve.c:208:32
	movhlps	%xmm0, %xmm0            # xmm0 = xmm0[1,1]
	mulpd	%xmm4, %xmm0
	.loc	17 208 26               # z_solve.c:208:26
	movupd	%xmm0, lhsm-5184(%rdi)
	.loc	17 198 26 is_stmt 1     # z_solve.c:198:26
	movupd	%xmm1, -338000(%rdx)
	.loc	17 211 28               # z_solve.c:211:28
	movupd	lhsm-2592(%rdi), %xmm4
	.loc	17 201 61               # z_solve.c:201:61
	movsd	lhsm-2600(%rdi), %xmm5  # xmm5 = mem[0],zero
	unpcklpd	%xmm5, %xmm3    # xmm3 = xmm3[0],xmm5[0]
	.loc	17 211 59               # z_solve.c:211:59
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	mulpd	%xmm0, %xmm5
	.loc	17 211 43 is_stmt 0     # z_solve.c:211:43
	subpd	%xmm5, %xmm4
	.loc	17 211 26               # z_solve.c:211:26
	movupd	%xmm4, lhsm-2592(%rdi)
	.loc	17 201 28 is_stmt 1     # z_solve.c:201:28
	movupd	-169000(%rdx), %xmm4
	.loc	17 201 61 is_stmt 0     # z_solve.c:201:61
	mulpd	%xmm1, %xmm3
	.loc	17 201 45               # z_solve.c:201:45
	subpd	%xmm3, %xmm4
	.loc	17 201 26               # z_solve.c:201:26
	movupd	%xmm4, -169000(%rdx)
	.loc	17 214 28 is_stmt 1     # z_solve.c:214:28
	movupd	lhsm(%rdi), %xmm3
	.loc	17 204 61               # z_solve.c:204:61
	movsd	lhsm-8(%rdi), %xmm4     # xmm4 = mem[0],zero
	unpcklpd	%xmm4, %xmm2    # xmm2 = xmm2[0],xmm4[0]
	.loc	17 214 59               # z_solve.c:214:59
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm0, %xmm4
	.loc	17 214 43 is_stmt 0     # z_solve.c:214:43
	subpd	%xmm4, %xmm3
	.loc	17 214 26               # z_solve.c:214:26
	movupd	%xmm3, lhsm(%rdi)
	.loc	17 204 28 is_stmt 1     # z_solve.c:204:28
	movupd	(%rdx), %xmm0
	.loc	17 204 61 is_stmt 0     # z_solve.c:204:61
	mulpd	%xmm1, %xmm2
	.loc	17 204 45               # z_solve.c:204:45
	subpd	%xmm2, %xmm0
	.loc	17 204 26               # z_solve.c:204:26
	movupd	%xmm0, (%rdx)
.Ltmp1115:
	.loc	17 193 7 is_stmt 1 discriminator 1 # z_solve.c:193:7
	addq	$40, %rdi
	addq	$40, %rdx
	decl	%eax
	jne	.LBB14_47
.Ltmp1116:
.LBB14_45:                              # %for.cond898.loopexit
                                        #   in Loop: Header=BB14_46 Depth=2
	.loc	17 190 5 discriminator 1 # z_solve.c:190:5
	addq	$2600, %rcx             # imm = 0xA28
	addq	$169000, %r10           # imm = 0x29428
	cmpq	%r9, %rbp
	leaq	1(%rbp), %rbp
	jl	.LBB14_46
.Ltmp1117:
# BB#48:                                # %for.end1302.loopexit
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 225 22 discriminator 1 # z_solve.c:225:22
	movl	nx2(%rip), %esi
.LBB14_49:                              # %for.end1302
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: z_solve:i <- 1
	.loc	17 225 5 is_stmt 0 discriminator 1 # z_solve.c:225:5
	testl	%esi, %esi
	jle	.LBB14_50
.Ltmp1118:
# BB#51:                                # %for.body1307.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
	movq	%r11, %r14
	.loc	17 224 24 is_stmt 1     # z_solve.c:224:24
	leal	-1(%r8), %eax
.Ltmp1119:
	#DEBUG_VALUE: z_solve:k1 <- %EAX
	.loc	17 223 24               # z_solve.c:223:24
	addl	$-2, %r8d
.Ltmp1120:
	#DEBUG_VALUE: z_solve:k <- %R8D
	.loc	17 227 18               # z_solve.c:227:18
	movslq	%r8d, %rdx
	.loc	17 231 26               # z_solve.c:231:26
	cltq
.Ltmp1121:
	.loc	17 225 5 discriminator 1 # z_solve.c:225:5
	movslq	%esi, %r8
.Ltmp1122:
	imulq	$2600, %rdx, %rcx       # imm = 0xA28
	imulq	$169000, %rdx, %r9      # imm = 0x29428
	addq	%r15, %r9
	imulq	$2600, %rax, %rdi       # imm = 0xA28
	imulq	$169000, %rax, %rbp     # imm = 0x29428
	addq	%r15, %rbp
	xorl	%eax, %eax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB14_52:                              # %for.body1307
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp1123:
	#DEBUG_VALUE: z_solve:m <- 3
	.loc	17 228 31               # z_solve.c:228:31
	movupd	lhsp+64(%rcx,%rax), %xmm0
	.loc	17 227 17               # z_solve.c:227:17
	movsd	lhsp+56(%rcx,%rax), %xmm2 # xmm2 = mem[0],zero
	movhpd	lhsm+56(%rcx,%rax), %xmm2 # xmm2 = xmm2[0],mem[0]
	movapd	%xmm8, %xmm1
	divpd	%xmm2, %xmm1
	.loc	17 228 30               # z_solve.c:228:30
	movapd	%xmm1, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm0, %xmm3
	.loc	17 228 24 is_stmt 0     # z_solve.c:228:24
	movupd	%xmm3, lhsp+64(%rcx,%rax)
	.loc	17 231 26 is_stmt 1     # z_solve.c:231:26
	movupd	lhsp+56(%rdi,%rax), %xmm0
	.loc	17 231 57 is_stmt 0     # z_solve.c:231:57
	movsd	lhsp+48(%rdi,%rax), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm3, %xmm4
	.loc	17 231 41               # z_solve.c:231:41
	subpd	%xmm4, %xmm0
	.loc	17 231 24               # z_solve.c:231:24
	movupd	%xmm0, lhsp+56(%rdi,%rax)
	.loc	17 230 31 is_stmt 1     # z_solve.c:230:31
	movupd	(%r9,%rax), %xmm3
	.loc	17 230 30 is_stmt 0     # z_solve.c:230:30
	mulpd	%xmm1, %xmm3
.Ltmp1124:
	#DEBUG_VALUE: z_solve:m <- 4
	.loc	17 237 31 is_stmt 1     # z_solve.c:237:31
	movupd	lhsm+64(%rcx,%rax), %xmm4
	.loc	17 237 30 is_stmt 0     # z_solve.c:237:30
	movhlps	%xmm1, %xmm1            # xmm1 = xmm1[1,1]
	mulpd	%xmm4, %xmm1
	.loc	17 237 24               # z_solve.c:237:24
	movupd	%xmm1, lhsm+64(%rcx,%rax)
	.loc	17 230 24 is_stmt 1     # z_solve.c:230:24
	movupd	%xmm3, (%r9,%rax)
	.loc	17 240 26               # z_solve.c:240:26
	movupd	lhsm+56(%rdi,%rax), %xmm4
	.loc	17 233 59               # z_solve.c:233:59
	movsd	lhsm+48(%rdi,%rax), %xmm5 # xmm5 = mem[0],zero
	unpcklpd	%xmm5, %xmm2    # xmm2 = xmm2[0],xmm5[0]
	.loc	17 240 57               # z_solve.c:240:57
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	mulpd	%xmm1, %xmm5
	.loc	17 240 41 is_stmt 0     # z_solve.c:240:41
	subpd	%xmm5, %xmm4
	.loc	17 240 24               # z_solve.c:240:24
	movupd	%xmm4, lhsm+56(%rdi,%rax)
	.loc	17 233 26 is_stmt 1     # z_solve.c:233:26
	movupd	(%rbp,%rax), %xmm1
	.loc	17 233 59 is_stmt 0     # z_solve.c:233:59
	mulpd	%xmm3, %xmm2
	.loc	17 233 43               # z_solve.c:233:43
	subpd	%xmm2, %xmm1
	.loc	17 248 42 is_stmt 1     # z_solve.c:248:42
	unpcklpd	%xmm4, %xmm0    # xmm0 = xmm0[0],xmm4[0]
	divpd	%xmm0, %xmm1
	.loc	17 248 24 is_stmt 0     # z_solve.c:248:24
	movupd	%xmm1, (%rbp,%rax)
.Ltmp1125:
	.loc	17 225 19 is_stmt 1 discriminator 1 # z_solve.c:225:19
	incq	%rdx
	addq	$40, %rax
	cmpq	%r8, %rdx
	.loc	17 225 5 is_stmt 0 discriminator 1 # z_solve.c:225:5
	jl	.LBB14_52
.Ltmp1126:
# BB#53:                                # %for.end1590
                                        #   in Loop: Header=BB14_4 Depth=1
	testl	%esi, %esi
.Ltmp1127:
	.loc	17 275 14 is_stmt 1     # z_solve.c:275:14
	movl	grid_points+8(%rip), %r9d
	#DEBUG_VALUE: z_solve:i <- 1
	jle	.LBB14_56
.Ltmp1128:
# BB#54:                                # %for.cond1596.preheader.lr.ph
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 260 58               # z_solve.c:260:58
	movslq	%r9d, %rcx
.Ltmp1129:
	.loc	17 257 24               # z_solve.c:257:24
	imulq	$169000, %rcx, %rdi     # imm = 0x29428
	.loc	17 256 24               # z_solve.c:256:24
	addq	$-2, %rcx
.Ltmp1130:
	#DEBUG_VALUE: z_solve:k <- %RCX
	.loc	17 258 5 discriminator 1 # z_solve.c:258:5
	imulq	$169000, %rcx, %rax     # imm = 0x29428
	leaq	rhs(%rax), %r10
	imulq	$2600, %rcx, %rdx       # imm = 0xA28
	leaq	rhs-169000(%rdi), %r11
	xorl	%ebp, %ebp
	xorl	%ecx, %ecx
.Ltmp1131:
	.p2align	4, 0x90
.LBB14_55:                              # %for.cond1596.preheader
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	17 260 27               # z_solve.c:260:27
	leaq	(%r10,%rbp), %rax
	movupd	2640(%rbx,%rax), %xmm0
	.loc	17 260 58 is_stmt 0     # z_solve.c:260:58
	leaq	(%r11,%rbp), %rdi
	movupd	2640(%rbx,%rdi), %xmm1
	.loc	17 260 57               # z_solve.c:260:57
	movsd	lhs+64(%rdx,%rbp), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	17 260 43               # z_solve.c:260:43
	subpd	%xmm3, %xmm0
	.loc	17 260 25               # z_solve.c:260:25
	movupd	%xmm0, 2640(%rbx,%rax)
	.loc	17 260 27               # z_solve.c:260:27
	movupd	2656(%rbx,%rax), %xmm0
	.loc	17 260 58               # z_solve.c:260:58
	movupd	2656(%rbx,%rdi), %xmm1
	.loc	17 260 57               # z_solve.c:260:57
	movhpd	lhsp+64(%rdx,%rbp), %xmm2 # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm1, %xmm2
	.loc	17 260 43               # z_solve.c:260:43
	subpd	%xmm2, %xmm0
	.loc	17 260 25               # z_solve.c:260:25
	movupd	%xmm0, 2656(%rbx,%rax)
.Ltmp1132:
	.loc	17 264 25 is_stmt 1     # z_solve.c:264:25
	movsd	2672(%rbx,%rax), %xmm0  # xmm0 = mem[0],zero
	.loc	17 264 43 is_stmt 0     # z_solve.c:264:43
	movsd	lhsm+64(%rdx,%rbp), %xmm1 # xmm1 = mem[0],zero
	.loc	17 264 56               # z_solve.c:264:56
	mulsd	2672(%rbx,%rdi), %xmm1
	.loc	17 264 41               # z_solve.c:264:41
	subsd	%xmm1, %xmm0
	.loc	17 264 23               # z_solve.c:264:23
	movsd	%xmm0, 2672(%rbx,%rax)
.Ltmp1133:
	.loc	17 258 19 is_stmt 1 discriminator 1 # z_solve.c:258:19
	incq	%rcx
	addq	$40, %rbp
	cmpq	%r8, %rcx
	jl	.LBB14_55
.Ltmp1134:
.LBB14_56:                              #   in Loop: Header=BB14_4 Depth=1
	movq	%r14, %r11
	jmp	.LBB14_57
	.p2align	4, 0x90
.LBB14_50:                              # %for.end1590.thread
                                        #   in Loop: Header=BB14_4 Depth=1
.Ltmp1135:
	.loc	17 275 14               # z_solve.c:275:14
	movl	grid_points+8(%rip), %r9d
	#DEBUG_VALUE: z_solve:i <- 1
.LBB14_57:                              # %for.end1691
                                        #   in Loop: Header=BB14_4 Depth=1
.Ltmp1136:
	.loc	17 275 5 is_stmt 0 discriminator 1 # z_solve.c:275:5
	cmpl	$3, %r9d
	jl	.LBB14_63
.Ltmp1137:
# BB#58:                                # %for.end1691
                                        #   in Loop: Header=BB14_4 Depth=1
	testl	%esi, %esi
	jle	.LBB14_63
# BB#59:                                # %for.body1695.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 275 28               # z_solve.c:275:28
	addl	$-3, %r9d
.Ltmp1138:
	#DEBUG_VALUE: z_solve:k <- %R9D
	.loc	17 276 14 is_stmt 1     # z_solve.c:276:14
	movslq	%r9d, %r8
	imulq	$169000, %r8, %r9       # imm = 0x29428
.Ltmp1139:
	imulq	$2600, %r8, %rdx        # imm = 0xA28
	movl	$64, %eax
	.p2align	4, 0x90
.LBB14_60:                              # %for.body1695
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_61 Depth 3
	#DEBUG_VALUE: z_solve:i <- 1
	movl	%esi, %ebp
	movq	%rax, %rdi
	movq	%r9, %rcx
	.p2align	4, 0x90
.LBB14_61:                              # %for.cond1701.preheader
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_60 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp1140:
	.loc	17 280 29               # z_solve.c:280:29
	movupd	rhs+2640(%rcx,%rbx), %xmm0
	.loc	17 281 42               # z_solve.c:281:42
	movupd	rhs+171640(%rcx,%rbx), %xmm1
	.loc	17 281 41 is_stmt 0     # z_solve.c:281:41
	movsd	lhs(%rdx,%rdi), %xmm2   # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	.loc	17 280 45 is_stmt 1     # z_solve.c:280:45
	subpd	%xmm3, %xmm0
	.loc	17 282 42               # z_solve.c:282:42
	movupd	rhs+340640(%rcx,%rbx), %xmm1
	.loc	17 282 41 is_stmt 0     # z_solve.c:282:41
	movsd	lhs+8(%rdx,%rdi), %xmm3 # xmm3 = mem[0],zero
	movapd	%xmm3, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm1, %xmm4
	.loc	17 281 59 is_stmt 1     # z_solve.c:281:59
	subpd	%xmm4, %xmm0
	.loc	17 280 27               # z_solve.c:280:27
	movupd	%xmm0, rhs+2640(%rcx,%rbx)
	.loc	17 280 29 is_stmt 0     # z_solve.c:280:29
	movupd	rhs+2656(%rcx,%rbx), %xmm0
	.loc	17 281 42 is_stmt 1     # z_solve.c:281:42
	movupd	rhs+171656(%rcx,%rbx), %xmm1
	.loc	17 281 41 is_stmt 0     # z_solve.c:281:41
	movhpd	lhsp(%rdx,%rdi), %xmm2  # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm1, %xmm2
	.loc	17 280 45 is_stmt 1     # z_solve.c:280:45
	subpd	%xmm2, %xmm0
	.loc	17 282 42               # z_solve.c:282:42
	movupd	rhs+340656(%rcx,%rbx), %xmm1
	.loc	17 282 41 is_stmt 0     # z_solve.c:282:41
	movhpd	lhsp+8(%rdx,%rdi), %xmm3 # xmm3 = xmm3[0],mem[0]
	mulpd	%xmm1, %xmm3
	.loc	17 281 59 is_stmt 1     # z_solve.c:281:59
	subpd	%xmm3, %xmm0
	.loc	17 280 27               # z_solve.c:280:27
	movupd	%xmm0, rhs+2656(%rcx,%rbx)
.Ltmp1141:
	.loc	17 291 27               # z_solve.c:291:27
	movsd	rhs+2672(%rcx,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	17 292 27               # z_solve.c:292:27
	movsd	lhsm(%rdx,%rdi), %xmm1  # xmm1 = mem[0],zero
	.loc	17 292 40 is_stmt 0     # z_solve.c:292:40
	mulsd	rhs+171672(%rcx,%rbx), %xmm1
	.loc	17 291 43 is_stmt 1     # z_solve.c:291:43
	subsd	%xmm1, %xmm0
	.loc	17 293 27               # z_solve.c:293:27
	movsd	lhsm+8(%rdx,%rdi), %xmm1 # xmm1 = mem[0],zero
	.loc	17 293 40 is_stmt 0     # z_solve.c:293:40
	mulsd	rhs+340672(%rcx,%rbx), %xmm1
	.loc	17 292 58 is_stmt 1     # z_solve.c:292:58
	subsd	%xmm1, %xmm0
	.loc	17 291 25               # z_solve.c:291:25
	movsd	%xmm0, rhs+2672(%rcx,%rbx)
.Ltmp1142:
	.loc	17 278 7 discriminator 1 # z_solve.c:278:7
	addq	$40, %rcx
	addq	$40, %rdi
	decl	%ebp
	jne	.LBB14_61
.Ltmp1143:
# BB#62:                                # %for.inc1840
                                        #   in Loop: Header=BB14_60 Depth=2
	.loc	17 275 5 discriminator 1 # z_solve.c:275:5
	addq	$-169000, %r9           # imm = 0xFFFFFFFFFFFD6BD8
	addq	$-2600, %rax            # imm = 0xFFFFFFFFFFFFF5D8
	.loc	17 275 34 is_stmt 0 discriminator 1 # z_solve.c:275:34
	testq	%r8, %r8
	.loc	17 275 5 discriminator 1 # z_solve.c:275:5
	leaq	-1(%r8), %r8
	jg	.LBB14_60
.Ltmp1144:
.LBB14_63:                              # %for.inc1842
                                        #   in Loop: Header=BB14_4 Depth=1
	.loc	17 48 17 is_stmt 1 discriminator 1 # z_solve.c:48:17
	movslq	ny2(%rip), %rax
	.loc	17 48 3 is_stmt 0 discriminator 1 # z_solve.c:48:3
	addq	$520, %r13              # imm = 0x208
	addq	$520, 8(%rsp)           # 8-byte Folded Spill
                                        # imm = 0x208
	addq	$2600, %r11             # imm = 0xA28
	addq	$2600, %rbx             # imm = 0xA28
	addq	$2600, %r12             # imm = 0xA28
	addq	$2600, %r15             # imm = 0xA28
	movq	32(%rsp), %rcx          # 8-byte Reload
	.loc	17 48 17 discriminator 1 # z_solve.c:48:17
	cmpq	%rax, %rcx
	.loc	17 48 3 discriminator 1 # z_solve.c:48:3
	leaq	1(%rcx), %rcx
	jl	.LBB14_4
.Ltmp1145:
.LBB14_64:                              # %for.end1844
	.loc	17 297 7 is_stmt 1      # z_solve.c:297:7
	cmpl	$0, timeron(%rip)
	je	.LBB14_66
# BB#65:                                # %if.then1846
	.loc	17 297 16 is_stmt 0 discriminator 1 # z_solve.c:297:16
	movl	$8, %edi
	callq	timer_stop
.Ltmp1146:
.LBB14_66:                              # %if.end1847
	.loc	17 299 3 is_stmt 1      # z_solve.c:299:3
	xorl	%eax, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	tzetar                  # TAILCALL
.Ltmp1147:
.Lfunc_end14:
	.size	z_solve, .Lfunc_end14-z_solve
	.cfi_endproc

	.globl	tzetar
	.p2align	4, 0x90
	.type	tzetar,@function
tzetar:                                 # @tzetar
.Lfunc_begin15:
	.file	18 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/tzetar.c"
	.loc	18 40 0                 # tzetar.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	18 45 7 prologue_end    # tzetar.c:45:7
	pushq	%rbp
.Ltmp1148:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1149:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1150:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1151:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1152:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1153:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp1154:
	.cfi_def_cfa_offset 96
.Ltmp1155:
	.cfi_offset %rbx, -56
.Ltmp1156:
	.cfi_offset %r12, -48
.Ltmp1157:
	.cfi_offset %r13, -40
.Ltmp1158:
	.cfi_offset %r14, -32
.Ltmp1159:
	.cfi_offset %r15, -24
.Ltmp1160:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB15_2
# BB#1:                                 # %if.then
	.loc	18 45 16 is_stmt 0 discriminator 1 # tzetar.c:45:16
	movl	$14, %edi
	callq	timer_start
.Ltmp1161:
.LBB15_2:                               # %for.cond.preheader
	.loc	18 46 3 is_stmt 1 discriminator 1 # tzetar.c:46:3
	movslq	nz2(%rip), %rax
	.loc	18 46 20 is_stmt 0 discriminator 1 # tzetar.c:46:20
	movq	%rax, 16(%rsp)          # 8-byte Spill
	testq	%rax, %rax
	jle	.LBB15_13
# BB#3:                                 # %for.cond1.preheader.lr.ph
.Ltmp1162:
	.loc	18 47 22 is_stmt 1 discriminator 1 # tzetar.c:47:22
	movl	ny2(%rip), %ecx
	.loc	18 47 19 is_stmt 0 discriminator 1 # tzetar.c:47:19
	testl	%ecx, %ecx
	setle	%al
.Ltmp1163:
	.loc	18 48 24 is_stmt 1 discriminator 1 # tzetar.c:48:24
	movl	nx2(%rip), %r13d
	.loc	18 48 21 is_stmt 0 discriminator 1 # tzetar.c:48:21
	testl	%r13d, %r13d
	setle	%dl
.Ltmp1164:
	.loc	18 63 17 is_stmt 1      # tzetar.c:63:17
	movsd	bt(%rip), %xmm10        # xmm10 = mem[0],zero
	.loc	18 74 45                # tzetar.c:74:45
	movsd	c2iv(%rip), %xmm11      # xmm11 = mem[0],zero
.Ltmp1165:
	.loc	18 46 3 discriminator 1 # tzetar.c:46:3
	incl	%ecx
	leal	-1(%r13), %edi
	incq	%rdi
.Ltmp1166:
	.loc	18 47 5 discriminator 1 # tzetar.c:47:5
	orb	%al, %dl
	movb	%dl, 15(%rsp)           # 1-byte Spill
.Ltmp1167:
	.loc	18 48 7 discriminator 1 # tzetar.c:48:7
	movabsq	$8589934590, %r8        # imm = 0x1FFFFFFFE
	andq	%rdi, %r8
	movq	%rdi, %rax
	orq	$1, %rax
	movq	%rax, 32(%rsp)          # 8-byte Spill
	movapd	%xmm10, %xmm8
	movlhps	%xmm8, %xmm8            # xmm8 = xmm8[0,0]
	movapd	%xmm11, %xmm9
	movlhps	%xmm9, %xmm9            # xmm9 = xmm9[0,0]
.Ltmp1168:
	.loc	18 49 16                # tzetar.c:49:16
	incl	%r13d
	movl	$1, %eax
	xorl	%r14d, %r14d
	movl	$34320, %r15d           # imm = 0x8610
	movl	$rhs+171600, %r12d
.Ltmp1169:
	.p2align	4, 0x90
.LBB15_4:                               # %for.cond1.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_5 Depth 2
                                        #       Child Loop BB15_7 Depth 3
                                        #       Child Loop BB15_10 Depth 3
	movq	%rax, 24(%rsp)          # 8-byte Spill
	.loc	18 47 5 discriminator 1 # tzetar.c:47:5
	cmpb	$0, 15(%rsp)            # 1-byte Folded Reload
	movq	%r12, %r11
	movq	%r15, %rax
	movq	%r14, %r9
	movl	$1, %ebp
	jne	.LBB15_12
	.p2align	4, 0x90
.LBB15_5:                               # %for.body6.lr.ph
                                        #   Parent Loop BB15_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB15_7 Depth 3
                                        #       Child Loop BB15_10 Depth 3
	cmpq	$2, %rdi
	movl	$1, %ebx
	jb	.LBB15_9
# BB#6:                                 # %min.iters.checked
                                        #   in Loop: Header=BB15_5 Depth=2
	testq	%r8, %r8
	movq	%r8, %rsi
	movq	%r9, %rdx
	movl	$1, %ebx
	je	.LBB15_9
	.p2align	4, 0x90
.LBB15_7:                               # %vector.body
                                        #   Parent Loop BB15_4 Depth=1
                                        #     Parent Loop BB15_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp1170:
	.loc	18 49 16                # tzetar.c:49:16
	movupd	us+34328(%rdx), %xmm14
	.loc	18 50 16                # tzetar.c:50:16
	movupd	vs+34328(%rdx), %xmm13
	.loc	18 51 16                # tzetar.c:51:16
	movupd	ws+34328(%rdx), %xmm12
	.loc	18 52 16                # tzetar.c:52:16
	movupd	speed+34328(%rdx), %xmm3
	.loc	18 56 14                # tzetar.c:56:14
	movsd	rhs+171640(%rdx,%rdx,4), %xmm5 # xmm5 = mem[0],zero
	movhpd	rhs+171680(%rdx,%rdx,4), %xmm5 # xmm5 = xmm5[0],mem[0]
	.loc	18 57 14                # tzetar.c:57:14
	movsd	rhs+171648(%rdx,%rdx,4), %xmm0 # xmm0 = mem[0],zero
	movhpd	rhs+171688(%rdx,%rdx,4), %xmm0 # xmm0 = xmm0[0],mem[0]
	.loc	18 59 14                # tzetar.c:59:14
	movsd	rhs+171664(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	movhpd	rhs+171704(%rdx,%rdx,4), %xmm2 # xmm2 = xmm2[0],mem[0]
	.loc	18 60 14                # tzetar.c:60:14
	movsd	rhs+171672(%rdx,%rdx,4), %xmm15 # xmm15 = mem[0],zero
	movhpd	rhs+171712(%rdx,%rdx,4), %xmm15 # xmm15 = xmm15[0],mem[0]
	.loc	18 62 17                # tzetar.c:62:17
	movsd	u+171640(%rdx,%rdx,4), %xmm4 # xmm4 = mem[0],zero
	movhpd	u+171680(%rdx,%rdx,4), %xmm4 # xmm4 = xmm4[0],mem[0]
	.loc	18 70 33                # tzetar.c:70:33
	movapd	%xmm0, %xmm6
	mulpd	%xmm4, %xmm6
	.loc	18 71 33                # tzetar.c:71:33
	movapd	%xmm5, %xmm7
	mulpd	%xmm4, %xmm7
	.loc	18 73 40                # tzetar.c:73:40
	mulpd	%xmm14, %xmm0
	.loc	18 73 50 is_stmt 0      # tzetar.c:73:50
	mulpd	%xmm13, %xmm5
	.loc	18 73 44                # tzetar.c:73:44
	subpd	%xmm0, %xmm5
	.loc	18 73 33                # tzetar.c:73:33
	mulpd	%xmm4, %xmm5
	.loc	18 63 20 is_stmt 1      # tzetar.c:63:20
	mulpd	%xmm8, %xmm4
	.loc	18 65 28                # tzetar.c:65:28
	movapd	%xmm2, %xmm0
	.loc	18 67 25                # tzetar.c:67:25
	subpd	%xmm15, %xmm2
	.loc	18 67 19 is_stmt 0      # tzetar.c:67:19
	mulpd	%xmm4, %xmm2
	.loc	18 65 18 is_stmt 1      # tzetar.c:65:18
	divpd	%xmm3, %xmm4
	.loc	18 54 18                # tzetar.c:54:18
	mulpd	%xmm3, %xmm3
	.loc	18 58 14                # tzetar.c:58:14
	movsd	rhs+171656(%rdx,%rdx,4), %xmm1 # xmm1 = mem[0],zero
	movhpd	rhs+171696(%rdx,%rdx,4), %xmm1 # xmm1 = xmm1[0],mem[0]
	.loc	18 65 28                # tzetar.c:65:28
	addpd	%xmm15, %xmm0
	.loc	18 65 22 is_stmt 0      # tzetar.c:65:22
	mulpd	%xmm4, %xmm0
	.loc	18 66 17 is_stmt 1      # tzetar.c:66:17
	addpd	%xmm0, %xmm1
	.loc	18 70 43                # tzetar.c:70:43
	mulpd	%xmm1, %xmm14
	.loc	18 70 37 is_stmt 0      # tzetar.c:70:37
	subpd	%xmm6, %xmm14
	.loc	18 69 25 is_stmt 1      # tzetar.c:69:25
	movapd	%xmm1, %xmm4
	unpcklpd	%xmm14, %xmm4   # xmm4 = xmm4[0],xmm14[0]
	movhpd	%xmm1, rhs+171680(%rdx,%rdx,4)
	movupd	%xmm4, rhs+171640(%rdx,%rdx,4)
	.loc	18 70 25                # tzetar.c:70:25
	movhpd	%xmm14, rhs+171688(%rdx,%rdx,4)
	.loc	18 71 43                # tzetar.c:71:43
	mulpd	%xmm1, %xmm13
	.loc	18 71 37 is_stmt 0      # tzetar.c:71:37
	addpd	%xmm7, %xmm13
	.loc	18 72 32 is_stmt 1      # tzetar.c:72:32
	movapd	%xmm12, %xmm4
	mulpd	%xmm1, %xmm4
	.loc	18 72 37 is_stmt 0      # tzetar.c:72:37
	addpd	%xmm2, %xmm4
	.loc	18 71 25 is_stmt 1      # tzetar.c:71:25
	movhpd	%xmm13, rhs+171696(%rdx,%rdx,4)
	unpcklpd	%xmm4, %xmm13   # xmm13 = xmm13[0],xmm4[0]
	movupd	%xmm13, rhs+171656(%rdx,%rdx,4)
	.loc	18 72 25                # tzetar.c:72:25
	movhpd	%xmm4, rhs+171704(%rdx,%rdx,4)
	.loc	18 74 28                # tzetar.c:74:28
	movupd	qs+34328(%rdx), %xmm4
	.loc	18 74 39 is_stmt 0      # tzetar.c:74:39
	mulpd	%xmm1, %xmm4
	.loc	18 73 55 is_stmt 1      # tzetar.c:73:55
	addpd	%xmm5, %xmm4
	.loc	18 74 49                # tzetar.c:74:49
	mulpd	%xmm9, %xmm3
	.loc	18 74 54 is_stmt 0      # tzetar.c:74:54
	mulpd	%xmm0, %xmm3
	.loc	18 74 43                # tzetar.c:74:43
	addpd	%xmm4, %xmm3
	.loc	18 74 64                # tzetar.c:74:64
	mulpd	%xmm12, %xmm2
	.loc	18 74 58                # tzetar.c:74:58
	addpd	%xmm3, %xmm2
	.loc	18 73 25 is_stmt 1      # tzetar.c:73:25
	movlpd	%xmm2, rhs+171672(%rdx,%rdx,4)
	movhpd	%xmm2, rhs+171712(%rdx,%rdx,4)
.Ltmp1171:
	.loc	18 48 7 discriminator 1 # tzetar.c:48:7
	addq	$16, %rdx
	addq	$-2, %rsi
	jne	.LBB15_7
# BB#8:                                 # %middle.block
                                        #   in Loop: Header=BB15_5 Depth=2
	cmpq	%r8, %rdi
	movq	32(%rsp), %rbx          # 8-byte Reload
	je	.LBB15_11
	.p2align	4, 0x90
.LBB15_9:                               # %for.body6.preheader
                                        #   in Loop: Header=BB15_5 Depth=2
.Ltmp1172:
	.loc	18 49 16                # tzetar.c:49:16
	leaq	(,%rbx,8), %rsi
	leaq	(%rax,%rbx,8), %rdx
	leaq	(%rsi,%rsi,4), %rsi
	movl	%r13d, %r10d
	subl	%ebx, %r10d
	movq	%r11, %rbx
	.p2align	4, 0x90
.LBB15_10:                              # %for.body6
                                        #   Parent Loop BB15_4 Depth=1
                                        #     Parent Loop BB15_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	us(%rdx), %xmm0         # xmm0 = mem[0],zero
.Ltmp1173:
	#DEBUG_VALUE: tzetar:xvel <- %XMM0
	.loc	18 50 16                # tzetar.c:50:16
	movsd	vs(%rdx), %xmm1         # xmm1 = mem[0],zero
.Ltmp1174:
	#DEBUG_VALUE: tzetar:yvel <- %XMM1
	.loc	18 51 16                # tzetar.c:51:16
	movsd	ws(%rdx), %xmm12        # xmm12 = mem[0],zero
.Ltmp1175:
	#DEBUG_VALUE: tzetar:zvel <- %XMM12
	.loc	18 52 16                # tzetar.c:52:16
	movsd	speed(%rdx), %xmm3      # xmm3 = mem[0],zero
.Ltmp1176:
	#DEBUG_VALUE: tzetar:ac2u <- %XMM3
	.loc	18 56 14                # tzetar.c:56:14
	movsd	(%rsi,%rbx), %xmm13     # xmm13 = mem[0],zero
.Ltmp1177:
	#DEBUG_VALUE: tzetar:r1 <- %XMM13
	.loc	18 57 14                # tzetar.c:57:14
	movsd	8(%rsi,%rbx), %xmm2     # xmm2 = mem[0],zero
.Ltmp1178:
	#DEBUG_VALUE: tzetar:r2 <- %XMM2
	.loc	18 59 14                # tzetar.c:59:14
	movsd	24(%rsi,%rbx), %xmm15   # xmm15 = mem[0],zero
.Ltmp1179:
	#DEBUG_VALUE: tzetar:r4 <- %XMM15
	.loc	18 60 14                # tzetar.c:60:14
	movsd	32(%rsi,%rbx), %xmm14   # xmm14 = mem[0],zero
.Ltmp1180:
	#DEBUG_VALUE: tzetar:r5 <- %XMM14
	.loc	18 62 17                # tzetar.c:62:17
	movsd	u(%rdx,%rdx,4), %xmm5   # xmm5 = mem[0],zero
.Ltmp1181:
	#DEBUG_VALUE: tzetar:uzik1 <- %XMM5
	.loc	18 70 43                # tzetar.c:70:43
	movapd	%xmm0, %xmm6
	.loc	18 73 40                # tzetar.c:73:40
	mulsd	%xmm2, %xmm0
.Ltmp1182:
	#DEBUG_VALUE: tzetar:xvel <- %XMM6
	.loc	18 70 33                # tzetar.c:70:33
	mulsd	%xmm5, %xmm2
.Ltmp1183:
	.loc	18 71 33                # tzetar.c:71:33
	movapd	%xmm5, %xmm7
	.loc	18 71 43 is_stmt 0      # tzetar.c:71:43
	movapd	%xmm1, %xmm4
	.loc	18 73 50 is_stmt 1      # tzetar.c:73:50
	mulsd	%xmm13, %xmm1
.Ltmp1184:
	#DEBUG_VALUE: tzetar:yvel <- %XMM4
	.loc	18 73 44 is_stmt 0      # tzetar.c:73:44
	subsd	%xmm0, %xmm1
	.loc	18 73 33                # tzetar.c:73:33
	mulsd	%xmm5, %xmm1
	.loc	18 63 20 is_stmt 1      # tzetar.c:63:20
	mulsd	%xmm10, %xmm5
.Ltmp1185:
	#DEBUG_VALUE: tzetar:btuz <- %XMM5
	.loc	18 71 33                # tzetar.c:71:33
	unpcklpd	%xmm5, %xmm7    # xmm7 = xmm7[0],xmm5[0]
	.loc	18 65 18                # tzetar.c:65:18
	divsd	%xmm3, %xmm5
.Ltmp1186:
	#DEBUG_VALUE: tzetar:ac <- %XMM3
	.loc	18 54 18                # tzetar.c:54:18
	mulsd	%xmm3, %xmm3
.Ltmp1187:
	.loc	18 65 28                # tzetar.c:65:28
	movapd	%xmm15, %xmm0
	addsd	%xmm14, %xmm0
	.loc	18 65 22 is_stmt 0      # tzetar.c:65:22
	mulsd	%xmm5, %xmm0
.Ltmp1188:
	#DEBUG_VALUE: tzetar:t1 <- %XMM0
	movsd	16(%rsi,%rbx), %xmm5    # xmm5 = mem[0],zero
	.loc	18 66 17 is_stmt 1      # tzetar.c:66:17
	addsd	%xmm0, %xmm5
.Ltmp1189:
	#DEBUG_VALUE: tzetar:t2 <- %XMM5
	.loc	18 67 25                # tzetar.c:67:25
	subsd	%xmm14, %xmm15
.Ltmp1190:
	.loc	18 69 25                # tzetar.c:69:25
	movsd	%xmm5, (%rsi,%rbx)
	.loc	18 70 43                # tzetar.c:70:43
	mulsd	%xmm5, %xmm6
.Ltmp1191:
	.loc	18 70 37 is_stmt 0      # tzetar.c:70:37
	subsd	%xmm2, %xmm6
	.loc	18 70 25                # tzetar.c:70:25
	movsd	%xmm6, 8(%rsi,%rbx)
	.loc	18 71 33 is_stmt 1      # tzetar.c:71:33
	unpcklpd	%xmm15, %xmm13  # xmm13 = xmm13[0],xmm15[0]
.Ltmp1192:
	mulpd	%xmm13, %xmm7
	.loc	18 71 43 is_stmt 0      # tzetar.c:71:43
	unpcklpd	%xmm12, %xmm4   # xmm4 = xmm4[0],xmm12[0]
.Ltmp1193:
	movapd	%xmm5, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm4, %xmm2
	.loc	18 71 37                # tzetar.c:71:37
	addpd	%xmm7, %xmm2
	.loc	18 71 25                # tzetar.c:71:25
	movupd	%xmm2, 16(%rsi,%rbx)
	.loc	18 74 39 is_stmt 1      # tzetar.c:74:39
	mulsd	qs(%rdx), %xmm5
.Ltmp1194:
	.loc	18 73 55                # tzetar.c:73:55
	addsd	%xmm1, %xmm5
	.loc	18 74 49                # tzetar.c:74:49
	mulsd	%xmm11, %xmm3
	.loc	18 74 54 is_stmt 0      # tzetar.c:74:54
	mulsd	%xmm0, %xmm3
	.loc	18 74 43                # tzetar.c:74:43
	addsd	%xmm5, %xmm3
	.loc	18 74 64                # tzetar.c:74:64
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	mulsd	%xmm12, %xmm7
	.loc	18 74 58                # tzetar.c:74:58
	addsd	%xmm3, %xmm7
	.loc	18 73 25 is_stmt 1      # tzetar.c:73:25
	movsd	%xmm7, 32(%rsi,%rbx)
.Ltmp1195:
	.loc	18 48 7 discriminator 1 # tzetar.c:48:7
	addq	$8, %rdx
	addq	$40, %rbx
	decl	%r10d
	jne	.LBB15_10
.Ltmp1196:
.LBB15_11:                              # %for.inc137
                                        #   in Loop: Header=BB15_5 Depth=2
	.loc	18 47 5 discriminator 1 # tzetar.c:47:5
	incq	%rbp
	addq	$520, %r9               # imm = 0x208
	addq	$520, %rax              # imm = 0x208
	addq	$2600, %r11             # imm = 0xA28
	cmpl	%ecx, %ebp
	jne	.LBB15_5
.Ltmp1197:
.LBB15_12:                              # %for.inc140
                                        #   in Loop: Header=BB15_4 Depth=1
	.loc	18 46 3 discriminator 1 # tzetar.c:46:3
	addq	$33800, %r14            # imm = 0x8408
	addq	$33800, %r15            # imm = 0x8408
	addq	$169000, %r12           # imm = 0x29428
	movq	24(%rsp), %rax          # 8-byte Reload
	.loc	18 46 17 is_stmt 0 discriminator 1 # tzetar.c:46:17
	cmpq	16(%rsp), %rax          # 8-byte Folded Reload
	.loc	18 46 3 discriminator 1 # tzetar.c:46:3
	leaq	1(%rax), %rax
	jl	.LBB15_4
.Ltmp1198:
.LBB15_13:                              # %for.end142
	.loc	18 78 7 is_stmt 1       # tzetar.c:78:7
	cmpl	$0, timeron(%rip)
	je	.LBB15_14
# BB#15:                                # %if.then144
	.loc	18 78 16 is_stmt 0 discriminator 1 # tzetar.c:78:16
	movl	$14, %edi
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	timer_stop              # TAILCALL
.Ltmp1199:
.LBB15_14:                              # %if.end145
	.loc	18 79 1 is_stmt 1       # tzetar.c:79:1
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1200:
.Lfunc_end15:
	.size	tzetar, .Lfunc_end15-tzetar
	.cfi_endproc

	.globl	add
	.p2align	4, 0x90
	.type	add,@function
add:                                    # @add
.Lfunc_begin16:
	.file	19 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/add.c"
	.loc	19 40 0                 # add.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	19 43 7 prologue_end    # add.c:43:7
	cmpl	$0, timeron(%rip)
	je	.LBB16_2
# BB#1:                                 # %if.then
	.loc	19 43 16 is_stmt 0 discriminator 1 # add.c:43:16
	pushq	%rax
.Ltmp1201:
	.cfi_def_cfa_offset 16
	movl	$15, %edi
	callq	timer_start
	addq	$8, %rsp
.Ltmp1202:
.LBB16_2:                               # %for.cond.preheader
	.loc	19 48 27 is_stmt 1      # add.c:48:27
	movslq	nz2(%rip), %r8
.Ltmp1203:
	.loc	19 44 20 discriminator 1 # add.c:44:20
	testq	%r8, %r8
	jle	.LBB16_10
# BB#3:                                 # %for.cond1.preheader.lr.ph
.Ltmp1204:
	.loc	19 45 22 discriminator 1 # add.c:45:22
	movl	ny2(%rip), %r11d
	.loc	19 45 19 is_stmt 0 discriminator 1 # add.c:45:19
	testl	%r11d, %r11d
	jle	.LBB16_10
# BB#4:                                 # %for.cond4.preheader.lr.ph.preheader
.Ltmp1205:
	.loc	19 46 24 is_stmt 1 discriminator 1 # add.c:46:24
	movl	nx2(%rip), %edi
.Ltmp1206:
	.loc	19 48 27                # add.c:48:27
	incl	%r11d
	movl	$1, %r9d
	movl	$171672, %r10d          # imm = 0x29E98
	.p2align	4, 0x90
.LBB16_5:                               # %for.cond4.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_6 Depth 2
                                        #       Child Loop BB16_7 Depth 3
	testl	%edi, %edi
	movq	%r10, %rcx
	movl	$1, %esi
	jle	.LBB16_9
	.p2align	4, 0x90
.LBB16_6:                               # %for.cond7.preheader.lr.ph
                                        #   Parent Loop BB16_5 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB16_7 Depth 3
	movl	%edi, %edx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB16_7:                               # %for.cond7.preheader
                                        #   Parent Loop BB16_5 Depth=1
                                        #     Parent Loop BB16_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movupd	u-32(%rax), %xmm0
	.loc	19 48 43 is_stmt 0      # add.c:48:43
	movupd	rhs-32(%rax), %xmm1
	.loc	19 48 41                # add.c:48:41
	addpd	%xmm0, %xmm1
	.loc	19 48 25                # add.c:48:25
	movupd	%xmm1, u-32(%rax)
	.loc	19 48 27                # add.c:48:27
	movupd	u-16(%rax), %xmm0
	.loc	19 48 43                # add.c:48:43
	movupd	rhs-16(%rax), %xmm1
	.loc	19 48 41                # add.c:48:41
	addpd	%xmm0, %xmm1
	.loc	19 48 25                # add.c:48:25
	movupd	%xmm1, u-16(%rax)
	.loc	19 48 27                # add.c:48:27
	movsd	u(%rax), %xmm0          # xmm0 = mem[0],zero
	.loc	19 48 41                # add.c:48:41
	addsd	rhs(%rax), %xmm0
	.loc	19 48 25                # add.c:48:25
	movsd	%xmm0, u(%rax)
.Ltmp1207:
	.loc	19 46 7 is_stmt 1 discriminator 1 # add.c:46:7
	addq	$40, %rax
	decl	%edx
	jne	.LBB16_7
.Ltmp1208:
# BB#8:                                 # %for.inc35
                                        #   in Loop: Header=BB16_6 Depth=2
	.loc	19 45 5 discriminator 1 # add.c:45:5
	incq	%rsi
	addq	$2600, %rcx             # imm = 0xA28
	cmpl	%r11d, %esi
	jne	.LBB16_6
.Ltmp1209:
.LBB16_9:                               # %for.inc38
                                        #   in Loop: Header=BB16_5 Depth=1
	.loc	19 44 3 discriminator 1 # add.c:44:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	19 44 17 is_stmt 0 discriminator 1 # add.c:44:17
	cmpq	%r8, %r9
	.loc	19 44 3 discriminator 1 # add.c:44:3
	leaq	1(%r9), %r9
	jl	.LBB16_5
.Ltmp1210:
.LBB16_10:                              # %for.end40
	.loc	19 53 7 is_stmt 1       # add.c:53:7
	cmpl	$0, timeron(%rip)
	je	.LBB16_11
# BB#12:                                # %if.then42
	.loc	19 53 16 is_stmt 0 discriminator 1 # add.c:53:16
	movl	$15, %edi
	jmp	timer_stop              # TAILCALL
.Ltmp1211:
.LBB16_11:                              # %if.end43
	.loc	19 54 1 is_stmt 1       # add.c:54:1
	retq
.Ltmp1212:
.Lfunc_end16:
	.size	add, .Lfunc_end16-add
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI17_0:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
.LCPI17_2:
	.quad	4678830152592457276     # double 62553.874226090004
	.quad	4669446206582036118     # double 14953.170200119999
.LCPI17_3:
	.quad	4672182236018550939     # double 23475.957505859998
	.quad	4671477185272922630     # double 20910.99783534
.LCPI17_4:
	.quad	4634445194995642093     # double 67.427351649089999
	.quad	4617755357557197027     # double 5.3906560369380001
.LCPI17_5:
	.quad	4625423818987000825     # double 16.806471964770001
	.quad	4624841951259250822     # double 15.36963126457
.LCPI17_9:
	.quad	4666968892518267633     # double 10446.962168870001
	.quad	4659265026244367853     # double 3204.4277625780001
.LCPI17_10:
	.quad	4661833293220879807     # double 4648.6807330319998
	.quad	4661382760140768140     # double 4238.9232836970004
.LCPI17_11:
	.quad	4617416253829175028     # double 5.089471423669
	.quad	4602970215449537520     # double 0.53235148558940004
.LCPI17_12:
	.quad	4608024821654318479     # double 1.187051008971
	.quad	4607559527498363271     # double 1.083734951938
.LCPI17_16:
	.quad	4648384806447151936     # double 588.16915818289999
	.quad	4642839730786775489     # double 245.44176035690001
.LCPI17_17:
	.quad	4644502181785767999     # double 329.38291918509998
	.quad	4644129395939654682     # double 308.19249718909998
.LCPI17_18:
	.quad	4598351977724501042     # double 0.25981205001829999
	.quad	4583124950294885491     # double 0.025908889223149999
.LCPI17_19:
	.quad	4587558089948394058     # double 0.051328864163199997
	.quad	4587087102783304282     # double 0.048060734194540003
.LCPI17_23:
	.quad	4634558177936011783     # double 69.032935799979995
	.quad	4629405246761626817     # double 30.951344880840001
.LCPI17_24:
	.quad	4630971750245274849     # double 41.033366470170002
	.quad	4630635996144351147     # double 38.647690096040002
.LCPI17_25:
	.quad	4576808705329550456     # double 0.0098100061901880003
	.quad	4562359784050777658     # double 0.00102282790567
.LCPI17_26:
	.quad	4565577680231627310     # double 0.001720597911692
	.quad	4565457229986627689     # double 0.001694479428231
.LCPI17_30:
	.quad	4612766842345834550     # double 2.4799822399300195
	.quad	4607757230318090437     # double 1.1276337964368832
.LCPI17_31:
	.quad	4609447269094609533     # double 1.5028977888770492
	.quad	4609081954351948173     # double 1.421781621169518
.LCPI17_32:
	.quad	4547671308327116924     # double 1.090014029782055E-4
	.quad	4540635819330000670     # double 3.7343951769282092E-5
.LCPI17_33:
	.quad	4542517215100759281     # double 5.009278540654163E-5
	.quad	4542159836519019425     # double 4.7671093939528253E-5
.LCPI17_37:
	.quad	4566373914671446736     # double 0.0018932537335840001
	.quad	4550466914284901595     # double 1.7170754477749999E-4
.LCPI17_38:
	.quad	4553760412030424459     # double 2.778153350936E-4
	.quad	4553962075634911401     # double 2.887475409984E-4
.LCPI17_39:
	.quad	4545193503516533815     # double 7.5420885995339994E-5
	.quad	4529303044676941829     # double 6.5128522530860004E-6
.LCPI17_40:
	.quad	4532310373316561127     # double 1.049092285688E-5
	.quad	4532781112891128456     # double 1.128838671535E-5
.LCPI17_43:
	.quad	4583575000763969693     # double 0.027470315451339478
	.quad	4577126185621207488     # double 0.010360746705285417
.LCPI17_44:
	.quad	4580336856315639719     # double 0.016235745065095532
	.quad	4580222951175681493     # double 0.015840557224455615
.LCPI17_45:
	.quad	4538675592631826592     # double 2.7289258557377225E-5
	.quad	4532235714936121090     # double 1.0364446640837285E-5
.LCPI17_46:
	.quad	4535389280007771157     # double 1.6154798287166471E-5
	.quad	4535270012718937748     # double 1.5750704994480102E-5
.LCPI17_50:
	.quad	9223372036854775807     # 0x7fffffffffffffff
	.quad	9223372036854775807     # 0x7fffffffffffffff
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI17_1:
	.quad	4607182418800017408     # double 1
.LCPI17_6:
	.quad	4547007122018943789     # double 1.0E-4
.LCPI17_7:
	.quad	4676789219068468272     # double 47704.128412179998
.LCPI17_8:
	.quad	4639746716766751064     # double 157.5330146156
.LCPI17_13:
	.quad	4554169646866313825     # double 2.9999999999999997E-4
.LCPI17_14:
	.quad	4665065561971179748     # double 7588.4120361360001
.LCPI17_15:
	.quad	4622742965404500565     # double 11.64108338568
.LCPI17_20:
	.quad	4559318882536264156     # double 6.7000000000000002E-4
.LCPI17_21:
	.quad	4646795137827902993     # double 459.72237991759999
.LCPI17_22:
	.quad	4603114206910587406     # double 0.54833774913010003
.LCPI17_27:
	.quad	4562254508917369340     # double 0.001
.LCPI17_28:
	.quad	4633139312515729187     # double 56.434822725959997
.LCPI17_29:
	.quad	4580982151547334733     # double 0.01847456263981
.LCPI17_34:
	.quad	4564560351926583034     # double 0.0015
.LCPI17_35:
	.quad	4611976976416566370     # double 2.129211303513828
.LCPI17_36:
	.quad	4549157512341756365     # double 1.3621613399213001E-4
.LCPI17_41:
	.quad	4569395096346148456     # double 0.0031436111612419999
.LCPI17_42:
	.quad	4548577645636582791     # double 1.212845639773E-4
.LCPI17_47:
	.quad	4579800533065604792     # double 0.014999999999999999
.LCPI17_48:
	.quad	4585183097077475842     # double 0.034849040609362461
.LCPI17_49:
	.quad	4540168558051062933     # double 3.4177666183390531E-5
.LCPI17_51:
	.quad	4487126258331716666     # double 1.0E-8
	.text
	.globl	verify
	.p2align	4, 0x90
	.type	verify,@function
verify:                                 # @verify
.Lfunc_begin17:
	.file	20 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/verify.c"
	.loc	20 43 0                 # verify.c:43:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1213:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp1214:
	.cfi_def_cfa_offset 24
	pushq	%rbx
.Ltmp1215:
	.cfi_def_cfa_offset 32
	subq	$304, %rsp              # imm = 0x130
.Ltmp1216:
	.cfi_def_cfa_offset 336
.Ltmp1217:
	.cfi_offset %rbx, -32
.Ltmp1218:
	.cfi_offset %r14, -24
.Ltmp1219:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: verify:no_time_steps <- %EDI
	#DEBUG_VALUE: verify:Class <- %RSI
	#DEBUG_VALUE: verify:verified <- %RDX
	movq	%rdx, %r14
.Ltmp1220:
	#DEBUG_VALUE: verify:verified <- %R14
	movq	%rsi, %rbx
.Ltmp1221:
	#DEBUG_VALUE: verify:Class <- %RBX
	movl	%edi, %ebp
.Ltmp1222:
	#DEBUG_VALUE: verify:epsilon <- 1.000000e-08
	#DEBUG_VALUE: verify:dtref <- 0.000000e+00
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	leaq	160(%rsp), %rdi
.Ltmp1223:
	#DEBUG_VALUE: verify:xce <- [%RDI+0]
	.loc	20 57 3 prologue_end    # verify.c:57:3
	callq	error_norm
	.loc	20 58 3                 # verify.c:58:3
	xorl	%eax, %eax
	callq	compute_rhs
	leaq	112(%rsp), %rdi
.Ltmp1224:
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	20 60 3                 # verify.c:60:3
	callq	rhs_norm
.Ltmp1225:
	#DEBUG_VALUE: verify:m <- 0
	.loc	20 63 23                # verify.c:63:23
	movsd	dt(%rip), %xmm3         # xmm3 = mem[0],zero
	.loc	20 63 14 is_stmt 0      # verify.c:63:14
	movapd	112(%rsp), %xmm2
.Ltmp1226:
	.loc	20 275 23 is_stmt 1     # verify.c:275:23
	movapd	%xmm3, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	divpd	%xmm0, %xmm2
.Ltmp1227:
	.loc	20 63 12                # verify.c:63:12
	movapd	%xmm2, 112(%rsp)
	.loc	20 63 14 is_stmt 0      # verify.c:63:14
	movapd	128(%rsp), %xmm1
.Ltmp1228:
	.loc	20 275 23 is_stmt 1     # verify.c:275:23
	divpd	%xmm0, %xmm1
.Ltmp1229:
	.loc	20 63 12                # verify.c:63:12
	movapd	%xmm1, 128(%rsp)
	.loc	20 63 14 is_stmt 0      # verify.c:63:14
	movsd	144(%rsp), %xmm0        # xmm0 = mem[0],zero
.Ltmp1230:
	.loc	20 275 23 is_stmt 1     # verify.c:275:23
	divsd	%xmm3, %xmm0
.Ltmp1231:
	.loc	20 63 12                # verify.c:63:12
	movsd	%xmm0, 144(%rsp)
.Ltmp1232:
	.loc	20 66 10                # verify.c:66:10
	movb	$85, (%rbx)
	.loc	20 67 13                # verify.c:67:13
	movl	$1, (%r14)
.Ltmp1233:
	.loc	20 70 15                # verify.c:70:15
	movapd	.LCPI17_0(%rip), %xmm3  # xmm3 = [1.000000e+00,1.000000e+00]
	movapd	%xmm3, 64(%rsp)
	.loc	20 71 15                # verify.c:71:15
	movapd	%xmm3, 16(%rsp)
	.loc	20 70 15                # verify.c:70:15
	movapd	%xmm3, 80(%rsp)
	.loc	20 71 15                # verify.c:71:15
	movapd	%xmm3, 32(%rsp)
	.loc	20 70 15                # verify.c:70:15
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, 96(%rsp)
	.loc	20 71 15                # verify.c:71:15
	movq	%rax, 48(%rsp)
.Ltmp1234:
	.loc	20 78 9                 # verify.c:78:9
	movl	grid_points(%rip), %edx
	.loc	20 78 35 is_stmt 0 discriminator 1 # verify.c:78:35
	movl	grid_points+4(%rip), %ecx
	.loc	20 79 9 is_stmt 1       # verify.c:79:9
	movl	grid_points+8(%rip), %eax
	.loc	20 78 31                # verify.c:78:31
	cmpl	$100, %ebp
	jne	.LBB17_5
.Ltmp1235:
# BB#1:                                 # %entry
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$12, %edx
	jne	.LBB17_5
.Ltmp1236:
# BB#2:                                 # %entry
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$12, %ecx
	jne	.LBB17_5
.Ltmp1237:
# BB#3:                                 # %entry
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$12, %eax
	jne	.LBB17_5
.Ltmp1238:
# BB#4:                                 # %if.then
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 1.500000e-02
	.loc	20 80 12                # verify.c:80:12
	movb	$83, (%rbx)
	.loc	20 86 15                # verify.c:86:15
	movapd	.LCPI17_43(%rip), %xmm3 # xmm3 = [2.747032e-02,1.036075e-02]
	movapd	%xmm3, 64(%rsp)
	.loc	20 88 15                # verify.c:88:15
	movapd	.LCPI17_44(%rip), %xmm8 # xmm8 = [1.623575e-02,1.584056e-02]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4585183097077475842, %rax # imm = 0x3FA1D7BBC36DAA02
	.loc	20 90 15                # verify.c:90:15
	movq	%rax, 96(%rsp)
	.loc	20 95 15                # verify.c:95:15
	movapd	.LCPI17_45(%rip), %xmm5 # xmm5 = [2.728926e-05,1.036445e-05]
	movapd	%xmm5, 16(%rsp)
	.loc	20 97 15                # verify.c:97:15
	movapd	.LCPI17_46(%rip), %xmm6 # xmm6 = [1.615480e-05,1.575070e-05]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4540168558051062933, %rax # imm = 0x3F01EB3FAB07F495
	.loc	20 99 15                # verify.c:99:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_47(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_48(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI17_49(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$83, %al
	jmp	.LBB17_36
.Ltmp1239:
.LBB17_5:                               # %if.else
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 105 38 discriminator 1 # verify.c:105:38
	cmpl	$400, %ebp              # imm = 0x190
	jne	.LBB17_10
.Ltmp1240:
# BB#6:                                 # %if.else
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$36, %edx
	jne	.LBB17_10
.Ltmp1241:
# BB#7:                                 # %if.else
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$36, %ecx
	jne	.LBB17_10
.Ltmp1242:
# BB#8:                                 # %if.else
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$36, %eax
	jne	.LBB17_10
.Ltmp1243:
# BB#9:                                 # %if.then37
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:dtref <- 1.500000e-03
	.loc	20 107 12               # verify.c:107:12
	movb	$87, (%rbx)
	.loc	20 113 15               # verify.c:113:15
	movapd	.LCPI17_37(%rip), %xmm3 # xmm3 = [1.893254e-03,1.717075e-04]
	movapd	%xmm3, 64(%rsp)
	.loc	20 115 15               # verify.c:115:15
	movapd	.LCPI17_38(%rip), %xmm8 # xmm8 = [2.778153e-04,2.887475e-04]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4569395096346148456, %rax # imm = 0x3F69C0A1641FBE68
	.loc	20 117 15               # verify.c:117:15
	movq	%rax, 96(%rsp)
	.loc	20 122 15               # verify.c:122:15
	movapd	.LCPI17_39(%rip), %xmm5 # xmm5 = [7.542089e-05,6.512852e-06]
	movapd	%xmm5, 16(%rsp)
	.loc	20 124 15               # verify.c:124:15
	movapd	.LCPI17_40(%rip), %xmm6 # xmm6 = [1.049092e-05,1.128839e-05]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4548577645636582791, %rax # imm = 0x3F1FCB44F1737D87
	.loc	20 126 15               # verify.c:126:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_34(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_41(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI17_42(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$87, %al
	jmp	.LBB17_36
.Ltmp1244:
.LBB17_10:                              # %if.else48
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	20 132 38 discriminator 1 # verify.c:132:38
	cmpl	$400, %ebp              # imm = 0x190
	jne	.LBB17_15
.Ltmp1245:
# BB#11:                                # %if.else48
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$64, %edx
	jne	.LBB17_15
.Ltmp1246:
# BB#12:                                # %if.else48
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$64, %ecx
	jne	.LBB17_15
.Ltmp1247:
# BB#13:                                # %if.else48
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$64, %eax
	jne	.LBB17_15
.Ltmp1248:
# BB#14:                                # %if.then56
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 1.500000e-03
	.loc	20 134 12               # verify.c:134:12
	movb	$65, (%rbx)
	.loc	20 140 15               # verify.c:140:15
	movapd	.LCPI17_30(%rip), %xmm3 # xmm3 = [2.479982e+00,1.127634e+00]
	movapd	%xmm3, 64(%rsp)
	.loc	20 142 15               # verify.c:142:15
	movapd	.LCPI17_31(%rip), %xmm8 # xmm8 = [1.502898e+00,1.421782e+00]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4611976976416566370, %rax # imm = 0x4001089FEF96EC62
	.loc	20 144 15               # verify.c:144:15
	movq	%rax, 96(%rsp)
	.loc	20 149 15               # verify.c:149:15
	movapd	.LCPI17_32(%rip), %xmm5 # xmm5 = [1.090014e-04,3.734395e-05]
	movapd	%xmm5, 16(%rsp)
	.loc	20 151 15               # verify.c:151:15
	movapd	.LCPI17_33(%rip), %xmm6 # xmm6 = [5.009279e-05,4.767109e-05]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4549157512341756365, %rax # imm = 0x3F21DAA7AE6E19CD
	.loc	20 153 15               # verify.c:153:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_34(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_35(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI17_36(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$65, %al
	jmp	.LBB17_36
.Ltmp1249:
.LBB17_15:                              # %if.else67
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 159 39 discriminator 1 # verify.c:159:39
	cmpl	$400, %ebp              # imm = 0x190
	jne	.LBB17_20
.Ltmp1250:
# BB#16:                                # %if.else67
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$102, %edx
	jne	.LBB17_20
.Ltmp1251:
# BB#17:                                # %if.else67
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$102, %ecx
	jne	.LBB17_20
.Ltmp1252:
# BB#18:                                # %if.else67
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$102, %eax
	jne	.LBB17_20
.Ltmp1253:
# BB#19:                                # %if.then75
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:dtref <- 1.000000e-03
	.loc	20 161 12               # verify.c:161:12
	movb	$66, (%rbx)
	.loc	20 167 15               # verify.c:167:15
	movapd	.LCPI17_23(%rip), %xmm3 # xmm3 = [6.903294e+01,3.095134e+01]
	movapd	%xmm3, 64(%rsp)
	.loc	20 169 15               # verify.c:169:15
	movapd	.LCPI17_24(%rip), %xmm8 # xmm8 = [4.103337e+01,3.864769e+01]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4633139312515729187, %rax # imm = 0x404C37A84565C723
	.loc	20 171 15               # verify.c:171:15
	movq	%rax, 96(%rsp)
	.loc	20 176 15               # verify.c:176:15
	movapd	.LCPI17_25(%rip), %xmm5 # xmm5 = [9.810006e-03,1.022828e-03]
	movapd	%xmm5, 16(%rsp)
	.loc	20 178 15               # verify.c:178:15
	movapd	.LCPI17_26(%rip), %xmm6 # xmm6 = [1.720598e-03,1.694479e-03]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4580982151547334733, %rax # imm = 0x3F92EAFEE962304D
	.loc	20 180 15               # verify.c:180:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_27(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_28(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI17_29(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$66, %al
	jmp	.LBB17_36
.Ltmp1254:
.LBB17_20:                              # %if.else86
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	20 186 39 discriminator 1 # verify.c:186:39
	cmpl	$400, %ebp              # imm = 0x190
	jne	.LBB17_25
.Ltmp1255:
# BB#21:                                # %if.else86
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$162, %edx
	jne	.LBB17_25
.Ltmp1256:
# BB#22:                                # %if.else86
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$162, %ecx
	jne	.LBB17_25
.Ltmp1257:
# BB#23:                                # %if.else86
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$162, %eax
	jne	.LBB17_25
.Ltmp1258:
# BB#24:                                # %if.then94
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 6.700000e-04
	.loc	20 188 12               # verify.c:188:12
	movb	$67, (%rbx)
	.loc	20 194 15               # verify.c:194:15
	movapd	.LCPI17_16(%rip), %xmm3 # xmm3 = [5.881692e+02,2.454418e+02]
	movapd	%xmm3, 64(%rsp)
	.loc	20 196 15               # verify.c:196:15
	movapd	.LCPI17_17(%rip), %xmm8 # xmm8 = [3.293829e+02,3.081925e+02]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4646795137827902993, %rax # imm = 0x407CBB8EDE3E9611
	.loc	20 198 15               # verify.c:198:15
	movq	%rax, 96(%rsp)
	.loc	20 203 15               # verify.c:203:15
	movapd	.LCPI17_18(%rip), %xmm5 # xmm5 = [2.598121e-01,2.590889e-02]
	movapd	%xmm5, 16(%rsp)
	.loc	20 205 15               # verify.c:205:15
	movapd	.LCPI17_19(%rip), %xmm6 # xmm6 = [5.132886e-02,4.806073e-02]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4603114206910587406, %rax # imm = 0x3FE18BFB9B75A20E
	.loc	20 207 15               # verify.c:207:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_20(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_21(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI17_22(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$67, %al
	jmp	.LBB17_36
.Ltmp1259:
.LBB17_25:                              # %if.else105
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 213 39 discriminator 1 # verify.c:213:39
	cmpl	$500, %ebp              # imm = 0x1F4
	jne	.LBB17_30
.Ltmp1260:
# BB#26:                                # %if.else105
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$408, %edx              # imm = 0x198
	jne	.LBB17_30
.Ltmp1261:
# BB#27:                                # %if.else105
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$408, %ecx              # imm = 0x198
	jne	.LBB17_30
.Ltmp1262:
# BB#28:                                # %if.else105
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$408, %eax              # imm = 0x198
	jne	.LBB17_30
.Ltmp1263:
# BB#29:                                # %if.then113
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:dtref <- 3.000000e-04
	.loc	20 215 12               # verify.c:215:12
	movb	$68, (%rbx)
	.loc	20 221 15               # verify.c:221:15
	movapd	.LCPI17_9(%rip), %xmm3  # xmm3 = [1.044696e+04,3.204428e+03]
	movapd	%xmm3, 64(%rsp)
	.loc	20 223 15               # verify.c:223:15
	movapd	.LCPI17_10(%rip), %xmm8 # xmm8 = [4.648681e+03,4.238923e+03]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4665065561971179748, %rax # imm = 0x40BDA4697B3340E4
	.loc	20 225 15               # verify.c:225:15
	movq	%rax, 96(%rsp)
	.loc	20 230 15               # verify.c:230:15
	movapd	.LCPI17_11(%rip), %xmm5 # xmm5 = [5.089471e+00,5.323515e-01]
	movapd	%xmm5, 16(%rsp)
	.loc	20 232 15               # verify.c:232:15
	movapd	.LCPI17_12(%rip), %xmm6 # xmm6 = [1.187051e+00,1.083735e+00]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4622742965404500565, %rax # imm = 0x4027483C14DF0255
	.loc	20 234 15               # verify.c:234:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_13(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_14(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI17_15(%rip), %xmm4 # xmm4 = mem[0],zero
	movb	$68, %al
	jmp	.LBB17_36
.Ltmp1264:
.LBB17_30:                              # %if.else124
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	.loc	20 240 40 discriminator 1 # verify.c:240:40
	cmpl	$500, %ebp              # imm = 0x1F4
	jne	.LBB17_35
.Ltmp1265:
# BB#31:                                # %if.else124
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$1020, %edx             # imm = 0x3FC
	jne	.LBB17_35
.Ltmp1266:
# BB#32:                                # %if.else124
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	cmpl	$1020, %ecx             # imm = 0x3FC
	jne	.LBB17_35
.Ltmp1267:
# BB#33:                                # %if.else124
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	cmpl	$1020, %eax             # imm = 0x3FC
	jne	.LBB17_35
.Ltmp1268:
# BB#34:                                # %if.then132
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:dtref <- 1.000000e-04
	.loc	20 242 12               # verify.c:242:12
	movb	$69, (%rbx)
	.loc	20 248 15               # verify.c:248:15
	movapd	.LCPI17_2(%rip), %xmm3  # xmm3 = [6.255387e+04,1.495317e+04]
	movapd	%xmm3, 64(%rsp)
	.loc	20 250 15               # verify.c:250:15
	movapd	.LCPI17_3(%rip), %xmm8  # xmm8 = [2.347596e+04,2.091100e+04]
	movapd	%xmm8, 80(%rsp)
	movabsq	$4676789219068468272, %rax # imm = 0x40E74B041BF3DC30
	.loc	20 252 15               # verify.c:252:15
	movq	%rax, 96(%rsp)
	.loc	20 257 15               # verify.c:257:15
	movapd	.LCPI17_4(%rip), %xmm5  # xmm5 = [6.742735e+01,5.390656e+00]
	movapd	%xmm5, 16(%rsp)
	.loc	20 259 15               # verify.c:259:15
	movapd	.LCPI17_5(%rip), %xmm6  # xmm6 = [1.680647e+01,1.536963e+01]
	movapd	%xmm6, 32(%rsp)
	movabsq	$4639746716766751064, %rax # imm = 0x4063B10E74AAC958
	.loc	20 261 15               # verify.c:261:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_6(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_7(%rip), %xmm7  # xmm7 = mem[0],zero
	movsd	.LCPI17_8(%rip), %xmm4  # xmm4 = mem[0],zero
	movb	$69, %al
	jmp	.LBB17_36
.Ltmp1269:
.LBB17_35:                              # %if.else143
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 263 15               # verify.c:263:15
	movl	$0, (%r14)
.Ltmp1270:
	.loc	20 282 7                # verify.c:282:7
	movb	(%rbx), %al
	xorpd	%xmm4, %xmm4
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_1(%rip), %xmm4  # xmm4 = mem[0],zero
.Ltmp1271:
	.loc	20 275 30               # verify.c:275:30
	movapd	%xmm4, %xmm7
	movapd	%xmm3, %xmm8
	.loc	20 276 30               # verify.c:276:30
	movapd	%xmm3, %xmm5
	movapd	%xmm3, %xmm6
.Ltmp1272:
.LBB17_36:                              # %if.end149
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:m <- 0
	.loc	20 275 29               # verify.c:275:29
	subpd	%xmm3, %xmm2
	.loc	20 275 40 is_stmt 0     # verify.c:275:40
	divpd	%xmm3, %xmm2
	.loc	20 275 17               # verify.c:275:17
	movapd	.LCPI17_50(%rip), %xmm3 # xmm3 = [9223372036854775807,9223372036854775807]
	andpd	%xmm3, %xmm2
	.loc	20 275 15               # verify.c:275:15
	movapd	%xmm2, 256(%rsp)
	.loc	20 276 23 is_stmt 1     # verify.c:276:23
	movapd	160(%rsp), %xmm2
	.loc	20 276 29 is_stmt 0     # verify.c:276:29
	subpd	%xmm5, %xmm2
	.loc	20 276 40               # verify.c:276:40
	divpd	%xmm5, %xmm2
	.loc	20 276 17               # verify.c:276:17
	andpd	%xmm3, %xmm2
	.loc	20 276 15               # verify.c:276:15
	movapd	%xmm2, 208(%rsp)
	.loc	20 275 29 is_stmt 1     # verify.c:275:29
	subpd	%xmm8, %xmm1
	.loc	20 275 40 is_stmt 0     # verify.c:275:40
	divpd	%xmm8, %xmm1
	.loc	20 275 17               # verify.c:275:17
	andpd	%xmm3, %xmm1
	.loc	20 275 15               # verify.c:275:15
	movapd	%xmm1, 272(%rsp)
	.loc	20 276 23 is_stmt 1     # verify.c:276:23
	movapd	176(%rsp), %xmm1
	.loc	20 276 29 is_stmt 0     # verify.c:276:29
	subpd	%xmm6, %xmm1
	.loc	20 276 40               # verify.c:276:40
	divpd	%xmm6, %xmm1
	.loc	20 276 17               # verify.c:276:17
	andpd	%xmm3, %xmm1
	.loc	20 276 15               # verify.c:276:15
	movapd	%xmm1, 224(%rsp)
	.loc	20 275 29 is_stmt 1     # verify.c:275:29
	subsd	%xmm7, %xmm0
	.loc	20 275 40 is_stmt 0     # verify.c:275:40
	divsd	%xmm7, %xmm0
	.loc	20 275 17               # verify.c:275:17
	andpd	%xmm3, %xmm0
	.loc	20 275 15               # verify.c:275:15
	movlpd	%xmm0, 288(%rsp)
	.loc	20 276 23 is_stmt 1     # verify.c:276:23
	movsd	192(%rsp), %xmm0        # xmm0 = mem[0],zero
	.loc	20 276 29 is_stmt 0     # verify.c:276:29
	subsd	%xmm4, %xmm0
	.loc	20 276 40               # verify.c:276:40
	divsd	%xmm4, %xmm0
	.loc	20 276 17               # verify.c:276:17
	andpd	%xmm3, %xmm0
	.loc	20 276 15               # verify.c:276:15
	movlpd	%xmm0, 240(%rsp)
.Ltmp1273:
	.loc	20 282 14 is_stmt 1     # verify.c:282:14
	movzbl	%al, %ecx
	cmpl	$85, %ecx
	jne	.LBB17_37
.Ltmp1274:
# BB#39:                                # %if.else189
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 291 5                # verify.c:291:5
	movl	$.Lstr.39, %edi
.Ltmp1275:
	callq	puts
	jmp	.LBB17_40
.Ltmp1276:
.LBB17_37:                              # %if.then178
	#DEBUG_VALUE: verify:xcr <- [%RDI+0]
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 282 7                # verify.c:282:7
	movsbl	%al, %esi
.Ltmp1277:
	.loc	20 283 5                # verify.c:283:5
	movl	$.L.str.36, %edi
.Ltmp1278:
	xorl	%eax, %eax
	callq	printf
	.loc	20 284 5                # verify.c:284:5
	movsd	.LCPI17_51(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	$.L.str.1.37, %edi
	movb	$1, %al
	callq	printf
	.loc	20 285 23               # verify.c:285:23
	movsd	dt(%rip), %xmm1         # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm0          # 8-byte Reload
                                        # xmm0 = mem[0],zero
	.loc	20 285 25 is_stmt 0     # verify.c:285:25
	subsd	%xmm0, %xmm1
	.loc	20 285 18               # verify.c:285:18
	andpd	.LCPI17_50(%rip), %xmm1
	.loc	20 284 5 is_stmt 1      # verify.c:284:5
	movsd	.LCPI17_51(%rip), %xmm2 # xmm2 = mem[0],zero
	.loc	20 285 33               # verify.c:285:33
	ucomisd	%xmm1, %xmm2
	setae	%al
	movzbl	%al, %eax
	.loc	20 285 15 is_stmt 0     # verify.c:285:15
	movl	%eax, (%r14)
	jae	.LBB17_40
.Ltmp1279:
# BB#38:                                # %if.then186
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	.loc	20 287 14 is_stmt 1     # verify.c:287:14
	movb	$85, (%rbx)
	.loc	20 288 7                # verify.c:288:7
	movl	$.L.str.2.38, %edi
	movb	$1, %al
	callq	printf
.Ltmp1280:
.LBB17_40:                              # %if.end191
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	.loc	20 294 14               # verify.c:294:14
	movzbl	(%rbx), %eax
	cmpl	$85, %eax
	jne	.LBB17_41
.Ltmp1281:
# BB#42:                                # %if.else197
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 297 5                # verify.c:297:5
	movl	$.Lstr.15, %edi
	jmp	.LBB17_43
.Ltmp1282:
.LBB17_41:                              # %if.then195
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:verified <- %R14
	.loc	20 295 5                # verify.c:295:5
	movl	$.Lstr.22, %edi
.Ltmp1283:
.LBB17_43:                              # %for.cond200.preheader
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %RBX
	#DEBUG_VALUE: verify:no_time_steps <- %EBP
	.loc	20 297 5                # verify.c:297:5
	callq	puts
.Ltmp1284:
	.loc	20 301 16               # verify.c:301:16
	movzbl	(%rbx), %eax
	cmpl	$85, %eax
	sete	%al
	xorl	%ebp, %ebp
.Ltmp1285:
	.p2align	4, 0x90
.LBB17_44:                              # %for.body203
                                        # =>This Inner Loop Header: Depth=1
	.loc	20 301 9 is_stmt 0      # verify.c:301:9
	testb	$1, %al
	je	.LBB17_46
# BB#45:                                # %if.then207
                                        #   in Loop: Header=BB17_44 Depth=1
.Ltmp1286:
	.loc	20 302 45 is_stmt 1     # verify.c:302:45
	movsd	112(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	20 302 41 is_stmt 0     # verify.c:302:41
	incq	%rbp
	.loc	20 302 7                # verify.c:302:7
	movl	$.L.str.6.40, %edi
	movb	$1, %al
	movl	%ebp, %esi
	callq	printf
	jmp	.LBB17_50
.Ltmp1287:
	.p2align	4, 0x90
.LBB17_46:                              # %if.else211
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	20 309 35 is_stmt 1     # verify.c:309:35
	movsd	256(%rsp,%rbp,8), %xmm2 # xmm2 = mem[0],zero
.Ltmp1288:
	.loc	20 303 26 discriminator 1 # verify.c:303:26
	movsd	.LCPI17_51(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	%xmm2, %xmm0
.Ltmp1289:
	.loc	20 309 16               # verify.c:309:16
	movsd	112(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	20 309 24 is_stmt 0     # verify.c:309:24
	movsd	64(%rsp,%rbp,8), %xmm1  # xmm1 = mem[0],zero
	jae	.LBB17_47
# BB#48:                                # %if.else225
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	20 307 17 is_stmt 1     # verify.c:307:17
	movl	$0, (%r14)
	.loc	20 309 12               # verify.c:309:12
	incq	%rbp
	.loc	20 308 7                # verify.c:308:7
	movl	$.L.str.8.42, %edi
	jmp	.LBB17_49
.Ltmp1290:
	.p2align	4, 0x90
.LBB17_47:                              # %if.then216
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	20 305 12               # verify.c:305:12
	incq	%rbp
	.loc	20 304 7                # verify.c:304:7
	movl	$.L.str.7.41, %edi
.Ltmp1291:
.LBB17_49:                              # %for.inc236
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	20 308 7                # verify.c:308:7
	movb	$3, %al
	movl	%ebp, %esi
	callq	printf
.Ltmp1292:
.LBB17_50:                              # %for.inc236
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	20 301 16               # verify.c:301:16
	movzbl	(%rbx), %ecx
	cmpl	$85, %ecx
	sete	%al
.Ltmp1293:
	.loc	20 300 3 discriminator 1 # verify.c:300:3
	cmpq	$5, %rbp
	jne	.LBB17_44
.Ltmp1294:
# BB#51:                                # %for.end238
	movzbl	%cl, %eax
	cmpl	$85, %eax
	jne	.LBB17_52
# BB#53:                                # %if.else244
.Ltmp1295:
	.loc	20 316 5                # verify.c:316:5
	movl	$.Lstr.16, %edi
	jmp	.LBB17_54
.Ltmp1296:
.LBB17_52:                              # %if.then242
	.loc	20 314 5                # verify.c:314:5
	movl	$.Lstr.21, %edi
.Ltmp1297:
.LBB17_54:                              # %for.cond247.preheader
	.loc	20 316 5                # verify.c:316:5
	callq	puts
.Ltmp1298:
	.loc	20 320 16               # verify.c:320:16
	movzbl	(%rbx), %eax
	cmpl	$85, %eax
	sete	%al
	xorl	%ebp, %ebp
.Ltmp1299:
	.p2align	4, 0x90
.LBB17_55:                              # %for.body250
                                        # =>This Inner Loop Header: Depth=1
	.loc	20 320 9 is_stmt 0      # verify.c:320:9
	testb	$1, %al
	je	.LBB17_57
# BB#56:                                # %if.then254
                                        #   in Loop: Header=BB17_55 Depth=1
.Ltmp1300:
	.loc	20 321 45 is_stmt 1     # verify.c:321:45
	movsd	160(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	20 321 41 is_stmt 0     # verify.c:321:41
	incq	%rbp
	.loc	20 321 7                # verify.c:321:7
	movl	$.L.str.6.40, %edi
	movb	$1, %al
	movl	%ebp, %esi
	callq	printf
	jmp	.LBB17_61
.Ltmp1301:
	.p2align	4, 0x90
.LBB17_57:                              # %if.else259
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	20 328 35 is_stmt 1     # verify.c:328:35
	movsd	208(%rsp,%rbp,8), %xmm2 # xmm2 = mem[0],zero
.Ltmp1302:
	.loc	20 303 26 discriminator 1 # verify.c:303:26
	movsd	.LCPI17_51(%rip), %xmm0 # xmm0 = mem[0],zero
.Ltmp1303:
	.loc	20 322 26 discriminator 1 # verify.c:322:26
	ucomisd	%xmm2, %xmm0
.Ltmp1304:
	.loc	20 328 16               # verify.c:328:16
	movsd	160(%rsp,%rbp,8), %xmm0 # xmm0 = mem[0],zero
	.loc	20 328 24 is_stmt 0     # verify.c:328:24
	movsd	16(%rsp,%rbp,8), %xmm1  # xmm1 = mem[0],zero
	jae	.LBB17_58
# BB#59:                                # %if.else273
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	20 326 17 is_stmt 1     # verify.c:326:17
	movl	$0, (%r14)
	.loc	20 328 12               # verify.c:328:12
	incq	%rbp
	.loc	20 327 7                # verify.c:327:7
	movl	$.L.str.8.42, %edi
	jmp	.LBB17_60
.Ltmp1305:
	.p2align	4, 0x90
.LBB17_58:                              # %if.then264
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	20 324 12               # verify.c:324:12
	incq	%rbp
	.loc	20 323 7                # verify.c:323:7
	movl	$.L.str.7.41, %edi
.Ltmp1306:
.LBB17_60:                              # %for.inc284
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	20 327 7                # verify.c:327:7
	movb	$3, %al
	movl	%ebp, %esi
	callq	printf
.Ltmp1307:
.LBB17_61:                              # %for.inc284
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	20 320 16               # verify.c:320:16
	movzbl	(%rbx), %ecx
	cmpl	$85, %ecx
	sete	%al
.Ltmp1308:
	.loc	20 319 3 discriminator 1 # verify.c:319:3
	cmpq	$5, %rbp
	jne	.LBB17_55
.Ltmp1309:
# BB#62:                                # %for.end286
	.loc	20 332 7                # verify.c:332:7
	movzbl	%cl, %eax
	cmpl	$85, %eax
	jne	.LBB17_64
# BB#63:                                # %if.then290
.Ltmp1310:
	.loc	20 333 5                # verify.c:333:5
	movl	$.Lstr.19, %edi
	callq	puts
	.loc	20 334 5                # verify.c:334:5
	movl	$.Lstr.20, %edi
	jmp	.LBB17_67
.Ltmp1311:
.LBB17_64:                              # %if.else293
	.loc	20 335 14 discriminator 1 # verify.c:335:14
	cmpl	$0, (%r14)
	je	.LBB17_66
# BB#65:                                # %if.then295
.Ltmp1312:
	.loc	20 336 5                # verify.c:336:5
	movl	$.Lstr.18, %edi
	jmp	.LBB17_67
.Ltmp1313:
.LBB17_66:                              # %if.else297
	.loc	20 338 5                # verify.c:338:5
	movl	$.Lstr.17, %edi
.LBB17_67:                              # %if.end300
	callq	puts
.Ltmp1314:
	.loc	20 340 1                # verify.c:340:1
	addq	$304, %rsp              # imm = 0x130
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.Ltmp1315:
.Lfunc_end17:
	.size	verify, .Lfunc_end17-verify
	.cfi_endproc

	.globl	error_norm
	.p2align	4, 0x90
	.type	error_norm,@function
error_norm:                             # @error_norm
.Lfunc_begin18:
	.file	21 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP/error.c"
	.loc	21 42 0                 # error.c:42:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1316:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1317:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1318:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1319:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1320:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1321:
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
.Ltmp1322:
	.cfi_def_cfa_offset 128
.Ltmp1323:
	.cfi_offset %rbx, -56
.Ltmp1324:
	.cfi_offset %r12, -48
.Ltmp1325:
	.cfi_offset %r13, -40
.Ltmp1326:
	.cfi_offset %r14, -32
.Ltmp1327:
	.cfi_offset %r15, -24
.Ltmp1328:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: error_norm:rms <- %RDI
	movq	%rdi, %rbx
.Ltmp1329:
	#DEBUG_VALUE: error_norm:m <- 0
	#DEBUG_VALUE: error_norm:rms <- %RBX
	.loc	21 47 12 prologue_end   # error.c:47:12
	xorpd	%xmm0, %xmm0
	movupd	%xmm0, 16(%rbx)
	movupd	%xmm0, (%rbx)
	movq	$0, 32(%rbx)
.Ltmp1330:
	.loc	21 50 20 discriminator 1 # error.c:50:20
	movl	grid_points+8(%rip), %ecx
	xorpd	%xmm0, %xmm0
	.loc	21 50 17 is_stmt 0 discriminator 1 # error.c:50:17
	testl	%ecx, %ecx
	jle	.LBB18_1
.Ltmp1331:
# BB#2:                                 # %for.body3.lr.ph
	#DEBUG_VALUE: error_norm:rms <- %RBX
	.loc	21 52 22 is_stmt 1 discriminator 1 # error.c:52:22
	movl	grid_points+4(%rip), %eax
	xorl	%esi, %esi
	movl	$u+32, %r12d
	leaq	32(%rsp), %r14
.Ltmp1332:
	.p2align	4, 0x90
.LBB18_3:                               # %for.body3
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB18_5 Depth 2
                                        #       Child Loop BB18_7 Depth 3
	#DEBUG_VALUE: error_norm:j <- 0
	.loc	21 52 5 is_stmt 0 discriminator 1 # error.c:52:5
	testl	%eax, %eax
	jle	.LBB18_11
.Ltmp1333:
# BB#4:                                 # %for.body8.lr.ph
                                        #   in Loop: Header=BB18_3 Depth=1
	.loc	21 51 12 is_stmt 1      # error.c:51:12
	cvtsi2sdl	%esi, %xmm1
	movq	%rsi, 16(%rsp)          # 8-byte Spill
	.loc	21 51 22 is_stmt 0      # error.c:51:22
	mulsd	dnzm1(%rip), %xmm1
.Ltmp1334:
	#DEBUG_VALUE: error_norm:zeta <- %XMM1
	.loc	21 54 24 is_stmt 1 discriminator 1 # error.c:54:24
	movsd	%xmm1, 24(%rsp)         # 8-byte Spill
	movl	grid_points(%rip), %ecx
	movq	%r12, 8(%rsp)           # 8-byte Spill
	xorl	%ebp, %ebp
.Ltmp1335:
	.p2align	4, 0x90
.LBB18_5:                               # %for.body8
                                        #   Parent Loop BB18_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB18_7 Depth 3
	#DEBUG_VALUE: error_norm:i <- 0
	.loc	21 54 7 is_stmt 0 discriminator 1 # error.c:54:7
	testl	%ecx, %ecx
	jle	.LBB18_9
.Ltmp1336:
# BB#6:                                 #   in Loop: Header=BB18_5 Depth=2
	.loc	21 53 13 is_stmt 1      # error.c:53:13
	cvtsi2sdl	%ebp, %xmm0
	.loc	21 53 23 is_stmt 0      # error.c:53:23
	mulsd	dnym1(%rip), %xmm0
.Ltmp1337:
	#DEBUG_VALUE: error_norm:eta <- %XMM0
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp1338:
	#DEBUG_VALUE: error_norm:eta <- [%RSP+0]
	movq	%r12, %r13
	xorl	%r15d, %r15d
.Ltmp1339:
	.p2align	4, 0x90
.LBB18_7:                               # %for.body15
                                        #   Parent Loop BB18_3 Depth=1
                                        #     Parent Loop BB18_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	21 55 14 is_stmt 1      # error.c:55:14
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r15d, %xmm0
	.loc	21 55 24 is_stmt 0      # error.c:55:24
	mulsd	dnxm1(%rip), %xmm0
.Ltmp1340:
	#DEBUG_VALUE: error_norm:xi <- %XMM0
	.loc	21 56 9 is_stmt 1       # error.c:56:9
	movsd	(%rsp), %xmm1           # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	24(%rsp), %xmm2         # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movq	%r14, %rdi
	callq	exact_solution
	#DEBUG_VALUE: error_norm:m <- 0
.Ltmp1341:
	.loc	21 59 17                # error.c:59:17
	movsd	-32(%r13), %xmm0        # xmm0 = mem[0],zero
.Ltmp1342:
	.loc	21 59 30 is_stmt 0      # error.c:59:30
	subsd	32(%rsp), %xmm0
.Ltmp1343:
	#DEBUG_VALUE: error_norm:add <- %XMM0
	.loc	21 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm0, %xmm0
.Ltmp1344:
	.loc	21 60 27 is_stmt 0      # error.c:60:27
	addsd	(%rbx), %xmm0
	.loc	21 60 18                # error.c:60:18
	movsd	%xmm0, (%rbx)
	.loc	21 59 17 is_stmt 1      # error.c:59:17
	movsd	-24(%r13), %xmm1        # xmm1 = mem[0],zero
	.loc	21 59 30 is_stmt 0      # error.c:59:30
	subsd	40(%rsp), %xmm1
	.loc	21 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	21 60 27 is_stmt 0      # error.c:60:27
	addsd	8(%rbx), %xmm1
	.loc	21 60 18                # error.c:60:18
	movsd	%xmm1, 8(%rbx)
	.loc	21 59 17 is_stmt 1      # error.c:59:17
	movsd	-16(%r13), %xmm1        # xmm1 = mem[0],zero
	.loc	21 59 30 is_stmt 0      # error.c:59:30
	subsd	48(%rsp), %xmm1
	.loc	21 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	21 60 27 is_stmt 0      # error.c:60:27
	addsd	16(%rbx), %xmm1
	.loc	21 60 18                # error.c:60:18
	movsd	%xmm1, 16(%rbx)
	.loc	21 59 17 is_stmt 1      # error.c:59:17
	movsd	-8(%r13), %xmm1         # xmm1 = mem[0],zero
	.loc	21 59 30 is_stmt 0      # error.c:59:30
	subsd	56(%rsp), %xmm1
	.loc	21 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	21 60 27 is_stmt 0      # error.c:60:27
	addsd	24(%rbx), %xmm1
	.loc	21 60 18                # error.c:60:18
	movsd	%xmm1, 24(%rbx)
	.loc	21 59 17 is_stmt 1      # error.c:59:17
	movsd	(%r13), %xmm1           # xmm1 = mem[0],zero
	.loc	21 59 30 is_stmt 0      # error.c:59:30
	subsd	64(%rsp), %xmm1
	.loc	21 60 32 is_stmt 1      # error.c:60:32
	mulsd	%xmm1, %xmm1
	.loc	21 60 27 is_stmt 0      # error.c:60:27
	addsd	32(%rbx), %xmm1
	.loc	21 60 18                # error.c:60:18
	movsd	%xmm1, 32(%rbx)
.Ltmp1345:
	.loc	21 54 7 is_stmt 1 discriminator 1 # error.c:54:7
	incq	%r15
	.loc	21 54 21 is_stmt 0 discriminator 1 # error.c:54:21
	movslq	grid_points(%rip), %rcx
	addq	$40, %r13
	cmpq	%rcx, %r15
	.loc	21 54 7 discriminator 1 # error.c:54:7
	jl	.LBB18_7
.Ltmp1346:
# BB#8:                                 # %for.inc45.loopexit
                                        #   in Loop: Header=BB18_5 Depth=2
	.loc	21 52 22 is_stmt 1 discriminator 1 # error.c:52:22
	movl	grid_points+4(%rip), %eax
.LBB18_9:                               # %for.inc45
                                        #   in Loop: Header=BB18_5 Depth=2
	.loc	21 52 5 is_stmt 0 discriminator 1 # error.c:52:5
	incq	%rbp
	.loc	21 52 19 discriminator 1 # error.c:52:19
	movslq	%eax, %rdx
	.loc	21 52 5 discriminator 1 # error.c:52:5
	addq	$2600, %r12             # imm = 0xA28
	.loc	21 52 19 discriminator 1 # error.c:52:19
	cmpq	%rdx, %rbp
	jl	.LBB18_5
.Ltmp1347:
# BB#10:                                # %for.inc48.loopexit
                                        #   in Loop: Header=BB18_3 Depth=1
	.loc	21 50 20 is_stmt 1 discriminator 1 # error.c:50:20
	movl	grid_points+8(%rip), %ecx
	movq	16(%rsp), %rsi          # 8-byte Reload
	movq	8(%rsp), %r12           # 8-byte Reload
.LBB18_11:                              # %for.inc48
                                        #   in Loop: Header=BB18_3 Depth=1
	.loc	21 50 3 is_stmt 0 discriminator 1 # error.c:50:3
	incq	%rsi
	.loc	21 50 17 discriminator 1 # error.c:50:17
	movslq	%ecx, %rdx
	.loc	21 50 3 discriminator 1 # error.c:50:3
	addq	$169000, %r12           # imm = 0x29428
	.loc	21 50 17 discriminator 1 # error.c:50:17
	cmpq	%rdx, %rsi
	jl	.LBB18_3
	jmp	.LBB18_12
.Ltmp1348:
.LBB18_1:                               # %entry.for.cond55.preheader.preheader_crit_edge
	#DEBUG_VALUE: error_norm:rms <- %RBX
	.loc	21 68 34 is_stmt 1      # error.c:68:34
	movl	grid_points+4(%rip), %eax
.Ltmp1349:
.LBB18_12:                              # %for.cond55.preheader.preheader
	movl	grid_points(%rip), %edx
	.loc	21 68 48 is_stmt 0      # error.c:68:48
	addl	$-2, %edx
	.loc	21 68 25                # error.c:68:25
	cvtsi2sdl	%edx, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %ecx
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%ecx, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 14                # error.c:68:14
	movsd	%xmm0, (%rbx)
.Ltmp1350:
	.loc	21 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_14
# BB#13:                                # %call.sqrt
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_14:                              # %for.cond55.preheader.preheader.split
	movsd	%xmm1, (%rbx)
.Ltmp1351:
	.loc	21 68 16 is_stmt 1      # error.c:68:16
	movsd	8(%rbx), %xmm0          # xmm0 = mem[0],zero
	.loc	21 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 14                # error.c:68:14
	movsd	%xmm0, 8(%rbx)
.Ltmp1352:
	.loc	21 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_16
# BB#15:                                # %call.sqrt10
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_16:                              # %for.cond55.preheader.preheader.split.split
	movsd	%xmm1, 8(%rbx)
.Ltmp1353:
	.loc	21 68 16 is_stmt 1      # error.c:68:16
	movsd	16(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	21 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 14                # error.c:68:14
	movsd	%xmm0, 16(%rbx)
.Ltmp1354:
	.loc	21 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_18
# BB#17:                                # %call.sqrt11
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_18:                              # %for.cond55.preheader.preheader.split.split.split
	movsd	%xmm1, 16(%rbx)
.Ltmp1355:
	.loc	21 68 16 is_stmt 1      # error.c:68:16
	movsd	24(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	21 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 14                # error.c:68:14
	movsd	%xmm0, 24(%rbx)
.Ltmp1356:
	.loc	21 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_20
# BB#19:                                # %call.sqrt12
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_20:                              # %for.cond55.preheader.preheader.split.split.split.split
	movsd	%xmm1, 24(%rbx)
.Ltmp1357:
	.loc	21 68 16 is_stmt 1      # error.c:68:16
	movsd	32(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	21 68 34 is_stmt 0      # error.c:68:34
	movl	grid_points(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+4(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 34                # error.c:68:34
	movl	grid_points+8(%rip), %eax
	.loc	21 68 48                # error.c:68:48
	addl	$-2, %eax
	.loc	21 68 25                # error.c:68:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 68 23                # error.c:68:23
	divsd	%xmm1, %xmm0
	.loc	21 68 14                # error.c:68:14
	movsd	%xmm0, 32(%rbx)
.Ltmp1358:
	.loc	21 70 14 is_stmt 1      # error.c:70:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 70 12 is_stmt 0      # error.c:70:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB18_22
# BB#21:                                # %call.sqrt13
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB18_22:                              # %for.cond55.preheader.preheader.split.split.split.split.split
	movsd	%xmm1, 32(%rbx)
.Ltmp1359:
	.loc	21 72 1 is_stmt 1       # error.c:72:1
	addq	$72, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1360:
.Lfunc_end18:
	.size	error_norm, .Lfunc_end18-error_norm
	.cfi_endproc

	.globl	rhs_norm
	.p2align	4, 0x90
	.type	rhs_norm,@function
rhs_norm:                               # @rhs_norm
.Lfunc_begin19:
	.loc	21 76 0                 # error.c:76:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1361:
	.cfi_def_cfa_offset 16
.Ltmp1362:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: rhs_norm:rms <- %RDI
	movq	%rdi, %rbx
.Ltmp1363:
	#DEBUG_VALUE: rhs_norm:m <- 0
	#DEBUG_VALUE: rhs_norm:rms <- %RBX
	.loc	21 81 12 prologue_end   # error.c:81:12
	xorpd	%xmm0, %xmm0
	movupd	%xmm0, 16(%rbx)
	movupd	%xmm0, (%rbx)
	movq	$0, 32(%rbx)
.Ltmp1364:
	.loc	21 88 17                # error.c:88:17
	movslq	nz2(%rip), %r8
.Ltmp1365:
	.loc	21 84 20 discriminator 1 # error.c:84:20
	testq	%r8, %r8
	xorpd	%xmm0, %xmm0
	jle	.LBB19_8
.Ltmp1366:
# BB#1:                                 # %for.cond4.preheader.lr.ph
	#DEBUG_VALUE: rhs_norm:rms <- %RBX
	.loc	21 85 22 discriminator 1 # error.c:85:22
	movl	ny2(%rip), %r11d
	.loc	21 85 19 is_stmt 0 discriminator 1 # error.c:85:19
	testl	%r11d, %r11d
	jle	.LBB19_8
.Ltmp1367:
# BB#2:                                 # %for.cond7.preheader.lr.ph.preheader
	#DEBUG_VALUE: rhs_norm:rms <- %RBX
	.loc	21 86 24 is_stmt 1 discriminator 1 # error.c:86:24
	movl	nx2(%rip), %edi
.Ltmp1368:
	.loc	21 88 17                # error.c:88:17
	incl	%r11d
	xorpd	%xmm1, %xmm1
	movl	$1, %r9d
	movl	$rhs+171672, %r10d
	xorpd	%xmm2, %xmm2
	xorpd	%xmm3, %xmm3
	xorpd	%xmm4, %xmm4
	xorpd	%xmm0, %xmm0
.Ltmp1369:
	.p2align	4, 0x90
.LBB19_3:                               # %for.cond7.preheader.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB19_4 Depth 2
                                        #       Child Loop BB19_5 Depth 3
	testl	%edi, %edi
	movq	%r10, %rcx
	movl	$1, %esi
	jle	.LBB19_7
	.p2align	4, 0x90
.LBB19_4:                               # %for.cond10.preheader.lr.ph
                                        #   Parent Loop BB19_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB19_5 Depth 3
	.loc	21 89 20                # error.c:89:20
	movl	%edi, %edx
	movq	%rcx, %rax
	.p2align	4, 0x90
.LBB19_5:                               # %for.cond10.preheader
                                        #   Parent Loop BB19_3 Depth=1
                                        #     Parent Loop BB19_4 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	21 88 17                # error.c:88:17
	movsd	-32(%rax), %xmm5        # xmm5 = mem[0],zero
.Ltmp1370:
	#DEBUG_VALUE: rhs_norm:add <- %XMM5
	.loc	21 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
.Ltmp1371:
	.loc	21 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm0
	.loc	21 89 18                # error.c:89:18
	movsd	%xmm0, (%rbx)
	.loc	21 88 17 is_stmt 1      # error.c:88:17
	movsd	-24(%rax), %xmm5        # xmm5 = mem[0],zero
	.loc	21 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	21 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm4
	.loc	21 89 18                # error.c:89:18
	movsd	%xmm4, 8(%rbx)
	.loc	21 88 17 is_stmt 1      # error.c:88:17
	movsd	-16(%rax), %xmm5        # xmm5 = mem[0],zero
	.loc	21 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	21 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm3
	.loc	21 89 18                # error.c:89:18
	movsd	%xmm3, 16(%rbx)
	.loc	21 88 17 is_stmt 1      # error.c:88:17
	movsd	-8(%rax), %xmm5         # xmm5 = mem[0],zero
	.loc	21 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	21 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm2
	.loc	21 89 18                # error.c:89:18
	movsd	%xmm2, 24(%rbx)
	.loc	21 88 17 is_stmt 1      # error.c:88:17
	movsd	(%rax), %xmm5           # xmm5 = mem[0],zero
	.loc	21 89 32                # error.c:89:32
	mulsd	%xmm5, %xmm5
	.loc	21 89 27 is_stmt 0      # error.c:89:27
	addsd	%xmm5, %xmm1
	.loc	21 89 18                # error.c:89:18
	movsd	%xmm1, 32(%rbx)
.Ltmp1372:
	.loc	21 86 7 is_stmt 1 discriminator 1 # error.c:86:7
	addq	$40, %rax
	decl	%edx
	jne	.LBB19_5
.Ltmp1373:
# BB#6:                                 # %for.inc32
                                        #   in Loop: Header=BB19_4 Depth=2
	.loc	21 85 5 discriminator 1 # error.c:85:5
	incq	%rsi
	addq	$2600, %rcx             # imm = 0xA28
	cmpl	%r11d, %esi
	jne	.LBB19_4
.Ltmp1374:
.LBB19_7:                               # %for.inc35
                                        #   in Loop: Header=BB19_3 Depth=1
	.loc	21 84 3 discriminator 1 # error.c:84:3
	addq	$169000, %r10           # imm = 0x29428
	.loc	21 84 17 is_stmt 0 discriminator 1 # error.c:84:17
	cmpq	%r8, %r9
	.loc	21 84 3 discriminator 1 # error.c:84:3
	leaq	1(%r9), %r9
	jl	.LBB19_3
.Ltmp1375:
.LBB19_8:                               # %for.cond41.preheader.preheader
	.loc	21 97 34 is_stmt 1      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	21 97 48 is_stmt 0      # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 14                # error.c:97:14
	movsd	%xmm0, (%rbx)
.Ltmp1376:
	.loc	21 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB19_10
# BB#9:                                 # %call.sqrt
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB19_10:                              # %for.cond41.preheader.preheader.split
	movsd	%xmm1, (%rbx)
.Ltmp1377:
	.loc	21 97 16 is_stmt 1      # error.c:97:16
	movsd	8(%rbx), %xmm0          # xmm0 = mem[0],zero
	.loc	21 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 14                # error.c:97:14
	movsd	%xmm0, 8(%rbx)
.Ltmp1378:
	.loc	21 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB19_12
# BB#11:                                # %call.sqrt11
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB19_12:                              # %for.cond41.preheader.preheader.split.split
	movsd	%xmm1, 8(%rbx)
.Ltmp1379:
	.loc	21 97 16 is_stmt 1      # error.c:97:16
	movsd	16(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	21 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 14                # error.c:97:14
	movsd	%xmm0, 16(%rbx)
.Ltmp1380:
	.loc	21 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB19_14
# BB#13:                                # %call.sqrt12
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB19_14:                              # %for.cond41.preheader.preheader.split.split.split
	movsd	%xmm1, 16(%rbx)
.Ltmp1381:
	.loc	21 97 16 is_stmt 1      # error.c:97:16
	movsd	24(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	21 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 14                # error.c:97:14
	movsd	%xmm0, 24(%rbx)
.Ltmp1382:
	.loc	21 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB19_16
# BB#15:                                # %call.sqrt13
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB19_16:                              # %for.cond41.preheader.preheader.split.split.split.split
	movsd	%xmm1, 24(%rbx)
.Ltmp1383:
	.loc	21 97 16 is_stmt 1      # error.c:97:16
	movsd	32(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	21 97 34 is_stmt 0      # error.c:97:34
	movl	grid_points(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+4(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 34                # error.c:97:34
	movl	grid_points+8(%rip), %eax
	.loc	21 97 48                # error.c:97:48
	addl	$-2, %eax
	.loc	21 97 25                # error.c:97:25
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	21 97 23                # error.c:97:23
	divsd	%xmm1, %xmm0
	.loc	21 97 14                # error.c:97:14
	movsd	%xmm0, 32(%rbx)
.Ltmp1384:
	.loc	21 99 14 is_stmt 1      # error.c:99:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	21 99 12 is_stmt 0      # error.c:99:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB19_18
# BB#17:                                # %call.sqrt14
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB19_18:                              # %for.cond41.preheader.preheader.split.split.split.split.split
	movsd	%xmm1, 32(%rbx)
.Ltmp1385:
	.loc	21 101 1 is_stmt 1      # error.c:101:1
	popq	%rbx
	retq
.Ltmp1386:
.Lfunc_end19:
	.size	rhs_norm, .Lfunc_end19-rhs_norm
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI20_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	print_results
	.p2align	4, 0x90
	.type	print_results,@function
print_results:                          # @print_results
.Lfunc_begin20:
	.file	22 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/print_results.c"
	.loc	22 10 0                 # print_results.c:10:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1387:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1388:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1389:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1390:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1391:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1392:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp1393:
	.cfi_def_cfa_offset 96
.Ltmp1394:
	.cfi_offset %rbx, -56
.Ltmp1395:
	.cfi_offset %r12, -48
.Ltmp1396:
	.cfi_offset %r13, -40
.Ltmp1397:
	.cfi_offset %r14, -32
.Ltmp1398:
	.cfi_offset %r15, -24
.Ltmp1399:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: print_results:name <- %RDI
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:n1 <- %EDX
	#DEBUG_VALUE: print_results:n2 <- %ECX
	#DEBUG_VALUE: print_results:n3 <- %R8D
	#DEBUG_VALUE: print_results:niter <- %R9D
	#DEBUG_VALUE: print_results:t <- %XMM0
	#DEBUG_VALUE: print_results:mops <- %XMM1
	movsd	%xmm1, 8(%rsp)          # 8-byte Spill
.Ltmp1400:
	#DEBUG_VALUE: print_results:mops <- [%RSP+8]
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp1401:
	#DEBUG_VALUE: print_results:t <- [%RSP+0]
	movl	%r9d, %r14d
.Ltmp1402:
	#DEBUG_VALUE: print_results:niter <- %R14D
	movl	%r8d, %r12d
.Ltmp1403:
	#DEBUG_VALUE: print_results:n3 <- %R12D
	movl	%ecx, %r13d
.Ltmp1404:
	#DEBUG_VALUE: print_results:n2 <- %R13D
	movl	%edx, %r15d
.Ltmp1405:
	#DEBUG_VALUE: print_results:n1 <- %R15D
	movl	%esi, %ebx
.Ltmp1406:
	#DEBUG_VALUE: print_results:class <- %EBX
	movq	%rdi, %rbp
	#DEBUG_VALUE: print_results:optype <- undef
	#DEBUG_VALUE: print_results:verified <- undef
.Ltmp1407:
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	22 14 3 prologue_end    # print_results.c:14:3
	movl	$.L.str.17, %edi
	xorl	%eax, %eax
	movq	%rbp, %rsi
	callq	printf
.Ltmp1408:
	.loc	22 15 3                 # print_results.c:15:3
	movl	$.L.str.1.18, %edi
	xorl	%eax, %eax
	movl	%ebx, %esi
.Ltmp1409:
	#DEBUG_VALUE: print_results:class <- %ESI
	callq	printf
.Ltmp1410:
	.loc	22 22 20                # print_results.c:22:20
	movl	%r12d, %eax
	orl	%r13d, %eax
	je	.LBB20_1
.Ltmp1411:
# BB#7:                                 # %if.else30
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	22 36 5                 # print_results.c:36:5
	movl	$.L.str.5.22, %edi
	xorl	%eax, %eax
	movl	%r15d, %esi
.Ltmp1412:
	movl	%r13d, %edx
	movl	%r12d, %ecx
	callq	printf
	jmp	.LBB20_8
.Ltmp1413:
.LBB20_1:                               # %if.then
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	22 23 29                # print_results.c:23:29
	movzbl	(%rbp), %eax
	cmpl	$69, %eax
	jne	.LBB20_6
.Ltmp1414:
# BB#2:                                 # %land.lhs.true8
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:class <- %ESI
	.loc	22 23 10 is_stmt 0 discriminator 1 # print_results.c:23:10
	movzbl	1(%rbp), %eax
	cmpl	$80, %eax
	jne	.LBB20_6
.Ltmp1415:
# BB#3:                                 # %if.then13
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	22 24 33 is_stmt 1      # print_results.c:24:33
	movsd	.LCPI20_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movl	%r15d, %edi
	callq	ldexp
	leaq	16(%rsp), %rdi
	.loc	22 24 7 is_stmt 0 discriminator 1 # print_results.c:24:7
	movl	$.L.str.2.19, %esi
.Ltmp1416:
	movb	$1, %al
	callq	sprintf
	movl	$15, %eax
.Ltmp1417:
	#DEBUG_VALUE: print_results:j <- 14
	.loc	22 26 12 is_stmt 1      # print_results.c:26:12
	movzbl	30(%rsp), %ecx
	cmpl	$46, %ecx
	jne	.LBB20_5
.Ltmp1418:
# BB#4:                                 # %if.then21
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	22 27 17                # print_results.c:27:17
	movb	$32, 30(%rsp)
	movl	$14, %eax
.Ltmp1419:
	#DEBUG_VALUE: print_results:j <- 13
.LBB20_5:                               # %if.end
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	22 30 17                # print_results.c:30:17
	movb	$0, 16(%rsp,%rax)
	leaq	16(%rsp), %rsi
	.loc	22 31 7                 # print_results.c:31:7
	movl	$.L.str.3.20, %edi
	xorl	%eax, %eax
	callq	printf
	jmp	.LBB20_8
.Ltmp1420:
.LBB20_6:                               # %if.else
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:class <- %ESI
	.loc	22 33 7                 # print_results.c:33:7
	movl	$.L.str.4.21, %edi
	xorl	%eax, %eax
	movl	%r15d, %esi
.Ltmp1421:
	callq	printf
.Ltmp1422:
.LBB20_8:                               # %if.end32
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:cs7 <- undef
	movq	168(%rsp), %r12
.Ltmp1423:
	#DEBUG_VALUE: print_results:cs6 <- %R12
	movq	160(%rsp), %r13
.Ltmp1424:
	#DEBUG_VALUE: print_results:cs5 <- %R13
	movq	152(%rsp), %r15
.Ltmp1425:
	#DEBUG_VALUE: print_results:cs4 <- %R15
	movq	144(%rsp), %rbp
.Ltmp1426:
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	movq	136(%rsp), %rbx
	#DEBUG_VALUE: print_results:npbversion <- undef
	#DEBUG_VALUE: print_results:compiletime <- undef
	#DEBUG_VALUE: print_results:cs1 <- undef
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	.loc	22 39 3                 # print_results.c:39:3
	movl	$.L.str.6.23, %edi
	xorl	%eax, %eax
	movl	%r14d, %esi
	callq	printf
	.loc	22 40 3                 # print_results.c:40:3
	movl	$.L.str.7.24, %edi
	movb	$1, %al
	movsd	(%rsp), %xmm0           # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	printf
	.loc	22 41 3                 # print_results.c:41:3
	movl	$.L.str.8.25, %edi
	movb	$1, %al
	movsd	8(%rsp), %xmm0          # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	printf
	.loc	22 42 3                 # print_results.c:42:3
	movl	$.L.str.9.26, %edi
	xorl	%eax, %eax
	movq	96(%rsp), %rsi
	callq	printf
.Ltmp1427:
	.loc	22 46 5                 # print_results.c:46:5
	movl	$.L.str.10.27, %edi
	.loc	22 43 8                 # print_results.c:43:8
	cmpl	$0, 104(%rsp)
.Ltmp1428:
	.loc	22 43 8 is_stmt 0       # print_results.c:43:8
	je	.LBB20_10
.Ltmp1429:
# BB#9:                                 # %if.then37
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs6 <- %R12
	.loc	22 44 5 is_stmt 1       # print_results.c:44:5
	movl	$.L.str.11.28, %esi
	jmp	.LBB20_11
.Ltmp1430:
.LBB20_10:                              # %if.else39
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs6 <- %R12
	.loc	22 46 5                 # print_results.c:46:5
	movl	$.L.str.12.29, %esi
.Ltmp1431:
.LBB20_11:                              # %if.end41
	#DEBUG_VALUE: print_results:cs6 <- %R12
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:niter <- %R14D
	xorl	%eax, %eax
	callq	printf
	movq	176(%rsp), %r14
.Ltmp1432:
	movq	112(%rsp), %rsi
.Ltmp1433:
	.loc	22 47 3                 # print_results.c:47:3
	movl	$.L.str.13.30, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	22 48 3                 # print_results.c:48:3
	movl	$.L.str.14.31, %edi
	xorl	%eax, %eax
	movq	120(%rsp), %rsi
	callq	printf
	.loc	22 50 3                 # print_results.c:50:3
	movl	$.L.str.15.32, %edi
	xorl	%eax, %eax
	movq	128(%rsp), %rsi
	callq	printf
	.loc	22 52 3                 # print_results.c:52:3
	movl	$.L.str.16.33, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	callq	printf
	.loc	22 53 3                 # print_results.c:53:3
	movl	$.L.str.17.34, %edi
	xorl	%eax, %eax
	movq	%rbp, %rsi
	callq	printf
	.loc	22 54 3                 # print_results.c:54:3
	movl	$.L.str.18.35, %edi
	xorl	%eax, %eax
	movq	%r15, %rsi
	callq	printf
	.loc	22 55 3                 # print_results.c:55:3
	movl	$.L.str.19, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	callq	printf
	.loc	22 56 3                 # print_results.c:56:3
	movl	$.L.str.20.36, %edi
	xorl	%eax, %eax
	movq	%r12, %rsi
	callq	printf
	.loc	22 57 3                 # print_results.c:57:3
	movl	$.L.str.21.37, %edi
	xorl	%eax, %eax
	movq	%r14, %rsi
	callq	printf
	.loc	22 59 3                 # print_results.c:59:3
	movl	$.Lstr.38, %edi
	callq	puts
	.loc	22 65 1                 # print_results.c:65:1
	addq	$40, %rsp
	popq	%rbx
.Ltmp1434:
	popq	%r12
.Ltmp1435:
	popq	%r13
.Ltmp1436:
	popq	%r14
	popq	%r15
.Ltmp1437:
	popq	%rbp
.Ltmp1438:
	retq
.Ltmp1439:
.Lfunc_end20:
	.size	print_results, .Lfunc_end20-print_results
	.cfi_endproc

	.globl	timer_clear
	.p2align	4, 0x90
	.type	timer_clear,@function
timer_clear:                            # @timer_clear
.Lfunc_begin21:
	.loc	4 26 0                  # c_timers.c:26:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: timer_clear:n <- %EDI
	.loc	4 27 5 prologue_end     # c_timers.c:27:5
	movslq	%edi, %rax
	.loc	4 27 16 is_stmt 0       # c_timers.c:27:16
	movq	$0, elapsed(,%rax,8)
	.loc	4 28 1 is_stmt 1        # c_timers.c:28:1
	retq
.Ltmp1440:
.Lfunc_end21:
	.size	timer_clear, .Lfunc_end21-timer_clear
	.cfi_endproc

	.globl	timer_start
	.p2align	4, 0x90
	.type	timer_start,@function
timer_start:                            # @timer_start
.Lfunc_begin22:
	.loc	4 35 0                  # c_timers.c:35:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1441:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1442:
	.cfi_def_cfa_offset 32
.Ltmp1443:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: timer_start:n <- %EDI
	movl	%edi, %ebx
.Ltmp1444:
	#DEBUG_VALUE: timer_start:n <- %EBX
	leaq	8(%rsp), %rdi
.Ltmp1445:
	#DEBUG_VALUE: elapsed_time:t <- [%RDI+0]
	.loc	4 15 5 prologue_end     # c_timers.c:15:5
	callq	wtime_
	.loc	4 16 13                 # c_timers.c:16:13
	movq	8(%rsp), %rax
.Ltmp1446:
	.loc	4 36 5                  # c_timers.c:36:5
	movslq	%ebx, %rcx
	.loc	4 36 14 is_stmt 0       # c_timers.c:36:14
	movq	%rax, start(,%rcx,8)
	.loc	4 37 1 is_stmt 1        # c_timers.c:37:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1447:
	retq
.Ltmp1448:
.Lfunc_end22:
	.size	timer_start, .Lfunc_end22-timer_start
	.cfi_endproc

	.globl	timer_stop
	.p2align	4, 0x90
	.type	timer_stop,@function
timer_stop:                             # @timer_stop
.Lfunc_begin23:
	.loc	4 44 0                  # c_timers.c:44:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1449:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1450:
	.cfi_def_cfa_offset 32
.Ltmp1451:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: timer_stop:n <- %EDI
	movl	%edi, %ebx
.Ltmp1452:
	#DEBUG_VALUE: timer_stop:n <- %EBX
	leaq	8(%rsp), %rdi
.Ltmp1453:
	#DEBUG_VALUE: elapsed_time:t <- [%RDI+0]
	.loc	4 15 5 prologue_end     # c_timers.c:15:5
	callq	wtime_
	.loc	4 16 13                 # c_timers.c:16:13
	movsd	8(%rsp), %xmm0          # xmm0 = mem[0],zero
.Ltmp1454:
	#DEBUG_VALUE: elapsed_time:t <- %XMM0
	#DEBUG_VALUE: timer_stop:now <- %XMM0
	.loc	4 48 15                 # c_timers.c:48:15
	movslq	%ebx, %rax
	.loc	4 48 13 is_stmt 0       # c_timers.c:48:13
	subsd	start(,%rax,8), %xmm0
.Ltmp1455:
	#DEBUG_VALUE: timer_stop:t <- %XMM0
	.loc	4 49 16 is_stmt 1       # c_timers.c:49:16
	addsd	elapsed(,%rax,8), %xmm0
.Ltmp1456:
	movsd	%xmm0, elapsed(,%rax,8)
	.loc	4 51 1                  # c_timers.c:51:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1457:
	retq
.Ltmp1458:
.Lfunc_end23:
	.size	timer_stop, .Lfunc_end23-timer_stop
	.cfi_endproc

	.globl	timer_read
	.p2align	4, 0x90
	.type	timer_read,@function
timer_read:                             # @timer_read
.Lfunc_begin24:
	.loc	4 58 0                  # c_timers.c:58:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: timer_read:n <- %EDI
	.loc	4 59 13 prologue_end    # c_timers.c:59:13
	movslq	%edi, %rax
	movsd	elapsed(,%rax,8), %xmm0 # xmm0 = mem[0],zero
	.loc	4 59 5 is_stmt 0        # c_timers.c:59:5
	retq
.Ltmp1459:
.Lfunc_end24:
	.size	timer_read, .Lfunc_end24-timer_read
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI25_0:
	.quad	4517329193108106637     # double 9.9999999999999995E-7
	.text
	.globl	wtime_
	.p2align	4, 0x90
	.type	wtime_,@function
wtime_:                                 # @wtime_
.Lfunc_begin25:
	.loc	5 8 0 is_stmt 1         # ../common/wtime.c:8:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1460:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1461:
	.cfi_def_cfa_offset 32
.Ltmp1462:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: wtime_:t <- %RDI
	movq	%rdi, %rbx
.Ltmp1463:
	#DEBUG_VALUE: wtime_:t <- %RBX
	leaq	(%rsp), %rdi
.Ltmp1464:
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	.loc	5 11 3 prologue_end     # ../common/wtime.c:11:3
	xorl	%esi, %esi
	callq	gettimeofday
.Ltmp1465:
	.loc	5 12 7                  # ../common/wtime.c:12:7
	movl	wtime_.sec(%rip), %ecx
	.loc	5 12 25 is_stmt 0 discriminator 1 # ../common/wtime.c:12:25
	movq	(%rsp), %rax
.Ltmp1466:
	.loc	5 12 7                  # ../common/wtime.c:12:7
	testl	%ecx, %ecx
	jns	.LBB25_2
.Ltmp1467:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	#DEBUG_VALUE: wtime_:t <- %RBX
	.loc	5 12 20 discriminator 1 # ../common/wtime.c:12:20
	movl	%eax, wtime_.sec(%rip)
.Ltmp1468:
	.loc	5 13 21 is_stmt 1       # ../common/wtime.c:13:21
	movl	%eax, %ecx
.Ltmp1469:
.LBB25_2:                               # %if.end
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	#DEBUG_VALUE: wtime_:t <- %RBX
	movslq	%ecx, %rcx
	.loc	5 13 19 is_stmt 0       # ../common/wtime.c:13:19
	subq	%rcx, %rax
	.loc	5 13 8                  # ../common/wtime.c:13:8
	cvtsi2sdq	%rax, %xmm0
	.loc	5 13 35                 # ../common/wtime.c:13:35
	cvtsi2sdq	8(%rsp), %xmm1
	.loc	5 13 34                 # ../common/wtime.c:13:34
	mulsd	.LCPI25_0(%rip), %xmm1
	.loc	5 13 26                 # ../common/wtime.c:13:26
	addsd	%xmm0, %xmm1
	.loc	5 13 6                  # ../common/wtime.c:13:6
	movsd	%xmm1, (%rbx)
	.loc	5 14 1 is_stmt 1        # ../common/wtime.c:14:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1470:
	retq
.Ltmp1471:
.Lfunc_end25:
	.size	wtime_, .Lfunc_end25-wtime_
	.cfi_endproc

	.type	timeron,@object         # @timeron
	.comm	timeron,4,4
	.type	dt,@object              # @dt
	.comm	dt,8,8
	.type	grid_points,@object     # @grid_points
	.comm	grid_points,12,4
	.type	nx2,@object             # @nx2
	.comm	nx2,4,4
	.type	ny2,@object             # @ny2
	.comm	ny2,4,4
	.type	nz2,@object             # @nz2
	.comm	nz2,4,4
	.type	tx1,@object             # @tx1
	.comm	tx1,8,8
	.type	tx2,@object             # @tx2
	.comm	tx2,8,8
	.type	tx3,@object             # @tx3
	.comm	tx3,8,8
	.type	ty1,@object             # @ty1
	.comm	ty1,8,8
	.type	ty2,@object             # @ty2
	.comm	ty2,8,8
	.type	ty3,@object             # @ty3
	.comm	ty3,8,8
	.type	tz1,@object             # @tz1
	.comm	tz1,8,8
	.type	tz2,@object             # @tz2
	.comm	tz2,8,8
	.type	tz3,@object             # @tz3
	.comm	tz3,8,8
	.type	dx1,@object             # @dx1
	.comm	dx1,8,8
	.type	dx2,@object             # @dx2
	.comm	dx2,8,8
	.type	dx3,@object             # @dx3
	.comm	dx3,8,8
	.type	dx4,@object             # @dx4
	.comm	dx4,8,8
	.type	dx5,@object             # @dx5
	.comm	dx5,8,8
	.type	dy1,@object             # @dy1
	.comm	dy1,8,8
	.type	dy2,@object             # @dy2
	.comm	dy2,8,8
	.type	dy3,@object             # @dy3
	.comm	dy3,8,8
	.type	dy4,@object             # @dy4
	.comm	dy4,8,8
	.type	dy5,@object             # @dy5
	.comm	dy5,8,8
	.type	dz1,@object             # @dz1
	.comm	dz1,8,8
	.type	dz2,@object             # @dz2
	.comm	dz2,8,8
	.type	dz3,@object             # @dz3
	.comm	dz3,8,8
	.type	dz4,@object             # @dz4
	.comm	dz4,8,8
	.type	dz5,@object             # @dz5
	.comm	dz5,8,8
	.type	dssp,@object            # @dssp
	.comm	dssp,8,8
	.type	ce,@object              # @ce
	.comm	ce,520,16
	.type	dxmax,@object           # @dxmax
	.comm	dxmax,8,8
	.type	dymax,@object           # @dymax
	.comm	dymax,8,8
	.type	dzmax,@object           # @dzmax
	.comm	dzmax,8,8
	.type	xxcon1,@object          # @xxcon1
	.comm	xxcon1,8,8
	.type	xxcon2,@object          # @xxcon2
	.comm	xxcon2,8,8
	.type	xxcon3,@object          # @xxcon3
	.comm	xxcon3,8,8
	.type	xxcon4,@object          # @xxcon4
	.comm	xxcon4,8,8
	.type	xxcon5,@object          # @xxcon5
	.comm	xxcon5,8,8
	.type	dx1tx1,@object          # @dx1tx1
	.comm	dx1tx1,8,8
	.type	dx2tx1,@object          # @dx2tx1
	.comm	dx2tx1,8,8
	.type	dx3tx1,@object          # @dx3tx1
	.comm	dx3tx1,8,8
	.type	dx4tx1,@object          # @dx4tx1
	.comm	dx4tx1,8,8
	.type	dx5tx1,@object          # @dx5tx1
	.comm	dx5tx1,8,8
	.type	yycon1,@object          # @yycon1
	.comm	yycon1,8,8
	.type	yycon2,@object          # @yycon2
	.comm	yycon2,8,8
	.type	yycon3,@object          # @yycon3
	.comm	yycon3,8,8
	.type	yycon4,@object          # @yycon4
	.comm	yycon4,8,8
	.type	yycon5,@object          # @yycon5
	.comm	yycon5,8,8
	.type	dy1ty1,@object          # @dy1ty1
	.comm	dy1ty1,8,8
	.type	dy2ty1,@object          # @dy2ty1
	.comm	dy2ty1,8,8
	.type	dy3ty1,@object          # @dy3ty1
	.comm	dy3ty1,8,8
	.type	dy4ty1,@object          # @dy4ty1
	.comm	dy4ty1,8,8
	.type	dy5ty1,@object          # @dy5ty1
	.comm	dy5ty1,8,8
	.type	zzcon1,@object          # @zzcon1
	.comm	zzcon1,8,8
	.type	zzcon2,@object          # @zzcon2
	.comm	zzcon2,8,8
	.type	zzcon3,@object          # @zzcon3
	.comm	zzcon3,8,8
	.type	zzcon4,@object          # @zzcon4
	.comm	zzcon4,8,8
	.type	zzcon5,@object          # @zzcon5
	.comm	zzcon5,8,8
	.type	dz1tz1,@object          # @dz1tz1
	.comm	dz1tz1,8,8
	.type	dz2tz1,@object          # @dz2tz1
	.comm	dz2tz1,8,8
	.type	dz3tz1,@object          # @dz3tz1
	.comm	dz3tz1,8,8
	.type	dz4tz1,@object          # @dz4tz1
	.comm	dz4tz1,8,8
	.type	dz5tz1,@object          # @dz5tz1
	.comm	dz5tz1,8,8
	.type	dnxm1,@object           # @dnxm1
	.comm	dnxm1,8,8
	.type	dnym1,@object           # @dnym1
	.comm	dnym1,8,8
	.type	dnzm1,@object           # @dnzm1
	.comm	dnzm1,8,8
	.type	c1c2,@object            # @c1c2
	.comm	c1c2,8,8
	.type	c1c5,@object            # @c1c5
	.comm	c1c5,8,8
	.type	c3c4,@object            # @c3c4
	.comm	c3c4,8,8
	.type	c1345,@object           # @c1345
	.comm	c1345,8,8
	.type	conz1,@object           # @conz1
	.comm	conz1,8,8
	.type	c1,@object              # @c1
	.comm	c1,8,8
	.type	c2,@object              # @c2
	.comm	c2,8,8
	.type	c3,@object              # @c3
	.comm	c3,8,8
	.type	c4,@object              # @c4
	.comm	c4,8,8
	.type	c5,@object              # @c5
	.comm	c5,8,8
	.type	c4dssp,@object          # @c4dssp
	.comm	c4dssp,8,8
	.type	c5dssp,@object          # @c5dssp
	.comm	c5dssp,8,8
	.type	dtdssp,@object          # @dtdssp
	.comm	dtdssp,8,8
	.type	dttx1,@object           # @dttx1
	.comm	dttx1,8,8
	.type	bt,@object              # @bt
	.comm	bt,8,8
	.type	dttx2,@object           # @dttx2
	.comm	dttx2,8,8
	.type	dtty1,@object           # @dtty1
	.comm	dtty1,8,8
	.type	dtty2,@object           # @dtty2
	.comm	dtty2,8,8
	.type	dttz1,@object           # @dttz1
	.comm	dttz1,8,8
	.type	dttz2,@object           # @dttz2
	.comm	dttz2,8,8
	.type	c2dttx1,@object         # @c2dttx1
	.comm	c2dttx1,8,8
	.type	c2dtty1,@object         # @c2dtty1
	.comm	c2dtty1,8,8
	.type	c2dttz1,@object         # @c2dttz1
	.comm	c2dttz1,8,8
	.type	comz1,@object           # @comz1
	.comm	comz1,8,8
	.type	comz4,@object           # @comz4
	.comm	comz4,8,8
	.type	comz5,@object           # @comz5
	.comm	comz5,8,8
	.type	comz6,@object           # @comz6
	.comm	comz6,8,8
	.type	c3c4tx3,@object         # @c3c4tx3
	.comm	c3c4tx3,8,8
	.type	c3c4ty3,@object         # @c3c4ty3
	.comm	c3c4ty3,8,8
	.type	c3c4tz3,@object         # @c3c4tz3
	.comm	c3c4tz3,8,8
	.type	c2iv,@object            # @c2iv
	.comm	c2iv,8,8
	.type	con43,@object           # @con43
	.comm	con43,8,8
	.type	con16,@object           # @con16
	.comm	con16,8,8
	.type	u,@object               # @u
	.comm	u,10816000,16
	.type	us,@object              # @us
	.comm	us,2163200,16
	.type	vs,@object              # @vs
	.comm	vs,2163200,16
	.type	ws,@object              # @ws
	.comm	ws,2163200,16
	.type	qs,@object              # @qs
	.comm	qs,2163200,16
	.type	rho_i,@object           # @rho_i
	.comm	rho_i,2163200,16
	.type	speed,@object           # @speed
	.comm	speed,2163200,16
	.type	square,@object          # @square
	.comm	square,2163200,16
	.type	rhs,@object             # @rhs
	.comm	rhs,10816000,16
	.type	forcing,@object         # @forcing
	.comm	forcing,10816000,16
	.type	cv,@object              # @cv
	.comm	cv,512,16
	.type	rhon,@object            # @rhon
	.comm	rhon,512,16
	.type	rhos,@object            # @rhos
	.comm	rhos,512,16
	.type	rhoq,@object            # @rhoq
	.comm	rhoq,512,16
	.type	cuf,@object             # @cuf
	.comm	cuf,512,16
	.type	q,@object               # @q
	.comm	q,512,16
	.type	ue,@object              # @ue
	.comm	ue,2560,16
	.type	buf,@object             # @buf
	.comm	buf,2560,16
	.type	lhs,@object             # @lhs
	.comm	lhs,169000,16
	.type	lhsp,@object            # @lhsp
	.comm	lhsp,169000,16
	.type	lhsm,@object            # @lhsm
	.comm	lhsm,169000,16
	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"timer.flag"
	.size	.L.str, 11

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"r"
	.size	.L.str.1, 2

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"total"
	.size	.L.str.2, 6

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"rhsx"
	.size	.L.str.3, 5

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"rhsy"
	.size	.L.str.4, 5

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"rhsz"
	.size	.L.str.5, 5

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"rhs"
	.size	.L.str.6, 4

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"xsolve"
	.size	.L.str.7, 7

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"ysolve"
	.size	.L.str.8, 7

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"zsolve"
	.size	.L.str.9, 7

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"redist1"
	.size	.L.str.10, 8

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"redist2"
	.size	.L.str.11, 8

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"ninvr"
	.size	.L.str.13, 6

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"tzetar"
	.size	.L.str.12, 7

	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"txinvr"
	.size	.L.str.15, 7

	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"pinvr"
	.size	.L.str.14, 6

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"add"
	.size	.L.str.16, 4

	.type	.Lstr,@object           # @str
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr:
	.asciz	"\n\n NAS Parallel Benchmarks (NPB3.3-SER-C) - SP Benchmark\n"
	.size	.Lstr, 58

	.type	.L.str.18,@object       # @.str.18
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.18:
	.asciz	"inputsp.data"
	.size	.L.str.18, 13

	.type	.Lstr.46,@object        # @str.46
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.46:
	.asciz	" Reading from input file inputsp.data"
	.size	.Lstr.46, 38

	.type	.L.str.20,@object       # @.str.20
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.20:
	.asciz	"%d"
	.size	.L.str.20, 3

	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	"%lf"
	.size	.L.str.21, 4

	.type	.L.str.22,@object       # @.str.22
.L.str.22:
	.asciz	"%d%d%d"
	.size	.L.str.22, 7

	.type	.Lstr.43,@object        # @str.43
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.43:
	.asciz	" No input file inputsp.data. Using compiled defaults"
	.size	.Lstr.43, 53

	.type	.L.str.24,@object       # @.str.24
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.24:
	.asciz	" Size: %4dx%4dx%4d\n"
	.size	.L.str.24, 20

	.type	.L.str.25,@object       # @.str.25
.L.str.25:
	.asciz	" Iterations: %4d    dt: %10.6f\n"
	.size	.L.str.25, 32

	.type	.L.str.27,@object       # @.str.27
.L.str.27:
	.asciz	" %d, %d, %d\n"
	.size	.L.str.27, 13

	.type	.Lstr.45,@object        # @str.45
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.45:
	.asciz	" Problem size too big for compiled array sizes"
	.size	.Lstr.45, 47

	.type	.L.str.29,@object       # @.str.29
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.29:
	.asciz	" Time step %4d\n"
	.size	.L.str.29, 16

	.type	.L.str.36,@object       # @.str.36
.L.str.36:
	.asciz	" Verification being performed for class %c\n"
	.size	.L.str.36, 44

	.type	.L.str.1.37,@object     # @.str.1.37
.L.str.1.37:
	.asciz	" accuracy setting for epsilon = %20.13E\n"
	.size	.L.str.1.37, 41

	.type	.L.str.2.38,@object     # @.str.2.38
.L.str.2.38:
	.asciz	" DT does not match the reference value of %15.8E\n"
	.size	.L.str.2.38, 50

	.type	.Lstr.39,@object        # @str.39
.Lstr.39:
	.asciz	" Unknown class"
	.size	.Lstr.39, 15

	.type	.Lstr.22,@object        # @str.22
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.22:
	.asciz	" Comparison of RMS-norms of residual"
	.size	.Lstr.22, 37

	.type	.Lstr.15,@object        # @str.15
	.p2align	4
.Lstr.15:
	.asciz	" RMS-norms of residual"
	.size	.Lstr.15, 23

	.type	.L.str.6.40,@object     # @.str.6.40
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.6.40:
	.asciz	"          %2d%20.13E\n"
	.size	.L.str.6.40, 22

	.type	.L.str.7.41,@object     # @.str.7.41
.L.str.7.41:
	.asciz	"          %2d%20.13E%20.13E%20.13E\n"
	.size	.L.str.7.41, 36

	.type	.L.str.8.42,@object     # @.str.8.42
.L.str.8.42:
	.asciz	" FAILURE: %2d%20.13E%20.13E%20.13E\n"
	.size	.L.str.8.42, 36

	.type	.Lstr.21,@object        # @str.21
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.21:
	.asciz	" Comparison of RMS-norms of solution error"
	.size	.Lstr.21, 43

	.type	.Lstr.16,@object        # @str.16
	.p2align	4
.Lstr.16:
	.asciz	" RMS-norms of solution error"
	.size	.Lstr.16, 29

	.type	.Lstr.19,@object        # @str.19
	.p2align	4
.Lstr.19:
	.asciz	" No reference values provided"
	.size	.Lstr.19, 30

	.type	.Lstr.20,@object        # @str.20
	.p2align	4
.Lstr.20:
	.asciz	" No verification performed"
	.size	.Lstr.20, 27

	.type	.Lstr.18,@object        # @str.18
	.p2align	4
.Lstr.18:
	.asciz	" Verification Successful"
	.size	.Lstr.18, 25

	.type	.Lstr.17,@object        # @str.17
	.p2align	4
.Lstr.17:
	.asciz	" Verification failed"
	.size	.Lstr.17, 21

	.type	.L.str.30,@object       # @.str.30
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.30:
	.asciz	"SP"
	.size	.L.str.30, 3

	.type	.L.str.31,@object       # @.str.31
.L.str.31:
	.asciz	"          floating point"
	.size	.L.str.31, 25

	.type	.L.str.32,@object       # @.str.32
.L.str.32:
	.asciz	"3.3.1"
	.size	.L.str.32, 6

	.type	.L.str.33,@object       # @.str.33
.L.str.33:
	.asciz	"03 Mar 2016"
	.size	.L.str.33, 12

	.type	.L.str.34,@object       # @.str.34
.L.str.34:
	.asciz	"(none)"
	.size	.L.str.34, 7

	.type	.L.str.35,@object       # @.str.35
.L.str.35:
	.asciz	"-I ../common "
	.size	.L.str.35, 14

	.type	.Lstr.44,@object        # @str.44
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.44:
	.asciz	"  SECTION   Time (secs)"
	.size	.Lstr.44, 24

	.type	.L.str.37,@object       # @.str.37
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.37:
	.asciz	"  %-8s:%9.3f  (%6.2f%%)\n"
	.size	.L.str.37, 25

	.type	.L.str.38,@object       # @.str.38
.L.str.38:
	.asciz	"    --> %8s:%9.3f  (%6.2f%%)\n"
	.size	.L.str.38, 30

	.type	.L.str.39,@object       # @.str.39
.L.str.39:
	.asciz	"sub-rhs"
	.size	.L.str.39, 8

	.type	.L.str.40,@object       # @.str.40
.L.str.40:
	.asciz	"rest-rhs"
	.size	.L.str.40, 9

	.type	.L.str.41,@object       # @.str.41
.L.str.41:
	.asciz	"sub-zsol"
	.size	.L.str.41, 9

	.type	.L.str.42,@object       # @.str.42
.L.str.42:
	.asciz	"redist"
	.size	.L.str.42, 7

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"\n\n %s Benchmark Completed.\n"
	.size	.L.str.17, 28

	.type	.L.str.1.18,@object     # @.str.1.18
.L.str.1.18:
	.asciz	" Class           =             %12c\n"
	.size	.L.str.1.18, 37

	.type	.L.str.2.19,@object     # @.str.2.19
.L.str.2.19:
	.asciz	"%15.0lf"
	.size	.L.str.2.19, 8

	.type	.L.str.3.20,@object     # @.str.3.20
.L.str.3.20:
	.asciz	" Size            =          %15s\n"
	.size	.L.str.3.20, 34

	.type	.L.str.4.21,@object     # @.str.4.21
.L.str.4.21:
	.asciz	" Size            =             %12d\n"
	.size	.L.str.4.21, 37

	.type	.L.str.5.22,@object     # @.str.5.22
.L.str.5.22:
	.asciz	" Size            =           %4dx%4dx%4d\n"
	.size	.L.str.5.22, 42

	.type	.L.str.6.23,@object     # @.str.6.23
.L.str.6.23:
	.asciz	" Iterations      =             %12d\n"
	.size	.L.str.6.23, 37

	.type	.L.str.7.24,@object     # @.str.7.24
.L.str.7.24:
	.asciz	" Time in seconds =             %12.2lf\n"
	.size	.L.str.7.24, 40

	.type	.L.str.8.25,@object     # @.str.8.25
.L.str.8.25:
	.asciz	" Mop/s total     =          %15.2lf\n"
	.size	.L.str.8.25, 37

	.type	.L.str.9.26,@object     # @.str.9.26
.L.str.9.26:
	.asciz	" Operation type  = %24s\n"
	.size	.L.str.9.26, 25

	.type	.L.str.10.27,@object    # @.str.10.27
.L.str.10.27:
	.asciz	" Verification    =             %12s\n"
	.size	.L.str.10.27, 37

	.type	.L.str.11.28,@object    # @.str.11.28
.L.str.11.28:
	.asciz	"SUCCESSFUL"
	.size	.L.str.11.28, 11

	.type	.L.str.12.29,@object    # @.str.12.29
.L.str.12.29:
	.asciz	"UNSUCCESSFUL"
	.size	.L.str.12.29, 13

	.type	.L.str.13.30,@object    # @.str.13.30
.L.str.13.30:
	.asciz	" Version         =             %12s\n"
	.size	.L.str.13.30, 37

	.type	.L.str.14.31,@object    # @.str.14.31
.L.str.14.31:
	.asciz	" Compile date    =             %12s\n"
	.size	.L.str.14.31, 37

	.type	.L.str.15.32,@object    # @.str.15.32
.L.str.15.32:
	.asciz	"\n Compile options:\n    CC           = %s\n"
	.size	.L.str.15.32, 42

	.type	.L.str.16.33,@object    # @.str.16.33
.L.str.16.33:
	.asciz	"    CLINK        = %s\n"
	.size	.L.str.16.33, 23

	.type	.L.str.17.34,@object    # @.str.17.34
.L.str.17.34:
	.asciz	"    C_LIB        = %s\n"
	.size	.L.str.17.34, 23

	.type	.L.str.18.35,@object    # @.str.18.35
.L.str.18.35:
	.asciz	"    C_INC        = %s\n"
	.size	.L.str.18.35, 23

	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"    CFLAGS       = %s\n"
	.size	.L.str.19, 23

	.type	.L.str.20.36,@object    # @.str.20.36
.L.str.20.36:
	.asciz	"    CLINKFLAGS   = %s\n"
	.size	.L.str.20.36, 23

	.type	.L.str.21.37,@object    # @.str.21.37
.L.str.21.37:
	.asciz	"    RAND         = %s\n"
	.size	.L.str.21.37, 23

	.type	.Lstr.38,@object        # @str.38
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.38:
	.asciz	"\n--------------------------------------\n Please send all errors/feedbacks to:\n Center for Manycore Programming\n cmp@aces.snu.ac.kr\n http://aces.snu.ac.kr\n--------------------------------------\n"
	.size	.Lstr.38, 194

	.type	elapsed,@object         # @elapsed
	.local	elapsed
	.comm	elapsed,512,16
	.type	start,@object           # @start
	.local	start
	.comm	start,512,16
	.type	wtime_.sec,@object      # @wtime_.sec
	.data
	.p2align	2
wtime_.sec:
	.long	4294967295              # 0xffffffff
	.size	wtime_.sec, 4

	.file	23 "/usr/include/libio.h"
	.file	24 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file	25 "/home/norouzi/Desktop/software/llvmTemp/build/bin/../lib/clang/3.9.0/include/stddef.h"
	.file	26 "/usr/include/stdio.h"
	.file	27 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file	28 "/usr/include/x86_64-linux-gnu/bits/time.h"
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 3.9.0 (trunk)" # string offset=0
.Linfo_string1:
	.asciz	"sp.c"                  # string offset=28
.Linfo_string2:
	.asciz	"/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/SP" # string offset=33
.Linfo_string3:
	.asciz	"grid_points"           # string offset=95
.Linfo_string4:
	.asciz	"int"                   # string offset=107
.Linfo_string5:
	.asciz	"sizetype"              # string offset=111
.Linfo_string6:
	.asciz	"nx2"                   # string offset=120
.Linfo_string7:
	.asciz	"ny2"                   # string offset=124
.Linfo_string8:
	.asciz	"nz2"                   # string offset=128
.Linfo_string9:
	.asciz	"timeron"               # string offset=132
.Linfo_string10:
	.asciz	"false"                 # string offset=140
.Linfo_string11:
	.asciz	"true"                  # string offset=146
.Linfo_string12:
	.asciz	"logical"               # string offset=151
.Linfo_string13:
	.asciz	"tx1"                   # string offset=159
.Linfo_string14:
	.asciz	"double"                # string offset=163
.Linfo_string15:
	.asciz	"tx2"                   # string offset=170
.Linfo_string16:
	.asciz	"tx3"                   # string offset=174
.Linfo_string17:
	.asciz	"ty1"                   # string offset=178
.Linfo_string18:
	.asciz	"ty2"                   # string offset=182
.Linfo_string19:
	.asciz	"ty3"                   # string offset=186
.Linfo_string20:
	.asciz	"tz1"                   # string offset=190
.Linfo_string21:
	.asciz	"tz2"                   # string offset=194
.Linfo_string22:
	.asciz	"tz3"                   # string offset=198
.Linfo_string23:
	.asciz	"dx1"                   # string offset=202
.Linfo_string24:
	.asciz	"dx2"                   # string offset=206
.Linfo_string25:
	.asciz	"dx3"                   # string offset=210
.Linfo_string26:
	.asciz	"dx4"                   # string offset=214
.Linfo_string27:
	.asciz	"dx5"                   # string offset=218
.Linfo_string28:
	.asciz	"dy1"                   # string offset=222
.Linfo_string29:
	.asciz	"dy2"                   # string offset=226
.Linfo_string30:
	.asciz	"dy3"                   # string offset=230
.Linfo_string31:
	.asciz	"dy4"                   # string offset=234
.Linfo_string32:
	.asciz	"dy5"                   # string offset=238
.Linfo_string33:
	.asciz	"dz1"                   # string offset=242
.Linfo_string34:
	.asciz	"dz2"                   # string offset=246
.Linfo_string35:
	.asciz	"dz3"                   # string offset=250
.Linfo_string36:
	.asciz	"dz4"                   # string offset=254
.Linfo_string37:
	.asciz	"dz5"                   # string offset=258
.Linfo_string38:
	.asciz	"dssp"                  # string offset=262
.Linfo_string39:
	.asciz	"dt"                    # string offset=267
.Linfo_string40:
	.asciz	"ce"                    # string offset=270
.Linfo_string41:
	.asciz	"dxmax"                 # string offset=273
.Linfo_string42:
	.asciz	"dymax"                 # string offset=279
.Linfo_string43:
	.asciz	"dzmax"                 # string offset=285
.Linfo_string44:
	.asciz	"xxcon1"                # string offset=291
.Linfo_string45:
	.asciz	"xxcon2"                # string offset=298
.Linfo_string46:
	.asciz	"xxcon3"                # string offset=305
.Linfo_string47:
	.asciz	"xxcon4"                # string offset=312
.Linfo_string48:
	.asciz	"xxcon5"                # string offset=319
.Linfo_string49:
	.asciz	"dx1tx1"                # string offset=326
.Linfo_string50:
	.asciz	"dx2tx1"                # string offset=333
.Linfo_string51:
	.asciz	"dx3tx1"                # string offset=340
.Linfo_string52:
	.asciz	"dx4tx1"                # string offset=347
.Linfo_string53:
	.asciz	"dx5tx1"                # string offset=354
.Linfo_string54:
	.asciz	"yycon1"                # string offset=361
.Linfo_string55:
	.asciz	"yycon2"                # string offset=368
.Linfo_string56:
	.asciz	"yycon3"                # string offset=375
.Linfo_string57:
	.asciz	"yycon4"                # string offset=382
.Linfo_string58:
	.asciz	"yycon5"                # string offset=389
.Linfo_string59:
	.asciz	"dy1ty1"                # string offset=396
.Linfo_string60:
	.asciz	"dy2ty1"                # string offset=403
.Linfo_string61:
	.asciz	"dy3ty1"                # string offset=410
.Linfo_string62:
	.asciz	"dy4ty1"                # string offset=417
.Linfo_string63:
	.asciz	"dy5ty1"                # string offset=424
.Linfo_string64:
	.asciz	"zzcon1"                # string offset=431
.Linfo_string65:
	.asciz	"zzcon2"                # string offset=438
.Linfo_string66:
	.asciz	"zzcon3"                # string offset=445
.Linfo_string67:
	.asciz	"zzcon4"                # string offset=452
.Linfo_string68:
	.asciz	"zzcon5"                # string offset=459
.Linfo_string69:
	.asciz	"dz1tz1"                # string offset=466
.Linfo_string70:
	.asciz	"dz2tz1"                # string offset=473
.Linfo_string71:
	.asciz	"dz3tz1"                # string offset=480
.Linfo_string72:
	.asciz	"dz4tz1"                # string offset=487
.Linfo_string73:
	.asciz	"dz5tz1"                # string offset=494
.Linfo_string74:
	.asciz	"dnxm1"                 # string offset=501
.Linfo_string75:
	.asciz	"dnym1"                 # string offset=507
.Linfo_string76:
	.asciz	"dnzm1"                 # string offset=513
.Linfo_string77:
	.asciz	"c1c2"                  # string offset=519
.Linfo_string78:
	.asciz	"c1c5"                  # string offset=524
.Linfo_string79:
	.asciz	"c3c4"                  # string offset=529
.Linfo_string80:
	.asciz	"c1345"                 # string offset=534
.Linfo_string81:
	.asciz	"conz1"                 # string offset=540
.Linfo_string82:
	.asciz	"c1"                    # string offset=546
.Linfo_string83:
	.asciz	"c2"                    # string offset=549
.Linfo_string84:
	.asciz	"c3"                    # string offset=552
.Linfo_string85:
	.asciz	"c4"                    # string offset=555
.Linfo_string86:
	.asciz	"c5"                    # string offset=558
.Linfo_string87:
	.asciz	"c4dssp"                # string offset=561
.Linfo_string88:
	.asciz	"c5dssp"                # string offset=568
.Linfo_string89:
	.asciz	"dtdssp"                # string offset=575
.Linfo_string90:
	.asciz	"dttx1"                 # string offset=582
.Linfo_string91:
	.asciz	"bt"                    # string offset=588
.Linfo_string92:
	.asciz	"dttx2"                 # string offset=591
.Linfo_string93:
	.asciz	"dtty1"                 # string offset=597
.Linfo_string94:
	.asciz	"dtty2"                 # string offset=603
.Linfo_string95:
	.asciz	"dttz1"                 # string offset=609
.Linfo_string96:
	.asciz	"dttz2"                 # string offset=615
.Linfo_string97:
	.asciz	"c2dttx1"               # string offset=621
.Linfo_string98:
	.asciz	"c2dtty1"               # string offset=629
.Linfo_string99:
	.asciz	"c2dttz1"               # string offset=637
.Linfo_string100:
	.asciz	"comz1"                 # string offset=645
.Linfo_string101:
	.asciz	"comz4"                 # string offset=651
.Linfo_string102:
	.asciz	"comz5"                 # string offset=657
.Linfo_string103:
	.asciz	"comz6"                 # string offset=663
.Linfo_string104:
	.asciz	"c3c4tx3"               # string offset=669
.Linfo_string105:
	.asciz	"c3c4ty3"               # string offset=677
.Linfo_string106:
	.asciz	"c3c4tz3"               # string offset=685
.Linfo_string107:
	.asciz	"c2iv"                  # string offset=693
.Linfo_string108:
	.asciz	"con43"                 # string offset=698
.Linfo_string109:
	.asciz	"con16"                 # string offset=704
.Linfo_string110:
	.asciz	"u"                     # string offset=710
.Linfo_string111:
	.asciz	"us"                    # string offset=712
.Linfo_string112:
	.asciz	"vs"                    # string offset=715
.Linfo_string113:
	.asciz	"ws"                    # string offset=718
.Linfo_string114:
	.asciz	"qs"                    # string offset=721
.Linfo_string115:
	.asciz	"rho_i"                 # string offset=724
.Linfo_string116:
	.asciz	"speed"                 # string offset=730
.Linfo_string117:
	.asciz	"square"                # string offset=736
.Linfo_string118:
	.asciz	"rhs"                   # string offset=743
.Linfo_string119:
	.asciz	"forcing"               # string offset=747
.Linfo_string120:
	.asciz	"cv"                    # string offset=755
.Linfo_string121:
	.asciz	"rhon"                  # string offset=758
.Linfo_string122:
	.asciz	"rhos"                  # string offset=763
.Linfo_string123:
	.asciz	"rhoq"                  # string offset=768
.Linfo_string124:
	.asciz	"cuf"                   # string offset=773
.Linfo_string125:
	.asciz	"q"                     # string offset=777
.Linfo_string126:
	.asciz	"ue"                    # string offset=779
.Linfo_string127:
	.asciz	"buf"                   # string offset=782
.Linfo_string128:
	.asciz	"lhs"                   # string offset=786
.Linfo_string129:
	.asciz	"lhsp"                  # string offset=790
.Linfo_string130:
	.asciz	"lhsm"                  # string offset=795
.Linfo_string131:
	.asciz	"initialize.c"          # string offset=800
.Linfo_string132:
	.asciz	"exact_solution.c"      # string offset=813
.Linfo_string133:
	.asciz	"exact_rhs.c"           # string offset=830
.Linfo_string134:
	.asciz	"set_constants.c"       # string offset=842
.Linfo_string135:
	.asciz	"adi.c"                 # string offset=858
.Linfo_string136:
	.asciz	"rhs.c"                 # string offset=864
.Linfo_string137:
	.asciz	"x_solve.c"             # string offset=870
.Linfo_string138:
	.asciz	"ninvr.c"               # string offset=880
.Linfo_string139:
	.asciz	"y_solve.c"             # string offset=888
.Linfo_string140:
	.asciz	"pinvr.c"               # string offset=898
.Linfo_string141:
	.asciz	"z_solve.c"             # string offset=906
.Linfo_string142:
	.asciz	"tzetar.c"              # string offset=916
.Linfo_string143:
	.asciz	"add.c"                 # string offset=925
.Linfo_string144:
	.asciz	"txinvr.c"              # string offset=931
.Linfo_string145:
	.asciz	"error.c"               # string offset=940
.Linfo_string146:
	.asciz	"verify.c"              # string offset=948
.Linfo_string147:
	.asciz	"../common/print_results.c" # string offset=957
.Linfo_string148:
	.asciz	"/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common" # string offset=983
.Linfo_string149:
	.asciz	"../common/c_timers.c"  # string offset=1049
.Linfo_string150:
	.asciz	"start"                 # string offset=1070
.Linfo_string151:
	.asciz	"elapsed"               # string offset=1076
.Linfo_string152:
	.asciz	"../common/wtime.c"     # string offset=1084
.Linfo_string153:
	.asciz	"sec"                   # string offset=1102
.Linfo_string154:
	.asciz	"elapsed_time"          # string offset=1106
.Linfo_string155:
	.asciz	"t"                     # string offset=1119
.Linfo_string156:
	.asciz	"main"                  # string offset=1121
.Linfo_string157:
	.asciz	"initialize"            # string offset=1126
.Linfo_string158:
	.asciz	"lhsinit"               # string offset=1137
.Linfo_string159:
	.asciz	"lhsinitj"              # string offset=1145
.Linfo_string160:
	.asciz	"exact_solution"        # string offset=1154
.Linfo_string161:
	.asciz	"exact_rhs"             # string offset=1169
.Linfo_string162:
	.asciz	"set_constants"         # string offset=1179
.Linfo_string163:
	.asciz	"adi"                   # string offset=1193
.Linfo_string164:
	.asciz	"compute_rhs"           # string offset=1197
.Linfo_string165:
	.asciz	"x_solve"               # string offset=1209
.Linfo_string166:
	.asciz	"ninvr"                 # string offset=1217
.Linfo_string167:
	.asciz	"y_solve"               # string offset=1223
.Linfo_string168:
	.asciz	"pinvr"                 # string offset=1231
.Linfo_string169:
	.asciz	"z_solve"               # string offset=1237
.Linfo_string170:
	.asciz	"tzetar"                # string offset=1245
.Linfo_string171:
	.asciz	"add"                   # string offset=1252
.Linfo_string172:
	.asciz	"txinvr"                # string offset=1256
.Linfo_string173:
	.asciz	"error_norm"            # string offset=1263
.Linfo_string174:
	.asciz	"rhs_norm"              # string offset=1274
.Linfo_string175:
	.asciz	"verify"                # string offset=1283
.Linfo_string176:
	.asciz	"print_results"         # string offset=1290
.Linfo_string177:
	.asciz	"timer_clear"           # string offset=1304
.Linfo_string178:
	.asciz	"timer_start"           # string offset=1316
.Linfo_string179:
	.asciz	"timer_stop"            # string offset=1328
.Linfo_string180:
	.asciz	"timer_read"            # string offset=1339
.Linfo_string181:
	.asciz	"wtime_"                # string offset=1350
.Linfo_string182:
	.asciz	"trecs"                 # string offset=1357
.Linfo_string183:
	.asciz	"t_names"               # string offset=1363
.Linfo_string184:
	.asciz	"char"                  # string offset=1371
.Linfo_string185:
	.asciz	"argc"                  # string offset=1376
.Linfo_string186:
	.asciz	"argv"                  # string offset=1381
.Linfo_string187:
	.asciz	"fp"                    # string offset=1386
.Linfo_string188:
	.asciz	"_flags"                # string offset=1389
.Linfo_string189:
	.asciz	"_IO_read_ptr"          # string offset=1396
.Linfo_string190:
	.asciz	"_IO_read_end"          # string offset=1409
.Linfo_string191:
	.asciz	"_IO_read_base"         # string offset=1422
.Linfo_string192:
	.asciz	"_IO_write_base"        # string offset=1436
.Linfo_string193:
	.asciz	"_IO_write_ptr"         # string offset=1451
.Linfo_string194:
	.asciz	"_IO_write_end"         # string offset=1465
.Linfo_string195:
	.asciz	"_IO_buf_base"          # string offset=1479
.Linfo_string196:
	.asciz	"_IO_buf_end"           # string offset=1492
.Linfo_string197:
	.asciz	"_IO_save_base"         # string offset=1504
.Linfo_string198:
	.asciz	"_IO_backup_base"       # string offset=1518
.Linfo_string199:
	.asciz	"_IO_save_end"          # string offset=1534
.Linfo_string200:
	.asciz	"_markers"              # string offset=1547
.Linfo_string201:
	.asciz	"_next"                 # string offset=1556
.Linfo_string202:
	.asciz	"_sbuf"                 # string offset=1562
.Linfo_string203:
	.asciz	"_pos"                  # string offset=1568
.Linfo_string204:
	.asciz	"_IO_marker"            # string offset=1573
.Linfo_string205:
	.asciz	"_chain"                # string offset=1584
.Linfo_string206:
	.asciz	"_fileno"               # string offset=1591
.Linfo_string207:
	.asciz	"_flags2"               # string offset=1599
.Linfo_string208:
	.asciz	"_old_offset"           # string offset=1607
.Linfo_string209:
	.asciz	"long int"              # string offset=1619
.Linfo_string210:
	.asciz	"__off_t"               # string offset=1628
.Linfo_string211:
	.asciz	"_cur_column"           # string offset=1636
.Linfo_string212:
	.asciz	"unsigned short"        # string offset=1648
.Linfo_string213:
	.asciz	"_vtable_offset"        # string offset=1663
.Linfo_string214:
	.asciz	"signed char"           # string offset=1678
.Linfo_string215:
	.asciz	"_shortbuf"             # string offset=1690
.Linfo_string216:
	.asciz	"_lock"                 # string offset=1700
.Linfo_string217:
	.asciz	"_IO_lock_t"            # string offset=1706
.Linfo_string218:
	.asciz	"_offset"               # string offset=1717
.Linfo_string219:
	.asciz	"__off64_t"             # string offset=1725
.Linfo_string220:
	.asciz	"__pad1"                # string offset=1735
.Linfo_string221:
	.asciz	"__pad2"                # string offset=1742
.Linfo_string222:
	.asciz	"__pad3"                # string offset=1749
.Linfo_string223:
	.asciz	"__pad4"                # string offset=1756
.Linfo_string224:
	.asciz	"__pad5"                # string offset=1763
.Linfo_string225:
	.asciz	"long unsigned int"     # string offset=1770
.Linfo_string226:
	.asciz	"size_t"                # string offset=1788
.Linfo_string227:
	.asciz	"_mode"                 # string offset=1795
.Linfo_string228:
	.asciz	"_unused2"              # string offset=1801
.Linfo_string229:
	.asciz	"_IO_FILE"              # string offset=1810
.Linfo_string230:
	.asciz	"FILE"                  # string offset=1819
.Linfo_string231:
	.asciz	"niter"                 # string offset=1824
.Linfo_string232:
	.asciz	"result"                # string offset=1830
.Linfo_string233:
	.asciz	"i"                     # string offset=1837
.Linfo_string234:
	.asciz	"step"                  # string offset=1839
.Linfo_string235:
	.asciz	"tmax"                  # string offset=1844
.Linfo_string236:
	.asciz	"Class"                 # string offset=1849
.Linfo_string237:
	.asciz	"verified"              # string offset=1855
.Linfo_string238:
	.asciz	"n3"                    # string offset=1864
.Linfo_string239:
	.asciz	"mflops"                # string offset=1867
.Linfo_string240:
	.asciz	"dtemp"                 # string offset=1874
.Linfo_string241:
	.asciz	"k"                     # string offset=1880
.Linfo_string242:
	.asciz	"j"                     # string offset=1882
.Linfo_string243:
	.asciz	"zeta"                  # string offset=1884
.Linfo_string244:
	.asciz	"eta"                   # string offset=1889
.Linfo_string245:
	.asciz	"xi"                    # string offset=1893
.Linfo_string246:
	.asciz	"m"                     # string offset=1896
.Linfo_string247:
	.asciz	"dtpp"                  # string offset=1898
.Linfo_string248:
	.asciz	"ip1"                   # string offset=1903
.Linfo_string249:
	.asciz	"im1"                   # string offset=1907
.Linfo_string250:
	.asciz	"jp1"                   # string offset=1911
.Linfo_string251:
	.asciz	"jm1"                   # string offset=1915
.Linfo_string252:
	.asciz	"km1"                   # string offset=1919
.Linfo_string253:
	.asciz	"kp1"                   # string offset=1923
.Linfo_string254:
	.asciz	"Pface"                 # string offset=1927
.Linfo_string255:
	.asciz	"temp"                  # string offset=1933
.Linfo_string256:
	.asciz	"Pxi"                   # string offset=1938
.Linfo_string257:
	.asciz	"ix"                    # string offset=1942
.Linfo_string258:
	.asciz	"Peta"                  # string offset=1945
.Linfo_string259:
	.asciz	"Pzeta"                 # string offset=1950
.Linfo_string260:
	.asciz	"iy"                    # string offset=1956
.Linfo_string261:
	.asciz	"iz"                    # string offset=1959
.Linfo_string262:
	.asciz	"rho_inv"               # string offset=1962
.Linfo_string263:
	.asciz	"aux"                   # string offset=1970
.Linfo_string264:
	.asciz	"uijk"                  # string offset=1974
.Linfo_string265:
	.asciz	"up1"                   # string offset=1979
.Linfo_string266:
	.asciz	"um1"                   # string offset=1983
.Linfo_string267:
	.asciz	"vijk"                  # string offset=1987
.Linfo_string268:
	.asciz	"vp1"                   # string offset=1992
.Linfo_string269:
	.asciz	"vm1"                   # string offset=1996
.Linfo_string270:
	.asciz	"wijk"                  # string offset=2000
.Linfo_string271:
	.asciz	"wp1"                   # string offset=2005
.Linfo_string272:
	.asciz	"wm1"                   # string offset=2009
.Linfo_string273:
	.asciz	"ru1"                   # string offset=2013
.Linfo_string274:
	.asciz	"uu"                    # string offset=2017
.Linfo_string275:
	.asciz	"vv"                    # string offset=2020
.Linfo_string276:
	.asciz	"ww"                    # string offset=2023
.Linfo_string277:
	.asciz	"ac"                    # string offset=2026
.Linfo_string278:
	.asciz	"r1"                    # string offset=2029
.Linfo_string279:
	.asciz	"r2"                    # string offset=2032
.Linfo_string280:
	.asciz	"r3"                    # string offset=2035
.Linfo_string281:
	.asciz	"r4"                    # string offset=2038
.Linfo_string282:
	.asciz	"t2"                    # string offset=2041
.Linfo_string283:
	.asciz	"ac2inv"                # string offset=2044
.Linfo_string284:
	.asciz	"t1"                    # string offset=2051
.Linfo_string285:
	.asciz	"t3"                    # string offset=2054
.Linfo_string286:
	.asciz	"r5"                    # string offset=2057
.Linfo_string287:
	.asciz	"fac1"                  # string offset=2060
.Linfo_string288:
	.asciz	"fac2"                  # string offset=2065
.Linfo_string289:
	.asciz	"i1"                    # string offset=2070
.Linfo_string290:
	.asciz	"i2"                    # string offset=2073
.Linfo_string291:
	.asciz	"ni"                    # string offset=2076
.Linfo_string292:
	.asciz	"nj"                    # string offset=2079
.Linfo_string293:
	.asciz	"j1"                    # string offset=2082
.Linfo_string294:
	.asciz	"j2"                    # string offset=2085
.Linfo_string295:
	.asciz	"k1"                    # string offset=2088
.Linfo_string296:
	.asciz	"k2"                    # string offset=2091
.Linfo_string297:
	.asciz	"xvel"                  # string offset=2094
.Linfo_string298:
	.asciz	"yvel"                  # string offset=2099
.Linfo_string299:
	.asciz	"zvel"                  # string offset=2104
.Linfo_string300:
	.asciz	"ac2u"                  # string offset=2109
.Linfo_string301:
	.asciz	"uzik1"                 # string offset=2114
.Linfo_string302:
	.asciz	"btuz"                  # string offset=2120
.Linfo_string303:
	.asciz	"xcrref"                # string offset=2125
.Linfo_string304:
	.asciz	"xceref"                # string offset=2132
.Linfo_string305:
	.asciz	"xcrdif"                # string offset=2139
.Linfo_string306:
	.asciz	"xcedif"                # string offset=2146
.Linfo_string307:
	.asciz	"xce"                   # string offset=2153
.Linfo_string308:
	.asciz	"xcr"                   # string offset=2157
.Linfo_string309:
	.asciz	"no_time_steps"         # string offset=2161
.Linfo_string310:
	.asciz	"epsilon"               # string offset=2175
.Linfo_string311:
	.asciz	"dtref"                 # string offset=2183
.Linfo_string312:
	.asciz	"u_exact"               # string offset=2189
.Linfo_string313:
	.asciz	"rms"                   # string offset=2197
.Linfo_string314:
	.asciz	"d"                     # string offset=2201
.Linfo_string315:
	.asciz	"size"                  # string offset=2203
.Linfo_string316:
	.asciz	"name"                  # string offset=2208
.Linfo_string317:
	.asciz	"class"                 # string offset=2213
.Linfo_string318:
	.asciz	"n1"                    # string offset=2219
.Linfo_string319:
	.asciz	"n2"                    # string offset=2222
.Linfo_string320:
	.asciz	"mops"                  # string offset=2225
.Linfo_string321:
	.asciz	"optype"                # string offset=2230
.Linfo_string322:
	.asciz	"cs7"                   # string offset=2237
.Linfo_string323:
	.asciz	"cs6"                   # string offset=2241
.Linfo_string324:
	.asciz	"cs5"                   # string offset=2245
.Linfo_string325:
	.asciz	"cs4"                   # string offset=2249
.Linfo_string326:
	.asciz	"cs3"                   # string offset=2253
.Linfo_string327:
	.asciz	"npbversion"            # string offset=2257
.Linfo_string328:
	.asciz	"compiletime"           # string offset=2268
.Linfo_string329:
	.asciz	"cs1"                   # string offset=2280
.Linfo_string330:
	.asciz	"cs2"                   # string offset=2284
.Linfo_string331:
	.asciz	"n"                     # string offset=2288
.Linfo_string332:
	.asciz	"now"                   # string offset=2290
.Linfo_string333:
	.asciz	"tv"                    # string offset=2294
.Linfo_string334:
	.asciz	"tv_sec"                # string offset=2297
.Linfo_string335:
	.asciz	"__time_t"              # string offset=2304
.Linfo_string336:
	.asciz	"tv_usec"               # string offset=2313
.Linfo_string337:
	.asciz	"__suseconds_t"         # string offset=2321
.Linfo_string338:
	.asciz	"timeval"               # string offset=2335
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp3-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	.Ltmp8-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp9-.Lfunc_begin0
	.quad	.Ltmp10-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp12-.Lfunc_begin0
	.quad	.Ltmp16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp18-.Lfunc_begin0
	.quad	.Ltmp21-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Ltmp15-.Lfunc_begin0
	.quad	.Ltmp16-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp22-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	144                     # 400
	.byte	3                       # DW_OP_stack_value
	.byte	159                     # 
	.quad	.Ltmp22-.Lfunc_begin0
	.quad	.Ltmp24-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp39-.Lfunc_begin0
	.quad	.Ltmp52-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp52-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp56-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp58-.Lfunc_begin0
	.quad	.Ltmp76-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp26-.Lfunc_begin0
	.quad	.Ltmp27-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp29-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp29-.Lfunc_begin0
	.quad	.Ltmp30-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp30-.Lfunc_begin0
	.quad	.Ltmp66-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp66-.Lfunc_begin0
	.quad	.Lfunc_end0-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp38-.Lfunc_begin0
	.quad	.Ltmp42-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp43-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp61-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp40-.Lfunc_begin0
	.quad	.Ltmp49-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp56-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp41-.Lfunc_begin0
	.quad	.Ltmp44-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.quad	.Ltmp57-.Lfunc_begin0
	.quad	.Ltmp65-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp48-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp50-.Lfunc_begin0
	.quad	.Ltmp51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp67-.Lfunc_begin0
	.quad	.Ltmp68-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp68-.Lfunc_begin0
	.quad	.Ltmp69-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp69-.Lfunc_begin0
	.quad	.Ltmp71-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp71-.Lfunc_begin0
	.quad	.Ltmp72-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp72-.Lfunc_begin0
	.quad	.Ltmp74-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp74-.Lfunc_begin0
	.quad	.Ltmp75-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp75-.Lfunc_begin0
	.quad	.Ltmp76-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp53-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp100-.Lfunc_begin2
	.quad	.Ltmp112-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp112-.Lfunc_begin2
	.quad	.Ltmp113-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp210-.Lfunc_begin2
	.quad	.Ltmp230-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp230-.Lfunc_begin2
	.quad	.Ltmp231-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp231-.Lfunc_begin2
	.quad	.Ltmp232-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp232-.Lfunc_begin2
	.quad	.Ltmp233-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp233-.Lfunc_begin2
	.quad	.Ltmp234-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp234-.Lfunc_begin2
	.quad	.Ltmp235-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp235-.Lfunc_begin2
	.quad	.Ltmp236-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp236-.Lfunc_begin2
	.quad	.Ltmp237-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp237-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp115-.Lfunc_begin2
	.quad	.Ltmp164-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp164-.Lfunc_begin2
	.quad	.Ltmp183-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp183-.Lfunc_begin2
	.quad	.Ltmp184-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp184-.Lfunc_begin2
	.quad	.Ltmp185-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp185-.Lfunc_begin2
	.quad	.Ltmp186-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp186-.Lfunc_begin2
	.quad	.Ltmp187-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp187-.Lfunc_begin2
	.quad	.Ltmp188-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp188-.Lfunc_begin2
	.quad	.Ltmp189-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp189-.Lfunc_begin2
	.quad	.Ltmp190-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp190-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp117-.Lfunc_begin2
	.quad	.Ltmp118-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp163-.Lfunc_begin2
	.quad	.Ltmp164-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp215-.Lfunc_begin2
	.quad	.Ltmp217-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp118-.Lfunc_begin2
	.quad	.Ltmp137-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp137-.Lfunc_begin2
	.quad	.Ltmp138-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp138-.Lfunc_begin2
	.quad	.Ltmp139-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp139-.Lfunc_begin2
	.quad	.Ltmp140-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp140-.Lfunc_begin2
	.quad	.Ltmp141-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp141-.Lfunc_begin2
	.quad	.Ltmp142-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp142-.Lfunc_begin2
	.quad	.Ltmp143-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp143-.Lfunc_begin2
	.quad	.Ltmp144-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp144-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp120-.Lfunc_begin2
	.quad	.Ltmp121-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp121-.Lfunc_begin2
	.quad	.Ltmp122-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp169-.Lfunc_begin2
	.quad	.Ltmp171-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp209-.Lfunc_begin2
	.quad	.Ltmp210-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp123-.Lfunc_begin2
	.quad	.Ltmp125-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp166-.Lfunc_begin2
	.quad	.Ltmp167-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp167-.Lfunc_begin2
	.quad	.Ltmp168-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp212-.Lfunc_begin2
	.quad	.Ltmp213-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp213-.Lfunc_begin2
	.quad	.Ltmp214-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp124-.Lfunc_begin2
	.quad	.Ltmp128-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp128-.Lfunc_begin2
	.quad	.Ltmp146-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin2
	.quad	.Ltmp173-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp173-.Lfunc_begin2
	.quad	.Ltmp192-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp192-.Lfunc_begin2
	.quad	.Ltmp219-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp219-.Lfunc_begin2
	.quad	.Ltmp239-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp239-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp128-.Lfunc_begin2
	.quad	.Ltmp129-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp173-.Lfunc_begin2
	.quad	.Ltmp174-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp219-.Lfunc_begin2
	.quad	.Ltmp220-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Lfunc_begin3-.Lfunc_begin3
	.quad	.Ltmp266-.Lfunc_begin3
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp284
	.quad	.Ltmp347
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp347
	.quad	.Ltmp348
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp348
	.quad	.Ltmp365
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp365
	.quad	.Ltmp368
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp380
	.quad	.Ltmp381
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp381
	.quad	.Ltmp398
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp398
	.quad	.Ltmp399
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp299
	.quad	.Ltmp344
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp344
	.quad	.Ltmp346
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp353
	.quad	.Ltmp362
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp362
	.quad	.Ltmp364
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp413
	.quad	.Ltmp414
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp414
	.quad	.Ltmp431
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp431
	.quad	.Ltmp432
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp301
	.quad	.Ltmp304
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp337
	.quad	.Ltmp338
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp338
	.quad	.Ltmp339
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp355
	.quad	.Ltmp356
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp356
	.quad	.Ltmp357
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp370
	.quad	.Ltmp371
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp371
	.quad	.Ltmp372
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp388
	.quad	.Ltmp389
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp389
	.quad	.Ltmp390
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp304
	.quad	.Ltmp377
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp377
	.quad	.Ltmp379
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp386
	.quad	.Ltmp395
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp395
	.quad	.Ltmp397
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp401
	.quad	.Ltmp410
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp410
	.quad	.Ltmp412
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp419
	.quad	.Ltmp428
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp428
	.quad	.Ltmp430
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp306
	.quad	.Ltmp307
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp307
	.quad	.Ltmp308
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp340
	.quad	.Ltmp342
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp358
	.quad	.Ltmp360
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp403
	.quad	.Ltmp404
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp404
	.quad	.Ltmp405
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp421
	.quad	.Ltmp422
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp422
	.quad	.Ltmp423
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp315
	.quad	.Ltmp316
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp316
	.quad	.Ltmp317
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp324
	.quad	.Ltmp325
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp325
	.quad	.Ltmp326
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	.Ltmp373
	.quad	.Ltmp375
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp391
	.quad	.Ltmp393
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp406
	.quad	.Ltmp408
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp424
	.quad	.Ltmp426
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp455-.Lfunc_begin6
	.quad	.Ltmp456-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp457-.Lfunc_begin6
	.quad	.Ltmp459-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp472-.Lfunc_begin6
	.quad	.Ltmp473-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp621-.Lfunc_begin6
	.quad	.Ltmp622-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp626-.Lfunc_begin6
	.quad	.Ltmp627-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp477-.Lfunc_begin6
	.quad	.Ltmp478-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp571-.Lfunc_begin6
	.quad	.Lfunc_end6-.Lfunc_begin6
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp485-.Lfunc_begin6
	.quad	.Ltmp488-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	.Ltmp488-.Lfunc_begin6
	.quad	.Ltmp492-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp486-.Lfunc_begin6
	.quad	.Ltmp489-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp487-.Lfunc_begin6
	.quad	.Ltmp490-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp551-.Lfunc_begin6
	.quad	.Ltmp557-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp552-.Lfunc_begin6
	.quad	.Ltmp554-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	107                     # DW_OP_reg27
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp553-.Lfunc_begin6
	.quad	.Ltmp555-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp585-.Lfunc_begin6
	.quad	.Ltmp591-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	111                     # DW_OP_reg31
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp586-.Lfunc_begin6
	.quad	.Ltmp588-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp587-.Lfunc_begin6
	.quad	.Ltmp589-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	108                     # DW_OP_reg28
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp673-.Lfunc_begin7
	.quad	.Ltmp684-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp674-.Lfunc_begin7
	.quad	.Ltmp685-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp685-.Lfunc_begin7
	.quad	.Ltmp688-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	106                     # DW_OP_reg26
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp675-.Lfunc_begin7
	.quad	.Ltmp683-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp683-.Lfunc_begin7
	.quad	.Ltmp689-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	107                     # DW_OP_reg27
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp676-.Lfunc_begin7
	.quad	.Ltmp682-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp682-.Lfunc_begin7
	.quad	.Ltmp690-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp677-.Lfunc_begin7
	.quad	.Ltmp687-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	110                     # DW_OP_reg30
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp678-.Lfunc_begin7
	.quad	.Ltmp693-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp679-.Lfunc_begin7
	.quad	.Ltmp696-.Lfunc_begin7
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp680-.Lfunc_begin7
	.quad	.Ltmp696-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	111                     # DW_OP_reg31
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp681-.Lfunc_begin7
	.quad	.Ltmp696-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp686-.Lfunc_begin7
	.quad	.Ltmp696-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp687-.Lfunc_begin7
	.quad	.Ltmp696-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	110                     # DW_OP_reg30
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp691-.Lfunc_begin7
	.quad	.Ltmp696-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp692-.Lfunc_begin7
	.quad	.Ltmp694-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp730-.Lfunc_begin8
	.quad	.Ltmp731-.Lfunc_begin8
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp742-.Lfunc_begin8
	.quad	.Ltmp828-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp828-.Lfunc_begin8
	.quad	.Ltmp830-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp768-.Lfunc_begin8
	.quad	.Ltmp771-.Lfunc_begin8
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp785-.Lfunc_begin8
	.quad	.Ltmp787-.Lfunc_begin8
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp769-.Lfunc_begin8
	.quad	.Ltmp802-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp802-.Lfunc_begin8
	.quad	.Ltmp803-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp803-.Lfunc_begin8
	.quad	.Ltmp816-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp816-.Lfunc_begin8
	.quad	.Ltmp817-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp817-.Lfunc_begin8
	.quad	.Ltmp823-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp823-.Lfunc_begin8
	.quad	.Lfunc_end8-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp793-.Lfunc_begin8
	.quad	.Ltmp794-.Lfunc_begin8
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Lfunc_begin9
	.quad	.Ltmp842
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp854-.Lfunc_begin10
	.quad	.Ltmp858-.Lfunc_begin10
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp855-.Lfunc_begin10
	.quad	.Ltmp862-.Lfunc_begin10
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp856-.Lfunc_begin10
	.quad	.Ltmp862-.Lfunc_begin10
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp857-.Lfunc_begin10
	.quad	.Ltmp859-.Lfunc_begin10
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp889-.Lfunc_begin11
	.quad	.Ltmp890-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Ltmp902-.Lfunc_begin11
	.quad	.Ltmp920-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp920-.Lfunc_begin11
	.quad	.Ltmp921-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp921-.Lfunc_begin11
	.quad	.Ltmp924-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp986-.Lfunc_begin11
	.quad	.Ltmp987-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp931-.Lfunc_begin11
	.quad	.Ltmp933-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp946-.Lfunc_begin11
	.quad	.Ltmp948-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp969-.Lfunc_begin11
	.quad	.Ltmp970-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp972-.Lfunc_begin11
	.quad	.Ltmp973-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp932-.Lfunc_begin11
	.quad	.Ltmp959-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp959-.Lfunc_begin11
	.quad	.Ltmp960-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp960-.Lfunc_begin11
	.quad	.Ltmp968-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp968-.Lfunc_begin11
	.quad	.Ltmp971-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp971-.Lfunc_begin11
	.quad	.Lfunc_end11-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp943-.Lfunc_begin11
	.quad	.Ltmp945-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp965-.Lfunc_begin11
	.quad	.Ltmp967-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp954-.Lfunc_begin11
	.quad	.Ltmp955-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Lfunc_begin12
	.quad	.Ltmp999
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp1011-.Lfunc_begin13
	.quad	.Ltmp1015-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp1012-.Lfunc_begin13
	.quad	.Ltmp1016-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp1013-.Lfunc_begin13
	.quad	.Ltmp1020-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp1014-.Lfunc_begin13
	.quad	.Ltmp1017-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp1049-.Lfunc_begin14
	.quad	.Ltmp1050-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Ltmp1058-.Lfunc_begin14
	.quad	.Ltmp1059-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1059-.Lfunc_begin14
	.quad	.Ltmp1097-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1097-.Lfunc_begin14
	.quad	.Ltmp1098-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1120-.Lfunc_begin14
	.quad	.Ltmp1122-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1130-.Lfunc_begin14
	.quad	.Ltmp1131-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1138-.Lfunc_begin14
	.quad	.Ltmp1139-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp1084-.Lfunc_begin14
	.quad	.Ltmp1086-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1100-.Lfunc_begin14
	.quad	.Ltmp1102-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp1085-.Lfunc_begin14
	.quad	.Ltmp1113-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1113-.Lfunc_begin14
	.quad	.Ltmp1114-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1114-.Lfunc_begin14
	.quad	.Ltmp1123-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1123-.Lfunc_begin14
	.quad	.Ltmp1124-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1124-.Lfunc_begin14
	.quad	.Lfunc_end14-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp1096-.Lfunc_begin14
	.quad	.Ltmp1099-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1119-.Lfunc_begin14
	.quad	.Ltmp1121-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Ltmp1108-.Lfunc_begin14
	.quad	.Ltmp1109-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp1173-.Lfunc_begin15
	.quad	.Ltmp1182-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1182-.Lfunc_begin15
	.quad	.Ltmp1191-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp1174-.Lfunc_begin15
	.quad	.Ltmp1184-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp1184-.Lfunc_begin15
	.quad	.Ltmp1193-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Ltmp1175-.Lfunc_begin15
	.quad	.Ltmp1196-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp1176-.Lfunc_begin15
	.quad	.Ltmp1187-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Ltmp1177-.Lfunc_begin15
	.quad	.Ltmp1192-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	110                     # DW_OP_reg30
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Ltmp1178-.Lfunc_begin15
	.quad	.Ltmp1183-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Ltmp1179-.Lfunc_begin15
	.quad	.Ltmp1190-.Lfunc_begin15
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Ltmp1180-.Lfunc_begin15
	.quad	.Ltmp1196-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	111                     # DW_OP_reg31
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp1181-.Lfunc_begin15
	.quad	.Ltmp1185-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp1185-.Lfunc_begin15
	.quad	.Ltmp1186-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp1186-.Lfunc_begin15
	.quad	.Ltmp1187-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp1188-.Lfunc_begin15
	.quad	.Ltmp1196-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp1189-.Lfunc_begin15
	.quad	.Ltmp1194-.Lfunc_begin15
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1222-.Lfunc_begin17
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1222-.Lfunc_begin17
	.quad	.Ltmp1285-.Lfunc_begin17
	.short	3                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1221-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1221-.Lfunc_begin17
	.quad	.Ltmp1285-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1220-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1220-.Lfunc_begin17
	.quad	.Ltmp1285-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1329-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1329-.Lfunc_begin18
	.quad	.Ltmp1332-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1348-.Lfunc_begin18
	.quad	.Ltmp1349-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Ltmp1334-.Lfunc_begin18
	.quad	.Ltmp1335-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp1337-.Lfunc_begin18
	.quad	.Ltmp1338-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1338-.Lfunc_begin18
	.quad	.Ltmp1339-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp1340-.Lfunc_begin18
	.quad	.Ltmp1342-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp1343-.Lfunc_begin18
	.quad	.Ltmp1344-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Lfunc_begin19-.Lfunc_begin18
	.quad	.Ltmp1363-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1363-.Lfunc_begin18
	.quad	.Ltmp1369-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp1370-.Lfunc_begin18
	.quad	.Ltmp1371-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1407-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1407-.Lfunc_begin20
	.quad	.Ltmp1426-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1406-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1406-.Lfunc_begin20
	.quad	.Ltmp1409-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1409-.Lfunc_begin20
	.quad	.Ltmp1412-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1413-.Lfunc_begin20
	.quad	.Ltmp1416-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1420-.Lfunc_begin20
	.quad	.Ltmp1421-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1405-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1405-.Lfunc_begin20
	.quad	.Ltmp1425-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1404-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1404-.Lfunc_begin20
	.quad	.Ltmp1424-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1403-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1403-.Lfunc_begin20
	.quad	.Ltmp1423-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1402-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1402-.Lfunc_begin20
	.quad	.Ltmp1432-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1401-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1401-.Lfunc_begin20
	.quad	.Ltmp1408-.Lfunc_begin20
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1400-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp1400-.Lfunc_begin20
	.quad	.Ltmp1408-.Lfunc_begin20
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp1417-.Lfunc_begin20
	.quad	.Ltmp1419-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	14                      # 14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1419-.Lfunc_begin20
	.quad	.Lfunc_end20-.Lfunc_begin20
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1435-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1436-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1437-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1438-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin20-.Lfunc_begin20
	.quad	.Ltmp1434-.Lfunc_begin20
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Lfunc_begin22-.Lfunc_begin21
	.quad	.Ltmp1444-.Lfunc_begin21
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1444-.Lfunc_begin21
	.quad	.Ltmp1447-.Lfunc_begin21
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Lfunc_begin23-.Lfunc_begin21
	.quad	.Ltmp1452-.Lfunc_begin21
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1452-.Lfunc_begin21
	.quad	.Ltmp1457-.Lfunc_begin21
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp1453-.Lfunc_begin21
	.quad	.Ltmp1454-.Lfunc_begin21
	.short	2                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.quad	.Ltmp1454-.Lfunc_begin21
	.quad	.Ltmp1455-.Lfunc_begin21
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp1454-.Lfunc_begin21
	.quad	.Ltmp1455-.Lfunc_begin21
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Ltmp1455-.Lfunc_begin21
	.quad	.Ltmp1456-.Lfunc_begin21
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Lfunc_begin25-.Lfunc_begin25
	.quad	.Ltmp1463-.Lfunc_begin25
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1463-.Lfunc_begin25
	.quad	.Ltmp1470-.Lfunc_begin25
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Ltmp1464-.Lfunc_begin25
	.quad	.Lfunc_end25-.Lfunc_begin25
	.short	2                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
.Lsection_abbrev:
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	4                       # DW_TAG_enumeration_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	40                      # DW_TAG_enumerator
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	10                      # DW_FORM_block1
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
	.section	.debug_info,"",@progbits
.Lsection_info:
.Lcu_begin0:
	.long	3637                    # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xe2e DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
	.byte	2                       # Abbrev [2] 0x2a:0x15 DW_TAG_variable
	.long	.Linfo_string3          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	grid_points
	.byte	3                       # Abbrev [3] 0x3f:0xc DW_TAG_array_type
	.long	75                      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x44:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x4b:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	6                       # Abbrev [6] 0x52:0x7 DW_TAG_base_type
	.long	.Linfo_string5          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	2                       # Abbrev [2] 0x59:0x15 DW_TAG_variable
	.long	.Linfo_string6          # DW_AT_name
	.long	75                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	nx2
	.byte	2                       # Abbrev [2] 0x6e:0x15 DW_TAG_variable
	.long	.Linfo_string7          # DW_AT_name
	.long	75                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ny2
	.byte	2                       # Abbrev [2] 0x83:0x15 DW_TAG_variable
	.long	.Linfo_string8          # DW_AT_name
	.long	75                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	nz2
	.byte	2                       # Abbrev [2] 0x98:0x15 DW_TAG_variable
	.long	.Linfo_string9          # DW_AT_name
	.long	173                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	timeron
	.byte	7                       # Abbrev [7] 0xad:0xb DW_TAG_typedef
	.long	184                     # DW_AT_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0xb8:0x11 DW_TAG_enumeration_type
	.byte	4                       # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0xbc:0x6 DW_TAG_enumerator
	.long	.Linfo_string10         # DW_AT_name
	.byte	0                       # DW_AT_const_value
	.byte	9                       # Abbrev [9] 0xc2:0x6 DW_TAG_enumerator
	.long	.Linfo_string11         # DW_AT_name
	.byte	1                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0xc9:0x15 DW_TAG_variable
	.long	.Linfo_string13         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx1
	.byte	5                       # Abbrev [5] 0xde:0x7 DW_TAG_base_type
	.long	.Linfo_string14         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0xe5:0x15 DW_TAG_variable
	.long	.Linfo_string15         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx2
	.byte	2                       # Abbrev [2] 0xfa:0x15 DW_TAG_variable
	.long	.Linfo_string16         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx3
	.byte	2                       # Abbrev [2] 0x10f:0x15 DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty1
	.byte	2                       # Abbrev [2] 0x124:0x15 DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty2
	.byte	2                       # Abbrev [2] 0x139:0x15 DW_TAG_variable
	.long	.Linfo_string19         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty3
	.byte	2                       # Abbrev [2] 0x14e:0x15 DW_TAG_variable
	.long	.Linfo_string20         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz1
	.byte	2                       # Abbrev [2] 0x163:0x15 DW_TAG_variable
	.long	.Linfo_string21         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz2
	.byte	2                       # Abbrev [2] 0x178:0x15 DW_TAG_variable
	.long	.Linfo_string22         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz3
	.byte	2                       # Abbrev [2] 0x18d:0x15 DW_TAG_variable
	.long	.Linfo_string23         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx1
	.byte	2                       # Abbrev [2] 0x1a2:0x15 DW_TAG_variable
	.long	.Linfo_string24         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx2
	.byte	2                       # Abbrev [2] 0x1b7:0x15 DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx3
	.byte	2                       # Abbrev [2] 0x1cc:0x15 DW_TAG_variable
	.long	.Linfo_string26         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx4
	.byte	2                       # Abbrev [2] 0x1e1:0x15 DW_TAG_variable
	.long	.Linfo_string27         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx5
	.byte	2                       # Abbrev [2] 0x1f6:0x15 DW_TAG_variable
	.long	.Linfo_string28         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy1
	.byte	2                       # Abbrev [2] 0x20b:0x15 DW_TAG_variable
	.long	.Linfo_string29         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy2
	.byte	2                       # Abbrev [2] 0x220:0x15 DW_TAG_variable
	.long	.Linfo_string30         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy3
	.byte	2                       # Abbrev [2] 0x235:0x15 DW_TAG_variable
	.long	.Linfo_string31         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy4
	.byte	2                       # Abbrev [2] 0x24a:0x15 DW_TAG_variable
	.long	.Linfo_string32         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy5
	.byte	2                       # Abbrev [2] 0x25f:0x15 DW_TAG_variable
	.long	.Linfo_string33         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz1
	.byte	2                       # Abbrev [2] 0x274:0x15 DW_TAG_variable
	.long	.Linfo_string34         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz2
	.byte	2                       # Abbrev [2] 0x289:0x15 DW_TAG_variable
	.long	.Linfo_string35         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz3
	.byte	2                       # Abbrev [2] 0x29e:0x15 DW_TAG_variable
	.long	.Linfo_string36         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz4
	.byte	2                       # Abbrev [2] 0x2b3:0x15 DW_TAG_variable
	.long	.Linfo_string37         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz5
	.byte	2                       # Abbrev [2] 0x2c8:0x15 DW_TAG_variable
	.long	.Linfo_string38         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dssp
	.byte	2                       # Abbrev [2] 0x2dd:0x15 DW_TAG_variable
	.long	.Linfo_string39         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dt
	.byte	2                       # Abbrev [2] 0x2f2:0x15 DW_TAG_variable
	.long	.Linfo_string40         # DW_AT_name
	.long	775                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ce
	.byte	3                       # Abbrev [3] 0x307:0x12 DW_TAG_array_type
	.long	222                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x30c:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	4                       # Abbrev [4] 0x312:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	13                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x319:0x15 DW_TAG_variable
	.long	.Linfo_string41         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dxmax
	.byte	2                       # Abbrev [2] 0x32e:0x15 DW_TAG_variable
	.long	.Linfo_string42         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dymax
	.byte	2                       # Abbrev [2] 0x343:0x15 DW_TAG_variable
	.long	.Linfo_string43         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dzmax
	.byte	2                       # Abbrev [2] 0x358:0x15 DW_TAG_variable
	.long	.Linfo_string44         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon1
	.byte	2                       # Abbrev [2] 0x36d:0x15 DW_TAG_variable
	.long	.Linfo_string45         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon2
	.byte	2                       # Abbrev [2] 0x382:0x15 DW_TAG_variable
	.long	.Linfo_string46         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon3
	.byte	2                       # Abbrev [2] 0x397:0x15 DW_TAG_variable
	.long	.Linfo_string47         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon4
	.byte	2                       # Abbrev [2] 0x3ac:0x15 DW_TAG_variable
	.long	.Linfo_string48         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	xxcon5
	.byte	2                       # Abbrev [2] 0x3c1:0x15 DW_TAG_variable
	.long	.Linfo_string49         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx1tx1
	.byte	2                       # Abbrev [2] 0x3d6:0x15 DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx2tx1
	.byte	2                       # Abbrev [2] 0x3eb:0x15 DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx3tx1
	.byte	2                       # Abbrev [2] 0x400:0x15 DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx4tx1
	.byte	2                       # Abbrev [2] 0x415:0x15 DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx5tx1
	.byte	2                       # Abbrev [2] 0x42a:0x15 DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon1
	.byte	2                       # Abbrev [2] 0x43f:0x15 DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon2
	.byte	2                       # Abbrev [2] 0x454:0x15 DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon3
	.byte	2                       # Abbrev [2] 0x469:0x15 DW_TAG_variable
	.long	.Linfo_string57         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon4
	.byte	2                       # Abbrev [2] 0x47e:0x15 DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	yycon5
	.byte	2                       # Abbrev [2] 0x493:0x15 DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy1ty1
	.byte	2                       # Abbrev [2] 0x4a8:0x15 DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy2ty1
	.byte	2                       # Abbrev [2] 0x4bd:0x15 DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy3ty1
	.byte	2                       # Abbrev [2] 0x4d2:0x15 DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy4ty1
	.byte	2                       # Abbrev [2] 0x4e7:0x15 DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy5ty1
	.byte	2                       # Abbrev [2] 0x4fc:0x15 DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon1
	.byte	2                       # Abbrev [2] 0x511:0x15 DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon2
	.byte	2                       # Abbrev [2] 0x526:0x15 DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon3
	.byte	2                       # Abbrev [2] 0x53b:0x15 DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon4
	.byte	2                       # Abbrev [2] 0x550:0x15 DW_TAG_variable
	.long	.Linfo_string68         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	zzcon5
	.byte	2                       # Abbrev [2] 0x565:0x15 DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz1tz1
	.byte	2                       # Abbrev [2] 0x57a:0x15 DW_TAG_variable
	.long	.Linfo_string70         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz2tz1
	.byte	2                       # Abbrev [2] 0x58f:0x15 DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz3tz1
	.byte	2                       # Abbrev [2] 0x5a4:0x15 DW_TAG_variable
	.long	.Linfo_string72         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz4tz1
	.byte	2                       # Abbrev [2] 0x5b9:0x15 DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz5tz1
	.byte	2                       # Abbrev [2] 0x5ce:0x15 DW_TAG_variable
	.long	.Linfo_string74         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dnxm1
	.byte	2                       # Abbrev [2] 0x5e3:0x15 DW_TAG_variable
	.long	.Linfo_string75         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dnym1
	.byte	2                       # Abbrev [2] 0x5f8:0x15 DW_TAG_variable
	.long	.Linfo_string76         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dnzm1
	.byte	2                       # Abbrev [2] 0x60d:0x15 DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1c2
	.byte	2                       # Abbrev [2] 0x622:0x15 DW_TAG_variable
	.long	.Linfo_string78         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1c5
	.byte	2                       # Abbrev [2] 0x637:0x15 DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4
	.byte	2                       # Abbrev [2] 0x64c:0x15 DW_TAG_variable
	.long	.Linfo_string80         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1345
	.byte	2                       # Abbrev [2] 0x661:0x15 DW_TAG_variable
	.long	.Linfo_string81         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	conz1
	.byte	2                       # Abbrev [2] 0x676:0x15 DW_TAG_variable
	.long	.Linfo_string82         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c1
	.byte	2                       # Abbrev [2] 0x68b:0x15 DW_TAG_variable
	.long	.Linfo_string83         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2
	.byte	2                       # Abbrev [2] 0x6a0:0x15 DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3
	.byte	2                       # Abbrev [2] 0x6b5:0x15 DW_TAG_variable
	.long	.Linfo_string85         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c4
	.byte	2                       # Abbrev [2] 0x6ca:0x15 DW_TAG_variable
	.long	.Linfo_string86         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c5
	.byte	2                       # Abbrev [2] 0x6df:0x15 DW_TAG_variable
	.long	.Linfo_string87         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c4dssp
	.byte	2                       # Abbrev [2] 0x6f4:0x15 DW_TAG_variable
	.long	.Linfo_string88         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c5dssp
	.byte	2                       # Abbrev [2] 0x709:0x15 DW_TAG_variable
	.long	.Linfo_string89         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dtdssp
	.byte	2                       # Abbrev [2] 0x71e:0x15 DW_TAG_variable
	.long	.Linfo_string90         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttx1
	.byte	2                       # Abbrev [2] 0x733:0x15 DW_TAG_variable
	.long	.Linfo_string91         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	bt
	.byte	2                       # Abbrev [2] 0x748:0x15 DW_TAG_variable
	.long	.Linfo_string92         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttx2
	.byte	2                       # Abbrev [2] 0x75d:0x15 DW_TAG_variable
	.long	.Linfo_string93         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dtty1
	.byte	2                       # Abbrev [2] 0x772:0x15 DW_TAG_variable
	.long	.Linfo_string94         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dtty2
	.byte	2                       # Abbrev [2] 0x787:0x15 DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttz1
	.byte	2                       # Abbrev [2] 0x79c:0x15 DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dttz2
	.byte	2                       # Abbrev [2] 0x7b1:0x15 DW_TAG_variable
	.long	.Linfo_string97         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2dttx1
	.byte	2                       # Abbrev [2] 0x7c6:0x15 DW_TAG_variable
	.long	.Linfo_string98         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2dtty1
	.byte	2                       # Abbrev [2] 0x7db:0x15 DW_TAG_variable
	.long	.Linfo_string99         # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2dttz1
	.byte	2                       # Abbrev [2] 0x7f0:0x15 DW_TAG_variable
	.long	.Linfo_string100        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz1
	.byte	2                       # Abbrev [2] 0x805:0x15 DW_TAG_variable
	.long	.Linfo_string101        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz4
	.byte	2                       # Abbrev [2] 0x81a:0x15 DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz5
	.byte	2                       # Abbrev [2] 0x82f:0x15 DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	comz6
	.byte	2                       # Abbrev [2] 0x844:0x15 DW_TAG_variable
	.long	.Linfo_string104        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4tx3
	.byte	2                       # Abbrev [2] 0x859:0x15 DW_TAG_variable
	.long	.Linfo_string105        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4ty3
	.byte	2                       # Abbrev [2] 0x86e:0x15 DW_TAG_variable
	.long	.Linfo_string106        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c3c4tz3
	.byte	2                       # Abbrev [2] 0x883:0x15 DW_TAG_variable
	.long	.Linfo_string107        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c2iv
	.byte	2                       # Abbrev [2] 0x898:0x15 DW_TAG_variable
	.long	.Linfo_string108        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	con43
	.byte	2                       # Abbrev [2] 0x8ad:0x15 DW_TAG_variable
	.long	.Linfo_string109        # DW_AT_name
	.long	222                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	con16
	.byte	2                       # Abbrev [2] 0x8c2:0x15 DW_TAG_variable
	.long	.Linfo_string110        # DW_AT_name
	.long	2263                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	65                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	u
	.byte	3                       # Abbrev [3] 0x8d7:0x1e DW_TAG_array_type
	.long	222                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x8dc:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0x8e2:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0x8e8:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0x8ee:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x8f5:0x15 DW_TAG_variable
	.long	.Linfo_string111        # DW_AT_name
	.long	2314                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	us
	.byte	3                       # Abbrev [3] 0x90a:0x18 DW_TAG_array_type
	.long	222                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x90f:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0x915:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0x91b:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x922:0x15 DW_TAG_variable
	.long	.Linfo_string112        # DW_AT_name
	.long	2314                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	vs
	.byte	2                       # Abbrev [2] 0x937:0x15 DW_TAG_variable
	.long	.Linfo_string113        # DW_AT_name
	.long	2314                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	68                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ws
	.byte	2                       # Abbrev [2] 0x94c:0x15 DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.long	2314                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	69                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	qs
	.byte	2                       # Abbrev [2] 0x961:0x15 DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.long	2314                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	70                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rho_i
	.byte	2                       # Abbrev [2] 0x976:0x15 DW_TAG_variable
	.long	.Linfo_string116        # DW_AT_name
	.long	2314                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	71                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	speed
	.byte	2                       # Abbrev [2] 0x98b:0x15 DW_TAG_variable
	.long	.Linfo_string117        # DW_AT_name
	.long	2314                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	square
	.byte	2                       # Abbrev [2] 0x9a0:0x15 DW_TAG_variable
	.long	.Linfo_string118        # DW_AT_name
	.long	2263                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	73                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rhs
	.byte	2                       # Abbrev [2] 0x9b5:0x15 DW_TAG_variable
	.long	.Linfo_string119        # DW_AT_name
	.long	2263                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	forcing
	.byte	2                       # Abbrev [2] 0x9ca:0x15 DW_TAG_variable
	.long	.Linfo_string120        # DW_AT_name
	.long	2527                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	cv
	.byte	3                       # Abbrev [3] 0x9df:0xc DW_TAG_array_type
	.long	222                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x9e4:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x9eb:0x15 DW_TAG_variable
	.long	.Linfo_string121        # DW_AT_name
	.long	2527                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	78                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rhon
	.byte	2                       # Abbrev [2] 0xa00:0x15 DW_TAG_variable
	.long	.Linfo_string122        # DW_AT_name
	.long	2527                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	79                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rhos
	.byte	2                       # Abbrev [2] 0xa15:0x15 DW_TAG_variable
	.long	.Linfo_string123        # DW_AT_name
	.long	2527                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rhoq
	.byte	2                       # Abbrev [2] 0xa2a:0x15 DW_TAG_variable
	.long	.Linfo_string124        # DW_AT_name
	.long	2527                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	cuf
	.byte	2                       # Abbrev [2] 0xa3f:0x15 DW_TAG_variable
	.long	.Linfo_string125        # DW_AT_name
	.long	2527                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	82                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	q
	.byte	2                       # Abbrev [2] 0xa54:0x15 DW_TAG_variable
	.long	.Linfo_string126        # DW_AT_name
	.long	2665                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ue
	.byte	3                       # Abbrev [3] 0xa69:0x12 DW_TAG_array_type
	.long	222                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0xa6e:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0xa74:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0xa7b:0x15 DW_TAG_variable
	.long	.Linfo_string127        # DW_AT_name
	.long	2665                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	buf
	.byte	2                       # Abbrev [2] 0xa90:0x15 DW_TAG_variable
	.long	.Linfo_string128        # DW_AT_name
	.long	2725                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	lhs
	.byte	3                       # Abbrev [3] 0xaa5:0x18 DW_TAG_array_type
	.long	222                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0xaaa:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0xab0:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	4                       # Abbrev [4] 0xab6:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0xabd:0x15 DW_TAG_variable
	.long	.Linfo_string129        # DW_AT_name
	.long	2725                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	lhsp
	.byte	2                       # Abbrev [2] 0xad2:0x15 DW_TAG_variable
	.long	.Linfo_string130        # DW_AT_name
	.long	2725                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	89                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	lhsm
	.byte	10                      # Abbrev [10] 0xae7:0x1 DW_TAG_pointer_type
	.byte	11                      # Abbrev [11] 0xae8:0x103 DW_TAG_subprogram
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string156        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	75                      # DW_AT_type
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	12                      # Abbrev [12] 0xb01:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc0            # DW_AT_location
	.long	.Linfo_string185        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
	.long	75                      # DW_AT_type
	.byte	12                      # Abbrev [12] 0xb10:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc1            # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
	.long	3087                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0xb1f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\001"
	.long	.Linfo_string182        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	3051                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0xb2e:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\002"
	.long	.Linfo_string183        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	3063                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb3d:0xf DW_TAG_variable
	.long	.Ldebug_loc2            # DW_AT_location
	.long	.Linfo_string187        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.long	3092                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb4c:0xf DW_TAG_variable
	.long	.Ldebug_loc3            # DW_AT_location
	.long	.Linfo_string231        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	75                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb5b:0xf DW_TAG_variable
	.long	.Ldebug_loc4            # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	75                      # DW_AT_type
	.byte	15                      # Abbrev [15] 0xb6a:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string234        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	75                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb76:0xf DW_TAG_variable
	.long	.Ldebug_loc5            # DW_AT_location
	.long	.Linfo_string235        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	222                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb85:0xf DW_TAG_variable
	.long	.Ldebug_loc6            # DW_AT_location
	.long	.Linfo_string236        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	97                      # DW_AT_decl_line
	.long	3080                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0xb94:0xf DW_TAG_variable
	.long	.Ldebug_loc7            # DW_AT_location
	.long	.Linfo_string237        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	96                      # DW_AT_decl_line
	.long	173                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0xba3:0xf DW_TAG_variable
	.long	.Ldebug_loc8            # DW_AT_location
	.long	.Linfo_string238        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	75                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0xbb2:0xf DW_TAG_variable
	.long	.Ldebug_loc9            # DW_AT_location
	.long	.Linfo_string155        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	222                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0xbc1:0xf DW_TAG_variable
	.long	.Ldebug_loc10           # DW_AT_location
	.long	.Linfo_string239        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	222                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0xbd0:0x1a DW_TAG_lexical_block
	.quad	.Ltmp14                 # DW_AT_low_pc
	.long	.Ltmp17-.Ltmp14         # DW_AT_high_pc
	.byte	15                      # Abbrev [15] 0xbdd:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string232        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	130                     # DW_AT_decl_line
	.long	75                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0xbeb:0xc DW_TAG_array_type
	.long	222                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0xbf0:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0xbf7:0xc DW_TAG_array_type
	.long	3075                    # DW_AT_type
	.byte	4                       # Abbrev [4] 0xbfc:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xc03:0x5 DW_TAG_pointer_type
	.long	3080                    # DW_AT_type
	.byte	5                       # Abbrev [5] 0xc08:0x7 DW_TAG_base_type
	.long	.Linfo_string184        # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	17                      # Abbrev [17] 0xc0f:0x5 DW_TAG_pointer_type
	.long	3075                    # DW_AT_type
	.byte	17                      # Abbrev [17] 0xc14:0x5 DW_TAG_pointer_type
	.long	3097                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0xc19:0xb DW_TAG_typedef
	.long	3108                    # DW_AT_type
	.long	.Linfo_string230        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0xc24:0x17c DW_TAG_structure_type
	.long	.Linfo_string229        # DW_AT_name
	.byte	216                     # DW_AT_byte_size
	.byte	23                      # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0xc2c:0xc DW_TAG_member
	.long	.Linfo_string188        # DW_AT_name
	.long	75                      # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc38:0xc DW_TAG_member
	.long	.Linfo_string189        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	251                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc44:0xc DW_TAG_member
	.long	.Linfo_string190        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	252                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc50:0xc DW_TAG_member
	.long	.Linfo_string191        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc5c:0xc DW_TAG_member
	.long	.Linfo_string192        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	254                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xc68:0xc DW_TAG_member
	.long	.Linfo_string193        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	255                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc74:0xd DW_TAG_member
	.long	.Linfo_string194        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc81:0xd DW_TAG_member
	.long	.Linfo_string195        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	257                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc8e:0xd DW_TAG_member
	.long	.Linfo_string196        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	258                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xc9b:0xd DW_TAG_member
	.long	.Linfo_string197        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xca8:0xd DW_TAG_member
	.long	.Linfo_string198        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	80                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcb5:0xd DW_TAG_member
	.long	.Linfo_string199        # DW_AT_name
	.long	3075                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	262                     # DW_AT_decl_line
	.byte	88                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcc2:0xd DW_TAG_member
	.long	.Linfo_string200        # DW_AT_name
	.long	3488                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	96                      # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xccf:0xd DW_TAG_member
	.long	.Linfo_string205        # DW_AT_name
	.long	3538                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.byte	104                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcdc:0xd DW_TAG_member
	.long	.Linfo_string206        # DW_AT_name
	.long	75                      # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	268                     # DW_AT_decl_line
	.byte	112                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xce9:0xd DW_TAG_member
	.long	.Linfo_string207        # DW_AT_name
	.long	75                      # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.byte	116                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xcf6:0xd DW_TAG_member
	.long	.Linfo_string208        # DW_AT_name
	.long	3543                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	274                     # DW_AT_decl_line
	.byte	120                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd03:0xd DW_TAG_member
	.long	.Linfo_string211        # DW_AT_name
	.long	3561                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	278                     # DW_AT_decl_line
	.byte	128                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd10:0xd DW_TAG_member
	.long	.Linfo_string213        # DW_AT_name
	.long	3568                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	279                     # DW_AT_decl_line
	.byte	130                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd1d:0xd DW_TAG_member
	.long	.Linfo_string215        # DW_AT_name
	.long	3575                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	280                     # DW_AT_decl_line
	.byte	131                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd2a:0xd DW_TAG_member
	.long	.Linfo_string216        # DW_AT_name
	.long	3587                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	136                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd37:0xd DW_TAG_member
	.long	.Linfo_string218        # DW_AT_name
	.long	3599                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	293                     # DW_AT_decl_line
	.byte	144                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd44:0xd DW_TAG_member
	.long	.Linfo_string220        # DW_AT_name
	.long	2791                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	302                     # DW_AT_decl_line
	.byte	152                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd51:0xd DW_TAG_member
	.long	.Linfo_string221        # DW_AT_name
	.long	2791                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	303                     # DW_AT_decl_line
	.byte	160                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd5e:0xd DW_TAG_member
	.long	.Linfo_string222        # DW_AT_name
	.long	2791                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	304                     # DW_AT_decl_line
	.byte	168                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd6b:0xd DW_TAG_member
	.long	.Linfo_string223        # DW_AT_name
	.long	2791                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	305                     # DW_AT_decl_line
	.byte	176                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd78:0xd DW_TAG_member
	.long	.Linfo_string224        # DW_AT_name
	.long	3610                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	306                     # DW_AT_decl_line
	.byte	184                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd85:0xd DW_TAG_member
	.long	.Linfo_string227        # DW_AT_name
	.long	75                      # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	308                     # DW_AT_decl_line
	.byte	192                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0xd92:0xd DW_TAG_member
	.long	.Linfo_string228        # DW_AT_name
	.long	3628                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.short	310                     # DW_AT_decl_line
	.byte	196                     # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xda0:0x5 DW_TAG_pointer_type
	.long	3493                    # DW_AT_type
	.byte	18                      # Abbrev [18] 0xda5:0x2d DW_TAG_structure_type
	.long	.Linfo_string204        # DW_AT_name
	.byte	24                      # DW_AT_byte_size
	.byte	23                      # DW_AT_decl_file
	.byte	160                     # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0xdad:0xc DW_TAG_member
	.long	.Linfo_string201        # DW_AT_name
	.long	3488                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	161                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xdb9:0xc DW_TAG_member
	.long	.Linfo_string202        # DW_AT_name
	.long	3538                    # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	162                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0xdc5:0xc DW_TAG_member
	.long	.Linfo_string203        # DW_AT_name
	.long	75                      # DW_AT_type
	.byte	23                      # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xdd2:0x5 DW_TAG_pointer_type
	.long	3108                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0xdd7:0xb DW_TAG_typedef
	.long	3554                    # DW_AT_type
	.long	.Linfo_string210        # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	131                     # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0xde2:0x7 DW_TAG_base_type
	.long	.Linfo_string209        # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	5                       # Abbrev [5] 0xde9:0x7 DW_TAG_base_type
	.long	.Linfo_string212        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	2                       # DW_AT_byte_size
	.byte	5                       # Abbrev [5] 0xdf0:0x7 DW_TAG_base_type
	.long	.Linfo_string214        # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0xdf7:0xc DW_TAG_array_type
	.long	3080                    # DW_AT_type
	.byte	4                       # Abbrev [4] 0xdfc:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	1                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xe03:0x5 DW_TAG_pointer_type
	.long	3592                    # DW_AT_type
	.byte	21                      # Abbrev [21] 0xe08:0x7 DW_TAG_typedef
	.long	.Linfo_string217        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	154                     # DW_AT_decl_line
	.byte	7                       # Abbrev [7] 0xe0f:0xb DW_TAG_typedef
	.long	3554                    # DW_AT_type
	.long	.Linfo_string219        # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
	.byte	7                       # Abbrev [7] 0xe1a:0xb DW_TAG_typedef
	.long	3621                    # DW_AT_type
	.long	.Linfo_string226        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0xe25:0x7 DW_TAG_base_type
	.long	.Linfo_string225        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0xe2c:0xc DW_TAG_array_type
	.long	3080                    # DW_AT_type
	.byte	4                       # Abbrev [4] 0xe31:0x6 DW_TAG_subrange_type
	.long	82                      # DW_AT_type
	.byte	20                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin1:
	.long	467                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	22                      # Abbrev [22] 0xb:0x1cc DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string131        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	0                       # DW_AT_low_pc
	.long	.Ldebug_ranges0         # DW_AT_ranges
	.byte	23                      # Abbrev [23] 0x2a:0xf7 DW_TAG_subprogram
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string157        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	13                      # Abbrev [13] 0x3f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\001"
	.long	.Linfo_string254        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	439                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4e:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string255        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5c:0xf DW_TAG_variable
	.long	.Ldebug_loc20           # DW_AT_location
	.long	.Linfo_string241        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6b:0xf DW_TAG_variable
	.long	.Ldebug_loc21           # DW_AT_location
	.long	.Linfo_string242        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x7a:0xf DW_TAG_variable
	.long	.Ldebug_loc22           # DW_AT_location
	.long	.Linfo_string243        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x89:0xf DW_TAG_variable
	.long	.Ldebug_loc23           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x98:0xf DW_TAG_variable
	.long	.Ldebug_loc24           # DW_AT_location
	.long	.Linfo_string244        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xa7:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	.Linfo_string256        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xbb:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string257        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	26                      # Abbrev [26] 0xc7:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	.Linfo_string258        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xdb:0xf DW_TAG_variable
	.long	.Ldebug_loc25           # DW_AT_location
	.long	.Linfo_string245        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	26                      # Abbrev [26] 0xea:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	.Linfo_string259        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xfe:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string246        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x10a:0xb DW_TAG_variable
	.long	.Linfo_string260        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x115:0xb DW_TAG_variable
	.long	.Linfo_string261        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x121:0x4b DW_TAG_subprogram
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string158        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	30                      # Abbrev [30] 0x136:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string291        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x145:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc57           # DW_AT_location
	.long	.Linfo_string292        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x154:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string242        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x160:0xb DW_TAG_variable
	.long	.Linfo_string246        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x16c:0x4b DW_TAG_subprogram
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string159        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	231                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	30                      # Abbrev [30] 0x181:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string292        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	231                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x190:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc68           # DW_AT_location
	.long	.Linfo_string291        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	231                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x19f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string233        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	233                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x1ab:0xb DW_TAG_variable
	.long	.Linfo_string246        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	233                     # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x1b7:0x18 DW_TAG_array_type
	.long	.Lsection_info+222      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x1bc:0x6 DW_TAG_subrange_type
	.long	463                     # DW_AT_type
	.byte	2                       # DW_AT_count
	.byte	4                       # Abbrev [4] 0x1c2:0x6 DW_TAG_subrange_type
	.long	463                     # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	4                       # Abbrev [4] 0x1c8:0x6 DW_TAG_subrange_type
	.long	463                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x1cf:0x7 DW_TAG_base_type
	.long	.Linfo_string5          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Lcu_begin2:
	.long	132                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x7d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string132        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2a:0x58 DW_TAG_subprogram
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string160        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	30                      # Abbrev [30] 0x3f:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	97
	.long	.Linfo_string245        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x4c:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	98
	.long	.Linfo_string244        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x59:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	99
	.long	.Linfo_string243        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	12                      # Abbrev [12] 0x66:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc19           # DW_AT_location
	.long	.Linfo_string240        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	130                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x75:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string246        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x82:0x5 DW_TAG_pointer_type
	.long	.Lsection_info+222      # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin3:
	.long	281                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x112 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string133        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0xdf DW_TAG_subprogram
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string161        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	13                      # Abbrev [13] 0x3f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\360"
	.long	.Linfo_string240        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	265                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc11           # DW_AT_location
	.long	.Linfo_string241        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc12           # DW_AT_location
	.long	.Linfo_string242        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc13           # DW_AT_location
	.long	.Linfo_string243        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc14           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc15           # DW_AT_location
	.long	.Linfo_string244        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc16           # DW_AT_location
	.long	.Linfo_string245        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xa8:0xf DW_TAG_variable
	.long	.Ldebug_loc17           # DW_AT_location
	.long	.Linfo_string246        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb7:0xf DW_TAG_variable
	.long	.Ldebug_loc18           # DW_AT_location
	.long	.Linfo_string247        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xc6:0xb DW_TAG_variable
	.long	.Linfo_string248        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xd1:0xb DW_TAG_variable
	.long	.Linfo_string249        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xdc:0xb DW_TAG_variable
	.long	.Linfo_string250        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xe7:0xb DW_TAG_variable
	.long	.Linfo_string251        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xf2:0xb DW_TAG_variable
	.long	.Linfo_string252        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xfd:0xb DW_TAG_variable
	.long	.Linfo_string253        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x109:0xc DW_TAG_array_type
	.long	.Lsection_info+222      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x10e:0x6 DW_TAG_subrange_type
	.long	277                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x115:0x7 DW_TAG_base_type
	.long	.Linfo_string5          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Lcu_begin4:
	.long	60                      # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x35 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string134        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
	.byte	34                      # Abbrev [34] 0x2a:0x15 DW_TAG_subprogram
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string162        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	0                       # End Of Children Mark
.Lcu_begin5:
	.long	60                      # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x35 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string135        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
	.byte	34                      # Abbrev [34] 0x2a:0x15 DW_TAG_subprogram
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string163        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	0                       # End Of Children Mark
.Lcu_begin6:
	.long	280                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x111 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string136        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0xf1 DW_TAG_subprogram
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string164        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc26           # DW_AT_location
	.long	.Linfo_string262        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc27           # DW_AT_location
	.long	.Linfo_string263        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc28           # DW_AT_location
	.long	.Linfo_string241        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc29           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc30           # DW_AT_location
	.long	.Linfo_string264        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc31           # DW_AT_location
	.long	.Linfo_string265        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc32           # DW_AT_location
	.long	.Linfo_string266        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xa8:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string246        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb4:0xf DW_TAG_variable
	.long	.Ldebug_loc33           # DW_AT_location
	.long	.Linfo_string267        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc3:0xf DW_TAG_variable
	.long	.Ldebug_loc34           # DW_AT_location
	.long	.Linfo_string268        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xd2:0xf DW_TAG_variable
	.long	.Ldebug_loc35           # DW_AT_location
	.long	.Linfo_string269        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xe1:0xf DW_TAG_variable
	.long	.Ldebug_loc36           # DW_AT_location
	.long	.Linfo_string270        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xf0:0xf DW_TAG_variable
	.long	.Ldebug_loc37           # DW_AT_location
	.long	.Linfo_string271        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xff:0xf DW_TAG_variable
	.long	.Ldebug_loc38           # DW_AT_location
	.long	.Linfo_string272        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x10e:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string242        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin7:
	.long	181                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xae DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string137        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x8e DW_TAG_subprogram
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string165        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	27                      # Abbrev [27] 0x3f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string242        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4b:0xf DW_TAG_variable
	.long	.Ldebug_loc52           # DW_AT_location
	.long	.Linfo_string273        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5a:0xf DW_TAG_variable
	.long	.Ldebug_loc53           # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x69:0xf DW_TAG_variable
	.long	.Ldebug_loc54           # DW_AT_location
	.long	.Linfo_string287        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x78:0xf DW_TAG_variable
	.long	.Ldebug_loc55           # DW_AT_location
	.long	.Linfo_string246        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x87:0xf DW_TAG_variable
	.long	.Ldebug_loc56           # DW_AT_location
	.long	.Linfo_string288        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x96:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xa1:0xb DW_TAG_variable
	.long	.Linfo_string289        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xac:0xb DW_TAG_variable
	.long	.Linfo_string290        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin8:
	.long	187                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string138        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x94 DW_TAG_subprogram
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string166        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc58           # DW_AT_location
	.long	.Linfo_string281        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc59           # DW_AT_location
	.long	.Linfo_string286        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc60           # DW_AT_location
	.long	.Linfo_string284        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc61           # DW_AT_location
	.long	.Linfo_string282        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x7b:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x86:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x91:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x9c:0xb DW_TAG_variable
	.long	.Linfo_string278        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xa7:0xb DW_TAG_variable
	.long	.Linfo_string279        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xb2:0xb DW_TAG_variable
	.long	.Linfo_string280        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin9:
	.long	185                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string139        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x92 DW_TAG_subprogram
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string167        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	27                      # Abbrev [27] 0x3f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string233        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4b:0xf DW_TAG_variable
	.long	.Ldebug_loc62           # DW_AT_location
	.long	.Linfo_string273        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5a:0xf DW_TAG_variable
	.long	.Ldebug_loc63           # DW_AT_location
	.long	.Linfo_string242        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x69:0xf DW_TAG_variable
	.long	.Ldebug_loc64           # DW_AT_location
	.long	.Linfo_string287        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x78:0xf DW_TAG_variable
	.long	.Ldebug_loc65           # DW_AT_location
	.long	.Linfo_string246        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x87:0xf DW_TAG_variable
	.long	.Ldebug_loc66           # DW_AT_location
	.long	.Linfo_string293        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x96:0xf DW_TAG_variable
	.long	.Ldebug_loc67           # DW_AT_location
	.long	.Linfo_string288        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xa5:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xb0:0xb DW_TAG_variable
	.long	.Linfo_string294        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin10:
	.long	187                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string140        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x94 DW_TAG_subprogram
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string168        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc69           # DW_AT_location
	.long	.Linfo_string281        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc70           # DW_AT_location
	.long	.Linfo_string286        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc71           # DW_AT_location
	.long	.Linfo_string284        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc72           # DW_AT_location
	.long	.Linfo_string282        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x7b:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x86:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x91:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x9c:0xb DW_TAG_variable
	.long	.Linfo_string278        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xa7:0xb DW_TAG_variable
	.long	.Linfo_string279        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xb2:0xb DW_TAG_variable
	.long	.Linfo_string280        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin11:
	.long	185                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string141        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x92 DW_TAG_subprogram
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string169        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	27                      # Abbrev [27] 0x3f:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string233        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4b:0xf DW_TAG_variable
	.long	.Ldebug_loc73           # DW_AT_location
	.long	.Linfo_string273        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5a:0xf DW_TAG_variable
	.long	.Ldebug_loc74           # DW_AT_location
	.long	.Linfo_string241        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x69:0xf DW_TAG_variable
	.long	.Ldebug_loc75           # DW_AT_location
	.long	.Linfo_string287        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x78:0xf DW_TAG_variable
	.long	.Ldebug_loc76           # DW_AT_location
	.long	.Linfo_string246        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x87:0xf DW_TAG_variable
	.long	.Ldebug_loc77           # DW_AT_location
	.long	.Linfo_string295        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x96:0xf DW_TAG_variable
	.long	.Ldebug_loc78           # DW_AT_location
	.long	.Linfo_string288        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xa5:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xb0:0xb DW_TAG_variable
	.long	.Linfo_string296        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin12:
	.long	311                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x130 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string142        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x110 DW_TAG_subprogram
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string170        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc79           # DW_AT_location
	.long	.Linfo_string297        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc80           # DW_AT_location
	.long	.Linfo_string298        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc81           # DW_AT_location
	.long	.Linfo_string299        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc82           # DW_AT_location
	.long	.Linfo_string300        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc83           # DW_AT_location
	.long	.Linfo_string278        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc84           # DW_AT_location
	.long	.Linfo_string279        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc85           # DW_AT_location
	.long	.Linfo_string281        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xa8:0xf DW_TAG_variable
	.long	.Ldebug_loc86           # DW_AT_location
	.long	.Linfo_string286        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb7:0xf DW_TAG_variable
	.long	.Ldebug_loc87           # DW_AT_location
	.long	.Linfo_string301        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc6:0xf DW_TAG_variable
	.long	.Ldebug_loc88           # DW_AT_location
	.long	.Linfo_string302        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xd5:0xf DW_TAG_variable
	.long	.Ldebug_loc89           # DW_AT_location
	.long	.Linfo_string277        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xe4:0xf DW_TAG_variable
	.long	.Ldebug_loc90           # DW_AT_location
	.long	.Linfo_string284        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xf3:0xf DW_TAG_variable
	.long	.Ldebug_loc91           # DW_AT_location
	.long	.Linfo_string282        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x102:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x10d:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x118:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x123:0xb DW_TAG_variable
	.long	.Linfo_string285        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x12e:0xb DW_TAG_variable
	.long	.Linfo_string280        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin13:
	.long	105                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x62 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string143        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x42 DW_TAG_subprogram
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string171        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	28                      # Abbrev [28] 0x3f:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x4a:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x55:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x60:0xb DW_TAG_variable
	.long	.Linfo_string246        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin14:
	.long	300                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x125 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string144        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
	.byte	23                      # Abbrev [23] 0x2a:0x105 DW_TAG_subprogram
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string172        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	25                      # Abbrev [25] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc39           # DW_AT_location
	.long	.Linfo_string273        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x4e:0xf DW_TAG_variable
	.long	.Ldebug_loc40           # DW_AT_location
	.long	.Linfo_string274        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc41           # DW_AT_location
	.long	.Linfo_string275        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc42           # DW_AT_location
	.long	.Linfo_string276        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc43           # DW_AT_location
	.long	.Linfo_string277        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc44           # DW_AT_location
	.long	.Linfo_string278        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc45           # DW_AT_location
	.long	.Linfo_string279        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xa8:0xf DW_TAG_variable
	.long	.Ldebug_loc46           # DW_AT_location
	.long	.Linfo_string280        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb7:0xf DW_TAG_variable
	.long	.Ldebug_loc47           # DW_AT_location
	.long	.Linfo_string281        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc6:0xf DW_TAG_variable
	.long	.Ldebug_loc48           # DW_AT_location
	.long	.Linfo_string282        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xd5:0xf DW_TAG_variable
	.long	.Ldebug_loc49           # DW_AT_location
	.long	.Linfo_string283        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xe4:0xf DW_TAG_variable
	.long	.Ldebug_loc50           # DW_AT_location
	.long	.Linfo_string284        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xf3:0xf DW_TAG_variable
	.long	.Ldebug_loc51           # DW_AT_location
	.long	.Linfo_string285        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x102:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x10d:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x118:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x123:0xb DW_TAG_variable
	.long	.Linfo_string286        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin15:
	.long	316                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x135 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string145        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin18 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2a:0xa9 DW_TAG_subprogram
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string173        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc95           # DW_AT_location
	.long	.Linfo_string313        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+4242     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4e:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	32
	.long	.Linfo_string312        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x5c:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string246        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x68:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string242        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x74:0xf DW_TAG_variable
	.long	.Ldebug_loc96           # DW_AT_location
	.long	.Linfo_string243        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x83:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string233        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8f:0xf DW_TAG_variable
	.long	.Ldebug_loc97           # DW_AT_location
	.long	.Linfo_string244        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x9e:0xf DW_TAG_variable
	.long	.Ldebug_loc98           # DW_AT_location
	.long	.Linfo_string245        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0xad:0xf DW_TAG_variable
	.long	.Ldebug_loc99           # DW_AT_location
	.long	.Linfo_string171        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xbc:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0xc7:0xb DW_TAG_variable
	.long	.Linfo_string314        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0xd3:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string174        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0xe8:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc100          # DW_AT_location
	.long	.Linfo_string313        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.long	.Lsection_info+4242     # DW_AT_type
	.byte	27                      # Abbrev [27] 0xf7:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string246        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0x103:0xf DW_TAG_variable
	.long	.Ldebug_loc101          # DW_AT_location
	.long	.Linfo_string171        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	78                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x112:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x11d:0xb DW_TAG_variable
	.long	.Linfo_string242        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x128:0xb DW_TAG_variable
	.long	.Linfo_string241        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x133:0xb DW_TAG_variable
	.long	.Linfo_string314        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin16:
	.long	243                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xec DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string146        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2a:0xc7 DW_TAG_subprogram
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string175        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc92           # DW_AT_location
	.long	.Linfo_string309        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x4e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc93           # DW_AT_location
	.long	.Linfo_string236        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x5d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc94           # DW_AT_location
	.long	.Linfo_string237        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	241                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x6c:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	.Linfo_string303        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x7b:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string304        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x89:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\200\002"
	.long	.Linfo_string305        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x98:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\320\001"
	.long	.Linfo_string306        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xa7:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.long	.Linfo_string307        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xb6:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\360"
	.long	.Linfo_string308        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+4513     # DW_AT_type
	.byte	26                      # Abbrev [26] 0xc5:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	58
	.byte	140
	.byte	48
	.byte	226
	.byte	142
	.byte	121
	.byte	69
	.byte	62
	.long	.Linfo_string310        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	28                      # Abbrev [28] 0xd9:0xb DW_TAG_variable
	.long	.Linfo_string311        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xe4:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string246        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0xf1:0x5 DW_TAG_pointer_type
	.long	.Lsection_info+173      # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin17:
	.long	398                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x187 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string147        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string148        # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20 # DW_AT_high_pc
	.byte	8                       # Abbrev [8] 0x2a:0x11 DW_TAG_enumeration_type
	.byte	4                       # DW_AT_byte_size
	.byte	3                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0x2e:0x6 DW_TAG_enumerator
	.long	.Linfo_string10         # DW_AT_name
	.byte	0                       # DW_AT_const_value
	.byte	9                       # Abbrev [9] 0x34:0x6 DW_TAG_enumerator
	.long	.Linfo_string11         # DW_AT_name
	.byte	1                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x3b:0x138 DW_TAG_subprogram
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string176        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0x50:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc102          # DW_AT_location
	.long	.Linfo_string316        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	31                      # Abbrev [31] 0x5f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc103          # DW_AT_location
	.long	.Linfo_string317        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+3080     # DW_AT_type
	.byte	31                      # Abbrev [31] 0x6e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc104          # DW_AT_location
	.long	.Linfo_string318        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x7d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc105          # DW_AT_location
	.long	.Linfo_string319        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x8c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc106          # DW_AT_location
	.long	.Linfo_string238        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	31                      # Abbrev [31] 0x9b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc107          # DW_AT_location
	.long	.Linfo_string231        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	31                      # Abbrev [31] 0xaa:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc108          # DW_AT_location
	.long	.Linfo_string155        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	31                      # Abbrev [31] 0xb9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc109          # DW_AT_location
	.long	.Linfo_string320        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	35                      # Abbrev [35] 0xc8:0xb DW_TAG_formal_parameter
	.long	.Linfo_string321        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	36                      # Abbrev [36] 0xd3:0xb DW_TAG_formal_parameter
	.long	.Linfo_string237        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	390                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0xde:0xb DW_TAG_formal_parameter
	.long	.Linfo_string327        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	35                      # Abbrev [35] 0xe9:0xb DW_TAG_formal_parameter
	.long	.Linfo_string328        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	35                      # Abbrev [35] 0xf4:0xb DW_TAG_formal_parameter
	.long	.Linfo_string329        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	31                      # Abbrev [31] 0xff:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc115          # DW_AT_location
	.long	.Linfo_string330        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	31                      # Abbrev [31] 0x10e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc114          # DW_AT_location
	.long	.Linfo_string326        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	31                      # Abbrev [31] 0x11d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc113          # DW_AT_location
	.long	.Linfo_string325        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	31                      # Abbrev [31] 0x12c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc112          # DW_AT_location
	.long	.Linfo_string324        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	31                      # Abbrev [31] 0x13b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc111          # DW_AT_location
	.long	.Linfo_string323        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x14a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string322        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	.Lsection_info+3075     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x155:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string315        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	371                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x163:0xf DW_TAG_variable
	.long	.Ldebug_loc110          # DW_AT_location
	.long	.Linfo_string242        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x173:0xc DW_TAG_array_type
	.long	.Lsection_info+3080     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x178:0x6 DW_TAG_subrange_type
	.long	383                     # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x17f:0x7 DW_TAG_base_type
	.long	.Linfo_string5          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	7                       # Abbrev [7] 0x186:0xb DW_TAG_typedef
	.long	42                      # DW_AT_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	0                       # End Of Children Mark
.Lcu_begin18:
	.long	344                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x151 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string149        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string148        # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin21          # DW_AT_low_pc
	.long	.Lfunc_end24-.Lfunc_begin21 # DW_AT_high_pc
	.byte	37                      # Abbrev [37] 0x2a:0x15 DW_TAG_variable
	.long	.Linfo_string150        # DW_AT_name
	.long	.Lsection_info+2527     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	start
	.byte	37                      # Abbrev [37] 0x3f:0x15 DW_TAG_variable
	.long	.Linfo_string151        # DW_AT_name
	.long	.Lsection_info+2527     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	elapsed
	.byte	29                      # Abbrev [29] 0x54:0x25 DW_TAG_subprogram
	.quad	.Lfunc_begin21          # DW_AT_low_pc
	.long	.Lfunc_end21-.Lfunc_begin21 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string177        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	30                      # Abbrev [30] 0x69:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string331        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	38                      # Abbrev [38] 0x79:0x18 DW_TAG_subprogram
	.long	.Linfo_string154        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+222      # DW_AT_type
                                        # DW_AT_APPLE_optimized
	.byte	1                       # DW_AT_inline
	.byte	28                      # Abbrev [28] 0x85:0xb DW_TAG_variable
	.long	.Linfo_string155        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x91:0x41 DW_TAG_subprogram
	.quad	.Lfunc_begin22          # DW_AT_low_pc
	.long	.Lfunc_end22-.Lfunc_begin22 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string178        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0xa6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc116          # DW_AT_location
	.long	.Linfo_string331        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	39                      # Abbrev [39] 0xb5:0x1c DW_TAG_inlined_subroutine
	.long	121                     # DW_AT_abstract_origin
	.quad	.Ltmp1445               # DW_AT_low_pc
	.long	.Ltmp1446-.Ltmp1445     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	40                      # Abbrev [40] 0xc8:0x8 DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	117
	.byte	0
	.long	133                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0xd2:0x60 DW_TAG_subprogram
	.quad	.Lfunc_begin23          # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin23 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string179        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	31                      # Abbrev [31] 0xe7:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc117          # DW_AT_location
	.long	.Linfo_string331        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	25                      # Abbrev [25] 0xf6:0xf DW_TAG_variable
	.long	.Ldebug_loc119          # DW_AT_location
	.long	.Linfo_string332        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	25                      # Abbrev [25] 0x105:0xf DW_TAG_variable
	.long	.Ldebug_loc120          # DW_AT_location
	.long	.Linfo_string155        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+222      # DW_AT_type
	.byte	39                      # Abbrev [39] 0x114:0x1d DW_TAG_inlined_subroutine
	.long	121                     # DW_AT_abstract_origin
	.quad	.Ltmp1453               # DW_AT_low_pc
	.long	.Ltmp1454-.Ltmp1453     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	41                      # Abbrev [41] 0x127:0x9 DW_TAG_variable
	.long	.Ldebug_loc118          # DW_AT_location
	.long	133                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	42                      # Abbrev [42] 0x132:0x29 DW_TAG_subprogram
	.quad	.Lfunc_begin24          # DW_AT_low_pc
	.long	.Lfunc_end24-.Lfunc_begin24 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string180        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+222      # DW_AT_type
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	30                      # Abbrev [30] 0x14b:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string331        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	.Lsection_info+75       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin19:
	.long	167                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string152        # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string148        # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin25          # DW_AT_low_pc
	.long	.Lfunc_end25-.Lfunc_begin25 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2a:0x49 DW_TAG_subprogram
	.quad	.Lfunc_begin25          # DW_AT_low_pc
	.long	.Lfunc_end25-.Lfunc_begin25 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string181        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	37                      # Abbrev [37] 0x3f:0x15 DW_TAG_variable
	.long	.Linfo_string153        # DW_AT_name
	.long	.Lsection_info+75       # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	wtime_.sec
	.byte	31                      # Abbrev [31] 0x54:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc121          # DW_AT_location
	.long	.Linfo_string155        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+4242     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x63:0xf DW_TAG_variable
	.long	.Ldebug_loc122          # DW_AT_location
	.long	.Linfo_string333        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.long	115                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x73:0x21 DW_TAG_structure_type
	.long	.Linfo_string338        # DW_AT_name
	.byte	16                      # DW_AT_byte_size
	.byte	28                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x7b:0xc DW_TAG_member
	.long	.Linfo_string334        # DW_AT_name
	.long	148                     # DW_AT_type
	.byte	28                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x87:0xc DW_TAG_member
	.long	.Linfo_string336        # DW_AT_name
	.long	159                     # DW_AT_type
	.byte	28                      # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	43                      # Abbrev [43] 0x94:0xb DW_TAG_typedef
	.long	.Lsection_info+3554     # DW_AT_type
	.long	.Linfo_string335        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	139                     # DW_AT_decl_line
	.byte	43                      # Abbrev [43] 0x9f:0xb DW_TAG_typedef
	.long	.Lsection_info+3554     # DW_AT_type
	.long	.Linfo_string337        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.byte	0                       # End Of Children Mark
	.section	.debug_ranges,"",@progbits
.Ldebug_range:
.Ldebug_ranges0:
	.quad	.Lfunc_begin4
	.quad	.Lfunc_end4
	.quad	.Lfunc_begin9
	.quad	.Lfunc_end9
	.quad	.Lfunc_begin12
	.quad	.Lfunc_end12
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
.Ldebug_macinfo:
.Lcu_macro_begin0:
.Lcu_macro_begin1:
.Lcu_macro_begin2:
.Lcu_macro_begin3:
.Lcu_macro_begin4:
.Lcu_macro_begin5:
.Lcu_macro_begin6:
.Lcu_macro_begin7:
.Lcu_macro_begin8:
.Lcu_macro_begin9:
.Lcu_macro_begin10:
.Lcu_macro_begin11:
.Lcu_macro_begin12:
.Lcu_macro_begin13:
.Lcu_macro_begin14:
.Lcu_macro_begin15:
.Lcu_macro_begin16:
.Lcu_macro_begin17:
.Lcu_macro_begin18:
.Lcu_macro_begin19:
	.byte	0                       # End Of Macro List Mark
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0 # Length of Public Names Info
.LpubNames_begin0:
	.short	2                       # DWARF Version
	.long	.Lcu_begin0             # Offset of Compilation Unit Info
	.long	3641                    # Compilation Unit Length
	.long	856                     # DIE offset
	.asciz	"xxcon1"                # External Name
	.long	877                     # DIE offset
	.asciz	"xxcon2"                # External Name
	.long	898                     # DIE offset
	.asciz	"xxcon3"                # External Name
	.long	919                     # DIE offset
	.asciz	"xxcon4"                # External Name
	.long	940                     # DIE offset
	.asciz	"xxcon5"                # External Name
	.long	2380                    # DIE offset
	.asciz	"qs"                    # External Name
	.long	1507                    # DIE offset
	.asciz	"dnym1"                 # External Name
	.long	961                     # DIE offset
	.asciz	"dx1tx1"                # External Name
	.long	397                     # DIE offset
	.asciz	"dx1"                   # External Name
	.long	418                     # DIE offset
	.asciz	"dx2"                   # External Name
	.long	439                     # DIE offset
	.asciz	"dx3"                   # External Name
	.long	460                     # DIE offset
	.asciz	"dx4"                   # External Name
	.long	481                     # DIE offset
	.asciz	"dx5"                   # External Name
	.long	1192                    # DIE offset
	.asciz	"dy2ty1"                # External Name
	.long	1423                    # DIE offset
	.asciz	"dz3tz1"                # External Name
	.long	1843                    # DIE offset
	.asciz	"bt"                    # External Name
	.long	201                     # DIE offset
	.asciz	"tx1"                   # External Name
	.long	229                     # DIE offset
	.asciz	"tx2"                   # External Name
	.long	250                     # DIE offset
	.asciz	"tx3"                   # External Name
	.long	1066                    # DIE offset
	.asciz	"yycon1"                # External Name
	.long	1087                    # DIE offset
	.asciz	"yycon2"                # External Name
	.long	1108                    # DIE offset
	.asciz	"yycon3"                # External Name
	.long	1129                    # DIE offset
	.asciz	"yycon4"                # External Name
	.long	1150                    # DIE offset
	.asciz	"yycon5"                # External Name
	.long	754                     # DIE offset
	.asciz	"ce"                    # External Name
	.long	1024                    # DIE offset
	.asciz	"dx4tx1"                # External Name
	.long	502                     # DIE offset
	.asciz	"dy1"                   # External Name
	.long	523                     # DIE offset
	.asciz	"dy2"                   # External Name
	.long	544                     # DIE offset
	.asciz	"dy3"                   # External Name
	.long	565                     # DIE offset
	.asciz	"dy4"                   # External Name
	.long	586                     # DIE offset
	.asciz	"dy5"                   # External Name
	.long	1255                    # DIE offset
	.asciz	"dy5ty1"                # External Name
	.long	2179                    # DIE offset
	.asciz	"c2iv"                  # External Name
	.long	2506                    # DIE offset
	.asciz	"cv"                    # External Name
	.long	271                     # DIE offset
	.asciz	"ty1"                   # External Name
	.long	292                     # DIE offset
	.asciz	"ty2"                   # External Name
	.long	313                     # DIE offset
	.asciz	"ty3"                   # External Name
	.long	42                      # DIE offset
	.asciz	"grid_points"           # External Name
	.long	835                     # DIE offset
	.asciz	"dzmax"                 # External Name
	.long	1276                    # DIE offset
	.asciz	"zzcon1"                # External Name
	.long	1297                    # DIE offset
	.asciz	"zzcon2"                # External Name
	.long	1318                    # DIE offset
	.asciz	"zzcon3"                # External Name
	.long	1339                    # DIE offset
	.asciz	"zzcon4"                # External Name
	.long	1360                    # DIE offset
	.asciz	"zzcon5"                # External Name
	.long	1528                    # DIE offset
	.asciz	"dnzm1"                 # External Name
	.long	2704                    # DIE offset
	.asciz	"lhs"                   # External Name
	.long	1381                    # DIE offset
	.asciz	"dz1tz1"                # External Name
	.long	607                     # DIE offset
	.asciz	"dz1"                   # External Name
	.long	628                     # DIE offset
	.asciz	"dz2"                   # External Name
	.long	649                     # DIE offset
	.asciz	"dz3"                   # External Name
	.long	670                     # DIE offset
	.asciz	"dz4"                   # External Name
	.long	691                     # DIE offset
	.asciz	"dz5"                   # External Name
	.long	2443                    # DIE offset
	.asciz	"square"                # External Name
	.long	1780                    # DIE offset
	.asciz	"c5dssp"                # External Name
	.long	1612                    # DIE offset
	.asciz	"c1345"                 # External Name
	.long	2539                    # DIE offset
	.asciz	"rhon"                  # External Name
	.long	733                     # DIE offset
	.asciz	"dt"                    # External Name
	.long	712                     # DIE offset
	.asciz	"dssp"                  # External Name
	.long	2581                    # DIE offset
	.asciz	"rhoq"                  # External Name
	.long	2560                    # DIE offset
	.asciz	"rhos"                  # External Name
	.long	2683                    # DIE offset
	.asciz	"buf"                   # External Name
	.long	152                     # DIE offset
	.asciz	"timeron"               # External Name
	.long	334                     # DIE offset
	.asciz	"tz1"                   # External Name
	.long	355                     # DIE offset
	.asciz	"tz2"                   # External Name
	.long	376                     # DIE offset
	.asciz	"tz3"                   # External Name
	.long	2221                    # DIE offset
	.asciz	"con16"                 # External Name
	.long	982                     # DIE offset
	.asciz	"dx2tx1"                # External Name
	.long	2116                    # DIE offset
	.asciz	"c3c4tx3"               # External Name
	.long	1591                    # DIE offset
	.asciz	"c3c4"                  # External Name
	.long	1213                    # DIE offset
	.asciz	"dy3ty1"                # External Name
	.long	1444                    # DIE offset
	.asciz	"dz4tz1"                # External Name
	.long	2422                    # DIE offset
	.asciz	"speed"                 # External Name
	.long	2623                    # DIE offset
	.asciz	"q"                     # External Name
	.long	1822                    # DIE offset
	.asciz	"dttx1"                 # External Name
	.long	1864                    # DIE offset
	.asciz	"dttx2"                 # External Name
	.long	2242                    # DIE offset
	.asciz	"u"                     # External Name
	.long	2644                    # DIE offset
	.asciz	"ue"                    # External Name
	.long	793                     # DIE offset
	.asciz	"dxmax"                 # External Name
	.long	2293                    # DIE offset
	.asciz	"us"                    # External Name
	.long	1969                    # DIE offset
	.asciz	"c2dttx1"               # External Name
	.long	2032                    # DIE offset
	.asciz	"comz1"                 # External Name
	.long	2053                    # DIE offset
	.asciz	"comz4"                 # External Name
	.long	1045                    # DIE offset
	.asciz	"dx5tx1"                # External Name
	.long	2095                    # DIE offset
	.asciz	"comz6"                 # External Name
	.long	2137                    # DIE offset
	.asciz	"c3c4ty3"               # External Name
	.long	2074                    # DIE offset
	.asciz	"comz5"                 # External Name
	.long	2770                    # DIE offset
	.asciz	"lhsm"                  # External Name
	.long	1885                    # DIE offset
	.asciz	"dtty1"                 # External Name
	.long	1906                    # DIE offset
	.asciz	"dtty2"                 # External Name
	.long	89                      # DIE offset
	.asciz	"nx2"                   # External Name
	.long	2749                    # DIE offset
	.asciz	"lhsp"                  # External Name
	.long	2602                    # DIE offset
	.asciz	"cuf"                   # External Name
	.long	2338                    # DIE offset
	.asciz	"vs"                    # External Name
	.long	1990                    # DIE offset
	.asciz	"c2dtty1"               # External Name
	.long	1171                    # DIE offset
	.asciz	"dy1ty1"                # External Name
	.long	2158                    # DIE offset
	.asciz	"c3c4tz3"               # External Name
	.long	1402                    # DIE offset
	.asciz	"dz2tz1"                # External Name
	.long	2401                    # DIE offset
	.asciz	"rho_i"                 # External Name
	.long	1801                    # DIE offset
	.asciz	"dtdssp"                # External Name
	.long	1927                    # DIE offset
	.asciz	"dttz1"                 # External Name
	.long	1948                    # DIE offset
	.asciz	"dttz2"                 # External Name
	.long	110                     # DIE offset
	.asciz	"ny2"                   # External Name
	.long	2200                    # DIE offset
	.asciz	"con43"                 # External Name
	.long	1486                    # DIE offset
	.asciz	"dnxm1"                 # External Name
	.long	2359                    # DIE offset
	.asciz	"ws"                    # External Name
	.long	1633                    # DIE offset
	.asciz	"conz1"                 # External Name
	.long	1003                    # DIE offset
	.asciz	"dx3tx1"                # External Name
	.long	2011                    # DIE offset
	.asciz	"c2dttz1"               # External Name
	.long	2464                    # DIE offset
	.asciz	"rhs"                   # External Name
	.long	1234                    # DIE offset
	.asciz	"dy4ty1"                # External Name
	.long	1759                    # DIE offset
	.asciz	"c4dssp"                # External Name
	.long	1465                    # DIE offset
	.asciz	"dz5tz1"                # External Name
	.long	131                     # DIE offset
	.asciz	"nz2"                   # External Name
	.long	814                     # DIE offset
	.asciz	"dymax"                 # External Name
	.long	2792                    # DIE offset
	.asciz	"main"                  # External Name
	.long	2485                    # DIE offset
	.asciz	"forcing"               # External Name
	.long	1549                    # DIE offset
	.asciz	"c1c2"                  # External Name
	.long	1570                    # DIE offset
	.asciz	"c1c5"                  # External Name
	.long	1654                    # DIE offset
	.asciz	"c1"                    # External Name
	.long	1675                    # DIE offset
	.asciz	"c2"                    # External Name
	.long	1696                    # DIE offset
	.asciz	"c3"                    # External Name
	.long	1717                    # DIE offset
	.asciz	"c4"                    # External Name
	.long	1738                    # DIE offset
	.asciz	"c5"                    # External Name
	.long	0                       # End Mark
.LpubNames_end0:
	.long	.LpubNames_end1-.LpubNames_begin1 # Length of Public Names Info
.LpubNames_begin1:
	.short	2                       # DWARF Version
	.long	.Lcu_begin1             # Offset of Compilation Unit Info
	.long	471                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"initialize"            # External Name
	.long	364                     # DIE offset
	.asciz	"lhsinitj"              # External Name
	.long	289                     # DIE offset
	.asciz	"lhsinit"               # External Name
	.long	0                       # End Mark
.LpubNames_end1:
	.long	.LpubNames_end2-.LpubNames_begin2 # Length of Public Names Info
.LpubNames_begin2:
	.short	2                       # DWARF Version
	.long	.Lcu_begin2             # Offset of Compilation Unit Info
	.long	136                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"exact_solution"        # External Name
	.long	0                       # End Mark
.LpubNames_end2:
	.long	.LpubNames_end3-.LpubNames_begin3 # Length of Public Names Info
.LpubNames_begin3:
	.short	2                       # DWARF Version
	.long	.Lcu_begin3             # Offset of Compilation Unit Info
	.long	285                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"exact_rhs"             # External Name
	.long	0                       # End Mark
.LpubNames_end3:
	.long	.LpubNames_end4-.LpubNames_begin4 # Length of Public Names Info
.LpubNames_begin4:
	.short	2                       # DWARF Version
	.long	.Lcu_begin4             # Offset of Compilation Unit Info
	.long	64                      # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"set_constants"         # External Name
	.long	0                       # End Mark
.LpubNames_end4:
	.long	.LpubNames_end5-.LpubNames_begin5 # Length of Public Names Info
.LpubNames_begin5:
	.short	2                       # DWARF Version
	.long	.Lcu_begin5             # Offset of Compilation Unit Info
	.long	64                      # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"adi"                   # External Name
	.long	0                       # End Mark
.LpubNames_end5:
	.long	.LpubNames_end6-.LpubNames_begin6 # Length of Public Names Info
.LpubNames_begin6:
	.short	2                       # DWARF Version
	.long	.Lcu_begin6             # Offset of Compilation Unit Info
	.long	284                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"compute_rhs"           # External Name
	.long	0                       # End Mark
.LpubNames_end6:
	.long	.LpubNames_end7-.LpubNames_begin7 # Length of Public Names Info
.LpubNames_begin7:
	.short	2                       # DWARF Version
	.long	.Lcu_begin7             # Offset of Compilation Unit Info
	.long	185                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"x_solve"               # External Name
	.long	0                       # End Mark
.LpubNames_end7:
	.long	.LpubNames_end8-.LpubNames_begin8 # Length of Public Names Info
.LpubNames_begin8:
	.short	2                       # DWARF Version
	.long	.Lcu_begin8             # Offset of Compilation Unit Info
	.long	191                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"ninvr"                 # External Name
	.long	0                       # End Mark
.LpubNames_end8:
	.long	.LpubNames_end9-.LpubNames_begin9 # Length of Public Names Info
.LpubNames_begin9:
	.short	2                       # DWARF Version
	.long	.Lcu_begin9             # Offset of Compilation Unit Info
	.long	189                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"y_solve"               # External Name
	.long	0                       # End Mark
.LpubNames_end9:
	.long	.LpubNames_end10-.LpubNames_begin10 # Length of Public Names Info
.LpubNames_begin10:
	.short	2                       # DWARF Version
	.long	.Lcu_begin10            # Offset of Compilation Unit Info
	.long	191                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"pinvr"                 # External Name
	.long	0                       # End Mark
.LpubNames_end10:
	.long	.LpubNames_end11-.LpubNames_begin11 # Length of Public Names Info
.LpubNames_begin11:
	.short	2                       # DWARF Version
	.long	.Lcu_begin11            # Offset of Compilation Unit Info
	.long	189                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"z_solve"               # External Name
	.long	0                       # End Mark
.LpubNames_end11:
	.long	.LpubNames_end12-.LpubNames_begin12 # Length of Public Names Info
.LpubNames_begin12:
	.short	2                       # DWARF Version
	.long	.Lcu_begin12            # Offset of Compilation Unit Info
	.long	315                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"tzetar"                # External Name
	.long	0                       # End Mark
.LpubNames_end12:
	.long	.LpubNames_end13-.LpubNames_begin13 # Length of Public Names Info
.LpubNames_begin13:
	.short	2                       # DWARF Version
	.long	.Lcu_begin13            # Offset of Compilation Unit Info
	.long	109                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"add"                   # External Name
	.long	0                       # End Mark
.LpubNames_end13:
	.long	.LpubNames_end14-.LpubNames_begin14 # Length of Public Names Info
.LpubNames_begin14:
	.short	2                       # DWARF Version
	.long	.Lcu_begin14            # Offset of Compilation Unit Info
	.long	304                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"txinvr"                # External Name
	.long	0                       # End Mark
.LpubNames_end14:
	.long	.LpubNames_end15-.LpubNames_begin15 # Length of Public Names Info
.LpubNames_begin15:
	.short	2                       # DWARF Version
	.long	.Lcu_begin15            # Offset of Compilation Unit Info
	.long	320                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"error_norm"            # External Name
	.long	211                     # DIE offset
	.asciz	"rhs_norm"              # External Name
	.long	0                       # End Mark
.LpubNames_end15:
	.long	.LpubNames_end16-.LpubNames_begin16 # Length of Public Names Info
.LpubNames_begin16:
	.short	2                       # DWARF Version
	.long	.Lcu_begin16            # Offset of Compilation Unit Info
	.long	247                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"verify"                # External Name
	.long	0                       # End Mark
.LpubNames_end16:
	.long	.LpubNames_end17-.LpubNames_begin17 # Length of Public Names Info
.LpubNames_begin17:
	.short	2                       # DWARF Version
	.long	.Lcu_begin17            # Offset of Compilation Unit Info
	.long	402                     # Compilation Unit Length
	.long	59                      # DIE offset
	.asciz	"print_results"         # External Name
	.long	0                       # End Mark
.LpubNames_end17:
	.long	.LpubNames_end18-.LpubNames_begin18 # Length of Public Names Info
.LpubNames_begin18:
	.short	2                       # DWARF Version
	.long	.Lcu_begin18            # Offset of Compilation Unit Info
	.long	348                     # Compilation Unit Length
	.long	145                     # DIE offset
	.asciz	"timer_start"           # External Name
	.long	210                     # DIE offset
	.asciz	"timer_stop"            # External Name
	.long	84                      # DIE offset
	.asciz	"timer_clear"           # External Name
	.long	121                     # DIE offset
	.asciz	"elapsed_time"          # External Name
	.long	306                     # DIE offset
	.asciz	"timer_read"            # External Name
	.long	42                      # DIE offset
	.asciz	"start"                 # External Name
	.long	63                      # DIE offset
	.asciz	"elapsed"               # External Name
	.long	0                       # End Mark
.LpubNames_end18:
	.long	.LpubNames_end19-.LpubNames_begin19 # Length of Public Names Info
.LpubNames_begin19:
	.short	2                       # DWARF Version
	.long	.Lcu_begin19            # Offset of Compilation Unit Info
	.long	171                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"wtime_"                # External Name
	.long	63                      # DIE offset
	.asciz	"sec"                   # External Name
	.long	0                       # End Mark
.LpubNames_end19:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0 # Length of Public Types Info
.LpubTypes_begin0:
	.short	2                       # DWARF Version
	.long	.Lcu_begin0             # Offset of Compilation Unit Info
	.long	3641                    # Compilation Unit Length
	.long	3097                    # DIE offset
	.asciz	"FILE"                  # External Name
	.long	3621                    # DIE offset
	.asciz	"long unsigned int"     # External Name
	.long	75                      # DIE offset
	.asciz	"int"                   # External Name
	.long	3543                    # DIE offset
	.asciz	"__off_t"               # External Name
	.long	3561                    # DIE offset
	.asciz	"unsigned short"        # External Name
	.long	3610                    # DIE offset
	.asciz	"size_t"                # External Name
	.long	3592                    # DIE offset
	.asciz	"_IO_lock_t"            # External Name
	.long	3108                    # DIE offset
	.asciz	"_IO_FILE"              # External Name
	.long	3599                    # DIE offset
	.asciz	"__off64_t"             # External Name
	.long	3493                    # DIE offset
	.asciz	"_IO_marker"            # External Name
	.long	3568                    # DIE offset
	.asciz	"signed char"           # External Name
	.long	3554                    # DIE offset
	.asciz	"long int"              # External Name
	.long	173                     # DIE offset
	.asciz	"logical"               # External Name
	.long	222                     # DIE offset
	.asciz	"double"                # External Name
	.long	3080                    # DIE offset
	.asciz	"char"                  # External Name
	.long	0                       # End Mark
.LpubTypes_end0:
	.long	.LpubTypes_end1-.LpubTypes_begin1 # Length of Public Types Info
.LpubTypes_begin1:
	.short	2                       # DWARF Version
	.long	.Lcu_begin17            # Offset of Compilation Unit Info
	.long	402                     # Compilation Unit Length
	.long	390                     # DIE offset
	.asciz	"logical"               # External Name
	.long	0                       # End Mark
.LpubTypes_end1:
	.long	.LpubTypes_end2-.LpubTypes_begin2 # Length of Public Types Info
.LpubTypes_begin2:
	.short	2                       # DWARF Version
	.long	.Lcu_begin19            # Offset of Compilation Unit Info
	.long	171                     # Compilation Unit Length
	.long	148                     # DIE offset
	.asciz	"__time_t"              # External Name
	.long	115                     # DIE offset
	.asciz	"timeval"               # External Name
	.long	159                     # DIE offset
	.asciz	"__suseconds_t"         # External Name
	.long	0                       # End Mark
.LpubTypes_end2:

	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
