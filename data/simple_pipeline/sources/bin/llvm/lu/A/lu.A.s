	.text
	.file	"lu/A/lu.A.bc"
	.file	1 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/lu.c"
	.file	2 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/../common/type.h"
	.file	3 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/../common/type.h"
	.file	4 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/c_timers.c"
	.file	5 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/../common/wtime.c"
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI0_0:
	.quad	4656443926220195758     # double 1984.77
.LCPI0_1:
	.quad	4613937818241073152     # double 3
.LCPI0_2:
	.quad	-4556141274844469658    # double -10923.299999999999
.LCPI0_3:
	.quad	4673362820821784986     # double 27770.900000000001
.LCPI0_4:
	.quad	-4539183878094454784    # double -144010
.LCPI0_5:
	.quad	4696837146684686336     # double 1.0E+6
.LCPI0_6:
	.quad	4607182418800017408     # double 1
.LCPI0_7:
	.quad	4636737291354636288     # double 100
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin0:
	.loc	1 130 0                 # lu.c:130:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	1 143 13 prologue_end   # lu.c:143:13
	pushq	%rbx
.Ltmp0:
	.cfi_def_cfa_offset 16
	subq	$336, %rsp              # imm = 0x150
.Ltmp1:
	.cfi_def_cfa_offset 352
.Ltmp2:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: main:argc <- %EDI
	#DEBUG_VALUE: main:argv <- %RSI
	movl	$.L.str, %edi
.Ltmp3:
	movl	$.L.str.1, %esi
.Ltmp4:
	callq	fopen
.Ltmp5:
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 143 39 is_stmt 0      # lu.c:143:39
	testq	%rax, %rax
.Ltmp6:
	.loc	1 143 7                 # lu.c:143:7
	je	.LBB0_2
.Ltmp7:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 144 13 is_stmt 1      # lu.c:144:13
	movl	$1, timeron(%rip)
	.loc	1 145 22                # lu.c:145:22
	movl	$.L.str.3, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.2, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 248(%rsp)
	.loc	1 147 21                # lu.c:147:21
	movl	$.L.str.5, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.4, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 264(%rsp)
	.loc	1 149 20                # lu.c:149:20
	movl	$.L.str.7, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.6, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 280(%rsp)
	.loc	1 151 21                # lu.c:151:21
	movl	$.L.str.9, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.8, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 296(%rsp)
	.loc	1 153 21                # lu.c:153:21
	movl	$.L.str.11, %ecx
	movd	%rcx, %xmm0
	movl	$.L.str.10, %ecx
	movd	%rcx, %xmm1
	punpcklqdq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	movdqu	%xmm1, 312(%rsp)
	.loc	1 155 23                # lu.c:155:23
	movq	$.L.str.12, 328(%rsp)
	.loc	1 156 5                 # lu.c:156:5
	movq	%rax, %rdi
	callq	fclose
.Ltmp8:
	jmp	.LBB0_3
.Ltmp9:
.LBB0_2:                                # %if.else
	#DEBUG_VALUE: main:fp <- %RAX
	.loc	1 158 13                # lu.c:158:13
	movl	$0, timeron(%rip)
.Ltmp10:
.LBB0_3:                                # %if.end
	.loc	1 164 3                 # lu.c:164:3
	xorl	%eax, %eax
	callq	read_input
	.loc	1 169 3                 # lu.c:169:3
	xorl	%eax, %eax
	callq	domain
	.loc	1 174 3                 # lu.c:174:3
	xorl	%eax, %eax
	callq	setcoeff
	.loc	1 179 3                 # lu.c:179:3
	xorl	%eax, %eax
	callq	setbv
	.loc	1 184 3                 # lu.c:184:3
	xorl	%eax, %eax
	callq	setiv
	.loc	1 189 3                 # lu.c:189:3
	xorl	%eax, %eax
	callq	erhs
	.loc	1 194 3                 # lu.c:194:3
	movl	$1, %edi
	callq	ssor
	.loc	1 199 3                 # lu.c:199:3
	xorl	%eax, %eax
	callq	setbv
	.loc	1 200 3                 # lu.c:200:3
	xorl	%eax, %eax
	callq	setiv
	.loc	1 205 8                 # lu.c:205:8
	movl	itmax(%rip), %edi
	.loc	1 205 3 is_stmt 0       # lu.c:205:3
	callq	ssor
	.loc	1 210 3 is_stmt 1       # lu.c:210:3
	xorl	%eax, %eax
	callq	error
	.loc	1 215 3                 # lu.c:215:3
	xorl	%eax, %eax
	callq	pintgr
	.loc	1 220 26                # lu.c:220:26
	movsd	frc(%rip), %xmm0        # xmm0 = mem[0],zero
	leaq	95(%rsp), %rdx
.Ltmp11:
	#DEBUG_VALUE: main:Class <- [%RDX+0]
	leaq	132(%rsp), %rcx
.Ltmp12:
	#DEBUG_VALUE: main:verified <- [%RCX+0]
	.loc	1 220 3 is_stmt 0       # lu.c:220:3
	movl	$rsdnm, %edi
	movl	$errnm, %esi
	callq	verify
	.loc	1 221 20 is_stmt 1      # lu.c:221:20
	movl	itmax(%rip), %r9d
	.loc	1 221 12 is_stmt 0      # lu.c:221:12
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%r9d, %xmm0
	.loc	1 221 47                # lu.c:221:47
	movl	nx0(%rip), %edx
.Ltmp13:
	.loc	1 221 39                # lu.c:221:39
	cvtsi2sdl	%edx, %xmm1
	.loc	1 221 37                # lu.c:221:37
	mulsd	.LCPI0_0(%rip), %xmm1
	.loc	1 222 17 is_stmt 1      # lu.c:222:17
	movl	ny0(%rip), %ecx
.Ltmp14:
	.loc	1 222 9 is_stmt 0       # lu.c:222:9
	cvtsi2sdl	%ecx, %xmm2
	.loc	1 222 7                 # lu.c:222:7
	mulsd	%xmm1, %xmm2
	.loc	1 223 17 is_stmt 1      # lu.c:223:17
	movl	nz0(%rip), %r8d
	.loc	1 223 9 is_stmt 0       # lu.c:223:9
	cvtsi2sdl	%r8d, %xmm3
	.loc	1 223 7                 # lu.c:223:7
	mulsd	%xmm2, %xmm3
	.loc	1 224 36 is_stmt 1      # lu.c:224:36
	leal	(%rcx,%rdx), %eax
	.loc	1 224 40 is_stmt 0      # lu.c:224:40
	addl	%r8d, %eax
	.loc	1 224 24                # lu.c:224:24
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	1 224 45                # lu.c:224:45
	movsd	.LCPI0_1(%rip), %xmm2   # xmm2 = mem[0],zero
	movapd	%xmm1, %xmm4
	divsd	%xmm2, %xmm4
	.loc	1 224 19                # lu.c:224:19
	mulsd	%xmm4, %xmm4
	.loc	1 224 17                # lu.c:224:17
	mulsd	.LCPI0_2(%rip), %xmm4
	.loc	1 224 7                 # lu.c:224:7
	addsd	%xmm3, %xmm4
	.loc	1 225 17 is_stmt 1      # lu.c:225:17
	mulsd	.LCPI0_3(%rip), %xmm1
	.loc	1 225 40 is_stmt 0      # lu.c:225:40
	divsd	%xmm2, %xmm1
	.loc	1 225 7                 # lu.c:225:7
	addsd	%xmm4, %xmm1
	.loc	1 226 7 is_stmt 1       # lu.c:226:7
	addsd	.LCPI0_4(%rip), %xmm1
	.loc	1 221 26                # lu.c:221:26
	mulsd	%xmm0, %xmm1
	.loc	1 227 8                 # lu.c:227:8
	movsd	maxtime(%rip), %xmm0    # xmm0 = mem[0],zero
	movsd	.LCPI0_5(%rip), %xmm2   # xmm2 = mem[0],zero
	.loc	1 227 15 is_stmt 0      # lu.c:227:15
	mulsd	%xmm0, %xmm2
	.loc	1 227 5                 # lu.c:227:5
	divsd	%xmm2, %xmm1
.Ltmp15:
	#DEBUG_VALUE: main:mflops <- %XMM1
	.loc	1 231 62 is_stmt 1      # lu.c:231:62
	movl	132(%rsp), %eax
.Ltmp16:
	#DEBUG_VALUE: main:verified <- %EAX
	.loc	1 229 3                 # lu.c:229:3
	movsbl	95(%rsp), %esi
	movl	%eax, 8(%rsp)
	movq	$.L.str.17, 80(%rsp)
	movq	$.L.str.17, 72(%rsp)
	movq	$.L.str.17, 64(%rsp)
	movq	$.L.str.18, 56(%rsp)
	movq	$.L.str.17, 48(%rsp)
	movq	$.L.str.17, 40(%rsp)
	movq	$.L.str.17, 32(%rsp)
	movq	$.L.str.16, 24(%rsp)
	movq	$.L.str.15, 16(%rsp)
	movq	$.L.str.14, (%rsp)
	movl	$.L.str.13, %edi
	callq	print_results
.Ltmp17:
	.loc	1 238 7                 # lu.c:238:7
	cmpl	$0, timeron(%rip)
	je	.LBB0_9
.Ltmp18:
# BB#4:                                 # %for.body.preheader
	#DEBUG_VALUE: main:verified <- %EAX
	#DEBUG_VALUE: main:mflops <- %XMM1
	.loc	1 240 18                # lu.c:240:18
	movl	$1, %edi
	callq	timer_read
	.loc	1 240 16 is_stmt 0      # lu.c:240:16
	movsd	%xmm0, 120(%rsp)        # 8-byte Spill
	movsd	%xmm0, 152(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$2, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 96(%rsp)         # 8-byte Spill
	movsd	%xmm0, 160(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$3, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 104(%rsp)        # 8-byte Spill
	movsd	%xmm0, 168(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$4, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 136(%rsp)        # 8-byte Spill
	movsd	%xmm0, 176(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$5, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 184(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$6, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 192(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$7, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 200(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$8, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 208(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$9, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 216(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$10, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 224(%rsp)
	.loc	1 240 18                # lu.c:240:18
	movl	$11, %edi
	callq	timer_read
	.loc	1 240 16                # lu.c:240:16
	movsd	%xmm0, 232(%rsp)
.Ltmp19:
	.loc	1 242 12 is_stmt 1      # lu.c:242:12
	movsd	maxtime(%rip), %xmm0    # xmm0 = mem[0],zero
.Ltmp20:
	#DEBUG_VALUE: main:tmax <- %XMM0
	.loc	1 243 14                # lu.c:243:14
	xorpd	%xmm1, %xmm1
.Ltmp21:
	#DEBUG_VALUE: main:tmax <- 1.000000e+00
	.loc	1 243 9 is_stmt 0       # lu.c:243:9
	movapd	%xmm0, %xmm2
	cmpeqsd	%xmm1, %xmm2
	movsd	.LCPI0_6(%rip), %xmm1   # xmm1 = mem[0],zero
	andpd	%xmm2, %xmm1
	andnpd	%xmm0, %xmm2
	orpd	%xmm1, %xmm2
	.loc	1 245 5 is_stmt 1       # lu.c:245:5
	movsd	%xmm2, 112(%rsp)        # 8-byte Spill
	movl	$.Lstr, %edi
	callq	puts
.Ltmp22:
	movsd	112(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	120(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
.Ltmp23:
	#DEBUG_VALUE: main:i <- 1
	movsd	96(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
.Ltmp24:
	.loc	1 250 27                # lu.c:250:27
	addsd	104(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	1 250 43 is_stmt 0      # lu.c:250:43
	addsd	136(%rsp), %xmm1        # 8-byte Folded Reload
.Ltmp25:
	#DEBUG_VALUE: main:t <- %XMM1
	movsd	%xmm1, 96(%rsp)         # 8-byte Spill
	movsd	.LCPI0_7(%rip), %xmm3   # xmm3 = mem[0],zero
	.loc	1 251 66 is_stmt 1      # lu.c:251:66
	mulsd	%xmm1, %xmm3
.Ltmp26:
	#DEBUG_VALUE: main:t <- [%RSP+96]
	.loc	1 251 71 is_stmt 0      # lu.c:251:71
	divsd	%xmm2, %xmm3
	movsd	%xmm3, 104(%rsp)        # 8-byte Spill
	movl	$.L.str.2, %esi
	movl	$1, %ebx
	jmp	.LBB0_5
.Ltmp27:
	.p2align	4, 0x90
.LBB0_8:                                # %for.inc72.for.body44_crit_edge
                                        #   in Loop: Header=BB0_5 Depth=1
	.loc	1 248 11 is_stmt 1      # lu.c:248:11
	movq	240(%rsp,%rbx,8), %rsi
	.loc	1 248 23 is_stmt 0      # lu.c:248:23
	movsd	144(%rsp,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	movsd	112(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
.LBB0_5:                                # %for.body44
                                        # =>This Inner Loop Header: Depth=1
	movsd	.LCPI0_7(%rip), %xmm3   # xmm3 = mem[0],zero
	.loc	1 248 41                # lu.c:248:41
	movsd	%xmm0, 120(%rsp)        # 8-byte Spill
	movapd	%xmm0, %xmm1
	mulsd	%xmm3, %xmm1
	.loc	1 248 46                # lu.c:248:46
	divsd	%xmm2, %xmm1
	.loc	1 247 7 is_stmt 1       # lu.c:247:7
	movl	$.L.str.20, %edi
	movb	$2, %al
	callq	printf
	.loc	1 249 11                # lu.c:249:11
	cmpq	$5, %rbx
	jne	.LBB0_7
# BB#6:                                 # %for.inc72.thread
                                        #   in Loop: Header=BB0_5 Depth=1
.Ltmp28:
	.loc	1 251 9                 # lu.c:251:9
	movl	$.L.str.21, %edi
	movl	$.L.str.22, %esi
	movb	$2, %al
	movsd	96(%rsp), %xmm0         # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	104(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	printf
	movsd	120(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	.loc	1 252 22                # lu.c:252:22
	subsd	96(%rsp), %xmm0         # 8-byte Folded Reload
.Ltmp29:
	#DEBUG_VALUE: main:t <- %XMM0
	.loc	1 253 67                # lu.c:253:67
	movapd	%xmm0, %xmm1
	mulsd	.LCPI0_7(%rip), %xmm1
	.loc	1 253 72 is_stmt 0      # lu.c:253:72
	divsd	112(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	1 253 9                 # lu.c:253:9
	movl	$.L.str.21, %edi
	movl	$.L.str.23, %esi
	movb	$2, %al
	callq	printf
	movl	$6, %ebx
	jmp	.LBB0_8
.Ltmp30:
	.p2align	4, 0x90
.LBB0_7:                                # %for.inc72
                                        #   in Loop: Header=BB0_5 Depth=1
	.loc	1 246 5 is_stmt 1 discriminator 1 # lu.c:246:5
	incq	%rbx
	cmpq	$12, %rbx
	jne	.LBB0_8
.Ltmp31:
.LBB0_9:                                # %if.end75
	.loc	1 259 1                 # lu.c:259:1
	xorl	%eax, %eax
	addq	$336, %rsp              # imm = 0x150
	popq	%rbx
	retq
.Ltmp32:
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI1_0:
	.quad	4487126258331716666     # double 1.0E-8
	.quad	4487126258331716666     # double 1.0E-8
	.text
	.globl	read_input
	.p2align	4, 0x90
	.type	read_input,@function
read_input:                             # @read_input
.Lfunc_begin1:
	.file	6 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/read_input.c"
	.loc	6 39 0                  # read_input.c:39:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	6 54 3 prologue_end     # read_input.c:54:3
	pushq	%rbx
.Ltmp33:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp34:
	.cfi_def_cfa_offset 32
.Ltmp35:
	.cfi_offset %rbx, -16
	movl	$.Lstr.3, %edi
	callq	puts
.Ltmp36:
	.loc	6 56 13                 # read_input.c:56:13
	movl	$.L.str.1.4, %edi
	movl	$.L.str.2.5, %esi
	callq	fopen
	movq	%rax, %rbx
.Ltmp37:
	#DEBUG_VALUE: read_input:fp <- %RBX
	.loc	6 56 41 is_stmt 0       # read_input.c:56:41
	testq	%rbx, %rbx
.Ltmp38:
	.loc	6 56 7                  # read_input.c:56:7
	je	.LBB1_24
.Ltmp39:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: read_input:fp <- %RBX
	.loc	6 57 5 is_stmt 1        # read_input.c:57:5
	movl	$.Lstr.16, %edi
	callq	puts
.Ltmp40:
	.p2align	4, 0x90
.LBB1_2:                                # %while.cond
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 59 12 discriminator 1 # read_input.c:59:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 59 5 is_stmt 0 discriminator 1 # read_input.c:59:5
	cmpl	$10, %eax
	jne	.LBB1_2
	.p2align	4, 0x90
.LBB1_3:                                # %while.cond5
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 60 12 is_stmt 1 discriminator 1 # read_input.c:60:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 60 5 is_stmt 0 discriminator 1 # read_input.c:60:5
	cmpl	$10, %eax
	jne	.LBB1_3
# BB#4:                                 # %while.end9
	.loc	6 61 14 is_stmt 1       # read_input.c:61:14
	movl	$.L.str.4.6, %esi
	movl	$ipr, %edx
	movl	$inorm, %ecx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
.Ltmp41:
	#DEBUG_VALUE: read_input:result <- 0
	.p2align	4, 0x90
.LBB1_5:                                # %while.cond11
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 62 12 discriminator 1 # read_input.c:62:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 62 5 is_stmt 0 discriminator 1 # read_input.c:62:5
	cmpl	$10, %eax
	jne	.LBB1_5
	.p2align	4, 0x90
.LBB1_6:                                # %while.cond16
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 64 12 is_stmt 1 discriminator 1 # read_input.c:64:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 64 5 is_stmt 0 discriminator 1 # read_input.c:64:5
	cmpl	$10, %eax
	jne	.LBB1_6
	.p2align	4, 0x90
.LBB1_7:                                # %while.cond21
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 65 12 is_stmt 1 discriminator 1 # read_input.c:65:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 65 5 is_stmt 0 discriminator 1 # read_input.c:65:5
	cmpl	$10, %eax
	jne	.LBB1_7
# BB#8:                                 # %while.end25
	.loc	6 66 14 is_stmt 1       # read_input.c:66:14
	movl	$.L.str.5.7, %esi
	movl	$itmax, %edx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: read_input:result <- 0
	.p2align	4, 0x90
.LBB1_9:                                # %while.cond27
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 67 12 discriminator 1 # read_input.c:67:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 67 5 is_stmt 0 discriminator 1 # read_input.c:67:5
	cmpl	$10, %eax
	jne	.LBB1_9
	.p2align	4, 0x90
.LBB1_10:                               # %while.cond32
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 69 12 is_stmt 1 discriminator 1 # read_input.c:69:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 69 5 is_stmt 0 discriminator 1 # read_input.c:69:5
	cmpl	$10, %eax
	jne	.LBB1_10
	.p2align	4, 0x90
.LBB1_11:                               # %while.cond37
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 70 12 is_stmt 1 discriminator 1 # read_input.c:70:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 70 5 is_stmt 0 discriminator 1 # read_input.c:70:5
	cmpl	$10, %eax
	jne	.LBB1_11
# BB#12:                                # %while.end41
	.loc	6 71 14 is_stmt 1       # read_input.c:71:14
	movl	$.L.str.6.8, %esi
	movl	$dt, %edx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: read_input:result <- 0
	.p2align	4, 0x90
.LBB1_13:                               # %while.cond43
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 72 12 discriminator 1 # read_input.c:72:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 72 5 is_stmt 0 discriminator 1 # read_input.c:72:5
	cmpl	$10, %eax
	jne	.LBB1_13
	.p2align	4, 0x90
.LBB1_14:                               # %while.cond48
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 74 12 is_stmt 1 discriminator 1 # read_input.c:74:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 74 5 is_stmt 0 discriminator 1 # read_input.c:74:5
	cmpl	$10, %eax
	jne	.LBB1_14
	.p2align	4, 0x90
.LBB1_15:                               # %while.cond53
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 75 12 is_stmt 1 discriminator 1 # read_input.c:75:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 75 5 is_stmt 0 discriminator 1 # read_input.c:75:5
	cmpl	$10, %eax
	jne	.LBB1_15
# BB#16:                                # %while.end57
	.loc	6 76 14 is_stmt 1       # read_input.c:76:14
	movl	$.L.str.6.8, %esi
	movl	$omega, %edx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: read_input:result <- 0
	.p2align	4, 0x90
.LBB1_17:                               # %while.cond59
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 77 12 discriminator 1 # read_input.c:77:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 77 5 is_stmt 0 discriminator 1 # read_input.c:77:5
	cmpl	$10, %eax
	jne	.LBB1_17
	.p2align	4, 0x90
.LBB1_18:                               # %while.cond64
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 79 12 is_stmt 1 discriminator 1 # read_input.c:79:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 79 5 is_stmt 0 discriminator 1 # read_input.c:79:5
	cmpl	$10, %eax
	jne	.LBB1_18
	.p2align	4, 0x90
.LBB1_19:                               # %while.cond69
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 80 12 is_stmt 1 discriminator 1 # read_input.c:80:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 80 5 is_stmt 0 discriminator 1 # read_input.c:80:5
	cmpl	$10, %eax
	jne	.LBB1_19
# BB#20:                                # %while.end73
	.loc	6 81 14 is_stmt 1       # read_input.c:81:14
	movq	$tolrsd+32, (%rsp)
	movl	$.L.str.7.9, %esi
	movl	$tolrsd, %edx
	movl	$tolrsd+8, %ecx
	movl	$tolrsd+16, %r8d
	movl	$tolrsd+24, %r9d
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: read_input:result <- 0
	.p2align	4, 0x90
.LBB1_21:                               # %while.cond75
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 83 12 discriminator 1 # read_input.c:83:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 83 5 is_stmt 0 discriminator 1 # read_input.c:83:5
	cmpl	$10, %eax
	jne	.LBB1_21
	.p2align	4, 0x90
.LBB1_22:                               # %while.cond80
                                        # =>This Inner Loop Header: Depth=1
	.loc	6 84 12 is_stmt 1 discriminator 1 # read_input.c:84:12
	movq	%rbx, %rdi
	callq	fgetc
	.loc	6 84 5 is_stmt 0 discriminator 1 # read_input.c:84:5
	cmpl	$10, %eax
	jne	.LBB1_22
# BB#23:                                # %while.end84
	.loc	6 85 14 is_stmt 1       # read_input.c:85:14
	movl	$.L.str.8.10, %esi
	movl	$nx0, %edx
	movl	$ny0, %ecx
	movl	$nz0, %r8d
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	__isoc99_fscanf
	#DEBUG_VALUE: read_input:result <- 0
	.loc	6 86 5                  # read_input.c:86:5
	movq	%rbx, %rdi
	callq	fclose
.Ltmp42:
	.loc	6 106 10                # read_input.c:106:10
	movl	nx0(%rip), %esi
	.loc	6 106 25 is_stmt 0 discriminator 1 # read_input.c:106:25
	movl	ny0(%rip), %edx
	.loc	6 106 40 discriminator 2 # read_input.c:106:40
	movl	nz0(%rip), %ecx
	jmp	.LBB1_25
.Ltmp43:
.LBB1_24:                               # %if.else
	#DEBUG_VALUE: read_input:fp <- %RBX
	.loc	6 88 9 is_stmt 1        # read_input.c:88:9
	movl	$1, ipr(%rip)
	.loc	6 89 11                 # read_input.c:89:11
	movl	$250, inorm(%rip)
	.loc	6 90 11                 # read_input.c:90:11
	movl	$250, itmax(%rip)
	.loc	6 91 8                  # read_input.c:91:8
	movabsq	$4611686018427387904, %rax # imm = 0x4000000000000000
	movq	%rax, dt(%rip)
	.loc	6 92 11                 # read_input.c:92:11
	movabsq	$4608083138725491507, %rax # imm = 0x3FF3333333333333
	movq	%rax, omega(%rip)
	.loc	6 93 15                 # read_input.c:93:15
	movaps	.LCPI1_0(%rip), %xmm0   # xmm0 = [1.000000e-08,1.000000e-08]
	movaps	%xmm0, tolrsd(%rip)
	.loc	6 95 15                 # read_input.c:95:15
	movaps	%xmm0, tolrsd+16(%rip)
	.loc	6 93 15                 # read_input.c:93:15
	movabsq	$4487126258331716666, %rax # imm = 0x3E45798EE2308C3A
	.loc	6 97 15                 # read_input.c:97:15
	movq	%rax, tolrsd+32(%rip)
	.loc	6 98 9                  # read_input.c:98:9
	movl	$64, nx0(%rip)
	.loc	6 99 9                  # read_input.c:99:9
	movl	$64, ny0(%rip)
	.loc	6 100 9                 # read_input.c:100:9
	movl	$64, nz0(%rip)
	movl	$64, %ecx
.Ltmp44:
	.loc	6 106 25 discriminator 1 # read_input.c:106:25
	movl	$64, %edx
	.loc	6 106 10 is_stmt 0      # read_input.c:106:10
	movl	$64, %esi
.Ltmp45:
.LBB1_25:                               # %if.end
	.loc	6 106 14                # read_input.c:106:14
	cmpl	$4, %esi
	jl	.LBB1_28
.Ltmp46:
# BB#26:                                # %if.end
	cmpl	$4, %edx
	jl	.LBB1_28
# BB#27:                                # %if.end
	cmpl	$3, %ecx
	jle	.LBB1_28
# BB#30:                                # %if.end93
.Ltmp47:
	.loc	6 112 14 is_stmt 1      # read_input.c:112:14
	cmpl	$64, %esi
	jg	.LBB1_33
.Ltmp48:
# BB#31:                                # %if.end93
	cmpl	$64, %edx
	jg	.LBB1_33
# BB#32:                                # %if.end93
	cmpl	$65, %ecx
	jge	.LBB1_33
# BB#34:                                # %if.end101
	.loc	6 119 3                 # read_input.c:119:3
	movl	$.L.str.11.11, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	6 120 32                # read_input.c:120:32
	movl	itmax(%rip), %esi
	.loc	6 120 3 is_stmt 0       # read_input.c:120:3
	movl	$.L.str.12.12, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	6 121 3 is_stmt 1       # read_input.c:121:3
	movl	$10, %edi
	addq	$16, %rsp
	popq	%rbx
	jmp	putchar                 # TAILCALL
.LBB1_28:                               # %if.then91
.Ltmp49:
	.loc	6 107 5                 # read_input.c:107:5
	movl	$.Lstr.15, %edi
	jmp	.LBB1_29
.Ltmp50:
.LBB1_33:                               # %if.then99
	.loc	6 113 5                 # read_input.c:113:5
	movl	$.Lstr.14, %edi
.Ltmp51:
.LBB1_29:                               # %if.then91
	.loc	6 107 5                 # read_input.c:107:5
	callq	puts
	.loc	6 109 5                 # read_input.c:109:5
	movl	$1, %edi
	callq	exit
.Ltmp52:
.Lfunc_end1:
	.size	read_input, .Lfunc_end1-read_input
	.cfi_endproc

	.globl	domain
	.p2align	4, 0x90
	.type	domain,@function
domain:                                 # @domain
.Lfunc_begin2:
	.file	7 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/domain.c"
	.loc	7 39 0                  # domain.c:39:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	7 77 9 prologue_end     # domain.c:77:9
	pushq	%rax
.Ltmp53:
	.cfi_def_cfa_offset 16
	movl	nx0(%rip), %esi
	.loc	7 43 6                  # domain.c:43:6
	movl	%esi, nx(%rip)
	.loc	7 79 9                  # domain.c:79:9
	movl	ny0(%rip), %edx
	.loc	7 44 6                  # domain.c:44:6
	movl	%edx, ny(%rip)
	.loc	7 81 9                  # domain.c:81:9
	movl	nz0(%rip), %ecx
	.loc	7 45 6                  # domain.c:45:6
	movl	%ecx, nz(%rip)
.Ltmp54:
	.loc	7 50 13                 # domain.c:50:13
	cmpl	$4, %esi
	jl	.LBB2_3
.Ltmp55:
# BB#1:                                 # %entry
	cmpl	$4, %edx
	jl	.LBB2_3
# BB#2:                                 # %entry
	cmpl	$3, %ecx
	jle	.LBB2_3
# BB#5:                                 # %if.end
.Ltmp56:
	.loc	7 58 13                 # domain.c:58:13
	cmpl	$64, %esi
	jg	.LBB2_8
.Ltmp57:
# BB#6:                                 # %if.end
	cmpl	$64, %edx
	jg	.LBB2_8
# BB#7:                                 # %if.end
	cmpl	$65, %ecx
	jge	.LBB2_8
# BB#9:                                 # %if.end11
	.loc	7 70 7                  # domain.c:70:7
	movl	$1, ist(%rip)
	.loc	7 71 13                 # domain.c:71:13
	decl	%esi
	.loc	7 71 8 is_stmt 0        # domain.c:71:8
	movl	%esi, iend(%rip)
	.loc	7 73 7 is_stmt 1        # domain.c:73:7
	movl	$1, jst(%rip)
	.loc	7 74 13                 # domain.c:74:13
	leal	-1(%rdx), %eax
	.loc	7 74 8 is_stmt 0        # domain.c:74:8
	movl	%eax, jend(%rip)
	.loc	7 76 7 is_stmt 1        # domain.c:76:7
	movl	$1, ii1(%rip)
	.loc	7 77 7                  # domain.c:77:7
	movl	%esi, ii2(%rip)
	.loc	7 78 7                  # domain.c:78:7
	movl	$1, ji1(%rip)
	.loc	7 79 13                 # domain.c:79:13
	addl	$-2, %edx
	.loc	7 79 7 is_stmt 0        # domain.c:79:7
	movl	%edx, ji2(%rip)
	.loc	7 80 7 is_stmt 1        # domain.c:80:7
	movl	$2, ki1(%rip)
	.loc	7 81 13                 # domain.c:81:13
	decl	%ecx
	.loc	7 81 7 is_stmt 0        # domain.c:81:7
	movl	%ecx, ki2(%rip)
	.loc	7 82 1 is_stmt 1        # domain.c:82:1
	popq	%rax
	retq
.LBB2_3:                                # %if.then
.Ltmp58:
	.loc	7 51 5                  # domain.c:51:5
	movl	$.L.str.19, %edi
	jmp	.LBB2_4
.Ltmp59:
.LBB2_8:                                # %if.then9
	.loc	7 59 5                  # domain.c:59:5
	movl	$.L.str.1.20, %edi
.Ltmp60:
.LBB2_4:                                # %if.then
	.loc	7 51 5                  # domain.c:51:5
	xorl	%eax, %eax
	callq	printf
	.loc	7 55 5                  # domain.c:55:5
	movl	$1, %edi
	callq	exit
.Ltmp61:
.Lfunc_end2:
	.size	domain, .Lfunc_end2-domain
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI3_0:
	.quad	4607182418800017408     # double 1
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI3_1:
	.quad	4616189618054758400     # double 4
	.quad	4617315517961601024     # double 5
.LCPI3_2:
	.quad	4613937818241073152     # double 3
	.quad	4602678819172646912     # double 0.5
.LCPI3_3:
	.quad	4581421828931458171     # double 0.02
	.quad	4576918229304087675     # double 0.01
.LCPI3_4:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4602678819172646912     # double 0.5
.LCPI3_5:
	.quad	4600877379321698714     # double 0.40000000000000002
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI3_6:
	.quad	4607182418800017408     # double 1
	.quad	4611686018427387904     # double 2
.LCPI3_7:
	.quad	4613937818241073152     # double 3
	.quad	4576918229304087675     # double 0.01
.LCPI3_8:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4581421828931458171     # double 0.02
.LCPI3_9:
	.quad	4602678819172646912     # double 0.5
	.quad	4611686018427387904     # double 2
.LCPI3_10:
	.quad	4611686018427387904     # double 2
	.quad	4613937818241073152     # double 3
.LCPI3_11:
	.quad	4585925428558828667     # double 0.040000000000000001
	.quad	4584304132692975288     # double 0.029999999999999999
.LCPI3_12:
	.quad	4587366580439587226     # double 0.050000000000000003
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI3_13:
	.quad	4602678819172646912     # double 0.5
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI3_14:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4587366580439587226     # double 0.050000000000000003
.LCPI3_15:
	.quad	4585925428558828667     # double 0.040000000000000001
	.quad	4596373779694328218     # double 0.20000000000000001
.LCPI3_16:
	.quad	4591870180066957722     # double 0.10000000000000001
	.quad	4599075939470750515     # double 0.29999999999999999
.LCPI3_17:
	.quad	4617315517961601024     # double 5
	.quad	4616189618054758400     # double 4
.LCPI3_18:
	.quad	4613937818241073152     # double 3
	.quad	4611686018427387904     # double 2
.LCPI3_19:
	.quad	4591870180066957722     # double 0.10000000000000001
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI3_20:
	.quad	4587366580439587226     # double 0.050000000000000003
	.quad	4585925428558828667     # double 0.040000000000000001
.LCPI3_21:
	.quad	4584304132692975288     # double 0.029999999999999999
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI3_22:
	.quad	4599075939470750515     # double 0.29999999999999999
	.quad	4596373779694328218     # double 0.20000000000000001
	.text
	.globl	setcoeff
	.p2align	4, 0x90
	.type	setcoeff,@function
setcoeff:                               # @setcoeff
.Lfunc_begin3:
	.file	8 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/setcoeff.c"
	.loc	8 37 0                  # setcoeff.c:37:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	8 45 17 prologue_end    # setcoeff.c:45:17
	movl	nx0(%rip), %eax
	.loc	8 45 21 is_stmt 0       # setcoeff.c:45:21
	decl	%eax
	.loc	8 45 15                 # setcoeff.c:45:15
	cvtsi2sdl	%eax, %xmm1
	.loc	8 45 13                 # setcoeff.c:45:13
	movsd	.LCPI3_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm3
	divsd	%xmm1, %xmm3
	.loc	8 45 7                  # setcoeff.c:45:7
	movsd	%xmm3, dxi(%rip)
	.loc	8 46 18 is_stmt 1       # setcoeff.c:46:18
	movl	ny0(%rip), %eax
	.loc	8 46 22 is_stmt 0       # setcoeff.c:46:22
	decl	%eax
	.loc	8 46 16                 # setcoeff.c:46:16
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	8 46 14                 # setcoeff.c:46:14
	movapd	%xmm0, %xmm2
	divsd	%xmm1, %xmm2
	.loc	8 46 8                  # setcoeff.c:46:8
	movsd	%xmm2, deta(%rip)
	.loc	8 47 19 is_stmt 1       # setcoeff.c:47:19
	movl	nz0(%rip), %eax
	.loc	8 47 23 is_stmt 0       # setcoeff.c:47:23
	decl	%eax
	.loc	8 47 17                 # setcoeff.c:47:17
	cvtsi2sdl	%eax, %xmm4
	.loc	8 47 15                 # setcoeff.c:47:15
	movapd	%xmm0, %xmm1
	divsd	%xmm4, %xmm1
	.loc	8 47 9                  # setcoeff.c:47:9
	movsd	%xmm1, dzeta(%rip)
	.loc	8 49 21 is_stmt 1       # setcoeff.c:49:21
	movapd	%xmm3, %xmm4
	mulsd	%xmm4, %xmm4
	.loc	8 49 13 is_stmt 0       # setcoeff.c:49:13
	movapd	%xmm0, %xmm5
	divsd	%xmm4, %xmm5
	.loc	8 49 7                  # setcoeff.c:49:7
	movsd	%xmm5, tx1(%rip)
	.loc	8 51 13 is_stmt 1       # setcoeff.c:51:13
	movapd	%xmm0, %xmm4
	divsd	%xmm3, %xmm4
	.loc	8 50 21                 # setcoeff.c:50:21
	addsd	%xmm3, %xmm3
	.loc	8 50 13 is_stmt 0       # setcoeff.c:50:13
	movapd	%xmm0, %xmm5
	divsd	%xmm3, %xmm5
	.loc	8 50 7                  # setcoeff.c:50:7
	movsd	%xmm5, tx2(%rip)
	.loc	8 51 7 is_stmt 1        # setcoeff.c:51:7
	movsd	%xmm4, tx3(%rip)
	.loc	8 53 22                 # setcoeff.c:53:22
	movapd	%xmm2, %xmm3
	mulsd	%xmm3, %xmm3
	.loc	8 53 13 is_stmt 0       # setcoeff.c:53:13
	movapd	%xmm0, %xmm4
	divsd	%xmm3, %xmm4
	.loc	8 53 7                  # setcoeff.c:53:7
	movsd	%xmm4, ty1(%rip)
	.loc	8 55 13 is_stmt 1       # setcoeff.c:55:13
	movapd	%xmm0, %xmm3
	divsd	%xmm2, %xmm3
	.loc	8 54 21                 # setcoeff.c:54:21
	addsd	%xmm2, %xmm2
	.loc	8 54 13 is_stmt 0       # setcoeff.c:54:13
	movapd	%xmm0, %xmm4
	divsd	%xmm2, %xmm4
	.loc	8 54 7                  # setcoeff.c:54:7
	movsd	%xmm4, ty2(%rip)
	.loc	8 55 7 is_stmt 1        # setcoeff.c:55:7
	movsd	%xmm3, ty3(%rip)
	.loc	8 57 13                 # setcoeff.c:57:13
	movapd	%xmm0, %xmm2
	.loc	8 58 21                 # setcoeff.c:58:21
	movapd	%xmm1, %xmm3
	.loc	8 58 13 is_stmt 0       # setcoeff.c:58:13
	movapd	%xmm0, %xmm4
	.loc	8 59 13 is_stmt 1       # setcoeff.c:59:13
	divsd	%xmm1, %xmm0
	.loc	8 57 23                 # setcoeff.c:57:23
	mulsd	%xmm1, %xmm1
	.loc	8 57 13 is_stmt 0       # setcoeff.c:57:13
	divsd	%xmm1, %xmm2
	.loc	8 57 7                  # setcoeff.c:57:7
	movsd	%xmm2, tz1(%rip)
	.loc	8 58 21 is_stmt 1       # setcoeff.c:58:21
	addsd	%xmm3, %xmm3
	.loc	8 58 13 is_stmt 0       # setcoeff.c:58:13
	divsd	%xmm3, %xmm4
	.loc	8 58 7                  # setcoeff.c:58:7
	movsd	%xmm4, tz2(%rip)
	.loc	8 59 7 is_stmt 1        # setcoeff.c:59:7
	movsd	%xmm0, tz3(%rip)
	.loc	8 74 7                  # setcoeff.c:74:7
	movabsq	$4604930618986332160, %rax # imm = 0x3FE8000000000000
	.loc	8 64 7                  # setcoeff.c:64:7
	movq	%rax, dx1(%rip)
	.loc	8 65 7                  # setcoeff.c:65:7
	movq	%rax, dx2(%rip)
	.loc	8 66 7                  # setcoeff.c:66:7
	movq	%rax, dx3(%rip)
	.loc	8 67 7                  # setcoeff.c:67:7
	movq	%rax, dx4(%rip)
	.loc	8 68 7                  # setcoeff.c:68:7
	movq	%rax, dx5(%rip)
	.loc	8 70 7                  # setcoeff.c:70:7
	movq	%rax, dy1(%rip)
	.loc	8 71 7                  # setcoeff.c:71:7
	movq	%rax, dy2(%rip)
	.loc	8 72 7                  # setcoeff.c:72:7
	movq	%rax, dy3(%rip)
	.loc	8 73 7                  # setcoeff.c:73:7
	movq	%rax, dy4(%rip)
	.loc	8 74 7                  # setcoeff.c:74:7
	movq	%rax, dy5(%rip)
	.loc	8 80 7                  # setcoeff.c:80:7
	movabsq	$4607182418800017408, %rcx # imm = 0x3FF0000000000000
	.loc	8 76 7                  # setcoeff.c:76:7
	movq	%rcx, dz1(%rip)
	.loc	8 77 7                  # setcoeff.c:77:7
	movq	%rcx, dz2(%rip)
	.loc	8 78 7                  # setcoeff.c:78:7
	movq	%rcx, dz3(%rip)
	.loc	8 79 7                  # setcoeff.c:79:7
	movq	%rcx, dz4(%rip)
	.loc	8 80 7                  # setcoeff.c:80:7
	movq	%rcx, dz5(%rip)
	.loc	8 85 8 discriminator 9  # setcoeff.c:85:8
	movabsq	$4598175219545276416, %rax # imm = 0x3FD0000000000000
	movq	%rax, dssp(%rip)
	.loc	8 50 21                 # setcoeff.c:50:21
	movabsq	$4611686018427387904, %rax # imm = 0x4000000000000000
	.loc	8 90 12                 # setcoeff.c:90:12
	movq	%rax, ce(%rip)
	.loc	8 92 12                 # setcoeff.c:92:12
	xorpd	%xmm0, %xmm0
	movupd	%xmm0, ce+8(%rip)
	.loc	8 93 12                 # setcoeff.c:93:12
	movaps	.LCPI3_1(%rip), %xmm1   # xmm1 = [4.000000e+00,5.000000e+00]
	movups	%xmm1, ce+24(%rip)
	.loc	8 95 12                 # setcoeff.c:95:12
	movaps	.LCPI3_2(%rip), %xmm1   # xmm1 = [3.000000e+00,5.000000e-01]
	movups	%xmm1, ce+40(%rip)
	.loc	8 97 12                 # setcoeff.c:97:12
	movaps	.LCPI3_3(%rip), %xmm1   # xmm1 = [2.000000e-02,1.000000e-02]
	movups	%xmm1, ce+56(%rip)
	.loc	8 99 12                 # setcoeff.c:99:12
	movaps	.LCPI3_4(%rip), %xmm1   # xmm1 = [3.000000e-02,5.000000e-01]
	movups	%xmm1, ce+72(%rip)
	.loc	8 101 13                # setcoeff.c:101:13
	movaps	.LCPI3_5(%rip), %xmm1   # xmm1 = [4.000000e-01,3.000000e-01]
	movups	%xmm1, ce+88(%rip)
	.loc	8 107 12                # setcoeff.c:107:12
	movq	%rcx, ce+104(%rip)
	.loc	8 109 12                # setcoeff.c:109:12
	movapd	%xmm0, ce+112(%rip)
	movq	$0, ce+128(%rip)
	.loc	8 111 12                # setcoeff.c:111:12
	movaps	.LCPI3_6(%rip), %xmm2   # xmm2 = [1.000000e+00,2.000000e+00]
	movups	%xmm2, ce+136(%rip)
	.loc	8 113 12                # setcoeff.c:113:12
	movaps	.LCPI3_7(%rip), %xmm2   # xmm2 = [3.000000e+00,1.000000e-02]
	movups	%xmm2, ce+152(%rip)
	.loc	8 115 12                # setcoeff.c:115:12
	movaps	.LCPI3_8(%rip), %xmm2   # xmm2 = [3.000000e-02,2.000000e-02]
	movups	%xmm2, ce+168(%rip)
	.loc	8 117 13                # setcoeff.c:117:13
	movups	%xmm1, ce+184(%rip)
	.loc	8 119 13                # setcoeff.c:119:13
	movaps	.LCPI3_9(%rip), %xmm1   # xmm1 = [5.000000e-01,2.000000e+00]
	movups	%xmm1, ce+200(%rip)
	.loc	8 125 12                # setcoeff.c:125:12
	movq	%rax, ce+216(%rip)
	.loc	8 127 12                # setcoeff.c:127:12
	movapd	%xmm0, ce+224(%rip)
	movq	$0, ce+240(%rip)
	.loc	8 129 12                # setcoeff.c:129:12
	movaps	.LCPI3_10(%rip), %xmm1  # xmm1 = [2.000000e+00,3.000000e+00]
	movups	%xmm1, ce+248(%rip)
	.loc	8 131 12                # setcoeff.c:131:12
	movaps	.LCPI3_11(%rip), %xmm2  # xmm2 = [4.000000e-02,3.000000e-02]
	movups	%xmm2, ce+264(%rip)
	.loc	8 133 12                # setcoeff.c:133:12
	movaps	.LCPI3_12(%rip), %xmm2  # xmm2 = [5.000000e-02,3.000000e-01]
	movups	%xmm2, ce+280(%rip)
	.loc	8 135 13                # setcoeff.c:135:13
	movaps	.LCPI3_13(%rip), %xmm2  # xmm2 = [5.000000e-01,4.000000e-01]
	movups	%xmm2, ce+296(%rip)
	.loc	8 141 12                # setcoeff.c:141:12
	movq	%rax, ce+312(%rip)
	.loc	8 142 12                # setcoeff.c:142:12
	movq	%rax, ce+320(%rip)
	.loc	8 144 12                # setcoeff.c:144:12
	movupd	%xmm0, ce+328(%rip)
	movq	$0, ce+344(%rip)
	.loc	8 146 12                # setcoeff.c:146:12
	movaps	%xmm1, ce+352(%rip)
	.loc	8 148 12                # setcoeff.c:148:12
	movaps	.LCPI3_14(%rip), %xmm0  # xmm0 = [3.000000e-02,5.000000e-02]
	movaps	%xmm0, ce+368(%rip)
	.loc	8 150 12                # setcoeff.c:150:12
	movaps	.LCPI3_15(%rip), %xmm0  # xmm0 = [4.000000e-02,2.000000e-01]
	movaps	%xmm0, ce+384(%rip)
	.loc	8 152 13                # setcoeff.c:152:13
	movaps	.LCPI3_16(%rip), %xmm0  # xmm0 = [1.000000e-01,3.000000e-01]
	movaps	%xmm0, ce+400(%rip)
	.loc	8 158 12                # setcoeff.c:158:12
	movaps	.LCPI3_17(%rip), %xmm0  # xmm0 = [5.000000e+00,4.000000e+00]
	movaps	%xmm0, ce+416(%rip)
	.loc	8 160 12                # setcoeff.c:160:12
	movaps	.LCPI3_18(%rip), %xmm0  # xmm0 = [3.000000e+00,2.000000e+00]
	movaps	%xmm0, ce+432(%rip)
	.loc	8 162 12                # setcoeff.c:162:12
	movaps	.LCPI3_19(%rip), %xmm0  # xmm0 = [1.000000e-01,4.000000e-01]
	movaps	%xmm0, ce+448(%rip)
	.loc	8 101 13                # setcoeff.c:101:13
	movabsq	$4599075939470750515, %rax # imm = 0x3FD3333333333333
	.loc	8 164 12                # setcoeff.c:164:12
	movq	%rax, ce+464(%rip)
	.loc	8 165 12                # setcoeff.c:165:12
	movaps	.LCPI3_20(%rip), %xmm0  # xmm0 = [5.000000e-02,4.000000e-02]
	movups	%xmm0, ce+472(%rip)
	.loc	8 167 12                # setcoeff.c:167:12
	movaps	.LCPI3_21(%rip), %xmm0  # xmm0 = [3.000000e-02,1.000000e-01]
	movups	%xmm0, ce+488(%rip)
	.loc	8 169 13                # setcoeff.c:169:13
	movaps	.LCPI3_22(%rip), %xmm0  # xmm0 = [3.000000e-01,2.000000e-01]
	movups	%xmm0, ce+504(%rip)
	.loc	8 171 1                 # setcoeff.c:171:1
	retq
.Ltmp62:
.Lfunc_end3:
	.size	setcoeff, .Lfunc_end3-setcoeff
	.cfi_endproc

	.globl	setbv
	.p2align	4, 0x90
	.type	setbv,@function
setbv:                                  # @setbv
.Lfunc_begin4:
	.file	9 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/setbv.c"
	.loc	9 40 0                  # setbv.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	9 50 19 prologue_end discriminator 1 # setbv.c:50:19
	pushq	%rbp
.Ltmp63:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp64:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp65:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp66:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp67:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp68:
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
.Ltmp69:
	.cfi_def_cfa_offset 144
.Ltmp70:
	.cfi_offset %rbx, -56
.Ltmp71:
	.cfi_offset %r12, -48
.Ltmp72:
	.cfi_offset %r13, -40
.Ltmp73:
	.cfi_offset %r14, -32
.Ltmp74:
	.cfi_offset %r15, -24
.Ltmp75:
	.cfi_offset %rbp, -16
.Ltmp76:
	#DEBUG_VALUE: setbv:j <- 0
	movl	ny(%rip), %eax
	.loc	9 50 3 is_stmt 0 discriminator 1 # setbv.c:50:3
	testl	%eax, %eax
	jle	.LBB4_7
# BB#1:                                 # %for.cond1.preheader.lr.ph
.Ltmp77:
	.loc	9 51 21 is_stmt 1 discriminator 1 # setbv.c:51:21
	movl	nx(%rip), %ecx
	xorl	%r12d, %r12d
	movl	$u+16, %r13d
	leaq	48(%rsp), %r14
	leaq	(%rsp), %r15
	.p2align	4, 0x90
.LBB4_2:                                # %for.cond1.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_4 Depth 2
	.loc	9 51 5 is_stmt 0 discriminator 1 # setbv.c:51:5
	testl	%ecx, %ecx
	jle	.LBB4_6
# BB#3:                                 # %for.body3.lr.ph
                                        #   in Loop: Header=BB4_2 Depth=1
	movq	%r13, %rbp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB4_4:                                # %for.body3
                                        #   Parent Loop BB4_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp78:
	.loc	9 52 7 is_stmt 1        # setbv.c:52:7
	xorl	%edx, %edx
	movl	%ebx, %edi
	movl	%r12d, %esi
	movq	%r14, %rcx
	callq	exact
	.loc	9 53 20                 # setbv.c:53:20
	movl	nz(%rip), %edx
	.loc	9 53 22 is_stmt 0       # setbv.c:53:22
	decl	%edx
	.loc	9 53 7                  # setbv.c:53:7
	movl	%ebx, %edi
	movl	%r12d, %esi
	movq	%r15, %rcx
	callq	exact
.Ltmp79:
	#DEBUG_VALUE: setbv:m <- 0
	.loc	9 56 9 is_stmt 1        # setbv.c:56:9
	movslq	nz(%rip), %rax
	.loc	9 56 13 is_stmt 0       # setbv.c:56:13
	imulq	$169000, %rax, %rax     # imm = 0x29428
	.loc	9 55 25 is_stmt 1       # setbv.c:55:25
	movq	48(%rsp), %rcx
	.loc	9 55 23 is_stmt 0       # setbv.c:55:23
	movq	%rcx, -16(%rbp)
	.loc	9 56 28 is_stmt 1       # setbv.c:56:28
	movq	(%rsp), %rcx
	.loc	9 56 26 is_stmt 0       # setbv.c:56:26
	movq	%rcx, -169016(%rax,%rbp)
	.loc	9 55 25 is_stmt 1       # setbv.c:55:25
	movq	56(%rsp), %rcx
	.loc	9 55 23 is_stmt 0       # setbv.c:55:23
	movq	%rcx, -8(%rbp)
	.loc	9 56 28 is_stmt 1       # setbv.c:56:28
	movq	8(%rsp), %rcx
	.loc	9 56 26 is_stmt 0       # setbv.c:56:26
	movq	%rcx, -169008(%rax,%rbp)
	.loc	9 55 25 is_stmt 1       # setbv.c:55:25
	movq	64(%rsp), %rcx
	.loc	9 55 23 is_stmt 0       # setbv.c:55:23
	movq	%rcx, (%rbp)
	.loc	9 56 28 is_stmt 1       # setbv.c:56:28
	movq	16(%rsp), %rcx
	.loc	9 56 26 is_stmt 0       # setbv.c:56:26
	movq	%rcx, -169000(%rax,%rbp)
	.loc	9 55 25 is_stmt 1       # setbv.c:55:25
	movq	72(%rsp), %rcx
	.loc	9 55 23 is_stmt 0       # setbv.c:55:23
	movq	%rcx, 8(%rbp)
	.loc	9 56 28 is_stmt 1       # setbv.c:56:28
	movq	24(%rsp), %rcx
	.loc	9 56 26 is_stmt 0       # setbv.c:56:26
	movq	%rcx, -168992(%rax,%rbp)
	.loc	9 55 25 is_stmt 1       # setbv.c:55:25
	movq	80(%rsp), %rcx
	.loc	9 55 23 is_stmt 0       # setbv.c:55:23
	movq	%rcx, 16(%rbp)
	.loc	9 56 28 is_stmt 1       # setbv.c:56:28
	movq	32(%rsp), %rcx
	.loc	9 56 26 is_stmt 0       # setbv.c:56:26
	movq	%rcx, -168984(%rax,%rbp)
.Ltmp80:
	.loc	9 51 5 is_stmt 1 discriminator 1 # setbv.c:51:5
	incq	%rbx
	.loc	9 51 19 is_stmt 0 discriminator 1 # setbv.c:51:19
	movslq	nx(%rip), %rcx
	addq	$40, %rbp
	cmpq	%rcx, %rbx
	.loc	9 51 5 discriminator 1  # setbv.c:51:5
	jl	.LBB4_4
.Ltmp81:
# BB#5:                                 # %for.inc28.loopexit
                                        #   in Loop: Header=BB4_2 Depth=1
	.loc	9 50 19 is_stmt 1 discriminator 1 # setbv.c:50:19
	movl	ny(%rip), %eax
.LBB4_6:                                # %for.inc28
                                        #   in Loop: Header=BB4_2 Depth=1
	.loc	9 50 3 is_stmt 0 discriminator 1 # setbv.c:50:3
	incq	%r12
	.loc	9 50 17 discriminator 1 # setbv.c:50:17
	movslq	%eax, %rdx
	.loc	9 50 3 discriminator 1  # setbv.c:50:3
	addq	$2600, %r13             # imm = 0xA28
	.loc	9 50 17 discriminator 1 # setbv.c:50:17
	cmpq	%rdx, %r12
	jl	.LBB4_2
.Ltmp82:
.LBB4_7:                                # %for.cond31.preheader
	.loc	9 64 19 is_stmt 1 discriminator 1 # setbv.c:64:19
	movl	nz(%rip), %ecx
	.loc	9 64 3 is_stmt 0 discriminator 1 # setbv.c:64:3
	testl	%ecx, %ecx
	jle	.LBB4_21
# BB#8:                                 # %for.cond34.preheader.lr.ph
.Ltmp83:
	.loc	9 65 21 is_stmt 1 discriminator 1 # setbv.c:65:21
	movl	nx(%rip), %edx
	xorl	%r12d, %r12d
	movl	$u+16, %r13d
	leaq	48(%rsp), %r14
	leaq	(%rsp), %r15
	.p2align	4, 0x90
.LBB4_9:                                # %for.cond34.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_11 Depth 2
	.loc	9 65 5 is_stmt 0 discriminator 1 # setbv.c:65:5
	testl	%edx, %edx
	jle	.LBB4_13
# BB#10:                                # %for.body36.lr.ph
                                        #   in Loop: Header=BB4_9 Depth=1
	movq	%r13, %rbp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB4_11:                               # %for.body36
                                        #   Parent Loop BB4_9 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp84:
	.loc	9 66 7 is_stmt 1        # setbv.c:66:7
	xorl	%esi, %esi
	movl	%ebx, %edi
	movl	%r12d, %edx
	movq	%r14, %rcx
	callq	exact
	.loc	9 67 17                 # setbv.c:67:17
	movl	ny(%rip), %esi
	.loc	9 67 19 is_stmt 0       # setbv.c:67:19
	decl	%esi
	.loc	9 67 7                  # setbv.c:67:7
	movl	%ebx, %edi
	movl	%r12d, %edx
	movq	%r15, %rcx
	callq	exact
.Ltmp85:
	.loc	9 70 9 is_stmt 1        # setbv.c:70:9
	movslq	ny(%rip), %rax
	#DEBUG_VALUE: setbv:m <- 0
	.loc	9 70 16 is_stmt 0       # setbv.c:70:16
	imulq	$2600, %rax, %rcx       # imm = 0xA28
	.loc	9 69 25 is_stmt 1       # setbv.c:69:25
	movq	48(%rsp), %rdx
	.loc	9 69 23 is_stmt 0       # setbv.c:69:23
	movq	%rdx, -16(%rbp)
	.loc	9 70 28 is_stmt 1       # setbv.c:70:28
	movq	(%rsp), %rdx
	.loc	9 70 26 is_stmt 0       # setbv.c:70:26
	movq	%rdx, -2616(%rcx,%rbp)
	.loc	9 69 25 is_stmt 1       # setbv.c:69:25
	movq	56(%rsp), %rdx
	.loc	9 69 23 is_stmt 0       # setbv.c:69:23
	movq	%rdx, -8(%rbp)
	.loc	9 70 28 is_stmt 1       # setbv.c:70:28
	movq	8(%rsp), %rdx
	.loc	9 70 26 is_stmt 0       # setbv.c:70:26
	movq	%rdx, -2608(%rcx,%rbp)
	.loc	9 69 25 is_stmt 1       # setbv.c:69:25
	movq	64(%rsp), %rdx
	.loc	9 69 23 is_stmt 0       # setbv.c:69:23
	movq	%rdx, (%rbp)
	.loc	9 70 28 is_stmt 1       # setbv.c:70:28
	movq	16(%rsp), %rdx
	.loc	9 70 26 is_stmt 0       # setbv.c:70:26
	movq	%rdx, -2600(%rcx,%rbp)
	.loc	9 69 25 is_stmt 1       # setbv.c:69:25
	movq	72(%rsp), %rdx
	.loc	9 69 23 is_stmt 0       # setbv.c:69:23
	movq	%rdx, 8(%rbp)
	.loc	9 70 28 is_stmt 1       # setbv.c:70:28
	movq	24(%rsp), %rdx
	.loc	9 70 26 is_stmt 0       # setbv.c:70:26
	movq	%rdx, -2592(%rcx,%rbp)
	.loc	9 69 25 is_stmt 1       # setbv.c:69:25
	movq	80(%rsp), %rdx
	.loc	9 69 23 is_stmt 0       # setbv.c:69:23
	movq	%rdx, 16(%rbp)
	.loc	9 70 28 is_stmt 1       # setbv.c:70:28
	movq	32(%rsp), %rdx
	.loc	9 70 26 is_stmt 0       # setbv.c:70:26
	movq	%rdx, -2584(%rcx,%rbp)
.Ltmp86:
	.loc	9 65 5 is_stmt 1 discriminator 1 # setbv.c:65:5
	incq	%rbx
	.loc	9 65 19 is_stmt 0 discriminator 1 # setbv.c:65:19
	movslq	nx(%rip), %rdx
	addq	$40, %rbp
	cmpq	%rdx, %rbx
	.loc	9 65 5 discriminator 1  # setbv.c:65:5
	jl	.LBB4_11
.Ltmp87:
# BB#12:                                # %for.inc69.loopexit
                                        #   in Loop: Header=BB4_9 Depth=1
	.loc	9 64 19 is_stmt 1 discriminator 1 # setbv.c:64:19
	movl	nz(%rip), %ecx
.LBB4_13:                               # %for.inc69
                                        #   in Loop: Header=BB4_9 Depth=1
	.loc	9 64 3 is_stmt 0 discriminator 1 # setbv.c:64:3
	incq	%r12
	.loc	9 64 17 discriminator 1 # setbv.c:64:17
	movslq	%ecx, %rsi
	.loc	9 64 3 discriminator 1  # setbv.c:64:3
	addq	$169000, %r13           # imm = 0x29428
	.loc	9 64 17 discriminator 1 # setbv.c:64:17
	cmpq	%rsi, %r12
	jl	.LBB4_9
.Ltmp88:
# BB#14:                                # %for.cond72.preheader
	.loc	9 78 3 is_stmt 1 discriminator 1 # setbv.c:78:3
	testl	%ecx, %ecx
	jle	.LBB4_21
# BB#15:                                # %for.cond75.preheader.lr.ph
	xorl	%r12d, %r12d
	movl	$u+16, %r13d
	leaq	48(%rsp), %r14
	leaq	(%rsp), %r15
	.p2align	4, 0x90
.LBB4_16:                               # %for.cond75.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_18 Depth 2
.Ltmp89:
	.loc	9 79 5 discriminator 1  # setbv.c:79:5
	testl	%eax, %eax
	jle	.LBB4_20
# BB#17:                                # %for.body77.lr.ph
                                        #   in Loop: Header=BB4_16 Depth=1
	movq	%r13, %rbp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB4_18:                               # %for.body77
                                        #   Parent Loop BB4_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp90:
	.loc	9 80 7                  # setbv.c:80:7
	xorl	%edi, %edi
	movl	%ebx, %esi
	movl	%r12d, %edx
	movq	%r14, %rcx
	callq	exact
	.loc	9 81 14                 # setbv.c:81:14
	movl	nx(%rip), %edi
	.loc	9 81 16 is_stmt 0       # setbv.c:81:16
	decl	%edi
	.loc	9 81 7                  # setbv.c:81:7
	movl	%ebx, %esi
	movl	%r12d, %edx
	movq	%r15, %rcx
	callq	exact
	#DEBUG_VALUE: setbv:m <- 0
.Ltmp91:
	.loc	9 84 9 is_stmt 1        # setbv.c:84:9
	movslq	nx(%rip), %rax
	.loc	9 84 19 is_stmt 0       # setbv.c:84:19
	leaq	(%rax,%rax,4), %rax
	.loc	9 83 25 is_stmt 1       # setbv.c:83:25
	movq	48(%rsp), %rcx
	.loc	9 83 23 is_stmt 0       # setbv.c:83:23
	movq	%rcx, -16(%rbp)
	.loc	9 84 28 is_stmt 1       # setbv.c:84:28
	movq	(%rsp), %rcx
	.loc	9 84 26 is_stmt 0       # setbv.c:84:26
	movq	%rcx, -56(%rbp,%rax,8)
	.loc	9 83 25 is_stmt 1       # setbv.c:83:25
	movq	56(%rsp), %rcx
	.loc	9 83 23 is_stmt 0       # setbv.c:83:23
	movq	%rcx, -8(%rbp)
	.loc	9 84 28 is_stmt 1       # setbv.c:84:28
	movq	8(%rsp), %rcx
	.loc	9 84 26 is_stmt 0       # setbv.c:84:26
	movq	%rcx, -48(%rbp,%rax,8)
	.loc	9 83 25 is_stmt 1       # setbv.c:83:25
	movq	64(%rsp), %rcx
	.loc	9 83 23 is_stmt 0       # setbv.c:83:23
	movq	%rcx, (%rbp)
	.loc	9 84 28 is_stmt 1       # setbv.c:84:28
	movq	16(%rsp), %rcx
	.loc	9 84 26 is_stmt 0       # setbv.c:84:26
	movq	%rcx, -40(%rbp,%rax,8)
	.loc	9 83 25 is_stmt 1       # setbv.c:83:25
	movq	72(%rsp), %rcx
	.loc	9 83 23 is_stmt 0       # setbv.c:83:23
	movq	%rcx, 8(%rbp)
	.loc	9 84 28 is_stmt 1       # setbv.c:84:28
	movq	24(%rsp), %rcx
	.loc	9 84 26 is_stmt 0       # setbv.c:84:26
	movq	%rcx, -32(%rbp,%rax,8)
	.loc	9 83 25 is_stmt 1       # setbv.c:83:25
	movq	80(%rsp), %rcx
	.loc	9 83 23 is_stmt 0       # setbv.c:83:23
	movq	%rcx, 16(%rbp)
	.loc	9 84 28 is_stmt 1       # setbv.c:84:28
	movq	32(%rsp), %rcx
	.loc	9 84 26 is_stmt 0       # setbv.c:84:26
	movq	%rcx, -24(%rbp,%rax,8)
.Ltmp92:
	.loc	9 79 5 is_stmt 1 discriminator 1 # setbv.c:79:5
	incq	%rbx
	.loc	9 79 19 is_stmt 0 discriminator 1 # setbv.c:79:19
	movslq	ny(%rip), %rax
	addq	$2600, %rbp             # imm = 0xA28
	cmpq	%rax, %rbx
	.loc	9 79 5 discriminator 1  # setbv.c:79:5
	jl	.LBB4_18
.Ltmp93:
# BB#19:                                # %for.inc110.loopexit
                                        #   in Loop: Header=BB4_16 Depth=1
	.loc	9 78 19 is_stmt 1 discriminator 1 # setbv.c:78:19
	movl	nz(%rip), %ecx
.LBB4_20:                               # %for.inc110
                                        #   in Loop: Header=BB4_16 Depth=1
	.loc	9 78 3 is_stmt 0 discriminator 1 # setbv.c:78:3
	incq	%r12
	.loc	9 78 17 discriminator 1 # setbv.c:78:17
	movslq	%ecx, %rdx
	.loc	9 78 3 discriminator 1  # setbv.c:78:3
	addq	$169000, %r13           # imm = 0x29428
	.loc	9 78 17 discriminator 1 # setbv.c:78:17
	cmpq	%rdx, %r12
	jl	.LBB4_16
.Ltmp94:
.LBB4_21:                               # %for.end112
	.loc	9 88 1 is_stmt 1        # setbv.c:88:1
	addq	$88, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp95:
.Lfunc_end4:
	.size	setbv, .Lfunc_end4-setbv
	.cfi_endproc

	.globl	exact
	.p2align	4, 0x90
	.type	exact,@function
exact:                                  # @exact
.Lfunc_begin5:
	.file	10 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/exact.c"
	.loc	10 42 0                 # exact.c:42:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: exact:i <- %EDI
	#DEBUG_VALUE: exact:j <- %ESI
	#DEBUG_VALUE: exact:k <- %EDX
	#DEBUG_VALUE: exact:u000ijk <- %RCX
	.loc	10 49 12 prologue_end   # exact.c:49:12
	cvtsi2sdl	%edi, %xmm0
	.loc	10 49 28 is_stmt 0      # exact.c:49:28
	movl	nx0(%rip), %eax
	.loc	10 49 32                # exact.c:49:32
	decl	%eax
	.loc	10 49 26                # exact.c:49:26
	cvtsi2sdl	%eax, %xmm1
	.loc	10 49 24                # exact.c:49:24
	divsd	%xmm1, %xmm0
.Ltmp96:
	#DEBUG_VALUE: exact:xi <- %XMM0
	.loc	10 50 12 is_stmt 1      # exact.c:50:12
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%esi, %xmm1
	.loc	10 50 28 is_stmt 0      # exact.c:50:28
	movl	ny0(%rip), %eax
	.loc	10 50 32                # exact.c:50:32
	decl	%eax
	.loc	10 50 26                # exact.c:50:26
	cvtsi2sdl	%eax, %xmm2
	.loc	10 50 24                # exact.c:50:24
	divsd	%xmm2, %xmm1
.Ltmp97:
	#DEBUG_VALUE: exact:eta <- %XMM1
	.loc	10 51 12 is_stmt 1      # exact.c:51:12
	xorps	%xmm2, %xmm2
	cvtsi2sdl	%edx, %xmm2
	.loc	10 51 28 is_stmt 0      # exact.c:51:28
	movl	nz(%rip), %eax
	.loc	10 51 31                # exact.c:51:31
	decl	%eax
	.loc	10 51 26                # exact.c:51:26
	cvtsi2sdl	%eax, %xmm3
	.loc	10 51 24                # exact.c:51:24
	divsd	%xmm3, %xmm2
.Ltmp98:
	#DEBUG_VALUE: exact:m <- 0
	#DEBUG_VALUE: exact:zeta <- %XMM2
	movq	$-520, %rax             # imm = 0xFFFFFFFFFFFFFDF8
.Ltmp99:
	.p2align	4, 0x90
.LBB5_1:                                # %for.body
                                        # =>This Inner Loop Header: Depth=1
	movsd	ce+600(%rax), %xmm3     # xmm3 = mem[0],zero
.Ltmp100:
	.loc	10 58 20 is_stmt 1      # exact.c:58:20
	mulsd	%xmm0, %xmm3
	.loc	10 58 7 is_stmt 0       # exact.c:58:7
	addsd	ce+576(%rax), %xmm3
	.loc	10 58 26                # exact.c:58:26
	mulsd	%xmm0, %xmm3
	.loc	10 57 7 is_stmt 1       # exact.c:57:7
	addsd	ce+552(%rax), %xmm3
	.loc	10 58 32                # exact.c:58:32
	mulsd	%xmm0, %xmm3
	.loc	10 56 7                 # exact.c:56:7
	addsd	ce+528(%rax), %xmm3
	.loc	10 58 38                # exact.c:58:38
	mulsd	%xmm0, %xmm3
	.loc	10 55 7                 # exact.c:55:7
	addsd	ce+520(%rax), %xmm3
	movsd	ce+608(%rax), %xmm4     # xmm4 = mem[0],zero
	.loc	10 62 20                # exact.c:62:20
	mulsd	%xmm1, %xmm4
	.loc	10 62 7 is_stmt 0       # exact.c:62:7
	addsd	ce+584(%rax), %xmm4
	.loc	10 62 27                # exact.c:62:27
	mulsd	%xmm1, %xmm4
	.loc	10 61 7 is_stmt 1       # exact.c:61:7
	addsd	ce+560(%rax), %xmm4
	.loc	10 62 34                # exact.c:62:34
	mulsd	%xmm1, %xmm4
	.loc	10 60 7                 # exact.c:60:7
	addsd	ce+536(%rax), %xmm4
	.loc	10 62 41                # exact.c:62:41
	mulsd	%xmm1, %xmm4
	.loc	10 59 7                 # exact.c:59:7
	addsd	%xmm3, %xmm4
	movsd	ce+616(%rax), %xmm3     # xmm3 = mem[0],zero
	.loc	10 66 20                # exact.c:66:20
	mulsd	%xmm2, %xmm3
	.loc	10 66 7 is_stmt 0       # exact.c:66:7
	addsd	ce+592(%rax), %xmm3
	.loc	10 66 28                # exact.c:66:28
	mulsd	%xmm2, %xmm3
	.loc	10 65 7 is_stmt 1       # exact.c:65:7
	addsd	ce+568(%rax), %xmm3
	.loc	10 66 36                # exact.c:66:36
	mulsd	%xmm2, %xmm3
	.loc	10 64 7                 # exact.c:64:7
	addsd	ce+544(%rax), %xmm3
	.loc	10 66 44                # exact.c:66:44
	mulsd	%xmm2, %xmm3
	.loc	10 63 7                 # exact.c:63:7
	addsd	%xmm4, %xmm3
	.loc	10 54 16                # exact.c:54:16
	movsd	%xmm3, (%rcx)
.Ltmp101:
	.loc	10 53 3 discriminator 1 # exact.c:53:3
	addq	$8, %rcx
	addq	$104, %rax
	jne	.LBB5_1
.Ltmp102:
# BB#2:                                 # %for.end
	.loc	10 68 1                 # exact.c:68:1
	retq
.Ltmp103:
.Lfunc_end5:
	.size	exact, .Lfunc_end5-exact
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI6_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	setiv
	.p2align	4, 0x90
	.type	setiv,@function
setiv:                                  # @setiv
.Lfunc_begin6:
	.file	11 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/setiv.c"
	.loc	11 43 0                 # setiv.c:43:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	11 53 19 prologue_end discriminator 1 # setiv.c:53:19
	pushq	%rbp
.Ltmp104:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp105:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp106:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp107:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp108:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp109:
	.cfi_def_cfa_offset 56
	subq	$440, %rsp              # imm = 0x1B8
.Ltmp110:
	.cfi_def_cfa_offset 496
.Ltmp111:
	.cfi_offset %rbx, -56
.Ltmp112:
	.cfi_offset %r12, -48
.Ltmp113:
	.cfi_offset %r13, -40
.Ltmp114:
	.cfi_offset %r14, -32
.Ltmp115:
	.cfi_offset %r15, -24
.Ltmp116:
	.cfi_offset %rbp, -16
.Ltmp117:
	#DEBUG_VALUE: setiv:k <- 1
	movl	nz(%rip), %edi
	.loc	11 53 22 is_stmt 0 discriminator 1 # setiv.c:53:22
	leal	-1(%rdi), %r9d
	.loc	11 53 3 discriminator 1 # setiv.c:53:3
	cmpl	$2, %r9d
	jl	.LBB6_11
# BB#1:                                 # %for.body.lr.ph
.Ltmp118:
	.loc	11 55 21 is_stmt 1 discriminator 1 # setiv.c:55:21
	movl	ny(%rip), %eax
	movl	$1, %ebx
	movl	$u+171672, %edx
.Ltmp119:
	.loc	11 71 25                # setiv.c:71:25
	movsd	.LCPI6_0(%rip), %xmm8   # xmm8 = mem[0],zero
	leaq	400(%rsp), %rcx
	leaq	192(%rsp), %r14
	leaq	144(%rsp), %rbp
	leaq	96(%rsp), %r8
	leaq	48(%rsp), %r10
	leaq	352(%rsp), %r11
.Ltmp120:
	.p2align	4, 0x90
.LBB6_2:                                # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_4 Depth 2
                                        #       Child Loop BB6_6 Depth 3
	#DEBUG_VALUE: setiv:j <- 1
	.loc	11 55 24 discriminator 1 # setiv.c:55:24
	leal	-1(%rax), %esi
	.loc	11 55 5 is_stmt 0 discriminator 1 # setiv.c:55:5
	cmpl	$2, %esi
	jl	.LBB6_10
.Ltmp121:
# BB#3:                                 # %for.body7.lr.ph
                                        #   in Loop: Header=BB6_2 Depth=1
	movq	%rbp, %r12
	movq	%r14, %rbp
	.loc	11 54 14 is_stmt 1      # setiv.c:54:14
	cvtsi2sdl	%ebx, %xmm1
	.loc	11 54 28 is_stmt 0      # setiv.c:54:28
	cvtsi2sdl	%r9d, %xmm0
	.loc	11 54 26                # setiv.c:54:26
	divsd	%xmm0, %xmm1
.Ltmp122:
	#DEBUG_VALUE: setiv:zeta <- %XMM1
	.loc	11 71 25 is_stmt 1      # setiv.c:71:25
	movapd	%xmm1, 288(%rsp)        # 16-byte Spill
	movapd	%xmm8, %xmm0
	subsd	%xmm1, %xmm0
.Ltmp123:
	.loc	11 57 23 discriminator 1 # setiv.c:57:23
	movapd	%xmm0, 272(%rsp)        # 16-byte Spill
	movl	nx(%rip), %esi
.Ltmp124:
	.loc	11 71 34                # setiv.c:71:34
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	.loc	11 72 34                # setiv.c:72:34
	movaps	%xmm0, 256(%rsp)        # 16-byte Spill
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 240(%rsp)        # 16-byte Spill
	movq	%rdx, %r13
	movq	%rdx, (%rsp)            # 8-byte Spill
	movl	$1, %r15d
.Ltmp125:
	.p2align	4, 0x90
.LBB6_4:                                # %for.body7
                                        #   Parent Loop BB6_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_6 Depth 3
	#DEBUG_VALUE: setiv:i <- 1
	.loc	11 57 26 discriminator 1 # setiv.c:57:26
	leal	-1(%rsi), %edx
	.loc	11 57 7 is_stmt 0 discriminator 1 # setiv.c:57:7
	cmpl	$2, %edx
	jl	.LBB6_8
.Ltmp126:
# BB#5:                                 # %for.body16.lr.ph
                                        #   in Loop: Header=BB6_4 Depth=2
	.loc	11 56 15 is_stmt 1      # setiv.c:56:15
	cvtsi2sdl	%r15d, %xmm1
	.loc	11 56 30 is_stmt 0      # setiv.c:56:30
	movl	ny0(%rip), %eax
	.loc	11 56 33                # setiv.c:56:33
	decl	%eax
	.loc	11 56 29                # setiv.c:56:29
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%eax, %xmm0
	.loc	11 56 27                # setiv.c:56:27
	divsd	%xmm0, %xmm1
.Ltmp127:
	#DEBUG_VALUE: setiv:eta <- %XMM1
	.loc	11 69 25 is_stmt 1      # setiv.c:69:25
	movapd	%xmm1, 16(%rsp)         # 16-byte Spill
	subsd	%xmm1, %xmm8
	.loc	11 69 33 is_stmt 0      # setiv.c:69:33
	movapd	%xmm8, 336(%rsp)        # 16-byte Spill
	movlhps	%xmm8, %xmm8            # xmm8 = xmm8[0,0]
	movaps	%xmm8, 320(%rsp)        # 16-byte Spill
.Ltmp128:
	#DEBUG_VALUE: setiv:eta <- [%RSP+16]
	.loc	11 70 33 is_stmt 1      # setiv.c:70:33
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movaps	%xmm1, 304(%rsp)        # 16-byte Spill
	movq	%r13, 8(%rsp)           # 8-byte Spill
	movl	$1, %r12d
	movq	%r11, %r14
.Ltmp129:
	.p2align	4, 0x90
.LBB6_6:                                # %for.body16
                                        #   Parent Loop BB6_2 Depth=1
                                        #     Parent Loop BB6_4 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	11 58 16                # setiv.c:58:16
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%r12d, %xmm1
	.loc	11 58 31 is_stmt 0      # setiv.c:58:31
	movl	nx0(%rip), %eax
	.loc	11 58 34                # setiv.c:58:34
	decl	%eax
	.loc	11 58 30                # setiv.c:58:30
	xorps	%xmm0, %xmm0
	cvtsi2sdl	%eax, %xmm0
	.loc	11 58 28                # setiv.c:58:28
	divsd	%xmm0, %xmm1
.Ltmp130:
	#DEBUG_VALUE: setiv:xi <- %XMM1
	movapd	%xmm1, 32(%rsp)         # 16-byte Spill
.Ltmp131:
	#DEBUG_VALUE: setiv:xi <- [%RSP+32]
	.loc	11 59 9 is_stmt 1       # setiv.c:59:9
	xorl	%edi, %edi
	movl	%r15d, %esi
	movl	%ebx, %edx
	movq	%rcx, %rbp
	callq	exact
.Ltmp132:
	.loc	11 60 15                # setiv.c:60:15
	movl	nx0(%rip), %edi
	.loc	11 60 18 is_stmt 0      # setiv.c:60:18
	decl	%edi
	.loc	11 60 9                 # setiv.c:60:9
	movl	%r15d, %esi
	movl	%ebx, %edx
	leaq	192(%rsp), %rcx
	callq	exact
	.loc	11 61 9 is_stmt 1       # setiv.c:61:9
	xorl	%esi, %esi
	movl	%r12d, %edi
	movl	%ebx, %edx
	leaq	144(%rsp), %rcx
	callq	exact
	.loc	11 62 18                # setiv.c:62:18
	movl	ny0(%rip), %esi
	.loc	11 62 21 is_stmt 0      # setiv.c:62:21
	decl	%esi
	.loc	11 62 9                 # setiv.c:62:9
	movl	%r12d, %edi
	movl	%ebx, %edx
	leaq	96(%rsp), %rcx
	callq	exact
	.loc	11 63 9 is_stmt 1       # setiv.c:63:9
	xorl	%edx, %edx
	movl	%r12d, %edi
	movl	%r15d, %esi
	leaq	48(%rsp), %rcx
	callq	exact
	.loc	11 64 21                # setiv.c:64:21
	movl	nz(%rip), %edx
	.loc	11 64 23 is_stmt 0      # setiv.c:64:23
	decl	%edx
	.loc	11 64 9                 # setiv.c:64:9
	movl	%r12d, %edi
	movl	%r15d, %esi
	movq	%r14, %rcx
	callq	exact
	movapd	240(%rsp), %xmm10       # 16-byte Reload
	movapd	256(%rsp), %xmm9        # 16-byte Reload
	movq	%rbp, %rcx
.Ltmp133:
	.loc	11 71 25 is_stmt 1      # setiv.c:71:25
	movsd	.LCPI6_0(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp134:
	#DEBUG_VALUE: setiv:m <- 0
	.loc	11 67 25                # setiv.c:67:25
	movapd	%xmm8, %xmm11
	movapd	32(%rsp), %xmm0         # 16-byte Reload
.Ltmp135:
	#DEBUG_VALUE: setiv:xi <- %XMM0
	subsd	%xmm0, %xmm11
	.loc	11 67 32 is_stmt 0      # setiv.c:67:32
	movapd	%xmm11, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movapd	400(%rsp), %xmm4
	mulpd	%xmm2, %xmm4
	.loc	11 68 32 is_stmt 1      # setiv.c:68:32
	movapd	%xmm0, %xmm1
	movapd	%xmm0, %xmm13
.Ltmp136:
	#DEBUG_VALUE: setiv:xi <- %XMM13
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	movapd	192(%rsp), %xmm3
	mulpd	%xmm1, %xmm3
	.loc	11 68 25 is_stmt 0      # setiv.c:68:25
	addpd	%xmm4, %xmm3
	movapd	144(%rsp), %xmm4
	movapd	320(%rsp), %xmm0        # 16-byte Reload
	.loc	11 69 33 is_stmt 1      # setiv.c:69:33
	mulpd	%xmm0, %xmm4
	movapd	96(%rsp), %xmm5
	movapd	304(%rsp), %xmm12       # 16-byte Reload
	.loc	11 70 33                # setiv.c:70:33
	mulpd	%xmm12, %xmm5
	.loc	11 70 25 is_stmt 0      # setiv.c:70:25
	addpd	%xmm4, %xmm5
	movapd	48(%rsp), %xmm4
	.loc	11 71 34 is_stmt 1      # setiv.c:71:34
	mulpd	%xmm9, %xmm4
	movapd	352(%rsp), %xmm6
	.loc	11 72 34                # setiv.c:72:34
	mulpd	%xmm10, %xmm6
	.loc	11 72 25 is_stmt 0      # setiv.c:72:25
	addpd	%xmm4, %xmm6
	.loc	11 74 31 is_stmt 1      # setiv.c:74:31
	movapd	%xmm3, %xmm4
	addpd	%xmm5, %xmm4
	.loc	11 74 38 is_stmt 0      # setiv.c:74:38
	addpd	%xmm6, %xmm4
	.loc	11 75 19 is_stmt 1      # setiv.c:75:19
	movapd	%xmm3, %xmm7
	mulpd	%xmm5, %xmm7
	.loc	11 75 13 is_stmt 0      # setiv.c:75:13
	subpd	%xmm7, %xmm4
	.loc	11 75 33                # setiv.c:75:33
	mulpd	%xmm6, %xmm5
	.loc	11 75 26                # setiv.c:75:26
	subpd	%xmm5, %xmm4
	.loc	11 75 49                # setiv.c:75:49
	mulpd	%xmm6, %xmm3
	.loc	11 75 41                # setiv.c:75:41
	subpd	%xmm3, %xmm4
	.loc	11 76 26 is_stmt 1      # setiv.c:76:26
	mulpd	%xmm6, %xmm7
	.loc	11 76 13 is_stmt 0      # setiv.c:76:13
	addpd	%xmm4, %xmm7
	.loc	11 74 25 is_stmt 1      # setiv.c:74:25
	movupd	%xmm7, -32(%r13)
	.loc	11 67 32                # setiv.c:67:32
	mulpd	416(%rsp), %xmm2
	.loc	11 68 32                # setiv.c:68:32
	mulpd	208(%rsp), %xmm1
	.loc	11 68 25 is_stmt 0      # setiv.c:68:25
	addpd	%xmm2, %xmm1
	movapd	160(%rsp), %xmm2
	.loc	11 69 33 is_stmt 1      # setiv.c:69:33
	mulpd	%xmm0, %xmm2
	movapd	112(%rsp), %xmm3
	.loc	11 70 33                # setiv.c:70:33
	mulpd	%xmm12, %xmm3
	.loc	11 70 25 is_stmt 0      # setiv.c:70:25
	addpd	%xmm2, %xmm3
	movapd	64(%rsp), %xmm2
	.loc	11 71 34 is_stmt 1      # setiv.c:71:34
	mulpd	%xmm9, %xmm2
	movapd	368(%rsp), %xmm4
	.loc	11 72 34                # setiv.c:72:34
	mulpd	%xmm10, %xmm4
	.loc	11 72 25 is_stmt 0      # setiv.c:72:25
	addpd	%xmm2, %xmm4
	.loc	11 74 31 is_stmt 1      # setiv.c:74:31
	movapd	%xmm1, %xmm2
	addpd	%xmm3, %xmm2
	.loc	11 74 38 is_stmt 0      # setiv.c:74:38
	addpd	%xmm4, %xmm2
	.loc	11 75 19 is_stmt 1      # setiv.c:75:19
	movapd	%xmm1, %xmm5
	mulpd	%xmm3, %xmm5
	.loc	11 75 13 is_stmt 0      # setiv.c:75:13
	subpd	%xmm5, %xmm2
	.loc	11 75 33                # setiv.c:75:33
	mulpd	%xmm4, %xmm3
	.loc	11 75 26                # setiv.c:75:26
	subpd	%xmm3, %xmm2
	.loc	11 75 49                # setiv.c:75:49
	mulpd	%xmm4, %xmm1
	.loc	11 75 41                # setiv.c:75:41
	subpd	%xmm1, %xmm2
	.loc	11 76 26 is_stmt 1      # setiv.c:76:26
	mulpd	%xmm4, %xmm5
	movapd	272(%rsp), %xmm4        # 16-byte Reload
	movapd	288(%rsp), %xmm3        # 16-byte Reload
	.loc	11 76 13 is_stmt 0      # setiv.c:76:13
	addpd	%xmm2, %xmm5
	.loc	11 74 25 is_stmt 1      # setiv.c:74:25
	movupd	%xmm5, -16(%r13)
	.loc	11 67 32                # setiv.c:67:32
	mulsd	432(%rsp), %xmm11
	movapd	%xmm13, %xmm0
.Ltmp137:
	#DEBUG_VALUE: setiv:xi <- %XMM0
	.loc	11 68 32                # setiv.c:68:32
	mulsd	224(%rsp), %xmm0
.Ltmp138:
	.loc	11 68 25 is_stmt 0      # setiv.c:68:25
	addsd	%xmm11, %xmm0
	movapd	%xmm0, %xmm5
	movsd	176(%rsp), %xmm0        # xmm0 = mem[0],zero
	.loc	11 69 33 is_stmt 1      # setiv.c:69:33
	mulsd	336(%rsp), %xmm0        # 16-byte Folded Reload
	movsd	128(%rsp), %xmm1        # xmm1 = mem[0],zero
	.loc	11 70 33                # setiv.c:70:33
	mulsd	16(%rsp), %xmm1         # 16-byte Folded Reload
	.loc	11 70 25 is_stmt 0      # setiv.c:70:25
	addsd	%xmm0, %xmm1
	movsd	80(%rsp), %xmm0         # xmm0 = mem[0],zero
	.loc	11 71 34 is_stmt 1      # setiv.c:71:34
	mulsd	%xmm4, %xmm0
	movsd	384(%rsp), %xmm2        # xmm2 = mem[0],zero
	.loc	11 72 34                # setiv.c:72:34
	mulsd	%xmm3, %xmm2
	.loc	11 72 25 is_stmt 0      # setiv.c:72:25
	addsd	%xmm0, %xmm2
	.loc	11 74 31 is_stmt 1      # setiv.c:74:31
	movapd	%xmm5, %xmm0
	addsd	%xmm1, %xmm0
	.loc	11 74 38 is_stmt 0      # setiv.c:74:38
	addsd	%xmm2, %xmm0
	.loc	11 75 19 is_stmt 1      # setiv.c:75:19
	movapd	%xmm5, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	11 75 13 is_stmt 0      # setiv.c:75:13
	subsd	%xmm3, %xmm0
	.loc	11 75 33                # setiv.c:75:33
	mulsd	%xmm2, %xmm1
	.loc	11 75 26                # setiv.c:75:26
	subsd	%xmm1, %xmm0
	.loc	11 75 49                # setiv.c:75:49
	mulsd	%xmm2, %xmm5
	.loc	11 75 41                # setiv.c:75:41
	subsd	%xmm5, %xmm0
	.loc	11 76 26 is_stmt 1      # setiv.c:76:26
	mulsd	%xmm2, %xmm3
	.loc	11 76 13 is_stmt 0      # setiv.c:76:13
	addsd	%xmm0, %xmm3
	.loc	11 74 25 is_stmt 1      # setiv.c:74:25
	movsd	%xmm3, (%r13)
.Ltmp139:
	.loc	11 57 7 discriminator 1 # setiv.c:57:7
	incq	%r12
	.loc	11 57 21 is_stmt 0 discriminator 1 # setiv.c:57:21
	movslq	nx(%rip), %rsi
	.loc	11 57 26 discriminator 1 # setiv.c:57:26
	leaq	-1(%rsi), %rax
	.loc	11 57 21 discriminator 1 # setiv.c:57:21
	addq	$40, %r13
	cmpq	%rax, %r12
	.loc	11 57 7 discriminator 1 # setiv.c:57:7
	jl	.LBB6_6
.Ltmp140:
# BB#7:                                 # %for.inc75.loopexit
                                        #   in Loop: Header=BB6_4 Depth=2
	movq	%r14, %r11
	leaq	48(%rsp), %r10
	leaq	96(%rsp), %r8
	leaq	144(%rsp), %rbp
	movq	%rbp, %r12
	leaq	192(%rsp), %rbp
	.loc	11 55 21 is_stmt 1 discriminator 1 # setiv.c:55:21
	movl	ny(%rip), %eax
	movq	8(%rsp), %r13           # 8-byte Reload
.LBB6_8:                                # %for.inc75
                                        #   in Loop: Header=BB6_4 Depth=2
	.loc	11 55 5 is_stmt 0 discriminator 1 # setiv.c:55:5
	incq	%r15
	.loc	11 55 24 discriminator 1 # setiv.c:55:24
	leal	-1(%rax), %edx
	.loc	11 55 19 discriminator 1 # setiv.c:55:19
	movslq	%edx, %rdx
	.loc	11 55 5 discriminator 1 # setiv.c:55:5
	addq	$2600, %r13             # imm = 0xA28
	.loc	11 55 19 discriminator 1 # setiv.c:55:19
	cmpq	%rdx, %r15
	jl	.LBB6_4
.Ltmp141:
# BB#9:                                 # %for.inc78.loopexit
                                        #   in Loop: Header=BB6_2 Depth=1
	.loc	11 53 19 is_stmt 1 discriminator 1 # setiv.c:53:19
	movl	nz(%rip), %edi
	movq	(%rsp), %rdx            # 8-byte Reload
	movq	%rbp, %r14
	movq	%r12, %rbp
.LBB6_10:                               # %for.inc78
                                        #   in Loop: Header=BB6_2 Depth=1
	.loc	11 53 3 is_stmt 0 discriminator 1 # setiv.c:53:3
	incq	%rbx
	.loc	11 53 22 discriminator 1 # setiv.c:53:22
	leal	-1(%rdi), %r9d
	.loc	11 53 17 discriminator 1 # setiv.c:53:17
	movslq	%r9d, %rsi
	.loc	11 53 3 discriminator 1 # setiv.c:53:3
	addq	$169000, %rdx           # imm = 0x29428
	.loc	11 53 17 discriminator 1 # setiv.c:53:17
	cmpq	%rsi, %rbx
	jl	.LBB6_2
.Ltmp142:
.LBB6_11:                               # %for.end80
	.loc	11 81 1 is_stmt 1       # setiv.c:81:1
	addq	$440, %rsp              # imm = 0x1B8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp143:
.Lfunc_end6:
	.size	setiv, .Lfunc_end6-setiv
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI7_0:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI7_1:
	.quad	4608683618675807573     # double 1.3333333333333333
.LCPI7_2:
	.quad	-4621053505652318538    # double -0.47999999999999987
.LCPI7_3:
	.quad	4595172819793696085     # double 0.16666666666666666
.LCPI7_4:
	.quad	4611505874442293083     # double 1.9599999999999997
.LCPI7_5:
	.quad	4602678819172646912     # double 0.5
.LCPI7_6:
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI7_7:
	.quad	4608983858650965606     # double 1.3999999999999999
.LCPI7_8:
	.quad	4607182418800017408     # double 1
.LCPI7_9:
	.quad	4617315517961601024     # double 5
.LCPI7_10:
	.quad	4616189618054758400     # double 4
.LCPI7_11:
	.quad	4618441417868443648     # double 6
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI7_12:
	.quad	4616189618054758400     # double 4
	.quad	4616189618054758400     # double 4
.LCPI7_13:
	.quad	4618441417868443648     # double 6
	.quad	4618441417868443648     # double 6
	.text
	.globl	erhs
	.p2align	4, 0x90
	.type	erhs,@function
erhs:                                   # @erhs
.Lfunc_begin7:
	.file	12 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/erhs.c"
	.loc	12 42 0                 # erhs.c:42:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	12 68 3 prologue_end discriminator 1 # erhs.c:68:3
	pushq	%rbp
.Ltmp144:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp145:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp146:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp147:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp148:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp149:
	.cfi_def_cfa_offset 56
	subq	$488, %rsp              # imm = 0x1E8
.Ltmp150:
	.cfi_def_cfa_offset 544
.Ltmp151:
	.cfi_offset %rbx, -56
.Ltmp152:
	.cfi_offset %r12, -48
.Ltmp153:
	.cfi_offset %r13, -40
.Ltmp154:
	.cfi_offset %r14, -32
.Ltmp155:
	.cfi_offset %r15, -24
.Ltmp156:
	.cfi_offset %rbp, -16
.Ltmp157:
	#DEBUG_VALUE: erhs:k <- 0
	movslq	nz(%rip), %r15
.Ltmp158:
	.loc	12 96 19 discriminator 1 # erhs.c:96:19
	testq	%r15, %r15
	jle	.LBB7_11
.Ltmp159:
# BB#1:                                 # %for.cond25.preheader.lr.ph
	.loc	12 59 21 discriminator 1 # erhs.c:59:21
	movl	ny(%rip), %ecx
	.loc	12 59 5 is_stmt 0 discriminator 1 # erhs.c:59:5
	testl	%ecx, %ecx
	jle	.LBB7_65
# BB#2:                                 # %for.cond28.preheader.lr.ph.us.preheader
	movq	%r15, 96(%rsp)          # 8-byte Spill
.Ltmp160:
	.loc	12 60 23 is_stmt 1 discriminator 1 # erhs.c:60:23
	movl	nx(%rip), %eax
.Ltmp161:
	.loc	12 62 11                # erhs.c:62:11
	movq	%rax, 144(%rsp)         # 8-byte Spill
	leal	-1(%rax), %eax
	leaq	(%rax,%rax,4), %rax
	leaq	40(,%rax,8), %r15
	leal	-1(%rcx), %eax
	movl	%eax, 128(%rsp)         # 4-byte Spill
.Ltmp162:
	.loc	12 60 7 discriminator 1 # erhs.c:60:7
	movq	%rcx, 112(%rsp)         # 8-byte Spill
	movl	%ecx, %r12d
	andl	$7, %r12d
	movl	$frct, %eax
	movq	%rax, 64(%rsp)          # 8-byte Spill
	xorl	%ecx, %ecx
	movl	$frct+18200, %eax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	.p2align	4, 0x90
.LBB7_3:                                # %for.cond28.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_5 Depth 2
                                        #     Child Loop BB7_8 Depth 2
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	144(%rsp), %rax         # 8-byte Reload
	testl	%eax, %eax
	jle	.LBB7_9
# BB#4:                                 # %for.cond31.preheader.lr.ph.us.us.preheader
                                        #   in Loop: Header=BB7_3 Depth=1
	testl	%r12d, %r12d
	movq	64(%rsp), %rbx          # 8-byte Reload
	movl	$0, %ebp
	je	.LBB7_6
	.p2align	4, 0x90
.LBB7_5:                                # %for.cond31.preheader.lr.ph.us.us.prol
                                        #   Parent Loop BB7_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp163:
	.loc	12 62 28                # erhs.c:62:28
	xorl	%esi, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	memset
.Ltmp164:
	.loc	12 59 5 discriminator 1 # erhs.c:59:5
	incq	%rbp
	addq	$2600, %rbx             # imm = 0xA28
	cmpl	%ebp, %r12d
	jne	.LBB7_5
.LBB7_6:                                # %for.cond31.preheader.lr.ph.us.us.preheader.split
                                        #   in Loop: Header=BB7_3 Depth=1
	cmpl	$7, 128(%rsp)           # 4-byte Folded Reload
	jb	.LBB7_9
# BB#7:                                 # %for.cond31.preheader.lr.ph.us.us.preheader.split.split
                                        #   in Loop: Header=BB7_3 Depth=1
.Ltmp165:
	.loc	12 60 7 discriminator 1 # erhs.c:60:7
	movq	112(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ebx
	subl	%ebp, %ebx
	imulq	$2600, %rbp, %r13       # imm = 0xA28
	movq	8(%rsp), %rbp           # 8-byte Reload
	.p2align	4, 0x90
.LBB7_8:                                # %for.cond31.preheader.lr.ph.us.us
                                        #   Parent Loop BB7_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp166:
	.loc	12 62 28                # erhs.c:62:28
	leaq	(%rbp,%r13), %r14
	leaq	-18200(%rbp,%r13), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-15600(%rbp,%r13), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-13000(%rbp,%r13), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-10400(%rbp,%r13), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-7800(%rbp,%r13), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-5200(%rbp,%r13), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	leaq	-2600(%rbp,%r13), %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset
	xorl	%esi, %esi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	memset
.Ltmp167:
	.loc	12 59 5 discriminator 1 # erhs.c:59:5
	addq	$20800, %rbp            # imm = 0x5140
	addl	$-8, %ebx
	jne	.LBB7_8
.Ltmp168:
.LBB7_9:                                # %for.cond25.for.inc46_crit_edge.us
                                        #   in Loop: Header=BB7_3 Depth=1
	movq	32(%rsp), %rcx          # 8-byte Reload
	.loc	12 58 24 discriminator 2 # erhs.c:58:24
	incl	%ecx
.Ltmp169:
	#DEBUG_VALUE: erhs:k <- %ECX
	.loc	12 58 3 is_stmt 0 discriminator 1 # erhs.c:58:3
	addq	$169000, 64(%rsp)       # 8-byte Folded Spill
                                        # imm = 0x29428
	addq	$169000, 8(%rsp)        # 8-byte Folded Spill
                                        # imm = 0x29428
	.loc	12 58 17 discriminator 1 # erhs.c:58:17
	movq	96(%rsp), %rax          # 8-byte Reload
	cmpl	%eax, %ecx
	jl	.LBB7_3
.Ltmp170:
# BB#10:                                # %for.cond49.preheader
	#DEBUG_VALUE: erhs:k <- %ECX
	movq	96(%rsp), %r15          # 8-byte Reload
	testl	%r15d, %r15d
	jle	.LBB7_11
.Ltmp171:
.LBB7_65:                               # %for.body51.lr.ph
	.loc	12 68 3 is_stmt 1 discriminator 1 # erhs.c:68:3
	movslq	ny(%rip), %r14
.Ltmp172:
	.loc	12 70 21 discriminator 1 # erhs.c:70:21
	testq	%r14, %r14
	setle	%al
.Ltmp173:
	.loc	12 71 31                # erhs.c:71:31
	movl	ny0(%rip), %ecx
	.loc	12 71 35 is_stmt 0      # erhs.c:71:35
	decl	%ecx
	.loc	12 71 29                # erhs.c:71:29
	cvtsi2sdl	%ecx, %xmm0
.Ltmp174:
	.loc	12 72 23 is_stmt 1 discriminator 1 # erhs.c:72:23
	movl	nx(%rip), %ecx
.Ltmp175:
	.loc	12 73 32                # erhs.c:73:32
	movl	nx0(%rip), %edx
	.loc	12 73 36 is_stmt 0      # erhs.c:73:36
	decl	%edx
	.loc	12 73 30                # erhs.c:73:30
	cvtsi2sdl	%edx, %xmm1
.Ltmp176:
	.loc	12 69 33 is_stmt 1      # erhs.c:69:33
	leal	-1(%r15), %r8d
	.loc	12 69 28 is_stmt 0      # erhs.c:69:28
	cvtsi2sdl	%r8d, %xmm2
.Ltmp177:
	.loc	12 70 5 is_stmt 1 discriminator 1 # erhs.c:70:5
	testl	%ecx, %ecx
	setle	%r9b
	orb	%al, %r9b
	movl	$rsd, %r10d
	xorl	%r11d, %r11d
	.p2align	4, 0x90
.LBB7_66:                               # %for.body51
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_68 Depth 2
                                        #       Child Loop BB7_69 Depth 3
                                        #         Child Loop BB7_70 Depth 4
.Ltmp178:
	#DEBUG_VALUE: erhs:j <- 0
	testb	%r9b, %r9b
	jne	.LBB7_73
.Ltmp179:
# BB#67:                                #   in Loop: Header=BB7_66 Depth=1
	.loc	12 69 14                # erhs.c:69:14
	cvtsi2sdl	%r11d, %xmm3
	.loc	12 69 26 is_stmt 0      # erhs.c:69:26
	divsd	%xmm2, %xmm3
.Ltmp180:
	#DEBUG_VALUE: erhs:zeta <- %XMM3
	movq	%r10, %rbx
	xorl	%esi, %esi
.Ltmp181:
	.p2align	4, 0x90
.LBB7_68:                               # %for.body56.us
                                        #   Parent Loop BB7_66 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB7_69 Depth 3
                                        #         Child Loop BB7_70 Depth 4
	.loc	12 71 15 is_stmt 1      # erhs.c:71:15
	cvtsi2sdl	%esi, %xmm4
	.loc	12 71 27 is_stmt 0      # erhs.c:71:27
	divsd	%xmm0, %xmm4
.Ltmp182:
	#DEBUG_VALUE: erhs:i <- 0
	#DEBUG_VALUE: erhs:eta <- %XMM4
	movq	%rbx, %rax
	xorl	%edi, %edi
.Ltmp183:
	.p2align	4, 0x90
.LBB7_69:                               # %for.body64.us
                                        #   Parent Loop BB7_66 Depth=1
                                        #     Parent Loop BB7_68 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB7_70 Depth 4
	.loc	12 73 16 is_stmt 1      # erhs.c:73:16
	cvtsi2sdl	%edi, %xmm5
	.loc	12 73 28 is_stmt 0      # erhs.c:73:28
	divsd	%xmm1, %xmm5
.Ltmp184:
	#DEBUG_VALUE: erhs:m <- 0
	#DEBUG_VALUE: erhs:xi <- %XMM5
	movq	$-520, %rbp             # imm = 0xFFFFFFFFFFFFFDF8
	movq	%rax, %rdx
.Ltmp185:
	.p2align	4, 0x90
.LBB7_70:                               # %for.body72.us
                                        #   Parent Loop BB7_66 Depth=1
                                        #     Parent Loop BB7_68 Depth=2
                                        #       Parent Loop BB7_69 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	movsd	ce+600(%rbp), %xmm6     # xmm6 = mem[0],zero
.Ltmp186:
	.loc	12 79 26 is_stmt 1      # erhs.c:79:26
	mulsd	%xmm5, %xmm6
	.loc	12 79 13 is_stmt 0      # erhs.c:79:13
	addsd	ce+576(%rbp), %xmm6
	.loc	12 79 32                # erhs.c:79:32
	mulsd	%xmm5, %xmm6
	.loc	12 78 13 is_stmt 1      # erhs.c:78:13
	addsd	ce+552(%rbp), %xmm6
	.loc	12 79 38                # erhs.c:79:38
	mulsd	%xmm5, %xmm6
	.loc	12 77 13                # erhs.c:77:13
	addsd	ce+528(%rbp), %xmm6
	.loc	12 79 44                # erhs.c:79:44
	mulsd	%xmm5, %xmm6
	.loc	12 76 13                # erhs.c:76:13
	addsd	ce+520(%rbp), %xmm6
	movsd	ce+608(%rbp), %xmm7     # xmm7 = mem[0],zero
	.loc	12 83 26                # erhs.c:83:26
	mulsd	%xmm4, %xmm7
	.loc	12 83 13 is_stmt 0      # erhs.c:83:13
	addsd	ce+584(%rbp), %xmm7
	.loc	12 83 33                # erhs.c:83:33
	mulsd	%xmm4, %xmm7
	.loc	12 82 13 is_stmt 1      # erhs.c:82:13
	addsd	ce+560(%rbp), %xmm7
	.loc	12 83 40                # erhs.c:83:40
	mulsd	%xmm4, %xmm7
	.loc	12 81 13                # erhs.c:81:13
	addsd	ce+536(%rbp), %xmm7
	.loc	12 83 47                # erhs.c:83:47
	mulsd	%xmm4, %xmm7
	.loc	12 80 13                # erhs.c:80:13
	addsd	%xmm6, %xmm7
	movsd	ce+616(%rbp), %xmm6     # xmm6 = mem[0],zero
	.loc	12 87 26                # erhs.c:87:26
	mulsd	%xmm3, %xmm6
	.loc	12 87 13 is_stmt 0      # erhs.c:87:13
	addsd	ce+592(%rbp), %xmm6
	.loc	12 87 34                # erhs.c:87:34
	mulsd	%xmm3, %xmm6
	.loc	12 86 13 is_stmt 1      # erhs.c:86:13
	addsd	ce+568(%rbp), %xmm6
	.loc	12 87 42                # erhs.c:87:42
	mulsd	%xmm3, %xmm6
	.loc	12 85 13                # erhs.c:85:13
	addsd	ce+544(%rbp), %xmm6
	.loc	12 87 50                # erhs.c:87:50
	mulsd	%xmm3, %xmm6
	.loc	12 84 13                # erhs.c:84:13
	addsd	%xmm7, %xmm6
	.loc	12 75 27                # erhs.c:75:27
	movsd	%xmm6, (%rdx)
.Ltmp187:
	.loc	12 74 9 discriminator 1 # erhs.c:74:9
	addq	$8, %rdx
	addq	$104, %rbp
	jne	.LBB7_70
.Ltmp188:
# BB#71:                                # %for.inc145.us
                                        #   in Loop: Header=BB7_69 Depth=3
	.loc	12 72 7 discriminator 1 # erhs.c:72:7
	incq	%rdi
	addq	$40, %rax
	cmpl	%ecx, %edi
	jne	.LBB7_69
.Ltmp189:
# BB#72:                                # %for.cond61.for.inc148_crit_edge.us
                                        #   in Loop: Header=BB7_68 Depth=2
	.loc	12 70 5 discriminator 1 # erhs.c:70:5
	incq	%rsi
	addq	$2600, %rbx             # imm = 0xA28
	.loc	12 70 19 is_stmt 0 discriminator 1 # erhs.c:70:19
	cmpq	%r14, %rsi
	jl	.LBB7_68
.Ltmp190:
.LBB7_73:                               # %for.inc151
                                        #   in Loop: Header=BB7_66 Depth=1
	.loc	12 68 3 is_stmt 1 discriminator 1 # erhs.c:68:3
	incq	%r11
	addq	$169000, %r10           # imm = 0x29428
	.loc	12 68 17 is_stmt 0 discriminator 1 # erhs.c:68:17
	cmpq	%r15, %r11
	jl	.LBB7_66
	jmp	.LBB7_12
.Ltmp191:
.LBB7_11:                               # %for.cond49.preheader.for.cond154.preheader_crit_edge
	.loc	12 96 22 is_stmt 1 discriminator 1 # erhs.c:96:22
	leal	-1(%r15), %r8d
.LBB7_12:                               # %for.cond154.preheader
	.loc	12 96 3 is_stmt 0 discriminator 1 # erhs.c:96:3
	cmpl	$2, %r8d
	jl	.LBB7_31
# BB#13:                                # %for.body158.lr.ph
.Ltmp192:
	.loc	12 201 29 is_stmt 1     # erhs.c:201:29
	movslq	nx(%rip), %r13
.Ltmp193:
	.loc	12 96 3 discriminator 1 # erhs.c:96:3
	movslq	ist(%rip), %r10
.Ltmp194:
	.loc	12 175 13               # erhs.c:175:13
	movq	%r10, 24(%rsp)          # 8-byte Spill
	movsd	dssp(%rip), %xmm5       # xmm5 = mem[0],zero
.Ltmp195:
	.loc	12 185 26 discriminator 1 # erhs.c:185:26
	movapd	%xmm5, 32(%rsp)         # 16-byte Spill
	leaq	-3(%r13), %r12
.Ltmp196:
	.loc	12 198 41               # erhs.c:198:41
	leaq	-5(%r13), %rcx
	.loc	12 201 41               # erhs.c:201:41
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	leaq	-2(%r13), %rdx
.Ltmp197:
	.loc	12 145 19               # erhs.c:145:19
	movsd	tx1(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	12 149 13               # erhs.c:149:13
	movsd	tx3(%rip), %xmm2        # xmm2 = mem[0],zero
	movapd	%xmm2, 400(%rsp)        # 16-byte Spill
	movsd	.LCPI7_0(%rip), %xmm3   # xmm3 = mem[0],zero
	.loc	12 149 17 is_stmt 0     # erhs.c:149:17
	mulsd	%xmm2, %xmm3
	.loc	12 145 17 is_stmt 1     # erhs.c:145:17
	movapd	%xmm3, 384(%rsp)        # 16-byte Spill
	movsd	dx1(%rip), %xmm4        # xmm4 = mem[0],zero
	movhpd	dx2(%rip), %xmm4        # xmm4 = xmm4[0],mem[0]
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm0, %xmm4
	movapd	%xmm4, 368(%rsp)        # 16-byte Spill
	.loc	12 155 17               # erhs.c:155:17
	movsd	dx3(%rip), %xmm4        # xmm4 = mem[0],zero
	movhpd	dx4(%rip), %xmm4        # xmm4 = xmm4[0],mem[0]
	mulpd	%xmm0, %xmm4
	movapd	%xmm4, 352(%rsp)        # 16-byte Spill
	.loc	12 165 17               # erhs.c:165:17
	mulsd	dx5(%rip), %xmm1
	movapd	%xmm1, 416(%rsp)        # 16-byte Spill
	movsd	.LCPI7_1(%rip), %xmm0   # xmm0 = mem[0],zero
.Ltmp198:
	.loc	12 132 32               # erhs.c:132:32
	mulsd	%xmm2, %xmm0
	movsd	.LCPI7_2(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	12 136 11               # erhs.c:136:11
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 56(%rsp)         # 8-byte Spill
	movsd	.LCPI7_3(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	12 139 11               # erhs.c:139:11
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 48(%rsp)         # 8-byte Spill
	movsd	.LCPI7_4(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	12 140 21               # erhs.c:140:21
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 320(%rsp)        # 8-byte Spill
.Ltmp199:
	.loc	12 114 23               # erhs.c:114:23
	movsd	tx2(%rip), %xmm10       # xmm10 = mem[0],zero
.Ltmp200:
	.loc	12 96 3 discriminator 1 # erhs.c:96:3
	movapd	%xmm10, 304(%rsp)       # 16-byte Spill
	movslq	jst(%rip), %rsi
	movq	%rsi, 168(%rsp)         # 8-byte Spill
	movslq	%r8d, %rcx
.Ltmp201:
	.loc	12 149 46               # erhs.c:149:46
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	leaq	(,%r10,8), %rcx
	leaq	flux+8(%rcx,%rcx,4), %rdi
	movq	%rdi, 232(%rsp)         # 8-byte Spill
	leaq	(%rcx,%rcx,4), %rbx
	.loc	12 154 46               # erhs.c:154:46
	leaq	flux+16(%rcx,%rcx,4), %rdi
	.loc	12 164 46               # erhs.c:164:46
	movq	%rdi, 224(%rsp)         # 8-byte Spill
	leaq	flux+32(%rcx,%rcx,4), %rdi
.Ltmp202:
	.loc	12 114 27               # erhs.c:114:27
	movq	%rdi, 216(%rsp)         # 8-byte Spill
	movapd	%xmm10, %xmm11
	movlhps	%xmm11, %xmm11          # xmm11 = xmm11[0,0]
.Ltmp203:
	.loc	12 132 38               # erhs.c:132:38
	movaps	%xmm11, 288(%rsp)       # 16-byte Spill
	unpcklpd	%xmm2, %xmm0    # xmm0 = xmm0[0],xmm2[0]
	movapd	%xmm0, 336(%rsp)        # 16-byte Spill
.Ltmp204:
	.loc	12 154 27               # erhs.c:154:27
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 272(%rsp)        # 16-byte Spill
.Ltmp205:
	.loc	12 188 20               # erhs.c:188:20
	movapd	%xmm5, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp206:
	.loc	12 96 3 discriminator 1 # erhs.c:96:3
	movaps	%xmm0, 448(%rsp)        # 16-byte Spill
	imulq	$2600, %rsi, %r14       # imm = 0xA28
	leaq	flux+72(%rcx,%rcx,4), %rdi
	movq	%rdi, 248(%rsp)         # 8-byte Spill
	leaq	flux+48(%rcx,%rcx,4), %rcx
	movq	%rcx, 208(%rsp)         # 8-byte Spill
	leal	-1(%r10), %ecx
	movslq	%ecx, %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	rsd+169032(%r14,%rcx,8), %rbp
	movsd	.LCPI7_5(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp207:
	.loc	12 105 49               # erhs.c:105:49
	movsd	.LCPI7_6(%rip), %xmm9   # xmm9 = mem[0],zero
.Ltmp208:
	.loc	12 201 29               # erhs.c:201:29
	shlq	$3, %rdx
	movq	%rdx, 432(%rsp)         # 8-byte Spill
	.loc	12 199 41               # erhs.c:199:41
	leaq	-4(%r13), %rcx
.Ltmp209:
	.loc	12 96 3 discriminator 1 # erhs.c:96:3
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	movslq	iend(%rip), %r9
	movslq	jend(%rip), %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	leaq	rsd+169032(%r14), %rdi
	leaq	frct+169032(%r14,%rbx), %rcx
	movl	$1, %edx
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	xorl	%esi, %esi
	leaq	(%r14,%rbx), %r11
	movsd	.LCPI7_7(%rip), %xmm12  # xmm12 = mem[0],zero
	.p2align	4, 0x90
.LBB7_14:                               # %for.body158
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_15 Depth 2
                                        #       Child Loop BB7_16 Depth 3
                                        #       Child Loop BB7_18 Depth 3
                                        #       Child Loop BB7_21 Depth 3
                                        #       Child Loop BB7_24 Depth 3
                                        #       Child Loop BB7_27 Depth 3
	movq	%rsi, 176(%rsp)         # 8-byte Spill
	movq	%rcx, 184(%rsp)         # 8-byte Spill
	movq	%rdi, 192(%rsp)         # 8-byte Spill
	movq	%r14, 200(%rsp)         # 8-byte Spill
	movq	168(%rsp), %r8          # 8-byte Reload
.Ltmp210:
	.loc	12 97 5 discriminator 1 # erhs.c:97:5
	movq	16(%rsp), %rdx          # 8-byte Reload
	cmpl	%edx, %r8d
	movq	%r14, (%rsp)            # 8-byte Spill
	movq	%rsi, %r15
	movq	%r8, %r14
	movq	%rdi, %rax
	movq	%rcx, %r8
	jge	.LBB7_29
	.p2align	4, 0x90
.LBB7_15:                               # %for.cond163.preheader
                                        #   Parent Loop BB7_14 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB7_16 Depth 3
                                        #       Child Loop BB7_18 Depth 3
                                        #       Child Loop BB7_21 Depth 3
                                        #       Child Loop BB7_24 Depth 3
                                        #       Child Loop BB7_27 Depth 3
.Ltmp211:
	.loc	12 98 7 discriminator 1 # erhs.c:98:7
	testl	%r13d, %r13d
	movq	%rax, %rcx
	movl	$flux+32, %esi
	movl	$0, %edi
	jle	.LBB7_17
	.p2align	4, 0x90
.LBB7_16:                               # %for.body166
                                        #   Parent Loop BB7_14 Depth=1
                                        #     Parent Loop BB7_15 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp212:
	.loc	12 99 22                # erhs.c:99:22
	movq	-24(%rcx), %rdx
	.loc	12 100 15               # erhs.c:100:15
	movd	%rdx, %xmm2
	.loc	12 100 33 is_stmt 0     # erhs.c:100:33
	movsd	-32(%rcx), %xmm3        # xmm3 = mem[0],zero
	.loc	12 99 20 is_stmt 1      # erhs.c:99:20
	movq	%rdx, -32(%rsi)
	.loc	12 105 53               # erhs.c:105:53
	movsd	(%rcx), %xmm0           # xmm0 = mem[0],zero
	.loc	12 100 31               # erhs.c:100:31
	movapd	%xmm2, %xmm1
	divsd	%xmm3, %xmm1
.Ltmp213:
	#DEBUG_VALUE: erhs:u21 <- %XMM1
	.loc	12 101 39               # erhs.c:101:39
	movapd	%xmm2, %xmm4
	.loc	12 102 23               # erhs.c:102:23
	movupd	-16(%rcx), %xmm5
	.loc	12 103 39               # erhs.c:103:39
	movapd	%xmm5, %xmm6
	.loc	12 101 39               # erhs.c:101:39
	mulsd	%xmm4, %xmm4
	.loc	12 106 38               # erhs.c:106:38
	movapd	%xmm1, %xmm7
	movlhps	%xmm7, %xmm7            # xmm7 = xmm7[0,0]
	mulpd	%xmm5, %xmm7
	.loc	12 102 39               # erhs.c:102:39
	mulsd	%xmm5, %xmm5
	.loc	12 102 21 is_stmt 0     # erhs.c:102:21
	addsd	%xmm4, %xmm5
	.loc	12 103 39 is_stmt 1     # erhs.c:103:39
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	mulsd	%xmm6, %xmm6
	.loc	12 103 21 is_stmt 0     # erhs.c:103:21
	addsd	%xmm5, %xmm6
	.loc	12 101 18 is_stmt 1     # erhs.c:101:18
	mulsd	%xmm8, %xmm6
	.loc	12 104 18               # erhs.c:104:18
	divsd	%xmm3, %xmm6
.Ltmp214:
	#DEBUG_VALUE: erhs:q <- %XMM6
	.loc	12 105 38               # erhs.c:105:38
	mulsd	%xmm1, %xmm2
	.loc	12 105 69 is_stmt 0     # erhs.c:105:69
	movapd	%xmm0, %xmm3
	subsd	%xmm6, %xmm3
	.loc	12 105 49               # erhs.c:105:49
	mulsd	%xmm9, %xmm3
	.loc	12 105 44               # erhs.c:105:44
	addsd	%xmm2, %xmm3
	.loc	12 105 20               # erhs.c:105:20
	movsd	%xmm3, -24(%rsi)
	.loc	12 108 27 is_stmt 1     # erhs.c:108:27
	mulsd	%xmm12, %xmm0
	.loc	12 106 20               # erhs.c:106:20
	movupd	%xmm7, -16(%rsi)
	.loc	12 108 50               # erhs.c:108:50
	mulsd	%xmm9, %xmm6
.Ltmp215:
	.loc	12 108 45 is_stmt 0     # erhs.c:108:45
	subsd	%xmm6, %xmm0
	.loc	12 108 56               # erhs.c:108:56
	mulsd	%xmm1, %xmm0
	.loc	12 108 20               # erhs.c:108:20
	movsd	%xmm0, (%rsi)
.Ltmp216:
	.loc	12 98 7 is_stmt 1 discriminator 1 # erhs.c:98:7
	incq	%rdi
	.loc	12 98 21 is_stmt 0 discriminator 1 # erhs.c:98:21
	addq	$40, %rsi
	addq	$40, %rcx
	cmpq	%r13, %rdi
	.loc	12 98 7 discriminator 1 # erhs.c:98:7
	jl	.LBB7_16
.Ltmp217:
.LBB7_17:                               # %for.end307
                                        #   in Loop: Header=BB7_15 Depth=2
	.loc	12 111 7 is_stmt 1 discriminator 1 # erhs.c:111:7
	cmpl	%r9d, %r10d
	movq	248(%rsp), %rcx         # 8-byte Reload
	movq	%r8, %rsi
	movq	%r10, %rdi
	movapd	400(%rsp), %xmm8        # 16-byte Reload
	movapd	336(%rsp), %xmm9        # 16-byte Reload
	movsd	56(%rsp), %xmm15        # 8-byte Reload
                                        # xmm15 = mem[0],zero
	movsd	48(%rsp), %xmm3         # 8-byte Reload
                                        # xmm3 = mem[0],zero
	jge	.LBB7_19
	.p2align	4, 0x90
.LBB7_18:                               # %for.cond312.preheader
                                        #   Parent Loop BB7_14 Depth=1
                                        #     Parent Loop BB7_15 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	incq	%rdi
.Ltmp218:
	.loc	12 113 31               # erhs.c:113:31
	movupd	-32(%rsi), %xmm0
	.loc	12 114 31               # erhs.c:114:31
	movupd	-32(%rcx), %xmm1
	.loc	12 114 46 is_stmt 0     # erhs.c:114:46
	movupd	-112(%rcx), %xmm2
	.loc	12 114 44               # erhs.c:114:44
	subpd	%xmm2, %xmm1
	.loc	12 114 27               # erhs.c:114:27
	mulpd	%xmm11, %xmm1
	.loc	12 114 21               # erhs.c:114:21
	subpd	%xmm1, %xmm0
	.loc	12 113 28 is_stmt 1     # erhs.c:113:28
	movupd	%xmm0, -32(%rsi)
	.loc	12 113 31 is_stmt 0     # erhs.c:113:31
	movupd	-16(%rsi), %xmm0
	.loc	12 114 31 is_stmt 1     # erhs.c:114:31
	movupd	-16(%rcx), %xmm1
	.loc	12 114 46 is_stmt 0     # erhs.c:114:46
	movupd	-96(%rcx), %xmm2
	.loc	12 114 44               # erhs.c:114:44
	subpd	%xmm2, %xmm1
	.loc	12 114 27               # erhs.c:114:27
	mulpd	%xmm11, %xmm1
	.loc	12 114 21               # erhs.c:114:21
	subpd	%xmm1, %xmm0
	.loc	12 113 28 is_stmt 1     # erhs.c:113:28
	movupd	%xmm0, -16(%rsi)
	.loc	12 113 31 is_stmt 0     # erhs.c:113:31
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	12 114 31 is_stmt 1     # erhs.c:114:31
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	.loc	12 114 44 is_stmt 0     # erhs.c:114:44
	subsd	-80(%rcx), %xmm1
	.loc	12 114 27               # erhs.c:114:27
	mulsd	%xmm10, %xmm1
	.loc	12 114 21               # erhs.c:114:21
	subsd	%xmm1, %xmm0
	.loc	12 113 28 is_stmt 1     # erhs.c:113:28
	movsd	%xmm0, (%rsi)
.Ltmp219:
	.loc	12 111 23 discriminator 1 # erhs.c:111:23
	addq	$40, %rsi
	addq	$40, %rcx
	cmpq	%r9, %rdi
	.loc	12 111 7 is_stmt 0 discriminator 1 # erhs.c:111:7
	jl	.LBB7_18
.Ltmp220:
.LBB7_19:                               # %for.end350
                                        #   in Loop: Header=BB7_15 Depth=2
	.loc	12 117 7 is_stmt 1 discriminator 1 # erhs.c:117:7
	cmpl	%r13d, %r10d
	movapd	384(%rsp), %xmm11       # 16-byte Reload
	movapd	368(%rsp), %xmm12       # 16-byte Reload
	movapd	352(%rsp), %xmm13       # 16-byte Reload
	movsd	320(%rsp), %xmm14       # 8-byte Reload
                                        # xmm14 = mem[0],zero
.Ltmp221:
	.loc	12 118 19               # erhs.c:118:19
	movsd	.LCPI7_8(%rip), %xmm7   # xmm7 = mem[0],zero
	jge	.LBB7_22
# BB#20:                                # %for.body354.preheader
                                        #   in Loop: Header=BB7_15 Depth=2
	.loc	12 118 21 is_stmt 0     # erhs.c:118:21
	leaq	(%rax,%rbx), %rcx
	xorl	%esi, %esi
	movq	%r10, %rdi
	.p2align	4, 0x90
.LBB7_21:                               # %for.body354
                                        #   Parent Loop BB7_14 Depth=1
                                        #     Parent Loop BB7_15 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 118 19               # erhs.c:118:19
	movapd	%xmm7, %xmm0
	divsd	-32(%rcx,%rsi), %xmm0
.Ltmp222:
	#DEBUG_VALUE: erhs:tmp <- %XMM0
	.loc	12 120 22 is_stmt 1     # erhs.c:120:22
	movupd	-24(%rcx,%rsi), %xmm1
	movapd	%xmm3, %xmm10
	.loc	12 120 20 is_stmt 0     # erhs.c:120:20
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm1, %xmm3
	movsd	-8(%rcx,%rsi), %xmm1    # xmm1 = mem[0],zero
	.loc	12 122 20 is_stmt 1     # erhs.c:122:20
	mulsd	%xmm0, %xmm1
.Ltmp223:
	#DEBUG_VALUE: erhs:u41i <- %XMM1
	.loc	12 123 20               # erhs.c:123:20
	mulsd	(%rcx,%rsi), %xmm0
.Ltmp224:
	#DEBUG_VALUE: erhs:u51i <- %XMM0
	.loc	12 125 19               # erhs.c:125:19
	movapd	%xmm7, %xmm2
	divsd	-72(%rcx,%rsi), %xmm2
.Ltmp225:
	#DEBUG_VALUE: erhs:tmp <- %XMM2
	.loc	12 127 24               # erhs.c:127:24
	movupd	-64(%rcx,%rsi), %xmm5
	.loc	12 127 22 is_stmt 0     # erhs.c:127:22
	movapd	%xmm2, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm5, %xmm4
	movsd	-48(%rcx,%rsi), %xmm5   # xmm5 = mem[0],zero
	.loc	12 129 22 is_stmt 1     # erhs.c:129:22
	mulsd	%xmm2, %xmm5
.Ltmp226:
	#DEBUG_VALUE: erhs:u41im1 <- %XMM5
	.loc	12 130 22               # erhs.c:130:22
	mulsd	-40(%rcx,%rsi), %xmm2
.Ltmp227:
	#DEBUG_VALUE: erhs:u51im1 <- %XMM2
	.loc	12 132 47               # erhs.c:132:47
	movapd	%xmm3, %xmm6
	subpd	%xmm4, %xmm6
	.loc	12 132 38 is_stmt 0     # erhs.c:132:38
	mulpd	%xmm9, %xmm6
	.loc	12 132 20               # erhs.c:132:20
	movupd	%xmm6, flux+8(%rbx,%rsi)
	.loc	12 134 35 is_stmt 1     # erhs.c:134:35
	movapd	%xmm1, %xmm6
	subsd	%xmm5, %xmm6
	.loc	12 134 26 is_stmt 0     # erhs.c:134:26
	mulsd	%xmm8, %xmm6
	.loc	12 134 20               # erhs.c:134:20
	movsd	%xmm6, flux+24(%rbx,%rsi)
	.loc	12 136 27 is_stmt 1     # erhs.c:136:27
	movapd	%xmm3, %xmm6
	mulsd	%xmm6, %xmm6
	.loc	12 136 43 is_stmt 0     # erhs.c:136:43
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	mulsd	%xmm3, %xmm3
	.loc	12 136 37               # erhs.c:136:37
	addsd	%xmm6, %xmm3
	.loc	12 136 59               # erhs.c:136:59
	mulsd	%xmm1, %xmm1
.Ltmp228:
	.loc	12 136 53               # erhs.c:136:53
	addsd	%xmm3, %xmm1
	.loc	12 137 29 is_stmt 1     # erhs.c:137:29
	movapd	%xmm4, %xmm3
	mulsd	%xmm3, %xmm3
	.loc	12 137 45 is_stmt 0     # erhs.c:137:45
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	mulsd	%xmm4, %xmm4
	.loc	12 137 37               # erhs.c:137:37
	addsd	%xmm3, %xmm4
	.loc	12 137 61               # erhs.c:137:61
	mulsd	%xmm5, %xmm5
.Ltmp229:
	.loc	12 137 53               # erhs.c:137:53
	addsd	%xmm4, %xmm5
	.loc	12 137 19               # erhs.c:137:19
	subsd	%xmm5, %xmm1
	.loc	12 136 17 is_stmt 1     # erhs.c:136:17
	mulsd	%xmm15, %xmm1
	.loc	12 139 31               # erhs.c:139:31
	subsd	%xmm3, %xmm6
	movapd	%xmm10, %xmm3
	.loc	12 139 17 is_stmt 0     # erhs.c:139:17
	mulsd	%xmm3, %xmm6
	.loc	12 138 11 is_stmt 1     # erhs.c:138:11
	addsd	%xmm1, %xmm6
	.loc	12 140 36               # erhs.c:140:36
	subsd	%xmm2, %xmm0
.Ltmp230:
	.loc	12 140 27 is_stmt 0     # erhs.c:140:27
	mulsd	%xmm14, %xmm0
	.loc	12 140 11               # erhs.c:140:11
	addsd	%xmm6, %xmm0
	.loc	12 135 20 is_stmt 1     # erhs.c:135:20
	movsd	%xmm0, flux+32(%rbx,%rsi)
.Ltmp231:
	.loc	12 117 7 discriminator 1 # erhs.c:117:7
	incq	%rdi
	.loc	12 117 23 is_stmt 0 discriminator 1 # erhs.c:117:23
	addq	$40, %rsi
	cmpq	%r13, %rdi
	.loc	12 117 7 discriminator 1 # erhs.c:117:7
	jl	.LBB7_21
.Ltmp232:
.LBB7_22:                               # %for.end484
                                        #   in Loop: Header=BB7_15 Depth=2
	movq	%rax, 96(%rsp)          # 8-byte Spill
	movq	%r8, 8(%rsp)            # 8-byte Spill
.Ltmp233:
	.loc	12 143 7 is_stmt 1 discriminator 1 # erhs.c:143:7
	cmpl	%r9d, %r10d
	movapd	272(%rsp), %xmm9        # 16-byte Reload
	movapd	416(%rsp), %xmm10       # 16-byte Reload
	jge	.LBB7_25
# BB#23:                                # %for.body488.lr.ph
                                        #   in Loop: Header=BB7_15 Depth=2
.Ltmp234:
	.loc	12 146 34               # erhs.c:146:34
	imulq	$2600, %r14, %rcx       # imm = 0xA28
	imulq	$169000, 80(%rsp), %rdx # 8-byte Folded Reload
                                        # imm = 0x29428
	addq	%rcx, %rdx
	leaq	(%r10,%r10,4), %rcx
	.loc	12 149 46               # erhs.c:149:46
	movq	232(%rsp), %rsi         # 8-byte Reload
	movsd	(%rsi), %xmm7           # xmm7 = mem[0],zero
	.loc	12 146 34               # erhs.c:146:34
	movupd	rsd(%rdx,%rcx,8), %xmm2
	.loc	12 154 46               # erhs.c:154:46
	movq	224(%rsp), %rsi         # 8-byte Reload
	movupd	(%rsi), %xmm5
	.loc	12 156 34               # erhs.c:156:34
	movupd	rsd+16(%rdx,%rcx,8), %xmm3
	.loc	12 164 46               # erhs.c:164:46
	movq	216(%rsp), %rsi         # 8-byte Reload
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	12 166 34               # erhs.c:166:34
	movsd	rsd+32(%rdx,%rcx,8), %xmm4 # xmm4 = mem[0],zero
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	%r15, %rdi
	movq	%r10, %rsi
.Ltmp235:
	.p2align	4, 0x90
.LBB7_24:                               # %for.body488
                                        #   Parent Loop BB7_14 Depth=1
                                        #     Parent Loop BB7_15 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 143 7 discriminator 1 # erhs.c:143:7
	incq	%rsi
.Ltmp236:
	.loc	12 149 31               # erhs.c:149:31
	movsd	(%rcx), %xmm8           # xmm8 = mem[0],zero
	.loc	12 149 44 is_stmt 0     # erhs.c:149:44
	movapd	%xmm8, %xmm6
	subsd	%xmm7, %xmm6
	.loc	12 149 27               # erhs.c:149:27
	mulsd	%xmm11, %xmm6
	.loc	12 149 11               # erhs.c:149:11
	addsd	frct+169008(%r11,%rdi), %xmm6
	.loc	12 145 34 is_stmt 1     # erhs.c:145:34
	movupd	-32(%rbp,%rdi), %xmm7
	.loc	12 146 32               # erhs.c:146:32
	addpd	%xmm2, %xmm2
	.loc	12 146 26 is_stmt 0     # erhs.c:146:26
	subpd	%xmm2, %xmm7
	.loc	12 147 34 is_stmt 1     # erhs.c:147:34
	movupd	rsd+169040(%r11,%rdi), %xmm2
	.loc	12 147 26 is_stmt 0     # erhs.c:147:26
	addpd	%xmm2, %xmm7
	.loc	12 145 23 is_stmt 1     # erhs.c:145:23
	mulpd	%xmm12, %xmm7
	.loc	12 145 11 is_stmt 0     # erhs.c:145:11
	movsd	frct+169000(%r11,%rdi), %xmm1 # xmm1 = mem[0],zero
	unpcklpd	%xmm6, %xmm1    # xmm1 = xmm1[0],xmm6[0]
	addpd	%xmm7, %xmm1
	.loc	12 144 26 is_stmt 1     # erhs.c:144:26
	movupd	%xmm1, frct+169000(%r11,%rdi)
	.loc	12 153 28               # erhs.c:153:28
	movupd	frct+169016(%r11,%rdi), %xmm1
	.loc	12 154 31               # erhs.c:154:31
	movupd	8(%rcx), %xmm6
	.loc	12 154 44 is_stmt 0     # erhs.c:154:44
	movapd	%xmm6, %xmm7
	subpd	%xmm5, %xmm7
	.loc	12 154 27               # erhs.c:154:27
	mulpd	%xmm9, %xmm7
	.loc	12 154 11               # erhs.c:154:11
	addpd	%xmm1, %xmm7
	.loc	12 155 34 is_stmt 1     # erhs.c:155:34
	movupd	-16(%rbp,%rdi), %xmm1
	.loc	12 156 32               # erhs.c:156:32
	addpd	%xmm3, %xmm3
	.loc	12 156 26 is_stmt 0     # erhs.c:156:26
	subpd	%xmm3, %xmm1
	.loc	12 157 34 is_stmt 1     # erhs.c:157:34
	movupd	rsd+169056(%r11,%rdi), %xmm3
	.loc	12 157 26 is_stmt 0     # erhs.c:157:26
	addpd	%xmm3, %xmm1
	.loc	12 155 23 is_stmt 1     # erhs.c:155:23
	mulpd	%xmm13, %xmm1
	.loc	12 155 11 is_stmt 0     # erhs.c:155:11
	addpd	%xmm7, %xmm1
	.loc	12 153 26 is_stmt 1     # erhs.c:153:26
	movupd	%xmm1, frct+169016(%r11,%rdi)
	.loc	12 164 31               # erhs.c:164:31
	movsd	24(%rcx), %xmm1         # xmm1 = mem[0],zero
	.loc	12 164 44 is_stmt 0     # erhs.c:164:44
	movapd	%xmm1, %xmm5
	subsd	%xmm0, %xmm5
	.loc	12 164 27               # erhs.c:164:27
	mulsd	%xmm11, %xmm5
	.loc	12 164 11               # erhs.c:164:11
	addsd	frct+169032(%r11,%rdi), %xmm5
	.loc	12 165 34 is_stmt 1     # erhs.c:165:34
	movsd	(%rbp,%rdi), %xmm0      # xmm0 = mem[0],zero
	.loc	12 166 32               # erhs.c:166:32
	addsd	%xmm4, %xmm4
	.loc	12 166 26 is_stmt 0     # erhs.c:166:26
	subsd	%xmm4, %xmm0
	.loc	12 167 34 is_stmt 1     # erhs.c:167:34
	movsd	rsd+169072(%r11,%rdi), %xmm4 # xmm4 = mem[0],zero
	.loc	12 167 26 is_stmt 0     # erhs.c:167:26
	addsd	%xmm4, %xmm0
	.loc	12 165 23 is_stmt 1     # erhs.c:165:23
	mulsd	%xmm10, %xmm0
	.loc	12 165 11 is_stmt 0     # erhs.c:165:11
	addsd	%xmm5, %xmm0
	.loc	12 163 26 is_stmt 1     # erhs.c:163:26
	movsd	%xmm0, frct+169032(%r11,%rdi)
.Ltmp237:
	.loc	12 143 23 discriminator 1 # erhs.c:143:23
	addq	$40, %rdi
	addq	$40, %rcx
	cmpq	%r9, %rsi
.Ltmp238:
	.loc	12 164 46               # erhs.c:164:46
	movapd	%xmm1, %xmm0
	.loc	12 149 46               # erhs.c:149:46
	movapd	%xmm8, %xmm7
	.loc	12 154 46               # erhs.c:154:46
	movapd	%xmm6, %xmm5
	jl	.LBB7_24
.Ltmp239:
.LBB7_25:                               # %for.body758
                                        #   in Loop: Header=BB7_15 Depth=2
	movq	%r15, 64(%rsp)          # 8-byte Spill
.Ltmp240:
	.loc	12 174 28               # erhs.c:174:28
	imulq	$169000, 80(%rsp), %r8  # 8-byte Folded Reload
                                        # imm = 0x29428
	imulq	$2600, %r14, %r15       # imm = 0xA28
	cmpl	$3, %r12d
	movsd	frct+40(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 175 30               # erhs.c:175:30
	movsd	rsd+40(%r8,%r15), %xmm1 # xmm1 = mem[0],zero
	.loc	12 175 28 is_stmt 0     # erhs.c:175:28
	movapd	%xmm1, %xmm2
	movsd	.LCPI7_9(%rip), %xmm6   # xmm6 = mem[0],zero
	mulsd	%xmm6, %xmm2
	.loc	12 176 30 is_stmt 1     # erhs.c:176:30
	movsd	rsd+80(%r8,%r15), %xmm3 # xmm3 = mem[0],zero
	.loc	12 176 28 is_stmt 0     # erhs.c:176:28
	movapd	%xmm3, %xmm4
	movsd	.LCPI7_10(%rip), %xmm5  # xmm5 = mem[0],zero
	movapd	%xmm5, %xmm7
	mulsd	%xmm7, %xmm4
	.loc	12 176 22               # erhs.c:176:22
	subsd	%xmm4, %xmm2
	.loc	12 177 30 is_stmt 1     # erhs.c:177:30
	movsd	rsd+120(%r8,%r15), %xmm4 # xmm4 = mem[0],zero
	.loc	12 177 22 is_stmt 0     # erhs.c:177:22
	addsd	%xmm4, %xmm2
	movapd	32(%rsp), %xmm5         # 16-byte Reload
	.loc	12 175 18 is_stmt 1     # erhs.c:175:18
	mulsd	%xmm5, %xmm2
	.loc	12 175 11 is_stmt 0     # erhs.c:175:11
	subsd	%xmm2, %xmm0
	.loc	12 174 26 is_stmt 1     # erhs.c:174:26
	movsd	%xmm0, frct+40(%r8,%r15)
	.loc	12 178 28               # erhs.c:178:28
	movsd	frct+80(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 179 28               # erhs.c:179:28
	mulsd	%xmm7, %xmm1
	.loc	12 180 28               # erhs.c:180:28
	movsd	.LCPI7_11(%rip), %xmm2  # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm8
	mulsd	%xmm8, %xmm3
	.loc	12 179 28               # erhs.c:179:28
	subsd	%xmm1, %xmm3
	.loc	12 181 28               # erhs.c:181:28
	mulsd	%xmm7, %xmm4
	.loc	12 181 22 is_stmt 0     # erhs.c:181:22
	subsd	%xmm4, %xmm3
	.loc	12 182 22 is_stmt 1     # erhs.c:182:22
	addsd	rsd+160(%r8,%r15), %xmm3
	.loc	12 179 18               # erhs.c:179:18
	mulsd	%xmm5, %xmm3
	.loc	12 179 11 is_stmt 0     # erhs.c:179:11
	subsd	%xmm3, %xmm0
	.loc	12 178 26 is_stmt 1     # erhs.c:178:26
	movsd	%xmm0, frct+80(%r8,%r15)
	.loc	12 174 28               # erhs.c:174:28
	movsd	frct+48(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 175 30               # erhs.c:175:30
	movsd	rsd+48(%r8,%r15), %xmm1 # xmm1 = mem[0],zero
	.loc	12 175 28 is_stmt 0     # erhs.c:175:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 176 30 is_stmt 1     # erhs.c:176:30
	movsd	rsd+88(%r8,%r15), %xmm3 # xmm3 = mem[0],zero
	.loc	12 176 28 is_stmt 0     # erhs.c:176:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 176 22               # erhs.c:176:22
	subsd	%xmm4, %xmm2
	.loc	12 177 30 is_stmt 1     # erhs.c:177:30
	movsd	rsd+128(%r8,%r15), %xmm4 # xmm4 = mem[0],zero
	.loc	12 177 22 is_stmt 0     # erhs.c:177:22
	addsd	%xmm4, %xmm2
	.loc	12 175 18 is_stmt 1     # erhs.c:175:18
	mulsd	%xmm5, %xmm2
	.loc	12 175 11 is_stmt 0     # erhs.c:175:11
	subsd	%xmm2, %xmm0
	.loc	12 174 26 is_stmt 1     # erhs.c:174:26
	movsd	%xmm0, frct+48(%r8,%r15)
	.loc	12 178 28               # erhs.c:178:28
	movsd	frct+88(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 179 28               # erhs.c:179:28
	mulsd	%xmm7, %xmm1
	.loc	12 180 28               # erhs.c:180:28
	mulsd	%xmm8, %xmm3
	.loc	12 179 28               # erhs.c:179:28
	subsd	%xmm1, %xmm3
	.loc	12 181 28               # erhs.c:181:28
	mulsd	%xmm7, %xmm4
	.loc	12 181 22 is_stmt 0     # erhs.c:181:22
	subsd	%xmm4, %xmm3
	.loc	12 182 22 is_stmt 1     # erhs.c:182:22
	addsd	rsd+168(%r8,%r15), %xmm3
	.loc	12 179 18               # erhs.c:179:18
	mulsd	%xmm5, %xmm3
	.loc	12 179 11 is_stmt 0     # erhs.c:179:11
	subsd	%xmm3, %xmm0
	.loc	12 178 26 is_stmt 1     # erhs.c:178:26
	movsd	%xmm0, frct+88(%r8,%r15)
	.loc	12 174 28               # erhs.c:174:28
	movsd	frct+56(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 175 30               # erhs.c:175:30
	movsd	rsd+56(%r8,%r15), %xmm1 # xmm1 = mem[0],zero
	.loc	12 175 28 is_stmt 0     # erhs.c:175:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 176 30 is_stmt 1     # erhs.c:176:30
	movsd	rsd+96(%r8,%r15), %xmm3 # xmm3 = mem[0],zero
	.loc	12 176 28 is_stmt 0     # erhs.c:176:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 176 22               # erhs.c:176:22
	subsd	%xmm4, %xmm2
	.loc	12 177 30 is_stmt 1     # erhs.c:177:30
	movsd	rsd+136(%r8,%r15), %xmm4 # xmm4 = mem[0],zero
	.loc	12 177 22 is_stmt 0     # erhs.c:177:22
	addsd	%xmm4, %xmm2
	.loc	12 175 18 is_stmt 1     # erhs.c:175:18
	mulsd	%xmm5, %xmm2
	.loc	12 175 11 is_stmt 0     # erhs.c:175:11
	subsd	%xmm2, %xmm0
	.loc	12 174 26 is_stmt 1     # erhs.c:174:26
	movsd	%xmm0, frct+56(%r8,%r15)
	.loc	12 178 28               # erhs.c:178:28
	movsd	frct+96(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 179 28               # erhs.c:179:28
	mulsd	%xmm7, %xmm1
	.loc	12 180 28               # erhs.c:180:28
	mulsd	%xmm8, %xmm3
	.loc	12 179 28               # erhs.c:179:28
	subsd	%xmm1, %xmm3
	.loc	12 181 28               # erhs.c:181:28
	mulsd	%xmm7, %xmm4
	.loc	12 181 22 is_stmt 0     # erhs.c:181:22
	subsd	%xmm4, %xmm3
	.loc	12 182 22 is_stmt 1     # erhs.c:182:22
	addsd	rsd+176(%r8,%r15), %xmm3
	.loc	12 179 18               # erhs.c:179:18
	mulsd	%xmm5, %xmm3
	.loc	12 179 11 is_stmt 0     # erhs.c:179:11
	subsd	%xmm3, %xmm0
	.loc	12 178 26 is_stmt 1     # erhs.c:178:26
	movsd	%xmm0, frct+96(%r8,%r15)
	.loc	12 174 28               # erhs.c:174:28
	movsd	frct+64(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 175 30               # erhs.c:175:30
	movsd	rsd+64(%r8,%r15), %xmm1 # xmm1 = mem[0],zero
	.loc	12 175 28 is_stmt 0     # erhs.c:175:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 176 30 is_stmt 1     # erhs.c:176:30
	movsd	rsd+104(%r8,%r15), %xmm3 # xmm3 = mem[0],zero
	.loc	12 176 28 is_stmt 0     # erhs.c:176:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 176 22               # erhs.c:176:22
	subsd	%xmm4, %xmm2
	.loc	12 177 30 is_stmt 1     # erhs.c:177:30
	movsd	rsd+144(%r8,%r15), %xmm4 # xmm4 = mem[0],zero
	.loc	12 177 22 is_stmt 0     # erhs.c:177:22
	addsd	%xmm4, %xmm2
	.loc	12 175 18 is_stmt 1     # erhs.c:175:18
	mulsd	%xmm5, %xmm2
	.loc	12 175 11 is_stmt 0     # erhs.c:175:11
	subsd	%xmm2, %xmm0
	.loc	12 174 26 is_stmt 1     # erhs.c:174:26
	movsd	%xmm0, frct+64(%r8,%r15)
	.loc	12 178 28               # erhs.c:178:28
	movsd	frct+104(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 179 28               # erhs.c:179:28
	mulsd	%xmm7, %xmm1
	.loc	12 180 28               # erhs.c:180:28
	mulsd	%xmm8, %xmm3
	.loc	12 179 28               # erhs.c:179:28
	subsd	%xmm1, %xmm3
	.loc	12 181 28               # erhs.c:181:28
	mulsd	%xmm7, %xmm4
	.loc	12 181 22 is_stmt 0     # erhs.c:181:22
	subsd	%xmm4, %xmm3
	.loc	12 182 22 is_stmt 1     # erhs.c:182:22
	addsd	rsd+184(%r8,%r15), %xmm3
	.loc	12 179 18               # erhs.c:179:18
	mulsd	%xmm5, %xmm3
	.loc	12 179 11 is_stmt 0     # erhs.c:179:11
	subsd	%xmm3, %xmm0
	.loc	12 178 26 is_stmt 1     # erhs.c:178:26
	movsd	%xmm0, frct+104(%r8,%r15)
	.loc	12 174 28               # erhs.c:174:28
	movsd	frct+72(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 175 30               # erhs.c:175:30
	movsd	rsd+72(%r8,%r15), %xmm1 # xmm1 = mem[0],zero
	.loc	12 175 28 is_stmt 0     # erhs.c:175:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 176 30 is_stmt 1     # erhs.c:176:30
	movsd	rsd+112(%r8,%r15), %xmm3 # xmm3 = mem[0],zero
	.loc	12 176 28 is_stmt 0     # erhs.c:176:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 176 22               # erhs.c:176:22
	subsd	%xmm4, %xmm2
	.loc	12 177 30 is_stmt 1     # erhs.c:177:30
	movsd	rsd+152(%r8,%r15), %xmm4 # xmm4 = mem[0],zero
	.loc	12 177 22 is_stmt 0     # erhs.c:177:22
	addsd	%xmm4, %xmm2
	.loc	12 175 18 is_stmt 1     # erhs.c:175:18
	mulsd	%xmm5, %xmm2
	.loc	12 175 11 is_stmt 0     # erhs.c:175:11
	subsd	%xmm2, %xmm0
	.loc	12 174 26 is_stmt 1     # erhs.c:174:26
	movsd	%xmm0, frct+72(%r8,%r15)
	.loc	12 178 28               # erhs.c:178:28
	movsd	frct+112(%r8,%r15), %xmm0 # xmm0 = mem[0],zero
	.loc	12 179 28               # erhs.c:179:28
	mulsd	%xmm7, %xmm1
	.loc	12 180 28               # erhs.c:180:28
	mulsd	%xmm8, %xmm3
	.loc	12 179 28               # erhs.c:179:28
	subsd	%xmm1, %xmm3
	.loc	12 181 28               # erhs.c:181:28
	mulsd	%xmm7, %xmm4
	.loc	12 181 22 is_stmt 0     # erhs.c:181:22
	subsd	%xmm4, %xmm3
	.loc	12 182 22 is_stmt 1     # erhs.c:182:22
	addsd	rsd+192(%r8,%r15), %xmm3
	.loc	12 179 18               # erhs.c:179:18
	mulsd	%xmm5, %xmm3
	.loc	12 179 11 is_stmt 0     # erhs.c:179:11
	subsd	%xmm3, %xmm0
	#DEBUG_VALUE: erhs:m <- 0
	.loc	12 178 26 is_stmt 1     # erhs.c:178:26
	movsd	%xmm0, frct+112(%r8,%r15)
	movapd	448(%rsp), %xmm11       # 16-byte Reload
.Ltmp241:
	.loc	12 189 29               # erhs.c:189:29
	movapd	.LCPI7_12(%rip), %xmm15 # xmm15 = [4.000000e+00,4.000000e+00]
	.loc	12 190 29               # erhs.c:190:29
	movapd	.LCPI7_13(%rip), %xmm14 # xmm14 = [6.000000e+00,6.000000e+00]
	movapd	%xmm14, %xmm2
	jle	.LBB7_28
# BB#26:                                # %for.cond858.preheader.lr.ph
                                        #   in Loop: Header=BB7_15 Depth=2
	.loc	12 188 31               # erhs.c:188:31
	movsd	rsd+48(%r8,%r15), %xmm12 # xmm12 = mem[0],zero
	.loc	12 189 31               # erhs.c:189:31
	movsd	rsd+88(%r8,%r15), %xmm8 # xmm8 = mem[0],zero
	.loc	12 190 31               # erhs.c:190:31
	movupd	rsd+120(%r8,%r15), %xmm4
	.loc	12 191 31               # erhs.c:191:31
	movupd	rsd+160(%r8,%r15), %xmm9
	.loc	12 188 31               # erhs.c:188:31
	movupd	rsd+56(%r8,%r15), %xmm5
	.loc	12 189 31               # erhs.c:189:31
	movupd	rsd+96(%r8,%r15), %xmm14
	.loc	12 190 31               # erhs.c:190:31
	movupd	rsd+136(%r8,%r15), %xmm13
	.loc	12 191 31               # erhs.c:191:31
	movupd	rsd+176(%r8,%r15), %xmm10
	.loc	12 188 31               # erhs.c:188:31
	movsd	rsd+72(%r8,%r15), %xmm1 # xmm1 = mem[0],zero
	.loc	12 189 31               # erhs.c:189:31
	movsd	rsd+112(%r8,%r15), %xmm7 # xmm7 = mem[0],zero
	movq	(%rsp), %rcx            # 8-byte Reload
	movl	$3, %edi
	.p2align	4, 0x90
.LBB7_27:                               # %for.cond858.preheader
                                        #   Parent Loop BB7_14 Depth=1
                                        #     Parent Loop BB7_15 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 189 23 is_stmt 0     # erhs.c:189:23
	movsd	rsd+169040(%rcx), %xmm3 # xmm3 = mem[0],zero
	unpcklpd	%xmm12, %xmm3   # xmm3 = xmm3[0],xmm12[0]
	.loc	12 189 31               # erhs.c:189:31
	movapd	%xmm8, %xmm12
	movapd	%xmm7, %xmm6
	.loc	12 187 30 is_stmt 1     # erhs.c:187:30
	movupd	frct+169120(%rcx), %xmm7
	.loc	12 189 29               # erhs.c:189:29
	movsd	rsd+169080(%rcx), %xmm0 # xmm0 = mem[0],zero
	unpcklpd	%xmm12, %xmm0   # xmm0 = xmm0[0],xmm12[0]
	mulpd	%xmm15, %xmm0
	.loc	12 189 23 is_stmt 0     # erhs.c:189:23
	subpd	%xmm0, %xmm3
	.loc	12 190 29 is_stmt 1     # erhs.c:190:29
	movapd	%xmm4, %xmm0
	mulpd	%xmm2, %xmm0
	.loc	12 190 23 is_stmt 0     # erhs.c:190:23
	addpd	%xmm3, %xmm0
	.loc	12 191 29 is_stmt 1     # erhs.c:191:29
	movapd	%xmm9, %xmm3
	mulpd	%xmm15, %xmm3
	.loc	12 191 23 is_stmt 0     # erhs.c:191:23
	subpd	%xmm3, %xmm0
	.loc	12 192 31 is_stmt 1     # erhs.c:192:31
	movupd	rsd+169200(%rcx), %xmm2
	.loc	12 192 23 is_stmt 0     # erhs.c:192:23
	addpd	%xmm2, %xmm0
	.loc	12 188 20 is_stmt 1     # erhs.c:188:20
	mulpd	%xmm11, %xmm0
	.loc	12 188 13 is_stmt 0     # erhs.c:188:13
	subpd	%xmm0, %xmm7
	.loc	12 187 28 is_stmt 1     # erhs.c:187:28
	movupd	%xmm7, frct+169120(%rcx)
	.loc	12 187 30 is_stmt 0     # erhs.c:187:30
	movupd	frct+169136(%rcx), %xmm0
	.loc	12 189 29 is_stmt 1     # erhs.c:189:29
	movapd	%xmm14, %xmm3
	mulpd	%xmm15, %xmm3
	.loc	12 189 23 is_stmt 0     # erhs.c:189:23
	subpd	%xmm3, %xmm5
	.loc	12 190 29 is_stmt 1     # erhs.c:190:29
	movapd	%xmm13, %xmm7
	mulpd	.LCPI7_13(%rip), %xmm7
	.loc	12 190 23 is_stmt 0     # erhs.c:190:23
	addpd	%xmm5, %xmm7
	.loc	12 191 29 is_stmt 1     # erhs.c:191:29
	movapd	%xmm10, %xmm3
	mulpd	%xmm15, %xmm3
	.loc	12 191 23 is_stmt 0     # erhs.c:191:23
	subpd	%xmm3, %xmm7
	.loc	12 192 31 is_stmt 1     # erhs.c:192:31
	movupd	rsd+169216(%rcx), %xmm3
	.loc	12 192 23 is_stmt 0     # erhs.c:192:23
	addpd	%xmm3, %xmm7
	.loc	12 188 20 is_stmt 1     # erhs.c:188:20
	mulpd	%xmm11, %xmm7
	.loc	12 188 13 is_stmt 0     # erhs.c:188:13
	subpd	%xmm7, %xmm0
	.loc	12 187 28 is_stmt 1     # erhs.c:187:28
	movupd	%xmm0, frct+169136(%rcx)
	.loc	12 189 29               # erhs.c:189:29
	movapd	%xmm6, %xmm0
.Ltmp242:
	.loc	12 176 28               # erhs.c:176:28
	movsd	.LCPI7_10(%rip), %xmm5  # xmm5 = mem[0],zero
.Ltmp243:
	.loc	12 189 29               # erhs.c:189:29
	mulsd	%xmm5, %xmm0
	.loc	12 189 23 is_stmt 0     # erhs.c:189:23
	subsd	%xmm0, %xmm1
	.loc	12 190 31 is_stmt 1     # erhs.c:190:31
	movsd	rsd+169152(%rcx), %xmm7 # xmm7 = mem[0],zero
	.loc	12 190 29 is_stmt 0     # erhs.c:190:29
	movapd	%xmm7, %xmm0
	mulsd	.LCPI7_11(%rip), %xmm0
	.loc	12 190 23               # erhs.c:190:23
	addsd	%xmm1, %xmm0
	movsd	rsd+169192(%rcx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 191 29 is_stmt 1     # erhs.c:191:29
	mulsd	%xmm5, %xmm1
	.loc	12 191 23 is_stmt 0     # erhs.c:191:23
	subsd	%xmm1, %xmm0
	.loc	12 187 30 is_stmt 1     # erhs.c:187:30
	movsd	frct+169152(%rcx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 192 23               # erhs.c:192:23
	addsd	rsd+169232(%rcx), %xmm0
	.loc	12 188 20               # erhs.c:188:20
	mulsd	32(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	12 188 13 is_stmt 0     # erhs.c:188:13
	subsd	%xmm0, %xmm1
	.loc	12 187 28 is_stmt 1     # erhs.c:187:28
	movsd	%xmm1, frct+169152(%rcx)
.Ltmp244:
	#DEBUG_VALUE: erhs:m <- 0
	.loc	12 185 7 discriminator 1 # erhs.c:185:7
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
.Ltmp245:
	.loc	12 189 31               # erhs.c:189:31
	movapd	%xmm4, %xmm8
	.loc	12 190 31               # erhs.c:190:31
	movapd	%xmm9, %xmm4
	.loc	12 188 31               # erhs.c:188:31
	movapd	%xmm14, %xmm5
	.loc	12 189 31               # erhs.c:189:31
	movapd	%xmm13, %xmm14
	.loc	12 190 31               # erhs.c:190:31
	movapd	%xmm10, %xmm13
.Ltmp246:
	.loc	12 185 7 discriminator 1 # erhs.c:185:7
	incq	%rdi
	.loc	12 185 21 is_stmt 0 discriminator 1 # erhs.c:185:21
	addq	$40, %rcx
	cmpq	%r12, %rdi
.Ltmp247:
	.loc	12 188 31 is_stmt 1     # erhs.c:188:31
	movapd	%xmm6, %xmm1
	.loc	12 191 31               # erhs.c:191:31
	movapd	%xmm2, %xmm9
	.loc	12 190 29               # erhs.c:190:29
	movapd	.LCPI7_13(%rip), %xmm2  # xmm2 = [6.000000e+00,6.000000e+00]
	.loc	12 191 31               # erhs.c:191:31
	movapd	%xmm3, %xmm10
.Ltmp248:
	.loc	12 185 7 discriminator 1 # erhs.c:185:7
	jl	.LBB7_27
.Ltmp249:
.LBB7_28:                               # %for.body940
                                        #   in Loop: Header=BB7_15 Depth=2
	.loc	12 197 31               # erhs.c:197:31
	leaq	frct(%r8,%r15), %r10
	.loc	12 198 29               # erhs.c:198:29
	leaq	rsd(%r8,%r15), %rcx
	addq	%r15, %r8
	movq	256(%rsp), %rdx         # 8-byte Reload
	leaq	(%rdx,%rdx,4), %rdi
	movsd	rsd(%r8,%rdi,8), %xmm11 # xmm11 = mem[0],zero
	movsd	rsd+8(%r8,%rdi,8), %xmm12 # xmm12 = mem[0],zero
	movsd	rsd+16(%r8,%rdi,8), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, 144(%rsp)        # 8-byte Spill
	movsd	rsd+24(%r8,%rdi,8), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, 128(%rsp)        # 8-byte Spill
	movsd	rsd+32(%r8,%rdi,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 199 29               # erhs.c:199:29
	movsd	%xmm0, 112(%rsp)        # 8-byte Spill
	movq	240(%rsp), %rdx         # 8-byte Reload
	leaq	(%rdx,%rdx,4), %rdx
	movsd	rsd(%r8,%rdx,8), %xmm1  # xmm1 = mem[0],zero
	movsd	rsd+8(%r8,%rdx,8), %xmm8 # xmm8 = mem[0],zero
	movsd	rsd+16(%r8,%rdx,8), %xmm10 # xmm10 = mem[0],zero
	movsd	rsd+24(%r8,%rdx,8), %xmm13 # xmm13 = mem[0],zero
	movsd	rsd+32(%r8,%rdx,8), %xmm15 # xmm15 = mem[0],zero
	.loc	12 197 31               # erhs.c:197:31
	leaq	(,%r12,8), %rdx
	leaq	(%rdx,%rdx,4), %rdi
	movsd	(%r10,%rdi), %xmm7      # xmm7 = mem[0],zero
	.loc	12 199 27               # erhs.c:199:27
	movapd	%xmm1, %xmm6
.Ltmp250:
	.loc	12 176 28               # erhs.c:176:28
	movsd	.LCPI7_10(%rip), %xmm4  # xmm4 = mem[0],zero
.Ltmp251:
	.loc	12 199 27               # erhs.c:199:27
	mulsd	%xmm4, %xmm6
	.loc	12 199 21 is_stmt 0     # erhs.c:199:21
	subsd	%xmm6, %xmm11
	.loc	12 200 29 is_stmt 1     # erhs.c:200:29
	movsd	(%rcx,%rdi), %xmm3      # xmm3 = mem[0],zero
	.loc	12 200 27 is_stmt 0     # erhs.c:200:27
	movapd	%xmm3, %xmm6
.Ltmp252:
	.loc	12 180 28 is_stmt 1     # erhs.c:180:28
	movsd	.LCPI7_11(%rip), %xmm0  # xmm0 = mem[0],zero
.Ltmp253:
	.loc	12 200 27               # erhs.c:200:27
	mulsd	%xmm0, %xmm6
	movapd	%xmm0, %xmm2
	.loc	12 200 21 is_stmt 0     # erhs.c:200:21
	addsd	%xmm11, %xmm6
	.loc	12 201 29 is_stmt 1     # erhs.c:201:29
	movq	432(%rsp), %rdx         # 8-byte Reload
	leaq	(%rdx,%rdx,4), %rsi
	movsd	(%rcx,%rsi), %xmm11     # xmm11 = mem[0],zero
	.loc	12 201 27 is_stmt 0     # erhs.c:201:27
	movapd	%xmm11, %xmm0
	mulsd	%xmm4, %xmm0
	.loc	12 201 21               # erhs.c:201:21
	subsd	%xmm0, %xmm6
	movapd	32(%rsp), %xmm9         # 16-byte Reload
	.loc	12 198 18 is_stmt 1     # erhs.c:198:18
	mulsd	%xmm9, %xmm6
	.loc	12 198 11 is_stmt 0     # erhs.c:198:11
	subsd	%xmm6, %xmm7
	.loc	12 197 29 is_stmt 1     # erhs.c:197:29
	movsd	%xmm7, (%r10,%rdi)
	.loc	12 202 31               # erhs.c:202:31
	movsd	(%r10,%rsi), %xmm0      # xmm0 = mem[0],zero
	.loc	12 204 27               # erhs.c:204:27
	mulsd	%xmm4, %xmm3
	.loc	12 204 21 is_stmt 0     # erhs.c:204:21
	subsd	%xmm3, %xmm1
.Ltmp254:
	.loc	12 175 28 is_stmt 1     # erhs.c:175:28
	movsd	.LCPI7_9(%rip), %xmm5   # xmm5 = mem[0],zero
.Ltmp255:
	.loc	12 205 27               # erhs.c:205:27
	mulsd	%xmm5, %xmm11
	.loc	12 205 21 is_stmt 0     # erhs.c:205:21
	addsd	%xmm1, %xmm11
	.loc	12 203 18 is_stmt 1     # erhs.c:203:18
	mulsd	%xmm9, %xmm11
	.loc	12 203 11 is_stmt 0     # erhs.c:203:11
	subsd	%xmm11, %xmm0
	.loc	12 202 29 is_stmt 1     # erhs.c:202:29
	movsd	%xmm0, (%r10,%rsi)
	.loc	12 197 31               # erhs.c:197:31
	movsd	8(%r10,%rdi), %xmm0     # xmm0 = mem[0],zero
	.loc	12 199 27               # erhs.c:199:27
	movapd	%xmm8, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	12 199 21 is_stmt 0     # erhs.c:199:21
	subsd	%xmm1, %xmm12
	.loc	12 200 29 is_stmt 1     # erhs.c:200:29
	movsd	8(%rcx,%rdi), %xmm1     # xmm1 = mem[0],zero
	.loc	12 200 27 is_stmt 0     # erhs.c:200:27
	movapd	%xmm1, %xmm3
	mulsd	%xmm2, %xmm3
	.loc	12 200 21               # erhs.c:200:21
	addsd	%xmm12, %xmm3
	.loc	12 201 29 is_stmt 1     # erhs.c:201:29
	movsd	8(%rcx,%rsi), %xmm7     # xmm7 = mem[0],zero
	.loc	12 201 27 is_stmt 0     # erhs.c:201:27
	movapd	%xmm7, %xmm6
	mulsd	%xmm4, %xmm6
	.loc	12 201 21               # erhs.c:201:21
	subsd	%xmm6, %xmm3
	.loc	12 198 18 is_stmt 1     # erhs.c:198:18
	mulsd	%xmm9, %xmm3
	.loc	12 198 11 is_stmt 0     # erhs.c:198:11
	subsd	%xmm3, %xmm0
	.loc	12 200 29 is_stmt 1     # erhs.c:200:29
	movsd	16(%rcx,%rdi), %xmm12   # xmm12 = mem[0],zero
	.loc	12 201 29               # erhs.c:201:29
	movsd	16(%rcx,%rsi), %xmm3    # xmm3 = mem[0],zero
	.loc	12 200 29               # erhs.c:200:29
	movsd	24(%rcx,%rdi), %xmm2    # xmm2 = mem[0],zero
	.loc	12 201 29               # erhs.c:201:29
	movsd	24(%rcx,%rsi), %xmm14   # xmm14 = mem[0],zero
	.loc	12 200 29               # erhs.c:200:29
	movsd	32(%rcx,%rdi), %xmm11   # xmm11 = mem[0],zero
	.loc	12 201 29               # erhs.c:201:29
	movsd	32(%rcx,%rsi), %xmm6    # xmm6 = mem[0],zero
	.loc	12 197 29               # erhs.c:197:29
	movsd	%xmm0, 8(%r10,%rdi)
	.loc	12 204 27               # erhs.c:204:27
	mulsd	%xmm4, %xmm1
	.loc	12 204 21 is_stmt 0     # erhs.c:204:21
	subsd	%xmm1, %xmm8
	.loc	12 205 27 is_stmt 1     # erhs.c:205:27
	mulsd	%xmm5, %xmm7
	.loc	12 205 21 is_stmt 0     # erhs.c:205:21
	addsd	%xmm8, %xmm7
	.loc	12 202 31 is_stmt 1     # erhs.c:202:31
	movsd	8(%r10,%rsi), %xmm0     # xmm0 = mem[0],zero
	.loc	12 203 18               # erhs.c:203:18
	mulsd	%xmm9, %xmm7
	.loc	12 203 11 is_stmt 0     # erhs.c:203:11
	subsd	%xmm7, %xmm0
	.loc	12 202 29 is_stmt 1     # erhs.c:202:29
	movsd	%xmm0, 8(%r10,%rsi)
	.loc	12 199 27               # erhs.c:199:27
	movapd	%xmm10, %xmm0
	mulsd	%xmm4, %xmm0
	movsd	144(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	12 199 21 is_stmt 0     # erhs.c:199:21
	subsd	%xmm0, %xmm1
	.loc	12 200 27 is_stmt 1     # erhs.c:200:27
	movapd	%xmm12, %xmm0
.Ltmp256:
	.loc	12 180 28               # erhs.c:180:28
	movsd	.LCPI7_11(%rip), %xmm7  # xmm7 = mem[0],zero
.Ltmp257:
	.loc	12 200 27               # erhs.c:200:27
	mulsd	%xmm7, %xmm0
	.loc	12 200 21 is_stmt 0     # erhs.c:200:21
	addsd	%xmm1, %xmm0
	.loc	12 201 27 is_stmt 1     # erhs.c:201:27
	movapd	%xmm3, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	12 201 21 is_stmt 0     # erhs.c:201:21
	subsd	%xmm1, %xmm0
	.loc	12 197 31 is_stmt 1     # erhs.c:197:31
	movsd	16(%r10,%rdi), %xmm1    # xmm1 = mem[0],zero
	.loc	12 198 18               # erhs.c:198:18
	mulsd	%xmm9, %xmm0
	.loc	12 198 11 is_stmt 0     # erhs.c:198:11
	subsd	%xmm0, %xmm1
	.loc	12 197 29 is_stmt 1     # erhs.c:197:29
	movsd	%xmm1, 16(%r10,%rdi)
	.loc	12 204 27               # erhs.c:204:27
	mulsd	%xmm4, %xmm12
	.loc	12 204 21 is_stmt 0     # erhs.c:204:21
	subsd	%xmm12, %xmm10
	.loc	12 205 27 is_stmt 1     # erhs.c:205:27
	mulsd	%xmm5, %xmm3
	.loc	12 205 21 is_stmt 0     # erhs.c:205:21
	addsd	%xmm10, %xmm3
	.loc	12 202 31 is_stmt 1     # erhs.c:202:31
	movsd	16(%r10,%rsi), %xmm0    # xmm0 = mem[0],zero
	.loc	12 203 18               # erhs.c:203:18
	mulsd	%xmm9, %xmm3
	.loc	12 203 11 is_stmt 0     # erhs.c:203:11
	subsd	%xmm3, %xmm0
	.loc	12 202 29 is_stmt 1     # erhs.c:202:29
	movsd	%xmm0, 16(%r10,%rsi)
	.loc	12 199 27               # erhs.c:199:27
	movapd	%xmm13, %xmm0
	mulsd	%xmm4, %xmm0
	movsd	128(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	12 199 21 is_stmt 0     # erhs.c:199:21
	subsd	%xmm0, %xmm1
	.loc	12 200 27 is_stmt 1     # erhs.c:200:27
	movapd	%xmm2, %xmm0
	mulsd	%xmm7, %xmm0
	.loc	12 200 21 is_stmt 0     # erhs.c:200:21
	addsd	%xmm1, %xmm0
	.loc	12 201 27 is_stmt 1     # erhs.c:201:27
	movapd	%xmm14, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	12 201 21 is_stmt 0     # erhs.c:201:21
	subsd	%xmm1, %xmm0
	.loc	12 197 31 is_stmt 1     # erhs.c:197:31
	movsd	24(%r10,%rdi), %xmm1    # xmm1 = mem[0],zero
	.loc	12 198 18               # erhs.c:198:18
	mulsd	%xmm9, %xmm0
	.loc	12 198 11 is_stmt 0     # erhs.c:198:11
	subsd	%xmm0, %xmm1
	.loc	12 197 29 is_stmt 1     # erhs.c:197:29
	movsd	%xmm1, 24(%r10,%rdi)
	.loc	12 204 27               # erhs.c:204:27
	mulsd	%xmm4, %xmm2
	.loc	12 204 21 is_stmt 0     # erhs.c:204:21
	subsd	%xmm2, %xmm13
	.loc	12 205 27 is_stmt 1     # erhs.c:205:27
	mulsd	%xmm5, %xmm14
	.loc	12 205 21 is_stmt 0     # erhs.c:205:21
	addsd	%xmm13, %xmm14
	.loc	12 202 31 is_stmt 1     # erhs.c:202:31
	movsd	24(%r10,%rsi), %xmm0    # xmm0 = mem[0],zero
	.loc	12 203 18               # erhs.c:203:18
	mulsd	%xmm9, %xmm14
	.loc	12 203 11 is_stmt 0     # erhs.c:203:11
	subsd	%xmm14, %xmm0
	.loc	12 202 29 is_stmt 1     # erhs.c:202:29
	movsd	%xmm0, 24(%r10,%rsi)
	.loc	12 197 31               # erhs.c:197:31
	movsd	32(%r10,%rdi), %xmm0    # xmm0 = mem[0],zero
	.loc	12 199 27               # erhs.c:199:27
	movapd	%xmm15, %xmm1
	mulsd	%xmm4, %xmm1
	movsd	112(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	12 199 21 is_stmt 0     # erhs.c:199:21
	subsd	%xmm1, %xmm2
	.loc	12 200 27 is_stmt 1     # erhs.c:200:27
	movapd	%xmm11, %xmm1
	mulsd	%xmm7, %xmm1
	.loc	12 200 21 is_stmt 0     # erhs.c:200:21
	addsd	%xmm2, %xmm1
	.loc	12 201 27 is_stmt 1     # erhs.c:201:27
	movapd	%xmm6, %xmm2
	mulsd	%xmm4, %xmm2
	.loc	12 201 21 is_stmt 0     # erhs.c:201:21
	subsd	%xmm2, %xmm1
	.loc	12 198 18 is_stmt 1     # erhs.c:198:18
	mulsd	%xmm9, %xmm1
	.loc	12 198 11 is_stmt 0     # erhs.c:198:11
	subsd	%xmm1, %xmm0
	.loc	12 197 29 is_stmt 1     # erhs.c:197:29
	movsd	%xmm0, 32(%r10,%rdi)
	.loc	12 202 31               # erhs.c:202:31
	movsd	32(%r10,%rsi), %xmm0    # xmm0 = mem[0],zero
	.loc	12 204 27               # erhs.c:204:27
	mulsd	%xmm4, %xmm11
	.loc	12 204 21 is_stmt 0     # erhs.c:204:21
	subsd	%xmm11, %xmm15
	.loc	12 205 27 is_stmt 1     # erhs.c:205:27
	mulsd	%xmm5, %xmm6
	.loc	12 205 21 is_stmt 0     # erhs.c:205:21
	addsd	%xmm15, %xmm6
	.loc	12 203 18 is_stmt 1     # erhs.c:203:18
	mulsd	%xmm9, %xmm6
	.loc	12 203 11 is_stmt 0     # erhs.c:203:11
	subsd	%xmm6, %xmm0
	.loc	12 202 29 is_stmt 1     # erhs.c:202:29
	movsd	%xmm0, 32(%r10,%rsi)
.Ltmp258:
	.loc	12 97 5 discriminator 1 # erhs.c:97:5
	incq	%r14
	movq	96(%rsp), %rax          # 8-byte Reload
	addq	$2600, %rax             # imm = 0xA28
	movq	8(%rsp), %r8            # 8-byte Reload
	addq	$2600, %r8              # imm = 0xA28
	movq	64(%rsp), %r15          # 8-byte Reload
	addq	$2600, %r15             # imm = 0xA28
	addq	$2600, (%rsp)           # 8-byte Folded Spill
                                        # imm = 0xA28
	.loc	12 97 21 is_stmt 0 discriminator 1 # erhs.c:97:21
	cmpq	16(%rsp), %r14          # 8-byte Folded Reload
	movq	24(%rsp), %r10          # 8-byte Reload
	movapd	304(%rsp), %xmm10       # 16-byte Reload
	movaps	288(%rsp), %xmm11       # 16-byte Reload
	movsd	.LCPI7_5(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp259:
	.loc	12 105 49 is_stmt 1     # erhs.c:105:49
	movsd	.LCPI7_6(%rip), %xmm9   # xmm9 = mem[0],zero
	movsd	.LCPI7_7(%rip), %xmm12  # xmm12 = mem[0],zero
	jl	.LBB7_15
.Ltmp260:
.LBB7_29:                               # %for.inc1060
                                        #   in Loop: Header=BB7_14 Depth=1
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, %rdx
	.loc	12 96 3 discriminator 1 # erhs.c:96:3
	incq	%rdx
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	movq	192(%rsp), %rdi         # 8-byte Reload
	addq	$169000, %rdi           # imm = 0x29428
	movq	184(%rsp), %rcx         # 8-byte Reload
	addq	$169000, %rcx           # imm = 0x29428
	movq	176(%rsp), %rsi         # 8-byte Reload
	addq	$169000, %rsi           # imm = 0x29428
	movq	200(%rsp), %r14         # 8-byte Reload
	addq	$169000, %r14           # imm = 0x29428
	.loc	12 96 17 is_stmt 0 discriminator 1 # erhs.c:96:17
	cmpq	160(%rsp), %rdx         # 8-byte Folded Reload
	jl	.LBB7_14
.Ltmp261:
# BB#30:                                # %for.cond1063.preheader.loopexit
	.loc	12 213 19 is_stmt 1 discriminator 1 # erhs.c:213:19
	movl	nz(%rip), %r15d
.LBB7_31:                               # %for.cond1063.preheader
	.loc	12 213 22 is_stmt 0 discriminator 1 # erhs.c:213:22
	decl	%r15d
	.loc	12 213 3 discriminator 1 # erhs.c:213:3
	cmpl	$2, %r15d
	jl	.LBB7_48
# BB#32:                                # %for.body1067.lr.ph
.Ltmp262:
	.loc	12 319 29 is_stmt 1     # erhs.c:319:29
	movslq	ny(%rip), %r14
.Ltmp263:
	.loc	12 213 3 discriminator 1 # erhs.c:213:3
	movslq	jst(%rip), %r10
.Ltmp264:
	.loc	12 293 13               # erhs.c:293:13
	movq	%r10, 432(%rsp)         # 8-byte Spill
	movsd	dssp(%rip), %xmm5       # xmm5 = mem[0],zero
.Ltmp265:
	.loc	12 303 26 discriminator 1 # erhs.c:303:26
	movapd	%xmm5, 32(%rsp)         # 16-byte Spill
	leaq	-3(%r14), %r13
.Ltmp266:
	.loc	12 316 38               # erhs.c:316:38
	leaq	-5(%r14), %r9
	.loc	12 317 38               # erhs.c:317:38
	leaq	-4(%r14), %rsi
	.loc	12 319 38               # erhs.c:319:38
	leaq	-2(%r14), %r8
.Ltmp267:
	.loc	12 263 19               # erhs.c:263:19
	movsd	ty1(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	12 267 13               # erhs.c:267:13
	movsd	ty3(%rip), %xmm2        # xmm2 = mem[0],zero
	movapd	%xmm2, 400(%rsp)        # 16-byte Spill
	movsd	.LCPI7_0(%rip), %xmm3   # xmm3 = mem[0],zero
	.loc	12 267 17 is_stmt 0     # erhs.c:267:17
	mulsd	%xmm2, %xmm3
	.loc	12 263 17 is_stmt 1     # erhs.c:263:17
	movapd	%xmm3, 384(%rsp)        # 16-byte Spill
	movsd	dy1(%rip), %xmm4        # xmm4 = mem[0],zero
	movhpd	dy2(%rip), %xmm4        # xmm4 = xmm4[0],mem[0]
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm0, %xmm4
	movapd	%xmm4, 368(%rsp)        # 16-byte Spill
	.loc	12 273 17               # erhs.c:273:17
	movsd	dy3(%rip), %xmm4        # xmm4 = mem[0],zero
	movhpd	dy4(%rip), %xmm4        # xmm4 = xmm4[0],mem[0]
	mulpd	%xmm0, %xmm4
	movapd	%xmm4, 352(%rsp)        # 16-byte Spill
	.loc	12 283 17               # erhs.c:283:17
	mulsd	dy5(%rip), %xmm1
	movapd	%xmm1, 416(%rsp)        # 16-byte Spill
	movsd	.LCPI7_1(%rip), %xmm0   # xmm0 = mem[0],zero
.Ltmp268:
	.loc	12 251 32               # erhs.c:251:32
	mulsd	%xmm2, %xmm0
	movsd	.LCPI7_2(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	12 254 11               # erhs.c:254:11
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 336(%rsp)        # 8-byte Spill
	movsd	.LCPI7_3(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	12 257 11               # erhs.c:257:11
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 56(%rsp)         # 8-byte Spill
	movsd	.LCPI7_4(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	12 258 21               # erhs.c:258:21
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 48(%rsp)         # 8-byte Spill
.Ltmp269:
	.loc	12 231 15               # erhs.c:231:15
	movsd	ty2(%rip), %xmm10       # xmm10 = mem[0],zero
.Ltmp270:
	.loc	12 213 3 discriminator 1 # erhs.c:213:3
	movapd	%xmm10, 320(%rsp)       # 16-byte Spill
	movslq	ist(%rip), %rbx
	movq	%rbx, 480(%rsp)         # 8-byte Spill
	movslq	%r15d, %rbp
.Ltmp271:
	.loc	12 267 46               # erhs.c:267:46
	movq	%rbp, 472(%rsp)         # 8-byte Spill
	leaq	(,%r10,8), %rbp
	leaq	flux+8(%rbp,%rbp,4), %rcx
	.loc	12 272 46               # erhs.c:272:46
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	leaq	flux+16(%rbp,%rbp,4), %rcx
	.loc	12 282 46               # erhs.c:282:46
	movq	%rcx, 216(%rsp)         # 8-byte Spill
	leaq	flux+32(%rbp,%rbp,4), %rcx
.Ltmp272:
	.loc	12 231 19               # erhs.c:231:19
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	movapd	%xmm10, %xmm11
	movlhps	%xmm11, %xmm11          # xmm11 = xmm11[0,0]
.Ltmp273:
	.loc	12 250 26               # erhs.c:250:26
	movaps	%xmm11, 304(%rsp)       # 16-byte Spill
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	movapd	%xmm2, 288(%rsp)        # 16-byte Spill
.Ltmp274:
	.loc	12 272 27               # erhs.c:272:27
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 272(%rsp)        # 16-byte Spill
.Ltmp275:
	.loc	12 306 20               # erhs.c:306:20
	movapd	%xmm5, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp276:
	.loc	12 213 3 discriminator 1 # erhs.c:213:3
	movaps	%xmm0, 448(%rsp)        # 16-byte Spill
	leaq	(,%rbx,8), %rbx
	leaq	rsd+169032(%rbx,%rbx,4), %r11
	leaq	(%rbx,%rbx,4), %r12
	leaq	flux+72(%rbp,%rbp,4), %rcx
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	leal	-1(%r10), %ebp
	movslq	%ebp, %rbp
	imulq	$2600, %rbp, %rbp       # imm = 0xA28
	leaq	rsd+169032(%rbp,%r12), %r15
	movsd	.LCPI7_5(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp277:
	.loc	12 223 49               # erhs.c:223:49
	movsd	.LCPI7_6(%rip), %xmm7   # xmm7 = mem[0],zero
.Ltmp278:
	.loc	12 316 29               # erhs.c:316:29
	imulq	$2600, %r9, %rcx        # imm = 0xA28
	.loc	12 317 29               # erhs.c:317:29
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	imulq	$2600, %rsi, %rcx       # imm = 0xA28
	.loc	12 319 29               # erhs.c:319:29
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	imulq	$2600, %r8, %rcx        # imm = 0xA28
.Ltmp279:
	.loc	12 213 3 discriminator 1 # erhs.c:213:3
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	movslq	jend(%rip), %r8
	movslq	iend(%rip), %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	imulq	$2600, %r10, %rsi       # imm = 0xA28
	movq	%rsi, 208(%rsp)         # 8-byte Spill
	leaq	frct+169032(%rsi,%r12), %rcx
	leaq	rsd+169032(%rsi,%r12), %rbx
	leaq	(%rsi,%r12), %rbp
	movl	$1, %esi
	movq	%rsi, (%rsp)            # 8-byte Spill
	movsd	.LCPI7_7(%rip), %xmm9   # xmm9 = mem[0],zero
	.p2align	4, 0x90
.LBB7_33:                               # %for.body1067
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_34 Depth 2
                                        #       Child Loop BB7_35 Depth 3
                                        #       Child Loop BB7_37 Depth 3
                                        #       Child Loop BB7_39 Depth 3
                                        #       Child Loop BB7_42 Depth 3
                                        #       Child Loop BB7_45 Depth 3
	movq	%rbp, 160(%rsp)         # 8-byte Spill
	movq	%rbx, 168(%rsp)         # 8-byte Spill
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	movq	%r15, 184(%rsp)         # 8-byte Spill
	movq	%r12, 192(%rsp)         # 8-byte Spill
	movq	%r11, 200(%rsp)         # 8-byte Spill
	movq	480(%rsp), %r9          # 8-byte Reload
.Ltmp280:
	.loc	12 214 5 discriminator 1 # erhs.c:214:5
	movq	256(%rsp), %rsi         # 8-byte Reload
	cmpl	%esi, %r9d
	movq	%r15, %rdi
	movq	%rbp, %r15
	movq	%rbx, %rdx
	movq	%r11, %rsi
	movq	%rcx, %rax
	movq	%rsi, %rcx
	jge	.LBB7_47
	.p2align	4, 0x90
.LBB7_34:                               # %for.cond1072.preheader
                                        #   Parent Loop BB7_33 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB7_35 Depth 3
                                        #       Child Loop BB7_37 Depth 3
                                        #       Child Loop BB7_39 Depth 3
                                        #       Child Loop BB7_42 Depth 3
                                        #       Child Loop BB7_45 Depth 3
.Ltmp281:
	.loc	12 215 7 discriminator 1 # erhs.c:215:7
	movq	%rcx, 96(%rsp)          # 8-byte Spill
	testl	%r14d, %r14d
	movl	$flux+24, %esi
	movl	$0, %ebp
	jle	.LBB7_36
	.p2align	4, 0x90
.LBB7_35:                               # %for.body1075
                                        #   Parent Loop BB7_33 Depth=1
                                        #     Parent Loop BB7_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp282:
	.loc	12 216 22               # erhs.c:216:22
	movq	-16(%rcx), %rbx
	.loc	12 216 20 is_stmt 0     # erhs.c:216:20
	movq	%rbx, -24(%rsi)
	.loc	12 217 33 is_stmt 1     # erhs.c:217:33
	movsd	-32(%rcx), %xmm1        # xmm1 = mem[0],zero
	.loc	12 218 23               # erhs.c:218:23
	movsd	-24(%rcx), %xmm2        # xmm2 = mem[0],zero
	.loc	12 217 15               # erhs.c:217:15
	movd	%rbx, %xmm3
	.loc	12 217 31 is_stmt 0     # erhs.c:217:31
	movapd	%xmm3, %xmm0
	divsd	%xmm1, %xmm0
.Ltmp283:
	#DEBUG_VALUE: erhs:u31 <- %XMM0
	.loc	12 218 39 is_stmt 1     # erhs.c:218:39
	movapd	%xmm2, %xmm4
	mulsd	%xmm4, %xmm4
	.loc	12 223 38               # erhs.c:223:38
	movapd	%xmm0, %xmm5
	mulsd	%xmm3, %xmm5
	.loc	12 219 39               # erhs.c:219:39
	mulsd	%xmm3, %xmm3
	.loc	12 219 21 is_stmt 0     # erhs.c:219:21
	addsd	%xmm4, %xmm3
	.loc	12 220 23 is_stmt 1     # erhs.c:220:23
	movsd	-8(%rcx), %xmm4         # xmm4 = mem[0],zero
	.loc	12 220 39 is_stmt 0     # erhs.c:220:39
	movapd	%xmm4, %xmm6
	mulsd	%xmm6, %xmm6
	.loc	12 220 21               # erhs.c:220:21
	addsd	%xmm3, %xmm6
	.loc	12 218 18 is_stmt 1     # erhs.c:218:18
	mulsd	%xmm8, %xmm6
	.loc	12 222 38               # erhs.c:222:38
	mulsd	%xmm0, %xmm2
	.loc	12 222 20 is_stmt 0     # erhs.c:222:20
	movsd	%xmm2, -16(%rsi)
	.loc	12 221 18 is_stmt 1     # erhs.c:221:18
	divsd	%xmm1, %xmm6
.Ltmp284:
	#DEBUG_VALUE: erhs:q <- %XMM6
	.loc	12 223 53               # erhs.c:223:53
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	.loc	12 223 69 is_stmt 0     # erhs.c:223:69
	movapd	%xmm1, %xmm2
	subsd	%xmm6, %xmm2
	.loc	12 223 49               # erhs.c:223:49
	mulsd	%xmm7, %xmm2
	.loc	12 223 44               # erhs.c:223:44
	addsd	%xmm5, %xmm2
	.loc	12 225 27 is_stmt 1     # erhs.c:225:27
	mulsd	%xmm9, %xmm1
	.loc	12 225 50 is_stmt 0     # erhs.c:225:50
	mulsd	%xmm7, %xmm6
.Ltmp285:
	.loc	12 225 45               # erhs.c:225:45
	subsd	%xmm6, %xmm1
	.loc	12 223 20 is_stmt 1     # erhs.c:223:20
	movsd	%xmm2, -8(%rsi)
	.loc	12 224 38               # erhs.c:224:38
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp286:
	unpcklpd	%xmm1, %xmm4    # xmm4 = xmm4[0],xmm1[0]
	mulpd	%xmm0, %xmm4
	.loc	12 224 20 is_stmt 0     # erhs.c:224:20
	movupd	%xmm4, (%rsi)
.Ltmp287:
	.loc	12 215 7 is_stmt 1 discriminator 1 # erhs.c:215:7
	incq	%rbp
	.loc	12 215 21 is_stmt 0 discriminator 1 # erhs.c:215:21
	addq	$40, %rsi
	addq	$2600, %rcx             # imm = 0xA28
	cmpq	%r14, %rbp
	.loc	12 215 7 discriminator 1 # erhs.c:215:7
	jl	.LBB7_35
.Ltmp288:
.LBB7_36:                               # %for.end1216
                                        #   in Loop: Header=BB7_34 Depth=2
	.loc	12 228 7 is_stmt 1 discriminator 1 # erhs.c:228:7
	cmpl	%r8d, %r10d
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	%rax, %rsi
	movq	%r10, %rbp
	movapd	400(%rsp), %xmm8        # 16-byte Reload
	movsd	336(%rsp), %xmm9        # 8-byte Reload
                                        # xmm9 = mem[0],zero
	movsd	56(%rsp), %xmm4         # 8-byte Reload
                                        # xmm4 = mem[0],zero
	movsd	48(%rsp), %xmm14        # 8-byte Reload
                                        # xmm14 = mem[0],zero
	jge	.LBB7_38
	.p2align	4, 0x90
.LBB7_37:                               # %for.cond1221.preheader
                                        #   Parent Loop BB7_33 Depth=1
                                        #     Parent Loop BB7_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	incq	%rbp
.Ltmp289:
	.loc	12 230 31               # erhs.c:230:31
	movupd	-32(%rsi), %xmm0
	.loc	12 231 23               # erhs.c:231:23
	movupd	-32(%rcx), %xmm1
	.loc	12 231 38 is_stmt 0     # erhs.c:231:38
	movupd	-112(%rcx), %xmm2
	.loc	12 231 36               # erhs.c:231:36
	subpd	%xmm2, %xmm1
	.loc	12 231 19               # erhs.c:231:19
	mulpd	%xmm11, %xmm1
	.loc	12 231 13               # erhs.c:231:13
	subpd	%xmm1, %xmm0
	.loc	12 230 28 is_stmt 1     # erhs.c:230:28
	movupd	%xmm0, -32(%rsi)
	.loc	12 230 31 is_stmt 0     # erhs.c:230:31
	movupd	-16(%rsi), %xmm0
	.loc	12 231 23 is_stmt 1     # erhs.c:231:23
	movupd	-16(%rcx), %xmm1
	.loc	12 231 38 is_stmt 0     # erhs.c:231:38
	movupd	-96(%rcx), %xmm2
	.loc	12 231 36               # erhs.c:231:36
	subpd	%xmm2, %xmm1
	.loc	12 231 19               # erhs.c:231:19
	mulpd	%xmm11, %xmm1
	.loc	12 231 13               # erhs.c:231:13
	subpd	%xmm1, %xmm0
	.loc	12 230 28 is_stmt 1     # erhs.c:230:28
	movupd	%xmm0, -16(%rsi)
	.loc	12 230 31 is_stmt 0     # erhs.c:230:31
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	12 231 23 is_stmt 1     # erhs.c:231:23
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	.loc	12 231 36 is_stmt 0     # erhs.c:231:36
	subsd	-80(%rcx), %xmm1
	.loc	12 231 19               # erhs.c:231:19
	mulsd	%xmm10, %xmm1
	.loc	12 231 13               # erhs.c:231:13
	subsd	%xmm1, %xmm0
	.loc	12 230 28 is_stmt 1     # erhs.c:230:28
	movsd	%xmm0, (%rsi)
.Ltmp290:
	.loc	12 228 23 discriminator 1 # erhs.c:228:23
	addq	$2600, %rsi             # imm = 0xA28
	addq	$40, %rcx
	cmpq	%r8, %rbp
	.loc	12 228 7 is_stmt 0 discriminator 1 # erhs.c:228:7
	jl	.LBB7_37
.Ltmp291:
.LBB7_38:                               # %for.end1259
                                        #   in Loop: Header=BB7_34 Depth=2
	.loc	12 235 7 is_stmt 1 discriminator 1 # erhs.c:235:7
	cmpl	%r14d, %r10d
	movq	16(%rsp), %rcx          # 8-byte Reload
	movq	%rdx, %rsi
	movq	%r10, %rbp
	movapd	384(%rsp), %xmm11       # 16-byte Reload
	movapd	368(%rsp), %xmm12       # 16-byte Reload
	movapd	352(%rsp), %xmm13       # 16-byte Reload
	movapd	288(%rsp), %xmm15       # 16-byte Reload
.Ltmp292:
	.loc	12 236 19               # erhs.c:236:19
	movsd	.LCPI7_8(%rip), %xmm7   # xmm7 = mem[0],zero
	jge	.LBB7_40
	.p2align	4, 0x90
.LBB7_39:                               # %for.body1263
                                        #   Parent Loop BB7_33 Depth=1
                                        #     Parent Loop BB7_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movapd	%xmm7, %xmm0
	divsd	-32(%rsi), %xmm0
.Ltmp293:
	#DEBUG_VALUE: erhs:tmp <- %XMM0
	.loc	12 238 22               # erhs.c:238:22
	movupd	-24(%rsi), %xmm2
	.loc	12 238 20 is_stmt 0     # erhs.c:238:20
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	mulpd	%xmm2, %xmm1
	movsd	-8(%rsi), %xmm2         # xmm2 = mem[0],zero
	.loc	12 240 20 is_stmt 1     # erhs.c:240:20
	mulsd	%xmm0, %xmm2
.Ltmp294:
	#DEBUG_VALUE: erhs:u41j <- %XMM2
	.loc	12 241 20               # erhs.c:241:20
	mulsd	(%rsi), %xmm0
.Ltmp295:
	#DEBUG_VALUE: erhs:u51j <- %XMM0
	.loc	12 243 19               # erhs.c:243:19
	movapd	%xmm7, %xmm3
	divsd	-2632(%rsi), %xmm3
.Ltmp296:
	#DEBUG_VALUE: erhs:tmp <- %XMM3
	.loc	12 245 24               # erhs.c:245:24
	movupd	-2624(%rsi), %xmm5
	movapd	%xmm4, %xmm10
	.loc	12 245 22 is_stmt 0     # erhs.c:245:22
	movapd	%xmm3, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm5, %xmm4
	movsd	-2608(%rsi), %xmm5      # xmm5 = mem[0],zero
	.loc	12 247 22 is_stmt 1     # erhs.c:247:22
	mulsd	%xmm3, %xmm5
.Ltmp297:
	#DEBUG_VALUE: erhs:u41jm1 <- %XMM5
	.loc	12 248 22               # erhs.c:248:22
	mulsd	-2600(%rsi), %xmm3
.Ltmp298:
	#DEBUG_VALUE: erhs:u51jm1 <- %XMM3
	.loc	12 250 35               # erhs.c:250:35
	movapd	%xmm1, %xmm6
	subpd	%xmm4, %xmm6
	.loc	12 250 26 is_stmt 0     # erhs.c:250:26
	mulpd	%xmm15, %xmm6
	.loc	12 250 20               # erhs.c:250:20
	movupd	%xmm6, -24(%rcx)
	.loc	12 252 35 is_stmt 1     # erhs.c:252:35
	movapd	%xmm2, %xmm6
	subsd	%xmm5, %xmm6
	.loc	12 252 26 is_stmt 0     # erhs.c:252:26
	mulsd	%xmm8, %xmm6
	.loc	12 252 20               # erhs.c:252:20
	movsd	%xmm6, -8(%rcx)
	.loc	12 254 27 is_stmt 1     # erhs.c:254:27
	movapd	%xmm1, %xmm6
	mulsd	%xmm6, %xmm6
	.loc	12 254 43 is_stmt 0     # erhs.c:254:43
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	mulsd	%xmm1, %xmm1
	.loc	12 254 37               # erhs.c:254:37
	addsd	%xmm1, %xmm6
	.loc	12 254 59               # erhs.c:254:59
	mulsd	%xmm2, %xmm2
.Ltmp299:
	.loc	12 254 53               # erhs.c:254:53
	addsd	%xmm6, %xmm2
	.loc	12 255 29 is_stmt 1     # erhs.c:255:29
	movapd	%xmm4, %xmm6
	mulsd	%xmm6, %xmm6
	.loc	12 255 45 is_stmt 0     # erhs.c:255:45
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	mulsd	%xmm4, %xmm4
	.loc	12 255 37               # erhs.c:255:37
	addsd	%xmm4, %xmm6
	.loc	12 255 61               # erhs.c:255:61
	mulsd	%xmm5, %xmm5
.Ltmp300:
	.loc	12 255 53               # erhs.c:255:53
	addsd	%xmm6, %xmm5
	.loc	12 255 19               # erhs.c:255:19
	subsd	%xmm5, %xmm2
	.loc	12 254 17 is_stmt 1     # erhs.c:254:17
	mulsd	%xmm9, %xmm2
	.loc	12 257 31               # erhs.c:257:31
	subsd	%xmm4, %xmm1
	movapd	%xmm10, %xmm4
	.loc	12 257 17 is_stmt 0     # erhs.c:257:17
	mulsd	%xmm4, %xmm1
	.loc	12 256 11 is_stmt 1     # erhs.c:256:11
	addsd	%xmm2, %xmm1
	.loc	12 258 36               # erhs.c:258:36
	subsd	%xmm3, %xmm0
.Ltmp301:
	.loc	12 258 27 is_stmt 0     # erhs.c:258:27
	mulsd	%xmm14, %xmm0
	.loc	12 258 11               # erhs.c:258:11
	addsd	%xmm1, %xmm0
	.loc	12 253 20 is_stmt 1     # erhs.c:253:20
	movsd	%xmm0, (%rcx)
.Ltmp302:
	.loc	12 235 7 discriminator 1 # erhs.c:235:7
	incq	%rbp
	.loc	12 235 23 is_stmt 0 discriminator 1 # erhs.c:235:23
	addq	$2600, %rsi             # imm = 0xA28
	addq	$40, %rcx
	cmpq	%r14, %rbp
	.loc	12 235 7 discriminator 1 # erhs.c:235:7
	jl	.LBB7_39
.Ltmp303:
.LBB7_40:                               # %for.end1393
                                        #   in Loop: Header=BB7_34 Depth=2
	movq	%rax, 8(%rsp)           # 8-byte Spill
	movq	%rdx, 64(%rsp)          # 8-byte Spill
.Ltmp304:
	.loc	12 261 7 is_stmt 1 discriminator 1 # erhs.c:261:7
	cmpl	%r8d, %r10d
	movapd	272(%rsp), %xmm9        # 16-byte Reload
	movapd	416(%rsp), %xmm10       # 16-byte Reload
	jge	.LBB7_43
# BB#41:                                # %for.body1397.lr.ph
                                        #   in Loop: Header=BB7_34 Depth=2
.Ltmp305:
	.loc	12 264 34               # erhs.c:264:34
	imulq	$169000, (%rsp), %rcx   # 8-byte Folded Reload
                                        # imm = 0x29428
	addq	208(%rsp), %rcx         # 8-byte Folded Reload
	leaq	(%r9,%r9,4), %rsi
	.loc	12 267 46               # erhs.c:267:46
	movq	224(%rsp), %rbp         # 8-byte Reload
	movsd	(%rbp), %xmm7           # xmm7 = mem[0],zero
	.loc	12 264 34               # erhs.c:264:34
	movupd	rsd(%rcx,%rsi,8), %xmm2
	.loc	12 272 46               # erhs.c:272:46
	movq	216(%rsp), %rbp         # 8-byte Reload
	movupd	(%rbp), %xmm5
	.loc	12 274 34               # erhs.c:274:34
	movupd	rsd+16(%rcx,%rsi,8), %xmm3
	.loc	12 282 46               # erhs.c:282:46
	movq	16(%rsp), %rbp          # 8-byte Reload
	movsd	(%rbp), %xmm0           # xmm0 = mem[0],zero
	.loc	12 284 34               # erhs.c:284:34
	movsd	rsd+32(%rcx,%rsi,8), %xmm4 # xmm4 = mem[0],zero
	movq	%rdi, %rcx
	movq	24(%rsp), %rsi          # 8-byte Reload
	movq	%r15, %rbp
.Ltmp306:
	.p2align	4, 0x90
.LBB7_42:                               # %for.body1397
                                        #   Parent Loop BB7_33 Depth=1
                                        #     Parent Loop BB7_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 261 7 discriminator 1 # erhs.c:261:7
	incq	%r10
.Ltmp307:
	.loc	12 267 31               # erhs.c:267:31
	movsd	-24(%rsi), %xmm8        # xmm8 = mem[0],zero
	.loc	12 267 44 is_stmt 0     # erhs.c:267:44
	movapd	%xmm8, %xmm6
	subsd	%xmm7, %xmm6
	.loc	12 267 27               # erhs.c:267:27
	mulsd	%xmm11, %xmm6
	.loc	12 267 11               # erhs.c:267:11
	addsd	frct+169008(%rbp), %xmm6
	.loc	12 263 34 is_stmt 1     # erhs.c:263:34
	movupd	-32(%rcx), %xmm7
	.loc	12 264 32               # erhs.c:264:32
	addpd	%xmm2, %xmm2
	.loc	12 264 26 is_stmt 0     # erhs.c:264:26
	subpd	%xmm2, %xmm7
	.loc	12 265 34 is_stmt 1     # erhs.c:265:34
	movupd	rsd+171600(%rbp), %xmm2
	.loc	12 265 26 is_stmt 0     # erhs.c:265:26
	addpd	%xmm2, %xmm7
	.loc	12 263 23 is_stmt 1     # erhs.c:263:23
	mulpd	%xmm12, %xmm7
	.loc	12 263 11 is_stmt 0     # erhs.c:263:11
	movsd	frct+169000(%rbp), %xmm1 # xmm1 = mem[0],zero
	unpcklpd	%xmm6, %xmm1    # xmm1 = xmm1[0],xmm6[0]
	addpd	%xmm7, %xmm1
	.loc	12 262 26 is_stmt 1     # erhs.c:262:26
	movupd	%xmm1, frct+169000(%rbp)
	.loc	12 271 28               # erhs.c:271:28
	movupd	frct+169016(%rbp), %xmm1
	.loc	12 272 31               # erhs.c:272:31
	movupd	-16(%rsi), %xmm6
	.loc	12 272 44 is_stmt 0     # erhs.c:272:44
	movapd	%xmm6, %xmm7
	subpd	%xmm5, %xmm7
	.loc	12 272 27               # erhs.c:272:27
	mulpd	%xmm9, %xmm7
	.loc	12 272 11               # erhs.c:272:11
	addpd	%xmm1, %xmm7
	.loc	12 273 34 is_stmt 1     # erhs.c:273:34
	movupd	-16(%rcx), %xmm1
	.loc	12 274 32               # erhs.c:274:32
	addpd	%xmm3, %xmm3
	.loc	12 274 26 is_stmt 0     # erhs.c:274:26
	subpd	%xmm3, %xmm1
	.loc	12 275 34 is_stmt 1     # erhs.c:275:34
	movupd	rsd+171616(%rbp), %xmm3
	.loc	12 275 26 is_stmt 0     # erhs.c:275:26
	addpd	%xmm3, %xmm1
	.loc	12 273 23 is_stmt 1     # erhs.c:273:23
	mulpd	%xmm13, %xmm1
	.loc	12 273 11 is_stmt 0     # erhs.c:273:11
	addpd	%xmm7, %xmm1
	.loc	12 271 26 is_stmt 1     # erhs.c:271:26
	movupd	%xmm1, frct+169016(%rbp)
	.loc	12 282 31               # erhs.c:282:31
	movsd	(%rsi), %xmm1           # xmm1 = mem[0],zero
	.loc	12 282 44 is_stmt 0     # erhs.c:282:44
	movapd	%xmm1, %xmm5
	subsd	%xmm0, %xmm5
	.loc	12 282 27               # erhs.c:282:27
	mulsd	%xmm11, %xmm5
	.loc	12 282 11               # erhs.c:282:11
	addsd	frct+169032(%rbp), %xmm5
	.loc	12 283 34 is_stmt 1     # erhs.c:283:34
	movsd	(%rcx), %xmm0           # xmm0 = mem[0],zero
	.loc	12 284 32               # erhs.c:284:32
	addsd	%xmm4, %xmm4
	.loc	12 284 26 is_stmt 0     # erhs.c:284:26
	subsd	%xmm4, %xmm0
	.loc	12 285 34 is_stmt 1     # erhs.c:285:34
	movsd	rsd+171632(%rbp), %xmm4 # xmm4 = mem[0],zero
	.loc	12 285 26 is_stmt 0     # erhs.c:285:26
	addsd	%xmm4, %xmm0
	.loc	12 283 23 is_stmt 1     # erhs.c:283:23
	mulsd	%xmm10, %xmm0
	.loc	12 283 11 is_stmt 0     # erhs.c:283:11
	addsd	%xmm5, %xmm0
	.loc	12 281 26 is_stmt 1     # erhs.c:281:26
	movsd	%xmm0, frct+169032(%rbp)
.Ltmp308:
	.loc	12 261 23 discriminator 1 # erhs.c:261:23
	addq	$2600, %rbp             # imm = 0xA28
	addq	$40, %rsi
	addq	$2600, %rcx             # imm = 0xA28
	cmpq	%r8, %r10
.Ltmp309:
	.loc	12 282 46               # erhs.c:282:46
	movapd	%xmm1, %xmm0
	.loc	12 267 46               # erhs.c:267:46
	movapd	%xmm8, %xmm7
	.loc	12 272 46               # erhs.c:272:46
	movapd	%xmm6, %xmm5
	jl	.LBB7_42
.Ltmp310:
.LBB7_43:                               # %for.body1667
                                        #   in Loop: Header=BB7_34 Depth=2
	movq	%r15, %r10
.Ltmp311:
	.loc	12 292 28               # erhs.c:292:28
	imulq	$169000, (%rsp), %rsi   # 8-byte Folded Reload
                                        # imm = 0x29428
	cmpl	$3, %r13d
	leaq	(%r9,%r9,4), %rbx
	movsd	frct+2600(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 293 30               # erhs.c:293:30
	movsd	rsd+2600(%rsi,%rbx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 293 28 is_stmt 0     # erhs.c:293:28
	movapd	%xmm1, %xmm2
	movsd	.LCPI7_9(%rip), %xmm6   # xmm6 = mem[0],zero
	mulsd	%xmm6, %xmm2
	.loc	12 294 30 is_stmt 1     # erhs.c:294:30
	movsd	rsd+5200(%rsi,%rbx,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 294 28 is_stmt 0     # erhs.c:294:28
	movapd	%xmm3, %xmm4
	movsd	.LCPI7_10(%rip), %xmm5  # xmm5 = mem[0],zero
	movapd	%xmm5, %xmm7
	mulsd	%xmm7, %xmm4
	.loc	12 294 22               # erhs.c:294:22
	subsd	%xmm4, %xmm2
	.loc	12 295 30 is_stmt 1     # erhs.c:295:30
	movsd	rsd+7800(%rsi,%rbx,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 295 22 is_stmt 0     # erhs.c:295:22
	addsd	%xmm4, %xmm2
	movapd	32(%rsp), %xmm5         # 16-byte Reload
	.loc	12 293 18 is_stmt 1     # erhs.c:293:18
	mulsd	%xmm5, %xmm2
	.loc	12 293 11 is_stmt 0     # erhs.c:293:11
	subsd	%xmm2, %xmm0
	.loc	12 292 26 is_stmt 1     # erhs.c:292:26
	movsd	%xmm0, frct+2600(%rsi,%rbx,8)
	.loc	12 296 28               # erhs.c:296:28
	movsd	frct+5200(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 297 28               # erhs.c:297:28
	mulsd	%xmm7, %xmm1
	.loc	12 298 28               # erhs.c:298:28
	movsd	.LCPI7_11(%rip), %xmm2  # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm8
	mulsd	%xmm8, %xmm3
	.loc	12 297 28               # erhs.c:297:28
	subsd	%xmm1, %xmm3
	.loc	12 299 28               # erhs.c:299:28
	mulsd	%xmm7, %xmm4
	.loc	12 299 22 is_stmt 0     # erhs.c:299:22
	subsd	%xmm4, %xmm3
	.loc	12 300 22 is_stmt 1     # erhs.c:300:22
	addsd	rsd+10400(%rsi,%rbx,8), %xmm3
	.loc	12 297 18               # erhs.c:297:18
	mulsd	%xmm5, %xmm3
	.loc	12 297 11 is_stmt 0     # erhs.c:297:11
	subsd	%xmm3, %xmm0
	.loc	12 296 26 is_stmt 1     # erhs.c:296:26
	movsd	%xmm0, frct+5200(%rsi,%rbx,8)
	.loc	12 292 28               # erhs.c:292:28
	movsd	frct+2608(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 293 30               # erhs.c:293:30
	movsd	rsd+2608(%rsi,%rbx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 293 28 is_stmt 0     # erhs.c:293:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 294 30 is_stmt 1     # erhs.c:294:30
	movsd	rsd+5208(%rsi,%rbx,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 294 28 is_stmt 0     # erhs.c:294:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 294 22               # erhs.c:294:22
	subsd	%xmm4, %xmm2
	.loc	12 295 30 is_stmt 1     # erhs.c:295:30
	movsd	rsd+7808(%rsi,%rbx,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 295 22 is_stmt 0     # erhs.c:295:22
	addsd	%xmm4, %xmm2
	.loc	12 293 18 is_stmt 1     # erhs.c:293:18
	mulsd	%xmm5, %xmm2
	.loc	12 293 11 is_stmt 0     # erhs.c:293:11
	subsd	%xmm2, %xmm0
	.loc	12 292 26 is_stmt 1     # erhs.c:292:26
	movsd	%xmm0, frct+2608(%rsi,%rbx,8)
	.loc	12 296 28               # erhs.c:296:28
	movsd	frct+5208(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 297 28               # erhs.c:297:28
	mulsd	%xmm7, %xmm1
	.loc	12 298 28               # erhs.c:298:28
	mulsd	%xmm8, %xmm3
	.loc	12 297 28               # erhs.c:297:28
	subsd	%xmm1, %xmm3
	.loc	12 299 28               # erhs.c:299:28
	mulsd	%xmm7, %xmm4
	.loc	12 299 22 is_stmt 0     # erhs.c:299:22
	subsd	%xmm4, %xmm3
	.loc	12 300 22 is_stmt 1     # erhs.c:300:22
	addsd	rsd+10408(%rsi,%rbx,8), %xmm3
	.loc	12 297 18               # erhs.c:297:18
	mulsd	%xmm5, %xmm3
	.loc	12 297 11 is_stmt 0     # erhs.c:297:11
	subsd	%xmm3, %xmm0
	.loc	12 296 26 is_stmt 1     # erhs.c:296:26
	movsd	%xmm0, frct+5208(%rsi,%rbx,8)
	.loc	12 292 28               # erhs.c:292:28
	movsd	frct+2616(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 293 30               # erhs.c:293:30
	movsd	rsd+2616(%rsi,%rbx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 293 28 is_stmt 0     # erhs.c:293:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 294 30 is_stmt 1     # erhs.c:294:30
	movsd	rsd+5216(%rsi,%rbx,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 294 28 is_stmt 0     # erhs.c:294:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 294 22               # erhs.c:294:22
	subsd	%xmm4, %xmm2
	.loc	12 295 30 is_stmt 1     # erhs.c:295:30
	movsd	rsd+7816(%rsi,%rbx,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 295 22 is_stmt 0     # erhs.c:295:22
	addsd	%xmm4, %xmm2
	.loc	12 293 18 is_stmt 1     # erhs.c:293:18
	mulsd	%xmm5, %xmm2
	.loc	12 293 11 is_stmt 0     # erhs.c:293:11
	subsd	%xmm2, %xmm0
	.loc	12 292 26 is_stmt 1     # erhs.c:292:26
	movsd	%xmm0, frct+2616(%rsi,%rbx,8)
	.loc	12 296 28               # erhs.c:296:28
	movsd	frct+5216(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 297 28               # erhs.c:297:28
	mulsd	%xmm7, %xmm1
	.loc	12 298 28               # erhs.c:298:28
	mulsd	%xmm8, %xmm3
	.loc	12 297 28               # erhs.c:297:28
	subsd	%xmm1, %xmm3
	.loc	12 299 28               # erhs.c:299:28
	mulsd	%xmm7, %xmm4
	.loc	12 299 22 is_stmt 0     # erhs.c:299:22
	subsd	%xmm4, %xmm3
	.loc	12 300 22 is_stmt 1     # erhs.c:300:22
	addsd	rsd+10416(%rsi,%rbx,8), %xmm3
	.loc	12 297 18               # erhs.c:297:18
	mulsd	%xmm5, %xmm3
	.loc	12 297 11 is_stmt 0     # erhs.c:297:11
	subsd	%xmm3, %xmm0
	.loc	12 296 26 is_stmt 1     # erhs.c:296:26
	movsd	%xmm0, frct+5216(%rsi,%rbx,8)
	.loc	12 292 28               # erhs.c:292:28
	movsd	frct+2624(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 293 30               # erhs.c:293:30
	movsd	rsd+2624(%rsi,%rbx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 293 28 is_stmt 0     # erhs.c:293:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 294 30 is_stmt 1     # erhs.c:294:30
	movsd	rsd+5224(%rsi,%rbx,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 294 28 is_stmt 0     # erhs.c:294:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 294 22               # erhs.c:294:22
	subsd	%xmm4, %xmm2
	.loc	12 295 30 is_stmt 1     # erhs.c:295:30
	movsd	rsd+7824(%rsi,%rbx,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 295 22 is_stmt 0     # erhs.c:295:22
	addsd	%xmm4, %xmm2
	.loc	12 293 18 is_stmt 1     # erhs.c:293:18
	mulsd	%xmm5, %xmm2
	.loc	12 293 11 is_stmt 0     # erhs.c:293:11
	subsd	%xmm2, %xmm0
	.loc	12 292 26 is_stmt 1     # erhs.c:292:26
	movsd	%xmm0, frct+2624(%rsi,%rbx,8)
	.loc	12 296 28               # erhs.c:296:28
	movsd	frct+5224(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 297 28               # erhs.c:297:28
	mulsd	%xmm7, %xmm1
	.loc	12 298 28               # erhs.c:298:28
	mulsd	%xmm8, %xmm3
	.loc	12 297 28               # erhs.c:297:28
	subsd	%xmm1, %xmm3
	.loc	12 299 28               # erhs.c:299:28
	mulsd	%xmm7, %xmm4
	.loc	12 299 22 is_stmt 0     # erhs.c:299:22
	subsd	%xmm4, %xmm3
	.loc	12 300 22 is_stmt 1     # erhs.c:300:22
	addsd	rsd+10424(%rsi,%rbx,8), %xmm3
	.loc	12 297 18               # erhs.c:297:18
	mulsd	%xmm5, %xmm3
	.loc	12 297 11 is_stmt 0     # erhs.c:297:11
	subsd	%xmm3, %xmm0
	.loc	12 296 26 is_stmt 1     # erhs.c:296:26
	movsd	%xmm0, frct+5224(%rsi,%rbx,8)
	.loc	12 292 28               # erhs.c:292:28
	movsd	frct+2632(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 293 30               # erhs.c:293:30
	movsd	rsd+2632(%rsi,%rbx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 293 28 is_stmt 0     # erhs.c:293:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 294 30 is_stmt 1     # erhs.c:294:30
	movsd	rsd+5232(%rsi,%rbx,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 294 28 is_stmt 0     # erhs.c:294:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	12 294 22               # erhs.c:294:22
	subsd	%xmm4, %xmm2
	.loc	12 295 30 is_stmt 1     # erhs.c:295:30
	movsd	rsd+7832(%rsi,%rbx,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 295 22 is_stmt 0     # erhs.c:295:22
	addsd	%xmm4, %xmm2
	.loc	12 293 18 is_stmt 1     # erhs.c:293:18
	mulsd	%xmm5, %xmm2
	.loc	12 293 11 is_stmt 0     # erhs.c:293:11
	subsd	%xmm2, %xmm0
	.loc	12 292 26 is_stmt 1     # erhs.c:292:26
	movsd	%xmm0, frct+2632(%rsi,%rbx,8)
	.loc	12 296 28               # erhs.c:296:28
	movsd	frct+5232(%rsi,%rbx,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 297 28               # erhs.c:297:28
	mulsd	%xmm7, %xmm1
	.loc	12 298 28               # erhs.c:298:28
	mulsd	%xmm8, %xmm3
	.loc	12 297 28               # erhs.c:297:28
	subsd	%xmm1, %xmm3
	.loc	12 299 28               # erhs.c:299:28
	mulsd	%xmm7, %xmm4
	.loc	12 299 22 is_stmt 0     # erhs.c:299:22
	subsd	%xmm4, %xmm3
	.loc	12 300 22 is_stmt 1     # erhs.c:300:22
	addsd	rsd+10432(%rsi,%rbx,8), %xmm3
	.loc	12 297 18               # erhs.c:297:18
	mulsd	%xmm5, %xmm3
	.loc	12 297 11 is_stmt 0     # erhs.c:297:11
	subsd	%xmm3, %xmm0
	#DEBUG_VALUE: erhs:m <- 0
	.loc	12 296 26 is_stmt 1     # erhs.c:296:26
	movsd	%xmm0, frct+5232(%rsi,%rbx,8)
	movapd	448(%rsp), %xmm12       # 16-byte Reload
.Ltmp312:
	.loc	12 307 29               # erhs.c:307:29
	movapd	.LCPI7_12(%rip), %xmm11 # xmm11 = [4.000000e+00,4.000000e+00]
	.loc	12 308 29               # erhs.c:308:29
	movapd	.LCPI7_13(%rip), %xmm15 # xmm15 = [6.000000e+00,6.000000e+00]
	movapd	%xmm15, %xmm4
	jle	.LBB7_46
# BB#44:                                # %for.cond1767.preheader.lr.ph
                                        #   in Loop: Header=BB7_34 Depth=2
	.loc	12 306 31               # erhs.c:306:31
	movsd	rsd+2608(%rsi,%rbx,8), %xmm13 # xmm13 = mem[0],zero
	.loc	12 307 31               # erhs.c:307:31
	movsd	rsd+5208(%rsi,%rbx,8), %xmm14 # xmm14 = mem[0],zero
	.loc	12 308 31               # erhs.c:308:31
	movupd	rsd+7800(%rsi,%rbx,8), %xmm2
	.loc	12 309 31               # erhs.c:309:31
	movupd	rsd+10400(%rsi,%rbx,8), %xmm9
	.loc	12 306 31               # erhs.c:306:31
	movupd	rsd+2616(%rsi,%rbx,8), %xmm5
	.loc	12 307 31               # erhs.c:307:31
	movupd	rsd+5216(%rsi,%rbx,8), %xmm15
	.loc	12 308 31               # erhs.c:308:31
	movupd	rsd+7816(%rsi,%rbx,8), %xmm10
	.loc	12 309 31               # erhs.c:309:31
	movupd	rsd+10416(%rsi,%rbx,8), %xmm8
	.loc	12 306 31               # erhs.c:306:31
	movsd	rsd+2632(%rsi,%rbx,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 307 31               # erhs.c:307:31
	movsd	rsd+5232(%rsi,%rbx,8), %xmm7 # xmm7 = mem[0],zero
	movq	%r12, %rcx
	movl	$3, %ebp
	.p2align	4, 0x90
.LBB7_45:                               # %for.cond1767.preheader
                                        #   Parent Loop BB7_33 Depth=1
                                        #     Parent Loop BB7_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 307 23 is_stmt 0     # erhs.c:307:23
	movsd	rsd+171600(%rcx), %xmm3 # xmm3 = mem[0],zero
	unpcklpd	%xmm13, %xmm3   # xmm3 = xmm3[0],xmm13[0]
	.loc	12 307 31               # erhs.c:307:31
	movapd	%xmm14, %xmm13
	movapd	%xmm7, %xmm6
	.loc	12 305 30 is_stmt 1     # erhs.c:305:30
	movupd	frct+176800(%rcx), %xmm7
	.loc	12 307 29               # erhs.c:307:29
	movsd	rsd+174200(%rcx), %xmm0 # xmm0 = mem[0],zero
	unpcklpd	%xmm13, %xmm0   # xmm0 = xmm0[0],xmm13[0]
	mulpd	%xmm11, %xmm0
	.loc	12 307 23 is_stmt 0     # erhs.c:307:23
	subpd	%xmm0, %xmm3
	.loc	12 308 29 is_stmt 1     # erhs.c:308:29
	movapd	%xmm2, %xmm0
	mulpd	%xmm4, %xmm0
	.loc	12 308 23 is_stmt 0     # erhs.c:308:23
	addpd	%xmm3, %xmm0
	.loc	12 309 29 is_stmt 1     # erhs.c:309:29
	movapd	%xmm9, %xmm3
	mulpd	%xmm11, %xmm3
	.loc	12 309 23 is_stmt 0     # erhs.c:309:23
	subpd	%xmm3, %xmm0
	.loc	12 310 31 is_stmt 1     # erhs.c:310:31
	movupd	rsd+182000(%rcx), %xmm4
	.loc	12 310 23 is_stmt 0     # erhs.c:310:23
	addpd	%xmm4, %xmm0
	.loc	12 306 20 is_stmt 1     # erhs.c:306:20
	mulpd	%xmm12, %xmm0
	.loc	12 306 13 is_stmt 0     # erhs.c:306:13
	subpd	%xmm0, %xmm7
	.loc	12 305 28 is_stmt 1     # erhs.c:305:28
	movupd	%xmm7, frct+176800(%rcx)
	.loc	12 305 30 is_stmt 0     # erhs.c:305:30
	movupd	frct+176816(%rcx), %xmm0
	.loc	12 307 29 is_stmt 1     # erhs.c:307:29
	movapd	%xmm15, %xmm3
	mulpd	%xmm11, %xmm3
	.loc	12 307 23 is_stmt 0     # erhs.c:307:23
	subpd	%xmm3, %xmm5
	.loc	12 308 29 is_stmt 1     # erhs.c:308:29
	movapd	%xmm10, %xmm7
	mulpd	.LCPI7_13(%rip), %xmm7
	.loc	12 308 23 is_stmt 0     # erhs.c:308:23
	addpd	%xmm5, %xmm7
	.loc	12 309 29 is_stmt 1     # erhs.c:309:29
	movapd	%xmm8, %xmm3
	mulpd	%xmm11, %xmm3
	.loc	12 309 23 is_stmt 0     # erhs.c:309:23
	subpd	%xmm3, %xmm7
	.loc	12 310 31 is_stmt 1     # erhs.c:310:31
	movupd	rsd+182016(%rcx), %xmm3
	.loc	12 310 23 is_stmt 0     # erhs.c:310:23
	addpd	%xmm3, %xmm7
	.loc	12 306 20 is_stmt 1     # erhs.c:306:20
	mulpd	%xmm12, %xmm7
	.loc	12 306 13 is_stmt 0     # erhs.c:306:13
	subpd	%xmm7, %xmm0
	.loc	12 305 28 is_stmt 1     # erhs.c:305:28
	movupd	%xmm0, frct+176816(%rcx)
	.loc	12 307 29               # erhs.c:307:29
	movapd	%xmm6, %xmm0
.Ltmp313:
	.loc	12 294 28               # erhs.c:294:28
	movsd	.LCPI7_10(%rip), %xmm5  # xmm5 = mem[0],zero
.Ltmp314:
	.loc	12 307 29               # erhs.c:307:29
	mulsd	%xmm5, %xmm0
	.loc	12 307 23 is_stmt 0     # erhs.c:307:23
	subsd	%xmm0, %xmm1
	.loc	12 308 31 is_stmt 1     # erhs.c:308:31
	movsd	rsd+176832(%rcx), %xmm7 # xmm7 = mem[0],zero
	.loc	12 308 29 is_stmt 0     # erhs.c:308:29
	movapd	%xmm7, %xmm0
	mulsd	.LCPI7_11(%rip), %xmm0
	.loc	12 308 23               # erhs.c:308:23
	addsd	%xmm1, %xmm0
	movsd	rsd+179432(%rcx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 309 29 is_stmt 1     # erhs.c:309:29
	mulsd	%xmm5, %xmm1
	.loc	12 309 23 is_stmt 0     # erhs.c:309:23
	subsd	%xmm1, %xmm0
	.loc	12 305 30 is_stmt 1     # erhs.c:305:30
	movsd	frct+176832(%rcx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 310 23               # erhs.c:310:23
	addsd	rsd+182032(%rcx), %xmm0
	.loc	12 306 20               # erhs.c:306:20
	mulsd	32(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	12 306 13 is_stmt 0     # erhs.c:306:13
	subsd	%xmm0, %xmm1
	.loc	12 305 28 is_stmt 1     # erhs.c:305:28
	movsd	%xmm1, frct+176832(%rcx)
.Ltmp315:
	#DEBUG_VALUE: erhs:m <- 0
	.loc	12 303 7 discriminator 1 # erhs.c:303:7
	shufpd	$1, %xmm2, %xmm2        # xmm2 = xmm2[1,0]
.Ltmp316:
	.loc	12 307 31               # erhs.c:307:31
	movapd	%xmm2, %xmm14
	.loc	12 308 31               # erhs.c:308:31
	movapd	%xmm9, %xmm2
	.loc	12 306 31               # erhs.c:306:31
	movapd	%xmm15, %xmm5
	.loc	12 307 31               # erhs.c:307:31
	movapd	%xmm10, %xmm15
	.loc	12 308 31               # erhs.c:308:31
	movapd	%xmm8, %xmm10
.Ltmp317:
	.loc	12 303 7 discriminator 1 # erhs.c:303:7
	incq	%rbp
	.loc	12 303 21 is_stmt 0 discriminator 1 # erhs.c:303:21
	addq	$2600, %rcx             # imm = 0xA28
	cmpq	%r13, %rbp
.Ltmp318:
	.loc	12 306 31 is_stmt 1     # erhs.c:306:31
	movapd	%xmm6, %xmm1
	.loc	12 309 31               # erhs.c:309:31
	movapd	%xmm4, %xmm9
	.loc	12 308 29               # erhs.c:308:29
	movapd	.LCPI7_13(%rip), %xmm4  # xmm4 = [6.000000e+00,6.000000e+00]
	.loc	12 309 31               # erhs.c:309:31
	movapd	%xmm3, %xmm8
.Ltmp319:
	.loc	12 303 7 discriminator 1 # erhs.c:303:7
	jl	.LBB7_45
.Ltmp320:
.LBB7_46:                               # %for.body1849
                                        #   in Loop: Header=BB7_34 Depth=2
	.loc	12 315 31               # erhs.c:315:31
	imulq	$2600, %r13, %rbp       # imm = 0xA28
	leaq	frct(%rsi,%rbp), %r11
	leaq	(,%r9,8), %rcx
	leaq	(%rcx,%rcx,4), %rbx
	movsd	(%r11,%rbx), %xmm10     # xmm10 = mem[0],zero
	.loc	12 316 29               # erhs.c:316:29
	movq	248(%rsp), %rcx         # 8-byte Reload
	leaq	rsd(%rsi,%rcx), %rcx
	movsd	(%rcx,%rbx), %xmm12     # xmm12 = mem[0],zero
	movsd	8(%rcx,%rbx), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, 80(%rsp)         # 8-byte Spill
	movsd	16(%rcx,%rbx), %xmm0    # xmm0 = mem[0],zero
	movsd	%xmm0, 144(%rsp)        # 8-byte Spill
	movsd	24(%rcx,%rbx), %xmm0    # xmm0 = mem[0],zero
	movsd	%xmm0, 128(%rsp)        # 8-byte Spill
	movsd	32(%rcx,%rbx), %xmm0    # xmm0 = mem[0],zero
	.loc	12 317 29               # erhs.c:317:29
	movsd	%xmm0, 112(%rsp)        # 8-byte Spill
	movq	240(%rsp), %rcx         # 8-byte Reload
	leaq	rsd(%rsi,%rcx), %rcx
	movsd	(%rcx,%rbx), %xmm0      # xmm0 = mem[0],zero
	.loc	12 317 27 is_stmt 0     # erhs.c:317:27
	movapd	%xmm0, %xmm2
.Ltmp321:
	.loc	12 294 28 is_stmt 1     # erhs.c:294:28
	movsd	.LCPI7_10(%rip), %xmm6  # xmm6 = mem[0],zero
.Ltmp322:
	.loc	12 317 27               # erhs.c:317:27
	mulsd	%xmm6, %xmm2
	.loc	12 317 21 is_stmt 0     # erhs.c:317:21
	subsd	%xmm2, %xmm12
	.loc	12 318 29 is_stmt 1     # erhs.c:318:29
	leaq	rsd(%rsi,%rbp), %rbp
	movsd	(%rbp,%rbx), %xmm1      # xmm1 = mem[0],zero
	.loc	12 318 27 is_stmt 0     # erhs.c:318:27
	movapd	%xmm1, %xmm5
.Ltmp323:
	.loc	12 298 28 is_stmt 1     # erhs.c:298:28
	movsd	.LCPI7_11(%rip), %xmm13 # xmm13 = mem[0],zero
.Ltmp324:
	.loc	12 318 27               # erhs.c:318:27
	mulsd	%xmm13, %xmm5
	.loc	12 318 21 is_stmt 0     # erhs.c:318:21
	addsd	%xmm12, %xmm5
	.loc	12 317 29 is_stmt 1     # erhs.c:317:29
	movsd	8(%rcx,%rbx), %xmm4     # xmm4 = mem[0],zero
	movsd	16(%rcx,%rbx), %xmm8    # xmm8 = mem[0],zero
	movsd	24(%rcx,%rbx), %xmm11   # xmm11 = mem[0],zero
	movsd	32(%rcx,%rbx), %xmm14   # xmm14 = mem[0],zero
	movq	232(%rsp), %rcx         # 8-byte Reload
	.loc	12 319 29               # erhs.c:319:29
	leaq	rsd(%rsi,%rcx), %r15
	movsd	(%r15,%rbx), %xmm3      # xmm3 = mem[0],zero
	.loc	12 319 27 is_stmt 0     # erhs.c:319:27
	movapd	%xmm3, %xmm7
	mulsd	%xmm6, %xmm7
	.loc	12 319 21               # erhs.c:319:21
	subsd	%xmm7, %xmm5
	movapd	32(%rsp), %xmm2         # 16-byte Reload
	.loc	12 316 18 is_stmt 1     # erhs.c:316:18
	mulsd	%xmm2, %xmm5
	.loc	12 316 11 is_stmt 0     # erhs.c:316:11
	subsd	%xmm5, %xmm10
	.loc	12 318 29 is_stmt 1     # erhs.c:318:29
	movsd	8(%rbp,%rbx), %xmm9     # xmm9 = mem[0],zero
	movsd	16(%rbp,%rbx), %xmm15   # xmm15 = mem[0],zero
	movsd	24(%rbp,%rbx), %xmm7    # xmm7 = mem[0],zero
	movsd	32(%rbp,%rbx), %xmm12   # xmm12 = mem[0],zero
	.loc	12 315 29               # erhs.c:315:29
	movsd	%xmm10, (%r11,%rbx)
	.loc	12 320 31               # erhs.c:320:31
	leaq	frct(%rsi,%rcx), %rcx
	movsd	(%rcx,%rbx), %xmm10     # xmm10 = mem[0],zero
	.loc	12 322 27               # erhs.c:322:27
	mulsd	%xmm6, %xmm1
	.loc	12 322 21 is_stmt 0     # erhs.c:322:21
	subsd	%xmm1, %xmm0
.Ltmp325:
	.loc	12 293 28 is_stmt 1     # erhs.c:293:28
	movsd	.LCPI7_9(%rip), %xmm5   # xmm5 = mem[0],zero
.Ltmp326:
	.loc	12 323 27               # erhs.c:323:27
	mulsd	%xmm5, %xmm3
	.loc	12 323 21 is_stmt 0     # erhs.c:323:21
	addsd	%xmm0, %xmm3
	.loc	12 321 18 is_stmt 1     # erhs.c:321:18
	mulsd	%xmm2, %xmm3
	.loc	12 321 11 is_stmt 0     # erhs.c:321:11
	subsd	%xmm3, %xmm10
	.loc	12 320 29 is_stmt 1     # erhs.c:320:29
	movsd	%xmm10, (%rcx,%rbx)
	.loc	12 315 31               # erhs.c:315:31
	movsd	8(%r11,%rbx), %xmm10    # xmm10 = mem[0],zero
	.loc	12 317 27               # erhs.c:317:27
	movapd	%xmm4, %xmm0
	mulsd	%xmm6, %xmm0
	movsd	80(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	12 317 21 is_stmt 0     # erhs.c:317:21
	subsd	%xmm0, %xmm1
	.loc	12 318 27 is_stmt 1     # erhs.c:318:27
	movapd	%xmm9, %xmm0
	mulsd	%xmm13, %xmm0
	.loc	12 318 21 is_stmt 0     # erhs.c:318:21
	addsd	%xmm1, %xmm0
	.loc	12 319 29 is_stmt 1     # erhs.c:319:29
	movsd	8(%r15,%rbx), %xmm1     # xmm1 = mem[0],zero
	.loc	12 319 27 is_stmt 0     # erhs.c:319:27
	movapd	%xmm1, %xmm3
	mulsd	%xmm6, %xmm3
	.loc	12 319 21               # erhs.c:319:21
	subsd	%xmm3, %xmm0
	.loc	12 316 18 is_stmt 1     # erhs.c:316:18
	mulsd	%xmm2, %xmm0
	.loc	12 316 11 is_stmt 0     # erhs.c:316:11
	subsd	%xmm0, %xmm10
	.loc	12 319 29 is_stmt 1     # erhs.c:319:29
	movsd	16(%r15,%rbx), %xmm3    # xmm3 = mem[0],zero
	movsd	24(%r15,%rbx), %xmm0    # xmm0 = mem[0],zero
	movsd	32(%r15,%rbx), %xmm13   # xmm13 = mem[0],zero
	.loc	12 315 29               # erhs.c:315:29
	movsd	%xmm10, 8(%r11,%rbx)
	.loc	12 322 27               # erhs.c:322:27
	mulsd	%xmm6, %xmm9
	.loc	12 322 21 is_stmt 0     # erhs.c:322:21
	subsd	%xmm9, %xmm4
	movapd	%xmm2, %xmm9
	.loc	12 323 27 is_stmt 1     # erhs.c:323:27
	mulsd	%xmm5, %xmm1
	.loc	12 323 21 is_stmt 0     # erhs.c:323:21
	addsd	%xmm4, %xmm1
	.loc	12 320 31 is_stmt 1     # erhs.c:320:31
	movsd	8(%rcx,%rbx), %xmm4     # xmm4 = mem[0],zero
	.loc	12 321 18               # erhs.c:321:18
	mulsd	%xmm9, %xmm1
	.loc	12 321 11 is_stmt 0     # erhs.c:321:11
	subsd	%xmm1, %xmm4
	.loc	12 320 29 is_stmt 1     # erhs.c:320:29
	movsd	%xmm4, 8(%rcx,%rbx)
	.loc	12 317 27               # erhs.c:317:27
	movapd	%xmm8, %xmm1
	mulsd	%xmm6, %xmm1
	movsd	144(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	12 317 21 is_stmt 0     # erhs.c:317:21
	subsd	%xmm1, %xmm2
	.loc	12 318 27 is_stmt 1     # erhs.c:318:27
	movapd	%xmm15, %xmm1
.Ltmp327:
	.loc	12 298 28               # erhs.c:298:28
	movsd	.LCPI7_11(%rip), %xmm10 # xmm10 = mem[0],zero
.Ltmp328:
	.loc	12 318 27               # erhs.c:318:27
	mulsd	%xmm10, %xmm1
	.loc	12 318 21 is_stmt 0     # erhs.c:318:21
	addsd	%xmm2, %xmm1
	.loc	12 319 27 is_stmt 1     # erhs.c:319:27
	movapd	%xmm3, %xmm4
	mulsd	%xmm6, %xmm4
	.loc	12 319 21 is_stmt 0     # erhs.c:319:21
	subsd	%xmm4, %xmm1
	.loc	12 315 31 is_stmt 1     # erhs.c:315:31
	movsd	16(%r11,%rbx), %xmm4    # xmm4 = mem[0],zero
	.loc	12 316 18               # erhs.c:316:18
	mulsd	%xmm9, %xmm1
	.loc	12 316 11 is_stmt 0     # erhs.c:316:11
	subsd	%xmm1, %xmm4
	.loc	12 315 29 is_stmt 1     # erhs.c:315:29
	movsd	%xmm4, 16(%r11,%rbx)
	.loc	12 322 27               # erhs.c:322:27
	mulsd	%xmm6, %xmm15
	.loc	12 322 21 is_stmt 0     # erhs.c:322:21
	subsd	%xmm15, %xmm8
	.loc	12 323 27 is_stmt 1     # erhs.c:323:27
	mulsd	%xmm5, %xmm3
	.loc	12 323 21 is_stmt 0     # erhs.c:323:21
	addsd	%xmm8, %xmm3
	.loc	12 320 31 is_stmt 1     # erhs.c:320:31
	movsd	16(%rcx,%rbx), %xmm1    # xmm1 = mem[0],zero
	.loc	12 321 18               # erhs.c:321:18
	mulsd	%xmm9, %xmm3
	.loc	12 321 11 is_stmt 0     # erhs.c:321:11
	subsd	%xmm3, %xmm1
	.loc	12 320 29 is_stmt 1     # erhs.c:320:29
	movsd	%xmm1, 16(%rcx,%rbx)
	.loc	12 317 27               # erhs.c:317:27
	movapd	%xmm11, %xmm1
	mulsd	%xmm6, %xmm1
	movsd	128(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	12 317 21 is_stmt 0     # erhs.c:317:21
	subsd	%xmm1, %xmm2
	.loc	12 318 27 is_stmt 1     # erhs.c:318:27
	movapd	%xmm7, %xmm1
	mulsd	%xmm10, %xmm1
	.loc	12 318 21 is_stmt 0     # erhs.c:318:21
	addsd	%xmm2, %xmm1
	.loc	12 319 27 is_stmt 1     # erhs.c:319:27
	movapd	%xmm0, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 319 21 is_stmt 0     # erhs.c:319:21
	subsd	%xmm2, %xmm1
	.loc	12 315 31 is_stmt 1     # erhs.c:315:31
	movsd	24(%r11,%rbx), %xmm2    # xmm2 = mem[0],zero
	.loc	12 316 18               # erhs.c:316:18
	mulsd	%xmm9, %xmm1
	.loc	12 316 11 is_stmt 0     # erhs.c:316:11
	subsd	%xmm1, %xmm2
	.loc	12 315 29 is_stmt 1     # erhs.c:315:29
	movsd	%xmm2, 24(%r11,%rbx)
	.loc	12 322 27               # erhs.c:322:27
	mulsd	%xmm6, %xmm7
	.loc	12 322 21 is_stmt 0     # erhs.c:322:21
	subsd	%xmm7, %xmm11
	.loc	12 323 27 is_stmt 1     # erhs.c:323:27
	mulsd	%xmm5, %xmm0
	.loc	12 323 21 is_stmt 0     # erhs.c:323:21
	addsd	%xmm11, %xmm0
	.loc	12 320 31 is_stmt 1     # erhs.c:320:31
	movsd	24(%rcx,%rbx), %xmm1    # xmm1 = mem[0],zero
	.loc	12 321 18               # erhs.c:321:18
	mulsd	%xmm9, %xmm0
	.loc	12 321 11 is_stmt 0     # erhs.c:321:11
	subsd	%xmm0, %xmm1
	.loc	12 320 29 is_stmt 1     # erhs.c:320:29
	movsd	%xmm1, 24(%rcx,%rbx)
	.loc	12 315 31               # erhs.c:315:31
	movsd	32(%r11,%rbx), %xmm0    # xmm0 = mem[0],zero
	.loc	12 317 27               # erhs.c:317:27
	movapd	%xmm14, %xmm1
	mulsd	%xmm6, %xmm1
	movsd	112(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	12 317 21 is_stmt 0     # erhs.c:317:21
	subsd	%xmm1, %xmm2
	.loc	12 318 27 is_stmt 1     # erhs.c:318:27
	movapd	%xmm12, %xmm1
	mulsd	%xmm10, %xmm1
	.loc	12 318 21 is_stmt 0     # erhs.c:318:21
	addsd	%xmm2, %xmm1
	.loc	12 319 27 is_stmt 1     # erhs.c:319:27
	movapd	%xmm13, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	12 319 21 is_stmt 0     # erhs.c:319:21
	subsd	%xmm2, %xmm1
	.loc	12 316 18 is_stmt 1     # erhs.c:316:18
	mulsd	%xmm9, %xmm1
	.loc	12 316 11 is_stmt 0     # erhs.c:316:11
	subsd	%xmm1, %xmm0
	.loc	12 315 29 is_stmt 1     # erhs.c:315:29
	movsd	%xmm0, 32(%r11,%rbx)
	.loc	12 320 31               # erhs.c:320:31
	movsd	32(%rcx,%rbx), %xmm0    # xmm0 = mem[0],zero
	.loc	12 322 27               # erhs.c:322:27
	mulsd	%xmm6, %xmm12
	.loc	12 322 21 is_stmt 0     # erhs.c:322:21
	subsd	%xmm12, %xmm14
	.loc	12 323 27 is_stmt 1     # erhs.c:323:27
	mulsd	%xmm5, %xmm13
	.loc	12 323 21 is_stmt 0     # erhs.c:323:21
	addsd	%xmm14, %xmm13
	.loc	12 321 18 is_stmt 1     # erhs.c:321:18
	mulsd	%xmm9, %xmm13
	.loc	12 321 11 is_stmt 0     # erhs.c:321:11
	subsd	%xmm13, %xmm0
	.loc	12 320 29 is_stmt 1     # erhs.c:320:29
	movsd	%xmm0, 32(%rcx,%rbx)
.Ltmp329:
	.loc	12 214 5 discriminator 1 # erhs.c:214:5
	incq	%r9
	movq	96(%rsp), %rcx          # 8-byte Reload
	addq	$40, %rcx
	movq	8(%rsp), %rax           # 8-byte Reload
	addq	$40, %rax
	movq	64(%rsp), %rdx          # 8-byte Reload
	addq	$40, %rdx
	movq	%r10, %r15
	addq	$40, %r15
	addq	$40, %rdi
	addq	$40, %r12
	.loc	12 214 21 is_stmt 0 discriminator 1 # erhs.c:214:21
	cmpq	256(%rsp), %r9          # 8-byte Folded Reload
	movq	432(%rsp), %r10         # 8-byte Reload
	movapd	320(%rsp), %xmm10       # 16-byte Reload
	movaps	304(%rsp), %xmm11       # 16-byte Reload
	movsd	.LCPI7_5(%rip), %xmm7   # xmm7 = mem[0],zero
	movapd	%xmm7, %xmm8
.Ltmp330:
	.loc	12 223 49 is_stmt 1     # erhs.c:223:49
	movsd	.LCPI7_6(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI7_7(%rip), %xmm9   # xmm9 = mem[0],zero
	jl	.LBB7_34
.Ltmp331:
.LBB7_47:                               # %for.inc1969
                                        #   in Loop: Header=BB7_33 Depth=1
	movq	(%rsp), %rcx            # 8-byte Reload
	movq	%rcx, %rsi
	.loc	12 213 3 discriminator 1 # erhs.c:213:3
	incq	%rsi
	movq	%rsi, (%rsp)            # 8-byte Spill
	movq	200(%rsp), %r11         # 8-byte Reload
	addq	$169000, %r11           # imm = 0x29428
	movq	176(%rsp), %rcx         # 8-byte Reload
	addq	$169000, %rcx           # imm = 0x29428
	movq	168(%rsp), %rbx         # 8-byte Reload
	addq	$169000, %rbx           # imm = 0x29428
	movq	160(%rsp), %rbp         # 8-byte Reload
	addq	$169000, %rbp           # imm = 0x29428
	movq	184(%rsp), %r15         # 8-byte Reload
	addq	$169000, %r15           # imm = 0x29428
	movq	192(%rsp), %r12         # 8-byte Reload
	addq	$169000, %r12           # imm = 0x29428
	.loc	12 213 17 is_stmt 0 discriminator 1 # erhs.c:213:17
	cmpq	472(%rsp), %rsi         # 8-byte Folded Reload
	jl	.LBB7_33
.Ltmp332:
.LBB7_48:                               # %for.end1971
	.loc	12 331 3 is_stmt 1 discriminator 1 # erhs.c:331:3
	movslq	jst(%rip), %r12
	movslq	jend(%rip), %rax
	movq	%rax, 288(%rsp)         # 8-byte Spill
	cmpl	%eax, %r12d
	jge	.LBB7_64
# BB#49:                                # %for.body1975.lr.ph
	movslq	nz(%rip), %rdx
.Ltmp333:
	.loc	12 346 26 discriminator 1 # erhs.c:346:26
	leaq	-1(%rdx), %rsi
.Ltmp334:
	.loc	12 411 13               # erhs.c:411:13
	movsd	dssp(%rip), %xmm2       # xmm2 = mem[0],zero
.Ltmp335:
	.loc	12 421 26 discriminator 1 # erhs.c:421:26
	movapd	%xmm2, 64(%rsp)         # 16-byte Spill
	leaq	-3(%rdx), %rdi
.Ltmp336:
	.loc	12 434 35               # erhs.c:434:35
	leaq	-5(%rdx), %r10
	.loc	12 435 35               # erhs.c:435:35
	leaq	-4(%rdx), %r9
	.loc	12 437 35               # erhs.c:437:35
	leaq	-2(%rdx), %r8
.Ltmp337:
	.loc	12 381 19               # erhs.c:381:19
	movsd	tz1(%rip), %xmm3        # xmm3 = mem[0],zero
	.loc	12 385 13               # erhs.c:385:13
	movsd	tz3(%rip), %xmm4        # xmm4 = mem[0],zero
	movsd	.LCPI7_0(%rip), %xmm5   # xmm5 = mem[0],zero
	.loc	12 385 17 is_stmt 0     # erhs.c:385:17
	mulsd	%xmm4, %xmm5
	.loc	12 381 17 is_stmt 1     # erhs.c:381:17
	movapd	%xmm5, 128(%rsp)        # 16-byte Spill
	movsd	dz1(%rip), %xmm1        # xmm1 = mem[0],zero
	movhpd	dz2(%rip), %xmm1        # xmm1 = xmm1[0],mem[0]
	movapd	%xmm3, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm0, %xmm1
	.loc	12 391 17               # erhs.c:391:17
	movapd	%xmm1, 112(%rsp)        # 16-byte Spill
	movsd	dz3(%rip), %xmm1        # xmm1 = mem[0],zero
	movhpd	dz4(%rip), %xmm1        # xmm1 = xmm1[0],mem[0]
	mulpd	%xmm0, %xmm1
	movapd	%xmm1, 80(%rsp)         # 16-byte Spill
	.loc	12 401 17               # erhs.c:401:17
	mulsd	dz5(%rip), %xmm3
	movapd	%xmm3, 96(%rsp)         # 16-byte Spill
	movsd	.LCPI7_1(%rip), %xmm14  # xmm14 = mem[0],zero
.Ltmp338:
	.loc	12 370 32               # erhs.c:370:32
	mulsd	%xmm4, %xmm14
	movsd	%xmm14, (%rsp)          # 8-byte Spill
	movsd	.LCPI7_2(%rip), %xmm13  # xmm13 = mem[0],zero
	.loc	12 372 11               # erhs.c:372:11
	mulsd	%xmm4, %xmm13
	movsd	%xmm13, 336(%rsp)       # 8-byte Spill
	movsd	.LCPI7_3(%rip), %xmm10  # xmm10 = mem[0],zero
	.loc	12 375 11               # erhs.c:375:11
	mulsd	%xmm4, %xmm10
	movsd	%xmm10, 16(%rsp)        # 8-byte Spill
	movsd	.LCPI7_4(%rip), %xmm11  # xmm11 = mem[0],zero
	.loc	12 376 21               # erhs.c:376:21
	mulsd	%xmm4, %xmm11
.Ltmp339:
	.loc	12 349 15               # erhs.c:349:15
	movsd	%xmm11, 24(%rsp)        # 8-byte Spill
	movsd	tz2(%rip), %xmm12       # xmm12 = mem[0],zero
.Ltmp340:
	.loc	12 331 3 discriminator 1 # erhs.c:331:3
	movapd	%xmm12, 256(%rsp)       # 16-byte Spill
	movslq	ist(%rip), %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	movslq	iend(%rip), %rbx
.Ltmp341:
	.loc	12 349 19               # erhs.c:349:19
	movq	%rbx, 8(%rsp)           # 8-byte Spill
	movapd	%xmm12, %xmm15
	movlhps	%xmm15, %xmm15          # xmm15 = xmm15[0,0]
.Ltmp342:
	.loc	12 368 26               # erhs.c:368:26
	movaps	%xmm15, 432(%rsp)       # 16-byte Spill
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
.Ltmp343:
	.loc	12 390 27               # erhs.c:390:27
	movaps	%xmm4, 144(%rsp)        # 16-byte Spill
	movapd	%xmm5, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 416(%rsp)        # 16-byte Spill
.Ltmp344:
	.loc	12 424 20               # erhs.c:424:20
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 400(%rsp)        # 16-byte Spill
.Ltmp345:
	.loc	12 331 3 discriminator 1 # erhs.c:331:3
	leaq	(%rax,%rax,4), %rcx
	imulq	$2600, %r12, %rax       # imm = 0xA28
	leaq	rsd+32(%rax,%rcx,8), %r11
	leaq	frct+169032(%rax,%rcx,8), %rbx
	leaq	rsd+169032(%rax,%rcx,8), %rbp
	leaq	(%rax,%rcx,8), %r13
	movsd	.LCPI7_5(%rip), %xmm9   # xmm9 = mem[0],zero
.Ltmp346:
	.loc	12 342 49               # erhs.c:342:49
	movsd	.LCPI7_6(%rip), %xmm7   # xmm7 = mem[0],zero
.Ltmp347:
	.loc	12 434 29               # erhs.c:434:29
	imulq	$169000, %r10, %rcx     # imm = 0x29428
	.loc	12 435 29               # erhs.c:435:29
	movq	%rcx, 384(%rsp)         # 8-byte Spill
	imulq	$169000, %r9, %rcx      # imm = 0x29428
	.loc	12 437 29               # erhs.c:437:29
	movq	%rcx, 368(%rsp)         # 8-byte Spill
	imulq	$169000, %r8, %rcx      # imm = 0x29428
	movq	%rcx, 352(%rsp)         # 8-byte Spill
	movsd	.LCPI7_7(%rip), %xmm8   # xmm8 = mem[0],zero
.Ltmp348:
	.p2align	4, 0x90
.LBB7_50:                               # %for.body1975
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_51 Depth 2
                                        #       Child Loop BB7_74 Depth 3
                                        #       Child Loop BB7_75 Depth 3
                                        #       Child Loop BB7_55 Depth 3
                                        #       Child Loop BB7_58 Depth 3
                                        #       Child Loop BB7_61 Depth 3
	movq	%r13, 304(%rsp)         # 8-byte Spill
	movq	%rbp, 320(%rsp)         # 8-byte Spill
	movq	%rbx, 48(%rsp)          # 8-byte Spill
	movq	%r11, 56(%rsp)          # 8-byte Spill
	movq	272(%rsp), %r14         # 8-byte Reload
	.loc	12 332 5 discriminator 1 # erhs.c:332:5
	movq	8(%rsp), %rcx           # 8-byte Reload
	cmpl	%ecx, %r14d
	movq	%rbp, %r8
	movq	%rbx, %r9
	movq	%r11, %r10
	movq	%r14, %r11
	jge	.LBB7_63
	.p2align	4, 0x90
.LBB7_51:                               # %for.cond1980.preheader
                                        #   Parent Loop BB7_50 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB7_74 Depth 3
                                        #       Child Loop BB7_75 Depth 3
                                        #       Child Loop BB7_55 Depth 3
                                        #       Child Loop BB7_58 Depth 3
                                        #       Child Loop BB7_61 Depth 3
	testl	%edx, %edx
	movq	%r10, %rax
	movl	$flux+32, %ecx
	movl	$0, %ebx
	jle	.LBB7_52
	.p2align	4, 0x90
.LBB7_74:                               # %for.body1983
                                        #   Parent Loop BB7_50 Depth=1
                                        #     Parent Loop BB7_51 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp349:
	.loc	12 334 22               # erhs.c:334:22
	movq	-8(%rax), %rbp
	.loc	12 334 20 is_stmt 0     # erhs.c:334:20
	movq	%rbp, -32(%rcx)
	.loc	12 335 33 is_stmt 1     # erhs.c:335:33
	movsd	-32(%rax), %xmm2        # xmm2 = mem[0],zero
	.loc	12 335 15 is_stmt 0     # erhs.c:335:15
	movd	%rbp, %xmm1
	.loc	12 335 31               # erhs.c:335:31
	movapd	%xmm1, %xmm0
	divsd	%xmm2, %xmm0
.Ltmp350:
	#DEBUG_VALUE: erhs:u41 <- %XMM0
	.loc	12 336 23 is_stmt 1     # erhs.c:336:23
	movupd	-24(%rax), %xmm3
	.loc	12 337 39               # erhs.c:337:39
	movapd	%xmm3, %xmm4
	.loc	12 340 38               # erhs.c:340:38
	movapd	%xmm0, %xmm5
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	mulpd	%xmm3, %xmm5
	.loc	12 336 39               # erhs.c:336:39
	mulsd	%xmm3, %xmm3
	.loc	12 337 39               # erhs.c:337:39
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	mulsd	%xmm4, %xmm4
	.loc	12 342 38               # erhs.c:342:38
	movapd	%xmm0, %xmm6
	.loc	12 337 21               # erhs.c:337:21
	addsd	%xmm3, %xmm4
	.loc	12 342 38               # erhs.c:342:38
	mulsd	%xmm1, %xmm6
	.loc	12 338 39               # erhs.c:338:39
	mulsd	%xmm1, %xmm1
	.loc	12 338 21 is_stmt 0     # erhs.c:338:21
	addsd	%xmm4, %xmm1
	.loc	12 336 18 is_stmt 1     # erhs.c:336:18
	mulsd	%xmm9, %xmm1
	.loc	12 339 18               # erhs.c:339:18
	divsd	%xmm2, %xmm1
.Ltmp351:
	#DEBUG_VALUE: erhs:q <- %XMM1
	.loc	12 340 20               # erhs.c:340:20
	movupd	%xmm5, -24(%rcx)
	.loc	12 342 53               # erhs.c:342:53
	movsd	(%rax), %xmm2           # xmm2 = mem[0],zero
	.loc	12 342 69 is_stmt 0     # erhs.c:342:69
	movapd	%xmm2, %xmm3
	subsd	%xmm1, %xmm3
	.loc	12 342 49               # erhs.c:342:49
	mulsd	%xmm7, %xmm3
	.loc	12 342 44               # erhs.c:342:44
	addsd	%xmm6, %xmm3
	.loc	12 343 27 is_stmt 1     # erhs.c:343:27
	mulsd	%xmm8, %xmm2
	.loc	12 342 20               # erhs.c:342:20
	movsd	%xmm3, -8(%rcx)
	.loc	12 343 50               # erhs.c:343:50
	mulsd	%xmm7, %xmm1
.Ltmp352:
	.loc	12 343 45 is_stmt 0     # erhs.c:343:45
	subsd	%xmm1, %xmm2
	.loc	12 343 56               # erhs.c:343:56
	mulsd	%xmm0, %xmm2
	.loc	12 343 20               # erhs.c:343:20
	movsd	%xmm2, (%rcx)
.Ltmp353:
	.loc	12 333 7 is_stmt 1 discriminator 1 # erhs.c:333:7
	incq	%rbx
	.loc	12 333 21 is_stmt 0 discriminator 1 # erhs.c:333:21
	addq	$40, %rcx
	addq	$169000, %rax           # imm = 0x29428
	cmpq	%rdx, %rbx
	jl	.LBB7_74
.Ltmp354:
.LBB7_52:                               # %for.cond2125.preheader
                                        #   in Loop: Header=BB7_51 Depth=2
	movapd	%xmm11, %xmm5
	movapd	%xmm10, %xmm4
	movapd	%xmm13, %xmm8
	movapd	%xmm14, %xmm9
	cmpl	$1, %esi
	movl	$flux+112, %eax
	movq	%r9, %rcx
	movl	$1, %ebx
	jle	.LBB7_53
	.p2align	4, 0x90
.LBB7_75:                               # %for.cond2130.preheader
                                        #   Parent Loop BB7_50 Depth=1
                                        #     Parent Loop BB7_51 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp355:
	.loc	12 346 7 is_stmt 1 discriminator 1 # erhs.c:346:7
	incq	%rbx
.Ltmp356:
	.loc	12 348 31               # erhs.c:348:31
	movupd	-32(%rcx), %xmm0
	.loc	12 349 23               # erhs.c:349:23
	movupd	-32(%rax), %xmm1
	.loc	12 349 38 is_stmt 0     # erhs.c:349:38
	movupd	-112(%rax), %xmm2
	.loc	12 349 36               # erhs.c:349:36
	subpd	%xmm2, %xmm1
	.loc	12 349 19               # erhs.c:349:19
	mulpd	%xmm15, %xmm1
	.loc	12 349 13               # erhs.c:349:13
	subpd	%xmm1, %xmm0
	.loc	12 348 28 is_stmt 1     # erhs.c:348:28
	movupd	%xmm0, -32(%rcx)
	.loc	12 348 31 is_stmt 0     # erhs.c:348:31
	movupd	-16(%rcx), %xmm0
	.loc	12 349 23 is_stmt 1     # erhs.c:349:23
	movupd	-16(%rax), %xmm1
	.loc	12 349 38 is_stmt 0     # erhs.c:349:38
	movupd	-96(%rax), %xmm2
	.loc	12 349 36               # erhs.c:349:36
	subpd	%xmm2, %xmm1
	.loc	12 349 19               # erhs.c:349:19
	mulpd	%xmm15, %xmm1
	.loc	12 349 13               # erhs.c:349:13
	subpd	%xmm1, %xmm0
	.loc	12 348 28 is_stmt 1     # erhs.c:348:28
	movupd	%xmm0, -16(%rcx)
	.loc	12 348 31 is_stmt 0     # erhs.c:348:31
	movsd	(%rcx), %xmm0           # xmm0 = mem[0],zero
	.loc	12 349 23 is_stmt 1     # erhs.c:349:23
	movsd	(%rax), %xmm1           # xmm1 = mem[0],zero
	.loc	12 349 36 is_stmt 0     # erhs.c:349:36
	subsd	-80(%rax), %xmm1
	.loc	12 349 19               # erhs.c:349:19
	mulsd	%xmm12, %xmm1
	.loc	12 349 13               # erhs.c:349:13
	subsd	%xmm1, %xmm0
	.loc	12 348 28 is_stmt 1     # erhs.c:348:28
	movsd	%xmm0, (%rcx)
.Ltmp357:
	.loc	12 346 21 discriminator 1 # erhs.c:346:21
	addq	$169000, %rcx           # imm = 0x29428
	addq	$40, %rax
	cmpq	%rsi, %rbx
	jl	.LBB7_75
.Ltmp358:
.LBB7_53:                               # %for.cond2169.preheader
                                        #   in Loop: Header=BB7_51 Depth=2
	.loc	12 353 7 discriminator 1 # erhs.c:353:7
	cmpl	$2, %edx
	movapd	%xmm4, %xmm12
	movapd	%xmm5, %xmm15
.Ltmp359:
	.loc	12 354 19               # erhs.c:354:19
	movsd	.LCPI7_8(%rip), %xmm13  # xmm13 = mem[0],zero
	movapd	144(%rsp), %xmm14       # 16-byte Reload
	jl	.LBB7_56
# BB#54:                                # %for.body2172.lr.ph
                                        #   in Loop: Header=BB7_51 Depth=2
	.loc	12 361 21               # erhs.c:361:21
	leaq	(%r11,%r11,4), %rax
	imulq	$2600, %r12, %rcx       # imm = 0xA28
	movsd	rsd(%rcx,%rax,8), %xmm10 # xmm10 = mem[0],zero
	.loc	12 363 24               # erhs.c:363:24
	movupd	rsd+8(%rcx,%rax,8), %xmm5
	.loc	12 365 24               # erhs.c:365:24
	movsd	rsd+24(%rcx,%rax,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 366 24               # erhs.c:366:24
	movsd	rsd+32(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movl	$flux+72, %eax
	movq	%r8, %rcx
	movl	$1, %ebx
	.p2align	4, 0x90
.LBB7_55:                               # %for.body2172
                                        #   Parent Loop BB7_50 Depth=1
                                        #     Parent Loop BB7_51 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 361 19               # erhs.c:361:19
	movapd	%xmm13, %xmm3
	divsd	%xmm10, %xmm3
.Ltmp360:
	#DEBUG_VALUE: erhs:tmp <- %XMM3
	.loc	12 354 21               # erhs.c:354:21
	movsd	-32(%rcx), %xmm10       # xmm10 = mem[0],zero
	.loc	12 358 22               # erhs.c:358:22
	movsd	-8(%rcx), %xmm11        # xmm11 = mem[0],zero
	.loc	12 354 19               # erhs.c:354:19
	movapd	%xmm13, %xmm2
	divsd	%xmm10, %xmm2
.Ltmp361:
	#DEBUG_VALUE: erhs:tmp <- %XMM2
	.loc	12 363 22               # erhs.c:363:22
	movapd	%xmm3, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	mulpd	%xmm5, %xmm1
	.loc	12 356 22               # erhs.c:356:22
	movupd	-24(%rcx), %xmm5
	.loc	12 356 20 is_stmt 0     # erhs.c:356:20
	movapd	%xmm2, %xmm7
	movlhps	%xmm7, %xmm7            # xmm7 = xmm7[0,0]
	mulpd	%xmm5, %xmm7
	.loc	12 358 20 is_stmt 1     # erhs.c:358:20
	movapd	%xmm2, %xmm6
	mulsd	%xmm11, %xmm6
.Ltmp362:
	#DEBUG_VALUE: erhs:u41k <- %XMM6
	.loc	12 365 22               # erhs.c:365:22
	mulsd	%xmm3, %xmm4
.Ltmp363:
	#DEBUG_VALUE: erhs:u41km1 <- %XMM4
	.loc	12 366 22               # erhs.c:366:22
	mulsd	%xmm0, %xmm3
.Ltmp364:
	#DEBUG_VALUE: erhs:u51km1 <- %XMM3
	.loc	12 368 35               # erhs.c:368:35
	movapd	%xmm7, %xmm0
	subpd	%xmm1, %xmm0
	.loc	12 368 26 is_stmt 0     # erhs.c:368:26
	mulpd	%xmm14, %xmm0
	.loc	12 368 20               # erhs.c:368:20
	movupd	%xmm0, -24(%rax)
	.loc	12 370 47 is_stmt 1     # erhs.c:370:47
	movapd	%xmm6, %xmm0
	subsd	%xmm4, %xmm0
	.loc	12 370 38 is_stmt 0     # erhs.c:370:38
	mulsd	%xmm9, %xmm0
	.loc	12 370 20               # erhs.c:370:20
	movsd	%xmm0, -8(%rax)
	.loc	12 372 27 is_stmt 1     # erhs.c:372:27
	movapd	%xmm7, %xmm0
	mulsd	%xmm0, %xmm0
	.loc	12 372 43 is_stmt 0     # erhs.c:372:43
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	mulsd	%xmm7, %xmm7
	.loc	12 372 37               # erhs.c:372:37
	addsd	%xmm0, %xmm7
	.loc	12 373 29 is_stmt 1     # erhs.c:373:29
	movapd	%xmm1, %xmm0
	mulsd	%xmm0, %xmm0
	.loc	12 373 45 is_stmt 0     # erhs.c:373:45
	shufpd	$1, %xmm1, %xmm1        # xmm1 = xmm1[1,0]
	mulsd	%xmm1, %xmm1
	.loc	12 373 37               # erhs.c:373:37
	addsd	%xmm0, %xmm1
	.loc	12 372 59 is_stmt 1     # erhs.c:372:59
	mulsd	%xmm6, %xmm6
.Ltmp365:
	.loc	12 372 53 is_stmt 0     # erhs.c:372:53
	addsd	%xmm6, %xmm7
	.loc	12 373 61 is_stmt 1     # erhs.c:373:61
	mulsd	%xmm4, %xmm4
.Ltmp366:
	.loc	12 373 53 is_stmt 0     # erhs.c:373:53
	addsd	%xmm4, %xmm1
	.loc	12 373 19               # erhs.c:373:19
	subsd	%xmm1, %xmm7
	.loc	12 375 31 is_stmt 1     # erhs.c:375:31
	subsd	%xmm4, %xmm6
	.loc	12 372 17               # erhs.c:372:17
	mulsd	%xmm8, %xmm7
	.loc	12 375 17               # erhs.c:375:17
	mulsd	%xmm12, %xmm6
	.loc	12 374 11               # erhs.c:374:11
	addsd	%xmm7, %xmm6
	.loc	12 359 22               # erhs.c:359:22
	movsd	(%rcx), %xmm0           # xmm0 = mem[0],zero
	.loc	12 359 20 is_stmt 0     # erhs.c:359:20
	mulsd	%xmm0, %xmm2
.Ltmp367:
	#DEBUG_VALUE: erhs:u51k <- %XMM2
	.loc	12 376 36 is_stmt 1     # erhs.c:376:36
	subsd	%xmm3, %xmm2
.Ltmp368:
	.loc	12 376 27 is_stmt 0     # erhs.c:376:27
	mulsd	%xmm15, %xmm2
	.loc	12 376 11               # erhs.c:376:11
	addsd	%xmm6, %xmm2
	.loc	12 371 20 is_stmt 1     # erhs.c:371:20
	movsd	%xmm2, (%rax)
.Ltmp369:
	.loc	12 353 7 discriminator 1 # erhs.c:353:7
	incq	%rbx
	.loc	12 353 21 is_stmt 0 discriminator 1 # erhs.c:353:21
	addq	$169000, %rcx           # imm = 0x29428
	addq	$40, %rax
	cmpq	%rdx, %rbx
.Ltmp370:
	.loc	12 365 24 is_stmt 1     # erhs.c:365:24
	movapd	%xmm11, %xmm4
	jl	.LBB7_55
.Ltmp371:
.LBB7_56:                               # %for.cond2303.preheader
                                        #   in Loop: Header=BB7_51 Depth=2
	.loc	12 379 7 discriminator 1 # erhs.c:379:7
	cmpl	$2, %esi
	movapd	80(%rsp), %xmm13        # 16-byte Reload
	movapd	416(%rsp), %xmm8        # 16-byte Reload
	movapd	96(%rsp), %xmm9         # 16-byte Reload
	movapd	112(%rsp), %xmm12       # 16-byte Reload
	movapd	128(%rsp), %xmm14       # 16-byte Reload
	jl	.LBB7_59
# BB#57:                                # %for.body2307.lr.ph
                                        #   in Loop: Header=BB7_51 Depth=2
.Ltmp372:
	.loc	12 382 34               # erhs.c:382:34
	leaq	(%r11,%r11,4), %rax
	imulq	$2600, %r12, %rcx       # imm = 0xA28
	.loc	12 385 46               # erhs.c:385:46
	movsd	flux+48(%rip), %xmm2    # xmm2 = mem[0],zero
	.loc	12 382 34               # erhs.c:382:34
	movupd	rsd+169000(%rcx,%rax,8), %xmm3
	.loc	12 390 46               # erhs.c:390:46
	movupd	flux+56(%rip), %xmm1
	.loc	12 392 34               # erhs.c:392:34
	movupd	rsd+169016(%rcx,%rax,8), %xmm6
	.loc	12 400 46               # erhs.c:400:46
	movsd	flux+72(%rip), %xmm5    # xmm5 = mem[0],zero
	.loc	12 402 34               # erhs.c:402:34
	movsd	rsd+169032(%rcx,%rax,8), %xmm4 # xmm4 = mem[0],zero
	movl	$flux+112, %eax
	movq	%r13, %rcx
	movl	$1, %ebx
.Ltmp373:
	.p2align	4, 0x90
.LBB7_58:                               # %for.body2307
                                        #   Parent Loop BB7_50 Depth=1
                                        #     Parent Loop BB7_51 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 379 7 discriminator 1 # erhs.c:379:7
	incq	%rbx
.Ltmp374:
	.loc	12 385 31               # erhs.c:385:31
	movsd	-24(%rax), %xmm10       # xmm10 = mem[0],zero
	.loc	12 385 44 is_stmt 0     # erhs.c:385:44
	movapd	%xmm10, %xmm0
	subsd	%xmm2, %xmm0
	.loc	12 385 27               # erhs.c:385:27
	mulsd	%xmm14, %xmm0
	.loc	12 385 11               # erhs.c:385:11
	addsd	frct+169008(%rcx), %xmm0
	.loc	12 381 34 is_stmt 1     # erhs.c:381:34
	movupd	rsd+338000(%rcx), %xmm11
	.loc	12 382 32               # erhs.c:382:32
	addpd	%xmm3, %xmm3
	.loc	12 382 26 is_stmt 0     # erhs.c:382:26
	movapd	%xmm11, %xmm2
	subpd	%xmm3, %xmm2
	.loc	12 383 34 is_stmt 1     # erhs.c:383:34
	movupd	rsd(%rcx), %xmm3
	.loc	12 383 26 is_stmt 0     # erhs.c:383:26
	addpd	%xmm2, %xmm3
	.loc	12 381 23 is_stmt 1     # erhs.c:381:23
	mulpd	%xmm12, %xmm3
	.loc	12 381 11 is_stmt 0     # erhs.c:381:11
	movsd	frct+169000(%rcx), %xmm2 # xmm2 = mem[0],zero
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	addpd	%xmm3, %xmm2
	.loc	12 380 26 is_stmt 1     # erhs.c:380:26
	movupd	%xmm2, frct+169000(%rcx)
	.loc	12 389 28               # erhs.c:389:28
	movupd	frct+169016(%rcx), %xmm0
	.loc	12 390 31               # erhs.c:390:31
	movupd	-16(%rax), %xmm7
	.loc	12 390 44 is_stmt 0     # erhs.c:390:44
	movapd	%xmm7, %xmm2
	subpd	%xmm1, %xmm2
	.loc	12 390 27               # erhs.c:390:27
	mulpd	%xmm8, %xmm2
	.loc	12 390 11               # erhs.c:390:11
	addpd	%xmm0, %xmm2
	.loc	12 391 34 is_stmt 1     # erhs.c:391:34
	movupd	rsd+338016(%rcx), %xmm0
	.loc	12 392 32               # erhs.c:392:32
	addpd	%xmm6, %xmm6
	.loc	12 392 26 is_stmt 0     # erhs.c:392:26
	movapd	%xmm0, %xmm1
	subpd	%xmm6, %xmm1
	.loc	12 393 34 is_stmt 1     # erhs.c:393:34
	movupd	rsd+16(%rcx), %xmm3
	.loc	12 393 26 is_stmt 0     # erhs.c:393:26
	addpd	%xmm1, %xmm3
	.loc	12 391 23 is_stmt 1     # erhs.c:391:23
	mulpd	%xmm13, %xmm3
	.loc	12 391 11 is_stmt 0     # erhs.c:391:11
	addpd	%xmm2, %xmm3
	.loc	12 389 26 is_stmt 1     # erhs.c:389:26
	movupd	%xmm3, frct+169016(%rcx)
	.loc	12 400 31               # erhs.c:400:31
	movsd	(%rax), %xmm1           # xmm1 = mem[0],zero
	.loc	12 400 44 is_stmt 0     # erhs.c:400:44
	movapd	%xmm1, %xmm2
	subsd	%xmm5, %xmm2
	.loc	12 400 27               # erhs.c:400:27
	mulsd	%xmm14, %xmm2
	.loc	12 400 11               # erhs.c:400:11
	addsd	frct+169032(%rcx), %xmm2
	.loc	12 401 34 is_stmt 1     # erhs.c:401:34
	movsd	rsd+338032(%rcx), %xmm3 # xmm3 = mem[0],zero
	.loc	12 402 32               # erhs.c:402:32
	addsd	%xmm4, %xmm4
	.loc	12 402 26 is_stmt 0     # erhs.c:402:26
	movapd	%xmm3, %xmm5
	subsd	%xmm4, %xmm5
	.loc	12 403 26 is_stmt 1     # erhs.c:403:26
	addsd	rsd+32(%rcx), %xmm5
	.loc	12 401 23               # erhs.c:401:23
	mulsd	%xmm9, %xmm5
	.loc	12 401 11 is_stmt 0     # erhs.c:401:11
	addsd	%xmm2, %xmm5
	.loc	12 399 26 is_stmt 1     # erhs.c:399:26
	movsd	%xmm5, frct+169032(%rcx)
.Ltmp375:
	.loc	12 379 21 discriminator 1 # erhs.c:379:21
	addq	$169000, %rcx           # imm = 0x29428
	addq	$40, %rax
	cmpq	%rsi, %rbx
.Ltmp376:
	.loc	12 402 34               # erhs.c:402:34
	movapd	%xmm3, %xmm4
	.loc	12 400 46               # erhs.c:400:46
	movapd	%xmm1, %xmm5
	.loc	12 385 46               # erhs.c:385:46
	movapd	%xmm10, %xmm2
	.loc	12 382 34               # erhs.c:382:34
	movapd	%xmm11, %xmm3
	.loc	12 390 46               # erhs.c:390:46
	movapd	%xmm7, %xmm1
	.loc	12 392 34               # erhs.c:392:34
	movapd	%xmm0, %xmm6
	jl	.LBB7_58
.Ltmp377:
.LBB7_59:                               # %for.body2577
                                        #   in Loop: Header=BB7_51 Depth=2
	.loc	12 410 28               # erhs.c:410:28
	imulq	$2600, %r12, %r14       # imm = 0xA28
	cmpl	$3, %edi
	leaq	(%r11,%r11,4), %r15
	movsd	frct+169000(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 411 30               # erhs.c:411:30
	movsd	rsd+169000(%r14,%r15,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 411 28 is_stmt 0     # erhs.c:411:28
	movapd	%xmm1, %xmm2
	movsd	.LCPI7_9(%rip), %xmm5   # xmm5 = mem[0],zero
	mulsd	%xmm5, %xmm2
	.loc	12 412 30 is_stmt 1     # erhs.c:412:30
	movsd	rsd+338000(%r14,%r15,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 412 28 is_stmt 0     # erhs.c:412:28
	movapd	%xmm3, %xmm4
	movsd	.LCPI7_10(%rip), %xmm6  # xmm6 = mem[0],zero
	mulsd	%xmm6, %xmm4
	.loc	12 412 22               # erhs.c:412:22
	subsd	%xmm4, %xmm2
	.loc	12 413 30 is_stmt 1     # erhs.c:413:30
	movsd	rsd+507000(%r14,%r15,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 413 22 is_stmt 0     # erhs.c:413:22
	addsd	%xmm4, %xmm2
	movapd	64(%rsp), %xmm7         # 16-byte Reload
	.loc	12 411 18 is_stmt 1     # erhs.c:411:18
	mulsd	%xmm7, %xmm2
	.loc	12 411 11 is_stmt 0     # erhs.c:411:11
	subsd	%xmm2, %xmm0
	.loc	12 410 26 is_stmt 1     # erhs.c:410:26
	movsd	%xmm0, frct+169000(%r14,%r15,8)
	.loc	12 414 28               # erhs.c:414:28
	movsd	frct+338000(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 415 28               # erhs.c:415:28
	mulsd	%xmm6, %xmm1
	.loc	12 416 28               # erhs.c:416:28
	movsd	.LCPI7_11(%rip), %xmm2  # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm8
	mulsd	%xmm8, %xmm3
	.loc	12 415 28               # erhs.c:415:28
	subsd	%xmm1, %xmm3
	.loc	12 417 28               # erhs.c:417:28
	mulsd	%xmm6, %xmm4
	.loc	12 417 22 is_stmt 0     # erhs.c:417:22
	subsd	%xmm4, %xmm3
	.loc	12 418 22 is_stmt 1     # erhs.c:418:22
	addsd	rsd+676000(%r14,%r15,8), %xmm3
	.loc	12 415 18               # erhs.c:415:18
	mulsd	%xmm7, %xmm3
	.loc	12 415 11 is_stmt 0     # erhs.c:415:11
	subsd	%xmm3, %xmm0
	.loc	12 414 26 is_stmt 1     # erhs.c:414:26
	movsd	%xmm0, frct+338000(%r14,%r15,8)
	.loc	12 410 28               # erhs.c:410:28
	movsd	frct+169008(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 411 30               # erhs.c:411:30
	movsd	rsd+169008(%r14,%r15,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 411 28 is_stmt 0     # erhs.c:411:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm5, %xmm2
	.loc	12 412 30 is_stmt 1     # erhs.c:412:30
	movsd	rsd+338008(%r14,%r15,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 412 28 is_stmt 0     # erhs.c:412:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm6, %xmm4
	.loc	12 412 22               # erhs.c:412:22
	subsd	%xmm4, %xmm2
	.loc	12 413 30 is_stmt 1     # erhs.c:413:30
	movsd	rsd+507008(%r14,%r15,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 413 22 is_stmt 0     # erhs.c:413:22
	addsd	%xmm4, %xmm2
	.loc	12 411 18 is_stmt 1     # erhs.c:411:18
	mulsd	%xmm7, %xmm2
	.loc	12 411 11 is_stmt 0     # erhs.c:411:11
	subsd	%xmm2, %xmm0
	.loc	12 410 26 is_stmt 1     # erhs.c:410:26
	movsd	%xmm0, frct+169008(%r14,%r15,8)
	.loc	12 414 28               # erhs.c:414:28
	movsd	frct+338008(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 415 28               # erhs.c:415:28
	mulsd	%xmm6, %xmm1
	.loc	12 416 28               # erhs.c:416:28
	mulsd	%xmm8, %xmm3
	.loc	12 415 28               # erhs.c:415:28
	subsd	%xmm1, %xmm3
	.loc	12 417 28               # erhs.c:417:28
	mulsd	%xmm6, %xmm4
	.loc	12 417 22 is_stmt 0     # erhs.c:417:22
	subsd	%xmm4, %xmm3
	.loc	12 418 22 is_stmt 1     # erhs.c:418:22
	addsd	rsd+676008(%r14,%r15,8), %xmm3
	.loc	12 415 18               # erhs.c:415:18
	mulsd	%xmm7, %xmm3
	.loc	12 415 11 is_stmt 0     # erhs.c:415:11
	subsd	%xmm3, %xmm0
	.loc	12 414 26 is_stmt 1     # erhs.c:414:26
	movsd	%xmm0, frct+338008(%r14,%r15,8)
	.loc	12 410 28               # erhs.c:410:28
	movsd	frct+169016(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 411 30               # erhs.c:411:30
	movsd	rsd+169016(%r14,%r15,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 411 28 is_stmt 0     # erhs.c:411:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm5, %xmm2
	.loc	12 412 30 is_stmt 1     # erhs.c:412:30
	movsd	rsd+338016(%r14,%r15,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 412 28 is_stmt 0     # erhs.c:412:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm6, %xmm4
	.loc	12 412 22               # erhs.c:412:22
	subsd	%xmm4, %xmm2
	.loc	12 413 30 is_stmt 1     # erhs.c:413:30
	movsd	rsd+507016(%r14,%r15,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 413 22 is_stmt 0     # erhs.c:413:22
	addsd	%xmm4, %xmm2
	.loc	12 411 18 is_stmt 1     # erhs.c:411:18
	mulsd	%xmm7, %xmm2
	.loc	12 411 11 is_stmt 0     # erhs.c:411:11
	subsd	%xmm2, %xmm0
	.loc	12 410 26 is_stmt 1     # erhs.c:410:26
	movsd	%xmm0, frct+169016(%r14,%r15,8)
	.loc	12 414 28               # erhs.c:414:28
	movsd	frct+338016(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 415 28               # erhs.c:415:28
	mulsd	%xmm6, %xmm1
	.loc	12 416 28               # erhs.c:416:28
	mulsd	%xmm8, %xmm3
	.loc	12 415 28               # erhs.c:415:28
	subsd	%xmm1, %xmm3
	.loc	12 417 28               # erhs.c:417:28
	mulsd	%xmm6, %xmm4
	.loc	12 417 22 is_stmt 0     # erhs.c:417:22
	subsd	%xmm4, %xmm3
	.loc	12 418 22 is_stmt 1     # erhs.c:418:22
	addsd	rsd+676016(%r14,%r15,8), %xmm3
	.loc	12 415 18               # erhs.c:415:18
	mulsd	%xmm7, %xmm3
	.loc	12 415 11 is_stmt 0     # erhs.c:415:11
	subsd	%xmm3, %xmm0
	.loc	12 414 26 is_stmt 1     # erhs.c:414:26
	movsd	%xmm0, frct+338016(%r14,%r15,8)
	.loc	12 410 28               # erhs.c:410:28
	movsd	frct+169024(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 411 30               # erhs.c:411:30
	movsd	rsd+169024(%r14,%r15,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 411 28 is_stmt 0     # erhs.c:411:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm5, %xmm2
	.loc	12 412 30 is_stmt 1     # erhs.c:412:30
	movsd	rsd+338024(%r14,%r15,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 412 28 is_stmt 0     # erhs.c:412:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm6, %xmm4
	.loc	12 412 22               # erhs.c:412:22
	subsd	%xmm4, %xmm2
	.loc	12 413 30 is_stmt 1     # erhs.c:413:30
	movsd	rsd+507024(%r14,%r15,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 413 22 is_stmt 0     # erhs.c:413:22
	addsd	%xmm4, %xmm2
	.loc	12 411 18 is_stmt 1     # erhs.c:411:18
	mulsd	%xmm7, %xmm2
	.loc	12 411 11 is_stmt 0     # erhs.c:411:11
	subsd	%xmm2, %xmm0
	.loc	12 410 26 is_stmt 1     # erhs.c:410:26
	movsd	%xmm0, frct+169024(%r14,%r15,8)
	.loc	12 414 28               # erhs.c:414:28
	movsd	frct+338024(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 415 28               # erhs.c:415:28
	mulsd	%xmm6, %xmm1
	.loc	12 416 28               # erhs.c:416:28
	mulsd	%xmm8, %xmm3
	.loc	12 415 28               # erhs.c:415:28
	subsd	%xmm1, %xmm3
	.loc	12 417 28               # erhs.c:417:28
	mulsd	%xmm6, %xmm4
	.loc	12 417 22 is_stmt 0     # erhs.c:417:22
	subsd	%xmm4, %xmm3
	.loc	12 418 22 is_stmt 1     # erhs.c:418:22
	addsd	rsd+676024(%r14,%r15,8), %xmm3
	.loc	12 415 18               # erhs.c:415:18
	mulsd	%xmm7, %xmm3
	.loc	12 415 11 is_stmt 0     # erhs.c:415:11
	subsd	%xmm3, %xmm0
	.loc	12 414 26 is_stmt 1     # erhs.c:414:26
	movsd	%xmm0, frct+338024(%r14,%r15,8)
	.loc	12 410 28               # erhs.c:410:28
	movsd	frct+169032(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 411 30               # erhs.c:411:30
	movsd	rsd+169032(%r14,%r15,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 411 28 is_stmt 0     # erhs.c:411:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm5, %xmm2
	.loc	12 412 30 is_stmt 1     # erhs.c:412:30
	movsd	rsd+338032(%r14,%r15,8), %xmm3 # xmm3 = mem[0],zero
	.loc	12 412 28 is_stmt 0     # erhs.c:412:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm6, %xmm4
	.loc	12 412 22               # erhs.c:412:22
	subsd	%xmm4, %xmm2
	.loc	12 413 30 is_stmt 1     # erhs.c:413:30
	movsd	rsd+507032(%r14,%r15,8), %xmm4 # xmm4 = mem[0],zero
	.loc	12 413 22 is_stmt 0     # erhs.c:413:22
	addsd	%xmm4, %xmm2
	.loc	12 411 18 is_stmt 1     # erhs.c:411:18
	mulsd	%xmm7, %xmm2
	.loc	12 411 11 is_stmt 0     # erhs.c:411:11
	subsd	%xmm2, %xmm0
	.loc	12 410 26 is_stmt 1     # erhs.c:410:26
	movsd	%xmm0, frct+169032(%r14,%r15,8)
	.loc	12 414 28               # erhs.c:414:28
	movsd	frct+338032(%r14,%r15,8), %xmm0 # xmm0 = mem[0],zero
	.loc	12 415 28               # erhs.c:415:28
	mulsd	%xmm6, %xmm1
	.loc	12 416 28               # erhs.c:416:28
	mulsd	%xmm8, %xmm3
	.loc	12 415 28               # erhs.c:415:28
	subsd	%xmm1, %xmm3
	.loc	12 417 28               # erhs.c:417:28
	mulsd	%xmm6, %xmm4
	.loc	12 417 22 is_stmt 0     # erhs.c:417:22
	subsd	%xmm4, %xmm3
	.loc	12 418 22 is_stmt 1     # erhs.c:418:22
	addsd	rsd+676032(%r14,%r15,8), %xmm3
	.loc	12 415 18               # erhs.c:415:18
	mulsd	%xmm7, %xmm3
	.loc	12 415 11 is_stmt 0     # erhs.c:415:11
	subsd	%xmm3, %xmm0
	#DEBUG_VALUE: erhs:m <- 0
	.loc	12 414 26 is_stmt 1     # erhs.c:414:26
	movsd	%xmm0, frct+338032(%r14,%r15,8)
	movapd	400(%rsp), %xmm2        # 16-byte Reload
.Ltmp378:
	.loc	12 425 29               # erhs.c:425:29
	movapd	.LCPI7_12(%rip), %xmm9  # xmm9 = [4.000000e+00,4.000000e+00]
	movapd	%xmm9, %xmm4
	.loc	12 426 29               # erhs.c:426:29
	movapd	.LCPI7_13(%rip), %xmm8  # xmm8 = [6.000000e+00,6.000000e+00]
	movapd	%xmm8, %xmm7
	jle	.LBB7_62
# BB#60:                                # %for.cond2666.preheader.lr.ph
                                        #   in Loop: Header=BB7_51 Depth=2
	.loc	12 424 31               # erhs.c:424:31
	movsd	rsd+169008(%r14,%r15,8), %xmm10 # xmm10 = mem[0],zero
	.loc	12 425 31               # erhs.c:425:31
	movsd	rsd+338008(%r14,%r15,8), %xmm1 # xmm1 = mem[0],zero
	.loc	12 426 31               # erhs.c:426:31
	movupd	rsd+507000(%r14,%r15,8), %xmm11
	.loc	12 427 31               # erhs.c:427:31
	movupd	rsd+676000(%r14,%r15,8), %xmm15
	.loc	12 424 31               # erhs.c:424:31
	movupd	rsd+169016(%r14,%r15,8), %xmm12
	.loc	12 425 31               # erhs.c:425:31
	movupd	rsd+338016(%r14,%r15,8), %xmm8
	.loc	12 426 31               # erhs.c:426:31
	movupd	rsd+507016(%r14,%r15,8), %xmm13
	.loc	12 427 31               # erhs.c:427:31
	movupd	rsd+676016(%r14,%r15,8), %xmm9
	.loc	12 424 31               # erhs.c:424:31
	movsd	rsd+169032(%r14,%r15,8), %xmm5 # xmm5 = mem[0],zero
	.loc	12 425 31               # erhs.c:425:31
	movsd	rsd+338032(%r14,%r15,8), %xmm14 # xmm14 = mem[0],zero
	movq	%r13, %rax
	movl	$3, %ecx
	.p2align	4, 0x90
.LBB7_61:                               # %for.cond2666.preheader
                                        #   Parent Loop BB7_50 Depth=1
                                        #     Parent Loop BB7_51 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	12 425 23 is_stmt 0     # erhs.c:425:23
	movsd	rsd+169000(%rax), %xmm0 # xmm0 = mem[0],zero
	unpcklpd	%xmm10, %xmm0   # xmm0 = xmm0[0],xmm10[0]
	.loc	12 425 31               # erhs.c:425:31
	movapd	%xmm1, %xmm10
	.loc	12 423 30 is_stmt 1     # erhs.c:423:30
	movsd	%xmm14, 32(%rsp)        # 8-byte Spill
	movupd	frct+507000(%rax), %xmm1
	.loc	12 425 29               # erhs.c:425:29
	movsd	rsd+338000(%rax), %xmm3 # xmm3 = mem[0],zero
	unpcklpd	%xmm10, %xmm3   # xmm3 = xmm3[0],xmm10[0]
	mulpd	%xmm4, %xmm3
	.loc	12 425 23 is_stmt 0     # erhs.c:425:23
	subpd	%xmm3, %xmm0
	.loc	12 426 29 is_stmt 1     # erhs.c:426:29
	movapd	%xmm11, %xmm6
	mulpd	%xmm7, %xmm6
	.loc	12 426 23 is_stmt 0     # erhs.c:426:23
	addpd	%xmm0, %xmm6
	.loc	12 427 29 is_stmt 1     # erhs.c:427:29
	movapd	%xmm15, %xmm0
	mulpd	%xmm4, %xmm0
	.loc	12 427 23 is_stmt 0     # erhs.c:427:23
	subpd	%xmm0, %xmm6
	.loc	12 428 31 is_stmt 1     # erhs.c:428:31
	movupd	rsd+845000(%rax), %xmm3
	.loc	12 428 23 is_stmt 0     # erhs.c:428:23
	addpd	%xmm3, %xmm6
	.loc	12 424 20 is_stmt 1     # erhs.c:424:20
	mulpd	%xmm2, %xmm6
	.loc	12 424 13 is_stmt 0     # erhs.c:424:13
	subpd	%xmm6, %xmm1
	.loc	12 423 28 is_stmt 1     # erhs.c:423:28
	movupd	%xmm1, frct+507000(%rax)
	.loc	12 423 30 is_stmt 0     # erhs.c:423:30
	movupd	frct+507016(%rax), %xmm0
	.loc	12 425 29 is_stmt 1     # erhs.c:425:29
	movapd	%xmm8, %xmm1
	mulpd	%xmm4, %xmm1
	.loc	12 425 23 is_stmt 0     # erhs.c:425:23
	subpd	%xmm1, %xmm12
	.loc	12 426 29 is_stmt 1     # erhs.c:426:29
	movapd	%xmm13, %xmm1
	mulpd	%xmm7, %xmm1
	.loc	12 426 23 is_stmt 0     # erhs.c:426:23
	addpd	%xmm12, %xmm1
	.loc	12 427 29 is_stmt 1     # erhs.c:427:29
	movapd	%xmm9, %xmm6
	mulpd	%xmm4, %xmm6
	.loc	12 427 23 is_stmt 0     # erhs.c:427:23
	subpd	%xmm6, %xmm1
	.loc	12 428 31 is_stmt 1     # erhs.c:428:31
	movupd	rsd+845016(%rax), %xmm7
	.loc	12 428 23 is_stmt 0     # erhs.c:428:23
	addpd	%xmm7, %xmm1
	.loc	12 424 20 is_stmt 1     # erhs.c:424:20
	mulpd	%xmm2, %xmm1
	.loc	12 424 13 is_stmt 0     # erhs.c:424:13
	subpd	%xmm1, %xmm0
	.loc	12 423 28 is_stmt 1     # erhs.c:423:28
	movupd	%xmm0, frct+507016(%rax)
.Ltmp379:
	.loc	12 412 28               # erhs.c:412:28
	movsd	.LCPI7_10(%rip), %xmm1  # xmm1 = mem[0],zero
	movapd	%xmm4, %xmm6
	movapd	%xmm2, %xmm4
	movapd	%xmm1, %xmm2
.Ltmp380:
	.loc	12 425 29               # erhs.c:425:29
	mulsd	%xmm2, %xmm14
	.loc	12 425 23 is_stmt 0     # erhs.c:425:23
	subsd	%xmm14, %xmm5
	.loc	12 426 31 is_stmt 1     # erhs.c:426:31
	movsd	rsd+507032(%rax), %xmm14 # xmm14 = mem[0],zero
	.loc	12 426 29 is_stmt 0     # erhs.c:426:29
	movapd	%xmm14, %xmm0
	mulsd	.LCPI7_11(%rip), %xmm0
	.loc	12 426 23               # erhs.c:426:23
	addsd	%xmm5, %xmm0
	movsd	rsd+676032(%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	12 427 29 is_stmt 1     # erhs.c:427:29
	mulsd	%xmm2, %xmm1
	movapd	%xmm4, %xmm2
	movapd	%xmm6, %xmm4
	.loc	12 427 23 is_stmt 0     # erhs.c:427:23
	subsd	%xmm1, %xmm0
	.loc	12 423 30 is_stmt 1     # erhs.c:423:30
	movsd	frct+507032(%rax), %xmm1 # xmm1 = mem[0],zero
	.loc	12 428 23               # erhs.c:428:23
	addsd	rsd+845032(%rax), %xmm0
	.loc	12 424 20               # erhs.c:424:20
	mulsd	64(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	12 424 13 is_stmt 0     # erhs.c:424:13
	subsd	%xmm0, %xmm1
	.loc	12 423 28 is_stmt 1     # erhs.c:423:28
	movsd	%xmm1, frct+507032(%rax)
.Ltmp381:
	#DEBUG_VALUE: erhs:m <- 0
	.loc	12 421 7 discriminator 1 # erhs.c:421:7
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
.Ltmp382:
	.loc	12 425 31               # erhs.c:425:31
	movapd	%xmm11, %xmm1
	.loc	12 426 31               # erhs.c:426:31
	movapd	%xmm15, %xmm11
	.loc	12 424 31               # erhs.c:424:31
	movapd	%xmm8, %xmm12
	.loc	12 425 31               # erhs.c:425:31
	movapd	%xmm13, %xmm8
	.loc	12 426 31               # erhs.c:426:31
	movapd	%xmm9, %xmm13
.Ltmp383:
	.loc	12 421 7 discriminator 1 # erhs.c:421:7
	incq	%rcx
	.loc	12 421 21 is_stmt 0 discriminator 1 # erhs.c:421:21
	addq	$169000, %rax           # imm = 0x29428
	cmpq	%rdi, %rcx
.Ltmp384:
	.loc	12 424 31 is_stmt 1     # erhs.c:424:31
	movsd	32(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	12 427 31               # erhs.c:427:31
	movapd	%xmm3, %xmm15
	movapd	%xmm7, %xmm9
	.loc	12 426 29               # erhs.c:426:29
	movapd	.LCPI7_13(%rip), %xmm7  # xmm7 = [6.000000e+00,6.000000e+00]
.Ltmp385:
	.loc	12 421 7 discriminator 1 # erhs.c:421:7
	jl	.LBB7_61
.Ltmp386:
.LBB7_62:                               # %for.body2748
                                        #   in Loop: Header=BB7_51 Depth=2
	.loc	12 433 31               # erhs.c:433:31
	leaq	(,%r11,8), %rax
	leaq	(%rax,%rax,4), %rbx
	imulq	$169000, %rdi, %rcx     # imm = 0x29428
	.loc	12 436 29               # erhs.c:436:29
	addq	%r14, %rcx
	.loc	12 433 31               # erhs.c:433:31
	movsd	frct(%rcx,%rbx), %xmm0  # xmm0 = mem[0],zero
	.loc	12 434 29               # erhs.c:434:29
	movq	384(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%r14), %rax
	movsd	rsd(%rax,%rbx), %xmm1   # xmm1 = mem[0],zero
	.loc	12 435 29               # erhs.c:435:29
	movq	368(%rsp), %rbp         # 8-byte Reload
	leaq	(%rbp,%r14), %rbp
	movsd	rsd(%rbp,%rbx), %xmm2   # xmm2 = mem[0],zero
	.loc	12 435 27 is_stmt 0     # erhs.c:435:27
	movapd	%xmm2, %xmm3
.Ltmp387:
	.loc	12 412 28 is_stmt 1     # erhs.c:412:28
	movsd	.LCPI7_10(%rip), %xmm7  # xmm7 = mem[0],zero
.Ltmp388:
	.loc	12 435 27               # erhs.c:435:27
	mulsd	%xmm7, %xmm3
	.loc	12 435 21 is_stmt 0     # erhs.c:435:21
	subsd	%xmm3, %xmm1
	.loc	12 436 29 is_stmt 1     # erhs.c:436:29
	movsd	rsd(%rcx,%rbx), %xmm3   # xmm3 = mem[0],zero
	.loc	12 436 27 is_stmt 0     # erhs.c:436:27
	movapd	%xmm3, %xmm4
.Ltmp389:
	.loc	12 416 28 is_stmt 1     # erhs.c:416:28
	movsd	.LCPI7_11(%rip), %xmm8  # xmm8 = mem[0],zero
.Ltmp390:
	.loc	12 436 27               # erhs.c:436:27
	mulsd	%xmm8, %xmm4
	.loc	12 436 21 is_stmt 0     # erhs.c:436:21
	addsd	%xmm1, %xmm4
	.loc	12 438 31 is_stmt 1     # erhs.c:438:31
	addq	352(%rsp), %r14         # 8-byte Folded Reload
	.loc	12 437 29               # erhs.c:437:29
	movsd	rsd(%r14,%rbx), %xmm1   # xmm1 = mem[0],zero
	.loc	12 437 27 is_stmt 0     # erhs.c:437:27
	movapd	%xmm1, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	12 437 21               # erhs.c:437:21
	subsd	%xmm5, %xmm4
	movapd	64(%rsp), %xmm9         # 16-byte Reload
	.loc	12 434 18 is_stmt 1     # erhs.c:434:18
	mulsd	%xmm9, %xmm4
	.loc	12 434 11 is_stmt 0     # erhs.c:434:11
	subsd	%xmm4, %xmm0
	.loc	12 433 29 is_stmt 1     # erhs.c:433:29
	movsd	%xmm0, frct(%rcx,%rbx)
	.loc	12 438 31               # erhs.c:438:31
	movsd	frct(%r14,%rbx), %xmm0  # xmm0 = mem[0],zero
	.loc	12 440 27               # erhs.c:440:27
	mulsd	%xmm7, %xmm3
	.loc	12 440 21 is_stmt 0     # erhs.c:440:21
	subsd	%xmm3, %xmm2
.Ltmp391:
	.loc	12 411 28 is_stmt 1     # erhs.c:411:28
	movsd	.LCPI7_9(%rip), %xmm6   # xmm6 = mem[0],zero
.Ltmp392:
	.loc	12 441 27               # erhs.c:441:27
	mulsd	%xmm6, %xmm1
	.loc	12 441 21 is_stmt 0     # erhs.c:441:21
	addsd	%xmm2, %xmm1
	.loc	12 439 18 is_stmt 1     # erhs.c:439:18
	mulsd	%xmm9, %xmm1
	.loc	12 439 11 is_stmt 0     # erhs.c:439:11
	subsd	%xmm1, %xmm0
	.loc	12 438 29 is_stmt 1     # erhs.c:438:29
	movsd	%xmm0, frct(%r14,%rbx)
	.loc	12 433 31               # erhs.c:433:31
	movsd	frct+8(%rcx,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 434 29               # erhs.c:434:29
	movsd	rsd+8(%rax,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 435 29               # erhs.c:435:29
	movsd	rsd+8(%rbp,%rbx), %xmm2 # xmm2 = mem[0],zero
	.loc	12 435 27 is_stmt 0     # erhs.c:435:27
	movapd	%xmm2, %xmm3
	mulsd	%xmm7, %xmm3
	.loc	12 435 21               # erhs.c:435:21
	subsd	%xmm3, %xmm1
	.loc	12 436 29 is_stmt 1     # erhs.c:436:29
	movsd	rsd+8(%rcx,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	12 436 27 is_stmt 0     # erhs.c:436:27
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	12 436 21               # erhs.c:436:21
	addsd	%xmm1, %xmm4
	.loc	12 437 29 is_stmt 1     # erhs.c:437:29
	movsd	rsd+8(%r14,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 437 27 is_stmt 0     # erhs.c:437:27
	movapd	%xmm1, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	12 437 21               # erhs.c:437:21
	subsd	%xmm5, %xmm4
	.loc	12 434 18 is_stmt 1     # erhs.c:434:18
	mulsd	%xmm9, %xmm4
	.loc	12 434 11 is_stmt 0     # erhs.c:434:11
	subsd	%xmm4, %xmm0
	.loc	12 433 29 is_stmt 1     # erhs.c:433:29
	movsd	%xmm0, frct+8(%rcx,%rbx)
	.loc	12 438 31               # erhs.c:438:31
	movsd	frct+8(%r14,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 440 27               # erhs.c:440:27
	mulsd	%xmm7, %xmm3
	.loc	12 440 21 is_stmt 0     # erhs.c:440:21
	subsd	%xmm3, %xmm2
	.loc	12 441 27 is_stmt 1     # erhs.c:441:27
	mulsd	%xmm6, %xmm1
	.loc	12 441 21 is_stmt 0     # erhs.c:441:21
	addsd	%xmm2, %xmm1
	.loc	12 439 18 is_stmt 1     # erhs.c:439:18
	mulsd	%xmm9, %xmm1
	.loc	12 439 11 is_stmt 0     # erhs.c:439:11
	subsd	%xmm1, %xmm0
	.loc	12 438 29 is_stmt 1     # erhs.c:438:29
	movsd	%xmm0, frct+8(%r14,%rbx)
	.loc	12 433 31               # erhs.c:433:31
	movsd	frct+16(%rcx,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 434 29               # erhs.c:434:29
	movsd	rsd+16(%rax,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 435 29               # erhs.c:435:29
	movsd	rsd+16(%rbp,%rbx), %xmm2 # xmm2 = mem[0],zero
	.loc	12 435 27 is_stmt 0     # erhs.c:435:27
	movapd	%xmm2, %xmm3
	mulsd	%xmm7, %xmm3
	.loc	12 435 21               # erhs.c:435:21
	subsd	%xmm3, %xmm1
	.loc	12 436 29 is_stmt 1     # erhs.c:436:29
	movsd	rsd+16(%rcx,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	12 436 27 is_stmt 0     # erhs.c:436:27
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	12 436 21               # erhs.c:436:21
	addsd	%xmm1, %xmm4
	.loc	12 437 29 is_stmt 1     # erhs.c:437:29
	movsd	rsd+16(%r14,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 437 27 is_stmt 0     # erhs.c:437:27
	movapd	%xmm1, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	12 437 21               # erhs.c:437:21
	subsd	%xmm5, %xmm4
	.loc	12 434 18 is_stmt 1     # erhs.c:434:18
	mulsd	%xmm9, %xmm4
	.loc	12 434 11 is_stmt 0     # erhs.c:434:11
	subsd	%xmm4, %xmm0
	.loc	12 433 29 is_stmt 1     # erhs.c:433:29
	movsd	%xmm0, frct+16(%rcx,%rbx)
	.loc	12 438 31               # erhs.c:438:31
	movsd	frct+16(%r14,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 440 27               # erhs.c:440:27
	mulsd	%xmm7, %xmm3
	.loc	12 440 21 is_stmt 0     # erhs.c:440:21
	subsd	%xmm3, %xmm2
	.loc	12 441 27 is_stmt 1     # erhs.c:441:27
	mulsd	%xmm6, %xmm1
	.loc	12 441 21 is_stmt 0     # erhs.c:441:21
	addsd	%xmm2, %xmm1
	.loc	12 439 18 is_stmt 1     # erhs.c:439:18
	mulsd	%xmm9, %xmm1
	.loc	12 439 11 is_stmt 0     # erhs.c:439:11
	subsd	%xmm1, %xmm0
	.loc	12 438 29 is_stmt 1     # erhs.c:438:29
	movsd	%xmm0, frct+16(%r14,%rbx)
	.loc	12 433 31               # erhs.c:433:31
	movsd	frct+24(%rcx,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 434 29               # erhs.c:434:29
	movsd	rsd+24(%rax,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 435 29               # erhs.c:435:29
	movsd	rsd+24(%rbp,%rbx), %xmm2 # xmm2 = mem[0],zero
	.loc	12 435 27 is_stmt 0     # erhs.c:435:27
	movapd	%xmm2, %xmm3
	mulsd	%xmm7, %xmm3
	.loc	12 435 21               # erhs.c:435:21
	subsd	%xmm3, %xmm1
	.loc	12 436 29 is_stmt 1     # erhs.c:436:29
	movsd	rsd+24(%rcx,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	12 436 27 is_stmt 0     # erhs.c:436:27
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	12 436 21               # erhs.c:436:21
	addsd	%xmm1, %xmm4
	.loc	12 437 29 is_stmt 1     # erhs.c:437:29
	movsd	rsd+24(%r14,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 437 27 is_stmt 0     # erhs.c:437:27
	movapd	%xmm1, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	12 437 21               # erhs.c:437:21
	subsd	%xmm5, %xmm4
	.loc	12 434 18 is_stmt 1     # erhs.c:434:18
	mulsd	%xmm9, %xmm4
	.loc	12 434 11 is_stmt 0     # erhs.c:434:11
	subsd	%xmm4, %xmm0
	.loc	12 433 29 is_stmt 1     # erhs.c:433:29
	movsd	%xmm0, frct+24(%rcx,%rbx)
	.loc	12 438 31               # erhs.c:438:31
	movsd	frct+24(%r14,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 440 27               # erhs.c:440:27
	mulsd	%xmm7, %xmm3
	.loc	12 440 21 is_stmt 0     # erhs.c:440:21
	subsd	%xmm3, %xmm2
	.loc	12 441 27 is_stmt 1     # erhs.c:441:27
	mulsd	%xmm6, %xmm1
	.loc	12 441 21 is_stmt 0     # erhs.c:441:21
	addsd	%xmm2, %xmm1
	.loc	12 439 18 is_stmt 1     # erhs.c:439:18
	mulsd	%xmm9, %xmm1
	.loc	12 439 11 is_stmt 0     # erhs.c:439:11
	subsd	%xmm1, %xmm0
	.loc	12 438 29 is_stmt 1     # erhs.c:438:29
	movsd	%xmm0, frct+24(%r14,%rbx)
	.loc	12 433 31               # erhs.c:433:31
	movsd	frct+32(%rcx,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 434 29               # erhs.c:434:29
	movsd	rsd+32(%rax,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 435 29               # erhs.c:435:29
	movsd	rsd+32(%rbp,%rbx), %xmm2 # xmm2 = mem[0],zero
	.loc	12 435 27 is_stmt 0     # erhs.c:435:27
	movapd	%xmm2, %xmm3
	mulsd	%xmm7, %xmm3
	.loc	12 435 21               # erhs.c:435:21
	subsd	%xmm3, %xmm1
	.loc	12 436 29 is_stmt 1     # erhs.c:436:29
	movsd	rsd+32(%rcx,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	12 436 27 is_stmt 0     # erhs.c:436:27
	movapd	%xmm3, %xmm4
	mulsd	%xmm8, %xmm4
	.loc	12 436 21               # erhs.c:436:21
	addsd	%xmm1, %xmm4
	.loc	12 437 29 is_stmt 1     # erhs.c:437:29
	movsd	rsd+32(%r14,%rbx), %xmm1 # xmm1 = mem[0],zero
	.loc	12 437 27 is_stmt 0     # erhs.c:437:27
	movapd	%xmm1, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	12 437 21               # erhs.c:437:21
	subsd	%xmm5, %xmm4
	.loc	12 434 18 is_stmt 1     # erhs.c:434:18
	mulsd	%xmm9, %xmm4
	.loc	12 434 11 is_stmt 0     # erhs.c:434:11
	subsd	%xmm4, %xmm0
	.loc	12 433 29 is_stmt 1     # erhs.c:433:29
	movsd	%xmm0, frct+32(%rcx,%rbx)
	.loc	12 438 31               # erhs.c:438:31
	movsd	frct+32(%r14,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	12 440 27               # erhs.c:440:27
	mulsd	%xmm7, %xmm3
	.loc	12 440 21 is_stmt 0     # erhs.c:440:21
	subsd	%xmm3, %xmm2
	.loc	12 441 27 is_stmt 1     # erhs.c:441:27
	mulsd	%xmm6, %xmm1
	.loc	12 441 21 is_stmt 0     # erhs.c:441:21
	addsd	%xmm2, %xmm1
	.loc	12 439 18 is_stmt 1     # erhs.c:439:18
	mulsd	%xmm9, %xmm1
	.loc	12 439 11 is_stmt 0     # erhs.c:439:11
	subsd	%xmm1, %xmm0
	.loc	12 438 29 is_stmt 1     # erhs.c:438:29
	movsd	%xmm0, frct+32(%r14,%rbx)
.Ltmp393:
	.loc	12 332 5 discriminator 1 # erhs.c:332:5
	incq	%r11
	addq	$40, %r10
	addq	$40, %r9
	addq	$40, %r8
	addq	$40, %r13
	.loc	12 332 21 is_stmt 0 discriminator 1 # erhs.c:332:21
	cmpq	8(%rsp), %r11           # 8-byte Folded Reload
	movsd	(%rsp), %xmm14          # 8-byte Reload
                                        # xmm14 = mem[0],zero
	movsd	16(%rsp), %xmm10        # 8-byte Reload
                                        # xmm10 = mem[0],zero
	movsd	24(%rsp), %xmm11        # 8-byte Reload
                                        # xmm11 = mem[0],zero
	movapd	256(%rsp), %xmm12       # 16-byte Reload
	movaps	432(%rsp), %xmm15       # 16-byte Reload
	movsd	.LCPI7_5(%rip), %xmm9   # xmm9 = mem[0],zero
.Ltmp394:
	.loc	12 342 49 is_stmt 1     # erhs.c:342:49
	movsd	.LCPI7_6(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI7_7(%rip), %xmm8   # xmm8 = mem[0],zero
	movsd	336(%rsp), %xmm13       # 8-byte Reload
                                        # xmm13 = mem[0],zero
	jl	.LBB7_51
.Ltmp395:
.LBB7_63:                               # %for.inc2868
                                        #   in Loop: Header=BB7_50 Depth=1
	.loc	12 331 3 discriminator 1 # erhs.c:331:3
	incq	%r12
	movq	56(%rsp), %r11          # 8-byte Reload
	addq	$2600, %r11             # imm = 0xA28
	movq	48(%rsp), %rbx          # 8-byte Reload
	addq	$2600, %rbx             # imm = 0xA28
	movq	320(%rsp), %rbp         # 8-byte Reload
	addq	$2600, %rbp             # imm = 0xA28
	movq	304(%rsp), %r13         # 8-byte Reload
	addq	$2600, %r13             # imm = 0xA28
	.loc	12 331 19 is_stmt 0 discriminator 1 # erhs.c:331:19
	cmpq	288(%rsp), %r12         # 8-byte Folded Reload
	jl	.LBB7_50
.Ltmp396:
.LBB7_64:                               # %for.end2870
	.loc	12 445 1 is_stmt 1      # erhs.c:445:1
	addq	$488, %rsp              # imm = 0x1E8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp397:
.Lfunc_end7:
	.size	erhs, .Lfunc_end7-erhs
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI8_0:
	.quad	4611686018427387904     # double 2
.LCPI8_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	ssor
	.p2align	4, 0x90
	.type	ssor,@function
ssor:                                   # @ssor
.Lfunc_begin8:
	.file	13 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/ssor.c"
	.loc	13 43 0                 # ssor.c:43:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp398:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp399:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp400:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp401:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp402:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp403:
	.cfi_def_cfa_offset 56
	subq	$164072, %rsp           # imm = 0x280E8
.Ltmp404:
	.cfi_def_cfa_offset 164128
.Ltmp405:
	.cfi_offset %rbx, -56
.Ltmp406:
	.cfi_offset %r12, -48
.Ltmp407:
	.cfi_offset %r13, -40
.Ltmp408:
	.cfi_offset %r14, -32
.Ltmp409:
	.cfi_offset %r15, -24
.Ltmp410:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: ssor:niter <- %EDI
	movl	%edi, %r14d
.Ltmp411:
	#DEBUG_VALUE: ssor:niter <- %R14D
	.loc	13 55 17 prologue_end   # ssor.c:55:17
	movl	%r14d, 116(%rsp)        # 4-byte Spill
	movsd	omega(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	13 55 31 is_stmt 0      # ssor.c:55:31
	movsd	.LCPI8_0(%rip), %xmm1   # xmm1 = mem[0],zero
	subsd	%xmm0, %xmm1
	.loc	13 55 23                # ssor.c:55:23
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, 104(%rsp)        # 8-byte Spill
	xorl	%ebx, %ebx
.Ltmp412:
	#DEBUG_VALUE: ssor:j <- 0
	.p2align	4, 0x90
.LBB8_1:                                # %for.cond3.preheader
                                        # =>This Inner Loop Header: Depth=1
	.loc	13 65 25 is_stmt 1      # ssor.c:65:25
	leaq	a(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
	.loc	13 66 25                # ssor.c:66:25
	leaq	b(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
	.loc	13 67 25                # ssor.c:67:25
	leaq	c(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
	.loc	13 68 25                # ssor.c:68:25
	leaq	d(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
	.loc	13 65 25                # ssor.c:65:25
	leaq	a+13000(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
	.loc	13 66 25                # ssor.c:66:25
	leaq	b+13000(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
	.loc	13 67 25                # ssor.c:67:25
	leaq	c+13000(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
	.loc	13 68 25                # ssor.c:68:25
	leaq	d+13000(%rbx), %rdi
	xorl	%esi, %esi
	movl	$12800, %edx            # imm = 0x3200
	callq	memset
.Ltmp413:
	.loc	13 61 3 discriminator 1 # ssor.c:61:3
	addq	$26000, %rbx            # imm = 0x6590
	cmpq	$832000, %rbx           # imm = 0xCB200
	jne	.LBB8_1
.Ltmp414:
# BB#2:                                 # %for.body53.preheader
	.loc	13 74 5                 # ssor.c:74:5
	movl	$1, %ebx
	movl	$1, %edi
	callq	timer_clear
.Ltmp415:
	#DEBUG_VALUE: ssor:i <- 2
	movl	$2, %edi
	callq	timer_clear
	movl	$3, %edi
	callq	timer_clear
	movl	$4, %edi
	callq	timer_clear
	movl	$5, %edi
	callq	timer_clear
	movl	$6, %edi
	callq	timer_clear
	movl	$7, %edi
	callq	timer_clear
	movl	$8, %edi
	callq	timer_clear
	movl	$9, %edi
	callq	timer_clear
	movl	$10, %edi
	callq	timer_clear
	movl	$11, %edi
	callq	timer_clear
.Ltmp416:
	.loc	13 80 3                 # ssor.c:80:3
	xorl	%eax, %eax
	callq	rhs
	.loc	13 85 32                # ssor.c:85:32
	movl	nx0(%rip), %ecx
	.loc	13 85 37 is_stmt 0      # ssor.c:85:37
	movl	ny0(%rip), %r8d
	.loc	13 85 42                # ssor.c:85:42
	movl	nz0(%rip), %r9d
	.loc	13 86 11 is_stmt 1      # ssor.c:86:11
	movl	ist(%rip), %eax
	.loc	13 86 16 is_stmt 0      # ssor.c:86:16
	movl	iend(%rip), %edx
	.loc	13 86 22                # ssor.c:86:22
	movl	jst(%rip), %esi
	.loc	13 86 27                # ssor.c:86:27
	movl	jend(%rip), %edi
	.loc	13 85 3 is_stmt 1       # ssor.c:85:3
	movl	%edi, 24(%rsp)
	movl	%esi, 16(%rsp)
	movl	%edx, 8(%rsp)
	movl	%eax, (%rsp)
	movq	$rsdnm, 40(%rsp)
	movq	$rsd, 32(%rsp)
	movl	$64, %edi
	movl	$64, %esi
	movl	$64, %edx
	callq	l2norm
.Ltmp417:
	#DEBUG_VALUE: ssor:i <- 1
	.loc	13 108 5                # ssor.c:108:5
	movl	$1, %edi
	callq	timer_clear
.Ltmp418:
	#DEBUG_VALUE: ssor:i <- 2
	movl	$2, %edi
	callq	timer_clear
	movl	$3, %edi
	callq	timer_clear
	movl	$4, %edi
	callq	timer_clear
	movl	$5, %edi
	callq	timer_clear
	movl	$6, %edi
	callq	timer_clear
	movl	$7, %edi
	callq	timer_clear
	movl	$8, %edi
	callq	timer_clear
	movl	$9, %edi
	callq	timer_clear
	movl	$10, %edi
	callq	timer_clear
	movl	$11, %edi
	callq	timer_clear
.Ltmp419:
	.loc	13 110 3                # ssor.c:110:3
	movl	$1, %edi
	callq	timer_start
.Ltmp420:
	#DEBUG_VALUE: ssor:istep <- 1
	.loc	13 115 25 discriminator 1 # ssor.c:115:25
	testl	%r14d, %r14d
	jle	.LBB8_73
.Ltmp421:
# BB#3:                                 # %for.body65.lr.ph
	.loc	13 55 13                # ssor.c:55:13
	movsd	.LCPI8_1(%rip), %xmm0   # xmm0 = mem[0],zero
	divsd	104(%rsp), %xmm0        # 8-byte Folded Reload
.Ltmp422:
	#DEBUG_VALUE: ssor:tmp <- %XMM0
	.loc	13 190 49               # ssor.c:190:49
	movapd	%xmm0, 160(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp423:
	movaps	%xmm0, 144(%rsp)        # 16-byte Spill
.Ltmp424:
	.p2align	4, 0x90
.LBB8_4:                                # %for.body65
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB8_14 Depth 2
                                        #       Child Loop BB8_63 Depth 3
                                        #         Child Loop BB8_67 Depth 4
                                        #     Child Loop BB8_19 Depth 2
                                        #     Child Loop BB8_29 Depth 2
                                        #     Child Loop BB8_42 Depth 2
                                        #       Child Loop BB8_70 Depth 3
                                        #         Child Loop BB8_71 Depth 4
	.loc	13 119 16               # ssor.c:119:16
	movslq	%ebx, %rax
	imulq	$1717986919, %rax, %rcx # imm = 0x66666667
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$35, %rcx
	addl	%edx, %ecx
	shll	$2, %ecx
	leal	(%rcx,%rcx,4), %ecx
	.loc	13 119 22 is_stmt 0     # ssor.c:119:22
	cmpl	%ecx, %eax
	.loc	13 119 27               # ssor.c:119:27
	je	.LBB8_7
# BB#5:                                 # %lor.lhs.false
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 119 36 discriminator 1 # ssor.c:119:36
	cmpl	itmax(%rip), %ebx
	sete	%al
	.loc	13 119 54 discriminator 2 # ssor.c:119:54
	cmpl	$1, %ebx
	sete	%cl
	.loc	13 119 45 discriminator 1 # ssor.c:119:45
	cmpl	$2, %r14d
	jl	.LBB8_9
# BB#6:                                 # %lor.lhs.false
                                        #   in Loop: Header=BB8_4 Depth=1
	orb	%al, %cl
	jne	.LBB8_8
	jmp	.LBB8_9
	.p2align	4, 0x90
.LBB8_7:                                # %if.then
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp425:
	.loc	13 120 11 is_stmt 1     # ssor.c:120:11
	cmpl	$2, %r14d
	jl	.LBB8_9
.LBB8_8:                                # %if.then71
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp426:
	.loc	13 120 22 is_stmt 0 discriminator 1 # ssor.c:120:22
	movl	$.L.str.33, %edi
	xorl	%eax, %eax
	movl	%ebx, %esi
	callq	printf
.Ltmp427:
.LBB8_9:                                # %if.end72
                                        #   in Loop: Header=BB8_4 Depth=1
	movq	%rbx, 136(%rsp)         # 8-byte Spill
.Ltmp428:
	.loc	13 126 9 is_stmt 1      # ssor.c:126:9
	cmpl	$0, timeron(%rip)
	je	.LBB8_11
# BB#10:                                # %if.then73
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 126 18 is_stmt 0 discriminator 1 # ssor.c:126:18
	movl	$5, %edi
	callq	timer_start
.Ltmp429:
.LBB8_11:                               # %for.cond75.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 47 10 is_stmt 1      # ssor.c:47:10
	movslq	nz(%rip), %rax
.Ltmp430:
	.loc	13 127 24 discriminator 1 # ssor.c:127:24
	movq	%rax, 128(%rsp)         # 8-byte Spill
	decq	%rax
	.loc	13 127 5 is_stmt 0 discriminator 1 # ssor.c:127:5
	movq	%rax, 104(%rsp)         # 8-byte Spill
	cmpl	$2, %eax
	jl	.LBB8_16
.Ltmp431:
# BB#12:                                # %for.body78.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 47 10 is_stmt 1      # ssor.c:47:10
	movslq	jst(%rip), %rax
.Ltmp432:
	.loc	13 128 25 discriminator 1 # ssor.c:128:25
	movq	%rax, 120(%rsp)         # 8-byte Spill
	movl	jend(%rip), %edx
	.loc	13 128 7 is_stmt 0 discriminator 1 # ssor.c:128:7
	cmpl	%edx, %eax
	jge	.LBB8_16
.Ltmp433:
# BB#13:                                # %for.body81.lr.ph.us.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 47 10 is_stmt 1      # ssor.c:47:10
	movslq	ist(%rip), %r9
.Ltmp434:
	.loc	13 129 27 discriminator 1 # ssor.c:129:27
	movl	iend(%rip), %r10d
.Ltmp435:
	.loc	13 131 31               # ssor.c:131:31
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
.Ltmp436:
	.loc	13 47 10                # ssor.c:47:10
	movl	%r10d, %ebx
	subl	%r9d, %ebx
	leal	-1(%r10), %ecx
.Ltmp437:
	.loc	13 131 34               # ssor.c:131:34
	movapd	%xmm0, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
.Ltmp438:
	.loc	13 129 9 discriminator 1 # ssor.c:129:9
	andl	$1, %ebx
	leaq	1(%r9), %r11
.Ltmp439:
	.loc	13 47 10                # ssor.c:47:10
	imulq	$2600, 120(%rsp), %rax  # 8-byte Folded Reload
                                        # imm = 0xA28
	leaq	rsd+169072(%rax), %rbp
	movl	$1, %eax
	.p2align	4, 0x90
.LBB8_14:                               # %for.body81.lr.ph.us
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_63 Depth 3
                                        #         Child Loop BB8_67 Depth 4
	cmpl	%r9d, %r10d
	movq	%rbp, %r14
	movq	120(%rsp), %r8          # 8-byte Reload
	jle	.LBB8_15
	.p2align	4, 0x90
.LBB8_63:                               # %for.cond85.preheader.lr.ph.us.us
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_14 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB8_67 Depth 4
	testl	%ebx, %ebx
	movq	%r9, %rsi
	je	.LBB8_65
# BB#64:                                # %for.cond85.preheader.us.us.prol
                                        #   in Loop: Header=BB8_63 Depth=3
.Ltmp440:
	.loc	13 131 36               # ssor.c:131:36
	imulq	$2600, %r8, %rsi        # imm = 0xA28
	imulq	$169000, %rax, %rdi     # imm = 0x29428
	addq	%rsi, %rdi
	leaq	(%r9,%r9,4), %rsi
	movupd	rsd(%rdi,%rsi,8), %xmm2
	.loc	13 131 34 is_stmt 0     # ssor.c:131:34
	mulpd	%xmm1, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movupd	%xmm2, rsd(%rdi,%rsi,8)
	.loc	13 131 36               # ssor.c:131:36
	movupd	rsd+16(%rdi,%rsi,8), %xmm2
	.loc	13 131 34               # ssor.c:131:34
	mulpd	%xmm1, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movupd	%xmm2, rsd+16(%rdi,%rsi,8)
	movsd	rsd+32(%rdi,%rsi,8), %xmm2 # xmm2 = mem[0],zero
	.loc	13 131 34               # ssor.c:131:34
	mulsd	%xmm0, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movsd	%xmm2, rsd+32(%rdi,%rsi,8)
	movq	%r11, %rsi
.Ltmp441:
.LBB8_65:                               # %for.cond85.preheader.lr.ph.us.us.split
                                        #   in Loop: Header=BB8_63 Depth=3
	cmpl	%r9d, %ecx
	je	.LBB8_68
# BB#66:                                # %for.cond85.preheader.lr.ph.us.us.split.split
                                        #   in Loop: Header=BB8_63 Depth=3
	.loc	13 129 9 is_stmt 1 discriminator 1 # ssor.c:129:9
	movl	%r10d, %r12d
	subl	%esi, %r12d
	shlq	$3, %rsi
	leaq	(%rsi,%rsi,4), %r15
	movq	%r14, %r13
	.p2align	4, 0x90
.LBB8_67:                               # %for.cond85.preheader.us.us
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_14 Depth=2
                                        #       Parent Loop BB8_63 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
.Ltmp442:
	.loc	13 131 36               # ssor.c:131:36
	movupd	-72(%r15,%r13), %xmm2
	.loc	13 131 34 is_stmt 0     # ssor.c:131:34
	mulpd	%xmm1, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movupd	%xmm2, -72(%r15,%r13)
	.loc	13 131 36               # ssor.c:131:36
	movupd	-56(%r15,%r13), %xmm2
	.loc	13 131 34               # ssor.c:131:34
	mulpd	%xmm1, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movupd	%xmm2, -56(%r15,%r13)
	movsd	-40(%r15,%r13), %xmm2   # xmm2 = mem[0],zero
	.loc	13 131 34               # ssor.c:131:34
	mulsd	%xmm0, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movsd	%xmm2, -40(%r15,%r13)
	.loc	13 131 36               # ssor.c:131:36
	movupd	-32(%r15,%r13), %xmm2
	.loc	13 131 34               # ssor.c:131:34
	mulpd	%xmm1, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movupd	%xmm2, -32(%r15,%r13)
	.loc	13 131 36               # ssor.c:131:36
	movupd	-16(%r15,%r13), %xmm2
	.loc	13 131 34               # ssor.c:131:34
	mulpd	%xmm1, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movupd	%xmm2, -16(%r15,%r13)
	movsd	(%r15,%r13), %xmm2      # xmm2 = mem[0],zero
	.loc	13 131 34               # ssor.c:131:34
	mulsd	%xmm0, %xmm2
	.loc	13 131 29               # ssor.c:131:29
	movsd	%xmm2, (%r15,%r13)
.Ltmp443:
	.loc	13 129 9 is_stmt 1 discriminator 1 # ssor.c:129:9
	addq	$80, %r13
	addl	$-2, %r12d
	jne	.LBB8_67
.Ltmp444:
.LBB8_68:                               # %for.cond82.for.inc111_crit_edge.us.us
                                        #   in Loop: Header=BB8_63 Depth=3
	.loc	13 128 7 discriminator 1 # ssor.c:128:7
	incq	%r8
	addq	$2600, %r14             # imm = 0xA28
	cmpl	%edx, %r8d
	jne	.LBB8_63
.Ltmp445:
.LBB8_15:                               # %for.cond79.for.inc114_crit_edge.us
                                        #   in Loop: Header=BB8_14 Depth=2
	.loc	13 127 5 discriminator 1 # ssor.c:127:5
	incq	%rax
	addq	$169000, %rbp           # imm = 0x29428
	.loc	13 127 19 is_stmt 0 discriminator 1 # ssor.c:127:19
	cmpq	104(%rsp), %rax         # 8-byte Folded Reload
	jl	.LBB8_14
.Ltmp446:
.LBB8_16:                               # %for.end116
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 136 9 is_stmt 1      # ssor.c:136:9
	cmpl	$0, timeron(%rip)
	movq	128(%rsp), %r14         # 8-byte Reload
	je	.LBB8_18
# BB#17:                                # %if.then118
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 136 18 is_stmt 0 discriminator 1 # ssor.c:136:18
	movl	$5, %edi
	callq	timer_stop
.Ltmp447:
	.loc	13 138 21 is_stmt 1 discriminator 1 # ssor.c:138:21
	movl	nz(%rip), %r14d
.LBB8_18:                               # %for.cond120.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 138 24 is_stmt 0 discriminator 1 # ssor.c:138:24
	leal	-1(%r14), %eax
	movl	$1, %ebx
	.loc	13 138 5 discriminator 1 # ssor.c:138:5
	cmpl	$2, %eax
	leaq	224(%rsp), %r15
	jl	.LBB8_27
	.p2align	4, 0x90
.LBB8_19:                               # %for.body123
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp448:
	.loc	13 142 11 is_stmt 1     # ssor.c:142:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_21
# BB#20:                                # %if.then125
                                        #   in Loop: Header=BB8_19 Depth=2
	.loc	13 142 20 is_stmt 0 discriminator 1 # ssor.c:142:20
	movl	$6, %edi
	callq	timer_start
.Ltmp449:
.LBB8_21:                               # %if.end126
                                        #   in Loop: Header=BB8_19 Depth=2
	.loc	13 143 7 is_stmt 1      # ssor.c:143:7
	movl	%ebx, %edi
	callq	jacld
.Ltmp450:
	.loc	13 144 11               # ssor.c:144:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_24
# BB#22:                                # %if.end129
                                        #   in Loop: Header=BB8_19 Depth=2
	.loc	13 144 20 is_stmt 0 discriminator 1 # ssor.c:144:20
	movl	$6, %edi
	callq	timer_stop
.Ltmp451:
	.loc	13 149 11 is_stmt 1     # ssor.c:149:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_24
# BB#23:                                # %if.then131
                                        #   in Loop: Header=BB8_19 Depth=2
	.loc	13 149 20 is_stmt 0 discriminator 1 # ssor.c:149:20
	movl	$7, %edi
	callq	timer_start
.Ltmp452:
.LBB8_24:                               # %if.end132
                                        #   in Loop: Header=BB8_19 Depth=2
	.loc	13 151 13 is_stmt 1     # ssor.c:151:13
	movl	nx(%rip), %ecx
	.loc	13 151 17 is_stmt 0     # ssor.c:151:17
	movl	ny(%rip), %r8d
	.loc	13 151 21               # ssor.c:151:21
	movl	nz(%rip), %r9d
	.loc	13 152 13 is_stmt 1     # ssor.c:152:13
	movsd	omega(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	13 155 13               # ssor.c:155:13
	movl	ist(%rip), %r10d
	.loc	13 155 18 is_stmt 0     # ssor.c:155:18
	movl	iend(%rip), %edx
	.loc	13 155 24               # ssor.c:155:24
	movl	jst(%rip), %esi
	.loc	13 155 29               # ssor.c:155:29
	movl	jend(%rip), %edi
	.loc	13 156 13 is_stmt 1     # ssor.c:156:13
	movl	nx0(%rip), %ebp
	.loc	13 156 18 is_stmt 0     # ssor.c:156:18
	movl	ny0(%rip), %eax
	.loc	13 150 7 is_stmt 1      # ssor.c:150:7
	movl	%eax, 88(%rsp)
	movl	%ebp, 80(%rsp)
	movl	%edi, 72(%rsp)
	movl	%esi, 64(%rsp)
	movl	%edx, 56(%rsp)
	movl	%r10d, 48(%rsp)
	movl	%ebx, (%rsp)
	movq	$d, 40(%rsp)
	movq	$c, 32(%rsp)
	movq	$b, 24(%rsp)
	movq	$a, 16(%rsp)
	movq	$rsd, 8(%rsp)
	movl	$64, %edi
	movl	$64, %esi
	movl	$64, %edx
	callq	blts
.Ltmp453:
	.loc	13 157 11               # ssor.c:157:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_26
# BB#25:                                # %if.then134
                                        #   in Loop: Header=BB8_19 Depth=2
	.loc	13 157 20 is_stmt 0 discriminator 1 # ssor.c:157:20
	movl	$7, %edi
	callq	timer_stop
.Ltmp454:
.LBB8_26:                               # %for.inc136
                                        #   in Loop: Header=BB8_19 Depth=2
	.loc	13 138 29 is_stmt 1 discriminator 2 # ssor.c:138:29
	incl	%ebx
.Ltmp455:
	#DEBUG_VALUE: ssor:k <- %EBX
	.loc	13 138 21 is_stmt 0 discriminator 1 # ssor.c:138:21
	movl	nz(%rip), %r14d
	.loc	13 138 24 discriminator 1 # ssor.c:138:24
	leal	-1(%r14), %eax
	.loc	13 138 19 discriminator 1 # ssor.c:138:19
	cmpl	%eax, %ebx
	jl	.LBB8_19
.Ltmp456:
.LBB8_27:                               # %for.end138
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 164 11 is_stmt 1     # ssor.c:164:11
	cmpl	$0, timeron(%rip)
	setne	%al
.Ltmp457:
	.loc	13 160 5 discriminator 1 # ssor.c:160:5
	cmpl	$3, %r14d
	jl	.LBB8_37
# BB#28:                                # %for.body142.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp458:
	.loc	13 164 11               # ssor.c:164:11
	decl	%r14d
	.p2align	4, 0x90
.LBB8_29:                               # %for.body142
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	decl	%r14d
	testb	$1, %al
	je	.LBB8_31
# BB#30:                                # %if.then144
                                        #   in Loop: Header=BB8_29 Depth=2
.Ltmp459:
	.loc	13 164 20 is_stmt 0 discriminator 1 # ssor.c:164:20
	movl	$8, %edi
	callq	timer_start
.Ltmp460:
.LBB8_31:                               # %if.end145
                                        #   in Loop: Header=BB8_29 Depth=2
	.loc	13 165 7 is_stmt 1      # ssor.c:165:7
	movl	%r14d, %edi
	callq	jacu
.Ltmp461:
	.loc	13 166 11               # ssor.c:166:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_34
# BB#32:                                # %if.end148
                                        #   in Loop: Header=BB8_29 Depth=2
	.loc	13 166 20 is_stmt 0 discriminator 1 # ssor.c:166:20
	movl	$8, %edi
	callq	timer_stop
.Ltmp462:
	.loc	13 171 11 is_stmt 1     # ssor.c:171:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_34
# BB#33:                                # %if.then150
                                        #   in Loop: Header=BB8_29 Depth=2
	.loc	13 171 20 is_stmt 0 discriminator 1 # ssor.c:171:20
	movl	$9, %edi
	callq	timer_start
.Ltmp463:
.LBB8_34:                               # %if.end151
                                        #   in Loop: Header=BB8_29 Depth=2
	.loc	13 173 13 is_stmt 1     # ssor.c:173:13
	movl	nx(%rip), %ecx
	.loc	13 173 17 is_stmt 0     # ssor.c:173:17
	movl	ny(%rip), %r8d
	.loc	13 173 21               # ssor.c:173:21
	movl	nz(%rip), %r9d
	.loc	13 174 13 is_stmt 1     # ssor.c:174:13
	movsd	omega(%rip), %xmm0      # xmm0 = mem[0],zero
	.loc	13 177 13               # ssor.c:177:13
	movl	ist(%rip), %eax
	.loc	13 177 18 is_stmt 0     # ssor.c:177:18
	movl	iend(%rip), %edx
	.loc	13 177 24               # ssor.c:177:24
	movl	jst(%rip), %esi
	.loc	13 177 29               # ssor.c:177:29
	movl	jend(%rip), %edi
	.loc	13 178 13 is_stmt 1     # ssor.c:178:13
	movl	nx0(%rip), %ebx
	.loc	13 178 18 is_stmt 0     # ssor.c:178:18
	movl	ny0(%rip), %ebp
	.loc	13 172 7 is_stmt 1      # ssor.c:172:7
	movl	%ebp, 96(%rsp)
	movl	%ebx, 88(%rsp)
	movl	%edi, 80(%rsp)
	movl	%esi, 72(%rsp)
	movl	%edx, 64(%rsp)
	movl	%eax, 56(%rsp)
	movq	%r15, 16(%rsp)
	movl	%r14d, (%rsp)
	movq	$c, 48(%rsp)
	movq	$b, 40(%rsp)
	movq	$a, 32(%rsp)
	movq	$d, 24(%rsp)
	movq	$rsd, 8(%rsp)
	movl	$64, %edi
	movl	$64, %esi
	movl	$64, %edx
	callq	buts
	xorl	%eax, %eax
.Ltmp464:
	.loc	13 179 11               # ssor.c:179:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_36
# BB#35:                                # %if.then153
                                        #   in Loop: Header=BB8_29 Depth=2
	.loc	13 179 20 is_stmt 0 discriminator 1 # ssor.c:179:20
	movl	$9, %edi
	callq	timer_stop
.Ltmp465:
	.loc	13 164 11 is_stmt 1     # ssor.c:164:11
	movl	timeron(%rip), %eax
.LBB8_36:                               # %for.inc155
                                        #   in Loop: Header=BB8_29 Depth=2
	testl	%eax, %eax
	setne	%al
.Ltmp466:
	.loc	13 160 24 discriminator 1 # ssor.c:160:24
	cmpl	$1, %r14d
	jg	.LBB8_29
.Ltmp467:
.LBB8_37:                               # %for.end156
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 185 9                # ssor.c:185:9
	testb	%al, %al
	je	.LBB8_39
# BB#38:                                # %if.then158
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp468:
	.loc	13 185 18 is_stmt 0 discriminator 1 # ssor.c:185:18
	movl	$10, %edi
	callq	timer_start
.Ltmp469:
.LBB8_39:                               # %for.cond160.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 47 10 is_stmt 1      # ssor.c:47:10
	movslq	nz(%rip), %r11
.Ltmp470:
	.loc	13 186 23 discriminator 1 # ssor.c:186:23
	decq	%r11
	.loc	13 186 5 is_stmt 0 discriminator 1 # ssor.c:186:5
	cmpl	$2, %r11d
	movapd	160(%rsp), %xmm2        # 16-byte Reload
	movapd	144(%rsp), %xmm3        # 16-byte Reload
	jl	.LBB8_44
.Ltmp471:
# BB#40:                                # %for.body163.lr.ph
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 47 10 is_stmt 1      # ssor.c:47:10
	movslq	jst(%rip), %r9
.Ltmp472:
	.loc	13 187 25 discriminator 1 # ssor.c:187:25
	movl	jend(%rip), %edx
	.loc	13 187 7 is_stmt 0 discriminator 1 # ssor.c:187:7
	cmpl	%edx, %r9d
	jge	.LBB8_44
.Ltmp473:
# BB#41:                                # %for.body166.lr.ph.us.preheader
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 47 10 is_stmt 1      # ssor.c:47:10
	movslq	ist(%rip), %r10
.Ltmp474:
	.loc	13 188 27 discriminator 1 # ssor.c:188:27
	movl	iend(%rip), %r8d
.Ltmp475:
	.loc	13 47 10                # ssor.c:47:10
	imulq	$2600, %r9, %rax        # imm = 0xA28
	leaq	(%r10,%r10,4), %rcx
	leaq	(%rax,%rcx,8), %r14
	movl	%r8d, %eax
	subl	%r10d, %eax
	movl	$1, %edi
	.p2align	4, 0x90
.LBB8_42:                               # %for.body166.lr.ph.us
                                        #   Parent Loop BB8_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_70 Depth 3
                                        #         Child Loop BB8_71 Depth 4
	cmpl	%r8d, %r10d
	movq	%r14, %rbp
	movq	%r9, %rsi
	jge	.LBB8_43
	.p2align	4, 0x90
.LBB8_70:                               # %for.cond170.preheader.lr.ph.us.us
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_42 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB8_71 Depth 4
	movl	%eax, %ebx
	movq	%rbp, %rcx
	.p2align	4, 0x90
.LBB8_71:                               # %for.cond170.preheader.us.us
                                        #   Parent Loop BB8_4 Depth=1
                                        #     Parent Loop BB8_42 Depth=2
                                        #       Parent Loop BB8_70 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
.Ltmp476:
	.loc	13 190 29               # ssor.c:190:29
	movupd	u+169000(%rcx), %xmm0
	.loc	13 190 51 is_stmt 0     # ssor.c:190:51
	movupd	rsd+169000(%rcx), %xmm1
	.loc	13 190 49               # ssor.c:190:49
	mulpd	%xmm3, %xmm1
	.loc	13 190 43               # ssor.c:190:43
	addpd	%xmm0, %xmm1
	.loc	13 190 27               # ssor.c:190:27
	movupd	%xmm1, u+169000(%rcx)
	.loc	13 190 29               # ssor.c:190:29
	movupd	u+169016(%rcx), %xmm0
	.loc	13 190 51               # ssor.c:190:51
	movupd	rsd+169016(%rcx), %xmm1
	.loc	13 190 49               # ssor.c:190:49
	mulpd	%xmm3, %xmm1
	.loc	13 190 43               # ssor.c:190:43
	addpd	%xmm0, %xmm1
	.loc	13 190 27               # ssor.c:190:27
	movupd	%xmm1, u+169016(%rcx)
	movsd	rsd+169032(%rcx), %xmm0 # xmm0 = mem[0],zero
	.loc	13 190 49               # ssor.c:190:49
	mulsd	%xmm2, %xmm0
	.loc	13 190 43               # ssor.c:190:43
	addsd	u+169032(%rcx), %xmm0
	.loc	13 190 27               # ssor.c:190:27
	movsd	%xmm0, u+169032(%rcx)
.Ltmp477:
	.loc	13 188 9 is_stmt 1 discriminator 1 # ssor.c:188:9
	addq	$40, %rcx
	decl	%ebx
	jne	.LBB8_71
.Ltmp478:
# BB#69:                                # %for.cond167.for.inc204_crit_edge.us.us
                                        #   in Loop: Header=BB8_70 Depth=3
	.loc	13 187 7 discriminator 1 # ssor.c:187:7
	incq	%rsi
	addq	$2600, %rbp             # imm = 0xA28
	cmpl	%edx, %esi
	jne	.LBB8_70
.Ltmp479:
.LBB8_43:                               # %for.cond164.for.inc207_crit_edge.us
                                        #   in Loop: Header=BB8_42 Depth=2
	.loc	13 186 5 discriminator 1 # ssor.c:186:5
	incq	%rdi
	addq	$169000, %r14           # imm = 0x29428
	.loc	13 186 19 is_stmt 0 discriminator 1 # ssor.c:186:19
	cmpq	%r11, %rdi
	jl	.LBB8_42
.Ltmp480:
.LBB8_44:                               # %for.end209
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 195 9 is_stmt 1      # ssor.c:195:9
	cmpl	$0, timeron(%rip)
	je	.LBB8_46
# BB#45:                                # %if.then211
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 195 18 is_stmt 0 discriminator 1 # ssor.c:195:18
	movl	$10, %edi
	callq	timer_stop
.Ltmp481:
.LBB8_46:                               # %if.end212
                                        #   in Loop: Header=BB8_4 Depth=1
	movq	136(%rsp), %rbx         # 8-byte Reload
.Ltmp482:
	.loc	13 200 17 is_stmt 1     # ssor.c:200:17
	movl	%ebx, %eax
	cltd
	idivl	inorm(%rip)
.Ltmp483:
	.loc	13 200 10 is_stmt 0     # ssor.c:200:10
	testl	%edx, %edx
	movl	116(%rsp), %r14d        # 4-byte Reload
	jne	.LBB8_51
# BB#47:                                # %if.then215
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp484:
	.loc	13 201 11 is_stmt 1     # ssor.c:201:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_49
# BB#48:                                # %if.then217
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 201 20 is_stmt 0 discriminator 1 # ssor.c:201:20
	movl	$11, %edi
	callq	timer_start
.Ltmp485:
.LBB8_49:                               # %if.end218
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 202 36 is_stmt 1     # ssor.c:202:36
	movl	nx0(%rip), %ecx
	.loc	13 202 41 is_stmt 0     # ssor.c:202:41
	movl	ny0(%rip), %r8d
	.loc	13 202 46               # ssor.c:202:46
	movl	nz0(%rip), %r9d
	.loc	13 203 15 is_stmt 1     # ssor.c:203:15
	movl	ist(%rip), %eax
	.loc	13 203 20 is_stmt 0     # ssor.c:203:20
	movl	iend(%rip), %edx
	.loc	13 203 26               # ssor.c:203:26
	movl	jst(%rip), %esi
	.loc	13 203 31               # ssor.c:203:31
	movl	jend(%rip), %edi
	leaq	176(%rsp), %rbp
	.loc	13 202 7 is_stmt 1      # ssor.c:202:7
	movq	%rbp, 40(%rsp)
	movl	%edi, 24(%rsp)
	movl	%esi, 16(%rsp)
	movl	%edx, 8(%rsp)
	movl	%eax, (%rsp)
	movq	$rsd, 32(%rsp)
	movl	$64, %edi
	movl	$64, %esi
	movl	$64, %edx
	callq	l2norm
.Ltmp486:
	.loc	13 205 11               # ssor.c:205:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_51
# BB#50:                                # %if.then221
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 205 20 is_stmt 0 discriminator 1 # ssor.c:205:20
	movl	$11, %edi
	callq	timer_stop
.Ltmp487:
.LBB8_51:                               # %if.end223
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 228 5 is_stmt 1      # ssor.c:228:5
	xorl	%eax, %eax
	callq	rhs
.Ltmp488:
	.loc	13 233 18               # ssor.c:233:18
	movl	%ebx, %eax
	cltd
	idivl	inorm(%rip)
	.loc	13 233 28 is_stmt 0     # ssor.c:233:28
	testl	%edx, %edx
	je	.LBB8_53
# BB#52:                                # %if.end223
                                        #   in Loop: Header=BB8_4 Depth=1
	cmpl	itmax(%rip), %ebx
	jne	.LBB8_57
.LBB8_53:                               # %if.then228
                                        #   in Loop: Header=BB8_4 Depth=1
.Ltmp489:
	.loc	13 234 11 is_stmt 1     # ssor.c:234:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_55
# BB#54:                                # %if.then230
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 234 20 is_stmt 0 discriminator 1 # ssor.c:234:20
	movl	$11, %edi
	callq	timer_start
.Ltmp490:
.LBB8_55:                               # %if.end231
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 235 36 is_stmt 1     # ssor.c:235:36
	movl	nx0(%rip), %ecx
	.loc	13 235 41 is_stmt 0     # ssor.c:235:41
	movl	ny0(%rip), %r8d
	.loc	13 235 46               # ssor.c:235:46
	movl	nz0(%rip), %r9d
	.loc	13 236 15 is_stmt 1     # ssor.c:236:15
	movl	ist(%rip), %eax
	.loc	13 236 20 is_stmt 0     # ssor.c:236:20
	movl	iend(%rip), %edx
	.loc	13 236 26               # ssor.c:236:26
	movl	jst(%rip), %esi
	.loc	13 236 31               # ssor.c:236:31
	movl	jend(%rip), %edi
	.loc	13 235 7 is_stmt 1      # ssor.c:235:7
	movl	%edi, 24(%rsp)
	movl	%esi, 16(%rsp)
	movl	%edx, 8(%rsp)
	movl	%eax, (%rsp)
	movq	$rsdnm, 40(%rsp)
	movq	$rsd, 32(%rsp)
	movl	$64, %edi
	movl	$64, %esi
	movl	$64, %edx
	callq	l2norm
.Ltmp491:
	.loc	13 237 11               # ssor.c:237:11
	cmpl	$0, timeron(%rip)
	je	.LBB8_57
# BB#56:                                # %if.then233
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 237 20 is_stmt 0 discriminator 1 # ssor.c:237:20
	movl	$11, %edi
	callq	timer_stop
.Ltmp492:
.LBB8_57:                               # %if.end235
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 258 23 is_stmt 1     # ssor.c:258:23
	movsd	tolrsd(%rip), %xmm0     # xmm0 = mem[0],zero
	.loc	13 258 35 is_stmt 0     # ssor.c:258:35
	ucomisd	rsdnm(%rip), %xmm0
	jbe	.LBB8_72
# BB#58:                                # %land.lhs.true
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 258 51 discriminator 1 # ssor.c:258:51
	movsd	tolrsd+8(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	13 258 63 discriminator 1 # ssor.c:258:63
	ucomisd	rsdnm+8(%rip), %xmm0
	jbe	.LBB8_72
# BB#59:                                # %land.lhs.true238
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 259 23 is_stmt 1     # ssor.c:259:23
	movsd	tolrsd+16(%rip), %xmm0  # xmm0 = mem[0],zero
	.loc	13 259 35 is_stmt 0     # ssor.c:259:35
	ucomisd	rsdnm+16(%rip), %xmm0
	jbe	.LBB8_72
# BB#60:                                # %land.lhs.true240
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 259 51 discriminator 1 # ssor.c:259:51
	movsd	tolrsd+24(%rip), %xmm0  # xmm0 = mem[0],zero
	.loc	13 259 63 discriminator 1 # ssor.c:259:63
	ucomisd	rsdnm+24(%rip), %xmm0
	jbe	.LBB8_72
# BB#61:                                # %land.lhs.true242
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 260 23 is_stmt 1     # ssor.c:260:23
	movsd	tolrsd+32(%rip), %xmm0  # xmm0 = mem[0],zero
.Ltmp493:
	.loc	13 258 10 discriminator 2 # ssor.c:258:10
	ucomisd	rsdnm+32(%rip), %xmm0
	ja	.LBB8_62
.Ltmp494:
	.p2align	4, 0x90
.LBB8_72:                               # %for.inc247
                                        #   in Loop: Header=BB8_4 Depth=1
	.loc	13 115 25 discriminator 1 # ssor.c:115:25
	cmpl	%r14d, %ebx
	.loc	13 115 40 is_stmt 0 discriminator 2 # ssor.c:115:40
	leal	1(%rbx), %eax
.Ltmp495:
	#DEBUG_VALUE: ssor:istep <- %EAX
	movl	%eax, %ebx
.Ltmp496:
	#DEBUG_VALUE: ssor:istep <- %EBX
	jl	.LBB8_4
.Ltmp497:
.LBB8_73:                               # %for.end249
	.loc	13 269 3 is_stmt 1      # ssor.c:269:3
	movl	$1, %edi
	callq	timer_stop
	.loc	13 270 13               # ssor.c:270:13
	movl	$1, %edi
	callq	timer_read
	.loc	13 270 11 is_stmt 0     # ssor.c:270:11
	movsd	%xmm0, maxtime(%rip)
	.loc	13 271 1 is_stmt 1      # ssor.c:271:1
	addq	$164072, %rsp           # imm = 0x280E8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB8_62:                               # %if.then244
.Ltmp498:
	.loc	13 262 7                # ssor.c:262:7
	movl	$.L.str.1.34, %edi
	xorl	%eax, %eax
	movl	%ebx, %esi
	callq	printf
	jmp	.LBB8_73
.Ltmp499:
.Lfunc_end8:
	.size	ssor, .Lfunc_end8-ssor
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI9_0:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
.LCPI9_13:
	.quad	4616189618054758400     # double 4
	.quad	4616189618054758400     # double 4
.LCPI9_14:
	.quad	4618441417868443648     # double 6
	.quad	4618441417868443648     # double 6
.LCPI9_15:
	.quad	4617315517961601024     # double 5
	.quad	4617315517961601024     # double 5
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI9_1:
	.quad	4607182418800017408     # double 1
.LCPI9_2:
	.quad	4602678819172646912     # double 0.5
.LCPI9_3:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI9_4:
	.quad	4608683618675807573     # double 1.3333333333333333
.LCPI9_5:
	.quad	-4621053505652318538    # double -0.47999999999999987
.LCPI9_6:
	.quad	4595172819793696085     # double 0.16666666666666666
.LCPI9_7:
	.quad	4611505874442293083     # double 1.9599999999999997
.LCPI9_8:
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI9_9:
	.quad	4608983858650965606     # double 1.3999999999999999
.LCPI9_10:
	.quad	4617315517961601024     # double 5
.LCPI9_11:
	.quad	4616189618054758400     # double 4
.LCPI9_12:
	.quad	4618441417868443648     # double 6
	.text
	.globl	rhs
	.p2align	4, 0x90
	.type	rhs,@function
rhs:                                    # @rhs
.Lfunc_begin9:
	.file	14 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/rhs.c"
	.loc	14 41 0                 # rhs.c:41:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	14 56 7 prologue_end    # rhs.c:56:7
	pushq	%rbp
.Ltmp500:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp501:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp502:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp503:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp504:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp505:
	.cfi_def_cfa_offset 56
	subq	$6184, %rsp             # imm = 0x1828
.Ltmp506:
	.cfi_def_cfa_offset 6240
.Ltmp507:
	.cfi_offset %rbx, -56
.Ltmp508:
	.cfi_offset %r12, -48
.Ltmp509:
	.cfi_offset %r13, -40
.Ltmp510:
	.cfi_offset %r14, -32
.Ltmp511:
	.cfi_offset %r15, -24
.Ltmp512:
	.cfi_offset %rbp, -16
	cmpl	$0, timeron(%rip)
	je	.LBB9_2
# BB#1:                                 # %if.then
	.loc	14 56 16 is_stmt 0 discriminator 1 # rhs.c:56:16
	movl	$5, %edi
	callq	timer_start
.Ltmp513:
.LBB9_2:                                # %for.cond.preheader
	.loc	14 57 3 is_stmt 1 discriminator 1 # rhs.c:57:3
	movslq	nz(%rip), %r8
	.loc	14 57 19 is_stmt 0 discriminator 1 # rhs.c:57:19
	testq	%r8, %r8
	jle	.LBB9_9
# BB#3:                                 # %for.cond30.preheader.lr.ph
.Ltmp514:
	.loc	14 58 21 is_stmt 1 discriminator 1 # rhs.c:58:21
	movl	ny(%rip), %eax
.Ltmp515:
	.loc	14 59 23 discriminator 1 # rhs.c:59:23
	movl	nx(%rip), %ebx
.Ltmp516:
	.loc	14 58 5 discriminator 1 # rhs.c:58:5
	testl	%eax, %eax
	setle	%cl
	testl	%ebx, %ebx
	setle	%r9b
	orb	%cl, %r9b
	xorl	%r10d, %r10d
.Ltmp517:
	.loc	14 61 29                # rhs.c:61:29
	movapd	.LCPI9_0(%rip), %xmm0   # xmm0 = [9223372036854775808,9223372036854775808]
.Ltmp518:
	.loc	14 63 19                # rhs.c:63:19
	movsd	.LCPI9_1(%rip), %xmm1   # xmm1 = mem[0],zero
	movsd	.LCPI9_2(%rip), %xmm2   # xmm2 = mem[0],zero
	xorl	%edi, %edi
.Ltmp519:
	.p2align	4, 0x90
.LBB9_4:                                # %for.cond30.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB9_5 Depth 2
                                        #       Child Loop BB9_6 Depth 3
	.loc	14 58 5 discriminator 1 # rhs.c:58:5
	testb	%r9b, %r9b
	movq	%r10, %rsi
	movl	$0, %ecx
	jne	.LBB9_8
	.p2align	4, 0x90
.LBB9_5:                                # %for.cond36.preheader.lr.ph.us
                                        #   Parent Loop BB9_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB9_6 Depth 3
	movl	%ebx, %edx
	movq	%rsi, %rbp
	.p2align	4, 0x90
.LBB9_6:                                # %for.cond36.preheader.us
                                        #   Parent Loop BB9_4 Depth=1
                                        #     Parent Loop BB9_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp520:
	.loc	14 61 31                # rhs.c:61:31
	movupd	frct(%rbp,%rbp,4), %xmm3
	.loc	14 61 29 is_stmt 0      # rhs.c:61:29
	xorpd	%xmm0, %xmm3
	.loc	14 61 27                # rhs.c:61:27
	movupd	%xmm3, rsd(%rbp,%rbp,4)
	.loc	14 61 31                # rhs.c:61:31
	movupd	frct+16(%rbp,%rbp,4), %xmm3
	.loc	14 61 29                # rhs.c:61:29
	xorpd	%xmm0, %xmm3
	.loc	14 61 27                # rhs.c:61:27
	movupd	%xmm3, rsd+16(%rbp,%rbp,4)
	.loc	14 61 29                # rhs.c:61:29
	movsd	frct+32(%rbp,%rbp,4), %xmm3 # xmm3 = mem[0],zero
	xorpd	%xmm0, %xmm3
	.loc	14 61 27                # rhs.c:61:27
	movlpd	%xmm3, rsd+32(%rbp,%rbp,4)
.Ltmp521:
	.loc	14 63 19 is_stmt 1      # rhs.c:63:19
	movapd	%xmm1, %xmm3
	divsd	u(%rbp,%rbp,4), %xmm3
.Ltmp522:
	#DEBUG_VALUE: rhs:tmp <- %XMM3
	.loc	14 64 24                # rhs.c:64:24
	movsd	%xmm3, rho_i(%rbp)
	.loc	14 65 33                # rhs.c:65:33
	movsd	u+8(%rbp,%rbp,4), %xmm4 # xmm4 = mem[0],zero
	.loc	14 65 47 is_stmt 0      # rhs.c:65:47
	mulsd	%xmm4, %xmm4
	.loc	14 66 33 is_stmt 1      # rhs.c:66:33
	movsd	u+16(%rbp,%rbp,4), %xmm5 # xmm5 = mem[0],zero
	.loc	14 66 47 is_stmt 0      # rhs.c:66:47
	mulsd	%xmm5, %xmm5
	.loc	14 66 31                # rhs.c:66:31
	addsd	%xmm4, %xmm5
	.loc	14 67 33 is_stmt 1      # rhs.c:67:33
	movsd	u+24(%rbp,%rbp,4), %xmm4 # xmm4 = mem[0],zero
	.loc	14 67 47 is_stmt 0      # rhs.c:67:47
	mulsd	%xmm4, %xmm4
	.loc	14 67 31                # rhs.c:67:31
	addsd	%xmm5, %xmm4
	.loc	14 65 28 is_stmt 1      # rhs.c:65:28
	mulsd	%xmm2, %xmm4
	.loc	14 68 28                # rhs.c:68:28
	mulsd	%xmm3, %xmm4
	.loc	14 65 21                # rhs.c:65:21
	movsd	%xmm4, qs(%rbp)
.Ltmp523:
	.loc	14 59 7 discriminator 1 # rhs.c:59:7
	addq	$8, %rbp
	decl	%edx
	jne	.LBB9_6
.Ltmp524:
# BB#7:                                 # %for.cond33.for.inc122_crit_edge.us
                                        #   in Loop: Header=BB9_5 Depth=2
	#DEBUG_VALUE: rhs:tmp <- %XMM3
	.loc	14 58 5 discriminator 1 # rhs.c:58:5
	incq	%rcx
	addq	$520, %rsi              # imm = 0x208
	cmpl	%eax, %ecx
	jne	.LBB9_5
.Ltmp525:
.LBB9_8:                                # %for.inc125
                                        #   in Loop: Header=BB9_4 Depth=1
	.loc	14 57 3 discriminator 1 # rhs.c:57:3
	incq	%rdi
	addq	$33800, %r10            # imm = 0x8408
	.loc	14 57 17 is_stmt 0 discriminator 1 # rhs.c:57:17
	cmpq	%r8, %rdi
	jl	.LBB9_4
.Ltmp526:
.LBB9_9:                                # %for.end127
	.loc	14 73 7 is_stmt 1       # rhs.c:73:7
	cmpl	$0, timeron(%rip)
	je	.LBB9_11
# BB#10:                                # %if.then129
	.loc	14 73 16 is_stmt 0 discriminator 1 # rhs.c:73:16
	movl	$2, %edi
	callq	timer_start
.Ltmp527:
	.loc	14 77 19 is_stmt 1 discriminator 1 # rhs.c:77:19
	movl	nz(%rip), %r8d
.LBB9_11:                               # %for.cond131.preheader
	.loc	14 77 22 is_stmt 0 discriminator 1 # rhs.c:77:22
	decl	%r8d
	.loc	14 77 3 discriminator 1 # rhs.c:77:3
	cmpl	$2, %r8d
	jl	.LBB9_28
# BB#12:                                # %for.body134.lr.ph
.Ltmp528:
	.loc	14 183 30 is_stmt 1     # rhs.c:183:30
	movslq	nx(%rip), %r13
.Ltmp529:
	.loc	14 77 3 discriminator 1 # rhs.c:77:3
	movslq	ist(%rip), %r14
.Ltmp530:
	.loc	14 156 13               # rhs.c:156:13
	movq	%r14, 464(%rsp)         # 8-byte Spill
	movsd	dssp(%rip), %xmm7       # xmm7 = mem[0],zero
.Ltmp531:
	.loc	14 126 19               # rhs.c:126:19
	movapd	%xmm7, 80(%rsp)         # 16-byte Spill
	movsd	tx1(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	14 130 13               # rhs.c:130:13
	movsd	tx3(%rip), %xmm2        # xmm2 = mem[0],zero
	movapd	%xmm2, 432(%rsp)        # 16-byte Spill
	movsd	.LCPI9_3(%rip), %xmm3   # xmm3 = mem[0],zero
	.loc	14 130 17 is_stmt 0     # rhs.c:130:17
	mulsd	%xmm2, %xmm3
	.loc	14 126 17 is_stmt 1     # rhs.c:126:17
	movapd	%xmm3, 208(%rsp)        # 16-byte Spill
	movsd	dx1(%rip), %xmm4        # xmm4 = mem[0],zero
	movhpd	dx2(%rip), %xmm4        # xmm4 = xmm4[0],mem[0]
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm0, %xmm4
	movapd	%xmm4, 192(%rsp)        # 16-byte Spill
	.loc	14 136 17               # rhs.c:136:17
	movsd	dx3(%rip), %xmm4        # xmm4 = mem[0],zero
	movhpd	dx4(%rip), %xmm4        # xmm4 = xmm4[0],mem[0]
	mulpd	%xmm0, %xmm4
	movapd	%xmm4, 176(%rsp)        # 16-byte Spill
	.loc	14 146 17               # rhs.c:146:17
	mulsd	dx5(%rip), %xmm1
	movapd	%xmm1, 448(%rsp)        # 16-byte Spill
	movsd	.LCPI9_4(%rip), %xmm0   # xmm0 = mem[0],zero
.Ltmp532:
	.loc	14 113 32               # rhs.c:113:32
	mulsd	%xmm2, %xmm0
	movsd	.LCPI9_5(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	14 117 11               # rhs.c:117:11
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 72(%rsp)         # 8-byte Spill
	movsd	.LCPI9_6(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	14 120 11               # rhs.c:120:11
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 40(%rsp)         # 8-byte Spill
	movsd	.LCPI9_7(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	14 121 21               # rhs.c:121:21
	mulsd	%xmm2, %xmm1
	movsd	%xmm1, 32(%rsp)         # 8-byte Spill
.Ltmp533:
	.loc	14 94 15                # rhs.c:94:15
	movsd	tx2(%rip), %xmm9        # xmm9 = mem[0],zero
.Ltmp534:
	.loc	14 77 3 discriminator 1 # rhs.c:77:3
	movapd	%xmm9, 160(%rsp)        # 16-byte Spill
	movslq	jst(%rip), %rdx
	movq	%rdx, 104(%rsp)         # 8-byte Spill
	movslq	%r8d, %rcx
.Ltmp535:
	.loc	14 130 46               # rhs.c:130:46
	movq	%rcx, 96(%rsp)          # 8-byte Spill
	leaq	(,%r14,8), %rcx
	leaq	flux+8(%rcx,%rcx,4), %rsi
	movq	%rsi, 416(%rsp)         # 8-byte Spill
	leaq	(%rcx,%rcx,4), %rbp
	.loc	14 135 46               # rhs.c:135:46
	leaq	flux+16(%rcx,%rcx,4), %rsi
	.loc	14 145 46               # rhs.c:145:46
	movq	%rsi, 400(%rsp)         # 8-byte Spill
	leaq	flux+32(%rcx,%rcx,4), %rsi
.Ltmp536:
	.loc	14 94 19                # rhs.c:94:19
	movq	%rsi, 128(%rsp)         # 8-byte Spill
	movapd	%xmm9, %xmm5
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
.Ltmp537:
	.loc	14 113 38               # rhs.c:113:38
	movaps	%xmm5, 304(%rsp)        # 16-byte Spill
	unpcklpd	%xmm2, %xmm0    # xmm0 = xmm0[0],xmm2[0]
	movapd	%xmm0, 112(%rsp)        # 16-byte Spill
.Ltmp538:
	.loc	14 135 27               # rhs.c:135:27
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	movaps	%xmm3, 288(%rsp)        # 16-byte Spill
.Ltmp539:
	.loc	14 169 20               # rhs.c:169:20
	movapd	%xmm7, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp540:
	.loc	14 77 3 discriminator 1 # rhs.c:77:3
	movaps	%xmm0, 272(%rsp)        # 16-byte Spill
	imulq	$520, %rdx, %r11        # imm = 0x208
	addq	$33800, %r11            # imm = 0x8408
	imulq	$2600, %rdx, %rdx       # imm = 0xA28
	leaq	rsd+169032(%rdx,%rbp), %r8
	leaq	flux+72(%rcx,%rcx,4), %rbx
	movq	%rbx, 256(%rsp)         # 8-byte Spill
	leaq	u+169032(%rdx,%rbp), %rsi
	addq	%rdx, %rbp
	leaq	flux+48(%rcx,%rcx,4), %rcx
	movq	%rcx, 384(%rsp)         # 8-byte Spill
	leal	-1(%r14), %ecx
	movslq	%ecx, %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	u+169032(%rdx,%rcx,8), %rbx
.Ltmp541:
	.loc	14 85 47                # rhs.c:85:47
	movsd	.LCPI9_8(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI9_9(%rip), %xmm6   # xmm6 = mem[0],zero
.Ltmp542:
	.loc	14 183 40               # rhs.c:183:40
	leaq	-2(%r13), %rcx
	.loc	14 183 30 is_stmt 0     # rhs.c:183:30
	shlq	$3, %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
.Ltmp543:
	.loc	14 166 26 is_stmt 1 discriminator 1 # rhs.c:166:26
	leaq	-3(%r13), %r9
.Ltmp544:
	.loc	14 180 40               # rhs.c:180:40
	leaq	-5(%r13), %rcx
	.loc	14 181 40               # rhs.c:181:40
	movq	%rcx, 64(%rsp)          # 8-byte Spill
	leaq	-4(%r13), %rcx
.Ltmp545:
	.loc	14 77 3 discriminator 1 # rhs.c:77:3
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	movslq	iend(%rip), %r10
	movslq	jend(%rip), %rcx
	movq	%rcx, 320(%rsp)         # 8-byte Spill
	movl	$1, %ecx
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB9_13:                               # %for.body134
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB9_14 Depth 2
                                        #       Child Loop BB9_15 Depth 3
                                        #       Child Loop BB9_17 Depth 3
                                        #       Child Loop BB9_19 Depth 3
                                        #       Child Loop BB9_22 Depth 3
                                        #       Child Loop BB9_25 Depth 3
	movq	%rdi, 48(%rsp)          # 8-byte Spill
	movq	%rsi, 232(%rsp)         # 8-byte Spill
	movq	%r8, 24(%rsp)           # 8-byte Spill
	movq	%rdx, 56(%rsp)          # 8-byte Spill
	movq	%r11, 8(%rsp)           # 8-byte Spill
	movq	104(%rsp), %r15         # 8-byte Reload
.Ltmp546:
	.loc	14 78 5 discriminator 1 # rhs.c:78:5
	movq	320(%rsp), %rcx         # 8-byte Reload
	cmpl	%ecx, %r15d
	movq	%rdx, %r12
	movq	%rdi, 336(%rsp)         # 8-byte Spill
	movq	%rsi, %rax
	jge	.LBB9_27
	.p2align	4, 0x90
.LBB9_14:                               # %for.cond138.preheader
                                        #   Parent Loop BB9_13 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB9_15 Depth 3
                                        #       Child Loop BB9_17 Depth 3
                                        #       Child Loop BB9_19 Depth 3
                                        #       Child Loop BB9_22 Depth 3
                                        #       Child Loop BB9_25 Depth 3
.Ltmp547:
	.loc	14 79 7 discriminator 1 # rhs.c:79:7
	testl	%r13d, %r13d
	movq	%r11, %rcx
	movl	$flux+32, %esi
	movl	$0, %edi
	jle	.LBB9_16
	.p2align	4, 0x90
.LBB9_15:                               # %for.body140
                                        #   Parent Loop BB9_13 Depth=1
                                        #     Parent Loop BB9_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp548:
	.loc	14 80 22                # rhs.c:80:22
	movq	u+8(%rcx,%rcx,4), %rdx
	.loc	14 80 20 is_stmt 0      # rhs.c:80:20
	movq	%rdx, -32(%rsi)
	.loc	14 81 15 is_stmt 1      # rhs.c:81:15
	movd	%rdx, %xmm0
	movsd	rho_i(%rcx), %xmm1      # xmm1 = mem[0],zero
	.loc	14 81 29 is_stmt 0      # rhs.c:81:29
	mulsd	%xmm0, %xmm1
.Ltmp549:
	#DEBUG_VALUE: rhs:u21 <- %XMM1
	.loc	14 83 13 is_stmt 1      # rhs.c:83:13
	movsd	qs(%rcx), %xmm2         # xmm2 = mem[0],zero
.Ltmp550:
	#DEBUG_VALUE: rhs:q <- %XMM2
	.loc	14 85 36                # rhs.c:85:36
	mulsd	%xmm1, %xmm0
	.loc	14 85 51 is_stmt 0      # rhs.c:85:51
	movsd	u+32(%rcx,%rcx,4), %xmm3 # xmm3 = mem[0],zero
	.loc	14 85 65                # rhs.c:85:65
	movapd	%xmm3, %xmm4
	subsd	%xmm2, %xmm4
	.loc	14 85 47                # rhs.c:85:47
	mulsd	%xmm7, %xmm4
	.loc	14 85 42                # rhs.c:85:42
	addsd	%xmm0, %xmm4
	.loc	14 85 20                # rhs.c:85:20
	movsd	%xmm4, -24(%rsi)
	.loc	14 86 22 is_stmt 1      # rhs.c:86:22
	movupd	u+16(%rcx,%rcx,4), %xmm0
	.loc	14 88 27                # rhs.c:88:27
	mulsd	%xmm6, %xmm3
	.loc	14 88 48 is_stmt 0      # rhs.c:88:48
	mulsd	%xmm7, %xmm2
.Ltmp551:
	.loc	14 88 43                # rhs.c:88:43
	subsd	%xmm2, %xmm3
	.loc	14 88 54                # rhs.c:88:54
	mulsd	%xmm1, %xmm3
	.loc	14 86 36 is_stmt 1      # rhs.c:86:36
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
.Ltmp552:
	mulpd	%xmm0, %xmm1
	.loc	14 86 20 is_stmt 0      # rhs.c:86:20
	movupd	%xmm1, -16(%rsi)
	.loc	14 88 20 is_stmt 1      # rhs.c:88:20
	movsd	%xmm3, (%rsi)
.Ltmp553:
	.loc	14 79 7 discriminator 1 # rhs.c:79:7
	incq	%rdi
	.loc	14 79 21 is_stmt 0 discriminator 1 # rhs.c:79:21
	addq	$40, %rsi
	addq	$8, %rcx
	cmpq	%r13, %rdi
	.loc	14 79 7 discriminator 1 # rhs.c:79:7
	jl	.LBB9_15
.Ltmp554:
.LBB9_16:                               # %for.end230
                                        #   in Loop: Header=BB9_14 Depth=2
	.loc	14 91 7 is_stmt 1 discriminator 1 # rhs.c:91:7
	cmpl	%r10d, %r14d
	movq	256(%rsp), %rcx         # 8-byte Reload
	movq	%r8, %rsi
	movq	%r14, %rdi
	movapd	432(%rsp), %xmm10       # 16-byte Reload
	movapd	112(%rsp), %xmm7        # 16-byte Reload
	movsd	72(%rsp), %xmm8         # 8-byte Reload
                                        # xmm8 = mem[0],zero
	movsd	40(%rsp), %xmm15        # 8-byte Reload
                                        # xmm15 = mem[0],zero
	jge	.LBB9_18
	.p2align	4, 0x90
.LBB9_17:                               # %for.cond234.preheader
                                        #   Parent Loop BB9_13 Depth=1
                                        #     Parent Loop BB9_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	incq	%rdi
.Ltmp555:
	.loc	14 93 30                # rhs.c:93:30
	movupd	-32(%rsi), %xmm0
	.loc	14 94 23                # rhs.c:94:23
	movupd	-32(%rcx), %xmm1
	.loc	14 94 38 is_stmt 0      # rhs.c:94:38
	movupd	-112(%rcx), %xmm2
	.loc	14 94 36                # rhs.c:94:36
	subpd	%xmm2, %xmm1
	.loc	14 94 19                # rhs.c:94:19
	mulpd	%xmm5, %xmm1
	.loc	14 94 13                # rhs.c:94:13
	subpd	%xmm1, %xmm0
	.loc	14 93 27 is_stmt 1      # rhs.c:93:27
	movupd	%xmm0, -32(%rsi)
	.loc	14 93 30 is_stmt 0      # rhs.c:93:30
	movupd	-16(%rsi), %xmm0
	.loc	14 94 23 is_stmt 1      # rhs.c:94:23
	movupd	-16(%rcx), %xmm1
	.loc	14 94 38 is_stmt 0      # rhs.c:94:38
	movupd	-96(%rcx), %xmm2
	.loc	14 94 36                # rhs.c:94:36
	subpd	%xmm2, %xmm1
	.loc	14 94 19                # rhs.c:94:19
	mulpd	%xmm5, %xmm1
	.loc	14 94 13                # rhs.c:94:13
	subpd	%xmm1, %xmm0
	.loc	14 93 27 is_stmt 1      # rhs.c:93:27
	movupd	%xmm0, -16(%rsi)
	.loc	14 93 30 is_stmt 0      # rhs.c:93:30
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	14 94 23 is_stmt 1      # rhs.c:94:23
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	.loc	14 94 36 is_stmt 0      # rhs.c:94:36
	subsd	-80(%rcx), %xmm1
	.loc	14 94 19                # rhs.c:94:19
	mulsd	%xmm9, %xmm1
	.loc	14 94 13                # rhs.c:94:13
	subsd	%xmm1, %xmm0
	.loc	14 93 27 is_stmt 1      # rhs.c:93:27
	movsd	%xmm0, (%rsi)
.Ltmp556:
	.loc	14 91 23 discriminator 1 # rhs.c:91:23
	addq	$40, %rsi
	addq	$40, %rcx
	cmpq	%r10, %rdi
	.loc	14 91 7 is_stmt 0 discriminator 1 # rhs.c:91:7
	jl	.LBB9_17
.Ltmp557:
.LBB9_18:                               # %for.end271
                                        #   in Loop: Header=BB9_14 Depth=2
	.loc	14 98 7 is_stmt 1 discriminator 1 # rhs.c:98:7
	cmpl	%r13d, %r14d
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	%rax, %rsi
	movq	%r14, %rdi
	movapd	448(%rsp), %xmm9        # 16-byte Reload
	movapd	208(%rsp), %xmm11       # 16-byte Reload
	movapd	192(%rsp), %xmm12       # 16-byte Reload
	movapd	176(%rsp), %xmm13       # 16-byte Reload
	movsd	32(%rsp), %xmm14        # 8-byte Reload
                                        # xmm14 = mem[0],zero
	jge	.LBB9_20
	.p2align	4, 0x90
.LBB9_19:                               # %for.body274
                                        #   Parent Loop BB9_13 Depth=1
                                        #     Parent Loop BB9_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp558:
	.loc	14 99 15                # rhs.c:99:15
	movsd	rho_i(%r11,%rdi,8), %xmm0 # xmm0 = mem[0],zero
.Ltmp559:
	#DEBUG_VALUE: rhs:tmp <- %XMM0
	.loc	14 101 22               # rhs.c:101:22
	movupd	-24(%rsi), %xmm1
	.loc	14 101 20 is_stmt 0     # rhs.c:101:20
	movapd	%xmm0, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm1, %xmm4
	movsd	-8(%rsi), %xmm1         # xmm1 = mem[0],zero
	.loc	14 103 20 is_stmt 1     # rhs.c:103:20
	mulsd	%xmm0, %xmm1
.Ltmp560:
	#DEBUG_VALUE: rhs:u41i <- %XMM1
	.loc	14 104 20               # rhs.c:104:20
	mulsd	(%rsi), %xmm0
.Ltmp561:
	#DEBUG_VALUE: rhs:u51i <- %XMM0
	.loc	14 106 15               # rhs.c:106:15
	movsd	rho_i-8(%r11,%rdi,8), %xmm2 # xmm2 = mem[0],zero
.Ltmp562:
	#DEBUG_VALUE: rhs:tmp <- %XMM2
	.loc	14 108 24               # rhs.c:108:24
	movupd	-64(%rsi), %xmm5
	.loc	14 108 22 is_stmt 0     # rhs.c:108:22
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm5, %xmm3
	movsd	-48(%rsi), %xmm5        # xmm5 = mem[0],zero
	.loc	14 110 22 is_stmt 1     # rhs.c:110:22
	mulsd	%xmm2, %xmm5
.Ltmp563:
	#DEBUG_VALUE: rhs:u41im1 <- %XMM5
	.loc	14 111 22               # rhs.c:111:22
	mulsd	-40(%rsi), %xmm2
.Ltmp564:
	#DEBUG_VALUE: rhs:u51im1 <- %XMM2
	.loc	14 113 45               # rhs.c:113:45
	movapd	%xmm4, %xmm6
	subpd	%xmm3, %xmm6
	.loc	14 113 38 is_stmt 0     # rhs.c:113:38
	mulpd	%xmm7, %xmm6
	.loc	14 113 20               # rhs.c:113:20
	movupd	%xmm6, -24(%rcx)
	.loc	14 115 35 is_stmt 1     # rhs.c:115:35
	movapd	%xmm1, %xmm6
	subsd	%xmm5, %xmm6
	.loc	14 115 26 is_stmt 0     # rhs.c:115:26
	mulsd	%xmm10, %xmm6
	.loc	14 115 20               # rhs.c:115:20
	movsd	%xmm6, -8(%rcx)
	.loc	14 117 27 is_stmt 1     # rhs.c:117:27
	movapd	%xmm4, %xmm6
	mulsd	%xmm6, %xmm6
	.loc	14 117 43 is_stmt 0     # rhs.c:117:43
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	mulsd	%xmm4, %xmm4
	.loc	14 117 37               # rhs.c:117:37
	addsd	%xmm6, %xmm4
	.loc	14 117 59               # rhs.c:117:59
	mulsd	%xmm1, %xmm1
.Ltmp565:
	.loc	14 117 53               # rhs.c:117:53
	addsd	%xmm4, %xmm1
	.loc	14 118 29 is_stmt 1     # rhs.c:118:29
	movapd	%xmm3, %xmm4
	mulsd	%xmm4, %xmm4
	.loc	14 118 45 is_stmt 0     # rhs.c:118:45
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	mulsd	%xmm3, %xmm3
	.loc	14 118 37               # rhs.c:118:37
	addsd	%xmm4, %xmm3
	.loc	14 118 61               # rhs.c:118:61
	mulsd	%xmm5, %xmm5
.Ltmp566:
	.loc	14 118 53               # rhs.c:118:53
	addsd	%xmm3, %xmm5
	.loc	14 118 19               # rhs.c:118:19
	subsd	%xmm5, %xmm1
	.loc	14 117 17 is_stmt 1     # rhs.c:117:17
	mulsd	%xmm8, %xmm1
	.loc	14 120 31               # rhs.c:120:31
	subsd	%xmm4, %xmm6
	.loc	14 120 17 is_stmt 0     # rhs.c:120:17
	mulsd	%xmm15, %xmm6
	.loc	14 119 11 is_stmt 1     # rhs.c:119:11
	addsd	%xmm1, %xmm6
	.loc	14 121 36               # rhs.c:121:36
	subsd	%xmm2, %xmm0
.Ltmp567:
	.loc	14 121 27 is_stmt 0     # rhs.c:121:27
	mulsd	%xmm14, %xmm0
	.loc	14 121 11               # rhs.c:121:11
	addsd	%xmm6, %xmm0
	.loc	14 116 20 is_stmt 1     # rhs.c:116:20
	movsd	%xmm0, (%rcx)
.Ltmp568:
	.loc	14 98 7 discriminator 1 # rhs.c:98:7
	incq	%rdi
	.loc	14 98 23 is_stmt 0 discriminator 1 # rhs.c:98:23
	addq	$40, %rsi
	addq	$40, %rcx
	cmpq	%r13, %rdi
	.loc	14 98 7 discriminator 1 # rhs.c:98:7
	jl	.LBB9_19
.Ltmp569:
.LBB9_20:                               # %for.end400
                                        #   in Loop: Header=BB9_14 Depth=2
	movq	%rax, 368(%rsp)         # 8-byte Spill
.Ltmp570:
	.loc	14 124 7 is_stmt 1 discriminator 1 # rhs.c:124:7
	cmpl	%r10d, %r14d
	movapd	288(%rsp), %xmm8        # 16-byte Reload
	jge	.LBB9_23
# BB#21:                                # %for.body403.lr.ph
                                        #   in Loop: Header=BB9_14 Depth=2
.Ltmp571:
	.loc	14 127 34               # rhs.c:127:34
	imulq	$2600, %r15, %rcx       # imm = 0xA28
	imulq	$169000, 144(%rsp), %rdx # 8-byte Folded Reload
                                        # imm = 0x29428
	addq	%rcx, %rdx
	leaq	(%r14,%r14,4), %rcx
	.loc	14 130 46               # rhs.c:130:46
	movq	416(%rsp), %rsi         # 8-byte Reload
	movsd	(%rsi), %xmm7           # xmm7 = mem[0],zero
	.loc	14 127 34               # rhs.c:127:34
	movupd	u(%rdx,%rcx,8), %xmm2
	.loc	14 135 46               # rhs.c:135:46
	movq	400(%rsp), %rsi         # 8-byte Reload
	movupd	(%rsi), %xmm5
	.loc	14 137 34               # rhs.c:137:34
	movupd	u+16(%rdx,%rcx,8), %xmm3
	.loc	14 145 46               # rhs.c:145:46
	movq	128(%rsp), %rsi         # 8-byte Reload
	movsd	(%rsi), %xmm0           # xmm0 = mem[0],zero
	.loc	14 147 34               # rhs.c:147:34
	movsd	u+32(%rdx,%rcx,8), %xmm4 # xmm4 = mem[0],zero
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	%r14, %rdi
.Ltmp572:
	.p2align	4, 0x90
.LBB9_22:                               # %for.body403
                                        #   Parent Loop BB9_13 Depth=1
                                        #     Parent Loop BB9_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	14 124 7 discriminator 1 # rhs.c:124:7
	incq	%rdi
.Ltmp573:
	.loc	14 130 31               # rhs.c:130:31
	movsd	(%rcx), %xmm10          # xmm10 = mem[0],zero
	.loc	14 130 44 is_stmt 0     # rhs.c:130:44
	movapd	%xmm10, %xmm6
	subsd	%xmm7, %xmm6
	.loc	14 130 27               # rhs.c:130:27
	mulsd	%xmm11, %xmm6
	.loc	14 130 11               # rhs.c:130:11
	addsd	rsd+169008(%rbp,%rsi), %xmm6
	.loc	14 126 34 is_stmt 1     # rhs.c:126:34
	movupd	-32(%rbx,%rsi), %xmm7
	.loc	14 127 32               # rhs.c:127:32
	addpd	%xmm2, %xmm2
	.loc	14 127 26 is_stmt 0     # rhs.c:127:26
	subpd	%xmm2, %xmm7
	.loc	14 128 34 is_stmt 1     # rhs.c:128:34
	movupd	u+169040(%rbp,%rsi), %xmm2
	.loc	14 128 26 is_stmt 0     # rhs.c:128:26
	addpd	%xmm2, %xmm7
	.loc	14 126 23 is_stmt 1     # rhs.c:126:23
	mulpd	%xmm12, %xmm7
	.loc	14 126 11 is_stmt 0     # rhs.c:126:11
	movsd	rsd+169000(%rbp,%rsi), %xmm1 # xmm1 = mem[0],zero
	unpcklpd	%xmm6, %xmm1    # xmm1 = xmm1[0],xmm6[0]
	addpd	%xmm7, %xmm1
	.loc	14 125 25 is_stmt 1     # rhs.c:125:25
	movupd	%xmm1, rsd+169000(%rbp,%rsi)
	.loc	14 134 27               # rhs.c:134:27
	movupd	rsd+169016(%rbp,%rsi), %xmm1
	.loc	14 135 31               # rhs.c:135:31
	movupd	8(%rcx), %xmm6
	.loc	14 135 44 is_stmt 0     # rhs.c:135:44
	movapd	%xmm6, %xmm7
	subpd	%xmm5, %xmm7
	.loc	14 135 27               # rhs.c:135:27
	mulpd	%xmm8, %xmm7
	.loc	14 135 11               # rhs.c:135:11
	addpd	%xmm1, %xmm7
	.loc	14 136 34 is_stmt 1     # rhs.c:136:34
	movupd	-16(%rbx,%rsi), %xmm1
	.loc	14 137 32               # rhs.c:137:32
	addpd	%xmm3, %xmm3
	.loc	14 137 26 is_stmt 0     # rhs.c:137:26
	subpd	%xmm3, %xmm1
	.loc	14 138 34 is_stmt 1     # rhs.c:138:34
	movupd	u+169056(%rbp,%rsi), %xmm3
	.loc	14 138 26 is_stmt 0     # rhs.c:138:26
	addpd	%xmm3, %xmm1
	.loc	14 136 23 is_stmt 1     # rhs.c:136:23
	mulpd	%xmm13, %xmm1
	.loc	14 136 11 is_stmt 0     # rhs.c:136:11
	addpd	%xmm7, %xmm1
	.loc	14 134 25 is_stmt 1     # rhs.c:134:25
	movupd	%xmm1, rsd+169016(%rbp,%rsi)
	.loc	14 145 31               # rhs.c:145:31
	movsd	24(%rcx), %xmm1         # xmm1 = mem[0],zero
	.loc	14 145 44 is_stmt 0     # rhs.c:145:44
	movapd	%xmm1, %xmm5
	subsd	%xmm0, %xmm5
	.loc	14 145 27               # rhs.c:145:27
	mulsd	%xmm11, %xmm5
	.loc	14 145 11               # rhs.c:145:11
	addsd	rsd+169032(%rbp,%rsi), %xmm5
	.loc	14 146 34 is_stmt 1     # rhs.c:146:34
	movsd	(%rbx,%rsi), %xmm0      # xmm0 = mem[0],zero
	.loc	14 147 32               # rhs.c:147:32
	addsd	%xmm4, %xmm4
	.loc	14 147 26 is_stmt 0     # rhs.c:147:26
	subsd	%xmm4, %xmm0
	.loc	14 148 34 is_stmt 1     # rhs.c:148:34
	movsd	u+169072(%rbp,%rsi), %xmm4 # xmm4 = mem[0],zero
	.loc	14 148 26 is_stmt 0     # rhs.c:148:26
	addsd	%xmm4, %xmm0
	.loc	14 146 23 is_stmt 1     # rhs.c:146:23
	mulsd	%xmm9, %xmm0
	.loc	14 146 11 is_stmt 0     # rhs.c:146:11
	addsd	%xmm5, %xmm0
	.loc	14 144 25 is_stmt 1     # rhs.c:144:25
	movsd	%xmm0, rsd+169032(%rbp,%rsi)
.Ltmp574:
	.loc	14 124 23 discriminator 1 # rhs.c:124:23
	addq	$40, %rsi
	addq	$40, %rcx
	cmpq	%r10, %rdi
.Ltmp575:
	.loc	14 145 46               # rhs.c:145:46
	movapd	%xmm1, %xmm0
	.loc	14 130 46               # rhs.c:130:46
	movapd	%xmm10, %xmm7
	.loc	14 135 46               # rhs.c:135:46
	movapd	%xmm6, %xmm5
	jl	.LBB9_22
.Ltmp576:
.LBB9_23:                               # %for.body672
                                        #   in Loop: Header=BB9_14 Depth=2
	.loc	14 155 27               # rhs.c:155:27
	imulq	$169000, 144(%rsp), %r14 # 8-byte Folded Reload
                                        # imm = 0x29428
	imulq	$2600, %r15, %rsi       # imm = 0xA28
	cmpl	$3, %r9d
	movsd	rsd+40(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 156 30               # rhs.c:156:30
	movsd	u+40(%r14,%rsi), %xmm1  # xmm1 = mem[0],zero
	.loc	14 156 28 is_stmt 0     # rhs.c:156:28
	movapd	%xmm1, %xmm2
	movsd	.LCPI9_10(%rip), %xmm6  # xmm6 = mem[0],zero
	mulsd	%xmm6, %xmm2
	.loc	14 157 30 is_stmt 1     # rhs.c:157:30
	movsd	u+80(%r14,%rsi), %xmm3  # xmm3 = mem[0],zero
	.loc	14 157 28 is_stmt 0     # rhs.c:157:28
	movapd	%xmm3, %xmm4
	movsd	.LCPI9_11(%rip), %xmm5  # xmm5 = mem[0],zero
	movapd	%xmm5, %xmm7
	mulsd	%xmm7, %xmm4
	.loc	14 157 22               # rhs.c:157:22
	subsd	%xmm4, %xmm2
	.loc	14 158 30 is_stmt 1     # rhs.c:158:30
	movsd	u+120(%r14,%rsi), %xmm4 # xmm4 = mem[0],zero
	.loc	14 158 22 is_stmt 0     # rhs.c:158:22
	addsd	%xmm4, %xmm2
	movapd	80(%rsp), %xmm5         # 16-byte Reload
	.loc	14 156 18 is_stmt 1     # rhs.c:156:18
	mulsd	%xmm5, %xmm2
	.loc	14 156 11 is_stmt 0     # rhs.c:156:11
	subsd	%xmm2, %xmm0
	.loc	14 155 25 is_stmt 1     # rhs.c:155:25
	movsd	%xmm0, rsd+40(%r14,%rsi)
	.loc	14 159 27               # rhs.c:159:27
	movsd	rsd+80(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 160 28               # rhs.c:160:28
	mulsd	%xmm7, %xmm1
	.loc	14 161 28               # rhs.c:161:28
	movsd	.LCPI9_12(%rip), %xmm2  # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm8
	mulsd	%xmm8, %xmm3
	.loc	14 160 28               # rhs.c:160:28
	subsd	%xmm1, %xmm3
	.loc	14 162 28               # rhs.c:162:28
	mulsd	%xmm7, %xmm4
	.loc	14 162 22 is_stmt 0     # rhs.c:162:22
	subsd	%xmm4, %xmm3
	.loc	14 163 22 is_stmt 1     # rhs.c:163:22
	addsd	u+160(%r14,%rsi), %xmm3
	.loc	14 160 18               # rhs.c:160:18
	mulsd	%xmm5, %xmm3
	.loc	14 160 11 is_stmt 0     # rhs.c:160:11
	subsd	%xmm3, %xmm0
	.loc	14 159 25 is_stmt 1     # rhs.c:159:25
	movsd	%xmm0, rsd+80(%r14,%rsi)
	.loc	14 155 27               # rhs.c:155:27
	movsd	rsd+48(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 156 30               # rhs.c:156:30
	movsd	u+48(%r14,%rsi), %xmm1  # xmm1 = mem[0],zero
	.loc	14 156 28 is_stmt 0     # rhs.c:156:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	14 157 30 is_stmt 1     # rhs.c:157:30
	movsd	u+88(%r14,%rsi), %xmm3  # xmm3 = mem[0],zero
	.loc	14 157 28 is_stmt 0     # rhs.c:157:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 157 22               # rhs.c:157:22
	subsd	%xmm4, %xmm2
	.loc	14 158 30 is_stmt 1     # rhs.c:158:30
	movsd	u+128(%r14,%rsi), %xmm4 # xmm4 = mem[0],zero
	.loc	14 158 22 is_stmt 0     # rhs.c:158:22
	addsd	%xmm4, %xmm2
	.loc	14 156 18 is_stmt 1     # rhs.c:156:18
	mulsd	%xmm5, %xmm2
	.loc	14 156 11 is_stmt 0     # rhs.c:156:11
	subsd	%xmm2, %xmm0
	.loc	14 155 25 is_stmt 1     # rhs.c:155:25
	movsd	%xmm0, rsd+48(%r14,%rsi)
	.loc	14 159 27               # rhs.c:159:27
	movsd	rsd+88(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 160 28               # rhs.c:160:28
	mulsd	%xmm7, %xmm1
	.loc	14 161 28               # rhs.c:161:28
	mulsd	%xmm8, %xmm3
	.loc	14 160 28               # rhs.c:160:28
	subsd	%xmm1, %xmm3
	.loc	14 162 28               # rhs.c:162:28
	mulsd	%xmm7, %xmm4
	.loc	14 162 22 is_stmt 0     # rhs.c:162:22
	subsd	%xmm4, %xmm3
	.loc	14 163 22 is_stmt 1     # rhs.c:163:22
	addsd	u+168(%r14,%rsi), %xmm3
	.loc	14 160 18               # rhs.c:160:18
	mulsd	%xmm5, %xmm3
	.loc	14 160 11 is_stmt 0     # rhs.c:160:11
	subsd	%xmm3, %xmm0
	.loc	14 159 25 is_stmt 1     # rhs.c:159:25
	movsd	%xmm0, rsd+88(%r14,%rsi)
	.loc	14 155 27               # rhs.c:155:27
	movsd	rsd+56(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 156 30               # rhs.c:156:30
	movsd	u+56(%r14,%rsi), %xmm1  # xmm1 = mem[0],zero
	.loc	14 156 28 is_stmt 0     # rhs.c:156:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	14 157 30 is_stmt 1     # rhs.c:157:30
	movsd	u+96(%r14,%rsi), %xmm3  # xmm3 = mem[0],zero
	.loc	14 157 28 is_stmt 0     # rhs.c:157:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 157 22               # rhs.c:157:22
	subsd	%xmm4, %xmm2
	.loc	14 158 30 is_stmt 1     # rhs.c:158:30
	movsd	u+136(%r14,%rsi), %xmm4 # xmm4 = mem[0],zero
	.loc	14 158 22 is_stmt 0     # rhs.c:158:22
	addsd	%xmm4, %xmm2
	.loc	14 156 18 is_stmt 1     # rhs.c:156:18
	mulsd	%xmm5, %xmm2
	.loc	14 156 11 is_stmt 0     # rhs.c:156:11
	subsd	%xmm2, %xmm0
	.loc	14 155 25 is_stmt 1     # rhs.c:155:25
	movsd	%xmm0, rsd+56(%r14,%rsi)
	.loc	14 159 27               # rhs.c:159:27
	movsd	rsd+96(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 160 28               # rhs.c:160:28
	mulsd	%xmm7, %xmm1
	.loc	14 161 28               # rhs.c:161:28
	mulsd	%xmm8, %xmm3
	.loc	14 160 28               # rhs.c:160:28
	subsd	%xmm1, %xmm3
	.loc	14 162 28               # rhs.c:162:28
	mulsd	%xmm7, %xmm4
	.loc	14 162 22 is_stmt 0     # rhs.c:162:22
	subsd	%xmm4, %xmm3
	.loc	14 163 22 is_stmt 1     # rhs.c:163:22
	addsd	u+176(%r14,%rsi), %xmm3
	.loc	14 160 18               # rhs.c:160:18
	mulsd	%xmm5, %xmm3
	.loc	14 160 11 is_stmt 0     # rhs.c:160:11
	subsd	%xmm3, %xmm0
	.loc	14 159 25 is_stmt 1     # rhs.c:159:25
	movsd	%xmm0, rsd+96(%r14,%rsi)
	.loc	14 155 27               # rhs.c:155:27
	movsd	rsd+64(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 156 30               # rhs.c:156:30
	movsd	u+64(%r14,%rsi), %xmm1  # xmm1 = mem[0],zero
	.loc	14 156 28 is_stmt 0     # rhs.c:156:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	14 157 30 is_stmt 1     # rhs.c:157:30
	movsd	u+104(%r14,%rsi), %xmm3 # xmm3 = mem[0],zero
	.loc	14 157 28 is_stmt 0     # rhs.c:157:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 157 22               # rhs.c:157:22
	subsd	%xmm4, %xmm2
	.loc	14 158 30 is_stmt 1     # rhs.c:158:30
	movsd	u+144(%r14,%rsi), %xmm4 # xmm4 = mem[0],zero
	.loc	14 158 22 is_stmt 0     # rhs.c:158:22
	addsd	%xmm4, %xmm2
	.loc	14 156 18 is_stmt 1     # rhs.c:156:18
	mulsd	%xmm5, %xmm2
	.loc	14 156 11 is_stmt 0     # rhs.c:156:11
	subsd	%xmm2, %xmm0
	.loc	14 155 25 is_stmt 1     # rhs.c:155:25
	movsd	%xmm0, rsd+64(%r14,%rsi)
	.loc	14 159 27               # rhs.c:159:27
	movsd	rsd+104(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 160 28               # rhs.c:160:28
	mulsd	%xmm7, %xmm1
	.loc	14 161 28               # rhs.c:161:28
	mulsd	%xmm8, %xmm3
	.loc	14 160 28               # rhs.c:160:28
	subsd	%xmm1, %xmm3
	.loc	14 162 28               # rhs.c:162:28
	mulsd	%xmm7, %xmm4
	.loc	14 162 22 is_stmt 0     # rhs.c:162:22
	subsd	%xmm4, %xmm3
	.loc	14 163 22 is_stmt 1     # rhs.c:163:22
	addsd	u+184(%r14,%rsi), %xmm3
	.loc	14 160 18               # rhs.c:160:18
	mulsd	%xmm5, %xmm3
	.loc	14 160 11 is_stmt 0     # rhs.c:160:11
	subsd	%xmm3, %xmm0
	.loc	14 159 25 is_stmt 1     # rhs.c:159:25
	movsd	%xmm0, rsd+104(%r14,%rsi)
	.loc	14 155 27               # rhs.c:155:27
	movsd	rsd+72(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 156 30               # rhs.c:156:30
	movsd	u+72(%r14,%rsi), %xmm1  # xmm1 = mem[0],zero
	.loc	14 156 28 is_stmt 0     # rhs.c:156:28
	movapd	%xmm1, %xmm2
	mulsd	%xmm6, %xmm2
	.loc	14 157 30 is_stmt 1     # rhs.c:157:30
	movsd	u+112(%r14,%rsi), %xmm3 # xmm3 = mem[0],zero
	.loc	14 157 28 is_stmt 0     # rhs.c:157:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 157 22               # rhs.c:157:22
	subsd	%xmm4, %xmm2
	.loc	14 158 30 is_stmt 1     # rhs.c:158:30
	movsd	u+152(%r14,%rsi), %xmm4 # xmm4 = mem[0],zero
	.loc	14 158 22 is_stmt 0     # rhs.c:158:22
	addsd	%xmm4, %xmm2
	.loc	14 156 18 is_stmt 1     # rhs.c:156:18
	mulsd	%xmm5, %xmm2
	.loc	14 156 11 is_stmt 0     # rhs.c:156:11
	subsd	%xmm2, %xmm0
	.loc	14 155 25 is_stmt 1     # rhs.c:155:25
	movsd	%xmm0, rsd+72(%r14,%rsi)
	.loc	14 159 27               # rhs.c:159:27
	movsd	rsd+112(%r14,%rsi), %xmm0 # xmm0 = mem[0],zero
	.loc	14 160 28               # rhs.c:160:28
	mulsd	%xmm7, %xmm1
	.loc	14 161 28               # rhs.c:161:28
	mulsd	%xmm8, %xmm3
	.loc	14 160 28               # rhs.c:160:28
	subsd	%xmm1, %xmm3
	.loc	14 162 28               # rhs.c:162:28
	mulsd	%xmm7, %xmm4
	.loc	14 162 22 is_stmt 0     # rhs.c:162:22
	subsd	%xmm4, %xmm3
	.loc	14 163 22 is_stmt 1     # rhs.c:163:22
	addsd	u+192(%r14,%rsi), %xmm3
	.loc	14 160 18               # rhs.c:160:18
	mulsd	%xmm5, %xmm3
	.loc	14 160 11 is_stmt 0     # rhs.c:160:11
	subsd	%xmm3, %xmm0
.Ltmp577:
	#DEBUG_VALUE: rhs:m <- 0
	.loc	14 159 25 is_stmt 1     # rhs.c:159:25
	movsd	%xmm0, rsd+112(%r14,%rsi)
	movapd	272(%rsp), %xmm10       # 16-byte Reload
.Ltmp578:
	.loc	14 170 30               # rhs.c:170:30
	movapd	.LCPI9_13(%rip), %xmm12 # xmm12 = [4.000000e+00,4.000000e+00]
	.loc	14 171 30               # rhs.c:171:30
	movapd	.LCPI9_14(%rip), %xmm9  # xmm9 = [6.000000e+00,6.000000e+00]
	movapd	%xmm9, %xmm2
	jle	.LBB9_26
# BB#24:                                # %for.cond771.preheader.lr.ph
                                        #   in Loop: Header=BB9_14 Depth=2
	.loc	14 169 32               # rhs.c:169:32
	movsd	u+48(%r14,%rsi), %xmm11 # xmm11 = mem[0],zero
	.loc	14 170 32               # rhs.c:170:32
	movsd	u+88(%r14,%rsi), %xmm13 # xmm13 = mem[0],zero
	.loc	14 171 32               # rhs.c:171:32
	movupd	u+120(%r14,%rsi), %xmm4
	.loc	14 172 32               # rhs.c:172:32
	movupd	u+160(%r14,%rsi), %xmm8
	.loc	14 169 32               # rhs.c:169:32
	movupd	u+56(%r14,%rsi), %xmm5
	.loc	14 170 32               # rhs.c:170:32
	movupd	u+96(%r14,%rsi), %xmm9
	.loc	14 171 32               # rhs.c:171:32
	movupd	u+136(%r14,%rsi), %xmm14
	.loc	14 172 32               # rhs.c:172:32
	movupd	u+176(%r14,%rsi), %xmm15
	.loc	14 169 32               # rhs.c:169:32
	movsd	u+72(%r14,%rsi), %xmm1  # xmm1 = mem[0],zero
	.loc	14 170 32               # rhs.c:170:32
	movsd	u+112(%r14,%rsi), %xmm7 # xmm7 = mem[0],zero
	movq	%r12, %rcx
	movl	$3, %edi
	.p2align	4, 0x90
.LBB9_25:                               # %for.cond771.preheader
                                        #   Parent Loop BB9_13 Depth=1
                                        #     Parent Loop BB9_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	14 170 24 is_stmt 0     # rhs.c:170:24
	movsd	u+169040(%rcx), %xmm3   # xmm3 = mem[0],zero
	unpcklpd	%xmm11, %xmm3   # xmm3 = xmm3[0],xmm11[0]
	.loc	14 170 32               # rhs.c:170:32
	movapd	%xmm13, %xmm11
	movapd	%xmm7, %xmm6
	.loc	14 168 29 is_stmt 1     # rhs.c:168:29
	movupd	rsd+169120(%rcx), %xmm7
	.loc	14 170 30               # rhs.c:170:30
	movsd	u+169080(%rcx), %xmm0   # xmm0 = mem[0],zero
	unpcklpd	%xmm11, %xmm0   # xmm0 = xmm0[0],xmm11[0]
	mulpd	%xmm12, %xmm0
	.loc	14 170 24 is_stmt 0     # rhs.c:170:24
	subpd	%xmm0, %xmm3
	.loc	14 171 30 is_stmt 1     # rhs.c:171:30
	movapd	%xmm4, %xmm0
	mulpd	%xmm2, %xmm0
	.loc	14 171 24 is_stmt 0     # rhs.c:171:24
	addpd	%xmm3, %xmm0
	.loc	14 172 30 is_stmt 1     # rhs.c:172:30
	movapd	%xmm8, %xmm3
	mulpd	%xmm12, %xmm3
	.loc	14 172 24 is_stmt 0     # rhs.c:172:24
	subpd	%xmm3, %xmm0
	.loc	14 173 32 is_stmt 1     # rhs.c:173:32
	movupd	u+169200(%rcx), %xmm2
	.loc	14 173 24 is_stmt 0     # rhs.c:173:24
	addpd	%xmm2, %xmm0
	.loc	14 169 20 is_stmt 1     # rhs.c:169:20
	mulpd	%xmm10, %xmm0
	.loc	14 169 13 is_stmt 0     # rhs.c:169:13
	subpd	%xmm0, %xmm7
	.loc	14 168 27 is_stmt 1     # rhs.c:168:27
	movupd	%xmm7, rsd+169120(%rcx)
	.loc	14 168 29 is_stmt 0     # rhs.c:168:29
	movupd	rsd+169136(%rcx), %xmm0
	.loc	14 170 30 is_stmt 1     # rhs.c:170:30
	movapd	%xmm9, %xmm3
	mulpd	%xmm12, %xmm3
	.loc	14 170 24 is_stmt 0     # rhs.c:170:24
	subpd	%xmm3, %xmm5
	.loc	14 171 30 is_stmt 1     # rhs.c:171:30
	movapd	%xmm14, %xmm7
	mulpd	.LCPI9_14(%rip), %xmm7
	.loc	14 171 24 is_stmt 0     # rhs.c:171:24
	addpd	%xmm5, %xmm7
	.loc	14 172 30 is_stmt 1     # rhs.c:172:30
	movapd	%xmm15, %xmm3
	mulpd	%xmm12, %xmm3
	.loc	14 172 24 is_stmt 0     # rhs.c:172:24
	subpd	%xmm3, %xmm7
	.loc	14 173 32 is_stmt 1     # rhs.c:173:32
	movupd	u+169216(%rcx), %xmm3
	.loc	14 173 24 is_stmt 0     # rhs.c:173:24
	addpd	%xmm3, %xmm7
	.loc	14 169 20 is_stmt 1     # rhs.c:169:20
	mulpd	%xmm10, %xmm7
	.loc	14 169 13 is_stmt 0     # rhs.c:169:13
	subpd	%xmm7, %xmm0
	.loc	14 168 27 is_stmt 1     # rhs.c:168:27
	movupd	%xmm0, rsd+169136(%rcx)
	.loc	14 170 30               # rhs.c:170:30
	movapd	%xmm6, %xmm0
.Ltmp579:
	.loc	14 157 28               # rhs.c:157:28
	movsd	.LCPI9_11(%rip), %xmm5  # xmm5 = mem[0],zero
.Ltmp580:
	.loc	14 170 30               # rhs.c:170:30
	mulsd	%xmm5, %xmm0
	.loc	14 170 24 is_stmt 0     # rhs.c:170:24
	subsd	%xmm0, %xmm1
	.loc	14 171 32 is_stmt 1     # rhs.c:171:32
	movsd	u+169152(%rcx), %xmm7   # xmm7 = mem[0],zero
	.loc	14 171 30 is_stmt 0     # rhs.c:171:30
	movapd	%xmm7, %xmm0
	mulsd	.LCPI9_12(%rip), %xmm0
	.loc	14 171 24               # rhs.c:171:24
	addsd	%xmm1, %xmm0
	movsd	u+169192(%rcx), %xmm1   # xmm1 = mem[0],zero
	.loc	14 172 30 is_stmt 1     # rhs.c:172:30
	mulsd	%xmm5, %xmm1
	.loc	14 172 24 is_stmt 0     # rhs.c:172:24
	subsd	%xmm1, %xmm0
	.loc	14 168 29 is_stmt 1     # rhs.c:168:29
	movsd	rsd+169152(%rcx), %xmm1 # xmm1 = mem[0],zero
	.loc	14 173 24               # rhs.c:173:24
	addsd	u+169232(%rcx), %xmm0
	.loc	14 169 20               # rhs.c:169:20
	mulsd	80(%rsp), %xmm0         # 16-byte Folded Reload
	.loc	14 169 13 is_stmt 0     # rhs.c:169:13
	subsd	%xmm0, %xmm1
	.loc	14 168 27 is_stmt 1     # rhs.c:168:27
	movsd	%xmm1, rsd+169152(%rcx)
.Ltmp581:
	#DEBUG_VALUE: rhs:m <- 0
	.loc	14 166 7 discriminator 1 # rhs.c:166:7
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
.Ltmp582:
	.loc	14 170 32               # rhs.c:170:32
	movapd	%xmm4, %xmm13
	.loc	14 171 32               # rhs.c:171:32
	movapd	%xmm8, %xmm4
	.loc	14 169 32               # rhs.c:169:32
	movapd	%xmm9, %xmm5
	.loc	14 170 32               # rhs.c:170:32
	movapd	%xmm14, %xmm9
	.loc	14 171 32               # rhs.c:171:32
	movapd	%xmm15, %xmm14
.Ltmp583:
	.loc	14 166 7 discriminator 1 # rhs.c:166:7
	incq	%rdi
	.loc	14 166 21 is_stmt 0 discriminator 1 # rhs.c:166:21
	addq	$40, %rcx
	cmpq	%r9, %rdi
.Ltmp584:
	.loc	14 169 32 is_stmt 1     # rhs.c:169:32
	movapd	%xmm6, %xmm1
	.loc	14 172 32               # rhs.c:172:32
	movapd	%xmm2, %xmm8
	.loc	14 171 30               # rhs.c:171:30
	movapd	.LCPI9_14(%rip), %xmm2  # xmm2 = [6.000000e+00,6.000000e+00]
	.loc	14 172 32               # rhs.c:172:32
	movapd	%xmm3, %xmm15
.Ltmp585:
	.loc	14 166 7 discriminator 1 # rhs.c:166:7
	jl	.LBB9_25
.Ltmp586:
.LBB9_26:                               # %for.body851
                                        #   in Loop: Header=BB9_14 Depth=2
	movq	%r12, %rax
.Ltmp587:
	.loc	14 179 30               # rhs.c:179:30
	leaq	rsd(%r14,%rsi), %r12
	.loc	14 180 30               # rhs.c:180:30
	leaq	u(%r14,%rsi), %rcx
	addq	%rsi, %r14
	movq	64(%rsp), %rdx          # 8-byte Reload
	leaq	(%rdx,%rdx,4), %rsi
	movsd	u(%r14,%rsi,8), %xmm10  # xmm10 = mem[0],zero
	movsd	u+8(%r14,%rsi,8), %xmm11 # xmm11 = mem[0],zero
	movsd	u+16(%r14,%rsi,8), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, 352(%rsp)        # 8-byte Spill
	movsd	u+24(%r14,%rsi,8), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, 496(%rsp)        # 8-byte Spill
	movsd	u+32(%r14,%rsi,8), %xmm0 # xmm0 = mem[0],zero
	.loc	14 181 30               # rhs.c:181:30
	movsd	%xmm0, 480(%rsp)        # 8-byte Spill
	movq	240(%rsp), %rdx         # 8-byte Reload
	leaq	(%rdx,%rdx,4), %rdx
	movsd	u(%r14,%rdx,8), %xmm1   # xmm1 = mem[0],zero
	movsd	u+8(%r14,%rdx,8), %xmm12 # xmm12 = mem[0],zero
	movsd	u+16(%r14,%rdx,8), %xmm13 # xmm13 = mem[0],zero
	movsd	u+24(%r14,%rdx,8), %xmm14 # xmm14 = mem[0],zero
	movsd	u+32(%r14,%rdx,8), %xmm15 # xmm15 = mem[0],zero
	.loc	14 179 30               # rhs.c:179:30
	leaq	(,%r9,8), %rdx
	leaq	(%rdx,%rdx,4), %rdi
	movsd	(%r12,%rdi), %xmm7      # xmm7 = mem[0],zero
	.loc	14 181 28               # rhs.c:181:28
	movapd	%xmm1, %xmm6
.Ltmp588:
	.loc	14 157 28               # rhs.c:157:28
	movsd	.LCPI9_11(%rip), %xmm4  # xmm4 = mem[0],zero
.Ltmp589:
	.loc	14 181 28               # rhs.c:181:28
	mulsd	%xmm4, %xmm6
	.loc	14 181 22 is_stmt 0     # rhs.c:181:22
	subsd	%xmm6, %xmm10
	.loc	14 182 30 is_stmt 1     # rhs.c:182:30
	movsd	(%rcx,%rdi), %xmm3      # xmm3 = mem[0],zero
	.loc	14 182 28 is_stmt 0     # rhs.c:182:28
	movapd	%xmm3, %xmm6
.Ltmp590:
	.loc	14 161 28 is_stmt 1     # rhs.c:161:28
	movsd	.LCPI9_12(%rip), %xmm0  # xmm0 = mem[0],zero
.Ltmp591:
	.loc	14 182 28               # rhs.c:182:28
	mulsd	%xmm0, %xmm6
	movapd	%xmm0, %xmm2
	.loc	14 182 22 is_stmt 0     # rhs.c:182:22
	addsd	%xmm10, %xmm6
	.loc	14 183 30 is_stmt 1     # rhs.c:183:30
	movq	16(%rsp), %rdx          # 8-byte Reload
	leaq	(%rdx,%rdx,4), %rsi
	movsd	(%rcx,%rsi), %xmm10     # xmm10 = mem[0],zero
	.loc	14 183 28 is_stmt 0     # rhs.c:183:28
	movapd	%xmm10, %xmm0
	mulsd	%xmm4, %xmm0
	.loc	14 183 22               # rhs.c:183:22
	subsd	%xmm0, %xmm6
	movapd	80(%rsp), %xmm8         # 16-byte Reload
	.loc	14 180 18 is_stmt 1     # rhs.c:180:18
	mulsd	%xmm8, %xmm6
	.loc	14 180 11 is_stmt 0     # rhs.c:180:11
	subsd	%xmm6, %xmm7
	.loc	14 179 28 is_stmt 1     # rhs.c:179:28
	movsd	%xmm7, (%r12,%rdi)
	.loc	14 184 30               # rhs.c:184:30
	movsd	(%r12,%rsi), %xmm0      # xmm0 = mem[0],zero
	.loc	14 186 28               # rhs.c:186:28
	mulsd	%xmm4, %xmm3
	.loc	14 186 22 is_stmt 0     # rhs.c:186:22
	subsd	%xmm3, %xmm1
.Ltmp592:
	.loc	14 156 28 is_stmt 1     # rhs.c:156:28
	movsd	.LCPI9_10(%rip), %xmm5  # xmm5 = mem[0],zero
.Ltmp593:
	.loc	14 187 28               # rhs.c:187:28
	mulsd	%xmm5, %xmm10
	.loc	14 187 22 is_stmt 0     # rhs.c:187:22
	addsd	%xmm1, %xmm10
	.loc	14 185 18 is_stmt 1     # rhs.c:185:18
	mulsd	%xmm8, %xmm10
	.loc	14 185 11 is_stmt 0     # rhs.c:185:11
	subsd	%xmm10, %xmm0
	.loc	14 184 28 is_stmt 1     # rhs.c:184:28
	movsd	%xmm0, (%r12,%rsi)
	.loc	14 179 30               # rhs.c:179:30
	movsd	8(%r12,%rdi), %xmm0     # xmm0 = mem[0],zero
	.loc	14 181 28               # rhs.c:181:28
	movapd	%xmm12, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	14 181 22 is_stmt 0     # rhs.c:181:22
	subsd	%xmm1, %xmm11
	.loc	14 182 30 is_stmt 1     # rhs.c:182:30
	movsd	8(%rcx,%rdi), %xmm1     # xmm1 = mem[0],zero
	.loc	14 182 28 is_stmt 0     # rhs.c:182:28
	movapd	%xmm1, %xmm3
	mulsd	%xmm2, %xmm3
	.loc	14 182 22               # rhs.c:182:22
	addsd	%xmm11, %xmm3
	.loc	14 183 30 is_stmt 1     # rhs.c:183:30
	movsd	8(%rcx,%rsi), %xmm7     # xmm7 = mem[0],zero
	.loc	14 183 28 is_stmt 0     # rhs.c:183:28
	movapd	%xmm7, %xmm6
	mulsd	%xmm4, %xmm6
	.loc	14 183 22               # rhs.c:183:22
	subsd	%xmm6, %xmm3
	.loc	14 180 18 is_stmt 1     # rhs.c:180:18
	mulsd	%xmm8, %xmm3
	.loc	14 180 11 is_stmt 0     # rhs.c:180:11
	subsd	%xmm3, %xmm0
	.loc	14 182 30 is_stmt 1     # rhs.c:182:30
	movsd	16(%rcx,%rdi), %xmm11   # xmm11 = mem[0],zero
	.loc	14 183 30               # rhs.c:183:30
	movsd	16(%rcx,%rsi), %xmm3    # xmm3 = mem[0],zero
	.loc	14 182 30               # rhs.c:182:30
	movsd	24(%rcx,%rdi), %xmm2    # xmm2 = mem[0],zero
	.loc	14 183 30               # rhs.c:183:30
	movsd	24(%rcx,%rsi), %xmm9    # xmm9 = mem[0],zero
	.loc	14 182 30               # rhs.c:182:30
	movsd	32(%rcx,%rdi), %xmm10   # xmm10 = mem[0],zero
	.loc	14 183 30               # rhs.c:183:30
	movsd	32(%rcx,%rsi), %xmm6    # xmm6 = mem[0],zero
	.loc	14 179 28               # rhs.c:179:28
	movsd	%xmm0, 8(%r12,%rdi)
	.loc	14 186 28               # rhs.c:186:28
	mulsd	%xmm4, %xmm1
	.loc	14 186 22 is_stmt 0     # rhs.c:186:22
	subsd	%xmm1, %xmm12
	.loc	14 187 28 is_stmt 1     # rhs.c:187:28
	mulsd	%xmm5, %xmm7
	.loc	14 187 22 is_stmt 0     # rhs.c:187:22
	addsd	%xmm12, %xmm7
	.loc	14 184 30 is_stmt 1     # rhs.c:184:30
	movsd	8(%r12,%rsi), %xmm0     # xmm0 = mem[0],zero
	.loc	14 185 18               # rhs.c:185:18
	mulsd	%xmm8, %xmm7
	.loc	14 185 11 is_stmt 0     # rhs.c:185:11
	subsd	%xmm7, %xmm0
	.loc	14 184 28 is_stmt 1     # rhs.c:184:28
	movsd	%xmm0, 8(%r12,%rsi)
	.loc	14 181 28               # rhs.c:181:28
	movapd	%xmm13, %xmm0
	mulsd	%xmm4, %xmm0
	movsd	352(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	14 181 22 is_stmt 0     # rhs.c:181:22
	subsd	%xmm0, %xmm1
	.loc	14 182 28 is_stmt 1     # rhs.c:182:28
	movapd	%xmm11, %xmm0
.Ltmp594:
	.loc	14 161 28               # rhs.c:161:28
	movsd	.LCPI9_12(%rip), %xmm7  # xmm7 = mem[0],zero
.Ltmp595:
	.loc	14 182 28               # rhs.c:182:28
	mulsd	%xmm7, %xmm0
	.loc	14 182 22 is_stmt 0     # rhs.c:182:22
	addsd	%xmm1, %xmm0
	.loc	14 183 28 is_stmt 1     # rhs.c:183:28
	movapd	%xmm3, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	14 183 22 is_stmt 0     # rhs.c:183:22
	subsd	%xmm1, %xmm0
	.loc	14 179 30 is_stmt 1     # rhs.c:179:30
	movsd	16(%r12,%rdi), %xmm1    # xmm1 = mem[0],zero
	.loc	14 180 18               # rhs.c:180:18
	mulsd	%xmm8, %xmm0
	.loc	14 180 11 is_stmt 0     # rhs.c:180:11
	subsd	%xmm0, %xmm1
	.loc	14 179 28 is_stmt 1     # rhs.c:179:28
	movsd	%xmm1, 16(%r12,%rdi)
	.loc	14 186 28               # rhs.c:186:28
	mulsd	%xmm4, %xmm11
	.loc	14 186 22 is_stmt 0     # rhs.c:186:22
	subsd	%xmm11, %xmm13
	.loc	14 187 28 is_stmt 1     # rhs.c:187:28
	mulsd	%xmm5, %xmm3
	.loc	14 187 22 is_stmt 0     # rhs.c:187:22
	addsd	%xmm13, %xmm3
	.loc	14 184 30 is_stmt 1     # rhs.c:184:30
	movsd	16(%r12,%rsi), %xmm0    # xmm0 = mem[0],zero
	.loc	14 185 18               # rhs.c:185:18
	mulsd	%xmm8, %xmm3
	.loc	14 185 11 is_stmt 0     # rhs.c:185:11
	subsd	%xmm3, %xmm0
	.loc	14 184 28 is_stmt 1     # rhs.c:184:28
	movsd	%xmm0, 16(%r12,%rsi)
	.loc	14 181 28               # rhs.c:181:28
	movapd	%xmm14, %xmm0
	mulsd	%xmm4, %xmm0
	movsd	496(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	14 181 22 is_stmt 0     # rhs.c:181:22
	subsd	%xmm0, %xmm1
	.loc	14 182 28 is_stmt 1     # rhs.c:182:28
	movapd	%xmm2, %xmm0
	mulsd	%xmm7, %xmm0
	.loc	14 182 22 is_stmt 0     # rhs.c:182:22
	addsd	%xmm1, %xmm0
	.loc	14 183 28 is_stmt 1     # rhs.c:183:28
	movapd	%xmm9, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	14 183 22 is_stmt 0     # rhs.c:183:22
	subsd	%xmm1, %xmm0
	.loc	14 179 30 is_stmt 1     # rhs.c:179:30
	movsd	24(%r12,%rdi), %xmm1    # xmm1 = mem[0],zero
	.loc	14 180 18               # rhs.c:180:18
	mulsd	%xmm8, %xmm0
	.loc	14 180 11 is_stmt 0     # rhs.c:180:11
	subsd	%xmm0, %xmm1
	.loc	14 179 28 is_stmt 1     # rhs.c:179:28
	movsd	%xmm1, 24(%r12,%rdi)
	.loc	14 186 28               # rhs.c:186:28
	mulsd	%xmm4, %xmm2
	.loc	14 186 22 is_stmt 0     # rhs.c:186:22
	subsd	%xmm2, %xmm14
	.loc	14 187 28 is_stmt 1     # rhs.c:187:28
	mulsd	%xmm5, %xmm9
	.loc	14 187 22 is_stmt 0     # rhs.c:187:22
	addsd	%xmm14, %xmm9
	.loc	14 184 30 is_stmt 1     # rhs.c:184:30
	movsd	24(%r12,%rsi), %xmm0    # xmm0 = mem[0],zero
	.loc	14 185 18               # rhs.c:185:18
	mulsd	%xmm8, %xmm9
	.loc	14 185 11 is_stmt 0     # rhs.c:185:11
	subsd	%xmm9, %xmm0
	.loc	14 184 28 is_stmt 1     # rhs.c:184:28
	movsd	%xmm0, 24(%r12,%rsi)
	.loc	14 179 30               # rhs.c:179:30
	movsd	32(%r12,%rdi), %xmm0    # xmm0 = mem[0],zero
	.loc	14 181 28               # rhs.c:181:28
	movapd	%xmm15, %xmm1
	mulsd	%xmm4, %xmm1
	movsd	480(%rsp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	.loc	14 181 22 is_stmt 0     # rhs.c:181:22
	subsd	%xmm1, %xmm2
	.loc	14 182 28 is_stmt 1     # rhs.c:182:28
	movapd	%xmm10, %xmm1
	mulsd	%xmm7, %xmm1
	.loc	14 182 22 is_stmt 0     # rhs.c:182:22
	addsd	%xmm2, %xmm1
	.loc	14 183 28 is_stmt 1     # rhs.c:183:28
	movapd	%xmm6, %xmm2
	mulsd	%xmm4, %xmm2
	.loc	14 183 22 is_stmt 0     # rhs.c:183:22
	subsd	%xmm2, %xmm1
	.loc	14 180 18 is_stmt 1     # rhs.c:180:18
	mulsd	%xmm8, %xmm1
	.loc	14 180 11 is_stmt 0     # rhs.c:180:11
	subsd	%xmm1, %xmm0
	.loc	14 179 28 is_stmt 1     # rhs.c:179:28
	movsd	%xmm0, 32(%r12,%rdi)
	.loc	14 184 30               # rhs.c:184:30
	movsd	32(%r12,%rsi), %xmm0    # xmm0 = mem[0],zero
	.loc	14 186 28               # rhs.c:186:28
	mulsd	%xmm4, %xmm10
	.loc	14 186 22 is_stmt 0     # rhs.c:186:22
	subsd	%xmm10, %xmm15
	.loc	14 187 28 is_stmt 1     # rhs.c:187:28
	mulsd	%xmm5, %xmm6
	.loc	14 187 22 is_stmt 0     # rhs.c:187:22
	addsd	%xmm15, %xmm6
	.loc	14 185 18 is_stmt 1     # rhs.c:185:18
	mulsd	%xmm8, %xmm6
	.loc	14 185 11 is_stmt 0     # rhs.c:185:11
	subsd	%xmm6, %xmm0
	.loc	14 184 28 is_stmt 1     # rhs.c:184:28
	movsd	%xmm0, 32(%r12,%rsi)
	movq	%rax, %r12
.Ltmp596:
	.loc	14 78 5 discriminator 1 # rhs.c:78:5
	incq	%r15
	addq	$520, %r11              # imm = 0x208
	addq	$2600, %r8              # imm = 0xA28
	movq	368(%rsp), %rax         # 8-byte Reload
	addq	$2600, %rax             # imm = 0xA28
	addq	$2600, 336(%rsp)        # 8-byte Folded Spill
                                        # imm = 0xA28
	addq	$2600, %r12             # imm = 0xA28
	.loc	14 78 21 is_stmt 0 discriminator 1 # rhs.c:78:21
	cmpq	320(%rsp), %r15         # 8-byte Folded Reload
	movq	464(%rsp), %r14         # 8-byte Reload
	movapd	160(%rsp), %xmm9        # 16-byte Reload
	movaps	304(%rsp), %xmm5        # 16-byte Reload
.Ltmp597:
	.loc	14 85 47 is_stmt 1      # rhs.c:85:47
	movsd	.LCPI9_8(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI9_9(%rip), %xmm6   # xmm6 = mem[0],zero
	jl	.LBB9_14
.Ltmp598:
.LBB9_27:                               # %for.inc971
                                        #   in Loop: Header=BB9_13 Depth=1
	movq	144(%rsp), %rcx         # 8-byte Reload
	.loc	14 77 3 discriminator 1 # rhs.c:77:3
	incq	%rcx
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	movq	8(%rsp), %r11           # 8-byte Reload
	addq	$33800, %r11            # imm = 0x8408
	movq	24(%rsp), %r8           # 8-byte Reload
	addq	$169000, %r8            # imm = 0x29428
	movq	232(%rsp), %rsi         # 8-byte Reload
	addq	$169000, %rsi           # imm = 0x29428
	movq	48(%rsp), %rdi          # 8-byte Reload
	addq	$169000, %rdi           # imm = 0x29428
	movq	56(%rsp), %rdx          # 8-byte Reload
	addq	$169000, %rdx           # imm = 0x29428
	.loc	14 77 17 is_stmt 0 discriminator 1 # rhs.c:77:17
	cmpq	96(%rsp), %rcx          # 8-byte Folded Reload
	jl	.LBB9_13
.Ltmp599:
.LBB9_28:                               # %for.end973
	.loc	14 192 7 is_stmt 1      # rhs.c:192:7
	cmpl	$0, timeron(%rip)
	je	.LBB9_31
# BB#29:                                # %if.end976
	.loc	14 192 16 is_stmt 0 discriminator 1 # rhs.c:192:16
	movl	$2, %edi
	callq	timer_stop
.Ltmp600:
	.loc	14 194 7 is_stmt 1      # rhs.c:194:7
	cmpl	$0, timeron(%rip)
	je	.LBB9_31
# BB#30:                                # %if.then978
	.loc	14 194 16 is_stmt 0 discriminator 1 # rhs.c:194:16
	movl	$3, %edi
	callq	timer_start
.Ltmp601:
.LBB9_31:                               # %for.cond980.preheader
	.loc	14 198 3 is_stmt 1 discriminator 1 # rhs.c:198:3
	movslq	nz(%rip), %rax
	.loc	14 198 22 is_stmt 0 discriminator 1 # rhs.c:198:22
	decq	%rax
	.loc	14 198 3 discriminator 1 # rhs.c:198:3
	movq	%rax, 416(%rsp)         # 8-byte Spill
	cmpl	$2, %eax
	jl	.LBB9_49
# BB#32:                                # %for.body983.lr.ph
	movslq	ist(%rip), %r14
	movq	%r14, 240(%rsp)         # 8-byte Spill
	movslq	iend(%rip), %r12
.Ltmp602:
	.loc	14 312 30 is_stmt 1     # rhs.c:312:30
	movq	%r12, 480(%rsp)         # 8-byte Spill
	movslq	ny(%rip), %rsi
	.loc	14 309 13               # rhs.c:309:13
	movsd	dssp(%rip), %xmm9       # xmm9 = mem[0],zero
	.loc	14 309 37 is_stmt 0     # rhs.c:309:37
	movapd	%xmm9, 496(%rsp)        # 16-byte Spill
	imulq	$2600, %rsi, %rax       # imm = 0xA28
.Ltmp603:
	.loc	14 198 3 is_stmt 1 discriminator 1 # rhs.c:198:3
	movslq	jst(%rip), %rbx
.Ltmp604:
	.loc	14 246 19               # rhs.c:246:19
	movq	%rbx, 80(%rsp)          # 8-byte Spill
	movsd	ty1(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	14 251 13               # rhs.c:251:13
	movsd	ty3(%rip), %xmm11       # xmm11 = mem[0],zero
	movapd	%xmm11, 144(%rsp)       # 16-byte Spill
	movsd	.LCPI9_3(%rip), %xmm14  # xmm14 = mem[0],zero
	.loc	14 251 17 is_stmt 0     # rhs.c:251:17
	mulsd	%xmm11, %xmm14
	.loc	14 246 17 is_stmt 1     # rhs.c:246:17
	movsd	dy1(%rip), %xmm2        # xmm2 = mem[0],zero
	movhpd	dy2(%rip), %xmm2        # xmm2 = xmm2[0],mem[0]
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm0, %xmm2
	movapd	%xmm2, 208(%rsp)        # 16-byte Spill
	.loc	14 258 17               # rhs.c:258:17
	movsd	dy3(%rip), %xmm13       # xmm13 = mem[0],zero
	movhpd	dy4(%rip), %xmm13       # xmm13 = xmm13[0],mem[0]
	mulpd	%xmm0, %xmm13
	.loc	14 270 17               # rhs.c:270:17
	mulsd	dy5(%rip), %xmm1
	movapd	%xmm1, 192(%rsp)        # 16-byte Spill
	movsd	.LCPI9_4(%rip), %xmm2   # xmm2 = mem[0],zero
.Ltmp605:
	.loc	14 234 32               # rhs.c:234:32
	mulsd	%xmm11, %xmm2
	movsd	.LCPI9_5(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	14 237 11               # rhs.c:237:11
	mulsd	%xmm11, %xmm0
	movsd	%xmm0, 336(%rsp)        # 8-byte Spill
	movsd	.LCPI9_6(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	14 240 11               # rhs.c:240:11
	mulsd	%xmm11, %xmm0
	movsd	%xmm0, 128(%rsp)        # 8-byte Spill
	movsd	.LCPI9_7(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	14 241 21               # rhs.c:241:21
	mulsd	%xmm11, %xmm0
.Ltmp606:
	.loc	14 215 15               # rhs.c:215:15
	movsd	%xmm0, 320(%rsp)        # 8-byte Spill
	movsd	ty2(%rip), %xmm0        # xmm0 = mem[0],zero
.Ltmp607:
	.loc	14 251 46               # rhs.c:251:46
	movapd	%xmm0, 464(%rsp)        # 16-byte Spill
	leaq	(,%rbx,8), %rcx
	leaq	flux+8(%rcx,%rcx,4), %rdx
	.loc	14 257 46               # rhs.c:257:46
	movq	%rdx, 72(%rsp)          # 8-byte Spill
	leaq	flux+16(%rcx,%rcx,4), %rdx
	.loc	14 269 46               # rhs.c:269:46
	movq	%rdx, 40(%rsp)          # 8-byte Spill
	leaq	flux+32(%rcx,%rcx,4), %rdx
.Ltmp608:
	.loc	14 297 20               # rhs.c:297:20
	movq	%rdx, 368(%rsp)         # 8-byte Spill
	movapd	%xmm9, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
.Ltmp609:
	.loc	14 215 19               # rhs.c:215:19
	movaps	%xmm1, 400(%rsp)        # 16-byte Spill
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 448(%rsp)        # 16-byte Spill
.Ltmp610:
	.loc	14 233 26               # rhs.c:233:26
	movapd	%xmm11, %xmm0
	unpcklpd	%xmm2, %xmm0    # xmm0 = xmm0[0],xmm2[0]
.Ltmp611:
	.loc	14 257 27               # rhs.c:257:27
	movapd	%xmm0, 432(%rsp)        # 16-byte Spill
	movapd	%xmm14, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 176(%rsp)        # 16-byte Spill
.Ltmp612:
	.loc	14 198 3 discriminator 1 # rhs.c:198:3
	leaq	(,%r14,8), %rdx
	leaq	(%rdx,%rdx,4), %r8
	leaq	flux+72(%rcx,%rcx,4), %rcx
	movq	%rcx, 352(%rsp)         # 8-byte Spill
	imulq	$520, %rbx, %rcx        # imm = 0x208
	leaq	33800(%rcx,%r14,8), %r15
	leal	-1(%rbx), %ecx
	movslq	%ecx, %rcx
	imulq	$2600, %rcx, %rcx       # imm = 0xA28
	leaq	u+169032(%rcx,%r8), %r10
	movl	%r12d, %ecx
	subl	%r14d, %ecx
	movl	%ecx, 384(%rsp)         # 4-byte Spill
	leaq	-5200(%rax,%r8), %r11
	leaq	-7800(%rax,%r8), %rcx
	leaq	-10400(%rax,%r8), %rbp
	movq	%rbp, 8(%rsp)           # 8-byte Spill
	leaq	-13000(%rax,%r8), %rax
.Ltmp613:
	.loc	14 207 47               # rhs.c:207:47
	movq	%rax, 56(%rsp)          # 8-byte Spill
	movsd	.LCPI9_8(%rip), %xmm15  # xmm15 = mem[0],zero
	movsd	.LCPI9_9(%rip), %xmm12  # xmm12 = mem[0],zero
.Ltmp614:
	.loc	14 293 24 discriminator 1 # rhs.c:293:24
	leaq	-3(%rsi), %rax
.Ltmp615:
	.loc	14 198 3 discriminator 1 # rhs.c:198:3
	movq	%rax, 24(%rsp)          # 8-byte Spill
	movslq	jend(%rip), %r9
	leaq	33800(,%r14,8), %r13
	imulq	$2600, %rbx, %rax       # imm = 0xA28
	movq	%rax, 32(%rsp)          # 8-byte Spill
	leaq	rsd+169032(%rax,%r8), %rbx
	leaq	(%rax,%r8), %rax
	movl	$1, %edx
	movq	%rdx, 112(%rsp)         # 8-byte Spill
	xorl	%edi, %edi
.Ltmp616:
	.loc	14 283 28               # rhs.c:283:28
	movsd	.LCPI9_11(%rip), %xmm7  # xmm7 = mem[0],zero
.Ltmp617:
	.loc	14 298 30               # rhs.c:298:30
	movapd	.LCPI9_13(%rip), %xmm8  # xmm8 = [4.000000e+00,4.000000e+00]
.Ltmp618:
	.p2align	4, 0x90
.LBB9_33:                               # %for.body983
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB9_34 Depth 2
                                        #       Child Loop BB9_35 Depth 3
                                        #       Child Loop BB9_37 Depth 3
                                        #       Child Loop BB9_39 Depth 3
                                        #       Child Loop BB9_42 Depth 3
                                        #     Child Loop BB9_87 Depth 2
                                        #     Child Loop BB9_62 Depth 2
                                        #       Child Loop BB9_65 Depth 3
                                        #     Child Loop BB9_47 Depth 2
	movq	%rdi, 64(%rsp)          # 8-byte Spill
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movq	%rbx, 256(%rsp)         # 8-byte Spill
	movq	%r13, 272(%rsp)         # 8-byte Spill
	movq	%r10, 288(%rsp)         # 8-byte Spill
	movq	%r15, 304(%rsp)         # 8-byte Spill
	movq	%r8, 160(%rsp)          # 8-byte Spill
.Ltmp619:
	.loc	14 199 5 discriminator 1 # rhs.c:199:5
	cmpl	%r12d, %r14d
	movq	%r14, %rbp
	movq	%rax, %r8
	movq	%rbx, %r14
	movq	%rbp, %rax
	jge	.LBB9_45
	.p2align	4, 0x90
.LBB9_34:                               # %for.cond987.preheader
                                        #   Parent Loop BB9_33 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB9_35 Depth 3
                                        #       Child Loop BB9_37 Depth 3
                                        #       Child Loop BB9_39 Depth 3
                                        #       Child Loop BB9_42 Depth 3
.Ltmp620:
	.loc	14 200 7 discriminator 1 # rhs.c:200:7
	testl	%esi, %esi
	movq	%r13, %rdx
	movl	$flux+24, %edi
	movl	$0, %ebx
	jle	.LBB9_36
	.p2align	4, 0x90
.LBB9_35:                               # %for.body989
                                        #   Parent Loop BB9_33 Depth=1
                                        #     Parent Loop BB9_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp621:
	.loc	14 201 22               # rhs.c:201:22
	movq	u+16(%rdx,%rdx,4), %rbp
	.loc	14 201 20 is_stmt 0     # rhs.c:201:20
	movq	%rbp, -24(%rdi)
	.loc	14 202 15 is_stmt 1     # rhs.c:202:15
	movd	%rbp, %xmm2
	movsd	rho_i(%rdx), %xmm3      # xmm3 = mem[0],zero
	.loc	14 202 29 is_stmt 0     # rhs.c:202:29
	mulsd	%xmm2, %xmm3
.Ltmp622:
	#DEBUG_VALUE: rhs:u31 <- %XMM3
	.loc	14 204 13 is_stmt 1     # rhs.c:204:13
	movsd	qs(%rdx), %xmm4         # xmm4 = mem[0],zero
.Ltmp623:
	#DEBUG_VALUE: rhs:q <- %XMM4
	movsd	u+8(%rdx,%rdx,4), %xmm5 # xmm5 = mem[0],zero
	.loc	14 206 36               # rhs.c:206:36
	mulsd	%xmm3, %xmm5
	.loc	14 206 20 is_stmt 0     # rhs.c:206:20
	movsd	%xmm5, -16(%rdi)
	.loc	14 207 36 is_stmt 1     # rhs.c:207:36
	mulsd	%xmm3, %xmm2
	.loc	14 207 50 is_stmt 0     # rhs.c:207:50
	movsd	u+32(%rdx,%rdx,4), %xmm5 # xmm5 = mem[0],zero
	.loc	14 207 63               # rhs.c:207:63
	movapd	%xmm5, %xmm6
	subsd	%xmm4, %xmm6
	.loc	14 207 47               # rhs.c:207:47
	mulsd	%xmm15, %xmm6
	.loc	14 207 42               # rhs.c:207:42
	addsd	%xmm2, %xmm6
	.loc	14 207 20               # rhs.c:207:20
	movsd	%xmm6, -8(%rdi)
	.loc	14 209 27 is_stmt 1     # rhs.c:209:27
	mulsd	%xmm12, %xmm5
	.loc	14 209 48 is_stmt 0     # rhs.c:209:48
	mulsd	%xmm15, %xmm4
.Ltmp624:
	.loc	14 209 43               # rhs.c:209:43
	subsd	%xmm4, %xmm5
	.loc	14 208 36 is_stmt 1     # rhs.c:208:36
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
.Ltmp625:
	movsd	u+24(%rdx,%rdx,4), %xmm2 # xmm2 = mem[0],zero
	unpcklpd	%xmm5, %xmm2    # xmm2 = xmm2[0],xmm5[0]
	mulpd	%xmm3, %xmm2
	.loc	14 208 20 is_stmt 0     # rhs.c:208:20
	movupd	%xmm2, (%rdi)
.Ltmp626:
	.loc	14 200 7 is_stmt 1 discriminator 1 # rhs.c:200:7
	incq	%rbx
	.loc	14 200 21 is_stmt 0 discriminator 1 # rhs.c:200:21
	addq	$40, %rdi
	addq	$520, %rdx              # imm = 0x208
	cmpq	%rsi, %rbx
	.loc	14 200 7 discriminator 1 # rhs.c:200:7
	jl	.LBB9_35
.Ltmp627:
.LBB9_36:                               # %for.end1079
                                        #   in Loop: Header=BB9_34 Depth=2
	movq	80(%rsp), %rbp          # 8-byte Reload
.Ltmp628:
	.loc	14 212 7 is_stmt 1 discriminator 1 # rhs.c:212:7
	cmpl	%r9d, %ebp
	movq	352(%rsp), %rdx         # 8-byte Reload
	movq	%r14, %rdi
	movq	%rbp, %rbx
	movsd	336(%rsp), %xmm15       # 8-byte Reload
                                        # xmm15 = mem[0],zero
	movsd	128(%rsp), %xmm9        # 8-byte Reload
                                        # xmm9 = mem[0],zero
	movsd	320(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movapd	464(%rsp), %xmm0        # 16-byte Reload
	movapd	448(%rsp), %xmm5        # 16-byte Reload
	jge	.LBB9_38
	.p2align	4, 0x90
.LBB9_37:                               # %for.cond1083.preheader
                                        #   Parent Loop BB9_33 Depth=1
                                        #     Parent Loop BB9_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	incq	%rbx
.Ltmp629:
	.loc	14 214 30               # rhs.c:214:30
	movupd	-32(%rdi), %xmm2
	.loc	14 215 23               # rhs.c:215:23
	movupd	-32(%rdx), %xmm3
	.loc	14 215 38 is_stmt 0     # rhs.c:215:38
	movupd	-112(%rdx), %xmm4
	.loc	14 215 36               # rhs.c:215:36
	subpd	%xmm4, %xmm3
	.loc	14 215 19               # rhs.c:215:19
	mulpd	%xmm5, %xmm3
	.loc	14 215 13               # rhs.c:215:13
	subpd	%xmm3, %xmm2
	.loc	14 214 27 is_stmt 1     # rhs.c:214:27
	movupd	%xmm2, -32(%rdi)
	.loc	14 214 30 is_stmt 0     # rhs.c:214:30
	movupd	-16(%rdi), %xmm2
	.loc	14 215 23 is_stmt 1     # rhs.c:215:23
	movupd	-16(%rdx), %xmm3
	.loc	14 215 38 is_stmt 0     # rhs.c:215:38
	movupd	-96(%rdx), %xmm4
	.loc	14 215 36               # rhs.c:215:36
	subpd	%xmm4, %xmm3
	.loc	14 215 19               # rhs.c:215:19
	mulpd	%xmm5, %xmm3
	.loc	14 215 13               # rhs.c:215:13
	subpd	%xmm3, %xmm2
	.loc	14 214 27 is_stmt 1     # rhs.c:214:27
	movupd	%xmm2, -16(%rdi)
	.loc	14 214 30 is_stmt 0     # rhs.c:214:30
	movsd	(%rdi), %xmm2           # xmm2 = mem[0],zero
	.loc	14 215 23 is_stmt 1     # rhs.c:215:23
	movsd	(%rdx), %xmm3           # xmm3 = mem[0],zero
	.loc	14 215 36 is_stmt 0     # rhs.c:215:36
	subsd	-80(%rdx), %xmm3
	.loc	14 215 19               # rhs.c:215:19
	mulsd	%xmm0, %xmm3
	.loc	14 215 13               # rhs.c:215:13
	subsd	%xmm3, %xmm2
	.loc	14 214 27 is_stmt 1     # rhs.c:214:27
	movsd	%xmm2, (%rdi)
.Ltmp630:
	.loc	14 212 23 discriminator 1 # rhs.c:212:23
	addq	$2600, %rdi             # imm = 0xA28
	addq	$40, %rdx
	cmpq	%r9, %rbx
	.loc	14 212 7 is_stmt 0 discriminator 1 # rhs.c:212:7
	jl	.LBB9_37
.Ltmp631:
.LBB9_38:                               # %for.end1120
                                        #   in Loop: Header=BB9_34 Depth=2
	.loc	14 219 7 is_stmt 1 discriminator 1 # rhs.c:219:7
	cmpl	%esi, %ebp
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	%r15, %rdi
	movq	%rbp, %rbx
	movapd	432(%rsp), %xmm12       # 16-byte Reload
	jge	.LBB9_40
	.p2align	4, 0x90
.LBB9_39:                               # %for.body1123
                                        #   Parent Loop BB9_33 Depth=1
                                        #     Parent Loop BB9_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp632:
	.loc	14 220 15               # rhs.c:220:15
	movsd	rho_i(%rdi), %xmm0      # xmm0 = mem[0],zero
.Ltmp633:
	#DEBUG_VALUE: rhs:tmp <- %XMM0
	.loc	14 222 22               # rhs.c:222:22
	movupd	u+8(%rdi,%rdi,4), %xmm2
	.loc	14 222 20 is_stmt 0     # rhs.c:222:20
	movapd	%xmm0, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	mulpd	%xmm2, %xmm6
	movsd	u+24(%rdi,%rdi,4), %xmm7 # xmm7 = mem[0],zero
	.loc	14 224 20 is_stmt 1     # rhs.c:224:20
	mulsd	%xmm0, %xmm7
.Ltmp634:
	#DEBUG_VALUE: rhs:u41j <- %XMM7
	.loc	14 225 20               # rhs.c:225:20
	mulsd	u+32(%rdi,%rdi,4), %xmm0
.Ltmp635:
	#DEBUG_VALUE: rhs:u51j <- %XMM0
	.loc	14 227 15               # rhs.c:227:15
	movsd	rho_i-520(%rdi), %xmm2  # xmm2 = mem[0],zero
.Ltmp636:
	#DEBUG_VALUE: rhs:tmp <- %XMM2
	.loc	14 228 24               # rhs.c:228:24
	movupd	u-2592(%rdi,%rdi,4), %xmm3
	.loc	14 228 22 is_stmt 0     # rhs.c:228:22
	movapd	%xmm2, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm3, %xmm4
	movsd	u-2576(%rdi,%rdi,4), %xmm3 # xmm3 = mem[0],zero
	.loc	14 230 22 is_stmt 1     # rhs.c:230:22
	mulsd	%xmm2, %xmm3
.Ltmp637:
	#DEBUG_VALUE: rhs:u41jm1 <- %XMM3
	.loc	14 231 22               # rhs.c:231:22
	mulsd	u-2568(%rdi,%rdi,4), %xmm2
.Ltmp638:
	#DEBUG_VALUE: rhs:u51jm1 <- %XMM2
	.loc	14 233 35               # rhs.c:233:35
	movapd	%xmm6, %xmm5
	subpd	%xmm4, %xmm5
	.loc	14 233 26 is_stmt 0     # rhs.c:233:26
	mulpd	%xmm12, %xmm5
	.loc	14 233 20               # rhs.c:233:20
	movupd	%xmm5, -24(%rdx)
	.loc	14 235 35 is_stmt 1     # rhs.c:235:35
	movapd	%xmm7, %xmm5
	subsd	%xmm3, %xmm5
	.loc	14 235 26 is_stmt 0     # rhs.c:235:26
	mulsd	%xmm11, %xmm5
	.loc	14 235 20               # rhs.c:235:20
	movsd	%xmm5, -8(%rdx)
	.loc	14 237 27 is_stmt 1     # rhs.c:237:27
	movapd	%xmm6, %xmm5
	mulsd	%xmm5, %xmm5
	.loc	14 237 43 is_stmt 0     # rhs.c:237:43
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	mulsd	%xmm6, %xmm6
	.loc	14 237 37               # rhs.c:237:37
	addsd	%xmm6, %xmm5
	.loc	14 237 59               # rhs.c:237:59
	mulsd	%xmm7, %xmm7
.Ltmp639:
	.loc	14 237 53               # rhs.c:237:53
	addsd	%xmm5, %xmm7
	.loc	14 238 29 is_stmt 1     # rhs.c:238:29
	movapd	%xmm4, %xmm5
	mulsd	%xmm5, %xmm5
	.loc	14 238 45 is_stmt 0     # rhs.c:238:45
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	mulsd	%xmm4, %xmm4
	.loc	14 238 37               # rhs.c:238:37
	addsd	%xmm4, %xmm5
	.loc	14 238 61               # rhs.c:238:61
	mulsd	%xmm3, %xmm3
.Ltmp640:
	.loc	14 238 53               # rhs.c:238:53
	addsd	%xmm5, %xmm3
	.loc	14 238 19               # rhs.c:238:19
	subsd	%xmm3, %xmm7
	.loc	14 237 17 is_stmt 1     # rhs.c:237:17
	mulsd	%xmm15, %xmm7
	.loc	14 240 31               # rhs.c:240:31
	subsd	%xmm4, %xmm6
	.loc	14 240 17 is_stmt 0     # rhs.c:240:17
	mulsd	%xmm9, %xmm6
	.loc	14 239 11 is_stmt 1     # rhs.c:239:11
	addsd	%xmm7, %xmm6
	.loc	14 241 36               # rhs.c:241:36
	subsd	%xmm2, %xmm0
.Ltmp641:
	.loc	14 241 27 is_stmt 0     # rhs.c:241:27
	mulsd	%xmm1, %xmm0
	.loc	14 241 11               # rhs.c:241:11
	addsd	%xmm6, %xmm0
	.loc	14 236 20 is_stmt 1     # rhs.c:236:20
	movsd	%xmm0, (%rdx)
.Ltmp642:
	.loc	14 219 7 discriminator 1 # rhs.c:219:7
	incq	%rbx
	.loc	14 219 23 is_stmt 0 discriminator 1 # rhs.c:219:23
	addq	$520, %rdi              # imm = 0x208
	addq	$40, %rdx
	cmpq	%rsi, %rbx
	.loc	14 219 7 discriminator 1 # rhs.c:219:7
	jl	.LBB9_39
.Ltmp643:
.LBB9_40:                               # %for.end1249
                                        #   in Loop: Header=BB9_34 Depth=2
	.loc	14 244 7 is_stmt 1 discriminator 1 # rhs.c:244:7
	cmpl	%r9d, %ebp
	movapd	192(%rsp), %xmm6        # 16-byte Reload
	movapd	208(%rsp), %xmm1        # 16-byte Reload
	movapd	%xmm13, %xmm15
	movapd	%xmm14, %xmm9
	movapd	176(%rsp), %xmm7        # 16-byte Reload
	jge	.LBB9_43
# BB#41:                                # %for.body1252.lr.ph
                                        #   in Loop: Header=BB9_34 Depth=2
.Ltmp644:
	.loc	14 247 35               # rhs.c:247:35
	imulq	$169000, 112(%rsp), %rdx # 8-byte Folded Reload
                                        # imm = 0x29428
	addq	32(%rsp), %rdx          # 8-byte Folded Reload
	leaq	(%rax,%rax,4), %rdi
	.loc	14 251 46               # rhs.c:251:46
	movq	72(%rsp), %rbx          # 8-byte Reload
	movsd	(%rbx), %xmm2           # xmm2 = mem[0],zero
	.loc	14 247 35               # rhs.c:247:35
	movupd	u(%rdx,%rdi,8), %xmm10
	.loc	14 257 46               # rhs.c:257:46
	movq	40(%rsp), %rbx          # 8-byte Reload
	movupd	(%rbx), %xmm5
	.loc	14 259 35               # rhs.c:259:35
	movupd	u+16(%rdx,%rdi,8), %xmm11
	.loc	14 269 46               # rhs.c:269:46
	movq	368(%rsp), %rbx         # 8-byte Reload
	movsd	(%rbx), %xmm13          # xmm13 = mem[0],zero
	.loc	14 271 35               # rhs.c:271:35
	movsd	u+32(%rdx,%rdi,8), %xmm12 # xmm12 = mem[0],zero
	movq	%r10, %rbx
	movq	352(%rsp), %rdx         # 8-byte Reload
	movq	%r8, %r12
	movq	80(%rsp), %rdi          # 8-byte Reload
.Ltmp645:
	.p2align	4, 0x90
.LBB9_42:                               # %for.body1252
                                        #   Parent Loop BB9_33 Depth=1
                                        #     Parent Loop BB9_34 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	14 244 7 discriminator 1 # rhs.c:244:7
	incq	%rdi
.Ltmp646:
	.loc	14 251 31               # rhs.c:251:31
	movsd	-24(%rdx), %xmm14       # xmm14 = mem[0],zero
	.loc	14 251 44 is_stmt 0     # rhs.c:251:44
	movapd	%xmm14, %xmm0
	subsd	%xmm2, %xmm0
	.loc	14 251 27               # rhs.c:251:27
	mulsd	%xmm9, %xmm0
	.loc	14 251 11               # rhs.c:251:11
	addsd	rsd+169008(%r12), %xmm0
	.loc	14 246 35 is_stmt 1     # rhs.c:246:35
	movupd	-32(%rbx), %xmm2
	.loc	14 247 33               # rhs.c:247:33
	addpd	%xmm10, %xmm10
	.loc	14 247 27 is_stmt 0     # rhs.c:247:27
	subpd	%xmm10, %xmm2
	.loc	14 248 35 is_stmt 1     # rhs.c:248:35
	movupd	u+171600(%r12), %xmm10
	.loc	14 248 27 is_stmt 0     # rhs.c:248:27
	addpd	%xmm10, %xmm2
	.loc	14 246 23 is_stmt 1     # rhs.c:246:23
	mulpd	%xmm1, %xmm2
	.loc	14 246 11 is_stmt 0     # rhs.c:246:11
	movsd	rsd+169000(%r12), %xmm3 # xmm3 = mem[0],zero
	unpcklpd	%xmm0, %xmm3    # xmm3 = xmm3[0],xmm0[0]
	addpd	%xmm2, %xmm3
	.loc	14 245 25 is_stmt 1     # rhs.c:245:25
	movupd	%xmm3, rsd+169000(%r12)
	.loc	14 256 27               # rhs.c:256:27
	movupd	rsd+169016(%r12), %xmm0
	.loc	14 257 31               # rhs.c:257:31
	movupd	-16(%rdx), %xmm4
	.loc	14 257 44 is_stmt 0     # rhs.c:257:44
	movapd	%xmm4, %xmm2
	subpd	%xmm5, %xmm2
	.loc	14 257 27               # rhs.c:257:27
	mulpd	%xmm7, %xmm2
	.loc	14 257 11               # rhs.c:257:11
	addpd	%xmm0, %xmm2
	.loc	14 258 35 is_stmt 1     # rhs.c:258:35
	movupd	-16(%rbx), %xmm0
	.loc	14 259 33               # rhs.c:259:33
	addpd	%xmm11, %xmm11
	.loc	14 259 27 is_stmt 0     # rhs.c:259:27
	subpd	%xmm11, %xmm0
	.loc	14 260 35 is_stmt 1     # rhs.c:260:35
	movupd	u+171616(%r12), %xmm11
	.loc	14 260 27 is_stmt 0     # rhs.c:260:27
	addpd	%xmm11, %xmm0
	.loc	14 258 23 is_stmt 1     # rhs.c:258:23
	mulpd	%xmm15, %xmm0
	.loc	14 258 11 is_stmt 0     # rhs.c:258:11
	addpd	%xmm2, %xmm0
	.loc	14 256 25 is_stmt 1     # rhs.c:256:25
	movupd	%xmm0, rsd+169016(%r12)
	.loc	14 269 31               # rhs.c:269:31
	movsd	(%rdx), %xmm0           # xmm0 = mem[0],zero
	.loc	14 269 44 is_stmt 0     # rhs.c:269:44
	movapd	%xmm0, %xmm2
	subsd	%xmm13, %xmm2
	.loc	14 269 27               # rhs.c:269:27
	mulsd	%xmm9, %xmm2
	.loc	14 269 11               # rhs.c:269:11
	addsd	rsd+169032(%r12), %xmm2
	.loc	14 270 35 is_stmt 1     # rhs.c:270:35
	movsd	(%rbx), %xmm3           # xmm3 = mem[0],zero
	.loc	14 271 33               # rhs.c:271:33
	addsd	%xmm12, %xmm12
	.loc	14 271 27 is_stmt 0     # rhs.c:271:27
	subsd	%xmm12, %xmm3
	.loc	14 272 35 is_stmt 1     # rhs.c:272:35
	movsd	u+171632(%r12), %xmm12  # xmm12 = mem[0],zero
	.loc	14 272 27 is_stmt 0     # rhs.c:272:27
	addsd	%xmm12, %xmm3
	.loc	14 270 23 is_stmt 1     # rhs.c:270:23
	mulsd	%xmm6, %xmm3
	.loc	14 270 11 is_stmt 0     # rhs.c:270:11
	addsd	%xmm2, %xmm3
	.loc	14 268 25 is_stmt 1     # rhs.c:268:25
	movsd	%xmm3, rsd+169032(%r12)
.Ltmp647:
	.loc	14 244 23 discriminator 1 # rhs.c:244:23
	addq	$2600, %r12             # imm = 0xA28
	addq	$40, %rdx
	addq	$2600, %rbx             # imm = 0xA28
	cmpq	%r9, %rdi
.Ltmp648:
	.loc	14 269 46               # rhs.c:269:46
	movapd	%xmm0, %xmm13
	.loc	14 251 46               # rhs.c:251:46
	movapd	%xmm14, %xmm2
	.loc	14 257 46               # rhs.c:257:46
	movapd	%xmm4, %xmm5
.Ltmp649:
	.loc	14 244 7 discriminator 1 # rhs.c:244:7
	jl	.LBB9_42
.Ltmp650:
.LBB9_43:                               # %for.inc1519
                                        #   in Loop: Header=BB9_34 Depth=2
	movapd	%xmm9, %xmm14
	movapd	%xmm15, %xmm13
	.loc	14 199 5 discriminator 1 # rhs.c:199:5
	incq	%rax
	addq	$8, %r13
	addq	$40, %r14
	addq	$8, %r15
	addq	$40, %r8
	addq	$40, %r10
	movq	480(%rsp), %r12         # 8-byte Reload
	.loc	14 199 21 is_stmt 0 discriminator 1 # rhs.c:199:21
	cmpq	%r12, %rax
	movapd	496(%rsp), %xmm9        # 16-byte Reload
	movapd	144(%rsp), %xmm11       # 16-byte Reload
.Ltmp651:
	.loc	14 207 47 is_stmt 1     # rhs.c:207:47
	movsd	.LCPI9_8(%rip), %xmm7   # xmm7 = mem[0],zero
	movapd	%xmm7, %xmm15
	movsd	.LCPI9_9(%rip), %xmm12  # xmm12 = mem[0],zero
.Ltmp652:
	.loc	14 283 28               # rhs.c:283:28
	movsd	.LCPI9_11(%rip), %xmm7  # xmm7 = mem[0],zero
	jl	.LBB9_34
# BB#44:                                # %for.end1521
                                        #   in Loop: Header=BB9_33 Depth=1
	movq	240(%rsp), %rdx         # 8-byte Reload
	cmpl	%r12d, %edx
	movq	160(%rsp), %rax         # 8-byte Reload
	movq	%rdx, %rbx
	jge	.LBB9_45
	.p2align	4, 0x90
.LBB9_87:                               # %for.body1527
                                        #   Parent Loop BB9_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	14 281 27               # rhs.c:281:27
	movsd	rsd+171600(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 282 30               # rhs.c:282:30
	movsd	u+171600(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	14 282 28 is_stmt 0     # rhs.c:282:28
	movapd	%xmm2, %xmm3
	movsd	.LCPI9_10(%rip), %xmm1  # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm3
	.loc	14 283 30 is_stmt 1     # rhs.c:283:30
	movsd	u+174200(%rax), %xmm4   # xmm4 = mem[0],zero
	.loc	14 283 28 is_stmt 0     # rhs.c:283:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	14 283 22               # rhs.c:283:22
	subsd	%xmm5, %xmm3
	.loc	14 284 30 is_stmt 1     # rhs.c:284:30
	movsd	u+176800(%rax), %xmm5   # xmm5 = mem[0],zero
	.loc	14 284 22 is_stmt 0     # rhs.c:284:22
	addsd	%xmm5, %xmm3
	.loc	14 282 18 is_stmt 1     # rhs.c:282:18
	mulsd	%xmm9, %xmm3
	.loc	14 282 11 is_stmt 0     # rhs.c:282:11
	subsd	%xmm3, %xmm0
	.loc	14 281 25 is_stmt 1     # rhs.c:281:25
	movsd	%xmm0, rsd+171600(%rax)
	.loc	14 285 27               # rhs.c:285:27
	movsd	rsd+174200(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 286 28               # rhs.c:286:28
	mulsd	%xmm7, %xmm2
	.loc	14 287 28               # rhs.c:287:28
	movsd	.LCPI9_12(%rip), %xmm6  # xmm6 = mem[0],zero
	mulsd	%xmm6, %xmm4
	.loc	14 286 28               # rhs.c:286:28
	subsd	%xmm2, %xmm4
	.loc	14 288 28               # rhs.c:288:28
	mulsd	%xmm7, %xmm5
	.loc	14 288 22 is_stmt 0     # rhs.c:288:22
	subsd	%xmm5, %xmm4
	.loc	14 289 22 is_stmt 1     # rhs.c:289:22
	addsd	u+179400(%rax), %xmm4
	.loc	14 286 18               # rhs.c:286:18
	mulsd	%xmm9, %xmm4
	.loc	14 286 11 is_stmt 0     # rhs.c:286:11
	subsd	%xmm4, %xmm0
	.loc	14 285 25 is_stmt 1     # rhs.c:285:25
	movsd	%xmm0, rsd+174200(%rax)
	.loc	14 281 27               # rhs.c:281:27
	movsd	rsd+171608(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 282 30               # rhs.c:282:30
	movsd	u+171608(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	14 282 28 is_stmt 0     # rhs.c:282:28
	movapd	%xmm2, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	14 283 30 is_stmt 1     # rhs.c:283:30
	movsd	u+174208(%rax), %xmm4   # xmm4 = mem[0],zero
	.loc	14 283 28 is_stmt 0     # rhs.c:283:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	14 283 22               # rhs.c:283:22
	subsd	%xmm5, %xmm3
	.loc	14 284 30 is_stmt 1     # rhs.c:284:30
	movsd	u+176808(%rax), %xmm5   # xmm5 = mem[0],zero
	.loc	14 284 22 is_stmt 0     # rhs.c:284:22
	addsd	%xmm5, %xmm3
	.loc	14 282 18 is_stmt 1     # rhs.c:282:18
	mulsd	%xmm9, %xmm3
	.loc	14 282 11 is_stmt 0     # rhs.c:282:11
	subsd	%xmm3, %xmm0
	.loc	14 281 25 is_stmt 1     # rhs.c:281:25
	movsd	%xmm0, rsd+171608(%rax)
	.loc	14 285 27               # rhs.c:285:27
	movsd	rsd+174208(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 286 28               # rhs.c:286:28
	mulsd	%xmm7, %xmm2
	.loc	14 287 28               # rhs.c:287:28
	mulsd	%xmm6, %xmm4
	.loc	14 286 28               # rhs.c:286:28
	subsd	%xmm2, %xmm4
	.loc	14 288 28               # rhs.c:288:28
	mulsd	%xmm7, %xmm5
	.loc	14 288 22 is_stmt 0     # rhs.c:288:22
	subsd	%xmm5, %xmm4
	.loc	14 289 22 is_stmt 1     # rhs.c:289:22
	addsd	u+179408(%rax), %xmm4
	.loc	14 286 18               # rhs.c:286:18
	mulsd	%xmm9, %xmm4
	.loc	14 286 11 is_stmt 0     # rhs.c:286:11
	subsd	%xmm4, %xmm0
	.loc	14 285 25 is_stmt 1     # rhs.c:285:25
	movsd	%xmm0, rsd+174208(%rax)
	.loc	14 281 27               # rhs.c:281:27
	movsd	rsd+171616(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 282 30               # rhs.c:282:30
	movsd	u+171616(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	14 282 28 is_stmt 0     # rhs.c:282:28
	movapd	%xmm2, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	14 283 30 is_stmt 1     # rhs.c:283:30
	movsd	u+174216(%rax), %xmm4   # xmm4 = mem[0],zero
	.loc	14 283 28 is_stmt 0     # rhs.c:283:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	14 283 22               # rhs.c:283:22
	subsd	%xmm5, %xmm3
	.loc	14 284 30 is_stmt 1     # rhs.c:284:30
	movsd	u+176816(%rax), %xmm5   # xmm5 = mem[0],zero
	.loc	14 284 22 is_stmt 0     # rhs.c:284:22
	addsd	%xmm5, %xmm3
	.loc	14 282 18 is_stmt 1     # rhs.c:282:18
	mulsd	%xmm9, %xmm3
	.loc	14 282 11 is_stmt 0     # rhs.c:282:11
	subsd	%xmm3, %xmm0
	.loc	14 281 25 is_stmt 1     # rhs.c:281:25
	movsd	%xmm0, rsd+171616(%rax)
	.loc	14 285 27               # rhs.c:285:27
	movsd	rsd+174216(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 286 28               # rhs.c:286:28
	mulsd	%xmm7, %xmm2
	.loc	14 287 28               # rhs.c:287:28
	mulsd	%xmm6, %xmm4
	.loc	14 286 28               # rhs.c:286:28
	subsd	%xmm2, %xmm4
	.loc	14 288 28               # rhs.c:288:28
	mulsd	%xmm7, %xmm5
	.loc	14 288 22 is_stmt 0     # rhs.c:288:22
	subsd	%xmm5, %xmm4
	.loc	14 289 22 is_stmt 1     # rhs.c:289:22
	addsd	u+179416(%rax), %xmm4
	.loc	14 286 18               # rhs.c:286:18
	mulsd	%xmm9, %xmm4
	.loc	14 286 11 is_stmt 0     # rhs.c:286:11
	subsd	%xmm4, %xmm0
	.loc	14 285 25 is_stmt 1     # rhs.c:285:25
	movsd	%xmm0, rsd+174216(%rax)
	.loc	14 281 27               # rhs.c:281:27
	movsd	rsd+171624(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 282 30               # rhs.c:282:30
	movsd	u+171624(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	14 282 28 is_stmt 0     # rhs.c:282:28
	movapd	%xmm2, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	14 283 30 is_stmt 1     # rhs.c:283:30
	movsd	u+174224(%rax), %xmm4   # xmm4 = mem[0],zero
	.loc	14 283 28 is_stmt 0     # rhs.c:283:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	14 283 22               # rhs.c:283:22
	subsd	%xmm5, %xmm3
	.loc	14 284 30 is_stmt 1     # rhs.c:284:30
	movsd	u+176824(%rax), %xmm5   # xmm5 = mem[0],zero
	.loc	14 284 22 is_stmt 0     # rhs.c:284:22
	addsd	%xmm5, %xmm3
	.loc	14 282 18 is_stmt 1     # rhs.c:282:18
	mulsd	%xmm9, %xmm3
	.loc	14 282 11 is_stmt 0     # rhs.c:282:11
	subsd	%xmm3, %xmm0
	.loc	14 281 25 is_stmt 1     # rhs.c:281:25
	movsd	%xmm0, rsd+171624(%rax)
	.loc	14 285 27               # rhs.c:285:27
	movsd	rsd+174224(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 286 28               # rhs.c:286:28
	mulsd	%xmm7, %xmm2
	.loc	14 287 28               # rhs.c:287:28
	mulsd	%xmm6, %xmm4
	.loc	14 286 28               # rhs.c:286:28
	subsd	%xmm2, %xmm4
	.loc	14 288 28               # rhs.c:288:28
	mulsd	%xmm7, %xmm5
	.loc	14 288 22 is_stmt 0     # rhs.c:288:22
	subsd	%xmm5, %xmm4
	.loc	14 289 22 is_stmt 1     # rhs.c:289:22
	addsd	u+179424(%rax), %xmm4
	.loc	14 286 18               # rhs.c:286:18
	mulsd	%xmm9, %xmm4
	.loc	14 286 11 is_stmt 0     # rhs.c:286:11
	subsd	%xmm4, %xmm0
	.loc	14 285 25 is_stmt 1     # rhs.c:285:25
	movsd	%xmm0, rsd+174224(%rax)
	.loc	14 281 27               # rhs.c:281:27
	movsd	rsd+171632(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 282 30               # rhs.c:282:30
	movsd	u+171632(%rax), %xmm2   # xmm2 = mem[0],zero
	.loc	14 282 28 is_stmt 0     # rhs.c:282:28
	movapd	%xmm2, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	14 283 30 is_stmt 1     # rhs.c:283:30
	movsd	u+174232(%rax), %xmm4   # xmm4 = mem[0],zero
	.loc	14 283 28 is_stmt 0     # rhs.c:283:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	14 283 22               # rhs.c:283:22
	subsd	%xmm5, %xmm3
	.loc	14 284 30 is_stmt 1     # rhs.c:284:30
	movsd	u+176832(%rax), %xmm5   # xmm5 = mem[0],zero
	.loc	14 284 22 is_stmt 0     # rhs.c:284:22
	addsd	%xmm5, %xmm3
	.loc	14 282 18 is_stmt 1     # rhs.c:282:18
	mulsd	%xmm9, %xmm3
	.loc	14 282 11 is_stmt 0     # rhs.c:282:11
	subsd	%xmm3, %xmm0
	.loc	14 281 25 is_stmt 1     # rhs.c:281:25
	movsd	%xmm0, rsd+171632(%rax)
	.loc	14 285 27               # rhs.c:285:27
	movsd	rsd+174232(%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 286 28               # rhs.c:286:28
	mulsd	%xmm7, %xmm2
	.loc	14 287 28               # rhs.c:287:28
	mulsd	%xmm6, %xmm4
	.loc	14 286 28               # rhs.c:286:28
	subsd	%xmm2, %xmm4
	.loc	14 288 28               # rhs.c:288:28
	mulsd	%xmm7, %xmm5
	.loc	14 288 22 is_stmt 0     # rhs.c:288:22
	subsd	%xmm5, %xmm4
	.loc	14 289 22 is_stmt 1     # rhs.c:289:22
	addsd	u+179432(%rax), %xmm4
	.loc	14 286 18               # rhs.c:286:18
	mulsd	%xmm9, %xmm4
	.loc	14 286 11 is_stmt 0     # rhs.c:286:11
	subsd	%xmm4, %xmm0
	.loc	14 285 25 is_stmt 1     # rhs.c:285:25
	movsd	%xmm0, rsd+174232(%rax)
.Ltmp653:
	.loc	14 279 5 discriminator 1 # rhs.c:279:5
	incq	%rbx
	.loc	14 279 21 is_stmt 0 discriminator 1 # rhs.c:279:21
	addq	$40, %rax
	cmpq	%r12, %rbx
	jl	.LBB9_87
.LBB9_45:                               # %for.cond1625.preheader
                                        #   in Loop: Header=BB9_33 Depth=1
	movq	24(%rsp), %r15          # 8-byte Reload
	cmpl	$3, %r15d
	movl	$3, %eax
	movq	240(%rsp), %r14         # 8-byte Reload
	movapd	400(%rsp), %xmm1        # 16-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movl	384(%rsp), %r10d        # 4-byte Reload
	movq	8(%rsp), %rbp           # 8-byte Reload
.Ltmp654:
	.loc	14 287 28 is_stmt 1     # rhs.c:287:28
	movsd	.LCPI9_12(%rip), %xmm10 # xmm10 = mem[0],zero
.Ltmp655:
	.loc	14 299 30               # rhs.c:299:30
	movapd	.LCPI9_14(%rip), %xmm5  # xmm5 = [6.000000e+00,6.000000e+00]
	jle	.LBB9_46
.Ltmp656:
	.p2align	4, 0x90
.LBB9_62:                               # %for.cond1629.preheader
                                        #   Parent Loop BB9_33 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB9_65 Depth 3
	cmpl	%r12d, %r14d
	jge	.LBB9_63
# BB#64:                                # %for.cond1632.preheader.lr.ph
                                        #   in Loop: Header=BB9_62 Depth=2
	.loc	14 294 7 discriminator 1 # rhs.c:294:7
	imulq	$2600, %rax, %rdx       # imm = 0xA28
.Ltmp657:
	.loc	14 300 38               # rhs.c:300:38
	incq	%rax
	movl	%r10d, %edi
	movq	%r8, %rbx
	.p2align	4, 0x90
.LBB9_65:                               # %for.cond1632.preheader
                                        #   Parent Loop BB9_33 Depth=1
                                        #     Parent Loop BB9_62 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	14 296 29               # rhs.c:296:29
	movupd	rsd+169000(%rdx,%rbx), %xmm0
	.loc	14 297 32               # rhs.c:297:32
	movupd	u+163800(%rdx,%rbx), %xmm2
	.loc	14 298 32               # rhs.c:298:32
	movupd	u+166400(%rdx,%rbx), %xmm3
	.loc	14 298 30 is_stmt 0     # rhs.c:298:30
	mulpd	%xmm8, %xmm3
	.loc	14 298 24               # rhs.c:298:24
	subpd	%xmm3, %xmm2
	.loc	14 299 32 is_stmt 1     # rhs.c:299:32
	movupd	u+169000(%rdx,%rbx), %xmm3
	.loc	14 299 30 is_stmt 0     # rhs.c:299:30
	mulpd	%xmm5, %xmm3
	.loc	14 299 24               # rhs.c:299:24
	addpd	%xmm2, %xmm3
	.loc	14 300 32 is_stmt 1     # rhs.c:300:32
	movupd	u+171600(%rdx,%rbx), %xmm2
	.loc	14 300 30 is_stmt 0     # rhs.c:300:30
	mulpd	%xmm8, %xmm2
	.loc	14 300 24               # rhs.c:300:24
	subpd	%xmm2, %xmm3
	.loc	14 301 32 is_stmt 1     # rhs.c:301:32
	movupd	u+174200(%rdx,%rbx), %xmm2
	.loc	14 301 24 is_stmt 0     # rhs.c:301:24
	addpd	%xmm3, %xmm2
	.loc	14 297 20 is_stmt 1     # rhs.c:297:20
	mulpd	%xmm1, %xmm2
	.loc	14 297 13 is_stmt 0     # rhs.c:297:13
	subpd	%xmm2, %xmm0
	.loc	14 296 27 is_stmt 1     # rhs.c:296:27
	movupd	%xmm0, rsd+169000(%rdx,%rbx)
	.loc	14 296 29 is_stmt 0     # rhs.c:296:29
	movupd	rsd+169016(%rdx,%rbx), %xmm0
	.loc	14 297 32 is_stmt 1     # rhs.c:297:32
	movupd	u+163816(%rdx,%rbx), %xmm2
	.loc	14 298 32               # rhs.c:298:32
	movupd	u+166416(%rdx,%rbx), %xmm3
	.loc	14 298 30 is_stmt 0     # rhs.c:298:30
	mulpd	%xmm8, %xmm3
	.loc	14 298 24               # rhs.c:298:24
	subpd	%xmm3, %xmm2
	.loc	14 299 32 is_stmt 1     # rhs.c:299:32
	movupd	u+169016(%rdx,%rbx), %xmm3
	.loc	14 299 30 is_stmt 0     # rhs.c:299:30
	mulpd	%xmm5, %xmm3
	.loc	14 299 24               # rhs.c:299:24
	addpd	%xmm2, %xmm3
	.loc	14 300 32 is_stmt 1     # rhs.c:300:32
	movupd	u+171616(%rdx,%rbx), %xmm2
	.loc	14 300 30 is_stmt 0     # rhs.c:300:30
	mulpd	%xmm8, %xmm2
	.loc	14 300 24               # rhs.c:300:24
	subpd	%xmm2, %xmm3
	.loc	14 301 32 is_stmt 1     # rhs.c:301:32
	movupd	u+174216(%rdx,%rbx), %xmm2
	.loc	14 301 24 is_stmt 0     # rhs.c:301:24
	addpd	%xmm3, %xmm2
	.loc	14 297 20 is_stmt 1     # rhs.c:297:20
	mulpd	%xmm1, %xmm2
	.loc	14 297 13 is_stmt 0     # rhs.c:297:13
	subpd	%xmm2, %xmm0
	.loc	14 296 27 is_stmt 1     # rhs.c:296:27
	movupd	%xmm0, rsd+169016(%rdx,%rbx)
	.loc	14 296 29 is_stmt 0     # rhs.c:296:29
	movsd	rsd+169032(%rdx,%rbx), %xmm0 # xmm0 = mem[0],zero
	.loc	14 297 32 is_stmt 1     # rhs.c:297:32
	movsd	u+163832(%rdx,%rbx), %xmm2 # xmm2 = mem[0],zero
	movsd	u+166432(%rdx,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	14 298 30               # rhs.c:298:30
	mulsd	%xmm7, %xmm3
	.loc	14 298 24 is_stmt 0     # rhs.c:298:24
	subsd	%xmm3, %xmm2
	movsd	u+169032(%rdx,%rbx), %xmm3 # xmm3 = mem[0],zero
	.loc	14 299 30 is_stmt 1     # rhs.c:299:30
	mulsd	%xmm10, %xmm3
	.loc	14 299 24 is_stmt 0     # rhs.c:299:24
	addsd	%xmm2, %xmm3
	movsd	u+171632(%rdx,%rbx), %xmm2 # xmm2 = mem[0],zero
	.loc	14 300 30 is_stmt 1     # rhs.c:300:30
	mulsd	%xmm7, %xmm2
	.loc	14 300 24 is_stmt 0     # rhs.c:300:24
	subsd	%xmm2, %xmm3
	.loc	14 301 24 is_stmt 1     # rhs.c:301:24
	addsd	u+174232(%rdx,%rbx), %xmm3
	.loc	14 297 20               # rhs.c:297:20
	mulsd	%xmm9, %xmm3
	.loc	14 297 13 is_stmt 0     # rhs.c:297:13
	subsd	%xmm3, %xmm0
	.loc	14 296 27 is_stmt 1     # rhs.c:296:27
	movsd	%xmm0, rsd+169032(%rdx,%rbx)
.Ltmp658:
	.loc	14 294 7 discriminator 1 # rhs.c:294:7
	addq	$40, %rbx
	decl	%edi
	jne	.LBB9_65
	jmp	.LBB9_66
.Ltmp659:
	.p2align	4, 0x90
.LBB9_63:                               # %for.cond1629.preheader.for.inc1710_crit_edge
                                        #   in Loop: Header=BB9_62 Depth=2
	.loc	14 293 5 discriminator 1 # rhs.c:293:5
	incq	%rax
.LBB9_66:                               # %for.inc1710
                                        #   in Loop: Header=BB9_62 Depth=2
	.loc	14 293 19 is_stmt 0 discriminator 1 # rhs.c:293:19
	cmpq	%r15, %rax
	jl	.LBB9_62
.Ltmp660:
.LBB9_46:                               # %for.cond1713.preheader
                                        #   in Loop: Header=BB9_33 Depth=1
	cmpl	%r12d, %r14d
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	%rdi, %rax
	movq	%r14, %rbx
	movq	304(%rsp), %r15         # 8-byte Reload
	movq	288(%rsp), %r10         # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	272(%rsp), %r13         # 8-byte Reload
.Ltmp661:
	.loc	14 282 28 is_stmt 1     # rhs.c:282:28
	movsd	.LCPI9_10(%rip), %xmm1  # xmm1 = mem[0],zero
	jge	.LBB9_48
.Ltmp662:
	.p2align	4, 0x90
.LBB9_47:                               # %for.body1718
                                        #   Parent Loop BB9_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	14 308 30               # rhs.c:308:30
	movsd	rsd+169000(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 309 30               # rhs.c:309:30
	movsd	u+169000(%rdx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 310 30               # rhs.c:310:30
	movsd	u+169000(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	.loc	14 310 28 is_stmt 0     # rhs.c:310:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 310 22               # rhs.c:310:22
	subsd	%xmm4, %xmm2
	.loc	14 311 30 is_stmt 1     # rhs.c:311:30
	movsd	u+169000(%rcx,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	14 311 28 is_stmt 0     # rhs.c:311:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm10, %xmm5
	.loc	14 311 22               # rhs.c:311:22
	addsd	%xmm2, %xmm5
	.loc	14 312 30 is_stmt 1     # rhs.c:312:30
	movsd	u+169000(%r11,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 312 28 is_stmt 0     # rhs.c:312:28
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	14 312 22               # rhs.c:312:22
	subsd	%xmm6, %xmm5
	.loc	14 309 18 is_stmt 1     # rhs.c:309:18
	mulsd	%xmm9, %xmm5
	.loc	14 309 11 is_stmt 0     # rhs.c:309:11
	subsd	%xmm5, %xmm0
	.loc	14 308 28 is_stmt 1     # rhs.c:308:28
	movsd	%xmm0, rsd+169000(%rcx,%rax)
	.loc	14 313 30               # rhs.c:313:30
	movsd	rsd+169000(%r11,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 315 28               # rhs.c:315:28
	mulsd	%xmm7, %xmm4
	.loc	14 315 22 is_stmt 0     # rhs.c:315:22
	subsd	%xmm4, %xmm3
	.loc	14 316 28 is_stmt 1     # rhs.c:316:28
	mulsd	%xmm1, %xmm2
	.loc	14 316 22 is_stmt 0     # rhs.c:316:22
	addsd	%xmm3, %xmm2
	.loc	14 314 18 is_stmt 1     # rhs.c:314:18
	mulsd	%xmm9, %xmm2
	.loc	14 314 11 is_stmt 0     # rhs.c:314:11
	subsd	%xmm2, %xmm0
	.loc	14 313 28 is_stmt 1     # rhs.c:313:28
	movsd	%xmm0, rsd+169000(%r11,%rax)
	.loc	14 308 30               # rhs.c:308:30
	movsd	rsd+169008(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 309 30               # rhs.c:309:30
	movsd	u+169008(%rdx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 310 30               # rhs.c:310:30
	movsd	u+169008(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	.loc	14 310 28 is_stmt 0     # rhs.c:310:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 310 22               # rhs.c:310:22
	subsd	%xmm4, %xmm2
	.loc	14 311 30 is_stmt 1     # rhs.c:311:30
	movsd	u+169008(%rcx,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	14 311 28 is_stmt 0     # rhs.c:311:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm10, %xmm5
	.loc	14 311 22               # rhs.c:311:22
	addsd	%xmm2, %xmm5
	.loc	14 312 30 is_stmt 1     # rhs.c:312:30
	movsd	u+169008(%r11,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 312 28 is_stmt 0     # rhs.c:312:28
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	14 312 22               # rhs.c:312:22
	subsd	%xmm6, %xmm5
	.loc	14 309 18 is_stmt 1     # rhs.c:309:18
	mulsd	%xmm9, %xmm5
	.loc	14 309 11 is_stmt 0     # rhs.c:309:11
	subsd	%xmm5, %xmm0
	.loc	14 308 28 is_stmt 1     # rhs.c:308:28
	movsd	%xmm0, rsd+169008(%rcx,%rax)
	.loc	14 313 30               # rhs.c:313:30
	movsd	rsd+169008(%r11,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 315 28               # rhs.c:315:28
	mulsd	%xmm7, %xmm4
	.loc	14 315 22 is_stmt 0     # rhs.c:315:22
	subsd	%xmm4, %xmm3
	.loc	14 316 28 is_stmt 1     # rhs.c:316:28
	mulsd	%xmm1, %xmm2
	.loc	14 316 22 is_stmt 0     # rhs.c:316:22
	addsd	%xmm3, %xmm2
	.loc	14 314 18 is_stmt 1     # rhs.c:314:18
	mulsd	%xmm9, %xmm2
	.loc	14 314 11 is_stmt 0     # rhs.c:314:11
	subsd	%xmm2, %xmm0
	.loc	14 313 28 is_stmt 1     # rhs.c:313:28
	movsd	%xmm0, rsd+169008(%r11,%rax)
	.loc	14 308 30               # rhs.c:308:30
	movsd	rsd+169016(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 309 30               # rhs.c:309:30
	movsd	u+169016(%rdx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 310 30               # rhs.c:310:30
	movsd	u+169016(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	.loc	14 310 28 is_stmt 0     # rhs.c:310:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 310 22               # rhs.c:310:22
	subsd	%xmm4, %xmm2
	.loc	14 311 30 is_stmt 1     # rhs.c:311:30
	movsd	u+169016(%rcx,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	14 311 28 is_stmt 0     # rhs.c:311:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm10, %xmm5
	.loc	14 311 22               # rhs.c:311:22
	addsd	%xmm2, %xmm5
	.loc	14 312 30 is_stmt 1     # rhs.c:312:30
	movsd	u+169016(%r11,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 312 28 is_stmt 0     # rhs.c:312:28
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	14 312 22               # rhs.c:312:22
	subsd	%xmm6, %xmm5
	.loc	14 309 18 is_stmt 1     # rhs.c:309:18
	mulsd	%xmm9, %xmm5
	.loc	14 309 11 is_stmt 0     # rhs.c:309:11
	subsd	%xmm5, %xmm0
	.loc	14 308 28 is_stmt 1     # rhs.c:308:28
	movsd	%xmm0, rsd+169016(%rcx,%rax)
	.loc	14 313 30               # rhs.c:313:30
	movsd	rsd+169016(%r11,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 315 28               # rhs.c:315:28
	mulsd	%xmm7, %xmm4
	.loc	14 315 22 is_stmt 0     # rhs.c:315:22
	subsd	%xmm4, %xmm3
	.loc	14 316 28 is_stmt 1     # rhs.c:316:28
	mulsd	%xmm1, %xmm2
	.loc	14 316 22 is_stmt 0     # rhs.c:316:22
	addsd	%xmm3, %xmm2
	.loc	14 314 18 is_stmt 1     # rhs.c:314:18
	mulsd	%xmm9, %xmm2
	.loc	14 314 11 is_stmt 0     # rhs.c:314:11
	subsd	%xmm2, %xmm0
	.loc	14 313 28 is_stmt 1     # rhs.c:313:28
	movsd	%xmm0, rsd+169016(%r11,%rax)
	.loc	14 308 30               # rhs.c:308:30
	movsd	rsd+169024(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 309 30               # rhs.c:309:30
	movsd	u+169024(%rdx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 310 30               # rhs.c:310:30
	movsd	u+169024(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	.loc	14 310 28 is_stmt 0     # rhs.c:310:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 310 22               # rhs.c:310:22
	subsd	%xmm4, %xmm2
	.loc	14 311 30 is_stmt 1     # rhs.c:311:30
	movsd	u+169024(%rcx,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	14 311 28 is_stmt 0     # rhs.c:311:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm10, %xmm5
	.loc	14 311 22               # rhs.c:311:22
	addsd	%xmm2, %xmm5
	.loc	14 312 30 is_stmt 1     # rhs.c:312:30
	movsd	u+169024(%r11,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 312 28 is_stmt 0     # rhs.c:312:28
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	14 312 22               # rhs.c:312:22
	subsd	%xmm6, %xmm5
	.loc	14 309 18 is_stmt 1     # rhs.c:309:18
	mulsd	%xmm9, %xmm5
	.loc	14 309 11 is_stmt 0     # rhs.c:309:11
	subsd	%xmm5, %xmm0
	.loc	14 308 28 is_stmt 1     # rhs.c:308:28
	movsd	%xmm0, rsd+169024(%rcx,%rax)
	.loc	14 313 30               # rhs.c:313:30
	movsd	rsd+169024(%r11,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 315 28               # rhs.c:315:28
	mulsd	%xmm7, %xmm4
	.loc	14 315 22 is_stmt 0     # rhs.c:315:22
	subsd	%xmm4, %xmm3
	.loc	14 316 28 is_stmt 1     # rhs.c:316:28
	mulsd	%xmm1, %xmm2
	.loc	14 316 22 is_stmt 0     # rhs.c:316:22
	addsd	%xmm3, %xmm2
	.loc	14 314 18 is_stmt 1     # rhs.c:314:18
	mulsd	%xmm9, %xmm2
	.loc	14 314 11 is_stmt 0     # rhs.c:314:11
	subsd	%xmm2, %xmm0
	.loc	14 313 28 is_stmt 1     # rhs.c:313:28
	movsd	%xmm0, rsd+169024(%r11,%rax)
	.loc	14 308 30               # rhs.c:308:30
	movsd	rsd+169032(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 309 30               # rhs.c:309:30
	movsd	u+169032(%rdx,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 310 30               # rhs.c:310:30
	movsd	u+169032(%rbp,%rax), %xmm3 # xmm3 = mem[0],zero
	.loc	14 310 28 is_stmt 0     # rhs.c:310:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm7, %xmm4
	.loc	14 310 22               # rhs.c:310:22
	subsd	%xmm4, %xmm2
	.loc	14 311 30 is_stmt 1     # rhs.c:311:30
	movsd	u+169032(%rcx,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	14 311 28 is_stmt 0     # rhs.c:311:28
	movapd	%xmm4, %xmm5
	mulsd	%xmm10, %xmm5
	.loc	14 311 22               # rhs.c:311:22
	addsd	%xmm2, %xmm5
	.loc	14 312 30 is_stmt 1     # rhs.c:312:30
	movsd	u+169032(%r11,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	14 312 28 is_stmt 0     # rhs.c:312:28
	movapd	%xmm2, %xmm6
	mulsd	%xmm7, %xmm6
	.loc	14 312 22               # rhs.c:312:22
	subsd	%xmm6, %xmm5
	.loc	14 309 18 is_stmt 1     # rhs.c:309:18
	mulsd	%xmm9, %xmm5
	.loc	14 309 11 is_stmt 0     # rhs.c:309:11
	subsd	%xmm5, %xmm0
	.loc	14 308 28 is_stmt 1     # rhs.c:308:28
	movsd	%xmm0, rsd+169032(%rcx,%rax)
	.loc	14 313 30               # rhs.c:313:30
	movsd	rsd+169032(%r11,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	14 315 28               # rhs.c:315:28
	mulsd	%xmm7, %xmm4
	.loc	14 315 22 is_stmt 0     # rhs.c:315:22
	subsd	%xmm4, %xmm3
	.loc	14 316 28 is_stmt 1     # rhs.c:316:28
	mulsd	%xmm1, %xmm2
	.loc	14 316 22 is_stmt 0     # rhs.c:316:22
	addsd	%xmm3, %xmm2
	.loc	14 314 18 is_stmt 1     # rhs.c:314:18
	mulsd	%xmm9, %xmm2
	.loc	14 314 11 is_stmt 0     # rhs.c:314:11
	subsd	%xmm2, %xmm0
	.loc	14 313 28 is_stmt 1     # rhs.c:313:28
	movsd	%xmm0, rsd+169032(%r11,%rax)
.Ltmp663:
	.loc	14 306 5 discriminator 1 # rhs.c:306:5
	incq	%rbx
	.loc	14 306 21 is_stmt 0 discriminator 1 # rhs.c:306:21
	addq	$40, %rax
	cmpq	%r12, %rbx
	.loc	14 306 5 discriminator 1 # rhs.c:306:5
	jl	.LBB9_47
.Ltmp664:
.LBB9_48:                               # %for.inc1838
                                        #   in Loop: Header=BB9_33 Depth=1
	movq	112(%rsp), %rax         # 8-byte Reload
	movq	%rax, %rdx
	.loc	14 198 3 is_stmt 1 discriminator 1 # rhs.c:198:3
	incq	%rdx
	movq	%rdx, 112(%rsp)         # 8-byte Spill
	addq	$33800, %r13            # imm = 0x8408
	movq	256(%rsp), %rbx         # 8-byte Reload
	addq	$169000, %rbx           # imm = 0x29428
	addq	$33800, %r15            # imm = 0x8408
	movq	16(%rsp), %rax          # 8-byte Reload
	addq	$169000, %rax           # imm = 0x29428
	addq	$169000, %r10           # imm = 0x29428
	addq	$169000, %r8            # imm = 0x29428
	addq	$169000, %rdi           # imm = 0x29428
	.loc	14 198 17 is_stmt 0 discriminator 1 # rhs.c:198:17
	cmpq	416(%rsp), %rdx         # 8-byte Folded Reload
	jl	.LBB9_33
.Ltmp665:
.LBB9_49:                               # %for.end1840
	.loc	14 321 7 is_stmt 1      # rhs.c:321:7
	cmpl	$0, timeron(%rip)
	je	.LBB9_52
# BB#50:                                # %if.end1843
	.loc	14 321 16 is_stmt 0 discriminator 1 # rhs.c:321:16
	movl	$3, %edi
	callq	timer_stop
.Ltmp666:
	.loc	14 323 7 is_stmt 1      # rhs.c:323:7
	cmpl	$0, timeron(%rip)
	je	.LBB9_52
# BB#51:                                # %if.then1845
	.loc	14 323 16 is_stmt 0 discriminator 1 # rhs.c:323:16
	movl	$4, %edi
	callq	timer_start
.Ltmp667:
.LBB9_52:                               # %if.end1846
	.loc	14 327 3 is_stmt 1 discriminator 1 # rhs.c:327:3
	movslq	jst(%rip), %rbp
	movslq	jend(%rip), %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	cmpl	%eax, %ebp
	jge	.LBB9_83
# BB#53:                                # %for.body1849.lr.ph
	movslq	nz(%rip), %rdx
.Ltmp668:
	.loc	14 349 26 discriminator 1 # rhs.c:349:26
	leaq	-1(%rdx), %rsi
.Ltmp669:
	.loc	14 414 13               # rhs.c:414:13
	movsd	dssp(%rip), %xmm3       # xmm3 = mem[0],zero
.Ltmp670:
	.loc	14 440 37               # rhs.c:440:37
	movapd	%xmm3, 80(%rsp)         # 16-byte Spill
	imulq	$169000, %rdx, %r10     # imm = 0x29428
	leaq	(%rdx,%rdx,2), %rax
	shlq	$4, %rax
.Ltmp671:
	.loc	14 384 19               # rhs.c:384:19
	movsd	tz1(%rip), %xmm14       # xmm14 = mem[0],zero
	.loc	14 388 13               # rhs.c:388:13
	movsd	tz3(%rip), %xmm9        # xmm9 = mem[0],zero
	movsd	.LCPI9_3(%rip), %xmm1   # xmm1 = mem[0],zero
	.loc	14 388 17 is_stmt 0     # rhs.c:388:17
	mulsd	%xmm9, %xmm1
	.loc	14 384 17 is_stmt 1     # rhs.c:384:17
	movapd	%xmm1, 240(%rsp)        # 16-byte Spill
	movsd	dz1(%rip), %xmm2        # xmm2 = mem[0],zero
	movhpd	dz2(%rip), %xmm2        # xmm2 = xmm2[0],mem[0]
	movapd	%xmm14, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm0, %xmm2
	.loc	14 394 17               # rhs.c:394:17
	movapd	%xmm2, 368(%rsp)        # 16-byte Spill
	movsd	dz3(%rip), %xmm2        # xmm2 = mem[0],zero
	movhpd	dz4(%rip), %xmm2        # xmm2 = xmm2[0],mem[0]
	mulpd	%xmm0, %xmm2
	.loc	14 404 17               # rhs.c:404:17
	movapd	%xmm2, 352(%rsp)        # 16-byte Spill
	mulsd	dz5(%rip), %xmm14
	movapd	%xmm14, 160(%rsp)       # 16-byte Spill
	movsd	.LCPI9_4(%rip), %xmm10  # xmm10 = mem[0],zero
.Ltmp672:
	.loc	14 373 32               # rhs.c:373:32
	mulsd	%xmm9, %xmm10
	movapd	%xmm10, 304(%rsp)       # 16-byte Spill
	movsd	.LCPI9_5(%rip), %xmm13  # xmm13 = mem[0],zero
	.loc	14 375 11               # rhs.c:375:11
	mulsd	%xmm9, %xmm13
	movapd	%xmm13, 288(%rsp)       # 16-byte Spill
	movsd	.LCPI9_6(%rip), %xmm15  # xmm15 = mem[0],zero
	.loc	14 378 11               # rhs.c:378:11
	mulsd	%xmm9, %xmm15
	movapd	%xmm15, 272(%rsp)       # 16-byte Spill
	movsd	.LCPI9_7(%rip), %xmm2   # xmm2 = mem[0],zero
	.loc	14 379 21               # rhs.c:379:21
	mulsd	%xmm9, %xmm2
.Ltmp673:
	.loc	14 352 15               # rhs.c:352:15
	movapd	%xmm2, 256(%rsp)        # 16-byte Spill
	movsd	tz2(%rip), %xmm8        # xmm8 = mem[0],zero
.Ltmp674:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	movapd	%xmm8, 416(%rsp)        # 16-byte Spill
	movslq	ist(%rip), %rdi
.Ltmp675:
	.loc	14 414 18               # rhs.c:414:18
	movq	%rdi, 104(%rsp)         # 8-byte Spill
	movapd	%xmm3, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp676:
	.loc	14 352 19               # rhs.c:352:19
	movaps	%xmm0, 400(%rsp)        # 16-byte Spill
	movapd	%xmm8, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
.Ltmp677:
	.loc	14 357 15               # rhs.c:357:15
	movaps	%xmm6, 384(%rsp)        # 16-byte Spill
	movlhps	%xmm9, %xmm9            # xmm9 = xmm9[0,0]
	movaps	%xmm9, 128(%rsp)        # 16-byte Spill
	movq	%rsi, %rcx
	andq	$-2, %rcx
	movq	%rcx, 56(%rsp)          # 8-byte Spill
	movq	%rsi, %rcx
	orq	$1, %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	movapd	%xmm10, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 320(%rsp)        # 16-byte Spill
	movapd	%xmm13, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 464(%rsp)        # 16-byte Spill
	movapd	%xmm15, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 448(%rsp)        # 16-byte Spill
	movapd	%xmm2, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp678:
	.loc	14 393 27               # rhs.c:393:27
	movaps	%xmm0, 432(%rsp)        # 16-byte Spill
	movapd	%xmm1, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
.Ltmp679:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	movaps	%xmm0, 496(%rsp)        # 16-byte Spill
	movq	%rbp, %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	imulq	$520, %rcx, %r11        # imm = 0x208
	leaq	(,%rdi,8), %rbp
	imulq	$2600, %rcx, %rbx       # imm = 0xA28
	leaq	(%rbp,%rbp,4), %rbp
	leaq	rsd+169032(%rbx,%rbp), %rcx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	leaq	544(%rsp), %rcx
	leaq	-240(%rax,%rcx), %r8
	leaq	-192(%rax,%rcx), %r9
	leaq	-144(%rax,%rcx), %r14
	leaq	-96(%rax,%rcx), %r12
	leaq	rsd+507032(%rbx,%rbp), %r15
	addq	%rbx, %r10
	leaq	rsd-507000(%r10,%rbp), %r13
	leaq	rsd-338000(%r10,%rbp), %rbp
	leaq	(%r11,%rdi,8), %rcx
	leaq	qs(%r11,%rdi,8), %rbx
.Ltmp680:
	.loc	14 440 37               # rhs.c:440:37
	leaq	(%rdx,%rdx,4), %rax
.Ltmp681:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	leaq	3496(%rsp,%rax,8), %r10
	leaq	3536(%rsp,%rax,8), %r11
	movq	48(%rsp), %rdi          # 8-byte Reload
.Ltmp682:
	.loc	14 424 26 discriminator 1 # rhs.c:424:26
	leaq	-3(%rdx), %rax
.Ltmp683:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	movq	%rax, 96(%rsp)          # 8-byte Spill
	movslq	iend(%rip), %rax
	movq	%rax, 8(%rsp)           # 8-byte Spill
.Ltmp684:
	.loc	14 345 44               # rhs.c:345:44
	movsd	.LCPI9_8(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI9_9(%rip), %xmm5   # xmm5 = mem[0],zero
.Ltmp685:
	.p2align	4, 0x90
.LBB9_54:                               # %for.body1849
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB9_55 Depth 2
                                        #       Child Loop BB9_56 Depth 3
                                        #       Child Loop BB9_88 Depth 3
                                        #       Child Loop BB9_89 Depth 3
                                        #       Child Loop BB9_69 Depth 3
                                        #       Child Loop BB9_72 Depth 3
                                        #       Child Loop BB9_75 Depth 3
                                        #       Child Loop BB9_78 Depth 3
                                        #       Child Loop BB9_80 Depth 3
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movq	%rbx, 520(%rsp)         # 8-byte Spill
	movq	%rbp, 64(%rsp)          # 8-byte Spill
	movq	%r13, 528(%rsp)         # 8-byte Spill
	movq	%r15, 536(%rsp)         # 8-byte Spill
	movq	%rdi, 48(%rsp)          # 8-byte Spill
	.loc	14 328 5 discriminator 1 # rhs.c:328:5
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	%r13, %rcx
	movq	104(%rsp), %r13         # 8-byte Reload
	cmpl	%eax, %r13d
	movq	%rbp, 192(%rsp)         # 8-byte Spill
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	movq	%r15, 32(%rsp)          # 8-byte Spill
	movq	%rdi, 112(%rsp)         # 8-byte Spill
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	8(%rsp), %r13           # 8-byte Reload
	movq	104(%rsp), %rax         # 8-byte Reload
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movq	96(%rsp), %r15          # 8-byte Reload
	jge	.LBB9_82
.Ltmp686:
	.p2align	4, 0x90
.LBB9_55:                               # %for.cond1853.preheader
                                        #   Parent Loop BB9_54 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB9_56 Depth 3
                                        #       Child Loop BB9_88 Depth 3
                                        #       Child Loop BB9_89 Depth 3
                                        #       Child Loop BB9_69 Depth 3
                                        #       Child Loop BB9_72 Depth 3
                                        #       Child Loop BB9_75 Depth 3
                                        #       Child Loop BB9_78 Depth 3
                                        #       Child Loop BB9_80 Depth 3
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	testl	%edx, %edx
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	leaq	584(%rsp), %rdi
	movl	$0, %ebx
	jle	.LBB9_58
	.p2align	4, 0x90
.LBB9_56:                               # %for.body1855
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp687:
	.loc	14 330 22               # rhs.c:330:22
	movups	u(%rcx,%rcx,4), %xmm0
	.loc	14 330 20 is_stmt 0     # rhs.c:330:20
	movaps	%xmm0, -40(%rdi)
	.loc	14 332 22 is_stmt 1     # rhs.c:332:22
	movups	u+16(%rcx,%rcx,4), %xmm0
	.loc	14 332 20 is_stmt 0     # rhs.c:332:20
	movaps	%xmm0, -24(%rdi)
	.loc	14 334 22 is_stmt 1     # rhs.c:334:22
	movq	u+32(%rcx,%rcx,4), %rbp
	.loc	14 334 20 is_stmt 0     # rhs.c:334:20
	movq	%rbp, -8(%rdi)
	.loc	14 335 22 is_stmt 1     # rhs.c:335:22
	movq	rho_i(%rcx), %rbp
	.loc	14 335 20 is_stmt 0     # rhs.c:335:20
	movq	%rbp, (%rdi)
.Ltmp688:
	.loc	14 329 7 is_stmt 1 discriminator 1 # rhs.c:329:7
	incq	%rbx
	.loc	14 329 21 is_stmt 0 discriminator 1 # rhs.c:329:21
	addq	$48, %rdi
	addq	$33800, %rcx            # imm = 0x8408
	cmpq	%rdx, %rbx
	.loc	14 329 7 discriminator 1 # rhs.c:329:7
	jl	.LBB9_56
.Ltmp689:
# BB#57:                                # %for.cond1918.preheader
                                        #   in Loop: Header=BB9_55 Depth=2
	testl	%edx, %edx
	movq	40(%rsp), %rcx          # 8-byte Reload
	.loc	14 327 3 is_stmt 1 discriminator 1 # rhs.c:327:3
	leaq	584(%rsp), %rdi
	movl	$flux+32, %ebx
	movl	$0, %ebp
	jle	.LBB9_58
	.p2align	4, 0x90
.LBB9_88:                               # %for.body1920
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp690:
	.loc	14 338 22               # rhs.c:338:22
	movq	-16(%rdi), %rax
	.loc	14 338 20 is_stmt 0     # rhs.c:338:20
	movq	%rax, -32(%rbx)
	.loc	14 339 15 is_stmt 1     # rhs.c:339:15
	movd	%rax, %xmm0
	movsd	(%rdi), %xmm1           # xmm1 = mem[0],zero
	.loc	14 339 26 is_stmt 0     # rhs.c:339:26
	mulsd	%xmm0, %xmm1
.Ltmp691:
	#DEBUG_VALUE: rhs:u41 <- %XMM1
	.loc	14 341 13 is_stmt 1     # rhs.c:341:13
	movsd	(%rcx), %xmm2           # xmm2 = mem[0],zero
.Ltmp692:
	#DEBUG_VALUE: rhs:q <- %XMM2
	.loc	14 345 47               # rhs.c:345:47
	movsd	-8(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	14 345 57 is_stmt 0     # rhs.c:345:57
	movapd	%xmm3, %xmm4
	subsd	%xmm2, %xmm4
	.loc	14 346 27 is_stmt 1     # rhs.c:346:27
	mulsd	%xmm5, %xmm3
	.loc	14 346 45 is_stmt 0     # rhs.c:346:45
	mulsd	%xmm7, %xmm2
.Ltmp693:
	.loc	14 346 40               # rhs.c:346:40
	subsd	%xmm2, %xmm3
	.loc	14 343 22 is_stmt 1     # rhs.c:343:22
	movupd	-32(%rdi), %xmm2
	.loc	14 345 33               # rhs.c:345:33
	mulsd	%xmm1, %xmm0
	.loc	14 346 51               # rhs.c:346:51
	mulsd	%xmm1, %xmm3
	.loc	14 343 33               # rhs.c:343:33
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
.Ltmp694:
	mulpd	%xmm2, %xmm1
	.loc	14 343 20 is_stmt 0     # rhs.c:343:20
	movupd	%xmm1, -24(%rbx)
	.loc	14 345 44 is_stmt 1     # rhs.c:345:44
	mulsd	%xmm7, %xmm4
	.loc	14 345 39 is_stmt 0     # rhs.c:345:39
	addsd	%xmm0, %xmm4
	.loc	14 345 20               # rhs.c:345:20
	movsd	%xmm4, -8(%rbx)
	.loc	14 346 20 is_stmt 1     # rhs.c:346:20
	movsd	%xmm3, (%rbx)
.Ltmp695:
	.loc	14 337 7 discriminator 1 # rhs.c:337:7
	incq	%rbp
	.loc	14 337 21 is_stmt 0 discriminator 1 # rhs.c:337:21
	addq	$40, %rbx
	addq	$48, %rdi
	addq	$33800, %rcx            # imm = 0x8408
	cmpq	%rdx, %rbp
	jl	.LBB9_88
.Ltmp696:
.LBB9_58:                               # %for.cond1980.preheader
                                        #   in Loop: Header=BB9_55 Depth=2
	cmpl	$1, %esi
	movl	$72, %ecx
	movq	112(%rsp), %rdi         # 8-byte Reload
	movl	$1, %ebx
	movapd	256(%rsp), %xmm7        # 16-byte Reload
	jle	.LBB9_59
	.p2align	4, 0x90
.LBB9_89:                               # %for.cond1984.preheader
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp697:
	.loc	14 349 7 is_stmt 1 discriminator 1 # rhs.c:349:7
	incq	%rbx
.Ltmp698:
	.loc	14 351 25               # rhs.c:351:25
	movupd	-32(%rdi), %xmm0
	.loc	14 352 23               # rhs.c:352:23
	movupd	flux+8(%rcx), %xmm1
	.loc	14 352 38 is_stmt 0     # rhs.c:352:38
	movupd	flux-72(%rcx), %xmm2
	.loc	14 352 36               # rhs.c:352:36
	subpd	%xmm2, %xmm1
	.loc	14 352 19               # rhs.c:352:19
	mulpd	%xmm6, %xmm1
	.loc	14 352 13               # rhs.c:352:13
	subpd	%xmm1, %xmm0
	.loc	14 351 22 is_stmt 1     # rhs.c:351:22
	movupd	%xmm0, 3584(%rsp,%rcx)
	.loc	14 351 25 is_stmt 0     # rhs.c:351:25
	movupd	-16(%rdi), %xmm0
	.loc	14 352 23 is_stmt 1     # rhs.c:352:23
	movupd	flux+24(%rcx), %xmm1
	.loc	14 352 38 is_stmt 0     # rhs.c:352:38
	movupd	flux-56(%rcx), %xmm2
	.loc	14 352 36               # rhs.c:352:36
	subpd	%xmm2, %xmm1
	.loc	14 352 19               # rhs.c:352:19
	mulpd	%xmm6, %xmm1
	.loc	14 352 13               # rhs.c:352:13
	subpd	%xmm1, %xmm0
	.loc	14 351 22 is_stmt 1     # rhs.c:351:22
	movupd	%xmm0, 3600(%rsp,%rcx)
	.loc	14 351 25 is_stmt 0     # rhs.c:351:25
	movsd	(%rdi), %xmm0           # xmm0 = mem[0],zero
	.loc	14 352 23 is_stmt 1     # rhs.c:352:23
	movsd	flux+40(%rcx), %xmm1    # xmm1 = mem[0],zero
	.loc	14 352 36 is_stmt 0     # rhs.c:352:36
	subsd	flux-40(%rcx), %xmm1
	.loc	14 352 19               # rhs.c:352:19
	mulsd	%xmm8, %xmm1
	.loc	14 352 13               # rhs.c:352:13
	subsd	%xmm1, %xmm0
	.loc	14 351 22 is_stmt 1     # rhs.c:351:22
	movsd	%xmm0, 3616(%rsp,%rcx)
.Ltmp699:
	.loc	14 349 21 discriminator 1 # rhs.c:349:21
	addq	$169000, %rdi           # imm = 0x29428
	addq	$40, %rcx
	cmpq	%rsi, %rbx
	jl	.LBB9_89
.Ltmp700:
.LBB9_59:                               # %for.cond2018.preheader
                                        #   in Loop: Header=BB9_55 Depth=2
	.loc	14 356 7 discriminator 1 # rhs.c:356:7
	cmpl	$2, %edx
	jl	.LBB9_73
# BB#60:                                # %for.body2020.preheader
                                        #   in Loop: Header=BB9_55 Depth=2
	cmpq	$2, %rsi
.Ltmp701:
	.loc	14 364 15               # rhs.c:364:15
	movsd	584(%rsp), %xmm8        # xmm8 = mem[0],zero
	.loc	14 366 24               # rhs.c:366:24
	movups	552(%rsp), %xmm3
	.loc	14 368 24               # rhs.c:368:24
	movsd	568(%rsp), %xmm11       # xmm11 = mem[0],zero
	.loc	14 369 24               # rhs.c:369:24
	movsd	576(%rsp), %xmm12       # xmm12 = mem[0],zero
	jb	.LBB9_61
# BB#67:                                # %min.iters.checked
                                        #   in Loop: Header=BB9_55 Depth=2
	movq	56(%rsp), %rax          # 8-byte Reload
	testq	%rax, %rax
	je	.LBB9_61
# BB#68:                                # %vector.ph
                                        #   in Loop: Header=BB9_55 Depth=2
	movq	%r15, %rbx
	.loc	14 357 15               # rhs.c:357:15
	movlhps	%xmm12, %xmm12          # xmm12 = xmm12[0,0]
	movlhps	%xmm11, %xmm11          # xmm11 = xmm11[0,0]
	movaps	%xmm3, %xmm5
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	movlhps	%xmm8, %xmm8            # xmm8 = xmm8[0,0]
	movq	%rax, %rcx
	movq	%rcx, %r13
	movl	$flux+112, %ebp
.Ltmp702:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	leaq	680(%rsp), %r15
	movaps	%xmm12, %xmm10
	movaps	%xmm11, %xmm6
	movaps	%xmm8, %xmm13
	.p2align	4, 0x90
.LBB9_69:                               # %vector.body
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp703:
	.loc	14 357 15               # rhs.c:357:15
	movsd	(%r15), %xmm8           # xmm8 = mem[0],zero
	.loc	14 359 22               # rhs.c:359:22
	movsd	-48(%r15), %xmm14       # xmm14 = mem[0],zero
	.loc	14 357 15               # rhs.c:357:15
	unpcklpd	%xmm8, %xmm14   # xmm14 = xmm14[0],xmm8[0]
	.loc	14 359 22               # rhs.c:359:22
	shufpd	$1, %xmm14, %xmm13      # xmm13 = xmm13[1],xmm14[0]
	movupd	-32(%r15), %xmm2
	movsd	-80(%r15), %xmm0        # xmm0 = mem[0],zero
	.loc	14 361 20               # rhs.c:361:20
	movsd	-64(%r15), %xmm1        # xmm1 = mem[0],zero
	.loc	14 359 22               # rhs.c:359:22
	unpcklpd	%xmm2, %xmm0    # xmm0 = xmm0[0],xmm2[0]
	.loc	14 359 20 is_stmt 0     # rhs.c:359:20
	movapd	%xmm0, 480(%rsp)        # 16-byte Spill
	shufpd	$1, %xmm0, %xmm5        # xmm5 = xmm5[1],xmm0[0]
	.loc	14 360 20 is_stmt 1     # rhs.c:360:20
	movapd	%xmm14, %xmm4
	.loc	14 359 20               # rhs.c:359:20
	movapd	%xmm14, %xmm9
	mulpd	%xmm0, %xmm9
	.loc	14 360 22               # rhs.c:360:22
	movapd	%xmm2, %xmm0
	movlpd	-72(%r15), %xmm0        # xmm0 = mem[0],xmm0[1]
	.loc	14 360 20 is_stmt 0     # rhs.c:360:20
	movapd	%xmm0, 144(%rsp)        # 16-byte Spill
	shufpd	$1, %xmm0, %xmm3        # xmm3 = xmm3[1],xmm0[0]
	mulpd	%xmm0, %xmm4
	.loc	14 361 22 is_stmt 1     # rhs.c:361:22
	movsd	-16(%r15), %xmm11       # xmm11 = mem[0],zero
	unpcklpd	%xmm11, %xmm1   # xmm1 = xmm1[0],xmm11[0]
	.loc	14 361 20 is_stmt 0     # rhs.c:361:20
	movapd	%xmm1, 336(%rsp)        # 16-byte Spill
	shufpd	$1, %xmm1, %xmm6        # xmm6 = xmm6[1],xmm1[0]
	.loc	14 362 22 is_stmt 1     # rhs.c:362:22
	movsd	-8(%r15), %xmm12        # xmm12 = mem[0],zero
	.loc	14 362 20 is_stmt 0     # rhs.c:362:20
	movsd	-56(%r15), %xmm15       # xmm15 = mem[0],zero
	.loc	14 362 22               # rhs.c:362:22
	unpcklpd	%xmm12, %xmm15  # xmm15 = xmm15[0],xmm12[0]
	.loc	14 362 20               # rhs.c:362:20
	shufpd	$1, %xmm15, %xmm10      # xmm10 = xmm10[1],xmm15[0]
	.loc	14 366 22 is_stmt 1     # rhs.c:366:22
	mulpd	%xmm13, %xmm5
	.loc	14 367 22               # rhs.c:367:22
	mulpd	%xmm13, %xmm3
	.loc	14 368 22               # rhs.c:368:22
	mulpd	%xmm13, %xmm6
	.loc	14 369 22               # rhs.c:369:22
	mulpd	%xmm13, %xmm10
	.loc	14 371 35               # rhs.c:371:35
	movapd	%xmm9, %xmm1
	subpd	%xmm5, %xmm1
	movapd	128(%rsp), %xmm0        # 16-byte Reload
	.loc	14 371 26 is_stmt 0     # rhs.c:371:26
	mulpd	%xmm0, %xmm1
	.loc	14 372 35 is_stmt 1     # rhs.c:372:35
	movapd	%xmm4, %xmm7
	subpd	%xmm3, %xmm7
	.loc	14 372 26 is_stmt 0     # rhs.c:372:26
	mulpd	%xmm0, %xmm7
	.loc	14 371 20 is_stmt 1     # rhs.c:371:20
	movhpd	%xmm1, -24(%rbp)
	unpcklpd	%xmm7, %xmm1    # xmm1 = xmm1[0],xmm7[0]
	movupd	%xmm1, -64(%rbp)
	.loc	14 372 20               # rhs.c:372:20
	movhpd	%xmm7, -16(%rbp)
	.loc	14 375 27               # rhs.c:375:27
	mulpd	%xmm9, %xmm9
	.loc	14 375 43 is_stmt 0     # rhs.c:375:43
	mulpd	%xmm4, %xmm4
	.loc	14 375 37               # rhs.c:375:37
	addpd	%xmm9, %xmm4
	.loc	14 361 20 is_stmt 1     # rhs.c:361:20
	movapd	%xmm14, %xmm1
	movapd	336(%rsp), %xmm0        # 16-byte Reload
	mulpd	%xmm0, %xmm1
	.loc	14 376 29               # rhs.c:376:29
	mulpd	%xmm5, %xmm5
	.loc	14 376 45 is_stmt 0     # rhs.c:376:45
	mulpd	%xmm3, %xmm3
	.loc	14 376 37               # rhs.c:376:37
	addpd	%xmm5, %xmm3
	.loc	14 373 45 is_stmt 1     # rhs.c:373:45
	movapd	%xmm1, %xmm5
	subpd	%xmm6, %xmm5
	.loc	14 375 59               # rhs.c:375:59
	mulpd	%xmm1, %xmm1
	.loc	14 375 53 is_stmt 0     # rhs.c:375:53
	addpd	%xmm1, %xmm4
	.loc	14 376 61 is_stmt 1     # rhs.c:376:61
	mulpd	%xmm6, %xmm6
	.loc	14 376 53 is_stmt 0     # rhs.c:376:53
	addpd	%xmm6, %xmm3
	.loc	14 376 19               # rhs.c:376:19
	subpd	%xmm3, %xmm4
	.loc	14 378 31 is_stmt 1     # rhs.c:378:31
	subpd	%xmm6, %xmm1
	.loc	14 375 17               # rhs.c:375:17
	mulpd	464(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	14 378 17               # rhs.c:378:17
	mulpd	448(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	14 377 11               # rhs.c:377:11
	addpd	%xmm4, %xmm1
	.loc	14 362 20               # rhs.c:362:20
	movapd	%xmm14, %xmm3
	mulpd	%xmm15, %xmm3
	.loc	14 379 36               # rhs.c:379:36
	subpd	%xmm10, %xmm3
	.loc	14 379 27 is_stmt 0     # rhs.c:379:27
	mulpd	432(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	14 379 11               # rhs.c:379:11
	addpd	%xmm1, %xmm3
	.loc	14 373 38 is_stmt 1     # rhs.c:373:38
	mulpd	320(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	14 373 20 is_stmt 0     # rhs.c:373:20
	movhpd	%xmm5, -8(%rbp)
	unpcklpd	%xmm3, %xmm5    # xmm5 = xmm5[0],xmm3[0]
	movupd	%xmm5, -48(%rbp)
	.loc	14 374 20 is_stmt 1     # rhs.c:374:20
	movhpd	%xmm3, (%rbp)
	movapd	%xmm14, %xmm13
	.loc	14 357 15               # rhs.c:357:15
	addq	$96, %r15
	addq	$80, %rbp
	addq	$-2, %r13
	movapd	%xmm15, %xmm10
	movapd	%xmm0, %xmm6
	movaps	144(%rsp), %xmm3        # 16-byte Reload
	movapd	480(%rsp), %xmm5        # 16-byte Reload
	jne	.LBB9_69
# BB#70:                                # %middle.block
                                        #   in Loop: Header=BB9_55 Depth=2
	cmpq	%rcx, %rsi
	movq	232(%rsp), %rdi         # 8-byte Reload
	movapd	160(%rsp), %xmm14       # 16-byte Reload
	movaps	128(%rsp), %xmm9        # 16-byte Reload
	movapd	304(%rsp), %xmm10       # 16-byte Reload
	movapd	288(%rsp), %xmm13       # 16-byte Reload
	movapd	272(%rsp), %xmm15       # 16-byte Reload
	movapd	256(%rsp), %xmm7        # 16-byte Reload
	movq	%rbx, %r15
	movq	8(%rsp), %r13           # 8-byte Reload
	je	.LBB9_73
	jmp	.LBB9_71
	.p2align	4, 0x90
.LBB9_61:                               #   in Loop: Header=BB9_55 Depth=2
	movl	$1, %edi
	movaps	%xmm3, %xmm2
.LBB9_71:                               # %scalar.ph
                                        #   in Loop: Header=BB9_55 Depth=2
	leaq	(%rdi,%rdi,2), %rcx
	shlq	$4, %rcx
.Ltmp704:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	leaq	584(%rsp), %rax
.Ltmp705:
	.loc	14 357 15               # rhs.c:357:15
	addq	%rax, %rcx
	leaq	(%rdi,%rdi,4), %rax
	leaq	flux+32(,%rax,8), %rbx
	.p2align	4, 0x90
.LBB9_72:                               # %for.body2020
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movsd	(%rcx), %xmm0           # xmm0 = mem[0],zero
.Ltmp706:
	#DEBUG_VALUE: rhs:tmp <- %XMM0
	.loc	14 366 22               # rhs.c:366:22
	movapd	%xmm8, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	mulpd	%xmm2, %xmm6
	.loc	14 359 22               # rhs.c:359:22
	movupd	-32(%rcx), %xmm2
	.loc	14 361 20               # rhs.c:361:20
	movapd	%xmm0, %xmm4
	.loc	14 359 20               # rhs.c:359:20
	movapd	%xmm0, %xmm5
	movlhps	%xmm5, %xmm5            # xmm5 = xmm5[0,0]
	mulpd	%xmm2, %xmm5
	.loc	14 361 22               # rhs.c:361:22
	movsd	-16(%rcx), %xmm3        # xmm3 = mem[0],zero
	.loc	14 361 20 is_stmt 0     # rhs.c:361:20
	mulsd	%xmm3, %xmm4
.Ltmp707:
	#DEBUG_VALUE: rhs:u41k <- %XMM4
	.loc	14 368 22 is_stmt 1     # rhs.c:368:22
	mulsd	%xmm8, %xmm11
.Ltmp708:
	#DEBUG_VALUE: rhs:u41km1 <- %XMM11
	.loc	14 369 22               # rhs.c:369:22
	mulsd	%xmm8, %xmm12
.Ltmp709:
	#DEBUG_VALUE: rhs:u51km1 <- %XMM12
	.loc	14 371 35               # rhs.c:371:35
	movapd	%xmm5, %xmm1
	subpd	%xmm6, %xmm1
	.loc	14 371 26 is_stmt 0     # rhs.c:371:26
	mulpd	%xmm9, %xmm1
	.loc	14 371 20               # rhs.c:371:20
	movupd	%xmm1, -24(%rbx)
	.loc	14 373 45 is_stmt 1     # rhs.c:373:45
	movapd	%xmm4, %xmm1
	subsd	%xmm11, %xmm1
	.loc	14 373 38 is_stmt 0     # rhs.c:373:38
	mulsd	%xmm10, %xmm1
	.loc	14 373 20               # rhs.c:373:20
	movsd	%xmm1, -8(%rbx)
	.loc	14 375 27 is_stmt 1     # rhs.c:375:27
	movapd	%xmm5, %xmm1
	mulsd	%xmm1, %xmm1
	.loc	14 375 43 is_stmt 0     # rhs.c:375:43
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
	mulsd	%xmm5, %xmm5
	.loc	14 375 37               # rhs.c:375:37
	addsd	%xmm1, %xmm5
	.loc	14 376 29 is_stmt 1     # rhs.c:376:29
	movapd	%xmm6, %xmm1
	mulsd	%xmm1, %xmm1
	.loc	14 376 45 is_stmt 0     # rhs.c:376:45
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	mulsd	%xmm6, %xmm6
	.loc	14 376 37               # rhs.c:376:37
	addsd	%xmm1, %xmm6
	.loc	14 375 59 is_stmt 1     # rhs.c:375:59
	mulsd	%xmm4, %xmm4
.Ltmp710:
	.loc	14 375 53 is_stmt 0     # rhs.c:375:53
	addsd	%xmm4, %xmm5
	.loc	14 376 61 is_stmt 1     # rhs.c:376:61
	mulsd	%xmm11, %xmm11
.Ltmp711:
	.loc	14 376 53 is_stmt 0     # rhs.c:376:53
	addsd	%xmm11, %xmm6
	.loc	14 376 19               # rhs.c:376:19
	subsd	%xmm6, %xmm5
	.loc	14 378 31 is_stmt 1     # rhs.c:378:31
	subsd	%xmm11, %xmm4
	.loc	14 362 20               # rhs.c:362:20
	movapd	%xmm0, %xmm1
	.loc	14 375 17               # rhs.c:375:17
	mulsd	%xmm13, %xmm5
	.loc	14 378 17               # rhs.c:378:17
	mulsd	%xmm15, %xmm4
	.loc	14 377 11               # rhs.c:377:11
	addsd	%xmm5, %xmm4
	.loc	14 362 22               # rhs.c:362:22
	movsd	-8(%rcx), %xmm5         # xmm5 = mem[0],zero
	.loc	14 362 20 is_stmt 0     # rhs.c:362:20
	mulsd	%xmm5, %xmm1
.Ltmp712:
	#DEBUG_VALUE: rhs:u51k <- %XMM1
	.loc	14 379 36 is_stmt 1     # rhs.c:379:36
	subsd	%xmm12, %xmm1
.Ltmp713:
	.loc	14 379 27 is_stmt 0     # rhs.c:379:27
	mulsd	%xmm7, %xmm1
	.loc	14 379 11               # rhs.c:379:11
	addsd	%xmm4, %xmm1
	.loc	14 374 20 is_stmt 1     # rhs.c:374:20
	movsd	%xmm1, (%rbx)
	.loc	14 364 15               # rhs.c:364:15
	movapd	%xmm0, %xmm8
.Ltmp714:
	#DEBUG_VALUE: rhs:tmp <- %XMM8
	.loc	14 356 7 discriminator 1 # rhs.c:356:7
	incq	%rdi
	.loc	14 356 21 is_stmt 0 discriminator 1 # rhs.c:356:21
	addq	$48, %rcx
	addq	$40, %rbx
	cmpq	%rdx, %rdi
.Ltmp715:
	.loc	14 369 24 is_stmt 1     # rhs.c:369:24
	movapd	%xmm5, %xmm12
.Ltmp716:
	.loc	14 368 24               # rhs.c:368:24
	movapd	%xmm3, %xmm11
	jl	.LBB9_72
.Ltmp717:
.LBB9_73:                               # %for.cond2109.preheader
                                        #   in Loop: Header=BB9_55 Depth=2
	.loc	14 382 7 discriminator 1 # rhs.c:382:7
	cmpl	$2, %esi
	movapd	240(%rsp), %xmm15       # 16-byte Reload
	movq	64(%rsp), %rbp          # 8-byte Reload
	jl	.LBB9_76
# BB#74:                                # %for.body2112.preheader
                                        #   in Loop: Header=BB9_55 Depth=2
.Ltmp718:
	.loc	14 388 46               # rhs.c:388:46
	movsd	flux+48(%rip), %xmm2    # xmm2 = mem[0],zero
	.loc	14 384 35               # rhs.c:384:35
	movapd	544(%rsp), %xmm7
	.loc	14 394 35               # rhs.c:394:35
	movapd	560(%rsp), %xmm4
	.loc	14 385 35               # rhs.c:385:35
	movapd	592(%rsp), %xmm10
	.loc	14 393 46               # rhs.c:393:46
	movupd	flux+56(%rip), %xmm5
	.loc	14 395 35               # rhs.c:395:35
	movapd	608(%rsp), %xmm12
	.loc	14 403 46               # rhs.c:403:46
	movsd	flux+72(%rip), %xmm11   # xmm11 = mem[0],zero
	.loc	14 404 35               # rhs.c:404:35
	movsd	576(%rsp), %xmm3        # xmm3 = mem[0],zero
	.loc	14 405 35               # rhs.c:405:35
	movsd	624(%rsp), %xmm6        # xmm6 = mem[0],zero
.Ltmp719:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	leaq	672(%rsp), %rcx
.Ltmp720:
	.loc	14 405 35               # rhs.c:405:35
	movl	$72, %edi
	movl	$1, %ebx
	.p2align	4, 0x90
.LBB9_75:                               # %for.body2112
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movapd	%xmm6, %xmm8
	.loc	14 388 31               # rhs.c:388:31
	movsd	flux+16(%rdi), %xmm9    # xmm9 = mem[0],zero
	.loc	14 388 44 is_stmt 0     # rhs.c:388:44
	movapd	%xmm9, %xmm0
	subsd	%xmm2, %xmm0
	.loc	14 388 27               # rhs.c:388:27
	mulsd	%xmm15, %xmm0
	.loc	14 388 11               # rhs.c:388:11
	addsd	3592(%rsp,%rdi), %xmm0
	.loc	14 385 33 is_stmt 1     # rhs.c:385:33
	movapd	%xmm10, %xmm1
	addpd	%xmm1, %xmm1
	.loc	14 385 27 is_stmt 0     # rhs.c:385:27
	subpd	%xmm1, %xmm7
	.loc	14 384 11 is_stmt 1     # rhs.c:384:11
	movsd	3584(%rsp,%rdi), %xmm1  # xmm1 = mem[0],zero
	unpcklpd	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0]
	.loc	14 386 35               # rhs.c:386:35
	movapd	-32(%rcx), %xmm13
	.loc	14 386 27 is_stmt 0     # rhs.c:386:27
	addpd	%xmm13, %xmm7
	.loc	14 384 23 is_stmt 1     # rhs.c:384:23
	mulpd	368(%rsp), %xmm7        # 16-byte Folded Reload
	.loc	14 384 11 is_stmt 0     # rhs.c:384:11
	addpd	%xmm7, %xmm1
	.loc	14 383 20 is_stmt 1     # rhs.c:383:20
	movupd	%xmm1, 3584(%rsp,%rdi)
	.loc	14 393 31               # rhs.c:393:31
	movupd	flux+24(%rdi), %xmm0
	.loc	14 393 44 is_stmt 0     # rhs.c:393:44
	movapd	%xmm0, %xmm2
	subpd	%xmm5, %xmm2
	.loc	14 392 22 is_stmt 1     # rhs.c:392:22
	movupd	3600(%rsp,%rdi), %xmm1
	.loc	14 393 27               # rhs.c:393:27
	mulpd	496(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	14 393 11 is_stmt 0     # rhs.c:393:11
	addpd	%xmm1, %xmm2
	.loc	14 395 33 is_stmt 1     # rhs.c:395:33
	movapd	%xmm12, %xmm1
	addpd	%xmm1, %xmm1
	.loc	14 395 27 is_stmt 0     # rhs.c:395:27
	subpd	%xmm1, %xmm4
	.loc	14 396 35 is_stmt 1     # rhs.c:396:35
	movapd	-16(%rcx), %xmm1
	.loc	14 396 27 is_stmt 0     # rhs.c:396:27
	addpd	%xmm1, %xmm4
	.loc	14 394 23 is_stmt 1     # rhs.c:394:23
	mulpd	352(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	14 394 11 is_stmt 0     # rhs.c:394:11
	addpd	%xmm2, %xmm4
	.loc	14 392 20 is_stmt 1     # rhs.c:392:20
	movupd	%xmm4, 3600(%rsp,%rdi)
	.loc	14 403 31               # rhs.c:403:31
	movsd	flux+40(%rdi), %xmm2    # xmm2 = mem[0],zero
	.loc	14 403 44 is_stmt 0     # rhs.c:403:44
	movapd	%xmm2, %xmm4
	subsd	%xmm11, %xmm4
	.loc	14 403 27               # rhs.c:403:27
	mulsd	%xmm15, %xmm4
	.loc	14 403 11               # rhs.c:403:11
	addsd	3616(%rsp,%rdi), %xmm4
	.loc	14 405 33 is_stmt 1     # rhs.c:405:33
	movapd	%xmm8, %xmm5
	addsd	%xmm5, %xmm5
	.loc	14 405 27 is_stmt 0     # rhs.c:405:27
	subsd	%xmm5, %xmm3
	.loc	14 406 35 is_stmt 1     # rhs.c:406:35
	movsd	(%rcx), %xmm6           # xmm6 = mem[0],zero
	.loc	14 406 27 is_stmt 0     # rhs.c:406:27
	addsd	%xmm6, %xmm3
	.loc	14 404 23 is_stmt 1     # rhs.c:404:23
	mulsd	%xmm14, %xmm3
	.loc	14 404 11 is_stmt 0     # rhs.c:404:11
	addsd	%xmm4, %xmm3
	.loc	14 402 20 is_stmt 1     # rhs.c:402:20
	movsd	%xmm3, 3616(%rsp,%rdi)
.Ltmp721:
	.loc	14 382 7 discriminator 1 # rhs.c:382:7
	incq	%rbx
	.loc	14 382 21 is_stmt 0 discriminator 1 # rhs.c:382:21
	addq	$40, %rdi
	addq	$48, %rcx
	cmpq	%rsi, %rbx
.Ltmp722:
	.loc	14 404 35 is_stmt 1     # rhs.c:404:35
	movapd	%xmm8, %xmm3
	.loc	14 403 46               # rhs.c:403:46
	movapd	%xmm2, %xmm11
	.loc	14 388 46               # rhs.c:388:46
	movapd	%xmm9, %xmm2
	.loc	14 384 35               # rhs.c:384:35
	movapd	%xmm10, %xmm7
	.loc	14 385 35               # rhs.c:385:35
	movapd	%xmm13, %xmm10
	.loc	14 393 46               # rhs.c:393:46
	movapd	%xmm0, %xmm5
	.loc	14 394 35               # rhs.c:394:35
	movapd	%xmm12, %xmm4
	.loc	14 395 35               # rhs.c:395:35
	movapd	%xmm1, %xmm12
	jl	.LBB9_75
.Ltmp723:
.LBB9_76:                               # %for.cond2279.preheader
                                        #   in Loop: Header=BB9_55 Depth=2
	.loc	14 413 9                # rhs.c:413:9
	imulq	$2600, 16(%rsp), %rcx   # 8-byte Folded Reload
                                        # imm = 0xA28
	movq	208(%rsp), %rax         # 8-byte Reload
	leaq	(%rax,%rax,4), %rdi
	.loc	14 414 28               # rhs.c:414:28
	movapd	592(%rsp), %xmm1
	.loc	14 415 30               # rhs.c:415:30
	movapd	640(%rsp), %xmm0
	.loc	14 416 30               # rhs.c:416:30
	movapd	688(%rsp), %xmm2
	.loc	14 413 27               # rhs.c:413:27
	movupd	3656(%rsp), %xmm3
	.loc	14 414 28               # rhs.c:414:28
	movapd	%xmm1, %xmm4
	movapd	.LCPI9_15(%rip), %xmm6  # xmm6 = [5.000000e+00,5.000000e+00]
	mulpd	%xmm6, %xmm4
	.loc	14 415 28               # rhs.c:415:28
	movapd	%xmm0, %xmm5
	movapd	.LCPI9_13(%rip), %xmm13 # xmm13 = [4.000000e+00,4.000000e+00]
	mulpd	%xmm13, %xmm5
	.loc	14 415 22 is_stmt 0     # rhs.c:415:22
	subpd	%xmm5, %xmm4
	.loc	14 416 22 is_stmt 1     # rhs.c:416:22
	addpd	%xmm2, %xmm4
	movapd	400(%rsp), %xmm12       # 16-byte Reload
	.loc	14 414 18               # rhs.c:414:18
	mulpd	%xmm12, %xmm4
	.loc	14 414 11 is_stmt 0     # rhs.c:414:11
	subpd	%xmm4, %xmm3
	.loc	14 413 25 is_stmt 1     # rhs.c:413:25
	movupd	%xmm3, rsd+169000(%rcx,%rdi,8)
	.loc	14 417 27               # rhs.c:417:27
	movapd	3696(%rsp), %xmm3
	.loc	14 418 28               # rhs.c:418:28
	mulpd	%xmm13, %xmm1
	.loc	14 419 28               # rhs.c:419:28
	movapd	.LCPI9_14(%rip), %xmm15 # xmm15 = [6.000000e+00,6.000000e+00]
	mulpd	%xmm15, %xmm0
	.loc	14 418 28               # rhs.c:418:28
	subpd	%xmm1, %xmm0
	.loc	14 420 28               # rhs.c:420:28
	mulpd	%xmm13, %xmm2
	.loc	14 420 22 is_stmt 0     # rhs.c:420:22
	subpd	%xmm2, %xmm0
	.loc	14 421 30 is_stmt 1     # rhs.c:421:30
	movapd	736(%rsp), %xmm4
	.loc	14 421 22 is_stmt 0     # rhs.c:421:22
	addpd	%xmm4, %xmm0
	.loc	14 418 18 is_stmt 1     # rhs.c:418:18
	mulpd	%xmm12, %xmm0
	.loc	14 418 11 is_stmt 0     # rhs.c:418:11
	subpd	%xmm0, %xmm3
	.loc	14 417 25 is_stmt 1     # rhs.c:417:25
	movupd	%xmm3, rsd+338000(%rcx,%rdi,8)
	.loc	14 414 28               # rhs.c:414:28
	movapd	608(%rsp), %xmm1
	.loc	14 415 30               # rhs.c:415:30
	movapd	656(%rsp), %xmm8
	.loc	14 416 30               # rhs.c:416:30
	movapd	704(%rsp), %xmm10
	.loc	14 421 30               # rhs.c:421:30
	movapd	752(%rsp), %xmm11
	.loc	14 413 27               # rhs.c:413:27
	movupd	3672(%rsp), %xmm0
	.loc	14 414 28               # rhs.c:414:28
	movapd	%xmm1, %xmm2
	mulpd	%xmm6, %xmm2
	.loc	14 415 28               # rhs.c:415:28
	movapd	%xmm8, %xmm6
	mulpd	%xmm13, %xmm6
	.loc	14 415 22 is_stmt 0     # rhs.c:415:22
	subpd	%xmm6, %xmm2
	.loc	14 416 22 is_stmt 1     # rhs.c:416:22
	addpd	%xmm10, %xmm2
	.loc	14 414 18               # rhs.c:414:18
	mulpd	%xmm12, %xmm2
	.loc	14 414 11 is_stmt 0     # rhs.c:414:11
	subpd	%xmm2, %xmm0
	.loc	14 413 25 is_stmt 1     # rhs.c:413:25
	movupd	%xmm0, rsd+169016(%rcx,%rdi,8)
	.loc	14 417 27               # rhs.c:417:27
	movapd	3712(%rsp), %xmm0
	.loc	14 418 28               # rhs.c:418:28
	movapd	%xmm1, %xmm2
	mulpd	%xmm13, %xmm2
	.loc	14 419 28               # rhs.c:419:28
	movapd	%xmm8, %xmm6
	mulpd	%xmm15, %xmm6
	.loc	14 418 28               # rhs.c:418:28
	subpd	%xmm2, %xmm6
	.loc	14 420 28               # rhs.c:420:28
	movapd	%xmm10, %xmm2
	mulpd	%xmm13, %xmm2
	.loc	14 420 22 is_stmt 0     # rhs.c:420:22
	subpd	%xmm2, %xmm6
	.loc	14 421 22 is_stmt 1     # rhs.c:421:22
	addpd	%xmm11, %xmm6
	.loc	14 418 18               # rhs.c:418:18
	mulpd	%xmm12, %xmm6
	.loc	14 418 11 is_stmt 0     # rhs.c:418:11
	subpd	%xmm6, %xmm0
	.loc	14 417 25 is_stmt 1     # rhs.c:417:25
	movupd	%xmm0, rsd+338016(%rcx,%rdi,8)
	.loc	14 413 27               # rhs.c:413:27
	movsd	3688(%rsp), %xmm9       # xmm9 = mem[0],zero
	.loc	14 414 30               # rhs.c:414:30
	movsd	624(%rsp), %xmm2        # xmm2 = mem[0],zero
	.loc	14 415 30               # rhs.c:415:30
	movsd	672(%rsp), %xmm0        # xmm0 = mem[0],zero
	.loc	14 414 28               # rhs.c:414:28
	movapd	%xmm2, %xmm7
	movsd	.LCPI9_10(%rip), %xmm3  # xmm3 = mem[0],zero
	movapd	%xmm3, %xmm14
	mulsd	%xmm14, %xmm7
	.loc	14 415 28               # rhs.c:415:28
	movapd	%xmm0, %xmm6
	movsd	.LCPI9_11(%rip), %xmm5  # xmm5 = mem[0],zero
	mulsd	%xmm5, %xmm6
	.loc	14 415 22 is_stmt 0     # rhs.c:415:22
	subsd	%xmm6, %xmm7
	.loc	14 416 30 is_stmt 1     # rhs.c:416:30
	movsd	720(%rsp), %xmm3        # xmm3 = mem[0],zero
	.loc	14 416 22 is_stmt 0     # rhs.c:416:22
	addsd	%xmm3, %xmm7
	movapd	80(%rsp), %xmm6         # 16-byte Reload
	.loc	14 414 18 is_stmt 1     # rhs.c:414:18
	mulsd	%xmm6, %xmm7
	.loc	14 414 11 is_stmt 0     # rhs.c:414:11
	subsd	%xmm7, %xmm9
	movapd	%xmm5, %xmm7
	.loc	14 413 25 is_stmt 1     # rhs.c:413:25
	movsd	%xmm9, rsd+169032(%rcx,%rdi,8)
	movapd	%xmm14, %xmm9
	movapd	%xmm6, %xmm14
	.loc	14 418 28               # rhs.c:418:28
	mulsd	%xmm7, %xmm2
	movsd	.LCPI9_12(%rip), %xmm6  # xmm6 = mem[0],zero
	.loc	14 419 28               # rhs.c:419:28
	mulsd	%xmm6, %xmm0
	.loc	14 418 28               # rhs.c:418:28
	subsd	%xmm2, %xmm0
	.loc	14 420 28               # rhs.c:420:28
	mulsd	%xmm7, %xmm3
	.loc	14 420 22 is_stmt 0     # rhs.c:420:22
	subsd	%xmm3, %xmm0
	.loc	14 417 27 is_stmt 1     # rhs.c:417:27
	movsd	3728(%rsp), %xmm2       # xmm2 = mem[0],zero
	.loc	14 421 22               # rhs.c:421:22
	addsd	768(%rsp), %xmm0
	.loc	14 418 18               # rhs.c:418:18
	mulsd	%xmm14, %xmm0
	.loc	14 418 11 is_stmt 0     # rhs.c:418:11
	subsd	%xmm0, %xmm2
	.loc	14 417 25 is_stmt 1     # rhs.c:417:25
	movsd	%xmm2, rsd+338032(%rcx,%rdi,8)
	#DEBUG_VALUE: rhs:m <- 0
	cmpl	$3, %r15d
	movq	192(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %rdi         # 8-byte Reload
	movl	$0, %ebx
	jle	.LBB9_80
.Ltmp724:
# BB#77:                                # %for.cond2342.preheader.lr.ph
                                        #   in Loop: Header=BB9_55 Depth=2
	movq	%rbp, %rax
.Ltmp725:
	.loc	14 427 32               # rhs.c:427:32
	movsd	600(%rsp), %xmm0        # xmm0 = mem[0],zero
	movapd	%xmm7, %xmm14
	.loc	14 428 32               # rhs.c:428:32
	movsd	648(%rsp), %xmm7        # xmm7 = mem[0],zero
	.loc	14 429 32               # rhs.c:429:32
	movsd	696(%rsp), %xmm6        # xmm6 = mem[0],zero
.Ltmp726:
	.loc	14 424 7 discriminator 1 # rhs.c:424:7
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
.Ltmp727:
	.loc	14 430 32               # rhs.c:430:32
	movq	32(%rsp), %rbp          # 8-byte Reload
.Ltmp728:
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	leaq	816(%rsp), %rdi
	leaq	3768(%rsp), %rbx
	movl	$3, %ecx
	.p2align	4, 0x90
.LBB9_78:                               # %for.cond2342.preheader
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp729:
	.loc	14 428 24               # rhs.c:428:24
	movsd	-224(%rdi), %xmm2       # xmm2 = mem[0],zero
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	.loc	14 428 32 is_stmt 0     # rhs.c:428:32
	movapd	%xmm7, %xmm0
	.loc	14 428 30               # rhs.c:428:30
	movsd	-176(%rdi), %xmm5       # xmm5 = mem[0],zero
	unpcklpd	%xmm0, %xmm5    # xmm5 = xmm5[0],xmm0[0]
	.loc	14 429 32 is_stmt 1     # rhs.c:429:32
	movapd	%xmm6, %xmm7
	.loc	14 430 32               # rhs.c:430:32
	movapd	%xmm4, %xmm6
	.loc	14 426 29               # rhs.c:426:29
	movupd	-32(%rbx), %xmm3
	.loc	14 428 30               # rhs.c:428:30
	mulpd	%xmm13, %xmm5
	.loc	14 428 24 is_stmt 0     # rhs.c:428:24
	subpd	%xmm5, %xmm2
	.loc	14 429 30 is_stmt 1     # rhs.c:429:30
	movsd	-128(%rdi), %xmm5       # xmm5 = mem[0],zero
	unpcklpd	%xmm7, %xmm5    # xmm5 = xmm5[0],xmm7[0]
	mulpd	%xmm15, %xmm5
	.loc	14 429 24 is_stmt 0     # rhs.c:429:24
	addpd	%xmm2, %xmm5
	.loc	14 430 30 is_stmt 1     # rhs.c:430:30
	movsd	-80(%rdi), %xmm2        # xmm2 = mem[0],zero
	unpcklpd	%xmm6, %xmm2    # xmm2 = xmm2[0],xmm6[0]
	mulpd	%xmm13, %xmm2
	.loc	14 430 24 is_stmt 0     # rhs.c:430:24
	subpd	%xmm2, %xmm5
	.loc	14 431 32 is_stmt 1     # rhs.c:431:32
	movapd	-32(%rdi), %xmm4
	.loc	14 431 24 is_stmt 0     # rhs.c:431:24
	addpd	%xmm4, %xmm5
	.loc	14 427 20 is_stmt 1     # rhs.c:427:20
	mulpd	%xmm12, %xmm5
	.loc	14 427 13 is_stmt 0     # rhs.c:427:13
	subpd	%xmm5, %xmm3
	.loc	14 426 27 is_stmt 1     # rhs.c:426:27
	movupd	%xmm3, -32(%rbp)
	.loc	14 426 29 is_stmt 0     # rhs.c:426:29
	movupd	-16(%rbx), %xmm3
	.loc	14 428 30 is_stmt 1     # rhs.c:428:30
	movapd	%xmm8, %xmm2
	mulpd	%xmm13, %xmm2
	.loc	14 428 24 is_stmt 0     # rhs.c:428:24
	subpd	%xmm2, %xmm1
	.loc	14 429 30 is_stmt 1     # rhs.c:429:30
	movapd	%xmm10, %xmm5
	mulpd	%xmm15, %xmm5
	.loc	14 429 24 is_stmt 0     # rhs.c:429:24
	addpd	%xmm1, %xmm5
	.loc	14 430 30 is_stmt 1     # rhs.c:430:30
	movapd	%xmm11, %xmm1
	mulpd	%xmm13, %xmm1
	.loc	14 430 24 is_stmt 0     # rhs.c:430:24
	subpd	%xmm1, %xmm5
	.loc	14 431 32 is_stmt 1     # rhs.c:431:32
	movapd	-16(%rdi), %xmm2
	.loc	14 431 24 is_stmt 0     # rhs.c:431:24
	addpd	%xmm2, %xmm5
	.loc	14 427 20 is_stmt 1     # rhs.c:427:20
	mulpd	%xmm12, %xmm5
	.loc	14 427 13 is_stmt 0     # rhs.c:427:13
	subpd	%xmm5, %xmm3
	.loc	14 426 27 is_stmt 1     # rhs.c:426:27
	movupd	%xmm3, -16(%rbp)
	movsd	-144(%rdi), %xmm1       # xmm1 = mem[0],zero
	.loc	14 428 30               # rhs.c:428:30
	mulsd	%xmm14, %xmm1
	.loc	14 427 32               # rhs.c:427:32
	movsd	-192(%rdi), %xmm3       # xmm3 = mem[0],zero
	.loc	14 428 24               # rhs.c:428:24
	subsd	%xmm1, %xmm3
	movsd	-96(%rdi), %xmm1        # xmm1 = mem[0],zero
	.loc	14 429 30               # rhs.c:429:30
	mulsd	.LCPI9_12(%rip), %xmm1
	.loc	14 429 24 is_stmt 0     # rhs.c:429:24
	addsd	%xmm3, %xmm1
	movsd	-48(%rdi), %xmm3        # xmm3 = mem[0],zero
	.loc	14 430 30 is_stmt 1     # rhs.c:430:30
	mulsd	%xmm14, %xmm3
	.loc	14 430 24 is_stmt 0     # rhs.c:430:24
	subsd	%xmm3, %xmm1
	.loc	14 426 29 is_stmt 1     # rhs.c:426:29
	movsd	(%rbx), %xmm3           # xmm3 = mem[0],zero
	.loc	14 431 24               # rhs.c:431:24
	addsd	(%rdi), %xmm1
	.loc	14 427 20               # rhs.c:427:20
	mulsd	80(%rsp), %xmm1         # 16-byte Folded Reload
	.loc	14 427 13 is_stmt 0     # rhs.c:427:13
	subsd	%xmm1, %xmm3
	.loc	14 426 27 is_stmt 1     # rhs.c:426:27
	movsd	%xmm3, (%rbp)
	#DEBUG_VALUE: rhs:m <- 0
	.loc	14 427 32               # rhs.c:427:32
	movapd	%xmm8, %xmm1
	.loc	14 428 32               # rhs.c:428:32
	movapd	%xmm10, %xmm8
	.loc	14 429 32               # rhs.c:429:32
	movapd	%xmm11, %xmm10
.Ltmp730:
	.loc	14 424 7 discriminator 1 # rhs.c:424:7
	incq	%rcx
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	.loc	14 424 21 is_stmt 0 discriminator 1 # rhs.c:424:21
	addq	$40, %rbx
	addq	$48, %rdi
	addq	$169000, %rbp           # imm = 0x29428
	cmpq	%r15, %rcx
.Ltmp731:
	.loc	14 430 32 is_stmt 1     # rhs.c:430:32
	movapd	%xmm2, %xmm11
	jl	.LBB9_78
.Ltmp732:
# BB#79:                                #   in Loop: Header=BB9_55 Depth=2
	movq	192(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %rdi         # 8-byte Reload
	xorl	%ebx, %ebx
	movq	%rax, %rbp
	movapd	%xmm14, %xmm7
	movsd	.LCPI9_12(%rip), %xmm6  # xmm6 = mem[0],zero
	movapd	80(%rsp), %xmm14        # 16-byte Reload
	.p2align	4, 0x90
.LBB9_80:                               # %for.body2398
                                        #   Parent Loop BB9_54 Depth=1
                                        #     Parent Loop BB9_55 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp733:
	.loc	14 436 30               # rhs.c:436:30
	movsd	(%r10,%rbx), %xmm0      # xmm0 = mem[0],zero
	.loc	14 437 30               # rhs.c:437:30
	movsd	(%r8,%rbx), %xmm1       # xmm1 = mem[0],zero
	.loc	14 438 30               # rhs.c:438:30
	movsd	(%r9,%rbx), %xmm2       # xmm2 = mem[0],zero
	.loc	14 438 28 is_stmt 0     # rhs.c:438:28
	movapd	%xmm2, %xmm3
	mulsd	%xmm7, %xmm3
	.loc	14 438 22               # rhs.c:438:22
	subsd	%xmm3, %xmm1
	.loc	14 439 30 is_stmt 1     # rhs.c:439:30
	movsd	(%r14,%rbx), %xmm3      # xmm3 = mem[0],zero
	.loc	14 439 28 is_stmt 0     # rhs.c:439:28
	movapd	%xmm3, %xmm4
	mulsd	%xmm6, %xmm4
	.loc	14 439 22               # rhs.c:439:22
	addsd	%xmm1, %xmm4
	.loc	14 440 30 is_stmt 1     # rhs.c:440:30
	movsd	(%r12,%rbx), %xmm1      # xmm1 = mem[0],zero
	.loc	14 440 28 is_stmt 0     # rhs.c:440:28
	movapd	%xmm1, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	14 440 22               # rhs.c:440:22
	subsd	%xmm5, %xmm4
	.loc	14 437 18 is_stmt 1     # rhs.c:437:18
	mulsd	%xmm14, %xmm4
	.loc	14 437 11 is_stmt 0     # rhs.c:437:11
	subsd	%xmm4, %xmm0
	.loc	14 436 28 is_stmt 1     # rhs.c:436:28
	movsd	%xmm0, (%rdi)
	.loc	14 441 30               # rhs.c:441:30
	movsd	(%r11,%rbx), %xmm0      # xmm0 = mem[0],zero
	.loc	14 443 28               # rhs.c:443:28
	mulsd	%xmm7, %xmm3
	.loc	14 443 22 is_stmt 0     # rhs.c:443:22
	subsd	%xmm3, %xmm2
	.loc	14 444 28 is_stmt 1     # rhs.c:444:28
	mulsd	%xmm9, %xmm1
	.loc	14 444 22 is_stmt 0     # rhs.c:444:22
	addsd	%xmm2, %xmm1
	.loc	14 442 18 is_stmt 1     # rhs.c:442:18
	mulsd	%xmm14, %xmm1
	.loc	14 442 11 is_stmt 0     # rhs.c:442:11
	subsd	%xmm1, %xmm0
	.loc	14 441 28 is_stmt 1     # rhs.c:441:28
	movsd	%xmm0, (%rcx)
.Ltmp734:
	.loc	14 435 7 discriminator 1 # rhs.c:435:7
	addq	$8, %rbx
	addq	$8, %rdi
	addq	$8, %rcx
	cmpq	$40, %rbx
	jne	.LBB9_80
.Ltmp735:
# BB#81:                                # %for.inc2479
                                        #   in Loop: Header=BB9_55 Depth=2
	movq	208(%rsp), %rax         # 8-byte Reload
	.loc	14 328 5 discriminator 1 # rhs.c:328:5
	incq	%rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movq	72(%rsp), %rcx          # 8-byte Reload
	addq	$8, %rcx
	addq	$8, 40(%rsp)            # 8-byte Folded Spill
	addq	$40, 112(%rsp)          # 8-byte Folded Spill
	addq	$40, 32(%rsp)           # 8-byte Folded Spill
	addq	$40, 176(%rsp)          # 8-byte Folded Spill
	addq	$40, 192(%rsp)          # 8-byte Folded Spill
	.loc	14 328 21 is_stmt 0 discriminator 1 # rhs.c:328:21
	cmpq	%r13, %rax
	movaps	128(%rsp), %xmm9        # 16-byte Reload
	movapd	304(%rsp), %xmm10       # 16-byte Reload
	movapd	288(%rsp), %xmm13       # 16-byte Reload
	movapd	272(%rsp), %xmm15       # 16-byte Reload
	movapd	416(%rsp), %xmm8        # 16-byte Reload
	movaps	384(%rsp), %xmm6        # 16-byte Reload
.Ltmp736:
	.loc	14 345 44 is_stmt 1     # rhs.c:345:44
	movsd	.LCPI9_8(%rip), %xmm7   # xmm7 = mem[0],zero
	movsd	.LCPI9_9(%rip), %xmm5   # xmm5 = mem[0],zero
	movapd	160(%rsp), %xmm14       # 16-byte Reload
	jl	.LBB9_55
.Ltmp737:
.LBB9_82:                               # %for.inc2482
                                        #   in Loop: Header=BB9_54 Depth=1
	movq	%r13, 8(%rsp)           # 8-byte Spill
	movq	%r15, 96(%rsp)          # 8-byte Spill
	movq	16(%rsp), %rax          # 8-byte Reload
	.loc	14 327 3 discriminator 1 # rhs.c:327:3
	incq	%rax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movq	24(%rsp), %rcx          # 8-byte Reload
	addq	$520, %rcx              # imm = 0x208
	movq	520(%rsp), %rbx         # 8-byte Reload
	addq	$520, %rbx              # imm = 0x208
	movq	48(%rsp), %rdi          # 8-byte Reload
	addq	$2600, %rdi             # imm = 0xA28
	movq	536(%rsp), %r15         # 8-byte Reload
	addq	$2600, %r15             # imm = 0xA28
	movq	528(%rsp), %r13         # 8-byte Reload
	addq	$2600, %r13             # imm = 0xA28
	addq	$2600, %rbp             # imm = 0xA28
	.loc	14 327 19 is_stmt 0 discriminator 1 # rhs.c:327:19
	cmpq	512(%rsp), %rax         # 8-byte Folded Reload
	jl	.LBB9_54
.Ltmp738:
.LBB9_83:                               # %for.end2484
	.loc	14 448 7 is_stmt 1      # rhs.c:448:7
	cmpl	$0, timeron(%rip)
	je	.LBB9_86
# BB#84:                                # %if.end2487
	.loc	14 448 16 is_stmt 0 discriminator 1 # rhs.c:448:16
	movl	$4, %edi
	callq	timer_stop
.Ltmp739:
	.loc	14 449 7 is_stmt 1      # rhs.c:449:7
	cmpl	$0, timeron(%rip)
	je	.LBB9_86
# BB#85:                                # %if.then2489
	.loc	14 449 16 is_stmt 0 discriminator 1 # rhs.c:449:16
	movl	$5, %edi
	callq	timer_stop
.Ltmp740:
.LBB9_86:                               # %if.end2490
	.loc	14 450 1 is_stmt 1      # rhs.c:450:1
	addq	$6184, %rsp             # imm = 0x1828
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp741:
.Lfunc_end9:
	.size	rhs, .Lfunc_end9-rhs
	.cfi_endproc

	.globl	l2norm
	.p2align	4, 0x90
	.type	l2norm,@function
l2norm:                                 # @l2norm
.Lfunc_begin10:
	.file	15 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/l2norm.c"
	.loc	15 47 0                 # l2norm.c:47:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp742:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp743:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp744:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp745:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp746:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp747:
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
.Ltmp748:
	.cfi_def_cfa_offset 80
.Ltmp749:
	.cfi_offset %rbx, -56
.Ltmp750:
	.cfi_offset %r12, -48
.Ltmp751:
	.cfi_offset %r13, -40
.Ltmp752:
	.cfi_offset %r14, -32
.Ltmp753:
	.cfi_offset %r15, -24
.Ltmp754:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: l2norm:ldx <- %EDI
	#DEBUG_VALUE: l2norm:ldy <- %ESI
	#DEBUG_VALUE: l2norm:ldz <- %EDX
	#DEBUG_VALUE: l2norm:nx0 <- %ECX
	#DEBUG_VALUE: l2norm:ny0 <- %R8D
	#DEBUG_VALUE: l2norm:nz0 <- %R9D
	movq	120(%rsp), %rbx
	#DEBUG_VALUE: l2norm:sum <- %RBX
.Ltmp755:
	.loc	15 46 31 prologue_end   # l2norm.c:46:31
	movl	%edi, %eax
	shrl	$31, %eax
	addl	%edi, %eax
	andl	$-2, %eax
	.loc	15 46 35 is_stmt 0      # l2norm.c:46:35
	leal	1(%rax), %ebp
.Ltmp756:
	#DEBUG_VALUE: l2norm:m <- 0
	.loc	15 54 12 is_stmt 1      # l2norm.c:54:12
	xorpd	%xmm0, %xmm0
	movupd	%xmm0, 16(%rbx)
	movupd	%xmm0, (%rbx)
	movq	$0, 32(%rbx)
.Ltmp757:
	.loc	15 57 22 discriminator 1 # l2norm.c:57:22
	leal	-1(%r9), %r15d
	xorpd	%xmm0, %xmm0
	.loc	15 57 3 is_stmt 0 discriminator 1 # l2norm.c:57:3
	cmpl	$2, %r15d
	jl	.LBB10_1
.Ltmp758:
# BB#2:                                 # %for.cond7.preheader.lr.ph
	#DEBUG_VALUE: l2norm:sum <- %RBX
	#DEBUG_VALUE: l2norm:nz0 <- %R9D
	#DEBUG_VALUE: l2norm:ny0 <- %R8D
	#DEBUG_VALUE: l2norm:nx0 <- %ECX
	#DEBUG_VALUE: l2norm:ldz <- %EDX
	#DEBUG_VALUE: l2norm:ldy <- %ESI
	#DEBUG_VALUE: l2norm:ldx <- %EDI
	movl	%r8d, 20(%rsp)          # 4-byte Spill
	movl	%ecx, 8(%rsp)           # 4-byte Spill
	movl	104(%rsp), %r13d
	#DEBUG_VALUE: l2norm:jend <- %R13D
	movl	96(%rsp), %r10d
	#DEBUG_VALUE: l2norm:jst <- %R10D
	.loc	15 46 20 is_stmt 1      # l2norm.c:46:20
	movl	%esi, %edi
.Ltmp759:
	shrl	$31, %edi
	addl	%esi, %edi
	andl	$-2, %edi
	.loc	15 46 24 is_stmt 0      # l2norm.c:46:24
	leal	1(%rdi), %edx
.Ltmp760:
	.loc	15 58 5 is_stmt 1 discriminator 1 # l2norm.c:58:5
	cmpl	%r13d, %r10d
	jge	.LBB10_6
.Ltmp761:
# BB#3:                                 # %for.cond10.preheader.lr.ph.us.preheader
	#DEBUG_VALUE: l2norm:ldy <- %ESI
	#DEBUG_VALUE: l2norm:nx0 <- %ECX
	#DEBUG_VALUE: l2norm:ny0 <- %R8D
	#DEBUG_VALUE: l2norm:nz0 <- %R9D
	#DEBUG_VALUE: l2norm:sum <- %RBX
	#DEBUG_VALUE: l2norm:jst <- %R10D
	#DEBUG_VALUE: l2norm:jend <- %R13D
	movq	112(%rsp), %r11
	#DEBUG_VALUE: l2norm:v <- %R11
	movl	88(%rsp), %r8d
.Ltmp762:
	#DEBUG_VALUE: l2norm:ist <- undef
	#DEBUG_VALUE: l2norm:iend <- %R8D
	.loc	15 61 29                # l2norm.c:61:29
	movslq	80(%rsp), %r14
	movslq	%r10d, %r10
.Ltmp763:
	leaq	(%r14,%r14,4), %rsi
.Ltmp764:
	leaq	(%r11,%rsi,8), %r11
.Ltmp765:
	leaq	(%r10,%r10,4), %rsi
	movl	%edi, %edi
	leaq	(%rdi,%rdi,4), %rdi
	shlq	$3, %rdi
	leaq	40(%rdi,%rsi,8), %rsi
	imulq	%rbp, %rsi
	leaq	32(%rsi,%r11), %rsi
	imulq	%rbp, %rdx
	shlq	$3, %rdx
	leaq	(%rdx,%rdx,4), %r12
	movl	%eax, %eax
	leaq	(%rax,%rax,4), %rax
	leaq	40(,%rax,8), %rax
	movl	%r8d, %ecx
.Ltmp766:
	subl	%r14d, %ecx
	xorpd	%xmm1, %xmm1
	movl	$1, %edi
	xorpd	%xmm2, %xmm2
	xorpd	%xmm3, %xmm3
	xorpd	%xmm4, %xmm4
	xorpd	%xmm0, %xmm0
.Ltmp767:
	.p2align	4, 0x90
.LBB10_4:                               # %for.cond10.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_18 Depth 2
                                        #       Child Loop BB10_19 Depth 3
	cmpl	%r8d, 80(%rsp)
	movq	%rsi, %r11
	movq	%r10, %r14
	jge	.LBB10_5
	.p2align	4, 0x90
.LBB10_18:                              # %for.cond13.preheader.lr.ph.us.us
                                        #   Parent Loop BB10_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB10_19 Depth 3
	.loc	15 61 20 is_stmt 0      # l2norm.c:61:20
	movl	%ecx, %ebp
	movq	%r11, %rdx
	.p2align	4, 0x90
.LBB10_19:                              # %for.cond13.preheader.us.us
                                        #   Parent Loop BB10_4 Depth=1
                                        #     Parent Loop BB10_18 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	15 61 29                # l2norm.c:61:29
	movsd	-32(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	15 61 43                # l2norm.c:61:43
	mulsd	%xmm5, %xmm5
	.loc	15 61 27                # l2norm.c:61:27
	addsd	%xmm5, %xmm0
	.loc	15 61 18                # l2norm.c:61:18
	movsd	%xmm0, (%rbx)
	.loc	15 61 29                # l2norm.c:61:29
	movsd	-24(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	15 61 43                # l2norm.c:61:43
	mulsd	%xmm5, %xmm5
	.loc	15 61 27                # l2norm.c:61:27
	addsd	%xmm5, %xmm4
	.loc	15 61 18                # l2norm.c:61:18
	movsd	%xmm4, 8(%rbx)
	.loc	15 61 29                # l2norm.c:61:29
	movsd	-16(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	15 61 43                # l2norm.c:61:43
	mulsd	%xmm5, %xmm5
	.loc	15 61 27                # l2norm.c:61:27
	addsd	%xmm5, %xmm3
	.loc	15 61 18                # l2norm.c:61:18
	movsd	%xmm3, 16(%rbx)
	.loc	15 61 29                # l2norm.c:61:29
	movsd	-8(%rdx), %xmm5         # xmm5 = mem[0],zero
	.loc	15 61 43                # l2norm.c:61:43
	mulsd	%xmm5, %xmm5
	.loc	15 61 27                # l2norm.c:61:27
	addsd	%xmm5, %xmm2
	.loc	15 61 18                # l2norm.c:61:18
	movsd	%xmm2, 24(%rbx)
	.loc	15 61 29                # l2norm.c:61:29
	movsd	(%rdx), %xmm5           # xmm5 = mem[0],zero
	.loc	15 61 43                # l2norm.c:61:43
	mulsd	%xmm5, %xmm5
	.loc	15 61 27                # l2norm.c:61:27
	addsd	%xmm5, %xmm1
	.loc	15 61 18                # l2norm.c:61:18
	movsd	%xmm1, 32(%rbx)
.Ltmp768:
	.loc	15 59 7 is_stmt 1 discriminator 1 # l2norm.c:59:7
	addq	$40, %rdx
	decl	%ebp
	jne	.LBB10_19
.Ltmp769:
# BB#17:                                # %for.cond10.for.inc44_crit_edge.us.us
                                        #   in Loop: Header=BB10_18 Depth=2
	.loc	15 58 5 discriminator 1 # l2norm.c:58:5
	incq	%r14
	addq	%rax, %r11
	cmpl	%r13d, %r14d
	jne	.LBB10_18
.Ltmp770:
.LBB10_5:                               # %for.cond7.for.inc47_crit_edge.us
                                        #   in Loop: Header=BB10_4 Depth=1
	.loc	15 57 3 discriminator 1 # l2norm.c:57:3
	incq	%rdi
	addq	%r12, %rsi
	cmpl	%r15d, %edi
	jne	.LBB10_4
	jmp	.LBB10_6
.Ltmp771:
.LBB10_1:
	#DEBUG_VALUE: l2norm:sum <- %RBX
	#DEBUG_VALUE: l2norm:nz0 <- %R9D
	#DEBUG_VALUE: l2norm:ny0 <- %R8D
	#DEBUG_VALUE: l2norm:nx0 <- %ECX
	#DEBUG_VALUE: l2norm:ldz <- %EDX
	#DEBUG_VALUE: l2norm:ldy <- %ESI
	#DEBUG_VALUE: l2norm:ldx <- %EDI
	movl	%r8d, 20(%rsp)          # 4-byte Spill
	movl	%ecx, 8(%rsp)           # 4-byte Spill
.Ltmp772:
.LBB10_6:                               # %for.cond50.preheader
	movl	8(%rsp), %eax           # 4-byte Reload
.Ltmp773:
	.loc	15 68 36                # l2norm.c:68:36
	addl	$-2, %eax
	movl	20(%rsp), %ecx          # 4-byte Reload
	.loc	15 68 44 is_stmt 0      # l2norm.c:68:44
	addl	$-2, %ecx
	.loc	15 68 39                # l2norm.c:68:39
	imull	%eax, %ecx
	.loc	15 68 52                # l2norm.c:68:52
	addl	$-2, %r9d
	.loc	15 68 47                # l2norm.c:68:47
	imull	%ecx, %r9d
	.loc	15 68 30                # l2norm.c:68:30
	cvtsi2sdl	%r9d, %xmm2
	.loc	15 68 28                # l2norm.c:68:28
	divsd	%xmm2, %xmm0
	.loc	15 68 14                # l2norm.c:68:14
	sqrtsd	%xmm0, %xmm1
	.loc	15 68 12                # l2norm.c:68:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB10_8
# BB#7:                                 # %call.sqrt
	movsd	%xmm2, 8(%rsp)          # 8-byte Spill
	callq	sqrt
	movsd	8(%rsp), %xmm2          # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movapd	%xmm0, %xmm1
.LBB10_8:                               # %for.cond50.preheader.split
	movsd	%xmm1, (%rbx)
	.loc	15 68 21                # l2norm.c:68:21
	movsd	8(%rbx), %xmm0          # xmm0 = mem[0],zero
	.loc	15 68 28                # l2norm.c:68:28
	divsd	%xmm2, %xmm0
	.loc	15 68 14                # l2norm.c:68:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	15 68 12                # l2norm.c:68:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB10_10
# BB#9:                                 # %call.sqrt16
	movsd	%xmm2, 8(%rsp)          # 8-byte Spill
	callq	sqrt
	movsd	8(%rsp), %xmm2          # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movapd	%xmm0, %xmm1
.LBB10_10:                              # %for.cond50.preheader.split.split
	movsd	%xmm1, 8(%rbx)
	.loc	15 68 21                # l2norm.c:68:21
	movsd	16(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	15 68 28                # l2norm.c:68:28
	divsd	%xmm2, %xmm0
	.loc	15 68 14                # l2norm.c:68:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	15 68 12                # l2norm.c:68:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB10_12
# BB#11:                                # %call.sqrt17
	movsd	%xmm2, 8(%rsp)          # 8-byte Spill
	callq	sqrt
	movsd	8(%rsp), %xmm2          # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movapd	%xmm0, %xmm1
.LBB10_12:                              # %for.cond50.preheader.split.split.split
	movsd	%xmm1, 16(%rbx)
	.loc	15 68 21                # l2norm.c:68:21
	movsd	24(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	15 68 28                # l2norm.c:68:28
	divsd	%xmm2, %xmm0
	.loc	15 68 14                # l2norm.c:68:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	15 68 12                # l2norm.c:68:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB10_14
# BB#13:                                # %call.sqrt18
	movsd	%xmm2, 8(%rsp)          # 8-byte Spill
	callq	sqrt
	movsd	8(%rsp), %xmm2          # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movapd	%xmm0, %xmm1
.LBB10_14:                              # %for.cond50.preheader.split.split.split.split
	movsd	%xmm1, 24(%rbx)
	.loc	15 68 21                # l2norm.c:68:21
	movsd	32(%rbx), %xmm0         # xmm0 = mem[0],zero
	.loc	15 68 28                # l2norm.c:68:28
	divsd	%xmm2, %xmm0
	.loc	15 68 14                # l2norm.c:68:14
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	15 68 12                # l2norm.c:68:12
	ucomisd	%xmm1, %xmm1
	jnp	.LBB10_16
# BB#15:                                # %call.sqrt19
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB10_16:                              # %for.cond50.preheader.split.split.split.split.split
	movsd	%xmm1, 32(%rbx)
.Ltmp774:
	.loc	15 70 1 is_stmt 1       # l2norm.c:70:1
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp775:
.Lfunc_end10:
	.size	l2norm, .Lfunc_end10-l2norm
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI11_0:
	.quad	4607182418800017408     # double 1
.LCPI11_1:
	.quad	-4611686018427387904    # double -2
.LCPI11_2:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI11_5:
	.quad	4608683618675807573     # double 1.3333333333333333
.LCPI11_6:
	.quad	4589180029889541744     # double 0.062666666666666648
.LCPI11_7:
	.quad	-4631790087163969800    # double -0.095999999999999974
.LCPI11_8:
	.quad	4596229664506252361     # double 0.19599999999999998
.LCPI11_9:
	.quad	4591581949690806008     # double 0.095999999999999974
.LCPI11_10:
	.quad	-4634192006965234064    # double -0.062666666666666648
.LCPI11_12:
	.quad	-4613487458278336102    # double -1.6000000000000001
.LCPI11_13:
	.quad	-4622494657533077094    # double -0.40000000000000002
.LCPI11_14:
	.quad	-4631501856787818086    # double -0.10000000000000001
.LCPI11_15:
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI11_16:
	.quad	-4629400176961711855    # double -0.13333333333333333
.LCPI11_17:
	.quad	4593971859893063953     # double 0.13333333333333333
.LCPI11_18:
	.quad	4605380978949069210     # double 0.80000000000000004
.LCPI11_19:
	.quad	4608983858650965606     # double 1.3999999999999999
.LCPI11_20:
	.quad	-9223372036854775808    # double -0
.LCPI11_22:
	.quad	4609884578576439706     # double 1.6000000000000001
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI11_3:
	.quad	4608683618675807573     # double 1.3333333333333333
	.quad	4608683618675807573     # double 1.3333333333333333
.LCPI11_4:
	.quad	4591870180066957722     # double 0.10000000000000001
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI11_11:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
.LCPI11_21:
	.quad	-4631501856787818086    # double -0.10000000000000001
	.quad	-4629400176961711855    # double -0.13333333333333333
.LCPI11_23:
	.quad	-4629400176961711855    # double -0.13333333333333333
	.quad	-4631501856787818086    # double -0.10000000000000001
	.text
	.globl	jacld
	.p2align	4, 0x90
	.type	jacld,@function
jacld:                                  # @jacld
.Lfunc_begin11:
	.file	16 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/jacld.c"
	.loc	16 40 0                 # jacld.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	16 54 3 prologue_end discriminator 1 # jacld.c:54:3
	pushq	%rbp
.Ltmp776:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp777:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp778:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp779:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp780:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp781:
	.cfi_def_cfa_offset 56
	subq	$872, %rsp              # imm = 0x368
.Ltmp782:
	.cfi_def_cfa_offset 928
.Ltmp783:
	.cfi_offset %rbx, -56
.Ltmp784:
	.cfi_offset %r12, -48
.Ltmp785:
	.cfi_offset %r13, -40
.Ltmp786:
	.cfi_offset %r14, -32
.Ltmp787:
	.cfi_offset %r15, -24
.Ltmp788:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: jacld:k <- %EDI
.Ltmp789:
	#DEBUG_VALUE: jacld:r43 <- 1.333333e+00
	#DEBUG_VALUE: jacld:c1345 <- 1.960000e-01
	#DEBUG_VALUE: jacld:c34 <- 1.000000e-01
	movslq	jst(%rip), %r11
	movslq	jend(%rip), %r8
	cmpl	%r8d, %r11d
	jge	.LBB11_5
.Ltmp790:
# BB#1:                                 # %for.body.lr.ph
	#DEBUG_VALUE: jacld:k <- %EDI
	.loc	16 63 43                # jacld.c:63:43
	movsd	tx1(%rip), %xmm2        # xmm2 = mem[0],zero
	.loc	16 63 49 is_stmt 0      # jacld.c:63:49
	movsd	dx1(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	16 63 47                # jacld.c:63:47
	movapd	%xmm1, (%rsp)           # 16-byte Spill
	movapd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	.loc	16 63 55                # jacld.c:63:55
	movsd	ty1(%rip), %xmm11       # xmm11 = mem[0],zero
	.loc	16 63 61                # jacld.c:63:61
	movsd	dy1(%rip), %xmm3        # xmm3 = mem[0],zero
	.loc	16 63 59                # jacld.c:63:59
	movapd	%xmm3, 64(%rsp)         # 16-byte Spill
	movapd	%xmm11, %xmm1
	mulsd	%xmm3, %xmm1
	.loc	16 63 53                # jacld.c:63:53
	addsd	%xmm0, %xmm1
	.loc	16 63 67                # jacld.c:63:67
	movsd	tz1(%rip), %xmm12       # xmm12 = mem[0],zero
	.loc	16 63 73                # jacld.c:63:73
	movsd	dz1(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	16 63 71                # jacld.c:63:71
	movapd	%xmm0, 112(%rsp)        # 16-byte Spill
	movapd	%xmm12, %xmm9
	mulsd	%xmm0, %xmm9
	.loc	16 63 65                # jacld.c:63:65
	addsd	%xmm1, %xmm9
	.loc	16 73 30 is_stmt 1      # jacld.c:73:30
	movsd	dx2(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	16 73 28 is_stmt 0      # jacld.c:73:28
	movapd	%xmm1, -16(%rsp)        # 16-byte Spill
	movapd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	.loc	16 73 42                # jacld.c:73:42
	movsd	dy2(%rip), %xmm3        # xmm3 = mem[0],zero
	.loc	16 73 40                # jacld.c:73:40
	movapd	%xmm3, 48(%rsp)         # 16-byte Spill
	movapd	%xmm11, %xmm1
	mulsd	%xmm3, %xmm1
	.loc	16 73 34                # jacld.c:73:34
	addsd	%xmm0, %xmm1
	.loc	16 73 54                # jacld.c:73:54
	movsd	dz2(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	16 73 52                # jacld.c:73:52
	movsd	%xmm0, -104(%rsp)       # 8-byte Spill
	movapd	%xmm12, %xmm3
	mulsd	%xmm0, %xmm3
	.loc	16 73 46                # jacld.c:73:46
	addsd	%xmm1, %xmm3
	.loc	16 70 17 is_stmt 1      # jacld.c:70:17
	movapd	%xmm2, %xmm0
	unpcklpd	%xmm11, %xmm0   # xmm0 = xmm0[0],xmm11[0]
	mulpd	.LCPI11_3(%rip), %xmm0
	.loc	16 70 23 is_stmt 0      # jacld.c:70:23
	movapd	%xmm11, %xmm1
	unpcklpd	%xmm2, %xmm1    # xmm1 = xmm1[0],xmm2[0]
	addpd	%xmm0, %xmm1
	.loc	16 70 29                # jacld.c:70:29
	movapd	%xmm12, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	addpd	%xmm1, %xmm0
	.loc	16 83 30 is_stmt 1      # jacld.c:83:30
	movapd	%xmm0, 96(%rsp)         # 16-byte Spill
	movsd	dx3(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	16 83 28 is_stmt 0      # jacld.c:83:28
	movapd	%xmm1, -32(%rsp)        # 16-byte Spill
	movapd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	.loc	16 83 42                # jacld.c:83:42
	movsd	dy3(%rip), %xmm4        # xmm4 = mem[0],zero
	.loc	16 83 40                # jacld.c:83:40
	movapd	%xmm4, 32(%rsp)         # 16-byte Spill
	movapd	%xmm11, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	16 83 34                # jacld.c:83:34
	addsd	%xmm0, %xmm1
	.loc	16 83 54                # jacld.c:83:54
	movsd	dz3(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	16 83 52                # jacld.c:83:52
	movsd	%xmm0, -112(%rsp)       # 8-byte Spill
	movapd	%xmm12, %xmm15
	mulsd	%xmm0, %xmm15
	.loc	16 83 46                # jacld.c:83:46
	addsd	%xmm1, %xmm15
	.loc	16 93 30 is_stmt 1      # jacld.c:93:30
	movsd	dx4(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	16 93 28 is_stmt 0      # jacld.c:93:28
	movapd	%xmm1, -48(%rsp)        # 16-byte Spill
	movapd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	.loc	16 93 42                # jacld.c:93:42
	movsd	dy4(%rip), %xmm4        # xmm4 = mem[0],zero
	.loc	16 93 40                # jacld.c:93:40
	movapd	%xmm4, 16(%rsp)         # 16-byte Spill
	movapd	%xmm11, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	16 93 34                # jacld.c:93:34
	addsd	%xmm0, %xmm1
	.loc	16 93 54                # jacld.c:93:54
	movsd	dz4(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	16 93 52                # jacld.c:93:52
	movapd	%xmm0, 80(%rsp)         # 16-byte Spill
	movapd	%xmm12, %xmm10
	mulsd	%xmm0, %xmm10
	.loc	16 93 46                # jacld.c:93:46
	addsd	%xmm1, %xmm10
	.loc	16 97 21 is_stmt 1      # jacld.c:97:21
	movsd	.LCPI11_6(%rip), %xmm8  # xmm8 = mem[0],zero
	movapd	%xmm2, %xmm0
	mulsd	%xmm8, %xmm0
	.loc	16 98 23                # jacld.c:98:23
	movsd	.LCPI11_7(%rip), %xmm6  # xmm6 = mem[0],zero
	movapd	%xmm11, %xmm4
	mulsd	%xmm6, %xmm4
	.loc	16 97 21                # jacld.c:97:21
	movapd	%xmm4, %xmm7
	subsd	%xmm0, %xmm7
	.loc	16 100 23               # jacld.c:100:23
	movapd	%xmm2, %xmm1
	mulsd	%xmm6, %xmm1
	.loc	16 101 23               # jacld.c:101:23
	movapd	%xmm11, %xmm0
	mulsd	%xmm8, %xmm0
	movapd	%xmm1, %xmm5
	subsd	%xmm0, %xmm5
	.loc	16 99 23                # jacld.c:99:23
	movapd	%xmm12, %xmm0
	mulsd	%xmm6, %xmm0
	.loc	16 99 17 is_stmt 0      # jacld.c:99:17
	movapd	%xmm7, %xmm6
	addsd	%xmm0, %xmm6
	movapd	%xmm6, 672(%rsp)        # 16-byte Spill
	.loc	16 102 17 is_stmt 1     # jacld.c:102:17
	addsd	%xmm0, %xmm5
	movapd	%xmm5, 688(%rsp)        # 16-byte Spill
	.loc	16 112 17               # jacld.c:112:17
	movsd	.LCPI11_9(%rip), %xmm6  # xmm6 = mem[0],zero
	movapd	%xmm12, %xmm5
	mulsd	%xmm6, %xmm5
	subsd	%xmm5, %xmm7
	movapd	%xmm7, 720(%rsp)        # 16-byte Spill
	.loc	16 114 17               # jacld.c:114:17
	movapd	%xmm2, %xmm0
	mulsd	%xmm6, %xmm0
	.loc	16 115 17               # jacld.c:115:17
	movapd	%xmm11, %xmm6
	mulsd	.LCPI11_10(%rip), %xmm6
	.loc	16 114 17               # jacld.c:114:17
	subsd	%xmm0, %xmm6
	.loc	16 116 17               # jacld.c:116:17
	subsd	%xmm5, %xmm6
	movapd	%xmm6, 656(%rsp)        # 16-byte Spill
	.loc	16 104 17               # jacld.c:104:17
	addsd	%xmm4, %xmm1
	.loc	16 118 17               # jacld.c:118:17
	subsd	%xmm0, %xmm4
	.loc	16 105 23               # jacld.c:105:23
	movapd	%xmm12, %xmm0
	mulsd	%xmm8, %xmm0
	subsd	%xmm0, %xmm1
	movapd	%xmm1, 704(%rsp)        # 16-byte Spill
	.loc	16 120 17               # jacld.c:120:17
	subsd	%xmm0, %xmm4
	movapd	%xmm4, 736(%rsp)        # 16-byte Spill
	.loc	16 123 30               # jacld.c:123:30
	movsd	dx5(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	16 123 28 is_stmt 0     # jacld.c:123:28
	movsd	%xmm1, -128(%rsp)       # 8-byte Spill
	movapd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	.loc	16 123 43               # jacld.c:123:43
	movsd	dy5(%rip), %xmm4        # xmm4 = mem[0],zero
	.loc	16 123 41               # jacld.c:123:41
	movsd	%xmm4, -120(%rsp)       # 8-byte Spill
	movapd	%xmm11, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	16 123 34               # jacld.c:123:34
	addsd	%xmm0, %xmm1
	.loc	16 88 17 is_stmt 1      # jacld.c:88:17
	movapd	%xmm2, %xmm0
	addsd	%xmm11, %xmm0
	movsd	.LCPI11_5(%rip), %xmm5  # xmm5 = mem[0],zero
	.loc	16 88 29 is_stmt 0      # jacld.c:88:29
	mulsd	%xmm12, %xmm5
	.loc	16 88 23                # jacld.c:88:23
	addsd	%xmm0, %xmm5
	.loc	16 107 27 is_stmt 1     # jacld.c:107:27
	movsd	%xmm5, 200(%rsp)        # 8-byte Spill
	addsd	%xmm12, %xmm0
	.loc	16 63 30                # jacld.c:63:30
	movsd	dt(%rip), %xmm8         # xmm8 = mem[0],zero
	.loc	16 132 28               # jacld.c:132:28
	movapd	%xmm8, %xmm7
	mulsd	%xmm12, %xmm7
	.loc	16 123 56               # jacld.c:123:56
	movapd	%xmm7, 128(%rsp)        # 16-byte Spill
	movsd	dz5(%rip), %xmm13       # xmm13 = mem[0],zero
	.loc	16 123 54 is_stmt 0     # jacld.c:123:54
	mulsd	%xmm13, %xmm12
	.loc	16 123 47               # jacld.c:123:47
	addsd	%xmm1, %xmm12
.Ltmp791:
	.loc	16 55 23 is_stmt 1 discriminator 1 # jacld.c:55:23
	movl	iend(%rip), %r9d
.Ltmp792:
	.loc	16 59 14                # jacld.c:59:14
	movslq	%edi, %rax
	.loc	16 63 33                # jacld.c:63:33
	movapd	%xmm8, %xmm4
	addsd	%xmm4, %xmm4
	.loc	16 63 39 is_stmt 0      # jacld.c:63:39
	movsd	%xmm4, 184(%rsp)        # 8-byte Spill
	mulsd	%xmm4, %xmm9
	.loc	16 63 28                # jacld.c:63:28
	addsd	.LCPI11_0(%rip), %xmm9
	movapd	%xmm9, 800(%rsp)        # 16-byte Spill
	movapd	%xmm9, %xmm6
	movsd	.LCPI11_1(%rip), %xmm9  # xmm9 = mem[0],zero
	.loc	16 69 27 is_stmt 1      # jacld.c:69:27
	mulsd	%xmm8, %xmm9
	.loc	16 72 20                # jacld.c:72:20
	movapd	%xmm9, 624(%rsp)        # 16-byte Spill
	movsd	.LCPI11_2(%rip), %xmm14 # xmm14 = mem[0],zero
	movapd	%xmm4, %xmm1
	mulsd	%xmm14, %xmm1
	movsd	%xmm1, 176(%rsp)        # 8-byte Spill
	.loc	16 73 20                # jacld.c:73:20
	mulsd	%xmm4, %xmm3
	.loc	16 70 9                 # jacld.c:70:9
	movapd	%xmm3, 784(%rsp)        # 16-byte Spill
	movapd	%xmm9, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	mulpd	96(%rsp), %xmm1         # 16-byte Folded Reload
	.loc	16 70 37 is_stmt 0      # jacld.c:70:37
	mulpd	.LCPI11_4(%rip), %xmm1
	movapd	%xmm1, 608(%rsp)        # 16-byte Spill
	.loc	16 83 20 is_stmt 1      # jacld.c:83:20
	mulsd	%xmm4, %xmm15
	movapd	%xmm15, 768(%rsp)       # 16-byte Spill
	.loc	16 88 9                 # jacld.c:88:9
	mulsd	%xmm5, %xmm9
	.loc	16 88 37 is_stmt 0      # jacld.c:88:37
	mulsd	%xmm14, %xmm9
	movapd	%xmm9, 592(%rsp)        # 16-byte Spill
	.loc	16 93 20 is_stmt 1      # jacld.c:93:20
	mulsd	%xmm4, %xmm10
	movapd	%xmm10, 752(%rsp)       # 16-byte Spill
	.loc	16 122 20               # jacld.c:122:20
	movapd	%xmm4, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	16 107 35               # jacld.c:107:35
	movsd	.LCPI11_8(%rip), %xmm15 # xmm15 = mem[0],zero
	mulsd	%xmm15, %xmm0
	movapd	%xmm0, 640(%rsp)        # 16-byte Spill
	.loc	16 122 43               # jacld.c:122:43
	mulsd	%xmm15, %xmm1
	movsd	%xmm1, 168(%rsp)        # 8-byte Spill
	.loc	16 123 20               # jacld.c:123:20
	mulsd	%xmm4, %xmm12
	.loc	16 128 21               # jacld.c:128:21
	movapd	%xmm12, 816(%rsp)       # 16-byte Spill
	leal	-1(%rax), %ecx
	.loc	16 128 14 is_stmt 0     # jacld.c:128:14
	movslq	%ecx, %rdx
	movapd	112(%rsp), %xmm0        # 16-byte Reload
	.loc	16 132 34 is_stmt 1     # jacld.c:132:34
	mulsd	%xmm7, %xmm0
	movapd	.LCPI11_11(%rip), %xmm1 # xmm1 = [9223372036854775808,9223372036854775808]
	xorpd	%xmm1, %xmm0
	movapd	%xmm0, 112(%rsp)        # 16-byte Spill
	movsd	tz2(%rip), %xmm9        # xmm9 = mem[0],zero
	.loc	16 135 28               # jacld.c:135:28
	mulsd	%xmm8, %xmm9
	movapd	%xmm9, 208(%rsp)        # 16-byte Spill
	movapd	%xmm9, %xmm0
	xorpd	%xmm1, %xmm0
	movapd	%xmm0, 576(%rsp)        # 16-byte Spill
	.loc	16 142 20               # jacld.c:142:20
	movapd	%xmm7, %xmm0
	mulsd	%xmm14, %xmm0
	movapd	%xmm0, 560(%rsp)        # 16-byte Spill
	.loc	16 143 20               # jacld.c:143:20
	movsd	-104(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm7, %xmm0
	movsd	%xmm0, -104(%rsp)       # 8-byte Spill
	.loc	16 154 20               # jacld.c:154:20
	movsd	-112(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm7, %xmm0
	movsd	%xmm0, -112(%rsp)       # 8-byte Spill
	movsd	.LCPI11_12(%rip), %xmm0 # xmm0 = mem[0],zero
	.loc	16 166 34               # jacld.c:166:34
	mulsd	%xmm9, %xmm0
	movsd	%xmm0, 160(%rsp)        # 8-byte Spill
	.loc	16 169 20               # jacld.c:169:20
	movapd	80(%rsp), %xmm0         # 16-byte Reload
	mulsd	%xmm7, %xmm0
	movapd	%xmm0, 80(%rsp)         # 16-byte Spill
	.loc	16 170 34               # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm4 # xmm4 = mem[0],zero
	movapd	%xmm9, %xmm0
	mulsd	%xmm4, %xmm0
	movapd	%xmm0, 544(%rsp)        # 16-byte Spill
	.loc	16 182 20               # jacld.c:182:20
	movapd	%xmm7, %xmm0
	.loc	16 98 23                # jacld.c:98:23
	movsd	.LCPI11_7(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	16 182 20               # jacld.c:182:20
	mulsd	%xmm10, %xmm0
	movapd	%xmm0, 528(%rsp)        # 16-byte Spill
	.loc	16 190 20               # jacld.c:190:20
	movapd	%xmm7, %xmm0
	.loc	16 115 17               # jacld.c:115:17
	movsd	.LCPI11_10(%rip), %xmm14 # xmm14 = mem[0],zero
	.loc	16 190 20               # jacld.c:190:20
	mulsd	%xmm14, %xmm0
	movapd	%xmm0, 512(%rsp)        # 16-byte Spill
	.loc	16 193 20               # jacld.c:193:20
	movapd	%xmm7, %xmm0
	mulsd	%xmm15, %xmm0
	movapd	%xmm0, 496(%rsp)        # 16-byte Spill
	.loc	16 194 20               # jacld.c:194:20
	mulsd	%xmm7, %xmm13
	movsd	%xmm13, 192(%rsp)       # 8-byte Spill
	.loc	16 203 28               # jacld.c:203:28
	mulsd	%xmm8, %xmm11
	.loc	16 203 34 is_stmt 0     # jacld.c:203:34
	movapd	%xmm11, -64(%rsp)       # 16-byte Spill
	movapd	64(%rsp), %xmm0         # 16-byte Reload
	mulsd	%xmm11, %xmm0
	xorpd	%xmm1, %xmm0
	movapd	%xmm0, 64(%rsp)         # 16-byte Spill
	movsd	ty2(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	16 205 28 is_stmt 1     # jacld.c:205:28
	mulsd	%xmm8, %xmm0
	movapd	%xmm0, 480(%rsp)        # 16-byte Spill
	movapd	%xmm0, %xmm5
	xorpd	%xmm1, %xmm5
	movapd	%xmm5, 464(%rsp)        # 16-byte Spill
	.loc	16 214 20               # jacld.c:214:20
	movapd	48(%rsp), %xmm5         # 16-byte Reload
	mulsd	%xmm11, %xmm5
	movapd	%xmm5, 48(%rsp)         # 16-byte Spill
	.loc	16 227 20               # jacld.c:227:20
	movapd	32(%rsp), %xmm5         # 16-byte Reload
	mulsd	%xmm11, %xmm5
	movapd	%xmm5, 32(%rsp)         # 16-byte Spill
	.loc	16 229 34               # jacld.c:229:34
	mulsd	%xmm4, %xmm0
	movapd	%xmm0, 448(%rsp)        # 16-byte Spill
	.loc	16 238 20               # jacld.c:238:20
	movapd	16(%rsp), %xmm0         # 16-byte Reload
	mulsd	%xmm11, %xmm0
	movapd	%xmm0, 16(%rsp)         # 16-byte Spill
	.loc	16 251 20               # jacld.c:251:20
	movapd	%xmm11, %xmm0
	mulsd	%xmm10, %xmm0
	movapd	%xmm0, 432(%rsp)        # 16-byte Spill
	.loc	16 256 20               # jacld.c:256:20
	movapd	%xmm11, %xmm0
	mulsd	%xmm14, %xmm0
	movapd	%xmm0, 416(%rsp)        # 16-byte Spill
	.loc	16 262 20               # jacld.c:262:20
	movapd	%xmm11, %xmm0
	mulsd	%xmm15, %xmm0
	movapd	%xmm0, 400(%rsp)        # 16-byte Spill
	.loc	16 263 20               # jacld.c:263:20
	movsd	-120(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm11, %xmm0
	movsd	%xmm0, -120(%rsp)       # 8-byte Spill
	.loc	16 272 28               # jacld.c:272:28
	mulsd	%xmm8, %xmm2
	.loc	16 272 34 is_stmt 0     # jacld.c:272:34
	movapd	%xmm2, 144(%rsp)        # 16-byte Spill
	movapd	(%rsp), %xmm0           # 16-byte Reload
	mulsd	%xmm2, %xmm0
	xorpd	%xmm1, %xmm0
	movapd	%xmm0, (%rsp)           # 16-byte Spill
	.loc	16 273 28 is_stmt 1     # jacld.c:273:28
	mulsd	tx2(%rip), %xmm8
	movapd	%xmm8, 256(%rsp)        # 16-byte Spill
	movapd	%xmm8, %xmm5
	xorpd	%xmm1, %xmm5
	movapd	%xmm5, 384(%rsp)        # 16-byte Spill
	.loc	16 285 20               # jacld.c:285:20
	movapd	-16(%rsp), %xmm0        # 16-byte Reload
	mulsd	%xmm2, %xmm0
	movapd	%xmm0, -16(%rsp)        # 16-byte Spill
	.loc	16 290 34               # jacld.c:290:34
	mulsd	%xmm4, %xmm8
	movapd	%xmm8, 368(%rsp)        # 16-byte Spill
	.loc	16 298 20               # jacld.c:298:20
	movapd	-32(%rsp), %xmm0        # 16-byte Reload
	mulsd	%xmm2, %xmm0
	movapd	%xmm0, -32(%rsp)        # 16-byte Spill
	.loc	16 308 48               # jacld.c:308:48
	movapd	-48(%rsp), %xmm0        # 16-byte Reload
	mulsd	%xmm2, %xmm0
	movapd	%xmm0, -48(%rsp)        # 16-byte Spill
	.loc	16 323 20               # jacld.c:323:20
	movapd	%xmm2, %xmm1
	mulsd	%xmm14, %xmm1
	movapd	%xmm1, 352(%rsp)        # 16-byte Spill
	.loc	16 326 20               # jacld.c:326:20
	movapd	%xmm2, %xmm1
	mulsd	%xmm10, %xmm1
	movapd	%xmm1, 336(%rsp)        # 16-byte Spill
	.loc	16 332 20               # jacld.c:332:20
	movapd	%xmm2, %xmm1
	mulsd	%xmm15, %xmm1
	movapd	%xmm1, 320(%rsp)        # 16-byte Spill
	.loc	16 333 20               # jacld.c:333:20
	movsd	-128(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm2, %xmm0
	movsd	%xmm0, -128(%rsp)       # 8-byte Spill
.Ltmp793:
	.loc	16 54 3 discriminator 1 # jacld.c:54:3
	movslq	ist(%rip), %r10
	movslq	%r9d, %r13
.Ltmp794:
	.loc	16 139 9                # jacld.c:139:9
	movlhps	%xmm9, %xmm9            # xmm9 = xmm9[0,0]
	movaps	%xmm9, 304(%rsp)        # 16-byte Spill
	.loc	16 140 20               # jacld.c:140:20
	movlhps	%xmm7, %xmm7            # xmm7 = xmm7[0,0]
	movaps	%xmm7, 288(%rsp)        # 16-byte Spill
	.loc	16 211 20               # jacld.c:211:20
	movapd	%xmm11, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 272(%rsp)        # 16-byte Spill
	.loc	16 281 20               # jacld.c:281:20
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	movaps	%xmm2, 240(%rsp)        # 16-byte Spill
	movapd	96(%rsp), %xmm14        # 16-byte Reload
	.loc	16 82 33                # jacld.c:82:33
	movapd	%xmm14, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	movapd	%xmm0, 224(%rsp)        # 16-byte Spill
.Ltmp795:
	.loc	16 54 3 discriminator 1 # jacld.c:54:3
	imulq	$520, %r11, %rcx        # imm = 0x208
	leaq	(%rcx,%r10,8), %rcx
	imulq	$33800, %rax, %r14      # imm = 0x8408
	imulq	$169000, %rax, %rsi     # imm = 0x29428
	imulq	$2600, %r11, %rax       # imm = 0xA28
	leaq	(%r10,%r10,4), %rdi
.Ltmp796:
	leaq	(%rax,%rdi,8), %r15
	imulq	$33800, %rdx, %r12      # imm = 0x8408
	imulq	$169000, %rdx, %rdx     # imm = 0x29428
.Ltmp797:
	.loc	16 72 9                 # jacld.c:72:9
	movsd	.LCPI11_0(%rip), %xmm15 # xmm15 = mem[0],zero
.Ltmp798:
	.p2align	4, 0x90
.LBB11_2:                               # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_3 Depth 2
	.loc	16 55 5 discriminator 1 # jacld.c:55:5
	cmpl	%r9d, %r10d
	movq	%r12, %rbx
	movq	%r15, %rax
	movq	%r14, %rdi
	movq	%r10, %rbp
.Ltmp799:
	.loc	16 132 34               # jacld.c:132:34
	movapd	.LCPI11_11(%rip), %xmm10 # xmm10 = [9223372036854775808,9223372036854775808]
	jge	.LBB11_4
	.p2align	4, 0x90
.LBB11_3:                               # %for.body3
                                        #   Parent Loop BB11_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	16 59 14                # jacld.c:59:14
	movsd	rho_i(%rcx,%rdi), %xmm5 # xmm5 = mem[0],zero
.Ltmp800:
	#DEBUG_VALUE: jacld:tmp1 <- %XMM5
	.loc	16 60 19                # jacld.c:60:19
	movapd	%xmm5, %xmm0
	mulsd	%xmm0, %xmm0
.Ltmp801:
	#DEBUG_VALUE: jacld:tmp2 <- %XMM0
	.loc	16 61 19                # jacld.c:61:19
	movapd	%xmm5, %xmm8
	.loc	16 63 21                # jacld.c:63:21
	movsd	%xmm6, d(%rax,%rax,4)
	.loc	16 61 19                # jacld.c:61:19
	mulsd	%xmm0, %xmm8
.Ltmp802:
	#DEBUG_VALUE: jacld:tmp3 <- %XMM8
	.loc	16 64 21                # jacld.c:64:21
	movq	$0, d+40(%rax,%rax,4)
	.loc	16 72 26                # jacld.c:72:26
	movapd	%xmm5, %xmm4
	mulsd	176(%rsp), %xmm4        # 8-byte Folded Reload
	.loc	16 72 33 is_stmt 0      # jacld.c:72:33
	movapd	%xmm4, %xmm2
	mulsd	%xmm14, %xmm2
	.loc	16 72 9                 # jacld.c:72:9
	addsd	%xmm15, %xmm2
	.loc	16 73 9 is_stmt 1       # jacld.c:73:9
	addsd	%xmm3, %xmm2
	.loc	16 71 21                # jacld.c:71:21
	movsd	%xmm2, d+48(%rax,%rax,4)
	.loc	16 65 21                # jacld.c:65:21
	xorpd	%xmm1, %xmm1
	movupd	%xmm1, d+80(%rax,%rax,4)
	.loc	16 66 21                # jacld.c:66:21
	movupd	%xmm1, d+120(%rax,%rax,4)
	.loc	16 67 21                # jacld.c:67:21
	movupd	%xmm1, d+160(%rax,%rax,4)
	.loc	16 70 43                # jacld.c:70:43
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	608(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	16 70 52 is_stmt 0      # jacld.c:70:52
	movupd	u+8(%rsi,%rax), %xmm2
	.loc	16 70 50                # jacld.c:70:50
	mulpd	%xmm2, %xmm3
	.loc	16 69 21 is_stmt 1      # jacld.c:69:21
	movupd	%xmm3, d+8(%rax,%rax,4)
	.loc	16 82 33                # jacld.c:82:33
	movapd	%xmm4, %xmm3
	mulsd	224(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	16 80 21                # jacld.c:80:21
	movq	$0, d+56(%rax,%rax,4)
	.loc	16 82 9                 # jacld.c:82:9
	addsd	%xmm15, %xmm3
	.loc	16 83 9                 # jacld.c:83:9
	addsd	768(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	16 81 21                # jacld.c:81:21
	movsd	%xmm3, d+96(%rax,%rax,4)
	.loc	16 84 21                # jacld.c:84:21
	movq	$0, d+136(%rax,%rax,4)
	.loc	16 85 21                # jacld.c:85:21
	movq	$0, d+176(%rax,%rax,4)
	.loc	16 88 43                # jacld.c:88:43
	movapd	%xmm0, %xmm3
	mulsd	592(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	16 88 52 is_stmt 0      # jacld.c:88:52
	movsd	u+24(%rsi,%rax), %xmm9  # xmm9 = mem[0],zero
	.loc	16 88 50                # jacld.c:88:50
	mulsd	%xmm9, %xmm3
	.loc	16 87 21 is_stmt 1      # jacld.c:87:21
	movsd	%xmm3, d+24(%rax,%rax,4)
	.loc	16 92 33                # jacld.c:92:33
	mulsd	200(%rsp), %xmm4        # 8-byte Folded Reload
	.loc	16 92 9 is_stmt 0       # jacld.c:92:9
	addsd	%xmm15, %xmm4
	.loc	16 89 21 is_stmt 1      # jacld.c:89:21
	movq	$0, d+64(%rax,%rax,4)
	.loc	16 93 9                 # jacld.c:93:9
	addsd	752(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	16 99 60                # jacld.c:99:60
	movapd	%xmm2, %xmm7
	mulsd	%xmm7, %xmm7
	.loc	16 99 43 is_stmt 0      # jacld.c:99:43
	mulsd	672(%rsp), %xmm7        # 16-byte Folded Reload
	.loc	16 102 60 is_stmt 1     # jacld.c:102:60
	movapd	%xmm2, %xmm3
	.loc	16 90 21                # jacld.c:90:21
	movq	$0, d+104(%rax,%rax,4)
	.loc	16 102 60               # jacld.c:102:60
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	movapd	%xmm3, %xmm6
	mulsd	%xmm6, %xmm6
	.loc	16 102 43 is_stmt 0     # jacld.c:102:43
	mulsd	688(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	16 107 43 is_stmt 1     # jacld.c:107:43
	movapd	%xmm0, %xmm1
	.loc	16 91 21                # jacld.c:91:21
	movsd	%xmm4, d+144(%rax,%rax,4)
	.loc	16 109 32               # jacld.c:109:32
	mulsd	184(%rsp), %xmm0        # 8-byte Folded Reload
.Ltmp803:
	#DEBUG_VALUE: jacld:tmp2 <- %XMM1
	.loc	16 109 39 is_stmt 0     # jacld.c:109:39
	mulsd	%xmm0, %xmm2
	.loc	16 113 39 is_stmt 1     # jacld.c:113:39
	mulsd	%xmm0, %xmm3
	.loc	16 94 21                # jacld.c:94:21
	movq	$0, d+184(%rax,%rax,4)
	.loc	16 117 39               # jacld.c:117:39
	mulsd	%xmm9, %xmm0
	.loc	16 105 63               # jacld.c:105:63
	mulsd	%xmm9, %xmm9
	.loc	16 105 47 is_stmt 0     # jacld.c:105:47
	mulsd	704(%rsp), %xmm9        # 16-byte Folded Reload
	.loc	16 100 15 is_stmt 1     # jacld.c:100:15
	addsd	%xmm7, %xmm6
	.loc	16 103 15               # jacld.c:103:15
	addsd	%xmm6, %xmm9
	.loc	16 107 43               # jacld.c:107:43
	mulsd	640(%rsp), %xmm1        # 16-byte Folded Reload
.Ltmp804:
	.loc	16 107 50 is_stmt 0     # jacld.c:107:50
	mulsd	u+32(%rsi,%rax), %xmm1
	.loc	16 106 15 is_stmt 1     # jacld.c:106:15
	mulsd	%xmm8, %xmm9
	.loc	16 107 13               # jacld.c:107:13
	addsd	%xmm9, %xmm1
	.loc	16 97 9                 # jacld.c:97:9
	mulsd	624(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	16 110 9                # jacld.c:110:9
	mulsd	720(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	16 96 21                # jacld.c:96:21
	movsd	%xmm1, d+32(%rax,%rax,4)
	.loc	16 109 21               # jacld.c:109:21
	movsd	%xmm2, d+72(%rax,%rax,4)
	.loc	16 114 9                # jacld.c:114:9
	mulsd	656(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	16 118 9                # jacld.c:118:9
	mulsd	736(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	16 113 21               # jacld.c:113:21
	movsd	%xmm3, d+112(%rax,%rax,4)
	.loc	16 122 51               # jacld.c:122:51
	mulsd	168(%rsp), %xmm5        # 8-byte Folded Reload
.Ltmp805:
	.loc	16 122 9 is_stmt 0      # jacld.c:122:9
	addsd	%xmm15, %xmm5
	.loc	16 123 9 is_stmt 1      # jacld.c:123:9
	addsd	816(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	16 117 21               # jacld.c:117:21
	movsd	%xmm0, d+152(%rax,%rax,4)
	.loc	16 128 14               # jacld.c:128:14
	movsd	rho_i(%rcx,%rbx), %xmm12 # xmm12 = mem[0],zero
.Ltmp806:
	#DEBUG_VALUE: jacld:tmp1 <- %XMM12
	.loc	16 129 19               # jacld.c:129:19
	movapd	%xmm12, %xmm6
	mulsd	%xmm6, %xmm6
.Ltmp807:
	#DEBUG_VALUE: jacld:tmp2 <- %XMM6
	.loc	16 130 19               # jacld.c:130:19
	movapd	%xmm12, %xmm15
	mulsd	%xmm6, %xmm15
.Ltmp808:
	#DEBUG_VALUE: jacld:tmp3 <- %XMM15
	.loc	16 121 21               # jacld.c:121:21
	movsd	%xmm5, d+192(%rax,%rax,4)
	.loc	16 132 21               # jacld.c:132:21
	movapd	112(%rsp), %xmm0        # 16-byte Reload
	movsd	%xmm0, a(%rax,%rax,4)
	.loc	16 133 21               # jacld.c:133:21
	movq	$0, a+40(%rax,%rax,4)
	.loc	16 135 21               # jacld.c:135:21
	movapd	576(%rsp), %xmm0        # 16-byte Reload
	movsd	%xmm0, a+120(%rax,%rax,4)
	.loc	16 139 33               # jacld.c:139:33
	movsd	u+24(%rdx,%rax), %xmm8  # xmm8 = mem[0],zero
	.loc	16 140 30               # jacld.c:140:30
	movapd	%xmm6, %xmm3
	mulsd	.LCPI11_14(%rip), %xmm3
	.loc	16 141 54               # jacld.c:141:54
	movapd	%xmm12, %xmm14
	mulsd	%xmm8, %xmm14
	movapd	208(%rsp), %xmm13       # 16-byte Reload
	.loc	16 141 34 is_stmt 0     # jacld.c:141:34
	movapd	%xmm13, %xmm0
	mulsd	%xmm14, %xmm0
	.loc	16 142 26 is_stmt 1     # jacld.c:142:26
	movapd	%xmm12, %xmm1
	.loc	16 141 34               # jacld.c:141:34
	xorpd	%xmm10, %xmm0
	.loc	16 142 26               # jacld.c:142:26
	mulsd	560(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	16 142 9 is_stmt 0      # jacld.c:142:9
	movapd	%xmm0, %xmm4
	subsd	%xmm1, %xmm4
	.loc	16 143 9 is_stmt 1      # jacld.c:143:9
	subsd	-104(%rsp), %xmm4       # 8-byte Folded Reload
	.loc	16 141 21               # jacld.c:141:21
	movsd	%xmm4, a+48(%rax,%rax,4)
	.loc	16 65 21                # jacld.c:65:21
	xorpd	%xmm2, %xmm2
	.loc	16 134 21               # jacld.c:134:21
	movupd	%xmm2, a+80(%rax,%rax,4)
	.loc	16 139 17               # jacld.c:139:17
	movupd	u+8(%rdx,%rax), %xmm11
	.loc	16 139 32 is_stmt 0     # jacld.c:139:32
	movapd	%xmm11, -96(%rsp)       # 16-byte Spill
	movapd	%xmm8, %xmm1
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	.loc	16 136 21 is_stmt 1     # jacld.c:136:21
	movupd	%xmm2, a+160(%rax,%rax,4)
	.loc	16 139 32               # jacld.c:139:32
	mulpd	%xmm11, %xmm1
	.loc	16 139 51 is_stmt 0     # jacld.c:139:51
	movapd	%xmm6, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	.loc	16 140 37 is_stmt 1     # jacld.c:140:37
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	.loc	16 139 51               # jacld.c:139:51
	mulpd	%xmm1, %xmm4
	.loc	16 140 37               # jacld.c:140:37
	mulpd	%xmm11, %xmm3
	.loc	16 140 20 is_stmt 0     # jacld.c:140:20
	mulpd	288(%rsp), %xmm3        # 16-byte Folded Reload
	.loc	16 153 28 is_stmt 1     # jacld.c:153:28
	movapd	%xmm12, %xmm1
	.loc	16 72 20                # jacld.c:72:20
	movsd	.LCPI11_2(%rip), %xmm5  # xmm5 = mem[0],zero
	.loc	16 153 28               # jacld.c:153:28
	mulsd	%xmm5, %xmm1
	movapd	304(%rsp), %xmm2        # 16-byte Reload
	.loc	16 139 9                # jacld.c:139:9
	mulpd	%xmm2, %xmm4
	movapd	128(%rsp), %xmm9        # 16-byte Reload
	.loc	16 153 20               # jacld.c:153:20
	mulsd	%xmm9, %xmm1
	.loc	16 153 9 is_stmt 0      # jacld.c:153:9
	subsd	%xmm1, %xmm0
	.loc	16 154 9 is_stmt 1      # jacld.c:154:9
	subsd	-112(%rsp), %xmm0       # 8-byte Folded Reload
	.loc	16 145 54               # jacld.c:145:54
	movapd	%xmm12, %xmm1
	.loc	16 140 9                # jacld.c:140:9
	subpd	%xmm3, %xmm4
	.loc	16 145 54               # jacld.c:145:54
	movlhps	%xmm1, %xmm1            # xmm1 = xmm1[0,0]
	mulpd	%xmm11, %xmm1
	.loc	16 145 34 is_stmt 0     # jacld.c:145:34
	movapd	%xmm2, %xmm3
	mulpd	%xmm1, %xmm3
	.loc	16 138 21 is_stmt 1     # jacld.c:138:21
	movupd	%xmm4, a+8(%rax,%rax,4)
	.loc	16 145 34               # jacld.c:145:34
	xorpd	%xmm10, %xmm3
	.loc	16 159 42               # jacld.c:159:42
	movapd	%xmm14, %xmm4
	mulsd	%xmm4, %xmm4
	.loc	16 160 20               # jacld.c:160:20
	movsd	qs(%rcx,%rbx), %xmm7    # xmm7 = mem[0],zero
	.loc	16 160 18 is_stmt 0     # jacld.c:160:18
	movsd	%xmm7, -80(%rsp)        # 8-byte Spill
	movapd	%xmm7, %xmm5
	.loc	16 151 21 is_stmt 1     # jacld.c:151:21
	movq	$0, a+56(%rax,%rax,4)
	.loc	16 160 18               # jacld.c:160:18
	movsd	.LCPI11_15(%rip), %xmm2 # xmm2 = mem[0],zero
	mulsd	%xmm2, %xmm5
	.loc	16 160 34 is_stmt 0     # jacld.c:160:34
	mulsd	%xmm12, %xmm5
	.loc	16 160 13               # jacld.c:160:13
	subsd	%xmm4, %xmm5
	.loc	16 152 21 is_stmt 1     # jacld.c:152:21
	movsd	%xmm0, a+96(%rax,%rax,4)
	.loc	16 159 9                # jacld.c:159:9
	mulsd	%xmm13, %xmm5
	xorpd	%xmm10, %xmm5
	.loc	16 161 36               # jacld.c:161:36
	movapd	%xmm6, %xmm0
	mulsd	.LCPI11_16(%rip), %xmm0
	.loc	16 145 21               # jacld.c:145:21
	movupd	%xmm3, a+128(%rax,%rax,4)
	.loc	16 161 43               # jacld.c:161:43
	mulsd	%xmm8, %xmm0
	.loc	16 161 20 is_stmt 0     # jacld.c:161:20
	mulsd	%xmm9, %xmm0
	.loc	16 161 9                # jacld.c:161:9
	subsd	%xmm0, %xmm5
	.loc	16 156 21 is_stmt 1     # jacld.c:156:21
	movq	$0, a+176(%rax,%rax,4)
	.loc	16 158 21               # jacld.c:158:21
	movsd	%xmm5, a+24(%rax,%rax,4)
	.loc	16 170 21               # jacld.c:170:21
	movapd	544(%rsp), %xmm0        # 16-byte Reload
	movsd	%xmm0, a+184(%rax,%rax,4)
	.loc	16 173 24               # jacld.c:173:24
	movapd	%xmm7, %xmm5
	movsd	.LCPI11_18(%rip), %xmm0 # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm5
	.loc	16 173 47 is_stmt 0     # jacld.c:173:47
	movsd	u+32(%rdx,%rax), %xmm4  # xmm4 = mem[0],zero
	.loc	16 173 45               # jacld.c:173:45
	movapd	%xmm4, %xmm0
	mulsd	.LCPI11_19(%rip), %xmm0
	.loc	16 176 31 is_stmt 1     # jacld.c:176:31
	movapd	%xmm15, %xmm3
	.loc	16 112 17               # jacld.c:112:17
	movsd	.LCPI11_9(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	16 176 31               # jacld.c:176:31
	mulsd	%xmm10, %xmm3
	.loc	16 176 56 is_stmt 0     # jacld.c:176:56
	movapd	%xmm11, %xmm7
	mulsd	%xmm7, %xmm7
	.loc	16 173 40 is_stmt 1     # jacld.c:173:40
	subsd	%xmm0, %xmm5
	.loc	16 176 38               # jacld.c:176:38
	mulsd	%xmm3, %xmm7
	.loc	16 177 31               # jacld.c:177:31
	movapd	%xmm15, %xmm0
	.loc	16 98 23                # jacld.c:98:23
	movsd	.LCPI11_7(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	16 177 31               # jacld.c:177:31
	mulsd	%xmm3, %xmm0
	.loc	16 177 56 is_stmt 0     # jacld.c:177:56
	movapd	%xmm11, %xmm3
	shufpd	$1, %xmm3, %xmm3        # xmm3 = xmm3[1,0]
	movapd	%xmm3, %xmm13
	mulsd	%xmm13, %xmm13
	.loc	16 177 38               # jacld.c:177:38
	mulsd	%xmm0, %xmm13
	.loc	16 165 18 is_stmt 1     # jacld.c:165:18
	movapd	%xmm1, %xmm11
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	.loc	16 167 9                # jacld.c:167:9
	mulsd	160(%rsp), %xmm14       # 8-byte Folded Reload
	.loc	16 170 34               # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm2 # xmm2 = mem[0],zero
	movapd	%xmm2, %xmm0
	.loc	16 165 18               # jacld.c:165:18
	mulsd	%xmm0, %xmm11
	.loc	16 177 13               # jacld.c:177:13
	subsd	%xmm13, %xmm7
	.loc	16 168 34               # jacld.c:168:34
	movapd	%xmm12, %xmm13
	movsd	.LCPI11_17(%rip), %xmm2 # xmm2 = mem[0],zero
	mulsd	%xmm2, %xmm13
	.loc	16 174 13               # jacld.c:174:13
	mulsd	%xmm8, %xmm5
	.loc	16 174 31 is_stmt 0     # jacld.c:174:31
	mulsd	%xmm6, %xmm5
	.loc	16 115 17 is_stmt 1     # jacld.c:115:17
	movsd	.LCPI11_10(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	16 178 34               # jacld.c:178:34
	mulsd	%xmm10, %xmm15
.Ltmp809:
	.loc	16 178 59 is_stmt 0     # jacld.c:178:59
	mulsd	%xmm8, %xmm8
	.loc	16 178 41               # jacld.c:178:41
	mulsd	%xmm15, %xmm8
	movapd	208(%rsp), %xmm9        # 16-byte Reload
	.loc	16 173 9 is_stmt 1      # jacld.c:173:9
	mulsd	%xmm9, %xmm5
	.loc	16 178 13               # jacld.c:178:13
	subsd	%xmm8, %xmm7
	.loc	16 179 21               # jacld.c:179:21
	movapd	%xmm6, %xmm8
	.loc	16 107 35               # jacld.c:107:35
	movsd	.LCPI11_8(%rip), %xmm2  # xmm2 = mem[0],zero
	.loc	16 179 21               # jacld.c:179:21
	mulsd	%xmm2, %xmm8
	.loc	16 179 28 is_stmt 0     # jacld.c:179:28
	mulsd	%xmm4, %xmm8
	.loc	16 132 34 is_stmt 1     # jacld.c:132:34
	movapd	.LCPI11_11(%rip), %xmm10 # xmm10 = [9223372036854775808,9223372036854775808]
	.loc	16 173 9                # jacld.c:173:9
	xorpd	%xmm10, %xmm5
	.loc	16 179 13               # jacld.c:179:13
	subsd	%xmm8, %xmm7
	.loc	16 176 9                # jacld.c:176:9
	mulsd	128(%rsp), %xmm7        # 16-byte Folded Reload
	.loc	16 175 9                # jacld.c:175:9
	subsd	%xmm7, %xmm5
	.loc	16 172 21               # jacld.c:172:21
	movsd	%xmm5, a+32(%rax,%rax,4)
	.loc	16 181 22               # jacld.c:181:22
	movsd	u+8(%rdx,%rax), %xmm7   # xmm7 = mem[0],zero
	.loc	16 181 38 is_stmt 0     # jacld.c:181:38
	movsd	u+24(%rdx,%rax), %xmm5  # xmm5 = mem[0],zero
	.loc	16 163 9 is_stmt 1      # jacld.c:163:9
	movapd	%xmm9, %xmm15
	unpcklpd	%xmm7, %xmm15   # xmm15 = xmm15[0],xmm7[0]
	.loc	16 181 37               # jacld.c:181:37
	mulsd	%xmm5, %xmm7
	.loc	16 181 18 is_stmt 0     # jacld.c:181:18
	mulsd	%xmm0, %xmm7
	.loc	16 163 18 is_stmt 1     # jacld.c:163:18
	movapd	%xmm0, %xmm8
	unpcklpd	%xmm6, %xmm8    # xmm8 = xmm8[0],xmm6[0]
	unpcklpd	528(%rsp), %xmm1 # 16-byte Folded Reload
                                        # xmm1 = xmm1[0],mem[0]
	.loc	16 181 56               # jacld.c:181:56
	mulsd	%xmm6, %xmm7
	.loc	16 163 18               # jacld.c:163:18
	mulpd	%xmm8, %xmm1
	.loc	16 163 9 is_stmt 0      # jacld.c:163:9
	mulpd	%xmm1, %xmm15
	.loc	16 287 9 is_stmt 1      # jacld.c:287:9
	movsd	.LCPI11_20(%rip), %xmm8 # xmm8 = mem[0],zero
	.loc	16 184 37               # jacld.c:184:37
	mulsd	%xmm5, %xmm3
	.loc	16 181 9                # jacld.c:181:9
	mulsd	%xmm9, %xmm7
	.loc	16 170 34               # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	.loc	16 184 18               # jacld.c:184:18
	mulsd	%xmm0, %xmm3
	.loc	16 184 56 is_stmt 0     # jacld.c:184:56
	mulsd	%xmm6, %xmm3
	.loc	16 184 9                # jacld.c:184:9
	mulsd	%xmm9, %xmm3
	.loc	16 181 9 is_stmt 1      # jacld.c:181:9
	xorpd	%xmm10, %xmm7
	.loc	16 184 9                # jacld.c:184:9
	xorpd	%xmm10, %xmm3
	movapd	-96(%rsp), %xmm0        # 16-byte Reload
	.loc	16 165 9                # jacld.c:165:9
	movsd	%xmm9, %xmm0            # xmm0 = xmm9[0],xmm0[1]
	movsd	%xmm11, %xmm1           # xmm1 = xmm11[0],xmm1[1]
	.loc	16 163 9                # jacld.c:163:9
	unpcklpd	%xmm7, %xmm8    # xmm8 = xmm8[0],xmm7[0]
	.loc	16 165 9                # jacld.c:165:9
	mulpd	%xmm0, %xmm1
	.loc	16 287 9                # jacld.c:287:9
	movsd	.LCPI11_20(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	16 165 9                # jacld.c:165:9
	movapd	%xmm10, %xmm0
	unpcklpd	%xmm3, %xmm0    # xmm0 = xmm0[0],xmm3[0]
	.loc	16 187 36               # jacld.c:187:36
	mulsd	%xmm12, %xmm4
	.loc	16 163 9                # jacld.c:163:9
	subpd	%xmm15, %xmm8
	.loc	16 173 45               # jacld.c:173:45
	movsd	.LCPI11_19(%rip), %xmm2 # xmm2 = mem[0],zero
	.loc	16 187 16               # jacld.c:187:16
	mulsd	%xmm2, %xmm4
	movsd	-80(%rsp), %xmm7        # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.loc	16 188 34               # jacld.c:188:34
	mulsd	%xmm12, %xmm7
	.loc	16 189 35               # jacld.c:189:35
	movapd	%xmm5, %xmm3
	mulsd	%xmm3, %xmm3
	.loc	16 165 9                # jacld.c:165:9
	subpd	%xmm1, %xmm0
	.loc	16 189 52               # jacld.c:189:52
	mulsd	%xmm6, %xmm3
	.loc	16 189 18 is_stmt 0     # jacld.c:189:18
	addsd	%xmm7, %xmm3
	.loc	16 160 18 is_stmt 1     # jacld.c:160:18
	movsd	.LCPI11_15(%rip), %xmm1 # xmm1 = mem[0],zero
	.loc	16 188 16               # jacld.c:188:16
	mulsd	%xmm1, %xmm3
	.loc	16 162 21               # jacld.c:162:21
	movupd	%xmm8, a+64(%rax,%rax,4)
	.loc	16 188 11               # jacld.c:188:11
	subsd	%xmm3, %xmm4
	.loc	16 168 20               # jacld.c:168:20
	unpcklpd	%xmm9, %xmm13   # xmm13 = xmm13[0],xmm9[0]
	movapd	128(%rsp), %xmm1        # 16-byte Reload
	unpcklpd	%xmm4, %xmm1    # xmm1 = xmm1[0],xmm4[0]
	.loc	16 164 21               # jacld.c:164:21
	movupd	%xmm0, a+104(%rax,%rax,4)
	.loc	16 168 20               # jacld.c:168:20
	mulpd	%xmm13, %xmm1
	.loc	16 168 9 is_stmt 0      # jacld.c:168:9
	unpcklpd	%xmm10, %xmm14  # xmm14 = xmm14[0],xmm10[0]
	.loc	16 190 42 is_stmt 1     # jacld.c:190:42
	mulsd	512(%rsp), %xmm6        # 16-byte Folded Reload
.Ltmp810:
	.loc	16 168 9                # jacld.c:168:9
	subpd	%xmm1, %xmm14
	.loc	16 190 49               # jacld.c:190:49
	mulsd	%xmm5, %xmm6
	.loc	16 169 9                # jacld.c:169:9
	movapd	80(%rsp), %xmm0         # 16-byte Reload
	unpcklpd	%xmm6, %xmm0    # xmm0 = xmm0[0],xmm6[0]
	.loc	16 192 36               # jacld.c:192:36
	mulsd	%xmm12, %xmm5
	.loc	16 169 9                # jacld.c:169:9
	subpd	%xmm0, %xmm14
	.loc	16 192 16               # jacld.c:192:16
	mulsd	%xmm2, %xmm5
	.loc	16 192 9 is_stmt 0      # jacld.c:192:9
	mulsd	%xmm9, %xmm5
	.loc	16 193 28 is_stmt 1     # jacld.c:193:28
	mulsd	496(%rsp), %xmm12       # 16-byte Folded Reload
.Ltmp811:
	.loc	16 132 34               # jacld.c:132:34
	movapd	.LCPI11_11(%rip), %xmm11 # xmm11 = [9223372036854775808,9223372036854775808]
	.loc	16 192 9                # jacld.c:192:9
	xorpd	%xmm11, %xmm5
	.loc	16 193 9                # jacld.c:193:9
	subsd	%xmm12, %xmm5
	.loc	16 194 9                # jacld.c:194:9
	subsd	192(%rsp), %xmm5        # 8-byte Folded Reload
	.loc	16 199 14               # jacld.c:199:14
	movsd	rho_i-520(%rcx,%rdi), %xmm15 # xmm15 = mem[0],zero
.Ltmp812:
	#DEBUG_VALUE: jacld:tmp1 <- %XMM15
	.loc	16 200 19               # jacld.c:200:19
	movapd	%xmm15, %xmm9
	.loc	16 166 21               # jacld.c:166:21
	movupd	%xmm14, a+144(%rax,%rax,4)
	.loc	16 200 19               # jacld.c:200:19
	mulsd	%xmm9, %xmm9
.Ltmp813:
	#DEBUG_VALUE: jacld:tmp2 <- %XMM9
	.loc	16 203 21               # jacld.c:203:21
	movapd	64(%rsp), %xmm0         # 16-byte Reload
	movsd	%xmm0, b(%rax,%rax,4)
	.loc	16 204 21               # jacld.c:204:21
	movq	$0, b+40(%rax,%rax,4)
	.loc	16 191 21               # jacld.c:191:21
	movsd	%xmm5, a+192(%rax,%rax,4)
	.loc	16 205 21               # jacld.c:205:21
	movapd	464(%rsp), %xmm0        # 16-byte Reload
	movsd	%xmm0, b+80(%rax,%rax,4)
	.loc	16 210 17               # jacld.c:210:17
	movupd	u-2592(%rsi,%rax), %xmm14
	.loc	16 210 32 is_stmt 0     # jacld.c:210:32
	movapd	%xmm14, %xmm4
	shufpd	$1, %xmm4, %xmm4        # xmm4 = xmm4[1,0]
	movapd	%xmm14, %xmm3
	.loc	16 212 54 is_stmt 1     # jacld.c:212:54
	movapd	%xmm15, %xmm1
	.loc	16 210 32               # jacld.c:210:32
	mulsd	%xmm4, %xmm3
	.loc	16 212 54               # jacld.c:212:54
	mulsd	%xmm4, %xmm1
	movapd	480(%rsp), %xmm8        # 16-byte Reload
	.loc	16 212 34 is_stmt 0     # jacld.c:212:34
	movapd	%xmm8, %xmm10
	.loc	16 213 28 is_stmt 1     # jacld.c:213:28
	movapd	%xmm15, %xmm5
	mulsd	.LCPI11_2(%rip), %xmm5
	.loc	16 65 21                # jacld.c:65:21
	xorpd	%xmm0, %xmm0
	.loc	16 206 21               # jacld.c:206:21
	movupd	%xmm0, b+120(%rax,%rax,4)
	.loc	16 210 51               # jacld.c:210:51
	mulsd	%xmm9, %xmm3
	.loc	16 207 21               # jacld.c:207:21
	movupd	%xmm0, b+160(%rax,%rax,4)
	.loc	16 220 42               # jacld.c:220:42
	movapd	%xmm1, %xmm2
	mulsd	%xmm2, %xmm2
	.loc	16 221 22               # jacld.c:221:22
	movsd	qs-520(%rcx,%rdi), %xmm6 # xmm6 = mem[0],zero
	.loc	16 221 36 is_stmt 0     # jacld.c:221:36
	movsd	%xmm6, -96(%rsp)        # 8-byte Spill
	movapd	%xmm15, %xmm0
	.loc	16 210 9 is_stmt 1      # jacld.c:210:9
	mulsd	%xmm8, %xmm3
	.loc	16 221 36               # jacld.c:221:36
	mulsd	%xmm6, %xmm0
	.loc	16 221 18 is_stmt 0     # jacld.c:221:18
	movapd	%xmm0, -80(%rsp)        # 16-byte Spill
	movapd	%xmm0, %xmm7
	mulsd	.LCPI11_15(%rip), %xmm7
	.loc	16 221 13               # jacld.c:221:13
	subsd	%xmm2, %xmm7
	.loc	16 211 30 is_stmt 1     # jacld.c:211:30
	movapd	%xmm9, %xmm6
	.loc	16 220 9                # jacld.c:220:9
	mulsd	%xmm8, %xmm7
	.loc	16 211 30               # jacld.c:211:30
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	mulpd	.LCPI11_21(%rip), %xmm6
	.loc	16 211 37 is_stmt 0     # jacld.c:211:37
	movapd	%xmm6, %xmm2
	mulpd	%xmm14, %xmm2
	.loc	16 220 9 is_stmt 1      # jacld.c:220:9
	xorpd	%xmm11, %xmm7
	movapd	%xmm11, %xmm12
	.loc	16 211 20               # jacld.c:211:20
	mulpd	272(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	16 211 9 is_stmt 0      # jacld.c:211:9
	unpcklpd	%xmm7, %xmm3    # xmm3 = xmm3[0],xmm7[0]
	subpd	%xmm2, %xmm3
	.loc	16 209 21 is_stmt 1     # jacld.c:209:21
	movupd	%xmm3, b+8(%rax,%rax,4)
	.loc	16 228 47               # jacld.c:228:47
	movsd	u-2576(%rsi,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	16 250 38               # jacld.c:250:38
	movapd	%xmm0, 832(%rsp)        # 16-byte Spill
	movsd	u-2584(%rsi,%rax), %xmm13 # xmm13 = mem[0],zero
	.loc	16 258 37               # jacld.c:258:37
	movapd	%xmm13, %xmm2
	mulsd	%xmm0, %xmm2
	.loc	16 170 34               # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm3 # xmm3 = mem[0],zero
	.loc	16 258 18               # jacld.c:258:18
	mulsd	%xmm3, %xmm2
	.loc	16 258 56 is_stmt 0     # jacld.c:258:56
	mulsd	%xmm9, %xmm2
	.loc	16 213 20 is_stmt 1     # jacld.c:213:20
	movapd	-64(%rsp), %xmm7        # 16-byte Reload
	unpcklpd	%xmm2, %xmm7    # xmm7 = xmm7[0],xmm2[0]
	.loc	16 215 54               # jacld.c:215:54
	movapd	%xmm15, %xmm2
	mulsd	%xmm14, %xmm2
	.loc	16 212 34               # jacld.c:212:34
	mulsd	%xmm1, %xmm10
	.loc	16 213 20               # jacld.c:213:20
	unpcklpd	%xmm8, %xmm5    # xmm5 = xmm5[0],xmm8[0]
	mulpd	%xmm5, %xmm7
	.loc	16 215 34               # jacld.c:215:34
	movapd	%xmm8, %xmm11
	mulsd	%xmm2, %xmm11
	.loc	16 212 34               # jacld.c:212:34
	xorpd	%xmm12, %xmm10
	.loc	16 224 18               # jacld.c:224:18
	mulsd	%xmm3, %xmm2
	.loc	16 287 9                # jacld.c:287:9
	movsd	.LCPI11_20(%rip), %xmm3 # xmm3 = mem[0],zero
	.loc	16 213 9                # jacld.c:213:9
	unpcklpd	%xmm3, %xmm10   # xmm10 = xmm10[0],xmm3[0]
	subpd	%xmm7, %xmm10
	.loc	16 214 9                # jacld.c:214:9
	movapd	%xmm10, 848(%rsp)       # 16-byte Spill
	movapd	48(%rsp), %xmm5         # 16-byte Reload
	.loc	16 224 9                # jacld.c:224:9
	mulsd	%xmm8, %xmm2
	.loc	16 214 9                # jacld.c:214:9
	unpcklpd	%xmm2, %xmm5    # xmm5 = xmm5[0],xmm2[0]
	movapd	%xmm10, %xmm2
	unpcklpd	%xmm3, %xmm2    # xmm2 = xmm2[0],xmm3[0]
	.loc	16 225 49               # jacld.c:225:49
	movsd	.LCPI11_22(%rip), %xmm7 # xmm7 = mem[0],zero
	mulsd	%xmm7, %xmm1
	.loc	16 214 9                # jacld.c:214:9
	subpd	%xmm5, %xmm2
	.loc	16 225 34               # jacld.c:225:34
	mulsd	%xmm8, %xmm1
	.loc	16 226 34               # jacld.c:226:34
	movapd	%xmm15, %xmm5
	mulsd	.LCPI11_17(%rip), %xmm5
	.loc	16 226 20 is_stmt 0     # jacld.c:226:20
	mulsd	-64(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	16 225 34 is_stmt 1     # jacld.c:225:34
	xorpd	%xmm12, %xmm1
	movapd	%xmm12, %xmm0
	.loc	16 226 9                # jacld.c:226:9
	subsd	%xmm5, %xmm1
	.loc	16 215 34               # jacld.c:215:34
	unpcklpd	%xmm1, %xmm3    # xmm3 = xmm3[0],xmm1[0]
	.loc	16 201 19               # jacld.c:201:19
	movapd	%xmm15, %xmm12
	mulsd	%xmm9, %xmm12
.Ltmp814:
	#DEBUG_VALUE: jacld:tmp3 <- %XMM12
	.loc	16 212 21               # jacld.c:212:21
	movupd	%xmm2, b+48(%rax,%rax,4)
	.loc	16 215 34               # jacld.c:215:34
	unpcklpd	32(%rsp), %xmm11 # 16-byte Folded Reload
                                        # xmm11 = xmm11[0],mem[0]
	subpd	%xmm11, %xmm3
	.loc	16 228 63               # jacld.c:228:63
	movapd	%xmm15, %xmm2
	unpcklpd	%xmm9, %xmm2    # xmm2 = xmm2[0],xmm9[0]
	movapd	832(%rsp), %xmm1        # 16-byte Reload
	movapd	%xmm1, %xmm7
	unpcklpd	416(%rsp), %xmm7 # 16-byte Folded Reload
                                        # xmm7 = xmm7[0],mem[0]
	mulpd	%xmm2, %xmm7
	.loc	16 235 34               # jacld.c:235:34
	movapd	%xmm8, %xmm2
	unpcklpd	%xmm13, %xmm2   # xmm2 = xmm2[0],xmm13[0]
	mulpd	%xmm7, %xmm2
	.loc	16 215 21               # jacld.c:215:21
	movupd	%xmm3, b+88(%rax,%rax,4)
	.loc	16 170 34               # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	16 228 43               # jacld.c:228:43
	mulsd	%xmm10, %xmm7
	.loc	16 228 34 is_stmt 0     # jacld.c:228:34
	mulsd	%xmm8, %xmm7
	movapd	%xmm0, %xmm11
	xorpd	%xmm11, %xmm7
	.loc	16 232 32 is_stmt 1     # jacld.c:232:32
	movapd	%xmm4, %xmm5
	.loc	16 228 21               # jacld.c:228:21
	movlpd	%xmm7, b+136(%rax,%rax,4)
	movapd	%xmm1, %xmm3
	.loc	16 232 32               # jacld.c:232:32
	mulsd	%xmm3, %xmm5
	.loc	16 232 51 is_stmt 0     # jacld.c:232:51
	mulsd	%xmm9, %xmm5
	.loc	16 232 9                # jacld.c:232:9
	mulsd	%xmm8, %xmm5
	.loc	16 229 21 is_stmt 1     # jacld.c:229:21
	movapd	448(%rsp), %xmm7        # 16-byte Reload
	movsd	%xmm7, b+176(%rax,%rax,4)
	.loc	16 233 37               # jacld.c:233:37
	mulsd	%xmm3, %xmm6
	.loc	16 233 20 is_stmt 0     # jacld.c:233:20
	mulsd	-64(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	16 233 9                # jacld.c:233:9
	subsd	%xmm6, %xmm5
	.loc	16 231 21 is_stmt 1     # jacld.c:231:21
	movsd	%xmm5, b+24(%rax,%rax,4)
	.loc	16 234 21               # jacld.c:234:21
	movq	$0, b+64(%rax,%rax,4)
	.loc	16 239 21               # jacld.c:239:21
	movq	$0, b+184(%rax,%rax,4)
	movsd	-96(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	16 242 24               # jacld.c:242:24
	mulsd	.LCPI11_18(%rip), %xmm1
	.loc	16 242 47 is_stmt 0     # jacld.c:242:47
	movsd	u-2568(%rsi,%rax), %xmm5 # xmm5 = mem[0],zero
	.loc	16 242 45               # jacld.c:242:45
	movapd	%xmm5, %xmm6
	mulsd	.LCPI11_19(%rip), %xmm6
	.loc	16 242 40               # jacld.c:242:40
	subsd	%xmm6, %xmm1
	.loc	16 243 33 is_stmt 1     # jacld.c:243:33
	movapd	%xmm9, %xmm6
	.loc	16 245 34               # jacld.c:245:34
	movapd	%xmm12, %xmm7
	mulsd	.LCPI11_9(%rip), %xmm7
	.loc	16 243 33               # jacld.c:243:33
	mulsd	%xmm4, %xmm6
	.loc	16 245 56               # jacld.c:245:56
	mulsd	%xmm14, %xmm14
	.loc	16 245 39 is_stmt 0     # jacld.c:245:39
	mulsd	%xmm7, %xmm14
	.loc	16 246 34 is_stmt 1     # jacld.c:246:34
	movapd	%xmm12, %xmm7
	mulsd	.LCPI11_10(%rip), %xmm7
	.loc	16 246 56 is_stmt 0     # jacld.c:246:56
	mulsd	%xmm4, %xmm4
	.loc	16 246 39               # jacld.c:246:39
	mulsd	%xmm7, %xmm4
	.loc	16 246 13               # jacld.c:246:13
	subsd	%xmm4, %xmm14
	.loc	16 247 34 is_stmt 1     # jacld.c:247:34
	mulsd	.LCPI11_7(%rip), %xmm12
.Ltmp815:
	.loc	16 247 56 is_stmt 0     # jacld.c:247:56
	movapd	%xmm3, %xmm0
	.loc	16 243 13 is_stmt 1     # jacld.c:243:13
	mulsd	%xmm1, %xmm6
	.loc	16 247 56               # jacld.c:247:56
	mulsd	%xmm0, %xmm0
	.loc	16 247 39 is_stmt 0     # jacld.c:247:39
	mulsd	%xmm12, %xmm0
	.loc	16 247 13               # jacld.c:247:13
	subsd	%xmm0, %xmm14
	.loc	16 248 20 is_stmt 1     # jacld.c:248:20
	movapd	%xmm9, %xmm0
	.loc	16 242 9                # jacld.c:242:9
	mulsd	%xmm8, %xmm6
	.loc	16 248 20               # jacld.c:248:20
	mulsd	.LCPI11_8(%rip), %xmm0
	.loc	16 248 25 is_stmt 0     # jacld.c:248:25
	mulsd	%xmm5, %xmm0
	.loc	16 248 13               # jacld.c:248:13
	subsd	%xmm0, %xmm14
	.loc	16 242 9 is_stmt 1      # jacld.c:242:9
	xorpd	%xmm11, %xmm6
	.loc	16 245 9                # jacld.c:245:9
	mulsd	-64(%rsp), %xmm14       # 16-byte Folded Reload
	.loc	16 244 9                # jacld.c:244:9
	subsd	%xmm14, %xmm6
	.loc	16 241 21               # jacld.c:241:21
	movsd	%xmm6, b+32(%rax,%rax,4)
	.loc	16 250 22               # jacld.c:250:22
	movsd	u-2592(%rsi,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	16 250 37 is_stmt 0     # jacld.c:250:37
	movapd	%xmm0, %xmm1
	mulsd	%xmm13, %xmm1
	.loc	16 250 18               # jacld.c:250:18
	mulsd	%xmm10, %xmm1
	.loc	16 255 35 is_stmt 1     # jacld.c:255:35
	movapd	%xmm13, %xmm4
	mulsd	%xmm4, %xmm4
	.loc	16 250 56               # jacld.c:250:56
	mulsd	%xmm9, %xmm1
	.loc	16 255 52               # jacld.c:255:52
	mulsd	%xmm9, %xmm4
	.loc	16 251 38               # jacld.c:251:38
	mulsd	432(%rsp), %xmm9        # 16-byte Folded Reload
.Ltmp816:
	.loc	16 253 36               # jacld.c:253:36
	mulsd	%xmm15, %xmm5
	.loc	16 250 9                # jacld.c:250:9
	mulsd	%xmm8, %xmm1
	.loc	16 253 16               # jacld.c:253:16
	mulsd	.LCPI11_19(%rip), %xmm5
	.loc	16 255 18               # jacld.c:255:18
	addsd	-80(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	16 160 18               # jacld.c:160:18
	movsd	.LCPI11_15(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	16 254 16               # jacld.c:254:16
	mulsd	%xmm10, %xmm4
	.loc	16 251 45               # jacld.c:251:45
	mulsd	%xmm9, %xmm0
	.loc	16 254 11               # jacld.c:254:11
	subsd	%xmm4, %xmm5
	.loc	16 253 9                # jacld.c:253:9
	mulsd	%xmm8, %xmm5
	movapd	%xmm11, %xmm6
	xorpd	%xmm6, %xmm5
	.loc	16 287 9                # jacld.c:287:9
	movsd	.LCPI11_20(%rip), %xmm4 # xmm4 = mem[0],zero
	.loc	16 250 9                # jacld.c:250:9
	xorpd	%xmm6, %xmm1
	.loc	16 235 34               # jacld.c:235:34
	unpcklpd	%xmm5, %xmm4    # xmm4 = xmm4[0],xmm5[0]
	subpd	%xmm2, %xmm4
	.loc	16 259 45               # jacld.c:259:45
	mulsd	%xmm3, %xmm9
	.loc	16 238 9                # jacld.c:238:9
	movapd	16(%rsp), %xmm2         # 16-byte Reload
	.loc	16 251 9                # jacld.c:251:9
	subsd	%xmm0, %xmm1
	.loc	16 238 9                # jacld.c:238:9
	unpcklpd	%xmm9, %xmm2    # xmm2 = xmm2[0],xmm9[0]
	movapd	848(%rsp), %xmm0        # 16-byte Reload
	subpd	%xmm2, %xmm0
	.loc	16 261 36               # jacld.c:261:36
	mulsd	%xmm15, %xmm13
	.loc	16 249 21               # jacld.c:249:21
	movsd	%xmm1, b+72(%rax,%rax,4)
	.loc	16 261 16               # jacld.c:261:16
	mulsd	.LCPI11_19(%rip), %xmm13
	.loc	16 261 9 is_stmt 0      # jacld.c:261:9
	mulsd	%xmm8, %xmm13
	xorpd	%xmm6, %xmm13
	.loc	16 235 21 is_stmt 1     # jacld.c:235:21
	movupd	%xmm4, b+104(%rax,%rax,4)
	.loc	16 262 28               # jacld.c:262:28
	mulsd	400(%rsp), %xmm15       # 16-byte Folded Reload
.Ltmp817:
	.loc	16 262 9 is_stmt 0      # jacld.c:262:9
	subsd	%xmm15, %xmm13
	.loc	16 263 9 is_stmt 1      # jacld.c:263:9
	subsd	-120(%rsp), %xmm13      # 8-byte Folded Reload
	.loc	16 236 21               # jacld.c:236:21
	movupd	%xmm0, b+144(%rax,%rax,4)
	.loc	16 260 21               # jacld.c:260:21
	movsd	%xmm13, b+192(%rax,%rax,4)
	.loc	16 272 21               # jacld.c:272:21
	movapd	(%rsp), %xmm0           # 16-byte Reload
	movsd	%xmm0, c(%rax,%rax,4)
	.loc	16 273 21               # jacld.c:273:21
	movapd	384(%rsp), %xmm0        # 16-byte Reload
	movsd	%xmm0, c+40(%rax,%rax,4)
	.loc	16 268 14               # jacld.c:268:14
	movsd	rho_i-8(%rcx,%rdi), %xmm12 # xmm12 = mem[0],zero
.Ltmp818:
	#DEBUG_VALUE: jacld:tmp1 <- %XMM12
	.loc	16 269 19               # jacld.c:269:19
	movapd	%xmm12, %xmm11
	.loc	16 274 21               # jacld.c:274:21
	movq	$0, c+80(%rax,%rax,4)
	.loc	16 275 21               # jacld.c:275:21
	movq	$0, c+120(%rax,%rax,4)
	.loc	16 276 21               # jacld.c:276:21
	movq	$0, c+160(%rax,%rax,4)
	.loc	16 269 19               # jacld.c:269:19
	mulsd	%xmm11, %xmm11
.Ltmp819:
	#DEBUG_VALUE: jacld:tmp2 <- %XMM11
	.loc	16 279 17               # jacld.c:279:17
	movupd	u-32(%rsi,%rax), %xmm1
	.loc	16 279 33 is_stmt 0     # jacld.c:279:33
	movapd	%xmm12, %xmm13
	mulsd	%xmm1, %xmm13
	.loc	16 279 42               # jacld.c:279:42
	movapd	%xmm13, %xmm0
	.loc	16 280 20 is_stmt 1     # jacld.c:280:20
	movsd	qs-8(%rcx,%rdi), %xmm8  # xmm8 = mem[0],zero
	.loc	16 280 18 is_stmt 0     # jacld.c:280:18
	movapd	%xmm8, %xmm7
	.loc	16 279 42 is_stmt 1     # jacld.c:279:42
	mulsd	%xmm0, %xmm0
	.loc	16 280 18               # jacld.c:280:18
	mulsd	%xmm10, %xmm7
	.loc	16 280 34 is_stmt 0     # jacld.c:280:34
	mulsd	%xmm12, %xmm7
	.loc	16 283 26 is_stmt 1     # jacld.c:283:26
	movapd	%xmm13, %xmm5
	mulsd	.LCPI11_22(%rip), %xmm5
	.loc	16 280 13               # jacld.c:280:13
	subsd	%xmm0, %xmm7
	movapd	256(%rsp), %xmm10       # 16-byte Reload
	.loc	16 283 9                # jacld.c:283:9
	mulsd	%xmm10, %xmm5
	.loc	16 284 34               # jacld.c:284:34
	movapd	%xmm12, %xmm6
	mulsd	.LCPI11_17(%rip), %xmm6
	.loc	16 284 20 is_stmt 0     # jacld.c:284:20
	mulsd	144(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	16 287 38 is_stmt 1     # jacld.c:287:38
	movapd	%xmm1, %xmm15
	.loc	16 279 9                # jacld.c:279:9
	mulsd	%xmm10, %xmm7
	.loc	16 287 38               # jacld.c:287:38
	shufpd	$1, %xmm15, %xmm15      # xmm15 = xmm15[1,0]
	movapd	%xmm12, %xmm9
	mulsd	%xmm15, %xmm9
	.loc	16 287 18 is_stmt 0     # jacld.c:287:18
	movapd	%xmm9, %xmm3
	.loc	16 289 22 is_stmt 1     # jacld.c:289:22
	movsd	u-16(%rsi,%rax), %xmm14 # xmm14 = mem[0],zero
	.loc	16 289 38 is_stmt 0     # jacld.c:289:38
	movapd	%xmm12, %xmm2
	.loc	16 132 34 is_stmt 1     # jacld.c:132:34
	movapd	.LCPI11_11(%rip), %xmm4 # xmm4 = [9223372036854775808,9223372036854775808]
	.loc	16 283 9                # jacld.c:283:9
	xorpd	%xmm4, %xmm5
	.loc	16 289 38               # jacld.c:289:38
	unpcklpd	%xmm11, %xmm2   # xmm2 = xmm2[0],xmm11[0]
	movapd	%xmm14, %xmm0
	unpcklpd	352(%rsp), %xmm0 # 16-byte Folded Reload
                                        # xmm0 = xmm0[0],mem[0]
	mulpd	%xmm2, %xmm0
	.loc	16 289 18 is_stmt 0     # jacld.c:289:18
	movapd	%xmm0, -80(%rsp)        # 16-byte Spill
	movapd	%xmm0, %xmm2
	.loc	16 284 9 is_stmt 1      # jacld.c:284:9
	subsd	%xmm6, %xmm5
	.loc	16 170 34               # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	.loc	16 289 18               # jacld.c:289:18
	mulsd	%xmm0, %xmm2
	.loc	16 289 9 is_stmt 0      # jacld.c:289:9
	mulsd	%xmm10, %xmm2
	xorpd	%xmm4, %xmm2
	movapd	%xmm4, %xmm0
	.loc	16 293 33 is_stmt 1     # jacld.c:293:33
	movapd	%xmm1, %xmm4
	.loc	16 288 21               # jacld.c:288:21
	movlpd	%xmm2, c+128(%rax,%rax,4)
	.loc	16 293 33               # jacld.c:293:33
	mulsd	%xmm15, %xmm4
	.loc	16 293 53 is_stmt 0     # jacld.c:293:53
	mulsd	%xmm11, %xmm4
	.loc	16 293 9                # jacld.c:293:9
	mulsd	%xmm10, %xmm4
	.loc	16 281 36 is_stmt 1     # jacld.c:281:36
	movapd	%xmm11, %xmm6
	.loc	16 279 9                # jacld.c:279:9
	xorpd	%xmm0, %xmm7
	.loc	16 281 36               # jacld.c:281:36
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	mulpd	.LCPI11_23(%rip), %xmm6
	.loc	16 281 9 is_stmt 0      # jacld.c:281:9
	unpcklpd	%xmm4, %xmm7    # xmm7 = xmm7[0],xmm4[0]
	.loc	16 281 43               # jacld.c:281:43
	movapd	%xmm6, %xmm2
	mulpd	%xmm1, %xmm2
	.loc	16 281 20               # jacld.c:281:20
	mulpd	240(%rsp), %xmm2        # 16-byte Folded Reload
	.loc	16 281 9                # jacld.c:281:9
	subpd	%xmm2, %xmm7
	.loc	16 295 34 is_stmt 1     # jacld.c:295:34
	mulsd	%xmm10, %xmm9
	.loc	16 290 21               # jacld.c:290:21
	movapd	368(%rsp), %xmm2        # 16-byte Reload
	movsd	%xmm2, c+168(%rax,%rax,4)
	.loc	16 287 9                # jacld.c:287:9
	movsd	.LCPI11_20(%rip), %xmm2 # xmm2 = mem[0],zero
	.loc	16 285 9                # jacld.c:285:9
	unpcklpd	%xmm2, %xmm5    # xmm5 = xmm5[0],xmm2[0]
	movapd	-16(%rsp), %xmm2        # 16-byte Reload
	unpcklpd	%xmm9, %xmm2    # xmm2 = xmm2[0],xmm9[0]
	subpd	%xmm2, %xmm5
	.loc	16 278 21               # jacld.c:278:21
	movupd	%xmm7, c+8(%rax,%rax,4)
	.loc	16 282 21               # jacld.c:282:21
	movupd	%xmm5, c+48(%rax,%rax,4)
	.loc	16 321 20               # jacld.c:321:20
	movsd	u-32(%rsi,%rax), %xmm7  # xmm7 = mem[0],zero
	.loc	16 328 22               # jacld.c:328:22
	movsd	u-16(%rsi,%rax), %xmm2  # xmm2 = mem[0],zero
	.loc	16 328 37 is_stmt 0     # jacld.c:328:37
	movsd	%xmm2, -96(%rsp)        # 8-byte Spill
	mulsd	%xmm7, %xmm2
	.loc	16 170 34 is_stmt 1     # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	.loc	16 328 18               # jacld.c:328:18
	mulsd	%xmm0, %xmm2
	.loc	16 328 56 is_stmt 0     # jacld.c:328:56
	mulsd	%xmm11, %xmm2
	.loc	16 297 20 is_stmt 1     # jacld.c:297:20
	movapd	144(%rsp), %xmm4        # 16-byte Reload
	unpcklpd	%xmm2, %xmm4    # xmm4 = xmm4[0],xmm2[0]
	.loc	16 297 28 is_stmt 0     # jacld.c:297:28
	movapd	%xmm12, %xmm2
	mulsd	.LCPI11_2(%rip), %xmm2
	.loc	16 297 20               # jacld.c:297:20
	unpcklpd	%xmm10, %xmm2   # xmm2 = xmm2[0],xmm10[0]
	mulpd	%xmm2, %xmm4
	.loc	16 296 34 is_stmt 1     # jacld.c:296:34
	mulsd	%xmm10, %xmm13
	.loc	16 287 18               # jacld.c:287:18
	mulsd	%xmm0, %xmm3
	.loc	16 132 34               # jacld.c:132:34
	movapd	.LCPI11_11(%rip), %xmm9 # xmm9 = [9223372036854775808,9223372036854775808]
	.loc	16 296 34               # jacld.c:296:34
	xorpd	%xmm9, %xmm13
	.loc	16 287 9                # jacld.c:287:9
	movsd	.LCPI11_20(%rip), %xmm0 # xmm0 = mem[0],zero
	.loc	16 297 9                # jacld.c:297:9
	unpcklpd	%xmm0, %xmm13   # xmm13 = xmm13[0],xmm0[0]
	subpd	%xmm4, %xmm13
	movapd	144(%rsp), %xmm4        # 16-byte Reload
	.loc	16 287 9                # jacld.c:287:9
	movapd	%xmm0, %xmm2
	mulsd	%xmm10, %xmm3
	unpcklpd	%xmm13, %xmm2   # xmm2 = xmm2[0],xmm13[0]
	unpcklpd	-32(%rsp), %xmm3 # 16-byte Folded Reload
                                        # xmm3 = xmm3[0],mem[0]
	subpd	%xmm3, %xmm2
	.loc	16 270 19               # jacld.c:270:19
	movapd	%xmm12, %xmm5
	mulsd	%xmm11, %xmm5
.Ltmp820:
	#DEBUG_VALUE: jacld:tmp3 <- %XMM5
	.loc	16 286 21               # jacld.c:286:21
	movupd	%xmm2, c+88(%rax,%rax,4)
	.loc	16 303 32               # jacld.c:303:32
	movapd	%xmm1, %xmm0
	mulsd	%xmm14, %xmm0
	.loc	16 303 51 is_stmt 0     # jacld.c:303:51
	mulsd	%xmm11, %xmm0
	.loc	16 299 21 is_stmt 1     # jacld.c:299:21
	movq	$0, c+136(%rax,%rax,4)
	.loc	16 303 9                # jacld.c:303:9
	mulsd	%xmm10, %xmm0
	.loc	16 304 37               # jacld.c:304:37
	shufpd	$1, %xmm6, %xmm6        # xmm6 = xmm6[1,0]
	mulsd	%xmm14, %xmm6
	.loc	16 300 21               # jacld.c:300:21
	movq	$0, c+176(%rax,%rax,4)
	.loc	16 304 20               # jacld.c:304:20
	mulsd	%xmm4, %xmm6
	.loc	16 304 9 is_stmt 0      # jacld.c:304:9
	subsd	%xmm6, %xmm0
	movapd	800(%rsp), %xmm6        # 16-byte Reload
	.loc	16 302 21 is_stmt 1     # jacld.c:302:21
	movsd	%xmm0, c+24(%rax,%rax,4)
	.loc	16 306 21               # jacld.c:306:21
	movq	$0, c+104(%rax,%rax,4)
	.loc	16 309 21               # jacld.c:309:21
	movq	$0, c+184(%rax,%rax,4)
	.loc	16 312 24               # jacld.c:312:24
	mulsd	.LCPI11_18(%rip), %xmm8
	.loc	16 312 47 is_stmt 0     # jacld.c:312:47
	movsd	u-8(%rsi,%rax), %xmm0   # xmm0 = mem[0],zero
	.loc	16 312 45               # jacld.c:312:45
	movapd	%xmm0, %xmm2
	mulsd	.LCPI11_19(%rip), %xmm2
	.loc	16 312 40               # jacld.c:312:40
	subsd	%xmm2, %xmm8
	.loc	16 313 13 is_stmt 1     # jacld.c:313:13
	mulsd	%xmm1, %xmm8
	.loc	16 315 35               # jacld.c:315:35
	movapd	%xmm5, %xmm2
	mulsd	.LCPI11_6(%rip), %xmm2
	.loc	16 315 61 is_stmt 0     # jacld.c:315:61
	mulsd	%xmm1, %xmm1
	.loc	16 315 42               # jacld.c:315:42
	mulsd	%xmm2, %xmm1
	.loc	16 316 35 is_stmt 1     # jacld.c:316:35
	mulsd	.LCPI11_7(%rip), %xmm5
.Ltmp821:
	.loc	16 316 61 is_stmt 0     # jacld.c:316:61
	mulsd	%xmm15, %xmm15
	.loc	16 316 42               # jacld.c:316:42
	mulsd	%xmm5, %xmm15
	.loc	16 316 13               # jacld.c:316:13
	subsd	%xmm15, %xmm1
	.loc	16 72 9 is_stmt 1       # jacld.c:72:9
	movsd	.LCPI11_0(%rip), %xmm15 # xmm15 = mem[0],zero
	.loc	16 317 61               # jacld.c:317:61
	mulsd	%xmm14, %xmm14
	.loc	16 317 42 is_stmt 0     # jacld.c:317:42
	mulsd	%xmm5, %xmm14
	.loc	16 313 31 is_stmt 1     # jacld.c:313:31
	mulsd	%xmm11, %xmm8
	.loc	16 312 9                # jacld.c:312:9
	mulsd	%xmm10, %xmm8
	.loc	16 317 13               # jacld.c:317:13
	subsd	%xmm14, %xmm1
	movapd	96(%rsp), %xmm14        # 16-byte Reload
	.loc	16 318 21               # jacld.c:318:21
	movapd	%xmm11, %xmm2
	mulsd	.LCPI11_8(%rip), %xmm2
	.loc	16 312 9                # jacld.c:312:9
	xorpd	%xmm9, %xmm8
	.loc	16 318 28               # jacld.c:318:28
	mulsd	%xmm0, %xmm2
	.loc	16 318 13 is_stmt 0     # jacld.c:318:13
	subsd	%xmm2, %xmm1
	.loc	16 315 9 is_stmt 1      # jacld.c:315:9
	mulsd	%xmm4, %xmm1
	.loc	16 321 35               # jacld.c:321:35
	movapd	%xmm7, %xmm2
	.loc	16 314 9                # jacld.c:314:9
	subsd	%xmm1, %xmm8
	.loc	16 321 35               # jacld.c:321:35
	mulsd	%xmm2, %xmm2
	.loc	16 321 52 is_stmt 0     # jacld.c:321:52
	mulsd	%xmm11, %xmm2
	movsd	qs-8(%rcx,%rdi), %xmm1  # xmm1 = mem[0],zero
	.loc	16 322 34 is_stmt 1     # jacld.c:322:34
	mulsd	%xmm12, %xmm1
	.loc	16 322 18 is_stmt 0     # jacld.c:322:18
	addsd	%xmm2, %xmm1
	.loc	16 320 36 is_stmt 1     # jacld.c:320:36
	mulsd	%xmm12, %xmm0
	.loc	16 320 16 is_stmt 0     # jacld.c:320:16
	mulsd	.LCPI11_19(%rip), %xmm0
	.loc	16 321 16 is_stmt 1     # jacld.c:321:16
	mulsd	.LCPI11_15(%rip), %xmm1
	.loc	16 321 11 is_stmt 0     # jacld.c:321:11
	subsd	%xmm1, %xmm0
	.loc	16 320 9 is_stmt 1      # jacld.c:320:9
	mulsd	%xmm10, %xmm0
	.loc	16 305 34               # jacld.c:305:34
	movapd	%xmm10, %xmm1
	unpcklpd	%xmm7, %xmm1    # xmm1 = xmm1[0],xmm7[0]
	.loc	16 320 9                # jacld.c:320:9
	xorpd	%xmm9, %xmm0
	.loc	16 305 34               # jacld.c:305:34
	mulpd	-80(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	16 287 9                # jacld.c:287:9
	movsd	.LCPI11_20(%rip), %xmm2 # xmm2 = mem[0],zero
	.loc	16 305 34               # jacld.c:305:34
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	subpd	%xmm1, %xmm2
	.loc	16 311 21               # jacld.c:311:21
	movsd	%xmm8, c+32(%rax,%rax,4)
	.loc	16 305 21               # jacld.c:305:21
	movupd	%xmm2, c+64(%rax,%rax,4)
	.loc	16 325 22               # jacld.c:325:22
	movsd	u-24(%rsi,%rax), %xmm0  # xmm0 = mem[0],zero
	.loc	16 325 37 is_stmt 0     # jacld.c:325:37
	movapd	%xmm0, %xmm1
	mulsd	%xmm7, %xmm1
	.loc	16 170 34 is_stmt 1     # jacld.c:170:34
	movsd	.LCPI11_13(%rip), %xmm2 # xmm2 = mem[0],zero
	.loc	16 325 18               # jacld.c:325:18
	mulsd	%xmm2, %xmm1
	.loc	16 325 56 is_stmt 0     # jacld.c:325:56
	mulsd	%xmm11, %xmm1
	.loc	16 325 9                # jacld.c:325:9
	mulsd	%xmm10, %xmm1
	.loc	16 326 39 is_stmt 1     # jacld.c:326:39
	mulsd	336(%rsp), %xmm11       # 16-byte Folded Reload
.Ltmp822:
	.loc	16 325 9                # jacld.c:325:9
	xorpd	%xmm9, %xmm1
	.loc	16 326 46               # jacld.c:326:46
	mulsd	%xmm11, %xmm0
	.loc	16 326 9 is_stmt 0      # jacld.c:326:9
	subsd	%xmm0, %xmm1
	.loc	16 329 46 is_stmt 1     # jacld.c:329:46
	mulsd	-96(%rsp), %xmm11       # 8-byte Folded Reload
	movapd	784(%rsp), %xmm3        # 16-byte Reload
	.loc	16 324 21               # jacld.c:324:21
	movsd	%xmm1, c+112(%rax,%rax,4)
	.loc	16 308 37               # jacld.c:308:37
	movapd	-48(%rsp), %xmm0        # 16-byte Reload
	unpcklpd	%xmm11, %xmm0   # xmm0 = xmm0[0],xmm11[0]
	.loc	16 173 45               # jacld.c:173:45
	movsd	.LCPI11_19(%rip), %xmm11 # xmm11 = mem[0],zero
	.loc	16 308 37               # jacld.c:308:37
	subpd	%xmm0, %xmm13
	.loc	16 307 21               # jacld.c:307:21
	movupd	%xmm13, c+144(%rax,%rax,4)
	.loc	16 331 36               # jacld.c:331:36
	mulsd	%xmm12, %xmm7
	.loc	16 331 16 is_stmt 0     # jacld.c:331:16
	mulsd	%xmm11, %xmm7
	.loc	16 331 9                # jacld.c:331:9
	mulsd	%xmm10, %xmm7
	.loc	16 332 28 is_stmt 1     # jacld.c:332:28
	mulsd	320(%rsp), %xmm12       # 16-byte Folded Reload
.Ltmp823:
	.loc	16 331 9                # jacld.c:331:9
	xorpd	%xmm9, %xmm7
	movapd	%xmm9, %xmm10
	.loc	16 332 9                # jacld.c:332:9
	subsd	%xmm12, %xmm7
	.loc	16 333 9                # jacld.c:333:9
	subsd	-128(%rsp), %xmm7       # 8-byte Folded Reload
	.loc	16 330 21               # jacld.c:330:21
	movsd	%xmm7, c+192(%rax,%rax,4)
.Ltmp824:
	.loc	16 55 5 discriminator 1 # jacld.c:55:5
	incq	%rbp
	.loc	16 55 21 is_stmt 0 discriminator 1 # jacld.c:55:21
	addq	$8, %rdi
	addq	$40, %rax
	addq	$8, %rbx
	cmpq	%r13, %rbp
	.loc	16 55 5 discriminator 1 # jacld.c:55:5
	jl	.LBB11_3
.Ltmp825:
.LBB11_4:                               # %for.inc2392
                                        #   in Loop: Header=BB11_2 Depth=1
	.loc	16 54 3 is_stmt 1 discriminator 1 # jacld.c:54:3
	incq	%r11
	addq	$520, %r14              # imm = 0x208
	addq	$2600, %r15             # imm = 0xA28
	addq	$520, %r12              # imm = 0x208
	.loc	16 54 19 is_stmt 0 discriminator 1 # jacld.c:54:19
	cmpq	%r8, %r11
	jl	.LBB11_2
.Ltmp826:
.LBB11_5:                               # %for.end2394
	.loc	16 336 1 is_stmt 1      # jacld.c:336:1
	addq	$872, %rsp              # imm = 0x368
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp827:
.Lfunc_end11:
	.size	jacld, .Lfunc_end11-jacld
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI12_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	blts
	.p2align	4, 0x90
	.type	blts,@function
blts:                                   # @blts
.Lfunc_begin12:
	.file	17 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/blts.c"
	.loc	17 53 0                 # blts.c:53:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp828:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp829:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp830:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp831:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp832:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp833:
	.cfi_def_cfa_offset 56
	subq	$296, %rsp              # imm = 0x128
.Ltmp834:
	.cfi_def_cfa_offset 352
.Ltmp835:
	.cfi_offset %rbx, -56
.Ltmp836:
	.cfi_offset %r12, -48
.Ltmp837:
	.cfi_offset %r13, -40
.Ltmp838:
	.cfi_offset %r14, -32
.Ltmp839:
	.cfi_offset %r15, -24
.Ltmp840:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: blts:ldmx <- %EDI
	#DEBUG_VALUE: blts:ldmy <- %ESI
	#DEBUG_VALUE: blts:ldmz <- %EDX
	#DEBUG_VALUE: blts:nx <- %ECX
	#DEBUG_VALUE: blts:ny <- %R8D
	#DEBUG_VALUE: blts:nz <- %R9D
	#DEBUG_VALUE: blts:k <- [%RSP+352]
	#DEBUG_VALUE: blts:omega <- %XMM0
	#DEBUG_VALUE: blts:nx0 <- [%RSP+432]
	#DEBUG_VALUE: blts:ny0 <- [%RSP+440]
	movsd	%xmm0, 24(%rsp)         # 8-byte Spill
	movl	424(%rsp), %edx
.Ltmp841:
	#DEBUG_VALUE: blts:jend <- %EDX
	movl	416(%rsp), %ebp
.Ltmp842:
	#DEBUG_VALUE: blts:j <- %EBP
	#DEBUG_VALUE: blts:jst <- %EBP
	.loc	17 47 20 prologue_end   # blts.c:47:20
	movl	%esi, %r14d
	shrl	$31, %r14d
	addl	%esi, %r14d
	.loc	17 47 24 is_stmt 0      # blts.c:47:24
	orl	$1, %r14d
	.loc	17 47 32                # blts.c:47:32
	movl	%edi, %r11d
	shrl	$31, %r11d
	addl	%edi, %r11d
	andl	$-2, %r11d
	.loc	17 47 36                # blts.c:47:36
	leal	1(%r11), %r10d
.Ltmp843:
	.loc	17 67 3 is_stmt 1 discriminator 1 # blts.c:67:3
	cmpl	%edx, %ebp
	jge	.LBB12_15
.Ltmp844:
# BB#1:                                 # %for.cond29.preheader.lr.ph
	#DEBUG_VALUE: blts:jst <- %EBP
	#DEBUG_VALUE: blts:j <- %EBP
	#DEBUG_VALUE: blts:jend <- %EDX
	#DEBUG_VALUE: blts:ny0 <- [%RSP+440]
	#DEBUG_VALUE: blts:nx0 <- [%RSP+432]
	#DEBUG_VALUE: blts:omega <- %XMM0
	#DEBUG_VALUE: blts:k <- [%RSP+352]
	#DEBUG_VALUE: blts:nz <- %R9D
	#DEBUG_VALUE: blts:ny <- %R8D
	#DEBUG_VALUE: blts:nx <- %ECX
	#DEBUG_VALUE: blts:ldmy <- %ESI
	#DEBUG_VALUE: blts:ldmx <- %EDI
	.loc	17 64 33                # blts.c:64:33
	movslq	352(%rsp), %r13
	#DEBUG_VALUE: blts:iend <- undef
	movl	400(%rsp), %r12d
	#DEBUG_VALUE: blts:ist <- %R12D
	movq	360(%rsp), %rbx
	#DEBUG_VALUE: blts:v <- %RBX
.Ltmp845:
	.loc	17 68 5 discriminator 1 # blts.c:68:5
	cmpl	408(%rsp), %r12d
	jge	.LBB12_7
.Ltmp846:
# BB#2:                                 # %for.cond32.preheader.lr.ph.us.preheader
	#DEBUG_VALUE: blts:ldmx <- %EDI
	#DEBUG_VALUE: blts:ldmy <- %ESI
	#DEBUG_VALUE: blts:nx <- %ECX
	#DEBUG_VALUE: blts:ny <- %R8D
	#DEBUG_VALUE: blts:nz <- %R9D
	#DEBUG_VALUE: blts:k <- [%RSP+352]
	#DEBUG_VALUE: blts:omega <- %XMM0
	#DEBUG_VALUE: blts:nx0 <- [%RSP+432]
	#DEBUG_VALUE: blts:ny0 <- [%RSP+440]
	#DEBUG_VALUE: blts:jend <- %EDX
	#DEBUG_VALUE: blts:j <- %EBP
	#DEBUG_VALUE: blts:jst <- %EBP
	#DEBUG_VALUE: blts:v <- %RBX
	#DEBUG_VALUE: blts:ist <- %R12D
	movq	368(%rsp), %rax
	#DEBUG_VALUE: blts:ldz <- %RAX
	.loc	17 65 38                # blts.c:65:38
	leal	-1(%r13), %ecx
.Ltmp847:
	.loc	17 65 35 is_stmt 0      # blts.c:65:35
	movslq	%ecx, %rcx
	movl	%edx, %r15d
.Ltmp848:
	.loc	17 70 24 is_stmt 1      # blts.c:70:24
	movslq	%r12d, %rdx
.Ltmp849:
	movslq	%ebp, %rsi
.Ltmp850:
	leaq	(%rdx,%rdx,4), %rdi
.Ltmp851:
	leaq	(%rbx,%rdi,8), %rdi
	movq	%r14, %rbp
.Ltmp852:
	imulq	%r13, %rbp
	movq	%r13, -120(%rsp)        # 8-byte Spill
	leaq	(%rbp,%rbp,4), %rbp
	movq	%r10, %rbx
.Ltmp853:
	imulq	%rsi, %rbx
	addq	%rdx, %rbx
	leaq	(,%rsi,8), %rdx
	leaq	(%rdx,%rdx,4), %rdx
	leaq	(%rdx,%rbp,8), %rbp
	imulq	%r10, %rbp
	leaq	32(%rbp,%rdi), %r9
.Ltmp854:
	imulq	$200, %rbx, %rbp
	leaq	192(%rax,%rbp), %r8
.Ltmp855:
	movl	%r11d, %eax
.Ltmp856:
	imulq	%r14, %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%rdx,%rcx,8), %rcx
	leaq	(%rax,%rax,4), %rdx
	leaq	40(,%rdx,8), %r13
	movl	%r15d, %edx
	imulq	$200, %rax, %r15
	addq	$200, %r15
	imulq	%r10, %rcx
	leaq	32(%rcx,%rdi), %rdi
	movl	408(%rsp), %r12d
.Ltmp857:
	subl	400(%rsp), %r12d
.Ltmp858:
	.p2align	4, 0x90
.LBB12_3:                               # %for.cond32.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB12_4 Depth 2
	movl	%r12d, %ecx
	movq	%rdi, %rax
	movq	%r8, %rbp
	movq	%r9, %rbx
	.p2align	4, 0x90
.LBB12_4:                               # %for.cond32.preheader.us
                                        #   Parent Loop BB12_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movsd	-32(%rbx), %xmm3        # xmm3 = mem[0],zero
	.loc	17 71 24                # blts.c:71:24
	movsd	-192(%rbp), %xmm1       # xmm1 = mem[0],zero
	.loc	17 72 24                # blts.c:72:24
	movsd	-152(%rbp), %xmm2       # xmm2 = mem[0],zero
	.loc	17 71 40                # blts.c:71:40
	mulsd	-32(%rax), %xmm1
	.loc	17 72 40                # blts.c:72:40
	mulsd	-24(%rax), %xmm2
	.loc	17 72 22 is_stmt 0      # blts.c:72:22
	addsd	%xmm1, %xmm2
	.loc	17 73 24 is_stmt 1      # blts.c:73:24
	movsd	-112(%rbp), %xmm1       # xmm1 = mem[0],zero
	.loc	17 73 40 is_stmt 0      # blts.c:73:40
	mulsd	-16(%rax), %xmm1
	.loc	17 73 22                # blts.c:73:22
	addsd	%xmm2, %xmm1
	.loc	17 74 24 is_stmt 1      # blts.c:74:24
	movsd	-72(%rbp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 74 40 is_stmt 0      # blts.c:74:40
	mulsd	-8(%rax), %xmm2
	.loc	17 74 22                # blts.c:74:22
	addsd	%xmm1, %xmm2
	.loc	17 75 24 is_stmt 1      # blts.c:75:24
	movsd	-32(%rbp), %xmm1        # xmm1 = mem[0],zero
	.loc	17 75 40 is_stmt 0      # blts.c:75:40
	mulsd	(%rax), %xmm1
	.loc	17 75 22                # blts.c:75:22
	addsd	%xmm2, %xmm1
	.loc	17 71 19 is_stmt 1      # blts.c:71:19
	mulsd	%xmm0, %xmm1
	.loc	17 71 11 is_stmt 0      # blts.c:71:11
	subsd	%xmm1, %xmm3
	.loc	17 70 21 is_stmt 1      # blts.c:70:21
	movsd	%xmm3, -32(%rbx)
	.loc	17 70 24 is_stmt 0      # blts.c:70:24
	movsd	-24(%rbx), %xmm3        # xmm3 = mem[0],zero
	.loc	17 71 24 is_stmt 1      # blts.c:71:24
	movsd	-184(%rbp), %xmm1       # xmm1 = mem[0],zero
	.loc	17 72 24                # blts.c:72:24
	movsd	-144(%rbp), %xmm2       # xmm2 = mem[0],zero
	.loc	17 71 40                # blts.c:71:40
	mulsd	-32(%rax), %xmm1
	.loc	17 72 40                # blts.c:72:40
	mulsd	-24(%rax), %xmm2
	.loc	17 72 22 is_stmt 0      # blts.c:72:22
	addsd	%xmm1, %xmm2
	.loc	17 73 24 is_stmt 1      # blts.c:73:24
	movsd	-104(%rbp), %xmm1       # xmm1 = mem[0],zero
	.loc	17 73 40 is_stmt 0      # blts.c:73:40
	mulsd	-16(%rax), %xmm1
	.loc	17 73 22                # blts.c:73:22
	addsd	%xmm2, %xmm1
	.loc	17 74 24 is_stmt 1      # blts.c:74:24
	movsd	-64(%rbp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 74 40 is_stmt 0      # blts.c:74:40
	mulsd	-8(%rax), %xmm2
	.loc	17 74 22                # blts.c:74:22
	addsd	%xmm1, %xmm2
	.loc	17 75 24 is_stmt 1      # blts.c:75:24
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	.loc	17 75 40 is_stmt 0      # blts.c:75:40
	mulsd	(%rax), %xmm1
	.loc	17 75 22                # blts.c:75:22
	addsd	%xmm2, %xmm1
	.loc	17 71 19 is_stmt 1      # blts.c:71:19
	mulsd	%xmm0, %xmm1
	.loc	17 71 11 is_stmt 0      # blts.c:71:11
	subsd	%xmm1, %xmm3
	.loc	17 70 21 is_stmt 1      # blts.c:70:21
	movsd	%xmm3, -24(%rbx)
	.loc	17 70 24 is_stmt 0      # blts.c:70:24
	movsd	-16(%rbx), %xmm3        # xmm3 = mem[0],zero
	.loc	17 71 24 is_stmt 1      # blts.c:71:24
	movsd	-176(%rbp), %xmm1       # xmm1 = mem[0],zero
	.loc	17 72 24                # blts.c:72:24
	movsd	-136(%rbp), %xmm2       # xmm2 = mem[0],zero
	.loc	17 71 40                # blts.c:71:40
	mulsd	-32(%rax), %xmm1
	.loc	17 72 40                # blts.c:72:40
	mulsd	-24(%rax), %xmm2
	.loc	17 72 22 is_stmt 0      # blts.c:72:22
	addsd	%xmm1, %xmm2
	.loc	17 73 24 is_stmt 1      # blts.c:73:24
	movsd	-96(%rbp), %xmm1        # xmm1 = mem[0],zero
	.loc	17 73 40 is_stmt 0      # blts.c:73:40
	mulsd	-16(%rax), %xmm1
	.loc	17 73 22                # blts.c:73:22
	addsd	%xmm2, %xmm1
	.loc	17 74 24 is_stmt 1      # blts.c:74:24
	movsd	-56(%rbp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 74 40 is_stmt 0      # blts.c:74:40
	mulsd	-8(%rax), %xmm2
	.loc	17 74 22                # blts.c:74:22
	addsd	%xmm1, %xmm2
	.loc	17 75 24 is_stmt 1      # blts.c:75:24
	movsd	-16(%rbp), %xmm1        # xmm1 = mem[0],zero
	.loc	17 75 40 is_stmt 0      # blts.c:75:40
	mulsd	(%rax), %xmm1
	.loc	17 75 22                # blts.c:75:22
	addsd	%xmm2, %xmm1
	.loc	17 71 19 is_stmt 1      # blts.c:71:19
	mulsd	%xmm0, %xmm1
	.loc	17 71 11 is_stmt 0      # blts.c:71:11
	subsd	%xmm1, %xmm3
	.loc	17 70 21 is_stmt 1      # blts.c:70:21
	movsd	%xmm3, -16(%rbx)
	.loc	17 70 24 is_stmt 0      # blts.c:70:24
	movsd	-8(%rbx), %xmm3         # xmm3 = mem[0],zero
	.loc	17 71 24 is_stmt 1      # blts.c:71:24
	movsd	-168(%rbp), %xmm1       # xmm1 = mem[0],zero
	.loc	17 72 24                # blts.c:72:24
	movsd	-128(%rbp), %xmm2       # xmm2 = mem[0],zero
	.loc	17 71 40                # blts.c:71:40
	mulsd	-32(%rax), %xmm1
	.loc	17 72 40                # blts.c:72:40
	mulsd	-24(%rax), %xmm2
	.loc	17 72 22 is_stmt 0      # blts.c:72:22
	addsd	%xmm1, %xmm2
	.loc	17 73 24 is_stmt 1      # blts.c:73:24
	movsd	-88(%rbp), %xmm1        # xmm1 = mem[0],zero
	.loc	17 73 40 is_stmt 0      # blts.c:73:40
	mulsd	-16(%rax), %xmm1
	.loc	17 73 22                # blts.c:73:22
	addsd	%xmm2, %xmm1
	.loc	17 74 24 is_stmt 1      # blts.c:74:24
	movsd	-48(%rbp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 74 40 is_stmt 0      # blts.c:74:40
	mulsd	-8(%rax), %xmm2
	.loc	17 74 22                # blts.c:74:22
	addsd	%xmm1, %xmm2
	.loc	17 75 24 is_stmt 1      # blts.c:75:24
	movsd	-8(%rbp), %xmm1         # xmm1 = mem[0],zero
	.loc	17 75 40 is_stmt 0      # blts.c:75:40
	mulsd	(%rax), %xmm1
	.loc	17 75 22                # blts.c:75:22
	addsd	%xmm2, %xmm1
	.loc	17 71 19 is_stmt 1      # blts.c:71:19
	mulsd	%xmm0, %xmm1
	.loc	17 71 11 is_stmt 0      # blts.c:71:11
	subsd	%xmm1, %xmm3
	.loc	17 70 21 is_stmt 1      # blts.c:70:21
	movsd	%xmm3, -8(%rbx)
	.loc	17 70 24 is_stmt 0      # blts.c:70:24
	movsd	(%rbx), %xmm3           # xmm3 = mem[0],zero
	.loc	17 71 24 is_stmt 1      # blts.c:71:24
	movsd	-160(%rbp), %xmm1       # xmm1 = mem[0],zero
	.loc	17 72 24                # blts.c:72:24
	movsd	-120(%rbp), %xmm2       # xmm2 = mem[0],zero
	.loc	17 71 40                # blts.c:71:40
	mulsd	-32(%rax), %xmm1
	.loc	17 72 40                # blts.c:72:40
	mulsd	-24(%rax), %xmm2
	.loc	17 72 22 is_stmt 0      # blts.c:72:22
	addsd	%xmm1, %xmm2
	.loc	17 73 24 is_stmt 1      # blts.c:73:24
	movsd	-80(%rbp), %xmm1        # xmm1 = mem[0],zero
	.loc	17 73 40 is_stmt 0      # blts.c:73:40
	mulsd	-16(%rax), %xmm1
	.loc	17 73 22                # blts.c:73:22
	addsd	%xmm2, %xmm1
	.loc	17 74 24 is_stmt 1      # blts.c:74:24
	movsd	-40(%rbp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 74 40 is_stmt 0      # blts.c:74:40
	mulsd	-8(%rax), %xmm2
	.loc	17 74 22                # blts.c:74:22
	addsd	%xmm1, %xmm2
	.loc	17 75 24 is_stmt 1      # blts.c:75:24
	movsd	(%rbp), %xmm1           # xmm1 = mem[0],zero
	.loc	17 75 40 is_stmt 0      # blts.c:75:40
	mulsd	(%rax), %xmm1
	.loc	17 75 22                # blts.c:75:22
	addsd	%xmm2, %xmm1
	.loc	17 71 19 is_stmt 1      # blts.c:71:19
	mulsd	%xmm0, %xmm1
	.loc	17 71 11 is_stmt 0      # blts.c:71:11
	subsd	%xmm1, %xmm3
	.loc	17 70 21 is_stmt 1      # blts.c:70:21
	movsd	%xmm3, (%rbx)
.Ltmp859:
	.loc	17 68 5 discriminator 1 # blts.c:68:5
	addq	$40, %rbx
	addq	$200, %rbp
	addq	$40, %rax
	decl	%ecx
	jne	.LBB12_4
.Ltmp860:
# BB#5:                                 # %for.cond29.for.inc121_crit_edge.us
                                        #   in Loop: Header=BB12_3 Depth=1
	.loc	17 67 3 discriminator 1 # blts.c:67:3
	incq	%rsi
	addq	%r13, %r9
	addq	%r15, %r8
	addq	%r13, %rdi
	cmpl	%edx, %esi
	jne	.LBB12_3
.Ltmp861:
# BB#6:                                 # %for.cond124.preheader
	movl	416(%rsp), %ebp
.Ltmp862:
	.loc	17 80 3 discriminator 1 # blts.c:80:3
	cmpl	%edx, %ebp
	movl	400(%rsp), %edi
	movl	%edi, %r12d
	movq	-120(%rsp), %r13        # 8-byte Reload
	movq	360(%rsp), %rbx
	jge	.LBB12_15
.Ltmp863:
.LBB12_7:                               # %for.cond127.preheader.lr.ph
	movq	%r10, -16(%rsp)         # 8-byte Spill
	#DEBUG_VALUE: blts:d <- undef
	.loc	17 64 33                # blts.c:64:33
	movq	%r14, %rax
	imulq	%r10, %rax
	imulq	%r13, %rax
	leaq	(%rax,%rax,4), %rax
	leaq	(%rbx,%rax,8), %rax
.Ltmp864:
	#DEBUG_VALUE: blts:vk <- [%RSP+-88]
	.loc	17 80 3 discriminator 1 # blts.c:80:3
	movq	%rax, -88(%rsp)         # 8-byte Spill
	movslq	%r12d, %r9
	movq	%r9, -24(%rsp)          # 8-byte Spill
	movslq	%ebp, %rbp
	leaq	(%r9,%r9,4), %rax
	leaq	(%rbx,%rax,8), %r8
	imulq	%r13, %r14
	leaq	(%r14,%r14,4), %rcx
	movl	%edx, %eax
	leaq	(%rbp,%rbp,4), %rdx
	shlq	$3, %rdx
	leaq	(%rdx,%rcx,8), %rdi
	movl	%eax, %ebx
	imulq	%r10, %rdi
	addq	%r8, %rdi
	movl	%r11d, %r8d
	leaq	(%r8,%r8,4), %rcx
	leaq	40(,%rcx,8), %rax
	movq	%rax, -32(%rsp)         # 8-byte Spill
	imulq	%rbp, %r10
	addq	%r9, %r10
	imulq	$200, %r10, %rdx
	movq	376(%rsp), %r10
	addq	%rdx, %r10
	imulq	$200, %r8, %rcx
	addq	$200, %rcx
	movq	%rcx, -40(%rsp)         # 8-byte Spill
	addq	384(%rsp), %rdx
	.p2align	4, 0x90
.LBB12_8:                               # %for.cond127.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB12_10 Depth 2
                                        #       Child Loop BB12_11 Depth 3
.Ltmp865:
	.loc	17 81 5 discriminator 1 # blts.c:81:5
	cmpl	408(%rsp), %r12d
	jge	.LBB12_14
# BB#9:                                 # %for.cond130.preheader.lr.ph
                                        #   in Loop: Header=BB12_8 Depth=1
.Ltmp866:
	.loc	17 83 18                # blts.c:83:18
	movq	%rbp, %rax
	movq	-16(%rsp), %r8          # 8-byte Reload
	imulq	%r8, %rax
	leaq	(%rax,%rax,4), %rcx
	movq	-88(%rsp), %r9          # 8-byte Reload
	leaq	(%r9,%rcx,8), %rbx
	.loc	17 84 45                # blts.c:84:45
	leaq	-1(%rbp), %rcx
	movq	%rbp, 16(%rsp)          # 8-byte Spill
	.loc	17 84 41 is_stmt 0      # blts.c:84:41
	imulq	%r8, %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%r9,%rcx,8), %rcx
.Ltmp867:
	.loc	17 102 22 is_stmt 1     # blts.c:102:22
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	imulq	$200, %rax, %r8
	addq	392(%rsp), %r8
	movq	%rdx, %r9
	movq	%r9, (%rsp)             # 8-byte Spill
	movq	%r10, -8(%rsp)          # 8-byte Spill
	movq	%rdi, %r11
	movq	%rdi, 8(%rsp)           # 8-byte Spill
	movq	-24(%rsp), %r14         # 8-byte Reload
.Ltmp868:
	.p2align	4, 0x90
.LBB12_10:                              # %for.cond130.preheader
                                        #   Parent Loop BB12_8 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB12_11 Depth 3
	.loc	17 83 18                # blts.c:83:18
	leaq	(,%r14,8), %rax
	leaq	(%rax,%rax,4), %rax
	leaq	(%rbx,%rax), %r15
	movq	32(%rsp), %rdx          # 8-byte Reload
	.loc	17 84 41                # blts.c:84:41
	movsd	(%rdx,%rax), %xmm8      # xmm8 = mem[0],zero
	.loc	17 86 41                # blts.c:86:41
	movsd	8(%rdx,%rax), %xmm9     # xmm9 = mem[0],zero
	.loc	17 85 48                # blts.c:85:48
	leal	-1(%r14), %ecx
	.loc	17 85 41 is_stmt 0      # blts.c:85:41
	movslq	%ecx, %rcx
	leaq	(%rcx,%rcx,4), %rcx
	movsd	(%rbx,%rcx,8), %xmm10   # xmm10 = mem[0],zero
	.loc	17 87 41 is_stmt 1      # blts.c:87:41
	movsd	8(%rbx,%rcx,8), %xmm11  # xmm11 = mem[0],zero
	.loc	17 88 41                # blts.c:88:41
	movsd	16(%rdx,%rax), %xmm12   # xmm12 = mem[0],zero
	.loc	17 89 41                # blts.c:89:41
	movsd	16(%rbx,%rcx,8), %xmm13 # xmm13 = mem[0],zero
	.loc	17 90 41                # blts.c:90:41
	movsd	24(%rdx,%rax), %xmm14   # xmm14 = mem[0],zero
	.loc	17 91 41                # blts.c:91:41
	movsd	24(%rbx,%rcx,8), %xmm1  # xmm1 = mem[0],zero
	.loc	17 92 41                # blts.c:92:41
	movsd	32(%rdx,%rax), %xmm2    # xmm2 = mem[0],zero
	.loc	17 93 41                # blts.c:93:41
	movsd	32(%rbx,%rcx,8), %xmm3  # xmm3 = mem[0],zero
	movq	%r9, %rdx
	movq	%r10, %rax
	movq	%r11, %rdi
	xorl	%ecx, %ecx
	movsd	24(%rsp), %xmm7         # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.p2align	4, 0x90
.LBB12_11:                              # %for.body132
                                        #   Parent Loop BB12_8 Depth=1
                                        #     Parent Loop BB12_10 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	17 83 18                # blts.c:83:18
	movsd	(%rdi), %xmm0           # xmm0 = mem[0],zero
	movsd	(%rax), %xmm4           # xmm4 = mem[0],zero
	.loc	17 84 39                # blts.c:84:39
	mulsd	%xmm8, %xmm4
	movsd	(%rdx), %xmm5           # xmm5 = mem[0],zero
	.loc	17 85 39                # blts.c:85:39
	mulsd	%xmm10, %xmm5
	.loc	17 85 21 is_stmt 0      # blts.c:85:21
	addsd	%xmm4, %xmm5
	movsd	40(%rax), %xmm4         # xmm4 = mem[0],zero
	.loc	17 86 39 is_stmt 1      # blts.c:86:39
	mulsd	%xmm9, %xmm4
	movsd	40(%rdx), %xmm6         # xmm6 = mem[0],zero
	.loc	17 86 21 is_stmt 0      # blts.c:86:21
	addsd	%xmm5, %xmm4
	.loc	17 87 39 is_stmt 1      # blts.c:87:39
	mulsd	%xmm11, %xmm6
	movsd	80(%rax), %xmm5         # xmm5 = mem[0],zero
	.loc	17 88 39                # blts.c:88:39
	mulsd	%xmm12, %xmm5
	.loc	17 87 21                # blts.c:87:21
	addsd	%xmm4, %xmm6
	.loc	17 88 21                # blts.c:88:21
	addsd	%xmm6, %xmm5
	movsd	80(%rdx), %xmm4         # xmm4 = mem[0],zero
	.loc	17 89 39                # blts.c:89:39
	mulsd	%xmm13, %xmm4
	.loc	17 89 21 is_stmt 0      # blts.c:89:21
	addsd	%xmm5, %xmm4
	movsd	120(%rax), %xmm5        # xmm5 = mem[0],zero
	.loc	17 90 39 is_stmt 1      # blts.c:90:39
	mulsd	%xmm14, %xmm5
	movsd	120(%rdx), %xmm6        # xmm6 = mem[0],zero
	.loc	17 90 21 is_stmt 0      # blts.c:90:21
	addsd	%xmm4, %xmm5
	.loc	17 91 39 is_stmt 1      # blts.c:91:39
	mulsd	%xmm1, %xmm6
	movsd	160(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	17 92 39                # blts.c:92:39
	mulsd	%xmm2, %xmm4
	.loc	17 91 21                # blts.c:91:21
	addsd	%xmm5, %xmm6
	.loc	17 92 21                # blts.c:92:21
	addsd	%xmm6, %xmm4
	movsd	160(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	17 93 39                # blts.c:93:39
	mulsd	%xmm3, %xmm5
	.loc	17 93 21 is_stmt 0      # blts.c:93:21
	addsd	%xmm4, %xmm5
	.loc	17 84 19 is_stmt 1      # blts.c:84:19
	mulsd	%xmm7, %xmm5
	.loc	17 84 11 is_stmt 0      # blts.c:84:11
	subsd	%xmm5, %xmm0
	.loc	17 83 15 is_stmt 1      # blts.c:83:15
	movsd	%xmm0, -80(%rsp,%rcx,8)
.Ltmp869:
	.loc	17 82 7 discriminator 1 # blts.c:82:7
	incq	%rcx
	addq	$8, %rdi
	addq	$8, %rax
	addq	$8, %rdx
	cmpq	$5, %rcx
	jne	.LBB12_11
.Ltmp870:
# BB#12:                                # %for.cond295.preheader
                                        #   in Loop: Header=BB12_10 Depth=2
	.loc	17 102 22               # blts.c:102:22
	imulq	$200, %r14, %rcx
	movq	(%r8,%rcx), %rax
	.loc	17 102 20 is_stmt 0     # blts.c:102:20
	movq	%rax, 64(%rsp)
	.loc	17 103 22 is_stmt 1     # blts.c:103:22
	movq	40(%r8,%rcx), %rax
	.loc	17 103 20 is_stmt 0     # blts.c:103:20
	movq	%rax, 72(%rsp)
	.loc	17 104 22 is_stmt 1     # blts.c:104:22
	movq	80(%r8,%rcx), %rax
	.loc	17 104 20 is_stmt 0     # blts.c:104:20
	movq	%rax, 80(%rsp)
	.loc	17 105 22 is_stmt 1     # blts.c:105:22
	movq	120(%r8,%rcx), %rax
	.loc	17 105 20 is_stmt 0     # blts.c:105:20
	movq	%rax, 88(%rsp)
	.loc	17 106 22 is_stmt 1     # blts.c:106:22
	movq	160(%r8,%rcx), %rax
	.loc	17 106 20 is_stmt 0     # blts.c:106:20
	movq	%rax, 96(%rsp)
	.loc	17 102 22 is_stmt 1     # blts.c:102:22
	movq	8(%r8,%rcx), %rax
	.loc	17 102 20 is_stmt 0     # blts.c:102:20
	movq	%rax, 104(%rsp)
	.loc	17 103 22 is_stmt 1     # blts.c:103:22
	movq	48(%r8,%rcx), %rsi
	.loc	17 103 20 is_stmt 0     # blts.c:103:20
	movq	%rsi, 112(%rsp)
	.loc	17 104 22 is_stmt 1     # blts.c:104:22
	movq	88(%r8,%rcx), %rbp
	.loc	17 104 20 is_stmt 0     # blts.c:104:20
	movq	%rbp, 120(%rsp)
	.loc	17 105 22 is_stmt 1     # blts.c:105:22
	movq	128(%r8,%rcx), %rdx
	.loc	17 105 20 is_stmt 0     # blts.c:105:20
	movq	%rdx, 128(%rsp)
	.loc	17 106 22 is_stmt 1     # blts.c:106:22
	movq	168(%r8,%rcx), %rdi
	.loc	17 106 20 is_stmt 0     # blts.c:106:20
	movq	%rdi, 136(%rsp)
	.loc	17 102 22 is_stmt 1     # blts.c:102:22
	movq	16(%r8,%rcx), %rax
	.loc	17 102 20 is_stmt 0     # blts.c:102:20
	movq	%rax, 144(%rsp)
	.loc	17 103 22 is_stmt 1     # blts.c:103:22
	movq	56(%r8,%rcx), %rax
	.loc	17 103 20 is_stmt 0     # blts.c:103:20
	movq	%rax, 152(%rsp)
	.loc	17 104 22 is_stmt 1     # blts.c:104:22
	movsd	96(%r8,%rcx), %xmm12    # xmm12 = mem[0],zero
	.loc	17 102 22               # blts.c:102:22
	movq	24(%r8,%rcx), %r12
	movq	32(%r8,%rcx), %r13
	.loc	17 103 22               # blts.c:103:22
	movsd	64(%r8,%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	17 104 22               # blts.c:104:22
	movsd	%xmm0, -104(%rsp)       # 8-byte Spill
	movsd	104(%r8,%rcx), %xmm0    # xmm0 = mem[0],zero
	.loc	17 103 22               # blts.c:103:22
	movsd	%xmm0, 48(%rsp)         # 8-byte Spill
	movsd	72(%r8,%rcx), %xmm0     # xmm0 = mem[0],zero
	.loc	17 104 22               # blts.c:104:22
	movsd	%xmm0, -112(%rsp)       # 8-byte Spill
	movsd	112(%r8,%rcx), %xmm0    # xmm0 = mem[0],zero
	.loc	17 105 22               # blts.c:105:22
	movsd	%xmm0, -120(%rsp)       # 8-byte Spill
	movsd	152(%r8,%rcx), %xmm0    # xmm0 = mem[0],zero
	.loc	17 106 22               # blts.c:106:22
	movsd	%xmm0, 56(%rsp)         # 8-byte Spill
	movsd	192(%r8,%rcx), %xmm8    # xmm8 = mem[0],zero
.Ltmp871:
	.loc	17 109 18               # blts.c:109:18
	movsd	.LCPI12_0(%rip), %xmm4  # xmm4 = mem[0],zero
	divsd	64(%rsp), %xmm4
.Ltmp872:
	#DEBUG_VALUE: blts:tmp1 <- %XMM4
	movsd	104(%rsp), %xmm3        # xmm3 = mem[0],zero
	.loc	17 110 18               # blts.c:110:18
	mulsd	%xmm4, %xmm3
.Ltmp873:
	#DEBUG_VALUE: blts:tmp <- %XMM3
	.loc	17 111 21               # blts.c:111:21
	movd	%rsi, %xmm5
	movd	%rbp, %xmm0
	punpcklqdq	%xmm0, %xmm5    # xmm5 = xmm5[0],xmm0[0]
	.loc	17 111 40 is_stmt 0     # blts.c:111:40
	movupd	72(%rsp), %xmm0
	.loc	17 111 38               # blts.c:111:38
	movapd	%xmm3, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	movaps	%xmm6, %xmm1
	mulpd	%xmm0, %xmm1
	.loc	17 111 32               # blts.c:111:32
	subpd	%xmm1, %xmm5
	.loc	17 120 32 is_stmt 1     # blts.c:120:32
	movsd	136(%r8,%rcx), %xmm13   # xmm13 = mem[0],zero
	movhpd	176(%r8,%rcx), %xmm13   # xmm13 = xmm13[0],mem[0]
	.loc	17 127 32               # blts.c:127:32
	movsd	144(%r8,%rcx), %xmm14   # xmm14 = mem[0],zero
	movhpd	184(%r8,%rcx), %xmm14   # xmm14 = xmm14[0],mem[0]
	.loc	17 111 18               # blts.c:111:18
	movapd	%xmm5, 112(%rsp)
	.loc	17 113 21               # blts.c:113:21
	movd	%rdx, %xmm1
	movd	%rdi, %xmm2
	punpcklqdq	%xmm2, %xmm1    # xmm1 = xmm1[0],xmm2[0]
	.loc	17 113 40 is_stmt 0     # blts.c:113:40
	movupd	88(%rsp), %xmm11
	.loc	17 113 38               # blts.c:113:38
	mulpd	%xmm11, %xmm6
	.loc	17 113 32               # blts.c:113:32
	subpd	%xmm6, %xmm1
	.loc	17 115 23 is_stmt 1     # blts.c:115:23
	movapd	%xmm1, 272(%rsp)        # 16-byte Spill
	movsd	-80(%rsp), %xmm7        # xmm7 = mem[0],zero
	.loc	17 115 29 is_stmt 0     # blts.c:115:29
	mulsd	%xmm7, %xmm3
.Ltmp874:
	.loc	17 115 15               # blts.c:115:15
	movsd	-72(%rsp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 115 21               # blts.c:115:21
	subsd	%xmm3, %xmm2
	movsd	%xmm2, 40(%rsp)         # 8-byte Spill
	movapd	%xmm2, %xmm6
	.loc	17 113 18 is_stmt 1     # blts.c:113:18
	movapd	%xmm1, 128(%rsp)
	movsd	144(%rsp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 117 18               # blts.c:117:18
	mulsd	%xmm4, %xmm2
.Ltmp875:
	#DEBUG_VALUE: blts:tmp <- %XMM2
	.loc	17 118 38               # blts.c:118:38
	movapd	%xmm2, %xmm3
	mulsd	%xmm0, %xmm3
	.loc	17 118 21 is_stmt 0     # blts.c:118:21
	movd	%rax, %xmm9
	.loc	17 118 32               # blts.c:118:32
	subsd	%xmm3, %xmm9
	.loc	17 119 38 is_stmt 1     # blts.c:119:38
	movapd	%xmm0, %xmm10
	shufpd	$1, %xmm10, %xmm10      # xmm10 = xmm10[1,0]
	movapd	%xmm2, %xmm3
	mulsd	%xmm10, %xmm3
	.loc	17 119 32 is_stmt 0     # blts.c:119:32
	subsd	%xmm3, %xmm12
	movsd	%xmm12, -96(%rsp)       # 8-byte Spill
	.loc	17 120 38 is_stmt 1     # blts.c:120:38
	movapd	%xmm2, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm11, %xmm3
	.loc	17 120 32 is_stmt 0     # blts.c:120:32
	subpd	%xmm3, %xmm13
	.loc	17 115 13 is_stmt 1     # blts.c:115:13
	movsd	%xmm6, -72(%rsp)
	.loc	17 122 29               # blts.c:122:29
	mulsd	%xmm7, %xmm2
.Ltmp876:
	.loc	17 122 15 is_stmt 0     # blts.c:122:15
	movsd	-64(%rsp), %xmm15       # xmm15 = mem[0],zero
	.loc	17 122 21               # blts.c:122:21
	subsd	%xmm2, %xmm15
	.loc	17 124 20 is_stmt 1     # blts.c:124:20
	movd	%r12, %xmm2
	.loc	17 124 18 is_stmt 0     # blts.c:124:18
	mulsd	%xmm4, %xmm2
.Ltmp877:
	#DEBUG_VALUE: blts:tmp <- %XMM2
	.loc	17 125 38 is_stmt 1     # blts.c:125:38
	movapd	%xmm2, %xmm6
	mulsd	%xmm0, %xmm6
	.loc	17 125 32 is_stmt 0     # blts.c:125:32
	movsd	-104(%rsp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	subsd	%xmm6, %xmm1
	.loc	17 126 38 is_stmt 1     # blts.c:126:38
	movsd	%xmm1, -104(%rsp)       # 8-byte Spill
	movapd	%xmm2, %xmm6
	mulsd	%xmm10, %xmm6
	movsd	48(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	17 126 32 is_stmt 0     # blts.c:126:32
	subsd	%xmm6, %xmm1
	.loc	17 127 38 is_stmt 1     # blts.c:127:38
	movapd	%xmm2, %xmm6
	movlhps	%xmm6, %xmm6            # xmm6 = xmm6[0,0]
	mulpd	%xmm11, %xmm6
	.loc	17 127 32 is_stmt 0     # blts.c:127:32
	subpd	%xmm6, %xmm14
	.loc	17 129 29 is_stmt 1     # blts.c:129:29
	mulsd	%xmm7, %xmm2
.Ltmp878:
	.loc	17 129 15 is_stmt 0     # blts.c:129:15
	movsd	-56(%rsp), %xmm6        # xmm6 = mem[0],zero
	.loc	17 129 21               # blts.c:129:21
	subsd	%xmm2, %xmm6
	.loc	17 131 20 is_stmt 1     # blts.c:131:20
	movd	%r13, %xmm12
	.loc	17 131 18 is_stmt 0     # blts.c:131:18
	mulsd	%xmm4, %xmm12
.Ltmp879:
	#DEBUG_VALUE: blts:tmp <- %XMM12
	.loc	17 132 38 is_stmt 1     # blts.c:132:38
	mulsd	%xmm12, %xmm0
	.loc	17 132 32 is_stmt 0     # blts.c:132:32
	movsd	-112(%rsp), %xmm2       # 8-byte Reload
                                        # xmm2 = mem[0],zero
	subsd	%xmm0, %xmm2
	.loc	17 133 38 is_stmt 1     # blts.c:133:38
	movsd	%xmm2, -112(%rsp)       # 8-byte Spill
	mulsd	%xmm12, %xmm10
	.loc	17 133 32 is_stmt 0     # blts.c:133:32
	movsd	-120(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	subsd	%xmm10, %xmm0
	.loc	17 134 38 is_stmt 1     # blts.c:134:38
	movsd	%xmm0, -120(%rsp)       # 8-byte Spill
	movapd	%xmm12, %xmm0
	mulsd	%xmm11, %xmm0
	movsd	56(%rsp), %xmm3         # 8-byte Reload
                                        # xmm3 = mem[0],zero
	.loc	17 134 32 is_stmt 0     # blts.c:134:32
	subsd	%xmm0, %xmm3
	.loc	17 135 38 is_stmt 1     # blts.c:135:38
	shufpd	$1, %xmm11, %xmm11      # xmm11 = xmm11[1,0]
	mulsd	%xmm12, %xmm11
	.loc	17 135 32 is_stmt 0     # blts.c:135:32
	subsd	%xmm11, %xmm8
	.loc	17 136 29 is_stmt 1     # blts.c:136:29
	mulsd	%xmm7, %xmm12
.Ltmp880:
	.loc	17 136 15 is_stmt 0     # blts.c:136:15
	movsd	-48(%rsp), %xmm2        # xmm2 = mem[0],zero
	.loc	17 136 21               # blts.c:136:21
	subsd	%xmm12, %xmm2
	movapd	%xmm1, %xmm12
	.loc	17 118 18 is_stmt 1     # blts.c:118:18
	movsd	%xmm9, 152(%rsp)
	.loc	17 109 18               # blts.c:109:18
	movsd	.LCPI12_0(%rip), %xmm7  # xmm7 = mem[0],zero
	.loc	17 138 18               # blts.c:138:18
	divsd	%xmm5, %xmm7
.Ltmp881:
	#DEBUG_VALUE: blts:tmp1 <- %XMM7
	.loc	17 139 18               # blts.c:139:18
	mulsd	%xmm7, %xmm9
.Ltmp882:
	#DEBUG_VALUE: blts:tmp <- %XMM9
	.loc	17 140 38               # blts.c:140:38
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
	movapd	%xmm9, %xmm4
	mulsd	%xmm5, %xmm4
	.loc	17 140 32 is_stmt 0     # blts.c:140:32
	movsd	-96(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	subsd	%xmm4, %xmm0
	movsd	%xmm0, -96(%rsp)        # 8-byte Spill
	.loc	17 141 38 is_stmt 1     # blts.c:141:38
	movapd	%xmm9, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	movapd	272(%rsp), %xmm10       # 16-byte Reload
	mulpd	%xmm10, %xmm4
	.loc	17 141 32 is_stmt 0     # blts.c:141:32
	subpd	%xmm4, %xmm13
	movsd	40(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	17 143 29 is_stmt 1     # blts.c:143:29
	mulsd	%xmm1, %xmm9
.Ltmp883:
	.loc	17 143 21 is_stmt 0     # blts.c:143:21
	subsd	%xmm9, %xmm15
	.loc	17 145 18 is_stmt 1     # blts.c:145:18
	movapd	%xmm7, %xmm0
	mulsd	-104(%rsp), %xmm0       # 8-byte Folded Reload
.Ltmp884:
	#DEBUG_VALUE: blts:tmp <- %XMM0
	.loc	17 146 38               # blts.c:146:38
	mulsd	%xmm0, %xmm5
	.loc	17 146 32 is_stmt 0     # blts.c:146:32
	subsd	%xmm5, %xmm12
	.loc	17 147 38 is_stmt 1     # blts.c:147:38
	movapd	%xmm0, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	mulpd	%xmm10, %xmm4
	.loc	17 147 32 is_stmt 0     # blts.c:147:32
	subpd	%xmm4, %xmm14
	.loc	17 149 29 is_stmt 1     # blts.c:149:29
	mulsd	%xmm1, %xmm0
.Ltmp885:
	.loc	17 149 21 is_stmt 0     # blts.c:149:21
	subsd	%xmm0, %xmm6
	.loc	17 151 18 is_stmt 1     # blts.c:151:18
	mulsd	-112(%rsp), %xmm7       # 8-byte Folded Reload
.Ltmp886:
	#DEBUG_VALUE: blts:tmp <- %XMM7
	.loc	17 152 40               # blts.c:152:40
	movsd	120(%rsp), %xmm11       # xmm11 = mem[0],zero
	.loc	17 153 40               # blts.c:153:40
	movsd	128(%rsp), %xmm10       # xmm10 = mem[0],zero
	.loc	17 152 38               # blts.c:152:38
	movapd	%xmm7, %xmm0
	mulsd	%xmm11, %xmm0
	movsd	-120(%rsp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	17 152 32 is_stmt 0     # blts.c:152:32
	subsd	%xmm0, %xmm1
	.loc	17 153 38 is_stmt 1     # blts.c:153:38
	movsd	%xmm1, -120(%rsp)       # 8-byte Spill
	movapd	%xmm7, %xmm0
	mulsd	%xmm10, %xmm0
	.loc	17 153 32 is_stmt 0     # blts.c:153:32
	subsd	%xmm0, %xmm3
	.loc	17 154 40 is_stmt 1     # blts.c:154:40
	movsd	136(%rsp), %xmm9        # xmm9 = mem[0],zero
	.loc	17 154 38 is_stmt 0     # blts.c:154:38
	movapd	%xmm7, %xmm0
	mulsd	%xmm9, %xmm0
	.loc	17 154 32               # blts.c:154:32
	subsd	%xmm0, %xmm8
	.loc	17 155 23 is_stmt 1     # blts.c:155:23
	movsd	-72(%rsp), %xmm4        # xmm4 = mem[0],zero
	.loc	17 155 29 is_stmt 0     # blts.c:155:29
	mulsd	%xmm4, %xmm7
.Ltmp887:
	.loc	17 155 21               # blts.c:155:21
	subsd	%xmm7, %xmm2
	.loc	17 109 18 is_stmt 1     # blts.c:109:18
	movsd	.LCPI12_0(%rip), %xmm0  # xmm0 = mem[0],zero
	.loc	17 157 18               # blts.c:157:18
	movapd	%xmm0, %xmm7
	divsd	-96(%rsp), %xmm7        # 8-byte Folded Reload
.Ltmp888:
	#DEBUG_VALUE: blts:tmp1 <- %XMM7
	.loc	17 158 18               # blts.c:158:18
	movapd	%xmm7, %xmm5
	mulsd	%xmm12, %xmm5
.Ltmp889:
	#DEBUG_VALUE: blts:tmp <- %XMM5
	.loc	17 159 38               # blts.c:159:38
	movapd	%xmm5, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm13, %xmm0
	.loc	17 159 32 is_stmt 0     # blts.c:159:32
	subpd	%xmm0, %xmm14
	.loc	17 161 29 is_stmt 1     # blts.c:161:29
	mulsd	%xmm15, %xmm5
.Ltmp890:
	.loc	17 161 21 is_stmt 0     # blts.c:161:21
	subsd	%xmm5, %xmm6
	.loc	17 163 18 is_stmt 1     # blts.c:163:18
	mulsd	%xmm1, %xmm7
.Ltmp891:
	#DEBUG_VALUE: blts:tmp <- %XMM7
	.loc	17 164 38               # blts.c:164:38
	movapd	%xmm7, %xmm0
	mulsd	%xmm13, %xmm0
	.loc	17 164 32 is_stmt 0     # blts.c:164:32
	subsd	%xmm0, %xmm3
	.loc	17 165 38 is_stmt 1     # blts.c:165:38
	movapd	%xmm13, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	movapd	%xmm7, %xmm5
	mulsd	%xmm0, %xmm5
	.loc	17 165 32 is_stmt 0     # blts.c:165:32
	subsd	%xmm5, %xmm8
	.loc	17 166 29 is_stmt 1     # blts.c:166:29
	mulsd	%xmm15, %xmm7
.Ltmp892:
	.loc	17 166 21 is_stmt 0     # blts.c:166:21
	subsd	%xmm7, %xmm2
	.loc	17 109 18 is_stmt 1     # blts.c:109:18
	movsd	.LCPI12_0(%rip), %xmm1  # xmm1 = mem[0],zero
	.loc	17 168 18               # blts.c:168:18
	divsd	%xmm14, %xmm1
.Ltmp893:
	#DEBUG_VALUE: blts:tmp1 <- %XMM1
	.loc	17 169 18               # blts.c:169:18
	mulsd	%xmm3, %xmm1
.Ltmp894:
	#DEBUG_VALUE: blts:tmp <- %XMM1
	.loc	17 170 38               # blts.c:170:38
	movapd	%xmm14, %xmm7
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	movapd	%xmm1, %xmm5
	mulsd	%xmm7, %xmm5
	.loc	17 170 32 is_stmt 0     # blts.c:170:32
	subsd	%xmm5, %xmm8
	.loc	17 171 29 is_stmt 1     # blts.c:171:29
	mulsd	%xmm6, %xmm1
.Ltmp895:
	.loc	17 171 21 is_stmt 0     # blts.c:171:21
	subsd	%xmm1, %xmm2
	.loc	17 171 13               # blts.c:171:13
	movsd	%xmm2, -48(%rsp)
	.loc	17 176 27 is_stmt 1     # blts.c:176:27
	divsd	%xmm8, %xmm2
	.loc	17 179 22               # blts.c:179:22
	mulsd	%xmm2, %xmm7
	.loc	17 179 9 is_stmt 0      # blts.c:179:9
	subsd	%xmm7, %xmm6
	.loc	17 176 19 is_stmt 1     # blts.c:176:19
	movsd	%xmm2, 32(%r15)
	.loc	17 178 13               # blts.c:178:13
	movsd	%xmm6, -56(%rsp)
	.loc	17 180 27               # blts.c:180:27
	divsd	%xmm14, %xmm6
	.loc	17 183 22               # blts.c:183:22
	movapd	%xmm6, %xmm1
	mulsd	%xmm13, %xmm1
	.loc	17 183 9 is_stmt 0      # blts.c:183:9
	subsd	%xmm1, %xmm15
	movsd	-96(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	17 184 22 is_stmt 1     # blts.c:184:22
	mulsd	%xmm2, %xmm0
	.loc	17 184 9 is_stmt 0      # blts.c:184:9
	subsd	%xmm0, %xmm15
	.loc	17 180 19 is_stmt 1     # blts.c:180:19
	movsd	%xmm6, 24(%r15)
	.loc	17 182 13               # blts.c:182:13
	movsd	%xmm15, -64(%rsp)
	.loc	17 185 27               # blts.c:185:27
	divsd	%xmm1, %xmm15
	.loc	17 188 22               # blts.c:188:22
	mulsd	%xmm15, %xmm11
	.loc	17 188 9 is_stmt 0      # blts.c:188:9
	subsd	%xmm11, %xmm4
	.loc	17 189 22 is_stmt 1     # blts.c:189:22
	mulsd	%xmm6, %xmm10
	.loc	17 189 9 is_stmt 0      # blts.c:189:9
	subsd	%xmm10, %xmm4
	.loc	17 185 19 is_stmt 1     # blts.c:185:19
	movsd	%xmm15, 16(%r15)
	.loc	17 190 22               # blts.c:190:22
	mulsd	%xmm2, %xmm9
	.loc	17 190 9 is_stmt 0      # blts.c:190:9
	subsd	%xmm9, %xmm4
	.loc	17 187 13 is_stmt 1     # blts.c:187:13
	movsd	%xmm4, -72(%rsp)
	.loc	17 191 27               # blts.c:191:27
	divsd	112(%rsp), %xmm4
	.loc	17 191 19 is_stmt 0     # blts.c:191:19
	movsd	%xmm4, 8(%r15)
	.loc	17 193 15 is_stmt 1     # blts.c:193:15
	movsd	-80(%rsp), %xmm0        # xmm0 = mem[0],zero
	.loc	17 194 22               # blts.c:194:22
	mulsd	72(%rsp), %xmm4
	.loc	17 194 9 is_stmt 0      # blts.c:194:9
	subsd	%xmm4, %xmm0
	.loc	17 195 22 is_stmt 1     # blts.c:195:22
	mulsd	80(%rsp), %xmm15
	.loc	17 195 9 is_stmt 0      # blts.c:195:9
	subsd	%xmm15, %xmm0
	.loc	17 196 22 is_stmt 1     # blts.c:196:22
	mulsd	88(%rsp), %xmm6
	.loc	17 196 9 is_stmt 0      # blts.c:196:9
	subsd	%xmm6, %xmm0
	.loc	17 197 22 is_stmt 1     # blts.c:197:22
	mulsd	96(%rsp), %xmm2
	.loc	17 197 9 is_stmt 0      # blts.c:197:9
	subsd	%xmm2, %xmm0
	.loc	17 193 13 is_stmt 1     # blts.c:193:13
	movsd	%xmm0, -80(%rsp)
	.loc	17 198 27               # blts.c:198:27
	divsd	64(%rsp), %xmm0
	.loc	17 198 19 is_stmt 0     # blts.c:198:19
	movsd	%xmm0, (%r15)
.Ltmp896:
	.loc	17 81 5 is_stmt 1 discriminator 1 # blts.c:81:5
	incq	%r14
	addq	$40, %r11
	addq	$200, %r10
	addq	$200, %r9
	cmpl	408(%rsp), %r14d
	jne	.LBB12_10
# BB#13:                                # %for.inc829.loopexit
                                        #   in Loop: Header=BB12_8 Depth=1
.Ltmp897:
	.loc	17 102 20               # blts.c:102:20
	movq	%r12, 184(%rsp)
	movq	%r13, 224(%rsp)
.Ltmp898:
	.loc	17 125 18               # blts.c:125:18
	movsd	-104(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 192(%rsp)
	.loc	17 132 18               # blts.c:132:18
	movsd	-112(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 232(%rsp)
	.loc	17 140 18               # blts.c:140:18
	movsd	%xmm1, 160(%rsp)
	.loc	17 141 18               # blts.c:141:18
	movupd	%xmm13, 168(%rsp)
	.loc	17 146 18               # blts.c:146:18
	movsd	%xmm12, 200(%rsp)
	.loc	17 152 18               # blts.c:152:18
	movsd	-120(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 240(%rsp)
	.loc	17 159 18               # blts.c:159:18
	movapd	%xmm14, 208(%rsp)
	.loc	17 164 18               # blts.c:164:18
	movsd	%xmm3, 248(%rsp)
	.loc	17 170 18               # blts.c:170:18
	movsd	%xmm8, 256(%rsp)
	movl	424(%rsp), %edx
	movl	%edx, %ebx
	movl	400(%rsp), %edi
	movl	%edi, %r12d
	movq	16(%rsp), %rbp          # 8-byte Reload
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	-32(%rsp), %rax         # 8-byte Reload
	movq	(%rsp), %rdx            # 8-byte Reload
	movq	-8(%rsp), %r10          # 8-byte Reload
	movq	-40(%rsp), %rcx         # 8-byte Reload
.Ltmp899:
.LBB12_14:                              # %for.inc829
                                        #   in Loop: Header=BB12_8 Depth=1
	.loc	17 80 3 discriminator 1 # blts.c:80:3
	incq	%rbp
	addq	%rax, %rdi
	addq	%rcx, %r10
	addq	%rcx, %rdx
	cmpl	%ebx, %ebp
	jne	.LBB12_8
.Ltmp900:
.LBB12_15:                              # %for.end831
	.loc	17 201 1                # blts.c:201:1
	addq	$296, %rsp              # imm = 0x128
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp901:
.Lfunc_end12:
	.size	blts, .Lfunc_end12-blts
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI13_0:
	.quad	4607182418800017408     # double 1
.LCPI13_1:
	.quad	-4614688418178968235    # double -1.3333333333333333
.LCPI13_2:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI13_3:
	.quad	4608683618675807573     # double 1.3333333333333333
.LCPI13_5:
	.quad	-4611686018427387904    # double -2
.LCPI13_6:
	.quad	4589180029889541744     # double 0.062666666666666648
.LCPI13_7:
	.quad	-4631790087163969800    # double -0.095999999999999974
.LCPI13_8:
	.quad	4596229664506252361     # double 0.19599999999999998
.LCPI13_9:
	.quad	4591581949690806008     # double 0.095999999999999974
.LCPI13_10:
	.quad	-4634192006965234064    # double -0.062666666666666648
.LCPI13_11:
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI13_12:
	.quad	4609884578576439706     # double 1.6000000000000001
.LCPI13_13:
	.quad	4593971859893063953     # double 0.13333333333333333
.LCPI13_14:
	.quad	-4622494657533077094    # double -0.40000000000000002
.LCPI13_16:
	.quad	4605380978949069210     # double 0.80000000000000004
.LCPI13_17:
	.quad	4608983858650965606     # double 1.3999999999999999
.LCPI13_19:
	.quad	-4631501856787818086    # double -0.10000000000000001
.LCPI13_20:
	.quad	-4629400176961711855    # double -0.13333333333333333
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI13_4:
	.quad	-9223372036854775808    # 0x8000000000000000
	.quad	-9223372036854775808    # 0x8000000000000000
.LCPI13_15:
	.quad	-4629400176961711855    # double -0.13333333333333333
	.quad	-4631501856787818086    # double -0.10000000000000001
.LCPI13_18:
	.quad	-4631501856787818086    # double -0.10000000000000001
	.quad	-4629400176961711855    # double -0.13333333333333333
	.text
	.globl	jacu
	.p2align	4, 0x90
	.type	jacu,@function
jacu:                                   # @jacu
.Lfunc_begin13:
	.file	18 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/jacu.c"
	.loc	18 40 0                 # jacu.c:40:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	18 54 3 prologue_end discriminator 1 # jacu.c:54:3
	pushq	%rbp
.Ltmp902:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp903:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp904:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp905:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp906:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp907:
	.cfi_def_cfa_offset 56
	subq	$648, %rsp              # imm = 0x288
.Ltmp908:
	.cfi_def_cfa_offset 704
.Ltmp909:
	.cfi_offset %rbx, -56
.Ltmp910:
	.cfi_offset %r12, -48
.Ltmp911:
	.cfi_offset %r13, -40
.Ltmp912:
	.cfi_offset %r14, -32
.Ltmp913:
	.cfi_offset %r15, -24
.Ltmp914:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: jacu:k <- %EDI
.Ltmp915:
	#DEBUG_VALUE: jacu:r43 <- 1.333333e+00
	#DEBUG_VALUE: jacu:c1345 <- 1.960000e-01
	#DEBUG_VALUE: jacu:c34 <- 1.000000e-01
	movslq	jst(%rip), %r11
	movslq	jend(%rip), %r8
	cmpl	%r8d, %r11d
	jge	.LBB13_5
.Ltmp916:
# BB#1:                                 # %for.body.lr.ph
	#DEBUG_VALUE: jacu:k <- %EDI
	.loc	18 63 42                # jacu.c:63:42
	movsd	tx1(%rip), %xmm8        # xmm8 = mem[0],zero
	.loc	18 63 48 is_stmt 0      # jacu.c:63:48
	movsd	dx1(%rip), %xmm15       # xmm15 = mem[0],zero
	.loc	18 63 46                # jacu.c:63:46
	movapd	%xmm8, %xmm1
	mulsd	%xmm15, %xmm1
	.loc	18 63 54                # jacu.c:63:54
	movsd	ty1(%rip), %xmm14       # xmm14 = mem[0],zero
	.loc	18 63 60                # jacu.c:63:60
	movsd	dy1(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 63 58                # jacu.c:63:58
	movapd	%xmm0, 64(%rsp)         # 16-byte Spill
	movapd	%xmm14, %xmm2
	mulsd	%xmm0, %xmm2
	.loc	18 63 52                # jacu.c:63:52
	addsd	%xmm1, %xmm2
	.loc	18 63 66                # jacu.c:63:66
	movsd	tz1(%rip), %xmm7        # xmm7 = mem[0],zero
	.loc	18 63 72                # jacu.c:63:72
	movsd	dz1(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 63 70                # jacu.c:63:70
	movapd	%xmm0, 32(%rsp)         # 16-byte Spill
	movapd	%xmm7, %xmm6
	mulsd	%xmm0, %xmm6
	.loc	18 63 64                # jacu.c:63:64
	addsd	%xmm2, %xmm6
	.loc	18 75 30 is_stmt 1      # jacu.c:75:30
	movsd	dx2(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 75 28 is_stmt 0      # jacu.c:75:28
	movsd	%xmm0, -32(%rsp)        # 8-byte Spill
	movapd	%xmm8, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	18 75 42                # jacu.c:75:42
	movsd	dy2(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 75 40                # jacu.c:75:40
	movsd	%xmm0, -72(%rsp)        # 8-byte Spill
	movapd	%xmm14, %xmm2
	mulsd	%xmm0, %xmm2
	.loc	18 75 34                # jacu.c:75:34
	addsd	%xmm1, %xmm2
	.loc	18 75 54                # jacu.c:75:54
	movsd	dz2(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 75 52                # jacu.c:75:52
	movsd	%xmm0, -104(%rsp)       # 8-byte Spill
	movapd	%xmm7, %xmm13
	mulsd	%xmm0, %xmm13
	.loc	18 75 46                # jacu.c:75:46
	addsd	%xmm2, %xmm13
	.loc	18 87 30 is_stmt 1      # jacu.c:87:30
	movsd	dx3(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 87 28 is_stmt 0      # jacu.c:87:28
	movsd	%xmm0, -40(%rsp)        # 8-byte Spill
	movapd	%xmm8, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	18 87 42                # jacu.c:87:42
	movsd	dy3(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 87 40                # jacu.c:87:40
	movsd	%xmm0, -80(%rsp)        # 8-byte Spill
	movapd	%xmm14, %xmm2
	mulsd	%xmm0, %xmm2
	.loc	18 87 34                # jacu.c:87:34
	addsd	%xmm1, %xmm2
	.loc	18 87 54                # jacu.c:87:54
	movsd	dz3(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 87 52                # jacu.c:87:52
	movsd	%xmm0, -112(%rsp)       # 8-byte Spill
	movapd	%xmm7, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	18 87 46                # jacu.c:87:46
	addsd	%xmm2, %xmm1
	movsd	%xmm1, -24(%rsp)        # 8-byte Spill
	.loc	18 99 30 is_stmt 1      # jacu.c:99:30
	movsd	dx4(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 99 28 is_stmt 0      # jacu.c:99:28
	movapd	%xmm0, 80(%rsp)         # 16-byte Spill
	movapd	%xmm8, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	18 99 42                # jacu.c:99:42
	movsd	dy4(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 99 40                # jacu.c:99:40
	movapd	%xmm0, 48(%rsp)         # 16-byte Spill
	movapd	%xmm14, %xmm2
	mulsd	%xmm0, %xmm2
	.loc	18 99 34                # jacu.c:99:34
	addsd	%xmm1, %xmm2
	.loc	18 99 54                # jacu.c:99:54
	movsd	dz4(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 99 52                # jacu.c:99:52
	movapd	%xmm0, 16(%rsp)         # 16-byte Spill
	movapd	%xmm7, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	18 99 46                # jacu.c:99:46
	addsd	%xmm2, %xmm1
	movsd	%xmm1, -48(%rsp)        # 8-byte Spill
	.loc	18 103 21 is_stmt 1     # jacu.c:103:21
	movsd	.LCPI13_6(%rip), %xmm10 # xmm10 = mem[0],zero
	movapd	%xmm8, %xmm1
	mulsd	%xmm10, %xmm1
	.loc	18 104 23               # jacu.c:104:23
	movsd	.LCPI13_7(%rip), %xmm4  # xmm4 = mem[0],zero
	movapd	%xmm14, %xmm5
	mulsd	%xmm4, %xmm5
	.loc	18 103 21               # jacu.c:103:21
	movapd	%xmm5, %xmm0
	subsd	%xmm1, %xmm0
	movapd	%xmm0, %xmm3
	.loc	18 106 23               # jacu.c:106:23
	movapd	%xmm8, %xmm0
	mulsd	%xmm4, %xmm0
	.loc	18 107 23               # jacu.c:107:23
	movapd	%xmm14, %xmm1
	mulsd	%xmm10, %xmm1
	movapd	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	.loc	18 105 23               # jacu.c:105:23
	movapd	%xmm7, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	18 105 17 is_stmt 0     # jacu.c:105:17
	movapd	%xmm3, %xmm4
	addsd	%xmm1, %xmm4
	movsd	%xmm4, 184(%rsp)        # 8-byte Spill
	.loc	18 108 17 is_stmt 1     # jacu.c:108:17
	addsd	%xmm1, %xmm2
	movapd	%xmm2, 576(%rsp)        # 16-byte Spill
	.loc	18 118 17               # jacu.c:118:17
	movsd	.LCPI13_9(%rip), %xmm4  # xmm4 = mem[0],zero
	movapd	%xmm7, %xmm1
	mulsd	%xmm4, %xmm1
	subsd	%xmm1, %xmm3
	movsd	%xmm3, -64(%rsp)        # 8-byte Spill
	.loc	18 120 17               # jacu.c:120:17
	movapd	%xmm8, %xmm2
	mulsd	%xmm4, %xmm2
	.loc	18 121 17               # jacu.c:121:17
	movapd	%xmm14, %xmm9
	mulsd	.LCPI13_10(%rip), %xmm9
	.loc	18 120 17               # jacu.c:120:17
	subsd	%xmm2, %xmm9
	.loc	18 122 17               # jacu.c:122:17
	subsd	%xmm1, %xmm9
	.loc	18 110 17               # jacu.c:110:17
	addsd	%xmm5, %xmm0
	.loc	18 124 17               # jacu.c:124:17
	subsd	%xmm2, %xmm5
	.loc	18 111 23               # jacu.c:111:23
	movapd	%xmm7, %xmm1
	mulsd	%xmm10, %xmm1
	subsd	%xmm1, %xmm0
	movapd	%xmm0, 592(%rsp)        # 16-byte Spill
	.loc	18 126 17               # jacu.c:126:17
	subsd	%xmm1, %xmm5
	movsd	%xmm5, -56(%rsp)        # 8-byte Spill
	movsd	.LCPI13_1(%rip), %xmm2  # xmm2 = mem[0],zero
	.loc	18 70 19                # jacu.c:70:19
	mulsd	%xmm8, %xmm2
	.loc	18 81 13                # jacu.c:81:13
	movapd	%xmm8, %xmm5
	xorpd	.LCPI13_4(%rip), %xmm5
	.loc	18 74 18                # jacu.c:74:18
	movsd	.LCPI13_3(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	18 81 25                # jacu.c:81:25
	movapd	%xmm14, %xmm11
	mulsd	%xmm10, %xmm11
	.loc	18 81 19 is_stmt 0      # jacu.c:81:19
	movapd	%xmm5, %xmm4
	subsd	%xmm11, %xmm4
	.loc	18 86 18 is_stmt 1      # jacu.c:86:18
	addsd	%xmm8, %xmm11
	.loc	18 63 29                # jacu.c:63:29
	movsd	dt(%rip), %xmm0         # xmm0 = mem[0],zero
	.loc	18 138 28               # jacu.c:138:28
	movapd	%xmm0, -16(%rsp)        # 16-byte Spill
	mulsd	%xmm8, %xmm0
	.loc	18 74 18                # jacu.c:74:18
	movapd	%xmm0, 208(%rsp)        # 16-byte Spill
	movapd	%xmm8, %xmm12
	.loc	18 98 18                # jacu.c:98:18
	movapd	%xmm8, %xmm3
	.loc	18 129 30               # jacu.c:129:30
	movsd	dx5(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 129 28 is_stmt 0     # jacu.c:129:28
	movsd	%xmm0, -88(%rsp)        # 8-byte Spill
	mulsd	%xmm0, %xmm8
	.loc	18 129 42               # jacu.c:129:42
	movsd	dy5(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 129 40               # jacu.c:129:40
	movsd	%xmm0, -96(%rsp)        # 8-byte Spill
	movapd	%xmm14, %xmm1
	mulsd	%xmm0, %xmm1
	.loc	18 129 34               # jacu.c:129:34
	addsd	%xmm8, %xmm1
	.loc	18 129 54               # jacu.c:129:54
	movsd	dz5(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	18 129 52               # jacu.c:129:52
	movsd	%xmm0, -120(%rsp)       # 8-byte Spill
	movapd	%xmm7, %xmm8
	mulsd	%xmm0, %xmm8
	.loc	18 129 46               # jacu.c:129:46
	addsd	%xmm1, %xmm8
.Ltmp917:
	.loc	18 55 23 is_stmt 1 discriminator 1 # jacu.c:55:23
	movl	iend(%rip), %r9d
.Ltmp918:
	.loc	18 59 14                # jacu.c:59:14
	movslq	%edi, %rax
	.loc	18 63 32                # jacu.c:63:32
	movapd	-16(%rsp), %xmm0        # 16-byte Reload
	addsd	%xmm0, %xmm0
	.loc	18 63 38 is_stmt 0      # jacu.c:63:38
	mulsd	%xmm0, %xmm6
	.loc	18 63 27                # jacu.c:63:27
	addsd	.LCPI13_0(%rip), %xmm6
	.loc	18 70 25 is_stmt 1      # jacu.c:70:25
	movsd	%xmm6, 200(%rsp)        # 8-byte Spill
	subsd	%xmm14, %xmm2
	.loc	18 70 31 is_stmt 0      # jacu.c:70:31
	subsd	%xmm7, %xmm2
	.loc	18 70 9                 # jacu.c:70:9
	mulsd	%xmm0, %xmm2
	movapd	%xmm2, 560(%rsp)        # 16-byte Spill
	.loc	18 74 18 is_stmt 1      # jacu.c:74:18
	mulsd	%xmm10, %xmm12
	.loc	18 75 20                # jacu.c:75:20
	mulsd	%xmm0, %xmm13
	.loc	18 81 31                # jacu.c:81:31
	movsd	%xmm13, 192(%rsp)       # 8-byte Spill
	subsd	%xmm7, %xmm4
	.loc	18 81 9 is_stmt 0       # jacu.c:81:9
	mulsd	%xmm0, %xmm4
	movapd	%xmm4, 528(%rsp)        # 16-byte Spill
	.loc	18 87 20 is_stmt 1      # jacu.c:87:20
	movsd	-24(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, -24(%rsp)        # 8-byte Spill
	.loc	18 92 19                # jacu.c:92:19
	subsd	%xmm14, %xmm5
	.loc	18 92 31 is_stmt 0      # jacu.c:92:31
	mulsd	%xmm7, %xmm10
	.loc	18 92 25                # jacu.c:92:25
	subsd	%xmm10, %xmm5
	.loc	18 92 9                 # jacu.c:92:9
	mulsd	%xmm0, %xmm5
	movapd	%xmm5, 544(%rsp)        # 16-byte Spill
	.loc	18 98 18 is_stmt 1      # jacu.c:98:18
	addsd	%xmm14, %xmm3
	.loc	18 98 24 is_stmt 0      # jacu.c:98:24
	addsd	%xmm3, %xmm10
	movsd	%xmm10, 168(%rsp)       # 8-byte Spill
	.loc	18 99 20 is_stmt 1      # jacu.c:99:20
	movsd	-48(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, -48(%rsp)        # 8-byte Spill
	.loc	18 113 27               # jacu.c:113:27
	addsd	%xmm7, %xmm3
	.loc	18 116 9                # jacu.c:116:9
	movsd	-64(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, -64(%rsp)        # 8-byte Spill
	.loc	18 120 9                # jacu.c:120:9
	mulsd	%xmm0, %xmm9
	movsd	%xmm9, 176(%rsp)        # 8-byte Spill
	.loc	18 124 9                # jacu.c:124:9
	movsd	-56(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, -56(%rsp)        # 8-byte Spill
	.loc	18 113 35               # jacu.c:113:35
	movapd	%xmm3, %xmm1
	.loc	18 128 20               # jacu.c:128:20
	mulsd	%xmm0, %xmm3
	.loc	18 129 20               # jacu.c:129:20
	mulsd	%xmm0, %xmm8
	movsd	%xmm8, 152(%rsp)        # 8-byte Spill
	.loc	18 73 20                # jacu.c:73:20
	movsd	.LCPI13_2(%rip), %xmm8  # xmm8 = mem[0],zero
	mulsd	%xmm8, %xmm0
	movsd	%xmm0, 144(%rsp)        # 8-byte Spill
	.loc	18 74 24                # jacu.c:74:24
	addsd	%xmm14, %xmm12
	.loc	18 74 30 is_stmt 0      # jacu.c:74:30
	addsd	%xmm7, %xmm12
	movapd	%xmm12, 512(%rsp)       # 16-byte Spill
	.loc	18 86 30 is_stmt 1      # jacu.c:86:30
	addsd	%xmm7, %xmm11
	movsd	%xmm11, 160(%rsp)       # 8-byte Spill
	movsd	.LCPI13_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movapd	-16(%rsp), %xmm5        # 16-byte Reload
	.loc	18 102 27               # jacu.c:102:27
	mulsd	%xmm5, %xmm0
	movsd	%xmm0, 136(%rsp)        # 8-byte Spill
	.loc	18 113 35               # jacu.c:113:35
	movsd	.LCPI13_8(%rip), %xmm2  # xmm2 = mem[0],zero
	mulsd	%xmm2, %xmm1
	movapd	%xmm1, 480(%rsp)        # 16-byte Spill
	.loc	18 128 42               # jacu.c:128:42
	mulsd	%xmm2, %xmm3
	movapd	%xmm3, 496(%rsp)        # 16-byte Spill
	movapd	208(%rsp), %xmm1        # 16-byte Reload
	.loc	18 138 34               # jacu.c:138:34
	mulsd	%xmm1, %xmm15
	.loc	18 289 34               # jacu.c:289:34
	movapd	.LCPI13_4(%rip), %xmm12 # xmm12 = [9223372036854775808,9223372036854775808]
	.loc	18 138 34               # jacu.c:138:34
	xorpd	%xmm12, %xmm15
	movapd	%xmm15, 608(%rsp)       # 16-byte Spill
	movsd	tx2(%rip), %xmm9        # xmm9 = mem[0],zero
	.loc	18 139 28               # jacu.c:139:28
	mulsd	%xmm5, %xmm9
	movapd	%xmm5, %xmm4
	.loc	18 151 20               # jacu.c:151:20
	movsd	%xmm9, 104(%rsp)        # 8-byte Spill
	movsd	-32(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm1, %xmm0
	movapd	%xmm1, %xmm5
	movsd	%xmm0, -32(%rsp)        # 8-byte Spill
	.loc	18 156 33               # jacu.c:156:33
	movsd	.LCPI13_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movapd	%xmm9, %xmm1
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, 128(%rsp)        # 8-byte Spill
	.loc	18 164 20               # jacu.c:164:20
	movsd	-40(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movapd	%xmm5, %xmm3
	mulsd	%xmm3, %xmm1
	movsd	%xmm1, -40(%rsp)        # 8-byte Spill
	.loc	18 175 20               # jacu.c:175:20
	movapd	80(%rsp), %xmm1         # 16-byte Reload
	mulsd	%xmm3, %xmm1
	movapd	%xmm1, 80(%rsp)         # 16-byte Spill
	.loc	18 193 9                # jacu.c:193:9
	movapd	%xmm3, %xmm1
	.loc	18 121 17               # jacu.c:121:17
	movsd	.LCPI13_10(%rip), %xmm10 # xmm10 = mem[0],zero
	.loc	18 193 9                # jacu.c:193:9
	mulsd	%xmm10, %xmm1
	movapd	%xmm1, 464(%rsp)        # 16-byte Spill
	.loc	18 197 9                # jacu.c:197:9
	movapd	%xmm3, %xmm1
	.loc	18 104 23               # jacu.c:104:23
	movsd	.LCPI13_7(%rip), %xmm5  # xmm5 = mem[0],zero
	.loc	18 197 9                # jacu.c:197:9
	mulsd	%xmm5, %xmm1
	movapd	%xmm1, 448(%rsp)        # 16-byte Spill
	.loc	18 204 20               # jacu.c:204:20
	movapd	%xmm3, %xmm1
	mulsd	%xmm2, %xmm1
	movapd	%xmm1, 432(%rsp)        # 16-byte Spill
	.loc	18 205 20               # jacu.c:205:20
	movsd	-88(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm3, %xmm1
	movsd	%xmm1, -88(%rsp)        # 8-byte Spill
	movapd	%xmm3, %xmm11
	movapd	%xmm4, %xmm3
	.loc	18 214 28               # jacu.c:214:28
	mulsd	%xmm3, %xmm14
	.loc	18 214 34 is_stmt 0     # jacu.c:214:34
	movapd	%xmm14, 240(%rsp)       # 16-byte Spill
	movapd	64(%rsp), %xmm1         # 16-byte Reload
	mulsd	%xmm14, %xmm1
	xorpd	%xmm12, %xmm1
	movapd	%xmm1, 64(%rsp)         # 16-byte Spill
	movsd	ty2(%rip), %xmm1        # xmm1 = mem[0],zero
	.loc	18 216 27 is_stmt 1     # jacu.c:216:27
	mulsd	%xmm3, %xmm1
	.loc	18 225 20               # jacu.c:225:20
	movsd	%xmm1, 96(%rsp)         # 8-byte Spill
	movsd	-72(%rsp), %xmm3        # 8-byte Reload
                                        # xmm3 = mem[0],zero
	mulsd	%xmm14, %xmm3
	movsd	%xmm3, -72(%rsp)        # 8-byte Spill
	.loc	18 239 20               # jacu.c:239:20
	movsd	-80(%rsp), %xmm3        # 8-byte Reload
                                        # xmm3 = mem[0],zero
	mulsd	%xmm14, %xmm3
	movsd	%xmm3, -80(%rsp)        # 8-byte Spill
	.loc	18 242 33               # jacu.c:242:33
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, 120(%rsp)        # 8-byte Spill
	.loc	18 251 20               # jacu.c:251:20
	movapd	48(%rsp), %xmm1         # 16-byte Reload
	mulsd	%xmm14, %xmm1
	movapd	%xmm1, 48(%rsp)         # 16-byte Spill
	.loc	18 266 9                # jacu.c:266:9
	movapd	%xmm14, %xmm1
	mulsd	%xmm5, %xmm1
	movapd	%xmm5, %xmm3
	movapd	%xmm1, 416(%rsp)        # 16-byte Spill
	.loc	18 273 9                # jacu.c:273:9
	movapd	%xmm14, %xmm1
	mulsd	%xmm10, %xmm1
	movapd	%xmm1, 400(%rsp)        # 16-byte Spill
	.loc	18 279 20               # jacu.c:279:20
	movapd	%xmm14, %xmm1
	mulsd	%xmm2, %xmm1
	movapd	%xmm1, 384(%rsp)        # 16-byte Spill
	.loc	18 280 20               # jacu.c:280:20
	movsd	-96(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm14, %xmm1
	movsd	%xmm1, -96(%rsp)        # 8-byte Spill
	.loc	18 285 21               # jacu.c:285:21
	leal	1(%rax), %ecx
	.loc	18 285 14 is_stmt 0     # jacu.c:285:14
	movslq	%ecx, %rdx
	.loc	18 289 28 is_stmt 1     # jacu.c:289:28
	mulsd	%xmm4, %xmm7
	.loc	18 289 34 is_stmt 0     # jacu.c:289:34
	movapd	%xmm7, (%rsp)           # 16-byte Spill
	movapd	32(%rsp), %xmm1         # 16-byte Reload
	mulsd	%xmm7, %xmm1
	xorpd	%xmm12, %xmm1
	movapd	%xmm1, 32(%rsp)         # 16-byte Spill
	movapd	%xmm4, %xmm1
	.loc	18 292 26 is_stmt 1     # jacu.c:292:26
	mulsd	tz2(%rip), %xmm1
	.loc	18 299 20               # jacu.c:299:20
	movapd	%xmm1, -16(%rsp)        # 16-byte Spill
	movapd	%xmm1, %xmm5
	movapd	%xmm7, %xmm1
	mulsd	%xmm8, %xmm1
	movapd	%xmm1, 368(%rsp)        # 16-byte Spill
	.loc	18 300 20               # jacu.c:300:20
	movsd	-104(%rsp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm7, %xmm1
	movsd	%xmm1, -104(%rsp)       # 8-byte Spill
	.loc	18 311 20               # jacu.c:311:20
	movsd	-112(%rsp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm7, %xmm1
	movsd	%xmm1, -112(%rsp)       # 8-byte Spill
	movsd	.LCPI13_12(%rip), %xmm1 # xmm1 = mem[0],zero
	.loc	18 323 32               # jacu.c:323:32
	mulsd	%xmm5, %xmm1
	movsd	%xmm1, 112(%rsp)        # 8-byte Spill
	.loc	18 326 20               # jacu.c:326:20
	movapd	16(%rsp), %xmm1         # 16-byte Reload
	mulsd	%xmm7, %xmm1
	movapd	%xmm1, 16(%rsp)         # 16-byte Spill
	.loc	18 327 32               # jacu.c:327:32
	movapd	%xmm5, %xmm1
	mulsd	%xmm0, %xmm1
	movapd	%xmm1, 352(%rsp)        # 16-byte Spill
	.loc	18 340 20               # jacu.c:340:20
	movapd	%xmm7, %xmm0
	mulsd	%xmm3, %xmm0
	movapd	%xmm0, 336(%rsp)        # 16-byte Spill
	.loc	18 349 20               # jacu.c:349:20
	movapd	%xmm7, %xmm0
	mulsd	%xmm10, %xmm0
	movapd	%xmm0, 320(%rsp)        # 16-byte Spill
	.loc	18 352 20               # jacu.c:352:20
	movapd	%xmm7, %xmm0
	mulsd	%xmm2, %xmm0
	movapd	%xmm0, 304(%rsp)        # 16-byte Spill
	.loc	18 353 20               # jacu.c:353:20
	movsd	-120(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	mulsd	%xmm7, %xmm0
	movsd	%xmm0, -120(%rsp)       # 8-byte Spill
.Ltmp919:
	.loc	18 54 3 discriminator 1 # jacu.c:54:3
	movslq	ist(%rip), %r10
	movslq	%r9d, %r13
.Ltmp920:
	.loc	18 147 20               # jacu.c:147:20
	movapd	%xmm11, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 288(%rsp)        # 16-byte Spill
	.loc	18 222 20               # jacu.c:222:20
	movlhps	%xmm14, %xmm14          # xmm14 = xmm14[0,0]
	movaps	%xmm14, 272(%rsp)       # 16-byte Spill
	.loc	18 296 9                # jacu.c:296:9
	movapd	%xmm5, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	movaps	%xmm0, 224(%rsp)        # 16-byte Spill
	.loc	18 297 20               # jacu.c:297:20
	movlhps	%xmm7, %xmm7            # xmm7 = xmm7[0,0]
	movaps	%xmm7, 256(%rsp)        # 16-byte Spill
.Ltmp921:
	.loc	18 54 3 discriminator 1 # jacu.c:54:3
	imulq	$520, %r11, %rcx        # imm = 0x208
	leaq	(%rcx,%r10,8), %rcx
	imulq	$33800, %rax, %r14      # imm = 0x8408
	imulq	$169000, %rax, %rsi     # imm = 0x29428
	imulq	$2600, %r11, %rax       # imm = 0xA28
	leaq	(%r10,%r10,4), %rdi
.Ltmp922:
	leaq	(%rax,%rdi,8), %r15
	imulq	$4225, %rdx, %r12       # imm = 0x1081
	imulq	$169000, %rdx, %rdx     # imm = 0x29428
.Ltmp923:
	.loc	18 153 18               # jacu.c:153:18
	movsd	.LCPI13_14(%rip), %xmm11 # xmm11 = mem[0],zero
	.p2align	4, 0x90
.LBB13_2:                               # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB13_3 Depth 2
	.loc	18 210 24               # jacu.c:210:24
	incq	%r11
.Ltmp924:
	.loc	18 55 5 discriminator 1 # jacu.c:55:5
	cmpl	%r9d, %r10d
	movq	%r12, %rbx
	movq	%r15, %rax
	movq	%r14, %rdi
	movq	%r10, %rbp
.Ltmp925:
	.loc	18 156 33               # jacu.c:156:33
	movsd	.LCPI13_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm14
	jge	.LBB13_4
	.p2align	4, 0x90
.LBB13_3:                               # %for.body3
                                        #   Parent Loop BB13_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	18 59 14                # jacu.c:59:14
	movsd	rho_i(%rcx,%rdi), %xmm2 # xmm2 = mem[0],zero
.Ltmp926:
	#DEBUG_VALUE: jacu:tmp1 <- %XMM2
	.loc	18 60 19                # jacu.c:60:19
	movapd	%xmm2, %xmm0
	mulsd	%xmm0, %xmm0
.Ltmp927:
	#DEBUG_VALUE: jacu:tmp2 <- %XMM0
	.loc	18 61 19                # jacu.c:61:19
	movapd	%xmm2, %xmm8
	mulsd	%xmm0, %xmm8
.Ltmp928:
	#DEBUG_VALUE: jacu:tmp3 <- %XMM8
	.loc	18 63 21                # jacu.c:63:21
	movsd	%xmm6, d(%rax,%rax,4)
	.loc	18 64 21                # jacu.c:64:21
	movq	$0, d+40(%rax,%rax,4)
	.loc	18 71 17                # jacu.c:71:17
	movapd	%xmm0, %xmm1
	.loc	18 71 26 is_stmt 0      # jacu.c:71:26
	movsd	u+8(%rsi,%rax), %xmm12  # xmm12 = mem[0],zero
	.loc	18 73 20 is_stmt 1      # jacu.c:73:20
	movsd	.LCPI13_2(%rip), %xmm3  # xmm3 = mem[0],zero
	.loc	18 71 17                # jacu.c:71:17
	mulsd	%xmm3, %xmm1
	.loc	18 71 24 is_stmt 0      # jacu.c:71:24
	movapd	%xmm1, %xmm6
	mulsd	%xmm12, %xmm6
	.loc	18 73 26 is_stmt 1      # jacu.c:73:26
	movapd	%xmm2, %xmm3
	mulsd	144(%rsp), %xmm3        # 8-byte Folded Reload
	.loc	18 74 9                 # jacu.c:74:9
	movapd	%xmm3, %xmm5
	mulsd	512(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	18 73 9                 # jacu.c:73:9
	movsd	.LCPI13_0(%rip), %xmm10 # xmm10 = mem[0],zero
	addsd	%xmm10, %xmm5
	.loc	18 75 9                 # jacu.c:75:9
	addsd	%xmm13, %xmm5
	.loc	18 72 21                # jacu.c:72:21
	movsd	%xmm5, d+48(%rax,%rax,4)
	.loc	18 65 21                # jacu.c:65:21
	xorpd	%xmm4, %xmm4
	movupd	%xmm4, d+80(%rax,%rax,4)
	.loc	18 66 21                # jacu.c:66:21
	movupd	%xmm4, d+120(%rax,%rax,4)
	.loc	18 67 21                # jacu.c:67:21
	movupd	%xmm4, d+160(%rax,%rax,4)
	.loc	18 82 26                # jacu.c:82:26
	movsd	u+16(%rsi,%rax), %xmm5  # xmm5 = mem[0],zero
	.loc	18 82 24 is_stmt 0      # jacu.c:82:24
	movapd	%xmm1, %xmm7
	mulsd	%xmm5, %xmm7
	.loc	18 71 9 is_stmt 1       # jacu.c:71:9
	movapd	560(%rsp), %xmm4        # 16-byte Reload
	unpcklpd	%xmm7, %xmm4    # xmm4 = xmm4[0],xmm7[0]
	unpcklpd	528(%rsp), %xmm6 # 16-byte Folded Reload
                                        # xmm6 = xmm6[0],mem[0]
	mulpd	%xmm4, %xmm6
	.loc	18 69 21                # jacu.c:69:21
	movupd	%xmm6, d+8(%rax,%rax,4)
	.loc	18 86 9                 # jacu.c:86:9
	movapd	%xmm3, %xmm4
	.loc	18 83 21                # jacu.c:83:21
	movq	$0, d+56(%rax,%rax,4)
	.loc	18 86 9                 # jacu.c:86:9
	mulsd	160(%rsp), %xmm4        # 8-byte Folded Reload
	.loc	18 85 9                 # jacu.c:85:9
	addsd	%xmm10, %xmm4
	.loc	18 87 9                 # jacu.c:87:9
	addsd	-24(%rsp), %xmm4        # 8-byte Folded Reload
	.loc	18 84 21                # jacu.c:84:21
	movsd	%xmm4, d+96(%rax,%rax,4)
	.loc	18 88 21                # jacu.c:88:21
	movq	$0, d+136(%rax,%rax,4)
	.loc	18 89 21                # jacu.c:89:21
	movq	$0, d+176(%rax,%rax,4)
	.loc	18 93 26                # jacu.c:93:26
	movsd	u+24(%rsi,%rax), %xmm6  # xmm6 = mem[0],zero
	.loc	18 93 24 is_stmt 0      # jacu.c:93:24
	mulsd	%xmm6, %xmm1
	.loc	18 93 9                 # jacu.c:93:9
	mulsd	544(%rsp), %xmm1        # 16-byte Folded Reload
	.loc	18 98 9 is_stmt 1       # jacu.c:98:9
	mulsd	168(%rsp), %xmm3        # 8-byte Folded Reload
	.loc	18 97 9                 # jacu.c:97:9
	addsd	%xmm10, %xmm3
	.loc	18 91 21                # jacu.c:91:21
	movsd	%xmm1, d+24(%rax,%rax,4)
	.loc	18 99 9                 # jacu.c:99:9
	addsd	-48(%rsp), %xmm3        # 8-byte Folded Reload
	.loc	18 118 41               # jacu.c:118:41
	movapd	%xmm0, %xmm1
	mulsd	-64(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	18 118 48 is_stmt 0     # jacu.c:118:48
	mulsd	%xmm12, %xmm1
	.loc	18 94 21 is_stmt 1      # jacu.c:94:21
	movq	$0, d+64(%rax,%rax,4)
	.loc	18 105 60               # jacu.c:105:60
	mulsd	%xmm12, %xmm12
	.loc	18 105 43 is_stmt 0     # jacu.c:105:43
	mulsd	184(%rsp), %xmm12       # 8-byte Folded Reload
	.loc	18 122 37 is_stmt 1     # jacu.c:122:37
	movapd	%xmm0, %xmm4
	mulsd	176(%rsp), %xmm4        # 8-byte Folded Reload
	.loc	18 95 21                # jacu.c:95:21
	movq	$0, d+104(%rax,%rax,4)
	.loc	18 122 44               # jacu.c:122:44
	mulsd	%xmm5, %xmm4
	.loc	18 108 60               # jacu.c:108:60
	mulsd	%xmm5, %xmm5
	.loc	18 108 43 is_stmt 0     # jacu.c:108:43
	mulsd	576(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	18 96 21 is_stmt 1      # jacu.c:96:21
	movsd	%xmm3, d+144(%rax,%rax,4)
	.loc	18 106 15               # jacu.c:106:15
	addsd	%xmm12, %xmm5
	.loc	18 113 43               # jacu.c:113:43
	movapd	%xmm0, %xmm3
	.loc	18 126 41               # jacu.c:126:41
	mulsd	-56(%rsp), %xmm0        # 8-byte Folded Reload
.Ltmp929:
	#DEBUG_VALUE: jacu:tmp2 <- %XMM3
	.loc	18 126 48 is_stmt 0     # jacu.c:126:48
	mulsd	%xmm6, %xmm0
	.loc	18 100 21 is_stmt 1     # jacu.c:100:21
	movq	$0, d+184(%rax,%rax,4)
	.loc	18 111 63               # jacu.c:111:63
	mulsd	%xmm6, %xmm6
	.loc	18 111 47 is_stmt 0     # jacu.c:111:47
	mulsd	592(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	18 109 15 is_stmt 1     # jacu.c:109:15
	addsd	%xmm5, %xmm6
	.loc	18 112 15               # jacu.c:112:15
	mulsd	%xmm8, %xmm6
	.loc	18 113 43               # jacu.c:113:43
	mulsd	480(%rsp), %xmm3        # 16-byte Folded Reload
.Ltmp930:
	.loc	18 113 50 is_stmt 0     # jacu.c:113:50
	mulsd	u+32(%rsi,%rax), %xmm3
	.loc	18 113 13               # jacu.c:113:13
	addsd	%xmm6, %xmm3
	.loc	18 103 9 is_stmt 1      # jacu.c:103:9
	mulsd	136(%rsp), %xmm3        # 8-byte Folded Reload
	.loc	18 102 21               # jacu.c:102:21
	movsd	%xmm3, d+32(%rax,%rax,4)
	.loc	18 115 21               # jacu.c:115:21
	movsd	%xmm1, d+72(%rax,%rax,4)
	.loc	18 119 21               # jacu.c:119:21
	movsd	%xmm4, d+112(%rax,%rax,4)
	.loc	18 123 21               # jacu.c:123:21
	movsd	%xmm0, d+152(%rax,%rax,4)
	.loc	18 128 50               # jacu.c:128:50
	mulsd	496(%rsp), %xmm2        # 16-byte Folded Reload
.Ltmp931:
	.loc	18 128 9 is_stmt 0      # jacu.c:128:9
	addsd	%xmm10, %xmm2
	.loc	18 129 9 is_stmt 1      # jacu.c:129:9
	addsd	152(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	18 127 21               # jacu.c:127:21
	movsd	%xmm2, d+192(%rax,%rax,4)
	.loc	18 134 14               # jacu.c:134:14
	movsd	rho_i+8(%rcx,%rdi), %xmm13 # xmm13 = mem[0],zero
.Ltmp932:
	#DEBUG_VALUE: jacu:tmp1 <- %XMM13
	.loc	18 138 21               # jacu.c:138:21
	movsd	%xmm15, a(%rax,%rax,4)
	.loc	18 139 21               # jacu.c:139:21
	movsd	%xmm9, a+40(%rax,%rax,4)
	.loc	18 140 21               # jacu.c:140:21
	movq	$0, a+80(%rax,%rax,4)
	.loc	18 135 19               # jacu.c:135:19
	movapd	%xmm13, %xmm15
	.loc	18 141 21               # jacu.c:141:21
	movq	$0, a+120(%rax,%rax,4)
	.loc	18 142 21               # jacu.c:142:21
	movq	$0, a+160(%rax,%rax,4)
	.loc	18 145 17               # jacu.c:145:17
	movupd	u+48(%rsi,%rax), %xmm5
	.loc	18 135 19               # jacu.c:135:19
	mulsd	%xmm15, %xmm15
.Ltmp933:
	#DEBUG_VALUE: jacu:tmp2 <- %XMM15
	.loc	18 145 33               # jacu.c:145:33
	movapd	%xmm13, %xmm10
	mulsd	%xmm5, %xmm10
	.loc	18 145 42 is_stmt 0     # jacu.c:145:42
	movapd	%xmm10, %xmm0
	.loc	18 146 20 is_stmt 1     # jacu.c:146:20
	movsd	qs+8(%rcx,%rdi), %xmm8  # xmm8 = mem[0],zero
.Ltmp934:
	.loc	18 146 18 is_stmt 0     # jacu.c:146:18
	movapd	%xmm8, %xmm1
	mulsd	%xmm14, %xmm1
	.loc	18 145 42 is_stmt 1     # jacu.c:145:42
	mulsd	%xmm0, %xmm0
	.loc	18 146 34               # jacu.c:146:34
	mulsd	%xmm13, %xmm1
	.loc	18 146 13 is_stmt 0     # jacu.c:146:13
	subsd	%xmm0, %xmm1
	.loc	18 149 26 is_stmt 1     # jacu.c:149:26
	movapd	%xmm10, %xmm0
	movsd	.LCPI13_12(%rip), %xmm2 # xmm2 = mem[0],zero
	mulsd	%xmm2, %xmm0
	.loc	18 145 9                # jacu.c:145:9
	mulsd	%xmm9, %xmm1
	.loc	18 149 9                # jacu.c:149:9
	mulsd	%xmm9, %xmm0
	.loc	18 150 34               # jacu.c:150:34
	movapd	%xmm13, %xmm2
	movsd	.LCPI13_13(%rip), %xmm3 # xmm3 = mem[0],zero
	mulsd	%xmm3, %xmm2
	movapd	208(%rsp), %xmm14       # 16-byte Reload
	.loc	18 150 20 is_stmt 0     # jacu.c:150:20
	mulsd	%xmm14, %xmm2
	.loc	18 150 9                # jacu.c:150:9
	subsd	%xmm2, %xmm0
	.loc	18 151 9 is_stmt 1      # jacu.c:151:9
	subsd	-32(%rsp), %xmm0        # 8-byte Folded Reload
	.loc	18 153 38               # jacu.c:153:38
	movapd	%xmm5, %xmm12
	shufpd	$1, %xmm12, %xmm12      # xmm12 = xmm12[1,0]
	movapd	%xmm13, %xmm2
	mulsd	%xmm12, %xmm2
	.loc	18 153 18 is_stmt 0     # jacu.c:153:18
	movapd	%xmm2, %xmm3
	.loc	18 148 21 is_stmt 1     # jacu.c:148:21
	movsd	%xmm0, a+48(%rax,%rax,4)
	.loc	18 153 18               # jacu.c:153:18
	mulsd	%xmm11, %xmm3
	.loc	18 153 9 is_stmt 0      # jacu.c:153:9
	mulsd	%xmm9, %xmm3
	.loc	18 152 21 is_stmt 1     # jacu.c:152:21
	movsd	%xmm3, a+88(%rax,%rax,4)
	.loc	18 155 22               # jacu.c:155:22
	movsd	u+64(%rsi,%rax), %xmm3  # xmm3 = mem[0],zero
	.loc	18 155 38 is_stmt 0     # jacu.c:155:38
	movapd	%xmm13, %xmm7
	mulsd	%xmm3, %xmm7
	.loc	18 155 18               # jacu.c:155:18
	movapd	%xmm7, %xmm0
	mulsd	%xmm11, %xmm0
	.loc	18 155 9                # jacu.c:155:9
	mulsd	%xmm9, %xmm0
	.loc	18 159 33 is_stmt 1     # jacu.c:159:33
	movapd	%xmm5, %xmm4
	.loc	18 154 21               # jacu.c:154:21
	movsd	%xmm0, a+128(%rax,%rax,4)
	.loc	18 159 33               # jacu.c:159:33
	mulsd	%xmm12, %xmm4
	.loc	18 159 53 is_stmt 0     # jacu.c:159:53
	mulsd	%xmm15, %xmm4
	.loc	18 159 9                # jacu.c:159:9
	mulsd	%xmm9, %xmm4
	.loc	18 147 36 is_stmt 1     # jacu.c:147:36
	movapd	%xmm15, %xmm0
	.loc	18 289 34               # jacu.c:289:34
	movapd	.LCPI13_4(%rip), %xmm11 # xmm11 = [9223372036854775808,9223372036854775808]
	.loc	18 159 9                # jacu.c:159:9
	xorpd	%xmm11, %xmm4
	.loc	18 147 36               # jacu.c:147:36
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	.LCPI13_15(%rip), %xmm0
	.loc	18 147 9 is_stmt 0      # jacu.c:147:9
	unpcklpd	%xmm4, %xmm1    # xmm1 = xmm1[0],xmm4[0]
	.loc	18 147 43               # jacu.c:147:43
	movapd	%xmm0, %xmm4
	mulpd	%xmm5, %xmm4
	.loc	18 147 20               # jacu.c:147:20
	mulpd	288(%rsp), %xmm4        # 16-byte Folded Reload
	.loc	18 147 9                # jacu.c:147:9
	subpd	%xmm4, %xmm1
	.loc	18 136 19 is_stmt 1     # jacu.c:136:19
	movapd	%xmm13, %xmm4
	mulsd	%xmm15, %xmm4
.Ltmp935:
	#DEBUG_VALUE: jacu:tmp3 <- %XMM4
	.loc	18 156 21               # jacu.c:156:21
	movsd	128(%rsp), %xmm6        # 8-byte Reload
                                        # xmm6 = mem[0],zero
	movsd	%xmm6, a+168(%rax,%rax,4)
	.loc	18 144 21               # jacu.c:144:21
	movupd	%xmm1, a+8(%rax,%rax,4)
	.loc	18 162 33               # jacu.c:162:33
	mulsd	%xmm9, %xmm10
	.loc	18 163 28               # jacu.c:163:28
	movapd	%xmm13, %xmm1
	mulsd	.LCPI13_2(%rip), %xmm1
	.loc	18 161 33               # jacu.c:161:33
	mulsd	%xmm9, %xmm2
	.loc	18 163 20               # jacu.c:163:20
	mulsd	%xmm14, %xmm1
	.loc	18 163 9 is_stmt 0      # jacu.c:163:9
	subsd	%xmm1, %xmm10
	.loc	18 164 9 is_stmt 1      # jacu.c:164:9
	movapd	%xmm10, %xmm1
	subsd	-40(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	18 161 21               # jacu.c:161:21
	movsd	%xmm2, a+56(%rax,%rax,4)
	.loc	18 162 21               # jacu.c:162:21
	movsd	%xmm1, a+96(%rax,%rax,4)
	.loc	18 165 21               # jacu.c:165:21
	movq	$0, a+136(%rax,%rax,4)
	.loc	18 169 32               # jacu.c:169:32
	movapd	%xmm5, %xmm1
	mulsd	%xmm3, %xmm1
	.loc	18 166 21               # jacu.c:166:21
	movq	$0, a+176(%rax,%rax,4)
	.loc	18 169 51               # jacu.c:169:51
	mulsd	%xmm15, %xmm1
	.loc	18 169 9 is_stmt 0      # jacu.c:169:9
	mulsd	%xmm9, %xmm1
	.loc	18 170 37 is_stmt 1     # jacu.c:170:37
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	18 169 9                # jacu.c:169:9
	xorpd	%xmm11, %xmm1
	.loc	18 170 37               # jacu.c:170:37
	mulsd	%xmm3, %xmm0
	.loc	18 170 20 is_stmt 0     # jacu.c:170:20
	mulsd	%xmm14, %xmm0
	.loc	18 170 9                # jacu.c:170:9
	subsd	%xmm0, %xmm1
	.loc	18 168 21 is_stmt 1     # jacu.c:168:21
	movsd	%xmm1, a+24(%rax,%rax,4)
	.loc	18 171 32               # jacu.c:171:32
	mulsd	%xmm9, %xmm7
	.loc	18 171 21 is_stmt 0     # jacu.c:171:21
	movsd	%xmm7, a+64(%rax,%rax,4)
	.loc	18 172 21 is_stmt 1     # jacu.c:172:21
	movq	$0, a+104(%rax,%rax,4)
	.loc	18 176 21               # jacu.c:176:21
	movq	$0, a+184(%rax,%rax,4)
	.loc	18 179 24               # jacu.c:179:24
	movsd	.LCPI13_16(%rip), %xmm0 # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm8
	.loc	18 181 29               # jacu.c:181:29
	movapd	%xmm15, %xmm0
	mulsd	%xmm5, %xmm0
	.loc	18 183 35               # jacu.c:183:35
	movapd	%xmm4, %xmm1
	mulsd	.LCPI13_6(%rip), %xmm1
	.loc	18 180 20               # jacu.c:180:20
	movsd	u+72(%rsi,%rax), %xmm7  # xmm7 = mem[0],zero
	.loc	18 180 18 is_stmt 0     # jacu.c:180:18
	movapd	%xmm7, %xmm2
	.loc	18 183 61 is_stmt 1     # jacu.c:183:61
	mulsd	%xmm5, %xmm5
	.loc	18 183 42 is_stmt 0     # jacu.c:183:42
	mulsd	%xmm1, %xmm5
	.loc	18 104 23 is_stmt 1     # jacu.c:104:23
	movsd	.LCPI13_7(%rip), %xmm1  # xmm1 = mem[0],zero
	.loc	18 184 35               # jacu.c:184:35
	mulsd	%xmm1, %xmm4
.Ltmp936:
	.loc	18 184 61 is_stmt 0     # jacu.c:184:61
	movapd	%xmm12, %xmm1
	.loc	18 180 18 is_stmt 1     # jacu.c:180:18
	movsd	.LCPI13_17(%rip), %xmm6 # xmm6 = mem[0],zero
	mulsd	%xmm6, %xmm2
	.loc	18 184 61               # jacu.c:184:61
	mulsd	%xmm1, %xmm1
	.loc	18 184 42 is_stmt 0     # jacu.c:184:42
	mulsd	%xmm4, %xmm1
	.loc	18 184 13               # jacu.c:184:13
	subsd	%xmm1, %xmm5
	.loc	18 180 13 is_stmt 1     # jacu.c:180:13
	subsd	%xmm2, %xmm8
	.loc	18 185 61               # jacu.c:185:61
	mulsd	%xmm3, %xmm3
	.loc	18 185 42 is_stmt 0     # jacu.c:185:42
	mulsd	%xmm4, %xmm3
	.loc	18 185 13               # jacu.c:185:13
	subsd	%xmm3, %xmm5
	.loc	18 186 21 is_stmt 1     # jacu.c:186:21
	movapd	%xmm15, %xmm1
	.loc	18 181 9                # jacu.c:181:9
	mulsd	%xmm8, %xmm0
	.loc	18 113 35               # jacu.c:113:35
	movsd	.LCPI13_8(%rip), %xmm2  # xmm2 = mem[0],zero
	.loc	18 186 21               # jacu.c:186:21
	mulsd	%xmm2, %xmm1
	.loc	18 186 28 is_stmt 0     # jacu.c:186:28
	mulsd	%xmm7, %xmm1
	.loc	18 186 13               # jacu.c:186:13
	subsd	%xmm1, %xmm5
	.loc	18 179 9 is_stmt 1      # jacu.c:179:9
	mulsd	%xmm9, %xmm0
	.loc	18 183 9                # jacu.c:183:9
	mulsd	%xmm14, %xmm5
	.loc	18 182 9                # jacu.c:182:9
	subsd	%xmm5, %xmm0
	.loc	18 178 21               # jacu.c:178:21
	movsd	%xmm0, a+32(%rax,%rax,4)
	.loc	18 188 36               # jacu.c:188:36
	mulsd	%xmm13, %xmm7
	.loc	18 188 16 is_stmt 0     # jacu.c:188:16
	mulsd	%xmm6, %xmm7
	.loc	18 190 17 is_stmt 1     # jacu.c:190:17
	movsd	u+48(%rsi,%rax), %xmm1  # xmm1 = mem[0],zero
	.loc	18 190 32 is_stmt 0     # jacu.c:190:32
	movapd	%xmm1, %xmm0
	mulsd	%xmm0, %xmm0
	.loc	18 190 49               # jacu.c:190:49
	mulsd	%xmm15, %xmm0
	movsd	qs+8(%rcx,%rdi), %xmm2  # xmm2 = mem[0],zero
	.loc	18 191 31 is_stmt 1     # jacu.c:191:31
	mulsd	%xmm13, %xmm2
	.loc	18 191 15 is_stmt 0     # jacu.c:191:15
	addsd	%xmm0, %xmm2
	.loc	18 156 33 is_stmt 1     # jacu.c:156:33
	movsd	.LCPI13_11(%rip), %xmm5 # xmm5 = mem[0],zero
	.loc	18 190 13               # jacu.c:190:13
	mulsd	%xmm5, %xmm2
	.loc	18 189 13               # jacu.c:189:13
	subsd	%xmm2, %xmm7
	.loc	18 193 31               # jacu.c:193:31
	movapd	%xmm15, %xmm0
	mulsd	464(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	18 193 38 is_stmt 0     # jacu.c:193:38
	mulsd	%xmm1, %xmm0
	.loc	18 195 37 is_stmt 1     # jacu.c:195:37
	movapd	%xmm12, %xmm2
	.loc	18 188 9                # jacu.c:188:9
	mulsd	%xmm9, %xmm7
	.loc	18 195 37               # jacu.c:195:37
	mulsd	%xmm1, %xmm2
	.loc	18 153 18               # jacu.c:153:18
	movsd	.LCPI13_14(%rip), %xmm11 # xmm11 = mem[0],zero
	.loc	18 195 18               # jacu.c:195:18
	mulsd	%xmm11, %xmm2
	.loc	18 195 56 is_stmt 0     # jacu.c:195:56
	mulsd	%xmm15, %xmm2
	.loc	18 192 9 is_stmt 1      # jacu.c:192:9
	subsd	%xmm0, %xmm7
	.loc	18 195 9                # jacu.c:195:9
	mulsd	%xmm9, %xmm2
	.loc	18 197 28               # jacu.c:197:28
	movapd	%xmm15, %xmm0
	mulsd	448(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	18 197 35 is_stmt 0     # jacu.c:197:35
	mulsd	%xmm0, %xmm12
	.loc	18 187 21 is_stmt 1     # jacu.c:187:21
	movsd	%xmm7, a+72(%rax,%rax,4)
	.loc	18 196 9                # jacu.c:196:9
	subsd	%xmm12, %xmm2
	.loc	18 194 21               # jacu.c:194:21
	movsd	%xmm2, a+112(%rax,%rax,4)
	.loc	18 199 22               # jacu.c:199:22
	movsd	u+64(%rsi,%rax), %xmm2  # xmm2 = mem[0],zero
	.loc	18 201 35               # jacu.c:201:35
	mulsd	%xmm2, %xmm0
	.loc	18 199 37               # jacu.c:199:37
	mulsd	%xmm1, %xmm2
	.loc	18 199 18 is_stmt 0     # jacu.c:199:18
	mulsd	%xmm11, %xmm2
	movapd	%xmm11, %xmm14
	.loc	18 199 56               # jacu.c:199:56
	mulsd	%xmm15, %xmm2
	.loc	18 199 9                # jacu.c:199:9
	mulsd	%xmm9, %xmm2
	.loc	18 175 9 is_stmt 1      # jacu.c:175:9
	unpcklpd	%xmm2, %xmm10   # xmm10 = xmm10[0],xmm2[0]
	movapd	80(%rsp), %xmm2         # 16-byte Reload
	unpcklpd	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0]
	.loc	18 203 36               # jacu.c:203:36
	mulsd	%xmm13, %xmm1
	.loc	18 175 9                # jacu.c:175:9
	subpd	%xmm2, %xmm10
	.loc	18 203 16               # jacu.c:203:16
	mulsd	%xmm6, %xmm1
	.loc	18 203 9 is_stmt 0      # jacu.c:203:9
	mulsd	%xmm9, %xmm1
	.loc	18 204 28 is_stmt 1     # jacu.c:204:28
	mulsd	432(%rsp), %xmm13       # 16-byte Folded Reload
.Ltmp937:
	.loc	18 173 21               # jacu.c:173:21
	movupd	%xmm10, a+144(%rax,%rax,4)
	.loc	18 204 9                # jacu.c:204:9
	subsd	%xmm13, %xmm1
	.loc	18 205 9                # jacu.c:205:9
	subsd	-88(%rsp), %xmm1        # 8-byte Folded Reload
	.loc	18 202 21               # jacu.c:202:21
	movsd	%xmm1, a+192(%rax,%rax,4)
	.loc	18 210 14               # jacu.c:210:14
	movsd	rho_i+520(%rcx,%rdi), %xmm10 # xmm10 = mem[0],zero
.Ltmp938:
	#DEBUG_VALUE: jacu:tmp1 <- %XMM10
	.loc	18 211 19               # jacu.c:211:19
	movapd	%xmm10, %xmm8
	.loc	18 214 21               # jacu.c:214:21
	movapd	64(%rsp), %xmm0         # 16-byte Reload
	movsd	%xmm0, b(%rax,%rax,4)
	.loc	18 215 21               # jacu.c:215:21
	movq	$0, b+40(%rax,%rax,4)
	movsd	96(%rsp), %xmm11        # 8-byte Reload
                                        # xmm11 = mem[0],zero
	.loc	18 216 21               # jacu.c:216:21
	movsd	%xmm11, b+80(%rax,%rax,4)
	.loc	18 211 19               # jacu.c:211:19
	mulsd	%xmm8, %xmm8
.Ltmp939:
	#DEBUG_VALUE: jacu:tmp2 <- %XMM8
	.loc	18 221 17               # jacu.c:221:17
	movupd	u+2608(%rsi,%rax), %xmm1
	.loc	18 221 32 is_stmt 0     # jacu.c:221:32
	movapd	%xmm1, %xmm7
	shufpd	$1, %xmm7, %xmm7        # xmm7 = xmm7[1,0]
	movapd	%xmm1, %xmm3
	mulsd	%xmm7, %xmm3
	.loc	18 223 53 is_stmt 1     # jacu.c:223:53
	movapd	%xmm10, %xmm2
	.loc	18 221 51               # jacu.c:221:51
	mulsd	%xmm8, %xmm3
	.loc	18 223 53               # jacu.c:223:53
	mulsd	%xmm7, %xmm2
	.loc	18 223 33 is_stmt 0     # jacu.c:223:33
	movapd	%xmm11, %xmm4
	mulsd	%xmm2, %xmm4
	.loc	18 224 28 is_stmt 1     # jacu.c:224:28
	movapd	%xmm10, %xmm0
	mulsd	.LCPI13_2(%rip), %xmm0
	.loc	18 221 9                # jacu.c:221:9
	mulsd	%xmm11, %xmm3
	movapd	240(%rsp), %xmm13       # 16-byte Reload
	.loc	18 224 20               # jacu.c:224:20
	mulsd	%xmm13, %xmm0
	.loc	18 224 9 is_stmt 0      # jacu.c:224:9
	subsd	%xmm0, %xmm4
	.loc	18 225 9 is_stmt 1      # jacu.c:225:9
	movapd	%xmm4, 624(%rsp)        # 16-byte Spill
	movapd	%xmm4, %xmm0
	subsd	-72(%rsp), %xmm0        # 8-byte Folded Reload
	.loc	18 289 34               # jacu.c:289:34
	movapd	.LCPI13_4(%rip), %xmm9  # xmm9 = [9223372036854775808,9223372036854775808]
	.loc	18 221 9                # jacu.c:221:9
	xorpd	%xmm9, %xmm3
	.loc	18 223 21               # jacu.c:223:21
	movsd	%xmm0, b+48(%rax,%rax,4)
	.loc	18 226 53               # jacu.c:226:53
	movapd	%xmm10, %xmm12
	mulsd	%xmm1, %xmm12
	.loc	18 226 33 is_stmt 0     # jacu.c:226:33
	movapd	%xmm11, %xmm0
	mulsd	%xmm12, %xmm0
	.loc	18 226 21               # jacu.c:226:21
	movsd	%xmm0, b+88(%rax,%rax,4)
	.loc	18 65 21 is_stmt 1      # jacu.c:65:21
	xorpd	%xmm0, %xmm0
	.loc	18 217 21               # jacu.c:217:21
	movupd	%xmm0, b+120(%rax,%rax,4)
	.loc	18 218 21               # jacu.c:218:21
	movupd	%xmm0, b+160(%rax,%rax,4)
	.loc	18 231 42               # jacu.c:231:42
	movapd	%xmm2, %xmm0
	mulsd	%xmm0, %xmm0
	.loc	18 232 22               # jacu.c:232:22
	movsd	qs+520(%rcx,%rdi), %xmm4 # xmm4 = mem[0],zero
	.loc	18 232 36 is_stmt 0     # jacu.c:232:36
	movapd	%xmm10, %xmm15
	mulsd	%xmm4, %xmm15
	.loc	18 232 18               # jacu.c:232:18
	movapd	%xmm15, %xmm6
	mulsd	%xmm5, %xmm6
	.loc	18 232 13               # jacu.c:232:13
	subsd	%xmm0, %xmm6
	.loc	18 222 30 is_stmt 1     # jacu.c:222:30
	movapd	%xmm8, %xmm0
	.loc	18 231 9                # jacu.c:231:9
	mulsd	%xmm11, %xmm6
	.loc	18 222 30               # jacu.c:222:30
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	.LCPI13_18(%rip), %xmm0
	.loc	18 222 9 is_stmt 0      # jacu.c:222:9
	unpcklpd	%xmm6, %xmm3    # xmm3 = xmm3[0],xmm6[0]
	.loc	18 222 37               # jacu.c:222:37
	movapd	%xmm0, %xmm6
	mulpd	%xmm1, %xmm6
	.loc	18 222 20               # jacu.c:222:20
	mulpd	272(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	18 222 9                # jacu.c:222:9
	subpd	%xmm6, %xmm3
	.loc	18 212 19 is_stmt 1     # jacu.c:212:19
	movapd	%xmm10, %xmm6
	mulsd	%xmm8, %xmm6
.Ltmp940:
	#DEBUG_VALUE: jacu:tmp3 <- %XMM6
	.loc	18 220 21               # jacu.c:220:21
	movupd	%xmm3, b+8(%rax,%rax,4)
	.loc	18 235 18               # jacu.c:235:18
	mulsd	%xmm14, %xmm12
	.loc	18 235 9 is_stmt 0      # jacu.c:235:9
	mulsd	%xmm11, %xmm12
	.loc	18 237 11 is_stmt 1     # jacu.c:237:11
	mulsd	.LCPI13_12(%rip), %xmm2
	.loc	18 238 34               # jacu.c:238:34
	movapd	%xmm10, %xmm3
	.loc	18 236 33               # jacu.c:236:33
	mulsd	%xmm11, %xmm2
	.loc	18 238 34               # jacu.c:238:34
	mulsd	.LCPI13_13(%rip), %xmm3
	.loc	18 238 20 is_stmt 0     # jacu.c:238:20
	mulsd	%xmm13, %xmm3
	.loc	18 238 9                # jacu.c:238:9
	subsd	%xmm3, %xmm2
	.loc	18 234 21 is_stmt 1     # jacu.c:234:21
	movsd	%xmm12, b+56(%rax,%rax,4)
	.loc	18 239 9                # jacu.c:239:9
	subsd	-80(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	18 236 21               # jacu.c:236:21
	movsd	%xmm2, b+96(%rax,%rax,4)
	.loc	18 241 22               # jacu.c:241:22
	movsd	u+2624(%rsi,%rax), %xmm12 # xmm12 = mem[0],zero
	.loc	18 241 38 is_stmt 0     # jacu.c:241:38
	movapd	%xmm10, %xmm3
	mulsd	%xmm12, %xmm3
	.loc	18 241 18               # jacu.c:241:18
	movapd	%xmm3, %xmm2
	mulsd	%xmm14, %xmm2
	.loc	18 241 9                # jacu.c:241:9
	mulsd	%xmm11, %xmm2
	.loc	18 240 21 is_stmt 1     # jacu.c:240:21
	movsd	%xmm2, b+136(%rax,%rax,4)
	.loc	18 245 32               # jacu.c:245:32
	movapd	%xmm7, %xmm2
	.loc	18 242 21               # jacu.c:242:21
	movsd	120(%rsp), %xmm5        # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	%xmm5, b+176(%rax,%rax,4)
	.loc	18 245 32               # jacu.c:245:32
	mulsd	%xmm12, %xmm2
	.loc	18 245 51 is_stmt 0     # jacu.c:245:51
	mulsd	%xmm8, %xmm2
	.loc	18 245 9                # jacu.c:245:9
	mulsd	%xmm11, %xmm2
	xorpd	%xmm9, %xmm2
	.loc	18 246 37 is_stmt 1     # jacu.c:246:37
	mulsd	%xmm12, %xmm0
	.loc	18 246 20 is_stmt 0     # jacu.c:246:20
	mulsd	%xmm13, %xmm0
	.loc	18 246 9                # jacu.c:246:9
	subsd	%xmm0, %xmm2
	.loc	18 244 21 is_stmt 1     # jacu.c:244:21
	movsd	%xmm2, b+24(%rax,%rax,4)
	.loc	18 247 21               # jacu.c:247:21
	movq	$0, b+64(%rax,%rax,4)
	.loc	18 248 33               # jacu.c:248:33
	mulsd	%xmm11, %xmm3
	.loc	18 255 24               # jacu.c:255:24
	mulsd	.LCPI13_16(%rip), %xmm4
	.loc	18 257 29               # jacu.c:257:29
	movapd	%xmm8, %xmm0
	.loc	18 248 21               # jacu.c:248:21
	movsd	%xmm3, b+104(%rax,%rax,4)
	.loc	18 257 29               # jacu.c:257:29
	mulsd	%xmm7, %xmm0
	.loc	18 259 34               # jacu.c:259:34
	movapd	%xmm6, %xmm2
	.loc	18 118 17               # jacu.c:118:17
	movsd	.LCPI13_9(%rip), %xmm14 # xmm14 = mem[0],zero
	.loc	18 259 34               # jacu.c:259:34
	mulsd	%xmm14, %xmm2
	.loc	18 259 56 is_stmt 0     # jacu.c:259:56
	mulsd	%xmm1, %xmm1
	.loc	18 252 21 is_stmt 1     # jacu.c:252:21
	movq	$0, b+184(%rax,%rax,4)
	.loc	18 259 39               # jacu.c:259:39
	mulsd	%xmm2, %xmm1
	.loc	18 260 34               # jacu.c:260:34
	movapd	%xmm6, %xmm3
	.loc	18 121 17               # jacu.c:121:17
	movsd	.LCPI13_10(%rip), %xmm9 # xmm9 = mem[0],zero
	.loc	18 260 34               # jacu.c:260:34
	mulsd	%xmm9, %xmm3
	.loc	18 260 56 is_stmt 0     # jacu.c:260:56
	mulsd	%xmm7, %xmm7
	.loc	18 256 20 is_stmt 1     # jacu.c:256:20
	movsd	u+2632(%rsi,%rax), %xmm2 # xmm2 = mem[0],zero
	.loc	18 260 39               # jacu.c:260:39
	mulsd	%xmm3, %xmm7
	.loc	18 256 18               # jacu.c:256:18
	movapd	%xmm2, %xmm3
	.loc	18 180 18               # jacu.c:180:18
	movsd	.LCPI13_17(%rip), %xmm9 # xmm9 = mem[0],zero
	.loc	18 256 18               # jacu.c:256:18
	mulsd	%xmm9, %xmm3
	.loc	18 260 13               # jacu.c:260:13
	subsd	%xmm7, %xmm1
	.loc	18 256 13               # jacu.c:256:13
	subsd	%xmm3, %xmm4
	.loc	18 261 34               # jacu.c:261:34
	mulsd	.LCPI13_7(%rip), %xmm6
.Ltmp941:
	.loc	18 261 56 is_stmt 0     # jacu.c:261:56
	movapd	%xmm12, %xmm3
	mulsd	%xmm3, %xmm3
	.loc	18 261 39               # jacu.c:261:39
	mulsd	%xmm6, %xmm3
	.loc	18 257 9 is_stmt 1      # jacu.c:257:9
	mulsd	%xmm4, %xmm0
	.loc	18 261 13               # jacu.c:261:13
	subsd	%xmm3, %xmm1
	.loc	18 262 20               # jacu.c:262:20
	movapd	%xmm8, %xmm3
	mulsd	.LCPI13_8(%rip), %xmm3
	.loc	18 262 25 is_stmt 0     # jacu.c:262:25
	mulsd	%xmm2, %xmm3
	.loc	18 255 9 is_stmt 1      # jacu.c:255:9
	mulsd	%xmm11, %xmm0
	.loc	18 262 13               # jacu.c:262:13
	subsd	%xmm3, %xmm1
	.loc	18 259 9                # jacu.c:259:9
	mulsd	%xmm13, %xmm1
	.loc	18 258 9                # jacu.c:258:9
	subsd	%xmm1, %xmm0
	.loc	18 254 21               # jacu.c:254:21
	movsd	%xmm0, b+32(%rax,%rax,4)
	.loc	18 264 22               # jacu.c:264:22
	movsd	u+2608(%rsi,%rax), %xmm0 # xmm0 = mem[0],zero
	.loc	18 264 38 is_stmt 0     # jacu.c:264:38
	movsd	u+2616(%rsi,%rax), %xmm4 # xmm4 = mem[0],zero
	.loc	18 264 37               # jacu.c:264:37
	movapd	%xmm0, %xmm1
	mulsd	%xmm4, %xmm1
	.loc	18 271 32 is_stmt 1     # jacu.c:271:32
	movapd	%xmm4, %xmm3
	.loc	18 153 18               # jacu.c:153:18
	movsd	.LCPI13_14(%rip), %xmm5 # xmm5 = mem[0],zero
	.loc	18 264 18               # jacu.c:264:18
	mulsd	%xmm5, %xmm1
	.loc	18 271 32               # jacu.c:271:32
	mulsd	%xmm3, %xmm3
	.loc	18 271 49 is_stmt 0     # jacu.c:271:49
	mulsd	%xmm8, %xmm3
	.loc	18 273 31 is_stmt 1     # jacu.c:273:31
	movapd	%xmm8, %xmm6
	mulsd	400(%rsp), %xmm6        # 16-byte Folded Reload
	.loc	18 264 56               # jacu.c:264:56
	mulsd	%xmm8, %xmm1
	.loc	18 273 38               # jacu.c:273:38
	mulsd	%xmm4, %xmm6
	.loc	18 278 36               # jacu.c:278:36
	movapd	%xmm10, %xmm7
	mulsd	%xmm4, %xmm7
	.loc	18 275 37               # jacu.c:275:37
	mulsd	%xmm12, %xmm4
	.loc	18 264 9                # jacu.c:264:9
	mulsd	%xmm11, %xmm1
	.loc	18 275 18               # jacu.c:275:18
	mulsd	%xmm5, %xmm4
	.loc	18 275 56 is_stmt 0     # jacu.c:275:56
	mulsd	%xmm8, %xmm4
	.loc	18 266 27 is_stmt 1     # jacu.c:266:27
	mulsd	416(%rsp), %xmm8        # 16-byte Folded Reload
.Ltmp942:
	.loc	18 266 34 is_stmt 0     # jacu.c:266:34
	mulsd	%xmm8, %xmm0
	.loc	18 268 36 is_stmt 1     # jacu.c:268:36
	mulsd	%xmm10, %xmm2
	movapd	%xmm9, %xmm5
	.loc	18 268 16 is_stmt 0     # jacu.c:268:16
	mulsd	%xmm5, %xmm2
	.loc	18 271 15 is_stmt 1     # jacu.c:271:15
	addsd	%xmm15, %xmm3
	.loc	18 265 9                # jacu.c:265:9
	subsd	%xmm0, %xmm1
	.loc	18 156 33               # jacu.c:156:33
	movsd	.LCPI13_11(%rip), %xmm9 # xmm9 = mem[0],zero
	.loc	18 270 13               # jacu.c:270:13
	mulsd	%xmm9, %xmm3
	.loc	18 269 13               # jacu.c:269:13
	subsd	%xmm3, %xmm2
	.loc	18 275 9                # jacu.c:275:9
	mulsd	%xmm11, %xmm4
	.loc	18 268 9                # jacu.c:268:9
	mulsd	%xmm11, %xmm2
	.loc	18 276 45               # jacu.c:276:45
	mulsd	%xmm12, %xmm8
	movapd	624(%rsp), %xmm3        # 16-byte Reload
	.loc	18 251 9                # jacu.c:251:9
	unpcklpd	%xmm4, %xmm3    # xmm3 = xmm3[0],xmm4[0]
	movapd	48(%rsp), %xmm0         # 16-byte Reload
	unpcklpd	%xmm8, %xmm0    # xmm0 = xmm0[0],xmm8[0]
	.loc	18 263 21               # jacu.c:263:21
	movsd	%xmm1, b+72(%rax,%rax,4)
	.loc	18 251 9                # jacu.c:251:9
	subpd	%xmm0, %xmm3
	.loc	18 278 16               # jacu.c:278:16
	mulsd	%xmm5, %xmm7
	.loc	18 278 9 is_stmt 0      # jacu.c:278:9
	mulsd	%xmm11, %xmm7
	.loc	18 272 9 is_stmt 1      # jacu.c:272:9
	subsd	%xmm6, %xmm2
	.loc	18 279 28               # jacu.c:279:28
	mulsd	384(%rsp), %xmm10       # 16-byte Folded Reload
.Ltmp943:
	.loc	18 279 9 is_stmt 0      # jacu.c:279:9
	subsd	%xmm10, %xmm7
	.loc	18 280 9 is_stmt 1      # jacu.c:280:9
	subsd	-96(%rsp), %xmm7        # 8-byte Folded Reload
	.loc	18 267 21               # jacu.c:267:21
	movsd	%xmm2, b+112(%rax,%rax,4)
	.loc	18 285 14               # jacu.c:285:14
	movsd	rho_i(%rcx,%rbx,8), %xmm15 # xmm15 = mem[0],zero
.Ltmp944:
	#DEBUG_VALUE: jacu:tmp1 <- %XMM15
	.loc	18 286 19               # jacu.c:286:19
	movapd	%xmm15, %xmm6
	mulsd	%xmm6, %xmm6
.Ltmp945:
	#DEBUG_VALUE: jacu:tmp2 <- %XMM6
	.loc	18 287 19               # jacu.c:287:19
	movapd	%xmm15, %xmm13
	mulsd	%xmm6, %xmm13
.Ltmp946:
	#DEBUG_VALUE: jacu:tmp3 <- %XMM13
	.loc	18 249 21               # jacu.c:249:21
	movupd	%xmm3, b+144(%rax,%rax,4)
	.loc	18 289 21               # jacu.c:289:21
	movapd	32(%rsp), %xmm0         # 16-byte Reload
	movsd	%xmm0, c(%rax,%rax,4)
	.loc	18 290 21               # jacu.c:290:21
	movq	$0, c+40(%rax,%rax,4)
	movapd	-16(%rsp), %xmm10       # 16-byte Reload
	.loc	18 292 21               # jacu.c:292:21
	movsd	%xmm10, c+120(%rax,%rax,4)
	.loc	18 277 21               # jacu.c:277:21
	movsd	%xmm7, b+192(%rax,%rax,4)
	.loc	18 296 33               # jacu.c:296:33
	movsd	u+24(%rdx,%rax), %xmm3  # xmm3 = mem[0],zero
	.loc	18 297 30               # jacu.c:297:30
	movapd	%xmm6, %xmm0
	mulsd	.LCPI13_19(%rip), %xmm0
	.loc	18 298 52               # jacu.c:298:52
	movapd	%xmm15, %xmm2
	mulsd	%xmm3, %xmm2
	.loc	18 298 32 is_stmt 0     # jacu.c:298:32
	movapd	%xmm10, %xmm1
	.loc	18 299 26 is_stmt 1     # jacu.c:299:26
	movapd	%xmm15, %xmm7
	.loc	18 298 32               # jacu.c:298:32
	mulsd	%xmm2, %xmm1
	.loc	18 299 26               # jacu.c:299:26
	mulsd	368(%rsp), %xmm7        # 16-byte Folded Reload
	.loc	18 299 9 is_stmt 0      # jacu.c:299:9
	movapd	%xmm1, %xmm4
	subsd	%xmm7, %xmm4
	.loc	18 300 9 is_stmt 1      # jacu.c:300:9
	subsd	-104(%rsp), %xmm4       # 8-byte Folded Reload
	.loc	18 298 21               # jacu.c:298:21
	movsd	%xmm4, c+48(%rax,%rax,4)
	.loc	18 65 21                # jacu.c:65:21
	xorpd	%xmm5, %xmm5
	.loc	18 291 21               # jacu.c:291:21
	movupd	%xmm5, c+80(%rax,%rax,4)
	.loc	18 296 17               # jacu.c:296:17
	movupd	u+8(%rdx,%rax), %xmm12
	.loc	18 296 32 is_stmt 0     # jacu.c:296:32
	movapd	%xmm3, %xmm4
	movlhps	%xmm4, %xmm4            # xmm4 = xmm4[0,0]
	.loc	18 293 21 is_stmt 1     # jacu.c:293:21
	movupd	%xmm5, c+160(%rax,%rax,4)
	.loc	18 296 32               # jacu.c:296:32
	mulpd	%xmm12, %xmm4
	.loc	18 296 51 is_stmt 0     # jacu.c:296:51
	movapd	%xmm6, %xmm7
	movlhps	%xmm7, %xmm7            # xmm7 = xmm7[0,0]
	mulpd	%xmm4, %xmm7
	movapd	224(%rsp), %xmm4        # 16-byte Reload
	.loc	18 296 9                # jacu.c:296:9
	mulpd	%xmm4, %xmm7
	.loc	18 297 37 is_stmt 1     # jacu.c:297:37
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm12, %xmm0
	.loc	18 297 20 is_stmt 0     # jacu.c:297:20
	mulpd	256(%rsp), %xmm0        # 16-byte Folded Reload
	.loc	18 296 9 is_stmt 1      # jacu.c:296:9
	xorpd	.LCPI13_4(%rip), %xmm7
	.loc	18 297 9                # jacu.c:297:9
	subpd	%xmm0, %xmm7
	.loc	18 310 28               # jacu.c:310:28
	movapd	%xmm15, %xmm0
	mulsd	.LCPI13_2(%rip), %xmm0
	.loc	18 310 20 is_stmt 0     # jacu.c:310:20
	mulsd	(%rsp), %xmm0           # 16-byte Folded Reload
	.loc	18 295 21 is_stmt 1     # jacu.c:295:21
	movupd	%xmm7, c+8(%rax,%rax,4)
	.loc	18 310 9                # jacu.c:310:9
	subsd	%xmm0, %xmm1
	.loc	18 311 9                # jacu.c:311:9
	subsd	-112(%rsp), %xmm1       # 8-byte Folded Reload
	.loc	18 302 52               # jacu.c:302:52
	movapd	%xmm15, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	.loc	18 308 21               # jacu.c:308:21
	movq	$0, c+56(%rax,%rax,4)
	.loc	18 302 52               # jacu.c:302:52
	mulpd	%xmm12, %xmm0
	.loc	18 302 32 is_stmt 0     # jacu.c:302:32
	mulpd	%xmm0, %xmm4
	.loc	18 316 42 is_stmt 1     # jacu.c:316:42
	movapd	%xmm2, %xmm5
	mulsd	%xmm5, %xmm5
	.loc	18 309 21               # jacu.c:309:21
	movsd	%xmm1, c+96(%rax,%rax,4)
	.loc	18 317 22               # jacu.c:317:22
	movsd	qs(%rcx,%rbx,8), %xmm7  # xmm7 = mem[0],zero
	.loc	18 317 36 is_stmt 0     # jacu.c:317:36
	movapd	%xmm15, %xmm8
	mulsd	%xmm7, %xmm8
	.loc	18 317 18               # jacu.c:317:18
	movapd	%xmm8, %xmm1
	mulsd	%xmm9, %xmm1
	.loc	18 302 21 is_stmt 1     # jacu.c:302:21
	movupd	%xmm4, c+128(%rax,%rax,4)
	.loc	18 317 13               # jacu.c:317:13
	subsd	%xmm5, %xmm1
	.loc	18 316 9                # jacu.c:316:9
	mulsd	%xmm10, %xmm1
	.loc	18 318 36               # jacu.c:318:36
	movapd	%xmm6, %xmm4
	mulsd	.LCPI13_20(%rip), %xmm4
	.loc	18 313 21               # jacu.c:313:21
	movq	$0, c+176(%rax,%rax,4)
	.loc	18 318 43               # jacu.c:318:43
	mulsd	%xmm3, %xmm4
	.loc	18 318 20 is_stmt 0     # jacu.c:318:20
	mulsd	(%rsp), %xmm4           # 16-byte Folded Reload
	.loc	18 318 9                # jacu.c:318:9
	subsd	%xmm4, %xmm1
	.loc	18 320 18 is_stmt 1     # jacu.c:320:18
	movapd	%xmm0, %xmm4
	.loc	18 315 21               # jacu.c:315:21
	movsd	%xmm1, c+24(%rax,%rax,4)
	.loc	18 153 18               # jacu.c:153:18
	movsd	.LCPI13_14(%rip), %xmm11 # xmm11 = mem[0],zero
	.loc	18 320 18               # jacu.c:320:18
	mulsd	%xmm11, %xmm4
	.loc	18 320 9 is_stmt 0      # jacu.c:320:9
	mulsd	%xmm10, %xmm4
	.loc	18 322 18 is_stmt 1     # jacu.c:322:18
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	.loc	18 319 21               # jacu.c:319:21
	movsd	%xmm4, c+64(%rax,%rax,4)
	.loc	18 322 18               # jacu.c:322:18
	mulsd	%xmm11, %xmm0
	.loc	18 322 9 is_stmt 0      # jacu.c:322:9
	mulsd	%xmm10, %xmm0
	.loc	18 324 9 is_stmt 1      # jacu.c:324:9
	mulsd	112(%rsp), %xmm2        # 8-byte Folded Reload
	.loc	18 325 34               # jacu.c:325:34
	movapd	%xmm15, %xmm1
	.loc	18 321 21               # jacu.c:321:21
	movsd	%xmm0, c+104(%rax,%rax,4)
	.loc	18 325 34               # jacu.c:325:34
	mulsd	.LCPI13_13(%rip), %xmm1
	.loc	18 325 20 is_stmt 0     # jacu.c:325:20
	mulsd	(%rsp), %xmm1           # 16-byte Folded Reload
	.loc	18 325 9                # jacu.c:325:9
	subsd	%xmm1, %xmm2
	.loc	18 327 21 is_stmt 1     # jacu.c:327:21
	movapd	352(%rsp), %xmm0        # 16-byte Reload
	movsd	%xmm0, c+184(%rax,%rax,4)
	.loc	18 330 24               # jacu.c:330:24
	mulsd	.LCPI13_16(%rip), %xmm7
	.loc	18 331 20               # jacu.c:331:20
	movsd	u+32(%rdx,%rax), %xmm4  # xmm4 = mem[0],zero
	.loc	18 331 18 is_stmt 0     # jacu.c:331:18
	movapd	%xmm4, %xmm1
	mulsd	.LCPI13_17(%rip), %xmm1
	.loc	18 332 38 is_stmt 1     # jacu.c:332:38
	movapd	%xmm6, %xmm0
	.loc	18 331 13               # jacu.c:331:13
	subsd	%xmm1, %xmm7
	.loc	18 332 38               # jacu.c:332:38
	mulsd	%xmm3, %xmm0
	.loc	18 334 31               # jacu.c:334:31
	movapd	%xmm13, %xmm1
	mulsd	%xmm14, %xmm1
	.loc	18 334 56 is_stmt 0     # jacu.c:334:56
	movapd	%xmm12, %xmm5
	mulsd	%xmm5, %xmm5
	.loc	18 332 18 is_stmt 1     # jacu.c:332:18
	mulsd	%xmm7, %xmm0
	.loc	18 334 38               # jacu.c:334:38
	mulsd	%xmm1, %xmm5
	.loc	18 335 31               # jacu.c:335:31
	movapd	%xmm13, %xmm1
	mulsd	.LCPI13_7(%rip), %xmm1
	.loc	18 335 56 is_stmt 0     # jacu.c:335:56
	shufpd	$1, %xmm12, %xmm12      # xmm12 = xmm12[1,0]
	movapd	%xmm12, %xmm7
	mulsd	%xmm7, %xmm7
	.loc	18 335 38               # jacu.c:335:38
	mulsd	%xmm1, %xmm7
	.loc	18 335 13               # jacu.c:335:13
	subsd	%xmm7, %xmm5
	movapd	(%rsp), %xmm7           # 16-byte Reload
	.loc	18 336 34 is_stmt 1     # jacu.c:336:34
	mulsd	.LCPI13_10(%rip), %xmm13
.Ltmp947:
	movsd	104(%rsp), %xmm9        # 8-byte Reload
                                        # xmm9 = mem[0],zero
	.loc	18 336 59 is_stmt 0     # jacu.c:336:59
	mulsd	%xmm3, %xmm3
	.loc	18 336 41               # jacu.c:336:41
	mulsd	%xmm13, %xmm3
	movsd	192(%rsp), %xmm13       # 8-byte Reload
                                        # xmm13 = mem[0],zero
	.loc	18 336 13               # jacu.c:336:13
	subsd	%xmm3, %xmm5
	.loc	18 337 21 is_stmt 1     # jacu.c:337:21
	movapd	%xmm6, %xmm1
	mulsd	.LCPI13_8(%rip), %xmm1
	.loc	18 330 9                # jacu.c:330:9
	mulsd	%xmm10, %xmm0
	.loc	18 337 28               # jacu.c:337:28
	mulsd	%xmm4, %xmm1
	.loc	18 337 13 is_stmt 0     # jacu.c:337:13
	subsd	%xmm1, %xmm5
	.loc	18 334 9 is_stmt 1      # jacu.c:334:9
	mulsd	%xmm7, %xmm5
	.loc	18 333 9                # jacu.c:333:9
	subsd	%xmm5, %xmm0
	.loc	18 329 21               # jacu.c:329:21
	movsd	%xmm0, c+32(%rax,%rax,4)
	.loc	18 339 22               # jacu.c:339:22
	movsd	u+8(%rdx,%rax), %xmm0   # xmm0 = mem[0],zero
	.loc	18 339 38 is_stmt 0     # jacu.c:339:38
	movsd	u+24(%rdx,%rax), %xmm1  # xmm1 = mem[0],zero
	.loc	18 339 37               # jacu.c:339:37
	movapd	%xmm0, %xmm3
	mulsd	%xmm1, %xmm3
	.loc	18 339 18               # jacu.c:339:18
	mulsd	%xmm11, %xmm3
	.loc	18 339 56               # jacu.c:339:56
	mulsd	%xmm6, %xmm3
	.loc	18 340 38 is_stmt 1     # jacu.c:340:38
	movapd	%xmm6, %xmm5
	mulsd	336(%rsp), %xmm5        # 16-byte Folded Reload
	.loc	18 339 9                # jacu.c:339:9
	mulsd	%xmm10, %xmm3
	.loc	18 340 45               # jacu.c:340:45
	mulsd	%xmm5, %xmm0
	.loc	18 340 9 is_stmt 0      # jacu.c:340:9
	subsd	%xmm0, %xmm3
	.loc	18 338 21 is_stmt 1     # jacu.c:338:21
	movsd	%xmm3, c+72(%rax,%rax,4)
	.loc	18 343 45               # jacu.c:343:45
	mulsd	%xmm12, %xmm5
	.loc	18 342 37               # jacu.c:342:37
	mulsd	%xmm1, %xmm12
	.loc	18 342 18 is_stmt 0     # jacu.c:342:18
	mulsd	%xmm11, %xmm12
	.loc	18 342 56               # jacu.c:342:56
	mulsd	%xmm6, %xmm12
	.loc	18 342 9                # jacu.c:342:9
	mulsd	%xmm10, %xmm12
	.loc	18 343 9 is_stmt 1      # jacu.c:343:9
	subsd	%xmm5, %xmm12
	.loc	18 341 21               # jacu.c:341:21
	movsd	%xmm12, c+112(%rax,%rax,4)
	.loc	18 348 32               # jacu.c:348:32
	movapd	%xmm1, %xmm0
	mulsd	%xmm0, %xmm0
	.loc	18 348 49 is_stmt 0     # jacu.c:348:49
	mulsd	%xmm6, %xmm0
	.loc	18 348 15               # jacu.c:348:15
	addsd	%xmm8, %xmm0
	.loc	18 345 36 is_stmt 1     # jacu.c:345:36
	mulsd	%xmm15, %xmm4
	.loc	18 180 18               # jacu.c:180:18
	movsd	.LCPI13_17(%rip), %xmm5 # xmm5 = mem[0],zero
	.loc	18 345 16               # jacu.c:345:16
	mulsd	%xmm5, %xmm4
	.loc	18 156 33               # jacu.c:156:33
	movsd	.LCPI13_11(%rip), %xmm3 # xmm3 = mem[0],zero
	.loc	18 347 13               # jacu.c:347:13
	mulsd	%xmm3, %xmm0
	movapd	%xmm3, %xmm14
	.loc	18 346 13               # jacu.c:346:13
	subsd	%xmm0, %xmm4
	.loc	18 349 42               # jacu.c:349:42
	mulsd	320(%rsp), %xmm6        # 16-byte Folded Reload
.Ltmp948:
	.loc	18 349 49 is_stmt 0     # jacu.c:349:49
	mulsd	%xmm1, %xmm6
	.loc	18 345 9 is_stmt 1      # jacu.c:345:9
	mulsd	%xmm10, %xmm4
	.loc	18 326 9                # jacu.c:326:9
	unpcklpd	%xmm4, %xmm2    # xmm2 = xmm2[0],xmm4[0]
	movapd	16(%rsp), %xmm0         # 16-byte Reload
	unpcklpd	%xmm6, %xmm0    # xmm0 = xmm0[0],xmm6[0]
	movsd	200(%rsp), %xmm6        # 8-byte Reload
                                        # xmm6 = mem[0],zero
	subpd	%xmm0, %xmm2
	.loc	18 323 21               # jacu.c:323:21
	movupd	%xmm2, c+144(%rax,%rax,4)
	.loc	18 351 36               # jacu.c:351:36
	mulsd	%xmm15, %xmm1
	.loc	18 351 16 is_stmt 0     # jacu.c:351:16
	mulsd	%xmm5, %xmm1
	.loc	18 352 28 is_stmt 1     # jacu.c:352:28
	mulsd	304(%rsp), %xmm15       # 16-byte Folded Reload
.Ltmp949:
	.loc	18 351 9                # jacu.c:351:9
	mulsd	%xmm10, %xmm1
	.loc	18 352 9                # jacu.c:352:9
	subsd	%xmm15, %xmm1
	movapd	608(%rsp), %xmm15       # 16-byte Reload
	.loc	18 353 9                # jacu.c:353:9
	subsd	-120(%rsp), %xmm1       # 8-byte Folded Reload
	.loc	18 350 21               # jacu.c:350:21
	movsd	%xmm1, c+192(%rax,%rax,4)
.Ltmp950:
	.loc	18 55 5 discriminator 1 # jacu.c:55:5
	incq	%rbp
	.loc	18 55 21 is_stmt 0 discriminator 1 # jacu.c:55:21
	addq	$8, %rdi
	addq	$40, %rax
	incq	%rbx
	cmpq	%r13, %rbp
	.loc	18 55 5 discriminator 1 # jacu.c:55:5
	jl	.LBB13_3
.Ltmp951:
.LBB13_4:                               # %for.inc2341
                                        #   in Loop: Header=BB13_2 Depth=1
	.loc	18 54 3 is_stmt 1 discriminator 1 # jacu.c:54:3
	addq	$520, %r14              # imm = 0x208
	addq	$2600, %r15             # imm = 0xA28
	addq	$65, %r12
	.loc	18 54 19 is_stmt 0 discriminator 1 # jacu.c:54:19
	cmpq	%r8, %r11
	jl	.LBB13_2
.Ltmp952:
.LBB13_5:                               # %for.end2343
	.loc	18 356 1 is_stmt 1      # jacu.c:356:1
	addq	$648, %rsp              # imm = 0x288
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp953:
.Lfunc_end13:
	.size	jacu, .Lfunc_end13-jacu
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI14_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	buts
	.p2align	4, 0x90
	.type	buts,@function
buts:                                   # @buts
.Lfunc_begin14:
	.file	19 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/buts.c"
	.loc	19 54 0                 # buts.c:54:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp954:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp955:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp956:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp957:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp958:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp959:
	.cfi_def_cfa_offset 56
	subq	$248, %rsp
.Ltmp960:
	.cfi_def_cfa_offset 304
.Ltmp961:
	.cfi_offset %rbx, -56
.Ltmp962:
	.cfi_offset %r12, -48
.Ltmp963:
	.cfi_offset %r13, -40
.Ltmp964:
	.cfi_offset %r14, -32
.Ltmp965:
	.cfi_offset %r15, -24
.Ltmp966:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: buts:ldmx <- %EDI
	#DEBUG_VALUE: buts:ldmy <- %ESI
	#DEBUG_VALUE: buts:ldmz <- %EDX
	#DEBUG_VALUE: buts:nx <- %ECX
	#DEBUG_VALUE: buts:ny <- %R8D
	#DEBUG_VALUE: buts:nz <- %R9D
	#DEBUG_VALUE: buts:omega <- %XMM0
	#DEBUG_VALUE: buts:nx0 <- [%RSP+392]
	#DEBUG_VALUE: buts:ny0 <- [%RSP+400]
	movapd	%xmm0, %xmm2
.Ltmp967:
	#DEBUG_VALUE: buts:omega <- %XMM2
	movsd	%xmm2, (%rsp)           # 8-byte Spill
	movl	384(%rsp), %ebx
	#DEBUG_VALUE: buts:jend <- %EBX
	movl	376(%rsp), %r12d
	#DEBUG_VALUE: buts:jst <- %R12D
.Ltmp968:
	.loc	19 47 20 prologue_end   # buts.c:47:20
	movl	%esi, %r15d
	shrl	$31, %r15d
	addl	%esi, %r15d
	.loc	19 47 24 is_stmt 0      # buts.c:47:24
	orl	$1, %r15d
	.loc	19 47 32                # buts.c:47:32
	movl	%edi, %r14d
	shrl	$31, %r14d
	addl	%edi, %r14d
	andl	$-2, %r14d
	.loc	19 47 36                # buts.c:47:36
	leal	1(%r14), %eax
.Ltmp969:
	.loc	19 62 3 is_stmt 1 discriminator 1 # buts.c:62:3
	movq	%rax, -104(%rsp)        # 8-byte Spill
	cmpl	%r12d, %ebx
	jle	.LBB14_15
.Ltmp970:
# BB#1:                                 # %for.cond22.preheader.lr.ph
	#DEBUG_VALUE: buts:jst <- %R12D
	#DEBUG_VALUE: buts:jend <- %EBX
	#DEBUG_VALUE: buts:omega <- %XMM2
	#DEBUG_VALUE: buts:ny0 <- [%RSP+400]
	#DEBUG_VALUE: buts:nx0 <- [%RSP+392]
	#DEBUG_VALUE: buts:nz <- %R9D
	#DEBUG_VALUE: buts:ny <- %R8D
	#DEBUG_VALUE: buts:nx <- %ECX
	#DEBUG_VALUE: buts:ldmz <- %EDX
	#DEBUG_VALUE: buts:ldmy <- %ESI
	#DEBUG_VALUE: buts:ldmx <- %EDI
	movl	368(%rsp), %r8d
.Ltmp971:
	#DEBUG_VALUE: buts:iend <- %R8D
	movl	360(%rsp), %r10d
	#DEBUG_VALUE: buts:tv <- undef
	#DEBUG_VALUE: buts:ist <- %R10D
	movq	312(%rsp), %r9
.Ltmp972:
	#DEBUG_VALUE: buts:v <- %R9
	movl	304(%rsp), %eax
	#DEBUG_VALUE: buts:k <- %EAX
.Ltmp973:
	.loc	19 63 5 discriminator 1 # buts.c:63:5
	cmpl	%r10d, %r8d
	jle	.LBB14_7
.Ltmp974:
# BB#2:                                 # %for.cond25.preheader.lr.ph.us.preheader
	#DEBUG_VALUE: buts:ldmx <- %EDI
	#DEBUG_VALUE: buts:ldmy <- %ESI
	#DEBUG_VALUE: buts:ldmz <- %EDX
	#DEBUG_VALUE: buts:nx <- %ECX
	#DEBUG_VALUE: buts:nx0 <- [%RSP+392]
	#DEBUG_VALUE: buts:ny0 <- [%RSP+400]
	#DEBUG_VALUE: buts:omega <- %XMM2
	#DEBUG_VALUE: buts:jend <- %EBX
	#DEBUG_VALUE: buts:jst <- %R12D
	#DEBUG_VALUE: buts:k <- %EAX
	#DEBUG_VALUE: buts:v <- %R9
	#DEBUG_VALUE: buts:ist <- %R10D
	#DEBUG_VALUE: buts:iend <- %R8D
	movq	352(%rsp), %rcx
.Ltmp975:
	#DEBUG_VALUE: buts:udz <- %RCX
	.loc	19 66 43                # buts.c:66:43
	leal	1(%rax), %eax
.Ltmp976:
	.loc	19 66 40 is_stmt 0      # buts.c:66:40
	movslq	%eax, %rdx
.Ltmp977:
	.loc	19 66 22                # buts.c:66:22
	movslq	%r8d, %r11
	movslq	%r10d, %rdi
.Ltmp978:
	movslq	%ebx, %rbp
	leaq	-1(%rbp), %rax
	movq	-104(%rsp), %rsi        # 8-byte Reload
.Ltmp979:
	movq	%rsi, %r8
.Ltmp980:
	imulq	%r8, %rax
	addq	%r11, %rax
	imulq	$200, %rax, %rsi
	leaq	-8(%rcx,%rsi), %r10
.Ltmp981:
	movl	%r14d, %ecx
.Ltmp982:
	imulq	$200, %rcx, %rsi
	movq	$-200, %r13
	subq	%rsi, %r13
	imulq	%r15, %rdx
	leaq	(%rdx,%rdx,4), %rdx
	leaq	(%rbp,%rbp,4), %rsi
	shlq	$3, %rsi
	leaq	-40(%rsi,%rdx,8), %rdx
	leaq	(%r11,%r11,4), %rsi
	leaq	(%r9,%rsi,8), %rsi
	imulq	%r8, %rdx
	leaq	-8(%rdx,%rsi), %r9
.Ltmp983:
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,4), %rdx
	movq	$-40, %rcx
	subq	%rdx, %rcx
	movslq	%r12d, %rbx
.Ltmp984:
	leaq	(%rax,%rax,4), %rax
	movq	320(%rsp), %rdx
	leaq	-8(%rdx,%rax,8), %r8
.Ltmp985:
	.p2align	4, 0x90
.LBB14_3:                               # %for.cond25.preheader.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB14_4 Depth 2
	decq	%rbp
	movq	%r8, %rdx
	movq	%r9, %rsi
	movq	%r10, %rax
	movq	%r11, %r12
.Ltmp986:
	.p2align	4, 0x90
.LBB14_4:                               # %for.cond25.preheader.us
                                        #   Parent Loop BB14_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	19 63 5 is_stmt 1 discriminator 1 # buts.c:63:5
	decq	%r12
.Ltmp987:
	.loc	19 66 22                # buts.c:66:22
	movsd	-192(%rax), %xmm0       # xmm0 = mem[0],zero
	.loc	19 67 22                # buts.c:67:22
	movsd	-152(%rax), %xmm1       # xmm1 = mem[0],zero
	.loc	19 66 38                # buts.c:66:38
	mulsd	-32(%rsi), %xmm0
	.loc	19 67 38                # buts.c:67:38
	mulsd	-24(%rsi), %xmm1
	.loc	19 67 20 is_stmt 0      # buts.c:67:20
	addsd	%xmm0, %xmm1
	.loc	19 68 22 is_stmt 1      # buts.c:68:22
	movsd	-112(%rax), %xmm0       # xmm0 = mem[0],zero
	.loc	19 68 38 is_stmt 0      # buts.c:68:38
	mulsd	-16(%rsi), %xmm0
	.loc	19 68 20                # buts.c:68:20
	addsd	%xmm1, %xmm0
	.loc	19 69 22 is_stmt 1      # buts.c:69:22
	movsd	-72(%rax), %xmm1        # xmm1 = mem[0],zero
	.loc	19 69 38 is_stmt 0      # buts.c:69:38
	mulsd	-8(%rsi), %xmm1
	.loc	19 69 20                # buts.c:69:20
	addsd	%xmm0, %xmm1
	.loc	19 70 22 is_stmt 1      # buts.c:70:22
	movsd	-32(%rax), %xmm0        # xmm0 = mem[0],zero
	.loc	19 70 38 is_stmt 0      # buts.c:70:38
	mulsd	(%rsi), %xmm0
	.loc	19 70 20                # buts.c:70:20
	addsd	%xmm1, %xmm0
	.loc	19 66 17 is_stmt 1      # buts.c:66:17
	mulsd	%xmm2, %xmm0
	.loc	19 65 21                # buts.c:65:21
	movsd	%xmm0, -32(%rdx)
	.loc	19 66 22                # buts.c:66:22
	movsd	-184(%rax), %xmm0       # xmm0 = mem[0],zero
	.loc	19 67 22                # buts.c:67:22
	movsd	-144(%rax), %xmm1       # xmm1 = mem[0],zero
	.loc	19 66 38                # buts.c:66:38
	mulsd	-32(%rsi), %xmm0
	.loc	19 67 38                # buts.c:67:38
	mulsd	-24(%rsi), %xmm1
	.loc	19 67 20 is_stmt 0      # buts.c:67:20
	addsd	%xmm0, %xmm1
	.loc	19 68 22 is_stmt 1      # buts.c:68:22
	movsd	-104(%rax), %xmm0       # xmm0 = mem[0],zero
	.loc	19 68 38 is_stmt 0      # buts.c:68:38
	mulsd	-16(%rsi), %xmm0
	.loc	19 68 20                # buts.c:68:20
	addsd	%xmm1, %xmm0
	.loc	19 69 22 is_stmt 1      # buts.c:69:22
	movsd	-64(%rax), %xmm1        # xmm1 = mem[0],zero
	.loc	19 69 38 is_stmt 0      # buts.c:69:38
	mulsd	-8(%rsi), %xmm1
	.loc	19 69 20                # buts.c:69:20
	addsd	%xmm0, %xmm1
	.loc	19 70 22 is_stmt 1      # buts.c:70:22
	movsd	-24(%rax), %xmm0        # xmm0 = mem[0],zero
	.loc	19 70 38 is_stmt 0      # buts.c:70:38
	mulsd	(%rsi), %xmm0
	.loc	19 70 20                # buts.c:70:20
	addsd	%xmm1, %xmm0
	.loc	19 66 17 is_stmt 1      # buts.c:66:17
	mulsd	%xmm2, %xmm0
	.loc	19 65 21                # buts.c:65:21
	movsd	%xmm0, -24(%rdx)
	.loc	19 66 22                # buts.c:66:22
	movsd	-176(%rax), %xmm0       # xmm0 = mem[0],zero
	.loc	19 67 22                # buts.c:67:22
	movsd	-136(%rax), %xmm1       # xmm1 = mem[0],zero
	.loc	19 66 38                # buts.c:66:38
	mulsd	-32(%rsi), %xmm0
	.loc	19 67 38                # buts.c:67:38
	mulsd	-24(%rsi), %xmm1
	.loc	19 67 20 is_stmt 0      # buts.c:67:20
	addsd	%xmm0, %xmm1
	.loc	19 68 22 is_stmt 1      # buts.c:68:22
	movsd	-96(%rax), %xmm0        # xmm0 = mem[0],zero
	.loc	19 68 38 is_stmt 0      # buts.c:68:38
	mulsd	-16(%rsi), %xmm0
	.loc	19 68 20                # buts.c:68:20
	addsd	%xmm1, %xmm0
	.loc	19 69 22 is_stmt 1      # buts.c:69:22
	movsd	-56(%rax), %xmm1        # xmm1 = mem[0],zero
	.loc	19 69 38 is_stmt 0      # buts.c:69:38
	mulsd	-8(%rsi), %xmm1
	.loc	19 69 20                # buts.c:69:20
	addsd	%xmm0, %xmm1
	.loc	19 70 22 is_stmt 1      # buts.c:70:22
	movsd	-16(%rax), %xmm0        # xmm0 = mem[0],zero
	.loc	19 70 38 is_stmt 0      # buts.c:70:38
	mulsd	(%rsi), %xmm0
	.loc	19 70 20                # buts.c:70:20
	addsd	%xmm1, %xmm0
	.loc	19 66 17 is_stmt 1      # buts.c:66:17
	mulsd	%xmm2, %xmm0
	.loc	19 65 21                # buts.c:65:21
	movsd	%xmm0, -16(%rdx)
	.loc	19 66 22                # buts.c:66:22
	movsd	-168(%rax), %xmm0       # xmm0 = mem[0],zero
	.loc	19 67 22                # buts.c:67:22
	movsd	-128(%rax), %xmm1       # xmm1 = mem[0],zero
	.loc	19 66 38                # buts.c:66:38
	mulsd	-32(%rsi), %xmm0
	.loc	19 67 38                # buts.c:67:38
	mulsd	-24(%rsi), %xmm1
	.loc	19 67 20 is_stmt 0      # buts.c:67:20
	addsd	%xmm0, %xmm1
	.loc	19 68 22 is_stmt 1      # buts.c:68:22
	movsd	-88(%rax), %xmm0        # xmm0 = mem[0],zero
	.loc	19 68 38 is_stmt 0      # buts.c:68:38
	mulsd	-16(%rsi), %xmm0
	.loc	19 68 20                # buts.c:68:20
	addsd	%xmm1, %xmm0
	.loc	19 69 22 is_stmt 1      # buts.c:69:22
	movsd	-48(%rax), %xmm1        # xmm1 = mem[0],zero
	.loc	19 69 38 is_stmt 0      # buts.c:69:38
	mulsd	-8(%rsi), %xmm1
	.loc	19 69 20                # buts.c:69:20
	addsd	%xmm0, %xmm1
	.loc	19 70 22 is_stmt 1      # buts.c:70:22
	movsd	-8(%rax), %xmm0         # xmm0 = mem[0],zero
	.loc	19 70 38 is_stmt 0      # buts.c:70:38
	mulsd	(%rsi), %xmm0
	.loc	19 70 20                # buts.c:70:20
	addsd	%xmm1, %xmm0
	.loc	19 66 17 is_stmt 1      # buts.c:66:17
	mulsd	%xmm2, %xmm0
	.loc	19 65 21                # buts.c:65:21
	movsd	%xmm0, -8(%rdx)
	.loc	19 66 22                # buts.c:66:22
	movsd	-160(%rax), %xmm0       # xmm0 = mem[0],zero
	.loc	19 67 22                # buts.c:67:22
	movsd	-120(%rax), %xmm1       # xmm1 = mem[0],zero
	.loc	19 66 38                # buts.c:66:38
	mulsd	-32(%rsi), %xmm0
	.loc	19 67 38                # buts.c:67:38
	mulsd	-24(%rsi), %xmm1
	.loc	19 67 20 is_stmt 0      # buts.c:67:20
	addsd	%xmm0, %xmm1
	.loc	19 68 22 is_stmt 1      # buts.c:68:22
	movsd	-80(%rax), %xmm0        # xmm0 = mem[0],zero
	.loc	19 68 38 is_stmt 0      # buts.c:68:38
	mulsd	-16(%rsi), %xmm0
	.loc	19 68 20                # buts.c:68:20
	addsd	%xmm1, %xmm0
	.loc	19 69 22 is_stmt 1      # buts.c:69:22
	movsd	-40(%rax), %xmm1        # xmm1 = mem[0],zero
	.loc	19 69 38 is_stmt 0      # buts.c:69:38
	mulsd	-8(%rsi), %xmm1
	.loc	19 69 20                # buts.c:69:20
	addsd	%xmm0, %xmm1
	.loc	19 70 22 is_stmt 1      # buts.c:70:22
	movsd	(%rax), %xmm0           # xmm0 = mem[0],zero
	.loc	19 70 38 is_stmt 0      # buts.c:70:38
	mulsd	(%rsi), %xmm0
	.loc	19 70 20                # buts.c:70:20
	addsd	%xmm1, %xmm0
	.loc	19 66 17 is_stmt 1      # buts.c:66:17
	mulsd	%xmm2, %xmm0
	.loc	19 65 21                # buts.c:65:21
	movsd	%xmm0, (%rdx)
.Ltmp988:
	.loc	19 63 26 discriminator 1 # buts.c:63:26
	addq	$-200, %rax
	addq	$-40, %rsi
	addq	$-40, %rdx
	cmpq	%rdi, %r12
	.loc	19 63 5 is_stmt 0 discriminator 1 # buts.c:63:5
	jg	.LBB14_4
.Ltmp989:
# BB#5:                                 # %for.cond22.for.inc119_crit_edge.us
                                        #   in Loop: Header=BB14_3 Depth=1
	.loc	19 62 3 is_stmt 1 discriminator 1 # buts.c:62:3
	addq	%r13, %r10
	addq	%rcx, %r9
	addq	%rcx, %r8
	.loc	19 62 24 is_stmt 0 discriminator 1 # buts.c:62:24
	cmpq	%rbx, %rbp
	jg	.LBB14_3
.Ltmp990:
# BB#6:                                 # %for.cond123.preheader
	movl	376(%rsp), %ebx
	movl	%ebx, %r12d
	movl	384(%rsp), %ebx
.Ltmp991:
	.loc	19 75 3 is_stmt 1 discriminator 1 # buts.c:75:3
	cmpl	%r12d, %ebx
	movl	368(%rsp), %edi
	movl	%edi, %r8d
	movl	360(%rsp), %ebp
	movl	%ebp, %r10d
	movq	312(%rsp), %r9
	movl	304(%rsp), %eax
	jle	.LBB14_15
.LBB14_7:                               # %for.cond127.preheader.lr.ph
	#DEBUG_VALUE: buts:d <- undef
.Ltmp992:
	.loc	19 79 41                # buts.c:79:41
	cltq
	movq	-104(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, %rdx
	imulq	%rdx, %r15
	imulq	%rax, %r15
	leaq	(%r15,%r15,4), %rax
	leaq	(%r9,%rax,8), %rax
.Ltmp993:
	.loc	19 75 3 discriminator 1 # buts.c:75:3
	movq	%rax, -48(%rsp)         # 8-byte Spill
	movslq	%r8d, %rsi
	movq	%rsi, -56(%rsp)         # 8-byte Spill
	movslq	%r10d, %rax
	movq	%rax, -8(%rsp)          # 8-byte Spill
	movslq	%ebx, %rax
	movslq	%r12d, %r11
	movq	%r11, -64(%rsp)         # 8-byte Spill
	leaq	-1(%rax), %rcx
	imulq	%rdx, %rcx
	leaq	-1(%rcx,%rsi), %rcx
	leaq	(%rcx,%rcx,4), %rdx
	movq	320(%rsp), %rsi
	leaq	(%rsi,%rdx,8), %r13
	movl	%r14d, %edx
	leaq	(,%rdx,8), %rsi
	leaq	(%rsi,%rsi,4), %r9
	movq	$-40, %rsi
	subq	%r9, %rsi
	movq	%rsi, -72(%rsp)         # 8-byte Spill
	imulq	$200, %rcx, %r9
	imulq	$200, %rdx, %rcx
	movq	$-200, %rdx
	subq	%rcx, %rdx
	movq	%rdx, -80(%rsp)         # 8-byte Spill
	movq	344(%rsp), %rbx
	addq	%r9, %rbx
	addq	336(%rsp), %r9
	.p2align	4, 0x90
.LBB14_8:                               # %for.cond127.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB14_10 Depth 2
                                        #       Child Loop BB14_11 Depth 3
	leaq	-1(%rax), %rcx
.Ltmp994:
	.loc	19 76 5 discriminator 1 # buts.c:76:5
	cmpl	%r10d, %r8d
	jle	.LBB14_14
# BB#9:                                 # %for.cond130.preheader.lr.ph
                                        #   in Loop: Header=BB14_8 Depth=1
.Ltmp995:
	.loc	19 78 23                # buts.c:78:23
	movq	%rcx, -40(%rsp)         # 8-byte Spill
	movq	-104(%rsp), %rsi        # 8-byte Reload
	imulq	%rsi, %rcx
	leaq	(,%rcx,8), %rdx
	leaq	(%rdx,%rdx,4), %r8
	movq	320(%rsp), %rdx
	leaq	(%rdx,%r8), %rdx
	.loc	19 79 41                # buts.c:79:41
	movq	%rdx, 16(%rsp)          # 8-byte Spill
	imulq	%rsi, %rax
	leaq	(%rax,%rax,4), %rax
	movq	-48(%rsp), %rdx         # 8-byte Reload
	leaq	(%rdx,%rax,8), %rax
	.loc	19 80 41                # buts.c:80:41
	movq	%rax, 8(%rsp)           # 8-byte Spill
	addq	%rdx, %r8
.Ltmp996:
	.loc	19 95 22                # buts.c:95:22
	imulq	$200, %rcx, %r11
	addq	328(%rsp), %r11
	movq	%r9, -24(%rsp)          # 8-byte Spill
	movq	%rbx, %r10
	movq	%rbx, -32(%rsp)         # 8-byte Spill
	movq	%r13, -16(%rsp)         # 8-byte Spill
	movq	-56(%rsp), %rcx         # 8-byte Reload
.Ltmp997:
	.p2align	4, 0x90
.LBB14_10:                              # %for.cond130.preheader
                                        #   Parent Loop BB14_8 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_11 Depth 3
	movq	%rcx, %rax
	.loc	19 76 5 discriminator 1 # buts.c:76:5
	leaq	-1(%rax), %rcx
.Ltmp998:
	.loc	19 80 41                # buts.c:80:41
	shlq	$3, %rax
	leaq	(%rax,%rax,4), %rsi
	.loc	19 78 23                # buts.c:78:23
	movq	16(%rsp), %rax          # 8-byte Reload
	leaq	-40(%rax,%rsi), %rdi
	.loc	19 79 41                # buts.c:79:41
	movq	8(%rsp), %rax           # 8-byte Reload
	leaq	-40(%rax,%rsi), %rbp
	.loc	19 80 41                # buts.c:80:41
	addq	%r8, %rsi
	movl	$5, %ebx
	movq	%r9, %r14
	movq	%r10, %r15
	movq	%r13, %r12
	movsd	(%rsp), %xmm4           # 8-byte Reload
                                        # xmm4 = mem[0],zero
	.p2align	4, 0x90
.LBB14_11:                              # %for.body132
                                        #   Parent Loop BB14_8 Depth=1
                                        #     Parent Loop BB14_10 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	.loc	19 79 23                # buts.c:79:23
	movsd	(%r15), %xmm0           # xmm0 = mem[0],zero
	.loc	19 81 23                # buts.c:81:23
	movsd	40(%r15), %xmm1         # xmm1 = mem[0],zero
	.loc	19 79 39                # buts.c:79:39
	mulsd	(%rbp), %xmm0
	.loc	19 80 23                # buts.c:80:23
	movsd	(%r14), %xmm2           # xmm2 = mem[0],zero
	.loc	19 82 23                # buts.c:82:23
	movsd	40(%r14), %xmm3         # xmm3 = mem[0],zero
	.loc	19 80 39                # buts.c:80:39
	mulsd	(%rsi), %xmm2
	.loc	19 81 39                # buts.c:81:39
	mulsd	8(%rbp), %xmm1
	.loc	19 80 21                # buts.c:80:21
	addsd	%xmm0, %xmm2
	.loc	19 81 21                # buts.c:81:21
	addsd	%xmm2, %xmm1
	.loc	19 82 39                # buts.c:82:39
	mulsd	8(%rsi), %xmm3
	.loc	19 83 23                # buts.c:83:23
	movsd	80(%r15), %xmm0         # xmm0 = mem[0],zero
	.loc	19 82 21                # buts.c:82:21
	addsd	%xmm1, %xmm3
	.loc	19 83 39                # buts.c:83:39
	mulsd	16(%rbp), %xmm0
	.loc	19 84 23                # buts.c:84:23
	movsd	80(%r14), %xmm1         # xmm1 = mem[0],zero
	.loc	19 84 39 is_stmt 0      # buts.c:84:39
	mulsd	16(%rsi), %xmm1
	.loc	19 83 21 is_stmt 1      # buts.c:83:21
	addsd	%xmm3, %xmm0
	.loc	19 84 21                # buts.c:84:21
	addsd	%xmm0, %xmm1
	.loc	19 85 23                # buts.c:85:23
	movsd	120(%r15), %xmm0        # xmm0 = mem[0],zero
	.loc	19 85 39 is_stmt 0      # buts.c:85:39
	mulsd	24(%rbp), %xmm0
	.loc	19 85 21                # buts.c:85:21
	addsd	%xmm1, %xmm0
	.loc	19 86 23 is_stmt 1      # buts.c:86:23
	movsd	120(%r14), %xmm1        # xmm1 = mem[0],zero
	.loc	19 86 39 is_stmt 0      # buts.c:86:39
	mulsd	24(%rsi), %xmm1
	.loc	19 87 23 is_stmt 1      # buts.c:87:23
	movsd	160(%r15), %xmm2        # xmm2 = mem[0],zero
	.loc	19 86 21                # buts.c:86:21
	addsd	%xmm0, %xmm1
	.loc	19 87 39                # buts.c:87:39
	mulsd	32(%rbp), %xmm2
	.loc	19 88 23                # buts.c:88:23
	movsd	160(%r14), %xmm0        # xmm0 = mem[0],zero
	.loc	19 88 39 is_stmt 0      # buts.c:88:39
	mulsd	32(%rsi), %xmm0
	.loc	19 87 21 is_stmt 1      # buts.c:87:21
	addsd	%xmm1, %xmm2
	.loc	19 88 21                # buts.c:88:21
	addsd	%xmm2, %xmm0
	.loc	19 79 19                # buts.c:79:19
	mulsd	%xmm4, %xmm0
	.loc	19 79 11 is_stmt 0      # buts.c:79:11
	addsd	(%r12), %xmm0
	.loc	19 78 21 is_stmt 1      # buts.c:78:21
	movsd	%xmm0, (%r12)
.Ltmp999:
	.loc	19 77 7 discriminator 1 # buts.c:77:7
	addq	$8, %r12
	addq	$8, %r15
	addq	$8, %r14
	decq	%rbx
	jne	.LBB14_11
.Ltmp1000:
# BB#12:                                # %for.cond319.preheader
                                        #   in Loop: Header=BB14_10 Depth=2
	.loc	19 95 22                # buts.c:95:22
	imulq	$200, %rcx, %rbx
	movq	(%r11,%rbx), %rax
	.loc	19 95 20 is_stmt 0      # buts.c:95:20
	movq	%rax, 48(%rsp)
	.loc	19 96 22 is_stmt 1      # buts.c:96:22
	movq	40(%r11,%rbx), %rax
	.loc	19 96 20 is_stmt 0      # buts.c:96:20
	movq	%rax, 56(%rsp)
	.loc	19 97 22 is_stmt 1      # buts.c:97:22
	movq	80(%r11,%rbx), %rax
	.loc	19 97 20 is_stmt 0      # buts.c:97:20
	movq	%rax, 64(%rsp)
	.loc	19 98 22 is_stmt 1      # buts.c:98:22
	movq	120(%r11,%rbx), %rax
	.loc	19 98 20 is_stmt 0      # buts.c:98:20
	movq	%rax, 72(%rsp)
	.loc	19 99 22 is_stmt 1      # buts.c:99:22
	movq	160(%r11,%rbx), %rax
	.loc	19 99 20 is_stmt 0      # buts.c:99:20
	movq	%rax, 80(%rsp)
	.loc	19 95 22 is_stmt 1      # buts.c:95:22
	movq	8(%r11,%rbx), %rax
	.loc	19 95 20 is_stmt 0      # buts.c:95:20
	movq	%rax, 88(%rsp)
	movq	%rcx, %r15
	.loc	19 96 22 is_stmt 1      # buts.c:96:22
	movq	48(%r11,%rbx), %rcx
	.loc	19 96 20 is_stmt 0      # buts.c:96:20
	movq	%rcx, 96(%rsp)
	.loc	19 97 22 is_stmt 1      # buts.c:97:22
	movq	88(%r11,%rbx), %rdx
	.loc	19 97 20 is_stmt 0      # buts.c:97:20
	movq	%rdx, 104(%rsp)
	.loc	19 98 22 is_stmt 1      # buts.c:98:22
	movq	128(%r11,%rbx), %rsi
	.loc	19 98 20 is_stmt 0      # buts.c:98:20
	movq	%rsi, 112(%rsp)
	.loc	19 99 22 is_stmt 1      # buts.c:99:22
	movq	168(%r11,%rbx), %rax
	.loc	19 99 20 is_stmt 0      # buts.c:99:20
	movq	%rax, 120(%rsp)
	.loc	19 95 22 is_stmt 1      # buts.c:95:22
	movq	16(%r11,%rbx), %rbp
	.loc	19 95 20 is_stmt 0      # buts.c:95:20
	movq	%rbp, 128(%rsp)
	.loc	19 96 22 is_stmt 1      # buts.c:96:22
	movq	56(%r11,%rbx), %rbp
	.loc	19 96 20 is_stmt 0      # buts.c:96:20
	movq	%rbp, 136(%rsp)
	.loc	19 97 22 is_stmt 1      # buts.c:97:22
	movq	96(%r11,%rbx), %rbp
	.loc	19 97 20 is_stmt 0      # buts.c:97:20
	movq	%rbp, 144(%rsp)
	.loc	19 95 22 is_stmt 1      # buts.c:95:22
	movq	24(%r11,%rbx), %rbp
.Ltmp1001:
	.loc	19 113 32               # buts.c:113:32
	movsd	136(%r11,%rbx), %xmm15  # xmm15 = mem[0],zero
	movhpd	176(%r11,%rbx), %xmm15  # xmm15 = xmm15[0],mem[0]
.Ltmp1002:
	.loc	19 95 20                # buts.c:95:20
	movq	%rbp, 168(%rsp)
	.loc	19 96 22                # buts.c:96:22
	movq	64(%r11,%rbx), %rbp
	.loc	19 96 20 is_stmt 0      # buts.c:96:20
	movq	%rbp, 176(%rsp)
	.loc	19 97 22 is_stmt 1      # buts.c:97:22
	movsd	104(%r11,%rbx), %xmm0   # xmm0 = mem[0],zero
	.loc	19 95 22                # buts.c:95:22
	movsd	%xmm0, -120(%rsp)       # 8-byte Spill
	movq	32(%r11,%rbx), %r14
	.loc	19 96 22                # buts.c:96:22
	movsd	72(%r11,%rbx), %xmm0    # xmm0 = mem[0],zero
	.loc	19 97 22                # buts.c:97:22
	movsd	%xmm0, -96(%rsp)        # 8-byte Spill
	movsd	112(%r11,%rbx), %xmm0   # xmm0 = mem[0],zero
	.loc	19 98 22                # buts.c:98:22
	movsd	%xmm0, -88(%rsp)        # 8-byte Spill
	movsd	152(%r11,%rbx), %xmm10  # xmm10 = mem[0],zero
	.loc	19 99 22                # buts.c:99:22
	movsd	192(%r11,%rbx), %xmm8   # xmm8 = mem[0],zero
.Ltmp1003:
	.loc	19 102 18               # buts.c:102:18
	movsd	.LCPI14_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movapd	%xmm0, %xmm6
	divsd	48(%rsp), %xmm6
.Ltmp1004:
	#DEBUG_VALUE: buts:tmp1 <- %XMM6
	movsd	88(%rsp), %xmm3         # xmm3 = mem[0],zero
	.loc	19 103 18               # buts.c:103:18
	mulsd	%xmm6, %xmm3
.Ltmp1005:
	#DEBUG_VALUE: buts:tmp <- %XMM3
	.loc	19 104 21               # buts.c:104:21
	movd	%rcx, %xmm1
	movq	%r15, %rcx
	.loc	19 104 40 is_stmt 0     # buts.c:104:40
	movsd	56(%rsp), %xmm9         # xmm9 = mem[0],zero
	.loc	19 104 38               # buts.c:104:38
	movapd	%xmm3, %xmm0
	mulsd	%xmm9, %xmm0
	.loc	19 104 32               # buts.c:104:32
	subsd	%xmm0, %xmm1
	.loc	19 120 32 is_stmt 1     # buts.c:120:32
	movsd	%xmm1, 40(%rsp)         # 8-byte Spill
	movsd	144(%r11,%rbx), %xmm13  # xmm13 = mem[0],zero
	movhpd	184(%r11,%rbx), %xmm13  # xmm13 = xmm13[0],mem[0]
	.loc	19 104 18               # buts.c:104:18
	movsd	%xmm1, 96(%rsp)
	.loc	19 105 21               # buts.c:105:21
	movd	%rdx, %xmm2
	.loc	19 105 40 is_stmt 0     # buts.c:105:40
	movsd	64(%rsp), %xmm11        # xmm11 = mem[0],zero
	.loc	19 105 38               # buts.c:105:38
	movapd	%xmm3, %xmm0
	mulsd	%xmm11, %xmm0
	.loc	19 105 32               # buts.c:105:32
	subsd	%xmm0, %xmm2
	.loc	19 105 18               # buts.c:105:18
	movsd	%xmm2, 104(%rsp)
	.loc	19 106 21 is_stmt 1     # buts.c:106:21
	movd	%rsi, %xmm5
	movd	%rax, %xmm0
	punpcklqdq	%xmm0, %xmm5    # xmm5 = xmm5[0],xmm0[0]
	.loc	19 106 40 is_stmt 0     # buts.c:106:40
	movupd	72(%rsp), %xmm14
	.loc	19 106 38               # buts.c:106:38
	movapd	%xmm3, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm14, %xmm0
	.loc	19 106 32               # buts.c:106:32
	subpd	%xmm0, %xmm5
	.loc	19 106 18               # buts.c:106:18
	movapd	%xmm5, 112(%rsp)
	.loc	19 108 35 is_stmt 1     # buts.c:108:35
	movsd	(%rdi), %xmm0           # xmm0 = mem[0],zero
	.loc	19 108 47 is_stmt 0     # buts.c:108:47
	movsd	%xmm0, 24(%rsp)         # 8-byte Spill
	mulsd	%xmm0, %xmm3
.Ltmp1006:
	movapd	%xmm0, %xmm1
	.loc	19 108 21               # buts.c:108:21
	movsd	8(%rdi), %xmm0          # xmm0 = mem[0],zero
	.loc	19 108 33               # buts.c:108:33
	subsd	%xmm3, %xmm0
	.loc	19 108 19               # buts.c:108:19
	movsd	%xmm0, 32(%rsp)         # 8-byte Spill
	movsd	%xmm0, 8(%rdi)
	movsd	128(%rsp), %xmm3        # xmm3 = mem[0],zero
	.loc	19 110 18 is_stmt 1     # buts.c:110:18
	mulsd	%xmm6, %xmm3
.Ltmp1007:
	#DEBUG_VALUE: buts:tmp <- %XMM3
	.loc	19 111 38               # buts.c:111:38
	movapd	%xmm3, %xmm7
	mulsd	%xmm9, %xmm7
	.loc	19 111 21 is_stmt 0     # buts.c:111:21
	movsd	136(%rsp), %xmm4        # xmm4 = mem[0],zero
	.loc	19 111 32               # buts.c:111:32
	subsd	%xmm7, %xmm4
	.loc	19 111 18               # buts.c:111:18
	movsd	%xmm4, 136(%rsp)
	.loc	19 112 38 is_stmt 1     # buts.c:112:38
	movapd	%xmm3, %xmm7
	mulsd	%xmm11, %xmm7
	.loc	19 112 21 is_stmt 0     # buts.c:112:21
	movsd	144(%rsp), %xmm0        # xmm0 = mem[0],zero
	.loc	19 112 32               # buts.c:112:32
	subsd	%xmm7, %xmm0
	movsd	%xmm0, -112(%rsp)       # 8-byte Spill
	.loc	19 113 38 is_stmt 1     # buts.c:113:38
	movapd	%xmm3, %xmm7
	movlhps	%xmm7, %xmm7            # xmm7 = xmm7[0,0]
	mulpd	%xmm14, %xmm7
	.loc	19 113 32 is_stmt 0     # buts.c:113:32
	subpd	%xmm7, %xmm15
	.loc	19 115 47 is_stmt 1     # buts.c:115:47
	mulsd	%xmm1, %xmm3
.Ltmp1008:
	.loc	19 115 21 is_stmt 0     # buts.c:115:21
	movsd	16(%rdi), %xmm7         # xmm7 = mem[0],zero
	.loc	19 115 33               # buts.c:115:33
	subsd	%xmm3, %xmm7
	movsd	168(%rsp), %xmm0        # xmm0 = mem[0],zero
	.loc	19 117 18 is_stmt 1     # buts.c:117:18
	mulsd	%xmm6, %xmm0
.Ltmp1009:
	#DEBUG_VALUE: buts:tmp <- %XMM0
	.loc	19 118 38               # buts.c:118:38
	movapd	%xmm0, %xmm3
	mulsd	%xmm9, %xmm3
	.loc	19 118 21 is_stmt 0     # buts.c:118:21
	movd	%rbp, %xmm12
	.loc	19 118 32               # buts.c:118:32
	subsd	%xmm3, %xmm12
	.loc	19 119 38 is_stmt 1     # buts.c:119:38
	movapd	%xmm0, %xmm3
	mulsd	%xmm11, %xmm3
	.loc	19 119 32 is_stmt 0     # buts.c:119:32
	movsd	-120(%rsp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	subsd	%xmm3, %xmm1
	.loc	19 120 38 is_stmt 1     # buts.c:120:38
	movsd	%xmm1, -120(%rsp)       # 8-byte Spill
	movapd	%xmm0, %xmm3
	movlhps	%xmm3, %xmm3            # xmm3 = xmm3[0,0]
	mulpd	%xmm14, %xmm3
	.loc	19 120 32 is_stmt 0     # buts.c:120:32
	subpd	%xmm3, %xmm13
	.loc	19 118 18 is_stmt 1     # buts.c:118:18
	movsd	%xmm12, 176(%rsp)
	movsd	24(%rsp), %xmm1         # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	19 122 47               # buts.c:122:47
	mulsd	%xmm1, %xmm0
.Ltmp1010:
	.loc	19 122 21 is_stmt 0     # buts.c:122:21
	movsd	24(%rdi), %xmm3         # xmm3 = mem[0],zero
	.loc	19 122 33               # buts.c:122:33
	subsd	%xmm0, %xmm3
	.loc	19 124 20 is_stmt 1     # buts.c:124:20
	movd	%r14, %xmm0
	.loc	19 124 18 is_stmt 0     # buts.c:124:18
	mulsd	%xmm6, %xmm0
.Ltmp1011:
	#DEBUG_VALUE: buts:tmp <- %XMM0
	.loc	19 125 38 is_stmt 1     # buts.c:125:38
	mulsd	%xmm0, %xmm9
	movsd	-96(%rsp), %xmm6        # 8-byte Reload
                                        # xmm6 = mem[0],zero
.Ltmp1012:
	.loc	19 125 32 is_stmt 0     # buts.c:125:32
	subsd	%xmm9, %xmm6
	.loc	19 126 38 is_stmt 1     # buts.c:126:38
	movsd	%xmm6, -96(%rsp)        # 8-byte Spill
	movapd	%xmm6, %xmm9
	mulsd	%xmm0, %xmm11
	.loc	19 126 32 is_stmt 0     # buts.c:126:32
	movsd	-88(%rsp), %xmm6        # 8-byte Reload
                                        # xmm6 = mem[0],zero
	subsd	%xmm11, %xmm6
	.loc	19 127 38 is_stmt 1     # buts.c:127:38
	movsd	%xmm6, -88(%rsp)        # 8-byte Spill
	movapd	%xmm0, %xmm6
	mulsd	%xmm14, %xmm6
	.loc	19 127 32 is_stmt 0     # buts.c:127:32
	subsd	%xmm6, %xmm10
	.loc	19 128 38 is_stmt 1     # buts.c:128:38
	shufpd	$1, %xmm14, %xmm14      # xmm14 = xmm14[1,0]
	mulsd	%xmm0, %xmm14
	.loc	19 128 32 is_stmt 0     # buts.c:128:32
	subsd	%xmm14, %xmm8
	.loc	19 129 47 is_stmt 1     # buts.c:129:47
	mulsd	%xmm1, %xmm0
.Ltmp1013:
	.loc	19 129 21 is_stmt 0     # buts.c:129:21
	movsd	32(%rdi), %xmm6         # xmm6 = mem[0],zero
	.loc	19 129 33               # buts.c:129:33
	subsd	%xmm0, %xmm6
	.loc	19 102 18 is_stmt 1     # buts.c:102:18
	movsd	.LCPI14_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movapd	%xmm1, %xmm0
	.loc	19 131 18               # buts.c:131:18
	divsd	40(%rsp), %xmm0         # 8-byte Folded Reload
.Ltmp1014:
	#DEBUG_VALUE: buts:tmp1 <- %XMM0
	.loc	19 132 18               # buts.c:132:18
	mulsd	%xmm0, %xmm4
.Ltmp1015:
	#DEBUG_VALUE: buts:tmp <- %XMM4
	.loc	19 133 38               # buts.c:133:38
	mulsd	%xmm4, %xmm2
	movsd	-112(%rsp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	19 133 32 is_stmt 0     # buts.c:133:32
	subsd	%xmm2, %xmm1
	.loc	19 134 38 is_stmt 1     # buts.c:134:38
	movsd	%xmm1, -112(%rsp)       # 8-byte Spill
	movapd	%xmm4, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	mulpd	%xmm5, %xmm2
	.loc	19 133 18               # buts.c:133:18
	movsd	%xmm1, 144(%rsp)
	.loc	19 134 32               # buts.c:134:32
	subpd	%xmm2, %xmm15
	movsd	32(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	19 136 47               # buts.c:136:47
	mulsd	%xmm5, %xmm4
.Ltmp1016:
	.loc	19 136 33 is_stmt 0     # buts.c:136:33
	subsd	%xmm4, %xmm7
	.loc	19 138 18 is_stmt 1     # buts.c:138:18
	mulsd	%xmm0, %xmm12
.Ltmp1017:
	#DEBUG_VALUE: buts:tmp <- %XMM12
	.loc	19 139 40               # buts.c:139:40
	movsd	104(%rsp), %xmm11       # xmm11 = mem[0],zero
	.loc	19 139 38 is_stmt 0     # buts.c:139:38
	movapd	%xmm12, %xmm2
	mulsd	%xmm11, %xmm2
	movsd	-120(%rsp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	19 139 32               # buts.c:139:32
	subsd	%xmm2, %xmm1
	.loc	19 140 38 is_stmt 1     # buts.c:140:38
	movsd	%xmm1, -120(%rsp)       # 8-byte Spill
	movapd	%xmm12, %xmm2
	movlhps	%xmm2, %xmm2            # xmm2 = xmm2[0,0]
	.loc	19 140 40 is_stmt 0     # buts.c:140:40
	movapd	112(%rsp), %xmm14
	.loc	19 140 38               # buts.c:140:38
	mulpd	%xmm14, %xmm2
	.loc	19 140 32               # buts.c:140:32
	subpd	%xmm2, %xmm13
	.loc	19 142 47 is_stmt 1     # buts.c:142:47
	mulsd	%xmm5, %xmm12
.Ltmp1018:
	.loc	19 142 33 is_stmt 0     # buts.c:142:33
	subsd	%xmm12, %xmm3
	.loc	19 144 18 is_stmt 1     # buts.c:144:18
	mulsd	%xmm9, %xmm0
.Ltmp1019:
	#DEBUG_VALUE: buts:tmp <- %XMM0
	.loc	19 145 38               # buts.c:145:38
	movapd	%xmm0, %xmm2
	mulsd	%xmm11, %xmm2
	movsd	-88(%rsp), %xmm12       # 8-byte Reload
                                        # xmm12 = mem[0],zero
	.loc	19 145 32 is_stmt 0     # buts.c:145:32
	subsd	%xmm2, %xmm12
	.loc	19 146 38 is_stmt 1     # buts.c:146:38
	movapd	%xmm0, %xmm2
	mulsd	%xmm14, %xmm2
	.loc	19 146 32 is_stmt 0     # buts.c:146:32
	subsd	%xmm2, %xmm10
	.loc	19 147 38 is_stmt 1     # buts.c:147:38
	movapd	%xmm14, %xmm9
	shufpd	$1, %xmm9, %xmm9        # xmm9 = xmm9[1,0]
	movapd	%xmm0, %xmm2
	mulsd	%xmm9, %xmm2
	.loc	19 147 32 is_stmt 0     # buts.c:147:32
	subsd	%xmm2, %xmm8
	.loc	19 148 35 is_stmt 1     # buts.c:148:35
	movsd	8(%rdi), %xmm4          # xmm4 = mem[0],zero
	.loc	19 148 47 is_stmt 0     # buts.c:148:47
	mulsd	%xmm4, %xmm0
.Ltmp1020:
	.loc	19 148 33               # buts.c:148:33
	subsd	%xmm0, %xmm6
	.loc	19 102 18 is_stmt 1     # buts.c:102:18
	movsd	.LCPI14_0(%rip), %xmm0  # xmm0 = mem[0],zero
	.loc	19 150 18               # buts.c:150:18
	movapd	%xmm0, %xmm2
	divsd	-112(%rsp), %xmm2       # 8-byte Folded Reload
.Ltmp1021:
	#DEBUG_VALUE: buts:tmp1 <- %XMM2
	.loc	19 151 18               # buts.c:151:18
	movapd	%xmm2, %xmm5
	mulsd	%xmm1, %xmm5
.Ltmp1022:
	#DEBUG_VALUE: buts:tmp <- %XMM5
	.loc	19 152 38               # buts.c:152:38
	movapd	%xmm5, %xmm0
	movlhps	%xmm0, %xmm0            # xmm0 = xmm0[0,0]
	mulpd	%xmm15, %xmm0
	.loc	19 152 32 is_stmt 0     # buts.c:152:32
	subpd	%xmm0, %xmm13
	.loc	19 154 47 is_stmt 1     # buts.c:154:47
	mulsd	%xmm7, %xmm5
.Ltmp1023:
	.loc	19 154 33 is_stmt 0     # buts.c:154:33
	subsd	%xmm5, %xmm3
	.loc	19 156 18 is_stmt 1     # buts.c:156:18
	mulsd	%xmm12, %xmm2
.Ltmp1024:
	#DEBUG_VALUE: buts:tmp <- %XMM2
	.loc	19 157 38               # buts.c:157:38
	movapd	%xmm2, %xmm0
	mulsd	%xmm15, %xmm0
	.loc	19 157 32 is_stmt 0     # buts.c:157:32
	subsd	%xmm0, %xmm10
	.loc	19 158 38 is_stmt 1     # buts.c:158:38
	movapd	%xmm15, %xmm0
	shufpd	$1, %xmm0, %xmm0        # xmm0 = xmm0[1,0]
	movapd	%xmm2, %xmm5
	mulsd	%xmm0, %xmm5
	.loc	19 158 32 is_stmt 0     # buts.c:158:32
	subsd	%xmm5, %xmm8
	.loc	19 159 47 is_stmt 1     # buts.c:159:47
	mulsd	%xmm7, %xmm2
.Ltmp1025:
	.loc	19 159 33 is_stmt 0     # buts.c:159:33
	subsd	%xmm2, %xmm6
	.loc	19 102 18 is_stmt 1     # buts.c:102:18
	movsd	.LCPI14_0(%rip), %xmm1  # xmm1 = mem[0],zero
	.loc	19 161 18               # buts.c:161:18
	divsd	%xmm13, %xmm1
.Ltmp1026:
	#DEBUG_VALUE: buts:tmp1 <- %XMM1
	.loc	19 162 18               # buts.c:162:18
	mulsd	%xmm10, %xmm1
.Ltmp1027:
	#DEBUG_VALUE: buts:tmp <- %XMM1
	.loc	19 163 38               # buts.c:163:38
	movapd	%xmm13, %xmm5
	shufpd	$1, %xmm5, %xmm5        # xmm5 = xmm5[1,0]
	movapd	%xmm1, %xmm2
	mulsd	%xmm5, %xmm2
	.loc	19 163 32 is_stmt 0     # buts.c:163:32
	subsd	%xmm2, %xmm8
	.loc	19 164 47 is_stmt 1     # buts.c:164:47
	mulsd	%xmm3, %xmm1
.Ltmp1028:
	.loc	19 164 33 is_stmt 0     # buts.c:164:33
	subsd	%xmm1, %xmm6
	.loc	19 169 33 is_stmt 1     # buts.c:169:33
	divsd	%xmm8, %xmm6
	.loc	19 171 46               # buts.c:171:46
	mulsd	%xmm6, %xmm5
	.loc	19 171 33 is_stmt 0     # buts.c:171:33
	subsd	%xmm5, %xmm3
	.loc	19 172 33 is_stmt 1     # buts.c:172:33
	divsd	%xmm13, %xmm3
	.loc	19 175 22               # buts.c:175:22
	movapd	%xmm3, %xmm1
	mulsd	%xmm15, %xmm1
	.loc	19 175 9 is_stmt 0      # buts.c:175:9
	subsd	%xmm1, %xmm7
	.loc	19 176 22 is_stmt 1     # buts.c:176:22
	mulsd	%xmm6, %xmm0
	.loc	19 176 9 is_stmt 0      # buts.c:176:9
	subsd	%xmm0, %xmm7
	.loc	19 177 33 is_stmt 1     # buts.c:177:33
	divsd	-112(%rsp), %xmm7       # 8-byte Folded Reload
	.loc	19 180 22               # buts.c:180:22
	mulsd	%xmm7, %xmm11
	.loc	19 180 9 is_stmt 0      # buts.c:180:9
	subsd	%xmm11, %xmm4
	.loc	19 181 22 is_stmt 1     # buts.c:181:22
	mulsd	%xmm3, %xmm14
	.loc	19 181 9 is_stmt 0      # buts.c:181:9
	subsd	%xmm14, %xmm4
	.loc	19 169 19 is_stmt 1     # buts.c:169:19
	movsd	%xmm6, 32(%rdi)
	.loc	19 172 19               # buts.c:172:19
	movsd	%xmm3, 24(%rdi)
	.loc	19 177 19               # buts.c:177:19
	movsd	%xmm7, 16(%rdi)
	.loc	19 182 22               # buts.c:182:22
	mulsd	%xmm6, %xmm9
	.loc	19 182 9 is_stmt 0      # buts.c:182:9
	subsd	%xmm9, %xmm4
	.loc	19 183 33 is_stmt 1     # buts.c:183:33
	divsd	96(%rsp), %xmm4
	.loc	19 183 19 is_stmt 0     # buts.c:183:19
	movsd	%xmm4, 8(%rdi)
	.loc	19 185 21 is_stmt 1     # buts.c:185:21
	movsd	(%rdi), %xmm0           # xmm0 = mem[0],zero
	.loc	19 186 22               # buts.c:186:22
	mulsd	56(%rsp), %xmm4
	.loc	19 186 9 is_stmt 0      # buts.c:186:9
	subsd	%xmm4, %xmm0
	.loc	19 187 22 is_stmt 1     # buts.c:187:22
	mulsd	64(%rsp), %xmm7
	.loc	19 187 9 is_stmt 0      # buts.c:187:9
	subsd	%xmm7, %xmm0
	.loc	19 188 22 is_stmt 1     # buts.c:188:22
	mulsd	72(%rsp), %xmm3
	.loc	19 188 9 is_stmt 0      # buts.c:188:9
	subsd	%xmm3, %xmm0
	.loc	19 189 22 is_stmt 1     # buts.c:189:22
	mulsd	80(%rsp), %xmm6
	.loc	19 189 9 is_stmt 0      # buts.c:189:9
	subsd	%xmm6, %xmm0
	.loc	19 190 33 is_stmt 1     # buts.c:190:33
	divsd	48(%rsp), %xmm0
	.loc	19 190 19 is_stmt 0     # buts.c:190:19
	movsd	%xmm0, (%rdi)
	.loc	19 192 23 is_stmt 1     # buts.c:192:23
	leaq	(%rcx,%rcx,4), %rax
	movsd	(%r8,%rax,8), %xmm1     # xmm1 = mem[0],zero
	.loc	19 192 37 is_stmt 0     # buts.c:192:37
	subsd	%xmm0, %xmm1
	.loc	19 192 21               # buts.c:192:21
	movsd	%xmm1, (%r8,%rax,8)
	.loc	19 193 23 is_stmt 1     # buts.c:193:23
	movsd	8(%r8,%rax,8), %xmm0    # xmm0 = mem[0],zero
	.loc	19 193 37 is_stmt 0     # buts.c:193:37
	subsd	8(%rdi), %xmm0
	.loc	19 193 21               # buts.c:193:21
	movsd	%xmm0, 8(%r8,%rax,8)
	.loc	19 194 23 is_stmt 1     # buts.c:194:23
	movsd	16(%r8,%rax,8), %xmm0   # xmm0 = mem[0],zero
	.loc	19 194 37 is_stmt 0     # buts.c:194:37
	subsd	16(%rdi), %xmm0
	.loc	19 194 21               # buts.c:194:21
	movsd	%xmm0, 16(%r8,%rax,8)
	.loc	19 195 23 is_stmt 1     # buts.c:195:23
	movsd	24(%r8,%rax,8), %xmm0   # xmm0 = mem[0],zero
	.loc	19 195 37 is_stmt 0     # buts.c:195:37
	subsd	24(%rdi), %xmm0
	.loc	19 195 21               # buts.c:195:21
	movsd	%xmm0, 24(%r8,%rax,8)
	.loc	19 196 23 is_stmt 1     # buts.c:196:23
	movsd	32(%r8,%rax,8), %xmm0   # xmm0 = mem[0],zero
	.loc	19 196 37 is_stmt 0     # buts.c:196:37
	subsd	32(%rdi), %xmm0
	.loc	19 196 21               # buts.c:196:21
	movsd	%xmm0, 32(%r8,%rax,8)
.Ltmp1029:
	.loc	19 76 5 is_stmt 1 discriminator 1 # buts.c:76:5
	addq	$-40, %r13
	addq	$-200, %r10
	addq	$-200, %r9
	.loc	19 76 26 is_stmt 0 discriminator 1 # buts.c:76:26
	cmpq	-8(%rsp), %rcx          # 8-byte Folded Reload
	jg	.LBB14_10
# BB#13:                                # %for.inc1125.loopexit
                                        #   in Loop: Header=BB14_8 Depth=1
.Ltmp1030:
	.loc	19 95 20 is_stmt 1      # buts.c:95:20
	movq	%r14, 208(%rsp)
.Ltmp1031:
	.loc	19 125 18               # buts.c:125:18
	movsd	-96(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 216(%rsp)
	.loc	19 134 18               # buts.c:134:18
	movupd	%xmm15, 152(%rsp)
	.loc	19 139 18               # buts.c:139:18
	movsd	-120(%rsp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 184(%rsp)
	.loc	19 145 18               # buts.c:145:18
	movsd	%xmm12, 224(%rsp)
	.loc	19 152 18               # buts.c:152:18
	movapd	%xmm13, 192(%rsp)
	.loc	19 157 18               # buts.c:157:18
	movsd	%xmm10, 232(%rsp)
	.loc	19 163 18               # buts.c:163:18
	movsd	%xmm8, 240(%rsp)
	movl	368(%rsp), %edi
	movl	%edi, %r8d
	movl	360(%rsp), %ebp
	movl	%ebp, %r10d
	movq	-64(%rsp), %r11         # 8-byte Reload
	movq	-16(%rsp), %r13         # 8-byte Reload
	movq	-72(%rsp), %rsi         # 8-byte Reload
	movq	-24(%rsp), %r9          # 8-byte Reload
	movq	-80(%rsp), %rdx         # 8-byte Reload
	movq	-32(%rsp), %rbx         # 8-byte Reload
	movq	-40(%rsp), %rcx         # 8-byte Reload
.Ltmp1032:
.LBB14_14:                              # %for.inc1125
                                        #   in Loop: Header=BB14_8 Depth=1
	.loc	19 75 3 discriminator 1 # buts.c:75:3
	addq	%rsi, %r13
	addq	%rdx, %rbx
	addq	%rdx, %r9
	.loc	19 75 24 is_stmt 0 discriminator 1 # buts.c:75:24
	cmpq	%r11, %rcx
	movq	%rcx, %rax
	jg	.LBB14_8
.Ltmp1033:
.LBB14_15:                              # %for.end1127
	.loc	19 199 1 is_stmt 1      # buts.c:199:1
	addq	$248, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1034:
.Lfunc_end14:
	.size	buts, .Lfunc_end14-buts
	.cfi_endproc

	.globl	error
	.p2align	4, 0x90
	.type	error,@function
error:                                  # @error
.Lfunc_begin15:
	.file	20 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/error.c"
	.loc	20 44 0                 # error.c:44:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	20 53 14 prologue_end   # error.c:53:14
	pushq	%rbp
.Ltmp1035:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1036:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1037:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1038:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1039:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1040:
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
.Ltmp1041:
	.cfi_def_cfa_offset 112
.Ltmp1042:
	.cfi_offset %rbx, -56
.Ltmp1043:
	.cfi_offset %r12, -48
.Ltmp1044:
	.cfi_offset %r13, -40
.Ltmp1045:
	.cfi_offset %r14, -32
.Ltmp1046:
	.cfi_offset %r15, -24
.Ltmp1047:
	.cfi_offset %rbp, -16
.Ltmp1048:
	#DEBUG_VALUE: error:m <- 0
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, errnm+16(%rip)
	movapd	%xmm0, errnm(%rip)
	movq	$0, errnm+32(%rip)
.Ltmp1049:
	.loc	20 56 19 discriminator 1 # error.c:56:19
	movl	nz(%rip), %edi
	.loc	20 56 21 is_stmt 0 discriminator 1 # error.c:56:21
	leal	-1(%rdi), %eax
	xorpd	%xmm0, %xmm0
	.loc	20 56 3 discriminator 1 # error.c:56:3
	cmpl	$2, %eax
	jl	.LBB15_11
# BB#1:                                 # %for.body4.lr.ph
	xorpd	%xmm0, %xmm0
.Ltmp1050:
	.loc	20 57 23 is_stmt 1 discriminator 1 # error.c:57:23
	movl	jend(%rip), %eax
	movl	$1, %r15d
	xorl	%esi, %esi
	leaq	16(%rsp), %rcx
	.p2align	4, 0x90
.LBB15_2:                               # %for.body4
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_4 Depth 2
                                        #       Child Loop BB15_6 Depth 3
	.loc	20 57 5 is_stmt 0 discriminator 1 # error.c:57:5
	movslq	jst(%rip), %r12
	cmpl	%eax, %r12d
	jge	.LBB15_10
# BB#3:                                 # %for.body7.lr.ph
                                        #   in Loop: Header=BB15_2 Depth=1
.Ltmp1051:
	.loc	20 58 25 is_stmt 1 discriminator 1 # error.c:58:25
	movl	iend(%rip), %edi
.Ltmp1052:
	.loc	20 57 5 discriminator 1 # error.c:57:5
	imulq	$2600, %r12, %rbp       # imm = 0xA28
	addq	%rsi, %rbp
	movq	%rsi, (%rsp)            # 8-byte Spill
	.p2align	4, 0x90
.LBB15_4:                               # %for.body7
                                        #   Parent Loop BB15_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB15_6 Depth 3
.Ltmp1053:
	.loc	20 58 7 discriminator 1 # error.c:58:7
	movslq	ist(%rip), %rbx
	cmpl	%edi, %ebx
	jge	.LBB15_8
# BB#5:                                 # %for.body10.lr.ph
                                        #   in Loop: Header=BB15_4 Depth=2
	leaq	(%rbx,%rbx,4), %rax
	leaq	(%rbp,%rax,8), %r13
	movq	%rbp, 8(%rsp)           # 8-byte Spill
	movl	$u, %r14d
	.p2align	4, 0x90
.LBB15_6:                               # %for.body10
                                        #   Parent Loop BB15_2 Depth=1
                                        #     Parent Loop BB15_4 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
.Ltmp1054:
	.loc	20 59 9                 # error.c:59:9
	movl	%ebx, %edi
	movl	%r12d, %esi
	movl	%r15d, %edx
	movq	%rcx, %rbp
	callq	exact
	movq	%rbp, %rcx
	#DEBUG_VALUE: error:m <- 0
.Ltmp1055:
	.loc	20 61 19                # error.c:61:19
	movapd	16(%rsp), %xmm0
	.loc	20 61 32 is_stmt 0      # error.c:61:32
	movupd	169000(%r13,%r14), %xmm1
	.loc	20 61 30                # error.c:61:30
	subpd	%xmm1, %xmm0
	.loc	20 62 37 is_stmt 1      # error.c:62:37
	mulpd	%xmm0, %xmm0
	.loc	20 62 31 is_stmt 0      # error.c:62:31
	addpd	errnm(%rip), %xmm0
	.loc	20 62 20                # error.c:62:20
	movapd	%xmm0, errnm(%rip)
	.loc	20 61 19 is_stmt 1      # error.c:61:19
	movapd	32(%rsp), %xmm1
	.loc	20 61 32 is_stmt 0      # error.c:61:32
	movupd	169016(%r13,%r14), %xmm2
	.loc	20 61 30                # error.c:61:30
	subpd	%xmm2, %xmm1
	.loc	20 62 37 is_stmt 1      # error.c:62:37
	mulpd	%xmm1, %xmm1
	.loc	20 62 31 is_stmt 0      # error.c:62:31
	addpd	errnm+16(%rip), %xmm1
	.loc	20 62 20                # error.c:62:20
	movapd	%xmm1, errnm+16(%rip)
	.loc	20 61 19 is_stmt 1      # error.c:61:19
	movsd	48(%rsp), %xmm1         # xmm1 = mem[0],zero
	.loc	20 61 30 is_stmt 0      # error.c:61:30
	subsd	169032(%r13,%r14), %xmm1
	.loc	20 62 37 is_stmt 1      # error.c:62:37
	mulsd	%xmm1, %xmm1
	.loc	20 62 31 is_stmt 0      # error.c:62:31
	addsd	errnm+32(%rip), %xmm1
	.loc	20 62 20                # error.c:62:20
	movsd	%xmm1, errnm+32(%rip)
.Ltmp1056:
	.loc	20 58 7 is_stmt 1 discriminator 1 # error.c:58:7
	incq	%rbx
	.loc	20 58 23 is_stmt 0 discriminator 1 # error.c:58:23
	movslq	iend(%rip), %rdi
	addq	$40, %r14
	cmpq	%rdi, %rbx
	.loc	20 58 7 discriminator 1 # error.c:58:7
	jl	.LBB15_6
.Ltmp1057:
# BB#7:                                 # %for.inc35.loopexit
                                        #   in Loop: Header=BB15_4 Depth=2
	.loc	20 57 23 is_stmt 1 discriminator 1 # error.c:57:23
	movl	jend(%rip), %eax
	movq	8(%rsp), %rbp           # 8-byte Reload
.LBB15_8:                               # %for.inc35
                                        #   in Loop: Header=BB15_4 Depth=2
	.loc	20 57 5 is_stmt 0 discriminator 1 # error.c:57:5
	incq	%r12
	.loc	20 57 21 discriminator 1 # error.c:57:21
	movslq	%eax, %rdx
	.loc	20 57 5 discriminator 1 # error.c:57:5
	addq	$2600, %rbp             # imm = 0xA28
	.loc	20 57 21 discriminator 1 # error.c:57:21
	cmpq	%rdx, %r12
	jl	.LBB15_4
.Ltmp1058:
# BB#9:                                 # %for.inc38.loopexit
                                        #   in Loop: Header=BB15_2 Depth=1
	.loc	20 56 19 is_stmt 1 discriminator 1 # error.c:56:19
	movl	nz(%rip), %edi
	movq	(%rsp), %rsi            # 8-byte Reload
.LBB15_10:                              # %for.inc38
                                        #   in Loop: Header=BB15_2 Depth=1
	.loc	20 56 3 is_stmt 0 discriminator 1 # error.c:56:3
	incq	%r15
	.loc	20 56 21 discriminator 1 # error.c:56:21
	leal	-1(%rdi), %edx
	.loc	20 56 17 discriminator 1 # error.c:56:17
	movslq	%edx, %rdx
	.loc	20 56 3 discriminator 1 # error.c:56:3
	addq	$169000, %rsi           # imm = 0x29428
	.loc	20 56 17 discriminator 1 # error.c:56:17
	cmpq	%rdx, %r15
	jl	.LBB15_2
.Ltmp1059:
.LBB15_11:                              # %for.body43.preheader
	.loc	20 69 37 is_stmt 1      # error.c:69:37
	movl	nx0(%rip), %eax
	.loc	20 69 40 is_stmt 0      # error.c:69:40
	addl	$-2, %eax
	.loc	20 69 45                # error.c:69:45
	movl	ny0(%rip), %ecx
	.loc	20 69 48                # error.c:69:48
	addl	$-2, %ecx
	.loc	20 69 43                # error.c:69:43
	imull	%eax, %ecx
	.loc	20 69 53                # error.c:69:53
	movl	nz0(%rip), %eax
	.loc	20 69 56                # error.c:69:56
	addl	$-2, %eax
	.loc	20 69 51                # error.c:69:51
	imull	%ecx, %eax
	.loc	20 69 34                # error.c:69:34
	cvtsi2sdl	%eax, %xmm1
	.loc	20 69 32                # error.c:69:32
	divsd	%xmm1, %xmm0
	.loc	20 69 16                # error.c:69:16
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	20 69 14                # error.c:69:14
	ucomisd	%xmm1, %xmm1
	jnp	.LBB15_13
# BB#12:                                # %call.sqrt
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB15_13:                              # %for.body43.preheader.split
	movsd	%xmm1, errnm(%rip)
	.loc	20 69 23                # error.c:69:23
	movsd	errnm+8(%rip), %xmm0    # xmm0 = mem[0],zero
	.loc	20 69 37                # error.c:69:37
	movl	nx0(%rip), %eax
	.loc	20 69 40                # error.c:69:40
	addl	$-2, %eax
	.loc	20 69 45                # error.c:69:45
	movl	ny0(%rip), %ecx
	.loc	20 69 48                # error.c:69:48
	addl	$-2, %ecx
	.loc	20 69 43                # error.c:69:43
	imull	%eax, %ecx
	.loc	20 69 53                # error.c:69:53
	movl	nz0(%rip), %eax
	.loc	20 69 56                # error.c:69:56
	addl	$-2, %eax
	.loc	20 69 51                # error.c:69:51
	imull	%ecx, %eax
	.loc	20 69 34                # error.c:69:34
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	20 69 32                # error.c:69:32
	divsd	%xmm1, %xmm0
	.loc	20 69 16                # error.c:69:16
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	20 69 14                # error.c:69:14
	ucomisd	%xmm1, %xmm1
	jnp	.LBB15_15
# BB#14:                                # %call.sqrt22
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB15_15:                              # %for.body43.preheader.split.split
	movsd	%xmm1, errnm+8(%rip)
	.loc	20 69 23                # error.c:69:23
	movsd	errnm+16(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	20 69 37                # error.c:69:37
	movl	nx0(%rip), %eax
	.loc	20 69 40                # error.c:69:40
	addl	$-2, %eax
	.loc	20 69 45                # error.c:69:45
	movl	ny0(%rip), %ecx
	.loc	20 69 48                # error.c:69:48
	addl	$-2, %ecx
	.loc	20 69 43                # error.c:69:43
	imull	%eax, %ecx
	.loc	20 69 53                # error.c:69:53
	movl	nz0(%rip), %eax
	.loc	20 69 56                # error.c:69:56
	addl	$-2, %eax
	.loc	20 69 51                # error.c:69:51
	imull	%ecx, %eax
	.loc	20 69 34                # error.c:69:34
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	20 69 32                # error.c:69:32
	divsd	%xmm1, %xmm0
	.loc	20 69 16                # error.c:69:16
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	20 69 14                # error.c:69:14
	ucomisd	%xmm1, %xmm1
	jnp	.LBB15_17
# BB#16:                                # %call.sqrt23
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB15_17:                              # %for.body43.preheader.split.split.split
	movsd	%xmm1, errnm+16(%rip)
	.loc	20 69 23                # error.c:69:23
	movsd	errnm+24(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	20 69 37                # error.c:69:37
	movl	nx0(%rip), %eax
	.loc	20 69 40                # error.c:69:40
	addl	$-2, %eax
	.loc	20 69 45                # error.c:69:45
	movl	ny0(%rip), %ecx
	.loc	20 69 48                # error.c:69:48
	addl	$-2, %ecx
	.loc	20 69 43                # error.c:69:43
	imull	%eax, %ecx
	.loc	20 69 53                # error.c:69:53
	movl	nz0(%rip), %eax
	.loc	20 69 56                # error.c:69:56
	addl	$-2, %eax
	.loc	20 69 51                # error.c:69:51
	imull	%ecx, %eax
	.loc	20 69 34                # error.c:69:34
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	20 69 32                # error.c:69:32
	divsd	%xmm1, %xmm0
	.loc	20 69 16                # error.c:69:16
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	20 69 14                # error.c:69:14
	ucomisd	%xmm1, %xmm1
	jnp	.LBB15_19
# BB#18:                                # %call.sqrt24
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB15_19:                              # %for.body43.preheader.split.split.split.split
	movsd	%xmm1, errnm+24(%rip)
	.loc	20 69 23                # error.c:69:23
	movsd	errnm+32(%rip), %xmm0   # xmm0 = mem[0],zero
	.loc	20 69 37                # error.c:69:37
	movl	nx0(%rip), %eax
	.loc	20 69 40                # error.c:69:40
	addl	$-2, %eax
	.loc	20 69 45                # error.c:69:45
	movl	ny0(%rip), %ecx
	.loc	20 69 48                # error.c:69:48
	addl	$-2, %ecx
	.loc	20 69 43                # error.c:69:43
	imull	%eax, %ecx
	.loc	20 69 53                # error.c:69:53
	movl	nz0(%rip), %eax
	.loc	20 69 56                # error.c:69:56
	addl	$-2, %eax
	.loc	20 69 51                # error.c:69:51
	imull	%ecx, %eax
	.loc	20 69 34                # error.c:69:34
	xorps	%xmm1, %xmm1
	cvtsi2sdl	%eax, %xmm1
	.loc	20 69 32                # error.c:69:32
	divsd	%xmm1, %xmm0
	.loc	20 69 16                # error.c:69:16
	xorps	%xmm1, %xmm1
	sqrtsd	%xmm0, %xmm1
	.loc	20 69 14                # error.c:69:14
	ucomisd	%xmm1, %xmm1
	jnp	.LBB15_21
# BB#20:                                # %call.sqrt25
	callq	sqrt
	movapd	%xmm0, %xmm1
.LBB15_21:                              # %for.body43.preheader.split.split.split.split.split
	movsd	%xmm1, errnm+32(%rip)
.Ltmp1060:
	.loc	20 80 1 is_stmt 1       # error.c:80:1
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1061:
.Lfunc_end15:
	.size	error, .Lfunc_end15-error
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI16_0:
	.quad	4602678819172646912     # double 0.5
	.quad	4602678819172646912     # double 0.5
.LCPI16_1:
	.quad	4600877379321698714     # double 0.40000000000000002
	.quad	4600877379321698714     # double 0.40000000000000002
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI16_2:
	.quad	4602678819172646912     # double 0.5
.LCPI16_3:
	.quad	4600877379321698714     # double 0.40000000000000002
.LCPI16_4:
	.quad	-4620693217682128896    # double -0.5
.LCPI16_5:
	.quad	4598175219545276416     # double 0.25
	.text
	.globl	pintgr
	.p2align	4, 0x90
	.type	pintgr,@function
pintgr:                                 # @pintgr
.Lfunc_begin16:
	.file	21 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/pintgr.c"
	.loc	21 38 0                 # pintgr.c:38:0
	.cfi_startproc
# BB#0:                                 # %entry
	.loc	21 164 28 prologue_end  # pintgr.c:164:28
	pushq	%rbp
.Ltmp1062:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1063:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1064:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1065:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1066:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1067:
	.cfi_def_cfa_offset 56
	subq	$69816, %rsp            # imm = 0x110B8
.Ltmp1068:
	.cfi_def_cfa_offset 69872
.Ltmp1069:
	.cfi_offset %rbx, -56
.Ltmp1070:
	.cfi_offset %r12, -48
.Ltmp1071:
	.cfi_offset %r13, -40
.Ltmp1072:
	.cfi_offset %r14, -32
.Ltmp1073:
	.cfi_offset %r15, -24
.Ltmp1074:
	.cfi_offset %rbp, -16
	movslq	ii1(%rip), %rax
.Ltmp1075:
	.loc	21 176 28               # pintgr.c:176:28
	movq	%rax, (%rsp)            # 8-byte Spill
	movslq	ii2(%rip), %rax
.Ltmp1076:
	.loc	21 188 24               # pintgr.c:188:24
	movq	%rax, 8(%rsp)           # 8-byte Spill
	movslq	ji1(%rip), %rbx
.Ltmp1077:
	.loc	21 128 28               # pintgr.c:128:28
	movq	%rbx, 72(%rsp)          # 8-byte Spill
	movslq	ji2(%rip), %rbp
.Ltmp1078:
	.loc	21 56 16                # pintgr.c:56:16
	movq	%rbp, 16(%rsp)          # 8-byte Spill
	decq	%rax
.Ltmp1079:
	#DEBUG_VALUE: pintgr:k <- 0
	movq	%rax, 24(%rsp)          # 8-byte Spill
	leaq	34960(%rsp), %rdi
.Ltmp1080:
	#DEBUG_VALUE: pintgr:phi1 <- [%RDI+0]
	.loc	21 64 18                # pintgr.c:64:18
	xorl	%esi, %esi
	movl	$34848, %edx            # imm = 0x8820
	callq	memset
	leaq	112(%rsp), %rdi
.Ltmp1081:
	#DEBUG_VALUE: pintgr:phi2 <- [%RDI+0]
	.loc	21 65 18                # pintgr.c:65:18
	xorl	%esi, %esi
	movl	$34848, %edx            # imm = 0x8820
	callq	memset
.Ltmp1082:
	.loc	21 57 16                # pintgr.c:57:16
	movq	%rbp, %rax
	decq	%rax
.Ltmp1083:
	#DEBUG_VALUE: pintgr:jfin1 <- %EAX
	movq	%rax, 32(%rsp)          # 8-byte Spill
.Ltmp1084:
	#DEBUG_VALUE: pintgr:jfin1 <- [%RSP+32]
	.loc	21 69 3 discriminator 1 # pintgr.c:69:3
	cmpl	%ebp, %ebx
	jge	.LBB16_10
.Ltmp1085:
# BB#1:                                 # %for.cond17.preheader.lr.ph
	#DEBUG_VALUE: pintgr:jfin1 <- [%RSP+32]
	#DEBUG_VALUE: pintgr:phi2 <- [%RDI+0]
	.loc	21 70 5 discriminator 1 # pintgr.c:70:5
	movq	(%rsp), %rax            # 8-byte Reload
	movq	8(%rsp), %rcx           # 8-byte Reload
	cmpl	%ecx, %eax
	jge	.LBB16_10
.Ltmp1086:
# BB#2:                                 # %for.body19.lr.ph.us.preheader
	#DEBUG_VALUE: pintgr:phi2 <- [%RDI+0]
	#DEBUG_VALUE: pintgr:jfin1 <- [%RSP+32]
	.loc	21 73 26                # pintgr.c:73:26
	movslq	ki1(%rip), %rax
	.loc	21 81 26                # pintgr.c:81:26
	movslq	ki2(%rip), %rcx
	.loc	21 79 15                # pintgr.c:79:15
	decq	%rcx
.Ltmp1087:
	#DEBUG_VALUE: pintgr:k <- %RCX
	.loc	21 73 26                # pintgr.c:73:26
	movq	8(%rsp), %rdx           # 8-byte Reload
	leal	-1(%rdx), %edx
	movq	(%rsp), %rbx            # 8-byte Reload
	subl	%ebx, %edx
	incq	%rdx
.Ltmp1088:
	.loc	21 70 5 discriminator 1 # pintgr.c:70:5
	movq	%rdx, 88(%rsp)          # 8-byte Spill
	movq	%rdx, %rsi
	movabsq	$8589934590, %rdx       # imm = 0x1FFFFFFFE
	andq	%rdx, %rsi
	movq	%rsi, 80(%rsp)          # 8-byte Spill
	leaq	(%rbx,%rsi), %rdx
.Ltmp1089:
	.loc	21 73 26                # pintgr.c:73:26
	movq	%rdx, 104(%rsp)         # 8-byte Spill
	leaq	(%rbx,%rbx,4), %rdx
	movq	72(%rsp), %r15          # 8-byte Reload
	imulq	$2600, %r15, %rdi       # imm = 0xA28
.Ltmp1090:
	leaq	(%rdi,%rdx,8), %rsi
	imulq	$169000, %rax, %r9      # imm = 0x29428
	leaq	u+72(%r9), %rdx
	movq	%rdx, 56(%rsp)          # 8-byte Spill
	imulq	$169000, %rcx, %rcx     # imm = 0x29428
.Ltmp1091:
	leaq	u+72(%rcx), %rdx
	movq	%rdx, 48(%rsp)          # 8-byte Spill
	imulq	$528, %r15, %rdx        # imm = 0x210
	leaq	34960(%rsp,%rdx), %r10
	leaq	(%r10,%rbx,8), %rax
	movq	%rax, 40(%rsp)          # 8-byte Spill
	leaq	112(%rsp,%rdx), %r8
	leaq	(%r8,%rbx,8), %rax
	movq	%rax, 96(%rsp)          # 8-byte Spill
	leaq	u(%r9,%rdi), %rax
	movq	%rax, 64(%rsp)          # 8-byte Spill
	leaq	u+32(%rcx,%rdi), %r13
	.loc	21 74 18                # pintgr.c:74:18
	movsd	.LCPI16_2(%rip), %xmm0  # xmm0 = mem[0],zero
	.loc	21 73 22                # pintgr.c:73:22
	movsd	.LCPI16_3(%rip), %xmm1  # xmm1 = mem[0],zero
	.loc	21 74 18                # pintgr.c:74:18
	movapd	.LCPI16_0(%rip), %xmm2  # xmm2 = [5.000000e-01,5.000000e-01]
	.loc	21 73 22                # pintgr.c:73:22
	movapd	.LCPI16_1(%rip), %xmm3  # xmm3 = [4.000000e-01,4.000000e-01]
.Ltmp1092:
	.p2align	4, 0x90
.LBB16_3:                               # %for.body19.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_7 Depth 2
                                        #     Child Loop BB16_5 Depth 2
	.loc	21 70 5 discriminator 1 # pintgr.c:70:5
	cmpq	$1, 88(%rsp)            # 8-byte Folded Reload
	movq	(%rsp), %rcx            # 8-byte Reload
	jbe	.LBB16_4
# BB#6:                                 # %min.iters.checked
                                        #   in Loop: Header=BB16_3 Depth=1
	movq	80(%rsp), %r9           # 8-byte Reload
	testq	%r9, %r9
	movq	(%rsp), %rcx            # 8-byte Reload
	movq	96(%rsp), %rbx          # 8-byte Reload
	movq	40(%rsp), %r12          # 8-byte Reload
	movq	48(%rsp), %r14          # 8-byte Reload
	movq	56(%rsp), %r11          # 8-byte Reload
	je	.LBB16_4
	.p2align	4, 0x90
.LBB16_7:                               # %vector.body
                                        #   Parent Loop BB16_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp1093:
	.loc	21 73 26                # pintgr.c:73:26
	movsd	-40(%rsi,%r11), %xmm4   # xmm4 = mem[0],zero
	.loc	21 77 22                # pintgr.c:77:22
	movsd	-72(%rsi,%r11), %xmm5   # xmm5 = mem[0],zero
	.loc	21 74 23                # pintgr.c:74:23
	movsd	-64(%rsi,%r11), %xmm6   # xmm6 = mem[0],zero
	movhpd	-24(%rsi,%r11), %xmm6   # xmm6 = xmm6[0],mem[0]
	.loc	21 74 37 is_stmt 0      # pintgr.c:74:37
	mulpd	%xmm6, %xmm6
	.loc	21 75 23 is_stmt 1      # pintgr.c:75:23
	movsd	-56(%rsi,%r11), %xmm7   # xmm7 = mem[0],zero
	movhpd	-16(%rsi,%r11), %xmm7   # xmm7 = xmm7[0],mem[0]
	.loc	21 75 37 is_stmt 0      # pintgr.c:75:37
	mulpd	%xmm7, %xmm7
	.loc	21 75 21                # pintgr.c:75:21
	addpd	%xmm6, %xmm7
	.loc	21 76 23 is_stmt 1      # pintgr.c:76:23
	movsd	-48(%rsi,%r11), %xmm6   # xmm6 = mem[0],zero
	movhpd	-8(%rsi,%r11), %xmm6    # xmm6 = xmm6[0],mem[0]
	.loc	21 76 37 is_stmt 0      # pintgr.c:76:37
	mulpd	%xmm6, %xmm6
	.loc	21 76 21                # pintgr.c:76:21
	addpd	%xmm7, %xmm6
	.loc	21 74 18 is_stmt 1      # pintgr.c:74:18
	mulpd	%xmm2, %xmm6
	.loc	21 77 22                # pintgr.c:77:22
	movhpd	-32(%rsi,%r11), %xmm5   # xmm5 = xmm5[0],mem[0]
	.loc	21 77 20 is_stmt 0      # pintgr.c:77:20
	divpd	%xmm5, %xmm6
	.loc	21 73 26 is_stmt 1      # pintgr.c:73:26
	movhpd	(%rsi,%r11), %xmm4      # xmm4 = xmm4[0],mem[0]
	.loc	21 74 11                # pintgr.c:74:11
	subpd	%xmm6, %xmm4
	.loc	21 73 22                # pintgr.c:73:22
	mulpd	%xmm3, %xmm4
	.loc	21 73 18 is_stmt 0      # pintgr.c:73:18
	movupd	%xmm4, (%r12)
	.loc	21 81 26 is_stmt 1      # pintgr.c:81:26
	movsd	-40(%rsi,%r14), %xmm4   # xmm4 = mem[0],zero
	.loc	21 85 22                # pintgr.c:85:22
	movsd	-72(%rsi,%r14), %xmm5   # xmm5 = mem[0],zero
	.loc	21 82 23                # pintgr.c:82:23
	movsd	-64(%rsi,%r14), %xmm6   # xmm6 = mem[0],zero
	movhpd	-24(%rsi,%r14), %xmm6   # xmm6 = xmm6[0],mem[0]
	.loc	21 82 37 is_stmt 0      # pintgr.c:82:37
	mulpd	%xmm6, %xmm6
	.loc	21 83 23 is_stmt 1      # pintgr.c:83:23
	movsd	-56(%rsi,%r14), %xmm7   # xmm7 = mem[0],zero
	movhpd	-16(%rsi,%r14), %xmm7   # xmm7 = xmm7[0],mem[0]
	.loc	21 83 37 is_stmt 0      # pintgr.c:83:37
	mulpd	%xmm7, %xmm7
	.loc	21 83 21                # pintgr.c:83:21
	addpd	%xmm6, %xmm7
	.loc	21 84 23 is_stmt 1      # pintgr.c:84:23
	movsd	-48(%rsi,%r14), %xmm6   # xmm6 = mem[0],zero
	movhpd	-8(%rsi,%r14), %xmm6    # xmm6 = xmm6[0],mem[0]
	.loc	21 84 37 is_stmt 0      # pintgr.c:84:37
	mulpd	%xmm6, %xmm6
	.loc	21 84 21                # pintgr.c:84:21
	addpd	%xmm7, %xmm6
	.loc	21 82 18 is_stmt 1      # pintgr.c:82:18
	mulpd	%xmm2, %xmm6
	.loc	21 85 22                # pintgr.c:85:22
	movhpd	-32(%rsi,%r14), %xmm5   # xmm5 = xmm5[0],mem[0]
	.loc	21 85 20 is_stmt 0      # pintgr.c:85:20
	divpd	%xmm5, %xmm6
	.loc	21 81 26 is_stmt 1      # pintgr.c:81:26
	movhpd	(%rsi,%r14), %xmm4      # xmm4 = xmm4[0],mem[0]
	.loc	21 82 11                # pintgr.c:82:11
	subpd	%xmm6, %xmm4
	.loc	21 81 22                # pintgr.c:81:22
	mulpd	%xmm3, %xmm4
.Ltmp1094:
	.loc	21 70 5 discriminator 1 # pintgr.c:70:5
	addq	$80, %r11
.Ltmp1095:
	.loc	21 81 18                # pintgr.c:81:18
	movupd	%xmm4, (%rbx)
.Ltmp1096:
	.loc	21 70 5 discriminator 1 # pintgr.c:70:5
	addq	$80, %r14
	addq	$16, %r12
	addq	$16, %rbx
	addq	$-2, %r9
	jne	.LBB16_7
# BB#8:                                 # %middle.block
                                        #   in Loop: Header=BB16_3 Depth=1
	movq	80(%rsp), %rax          # 8-byte Reload
	cmpq	%rax, 88(%rsp)          # 8-byte Folded Reload
	movq	104(%rsp), %rcx         # 8-byte Reload
	je	.LBB16_9
.Ltmp1097:
	.p2align	4, 0x90
.LBB16_4:                               # %for.body19.us.preheader
                                        #   in Loop: Header=BB16_3 Depth=1
	.loc	21 42 13                # pintgr.c:42:13
	leaq	(,%rcx,8), %rax
	leaq	(%rax,%rax,4), %rbx
	movq	64(%rsp), %rax          # 8-byte Reload
	leaq	(%rax,%rbx), %rbp
	leaq	(%r10,%rcx,8), %rax
	addq	%r13, %rbx
	leaq	(%r8,%rcx,8), %rdi
	movq	8(%rsp), %rdx           # 8-byte Reload
	subl	%ecx, %edx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB16_5:                               # %for.body19.us
                                        #   Parent Loop BB16_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp1098:
	.loc	21 73 26                # pintgr.c:73:26
	movsd	32(%rbp), %xmm4         # xmm4 = mem[0],zero
	.loc	21 74 23                # pintgr.c:74:23
	movsd	8(%rbp), %xmm5          # xmm5 = mem[0],zero
	.loc	21 75 23                # pintgr.c:75:23
	movsd	16(%rbp), %xmm6         # xmm6 = mem[0],zero
	.loc	21 74 37                # pintgr.c:74:37
	mulsd	%xmm5, %xmm5
	.loc	21 75 37                # pintgr.c:75:37
	mulsd	%xmm6, %xmm6
	.loc	21 75 21 is_stmt 0      # pintgr.c:75:21
	addsd	%xmm5, %xmm6
	.loc	21 76 23 is_stmt 1      # pintgr.c:76:23
	movsd	24(%rbp), %xmm5         # xmm5 = mem[0],zero
	.loc	21 76 37 is_stmt 0      # pintgr.c:76:37
	mulsd	%xmm5, %xmm5
	.loc	21 76 21                # pintgr.c:76:21
	addsd	%xmm6, %xmm5
	.loc	21 74 18 is_stmt 1      # pintgr.c:74:18
	mulsd	%xmm0, %xmm5
	.loc	21 77 20                # pintgr.c:77:20
	divsd	(%rbp), %xmm5
	.loc	21 74 11                # pintgr.c:74:11
	subsd	%xmm5, %xmm4
	.loc	21 73 22                # pintgr.c:73:22
	mulsd	%xmm1, %xmm4
	.loc	21 73 18 is_stmt 0      # pintgr.c:73:18
	movsd	%xmm4, (%rax,%rcx,8)
	.loc	21 81 26 is_stmt 1      # pintgr.c:81:26
	movsd	(%rbx), %xmm4           # xmm4 = mem[0],zero
	.loc	21 82 23                # pintgr.c:82:23
	movsd	-24(%rbx), %xmm5        # xmm5 = mem[0],zero
	.loc	21 83 23                # pintgr.c:83:23
	movsd	-16(%rbx), %xmm6        # xmm6 = mem[0],zero
	.loc	21 82 37                # pintgr.c:82:37
	mulsd	%xmm5, %xmm5
	.loc	21 83 37                # pintgr.c:83:37
	mulsd	%xmm6, %xmm6
	.loc	21 83 21 is_stmt 0      # pintgr.c:83:21
	addsd	%xmm5, %xmm6
	.loc	21 84 23 is_stmt 1      # pintgr.c:84:23
	movsd	-8(%rbx), %xmm5         # xmm5 = mem[0],zero
	.loc	21 84 37 is_stmt 0      # pintgr.c:84:37
	mulsd	%xmm5, %xmm5
	.loc	21 84 21                # pintgr.c:84:21
	addsd	%xmm6, %xmm5
	.loc	21 82 18 is_stmt 1      # pintgr.c:82:18
	mulsd	%xmm0, %xmm5
	.loc	21 85 20                # pintgr.c:85:20
	divsd	-32(%rbx), %xmm5
	.loc	21 82 11                # pintgr.c:82:11
	subsd	%xmm5, %xmm4
	.loc	21 81 22                # pintgr.c:81:22
	mulsd	%xmm1, %xmm4
	.loc	21 81 18 is_stmt 0      # pintgr.c:81:18
	movsd	%xmm4, (%rdi,%rcx,8)
.Ltmp1099:
	.loc	21 70 5 is_stmt 1 discriminator 1 # pintgr.c:70:5
	addq	$40, %rbp
	incq	%rcx
	addq	$40, %rbx
	cmpl	%ecx, %edx
	jne	.LBB16_5
.Ltmp1100:
.LBB16_9:                               # %for.cond17.for.inc159_crit_edge.us
                                        #   in Loop: Header=BB16_3 Depth=1
	.loc	21 69 3 discriminator 1 # pintgr.c:69:3
	incq	%r15
	addq	$2600, 56(%rsp)         # 8-byte Folded Spill
                                        # imm = 0xA28
	addq	$2600, 48(%rsp)         # 8-byte Folded Spill
                                        # imm = 0xA28
	addq	$528, 40(%rsp)          # 8-byte Folded Spill
                                        # imm = 0x210
	addq	$528, 96(%rsp)          # 8-byte Folded Spill
                                        # imm = 0x210
	addq	$2600, 64(%rsp)         # 8-byte Folded Spill
                                        # imm = 0xA28
	addq	$528, %r10              # imm = 0x210
	addq	$2600, %r13             # imm = 0xA28
	addq	$528, %r8               # imm = 0x210
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpl	%eax, %r15d
	jne	.LBB16_3
.Ltmp1101:
.LBB16_10:                              # %for.cond162.preheader
	#DEBUG_VALUE: pintgr:ifin1 <- [%RSP+24]
	xorpd	%xmm7, %xmm7
	movq	72(%rsp), %r13          # 8-byte Reload
	movq	32(%rsp), %r8           # 8-byte Reload
.Ltmp1102:
	.loc	21 90 3 discriminator 1 # pintgr.c:90:3
	cmpl	%r8d, %r13d
	jge	.LBB16_16
.Ltmp1103:
# BB#11:                                # %for.cond162.preheader
	#DEBUG_VALUE: pintgr:ifin1 <- [%RSP+24]
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	(%rsp), %rcx            # 8-byte Reload
	cmpl	%eax, %ecx
	jge	.LBB16_16
.Ltmp1104:
# BB#12:                                # %for.body167.lr.ph.us.preheader
	#DEBUG_VALUE: pintgr:ifin1 <- [%RSP+24]
	.loc	21 92 24                # pintgr.c:92:24
	imulq	$528, %r13, %rax        # imm = 0x210
	leaq	34960(%rsp,%rax), %rcx
	movq	(%rsp), %rdx            # 8-byte Reload
	movsd	(%rcx,%rdx,8), %xmm0    # xmm0 = mem[0],zero
	.loc	21 96 24                # pintgr.c:96:24
	leaq	112(%rsp,%rax), %rax
	movsd	(%rax,%rdx,8), %xmm1    # xmm1 = mem[0],zero
	.loc	21 92 24                # pintgr.c:92:24
	movq	8(%rsp), %rsi           # 8-byte Reload
	leal	-1(%rsi), %ebx
	subl	%edx, %ebx
	leaq	8(%rcx,%rdx,8), %rbp
	leaq	8(%rax,%rdx,8), %rdx
	xorpd	%xmm7, %xmm7
	movq	%r13, %rsi
.Ltmp1105:
	.p2align	4, 0x90
.LBB16_13:                              # %for.body167.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_14 Depth 2
	movapd	%xmm0, %xmm3
	.loc	21 96 24                # pintgr.c:96:24
	movapd	%xmm1, %xmm2
.Ltmp1106:
	.loc	21 90 3 discriminator 1 # pintgr.c:90:3
	incq	%rsi
.Ltmp1107:
	.loc	21 94 24                # pintgr.c:94:24
	imulq	$528, %rsi, %rax        # imm = 0x210
	leaq	34960(%rsp,%rax), %rcx
	movq	(%rsp), %rdi            # 8-byte Reload
	movsd	(%rcx,%rdi,8), %xmm0    # xmm0 = mem[0],zero
	.loc	21 98 24                # pintgr.c:98:24
	leaq	112(%rsp,%rax), %rax
	movsd	(%rax,%rdi,8), %xmm1    # xmm1 = mem[0],zero
	movq	%rdx, %rdi
	movq	%rbp, %rcx
	movl	%ebx, %eax
	movapd	%xmm1, %xmm4
	.loc	21 94 24                # pintgr.c:94:24
	movapd	%xmm0, %xmm5
	.p2align	4, 0x90
.LBB16_14:                              # %for.body167.us
                                        #   Parent Loop BB16_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	21 93 24                # pintgr.c:93:24
	movsd	(%rcx), %xmm6           # xmm6 = mem[0],zero
	.loc	21 93 22 is_stmt 0      # pintgr.c:93:22
	addsd	%xmm6, %xmm3
	.loc	21 94 22 is_stmt 1      # pintgr.c:94:22
	addsd	%xmm5, %xmm3
	.loc	21 95 24                # pintgr.c:95:24
	movsd	528(%rcx), %xmm5        # xmm5 = mem[0],zero
	.loc	21 95 22 is_stmt 0      # pintgr.c:95:22
	addsd	%xmm5, %xmm3
	.loc	21 96 22 is_stmt 1      # pintgr.c:96:22
	addsd	%xmm2, %xmm3
	.loc	21 97 24                # pintgr.c:97:24
	movsd	(%rdi), %xmm2           # xmm2 = mem[0],zero
	.loc	21 97 22 is_stmt 0      # pintgr.c:97:22
	addsd	%xmm2, %xmm3
	.loc	21 98 22 is_stmt 1      # pintgr.c:98:22
	addsd	%xmm4, %xmm3
	.loc	21 99 24                # pintgr.c:99:24
	movsd	528(%rdi), %xmm4        # xmm4 = mem[0],zero
	.loc	21 99 22 is_stmt 0      # pintgr.c:99:22
	addsd	%xmm4, %xmm3
	.loc	21 92 19 is_stmt 1      # pintgr.c:92:19
	addsd	%xmm3, %xmm7
.Ltmp1108:
	#DEBUG_VALUE: pintgr:frc1 <- %XMM7
	.loc	21 91 5 discriminator 1 # pintgr.c:91:5
	addq	$8, %rcx
	addq	$8, %rdi
	decl	%eax
.Ltmp1109:
	.loc	21 92 24                # pintgr.c:92:24
	movapd	%xmm6, %xmm3
.Ltmp1110:
	.loc	21 91 5 discriminator 1 # pintgr.c:91:5
	jne	.LBB16_14
.Ltmp1111:
# BB#15:                                # %for.cond165.for.inc219_crit_edge.us
                                        #   in Loop: Header=BB16_13 Depth=1
	#DEBUG_VALUE: pintgr:frc1 <- %XMM7
	.loc	21 90 3 discriminator 1 # pintgr.c:90:3
	addq	$528, %rbp              # imm = 0x210
	addq	$528, %rdx              # imm = 0x210
	cmpl	%r8d, %esi
	jne	.LBB16_13
.Ltmp1112:
.LBB16_16:                              # %if.then
	movsd	%xmm7, 64(%rsp)         # 8-byte Spill
	.loc	21 150 10               # pintgr.c:150:10
	movsd	dxi(%rip), %xmm0        # xmm0 = mem[0],zero
	.loc	21 198 10               # pintgr.c:198:10
	movsd	%xmm0, 48(%rsp)         # 8-byte Spill
	movsd	deta(%rip), %xmm0       # xmm0 = mem[0],zero
.Ltmp1113:
	#DEBUG_VALUE: pintgr:k <- 0
	.loc	21 109 18               # pintgr.c:109:18
	movsd	%xmm0, 56(%rsp)         # 8-byte Spill
	leaq	34960(%rsp), %rdi
	xorl	%esi, %esi
	movl	$34848, %edx            # imm = 0x8820
	callq	memset
	leaq	112(%rsp), %rdi
	.loc	21 110 18               # pintgr.c:110:18
	xorl	%esi, %esi
	movl	$34848, %edx            # imm = 0x8820
	callq	memset
.Ltmp1114:
	.loc	21 116 28               # pintgr.c:116:28
	movslq	ki1(%rip), %r14
	movslq	ki2(%rip), %r9
.Ltmp1115:
	.loc	21 114 5 discriminator 1 # pintgr.c:114:5
	cmpl	%r9d, %r14d
	jge	.LBB16_26
# BB#17:                                # %for.cond248.preheader.lr.ph
.Ltmp1116:
	.loc	21 115 7 discriminator 1 # pintgr.c:115:7
	movq	(%rsp), %rax            # 8-byte Reload
	movq	8(%rsp), %rcx           # 8-byte Reload
	cmpl	%ecx, %eax
	jge	.LBB16_26
# BB#18:                                # %for.body250.lr.ph.us.preheader
.Ltmp1117:
	.loc	21 116 28               # pintgr.c:116:28
	movq	8(%rsp), %rax           # 8-byte Reload
	leal	-1(%rax), %r11d
	movq	(%rsp), %rbp            # 8-byte Reload
	subl	%ebp, %r11d
	incq	%r11
.Ltmp1118:
	.loc	21 115 7 discriminator 1 # pintgr.c:115:7
	movq	%r11, %r10
	movabsq	$8589934590, %rax       # imm = 0x1FFFFFFFE
	andq	%rax, %r10
	leaq	(%rbp,%r10), %r8
.Ltmp1119:
	.loc	21 116 28               # pintgr.c:116:28
	leaq	(%rbp,%rbp,4), %rax
	imulq	$2600, %r13, %rcx       # imm = 0xA28
	imulq	$169000, %r14, %rdx     # imm = 0x29428
	leaq	(%rdx,%rcx), %rsi
	leaq	u+72(%rsi,%rax,8), %r15
	leaq	u(%rdx,%rcx), %rbx
	imulq	$528, %r14, %rax        # imm = 0x210
	leaq	34960(%rsp,%rax), %rdi
	leaq	(%rdi,%rbp,8), %rdx
	movsd	.LCPI16_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI16_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movapd	.LCPI16_0(%rip), %xmm2  # xmm2 = [5.000000e-01,5.000000e-01]
	movapd	.LCPI16_1(%rip), %xmm3  # xmm3 = [4.000000e-01,4.000000e-01]
.Ltmp1120:
	.p2align	4, 0x90
.LBB16_19:                              # %for.body250.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_23 Depth 2
                                        #     Child Loop BB16_21 Depth 2
	.loc	21 115 7 discriminator 1 # pintgr.c:115:7
	cmpq	$1, %r11
	movq	(%rsp), %rax            # 8-byte Reload
	jbe	.LBB16_20
# BB#22:                                # %min.iters.checked1194
                                        #   in Loop: Header=BB16_19 Depth=1
	testq	%r10, %r10
	movq	(%rsp), %rax            # 8-byte Reload
	movq	%r10, %rsi
	movq	%rdx, %rcx
	movq	%r15, %rbp
	je	.LBB16_20
	.p2align	4, 0x90
.LBB16_23:                              # %vector.body1190
                                        #   Parent Loop BB16_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp1121:
	.loc	21 116 28               # pintgr.c:116:28
	movsd	-40(%rbp), %xmm4        # xmm4 = mem[0],zero
	movhpd	(%rbp), %xmm4           # xmm4 = xmm4[0],mem[0]
	.loc	21 120 24               # pintgr.c:120:24
	movsd	-72(%rbp), %xmm5        # xmm5 = mem[0],zero
	.loc	21 117 25               # pintgr.c:117:25
	movsd	-64(%rbp), %xmm6        # xmm6 = mem[0],zero
	movhpd	-24(%rbp), %xmm6        # xmm6 = xmm6[0],mem[0]
	.loc	21 117 42 is_stmt 0     # pintgr.c:117:42
	mulpd	%xmm6, %xmm6
	.loc	21 118 25 is_stmt 1     # pintgr.c:118:25
	movsd	-56(%rbp), %xmm7        # xmm7 = mem[0],zero
	movhpd	-16(%rbp), %xmm7        # xmm7 = xmm7[0],mem[0]
	.loc	21 118 42 is_stmt 0     # pintgr.c:118:42
	mulpd	%xmm7, %xmm7
	.loc	21 118 23               # pintgr.c:118:23
	addpd	%xmm6, %xmm7
	.loc	21 119 25 is_stmt 1     # pintgr.c:119:25
	movsd	-48(%rbp), %xmm6        # xmm6 = mem[0],zero
	movhpd	-8(%rbp), %xmm6         # xmm6 = xmm6[0],mem[0]
	.loc	21 119 42 is_stmt 0     # pintgr.c:119:42
	mulpd	%xmm6, %xmm6
	.loc	21 119 23               # pintgr.c:119:23
	addpd	%xmm7, %xmm6
	.loc	21 117 20 is_stmt 1     # pintgr.c:117:20
	mulpd	%xmm2, %xmm6
	.loc	21 120 24               # pintgr.c:120:24
	movhpd	-32(%rbp), %xmm5        # xmm5 = xmm5[0],mem[0]
	.loc	21 120 22 is_stmt 0     # pintgr.c:120:22
	divpd	%xmm5, %xmm6
	.loc	21 117 13 is_stmt 1     # pintgr.c:117:13
	subpd	%xmm6, %xmm4
	.loc	21 116 24               # pintgr.c:116:24
	mulpd	%xmm3, %xmm4
	.loc	21 116 20 is_stmt 0     # pintgr.c:116:20
	movupd	%xmm4, (%rcx)
.Ltmp1122:
	.loc	21 115 7 is_stmt 1 discriminator 1 # pintgr.c:115:7
	addq	$80, %rbp
	addq	$16, %rcx
	addq	$-2, %rsi
	jne	.LBB16_23
# BB#24:                                # %middle.block1191
                                        #   in Loop: Header=BB16_19 Depth=1
	cmpq	%r10, %r11
	movq	%r8, %rax
	je	.LBB16_25
	.p2align	4, 0x90
.LBB16_20:                              # %for.body250.us.preheader
                                        #   in Loop: Header=BB16_19 Depth=1
.Ltmp1123:
	.loc	21 116 28               # pintgr.c:116:28
	leaq	(%rax,%rax,4), %rcx
	leaq	(%rbx,%rcx,8), %rcx
	leaq	(%rdi,%rax,8), %rsi
	movq	8(%rsp), %rbp           # 8-byte Reload
	subl	%eax, %ebp
	.p2align	4, 0x90
.LBB16_21:                              # %for.body250.us
                                        #   Parent Loop BB16_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	21 117 25               # pintgr.c:117:25
	movsd	8(%rcx), %xmm4          # xmm4 = mem[0],zero
	.loc	21 118 25               # pintgr.c:118:25
	movsd	16(%rcx), %xmm5         # xmm5 = mem[0],zero
	.loc	21 117 42               # pintgr.c:117:42
	mulsd	%xmm4, %xmm4
	.loc	21 118 42               # pintgr.c:118:42
	mulsd	%xmm5, %xmm5
	.loc	21 118 23 is_stmt 0     # pintgr.c:118:23
	addsd	%xmm4, %xmm5
	.loc	21 119 25 is_stmt 1     # pintgr.c:119:25
	movsd	24(%rcx), %xmm4         # xmm4 = mem[0],zero
	.loc	21 119 42 is_stmt 0     # pintgr.c:119:42
	mulsd	%xmm4, %xmm4
	.loc	21 119 23               # pintgr.c:119:23
	addsd	%xmm5, %xmm4
	.loc	21 117 20 is_stmt 1     # pintgr.c:117:20
	mulsd	%xmm0, %xmm4
	.loc	21 120 22               # pintgr.c:120:22
	divsd	(%rcx), %xmm4
	.loc	21 117 13               # pintgr.c:117:13
	addsd	32(%rcx), %xmm4
	.loc	21 116 24               # pintgr.c:116:24
	mulsd	%xmm1, %xmm4
	.loc	21 116 20 is_stmt 0     # pintgr.c:116:20
	movsd	%xmm4, (%rsi)
.Ltmp1124:
	.loc	21 115 7 is_stmt 1 discriminator 1 # pintgr.c:115:7
	addq	$40, %rcx
	addq	$8, %rsi
	decl	%ebp
	jne	.LBB16_21
.Ltmp1125:
.LBB16_25:                              # %for.cond248.for.inc323_crit_edge.us
                                        #   in Loop: Header=BB16_19 Depth=1
	.loc	21 114 5 discriminator 1 # pintgr.c:114:5
	incq	%r14
	addq	$169000, %r15           # imm = 0x29428
	addq	$528, %rdx              # imm = 0x210
	addq	$169000, %rbx           # imm = 0x29428
	addq	$528, %rdi              # imm = 0x210
	.loc	21 114 21 is_stmt 0 discriminator 1 # pintgr.c:114:21
	cmpq	%r9, %r14
	jl	.LBB16_19
.Ltmp1126:
.LBB16_26:                              # %if.then327
	.loc	21 188 24 is_stmt 1     # pintgr.c:188:24
	movslq	ki1(%rip), %r14
.Ltmp1127:
	.loc	21 176 28               # pintgr.c:176:28
	movslq	ki2(%rip), %r12
.Ltmp1128:
	.loc	21 126 5 discriminator 1 # pintgr.c:126:5
	cmpl	%r12d, %r14d
	jge	.LBB16_36
# BB#27:                                # %for.cond331.preheader.lr.ph
.Ltmp1129:
	.loc	21 127 7 discriminator 1 # pintgr.c:127:7
	movq	(%rsp), %rax            # 8-byte Reload
	movq	8(%rsp), %rcx           # 8-byte Reload
	cmpl	%ecx, %eax
	jge	.LBB16_36
# BB#28:                                # %for.body333.lr.ph.us.preheader
.Ltmp1130:
	.loc	21 128 28               # pintgr.c:128:28
	movq	8(%rsp), %rax           # 8-byte Reload
	leal	-1(%rax), %r9d
	movq	(%rsp), %rbp            # 8-byte Reload
	subl	%ebp, %r9d
	incq	%r9
	movabsq	$8589934590, %r15       # imm = 0x1FFFFFFFE
.Ltmp1131:
	.loc	21 127 7 discriminator 1 # pintgr.c:127:7
	andq	%r9, %r15
	leaq	(%rbp,%r15), %r8
.Ltmp1132:
	.loc	21 128 28               # pintgr.c:128:28
	leaq	(%rbp,%rbp,4), %rax
	imulq	$2600, 32(%rsp), %rcx   # 8-byte Folded Reload
                                        # imm = 0xA28
	imulq	$169000, %r14, %rdx     # imm = 0x29428
	leaq	(%rdx,%rcx), %rsi
	leaq	u+72(%rsi,%rax,8), %r10
	leaq	u(%rdx,%rcx), %rsi
	imulq	$528, %r14, %rax        # imm = 0x210
	leaq	112(%rsp,%rax), %rdi
	leaq	(%rdi,%rbp,8), %r11
	movsd	.LCPI16_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI16_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movapd	.LCPI16_0(%rip), %xmm2  # xmm2 = [5.000000e-01,5.000000e-01]
	movapd	.LCPI16_1(%rip), %xmm3  # xmm3 = [4.000000e-01,4.000000e-01]
	movq	%r14, %rbx
.Ltmp1133:
	.p2align	4, 0x90
.LBB16_29:                              # %for.body333.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_33 Depth 2
                                        #     Child Loop BB16_31 Depth 2
	.loc	21 127 7 discriminator 1 # pintgr.c:127:7
	cmpq	$1, %r9
	movq	(%rsp), %rax            # 8-byte Reload
	jbe	.LBB16_30
# BB#32:                                # %min.iters.checked1214
                                        #   in Loop: Header=BB16_29 Depth=1
	testq	%r15, %r15
	movq	(%rsp), %rax            # 8-byte Reload
	movq	%r15, %rcx
	movq	%r11, %rbp
	movq	%r10, %rdx
	je	.LBB16_30
	.p2align	4, 0x90
.LBB16_33:                              # %vector.body1210
                                        #   Parent Loop BB16_29 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp1134:
	.loc	21 128 28               # pintgr.c:128:28
	movsd	-40(%rdx), %xmm4        # xmm4 = mem[0],zero
	movhpd	(%rdx), %xmm4           # xmm4 = xmm4[0],mem[0]
	.loc	21 132 24               # pintgr.c:132:24
	movsd	-72(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	21 129 25               # pintgr.c:129:25
	movsd	-64(%rdx), %xmm6        # xmm6 = mem[0],zero
	movhpd	-24(%rdx), %xmm6        # xmm6 = xmm6[0],mem[0]
	.loc	21 129 44 is_stmt 0     # pintgr.c:129:44
	mulpd	%xmm6, %xmm6
	.loc	21 130 25 is_stmt 1     # pintgr.c:130:25
	movsd	-56(%rdx), %xmm7        # xmm7 = mem[0],zero
	movhpd	-16(%rdx), %xmm7        # xmm7 = xmm7[0],mem[0]
	.loc	21 130 44 is_stmt 0     # pintgr.c:130:44
	mulpd	%xmm7, %xmm7
	.loc	21 130 23               # pintgr.c:130:23
	addpd	%xmm6, %xmm7
	.loc	21 131 25 is_stmt 1     # pintgr.c:131:25
	movsd	-48(%rdx), %xmm6        # xmm6 = mem[0],zero
	movhpd	-8(%rdx), %xmm6         # xmm6 = xmm6[0],mem[0]
	.loc	21 131 44 is_stmt 0     # pintgr.c:131:44
	mulpd	%xmm6, %xmm6
	.loc	21 131 23               # pintgr.c:131:23
	addpd	%xmm7, %xmm6
	.loc	21 129 20 is_stmt 1     # pintgr.c:129:20
	mulpd	%xmm2, %xmm6
	.loc	21 132 24               # pintgr.c:132:24
	movhpd	-32(%rdx), %xmm5        # xmm5 = xmm5[0],mem[0]
	.loc	21 132 22 is_stmt 0     # pintgr.c:132:22
	divpd	%xmm5, %xmm6
	.loc	21 129 13 is_stmt 1     # pintgr.c:129:13
	subpd	%xmm6, %xmm4
	.loc	21 128 24               # pintgr.c:128:24
	mulpd	%xmm3, %xmm4
	.loc	21 128 20 is_stmt 0     # pintgr.c:128:20
	movupd	%xmm4, (%rbp)
.Ltmp1135:
	.loc	21 127 7 is_stmt 1 discriminator 1 # pintgr.c:127:7
	addq	$80, %rdx
	addq	$16, %rbp
	addq	$-2, %rcx
	jne	.LBB16_33
# BB#34:                                # %middle.block1211
                                        #   in Loop: Header=BB16_29 Depth=1
	cmpq	%r15, %r9
	movq	%r8, %rax
	je	.LBB16_35
	.p2align	4, 0x90
.LBB16_30:                              # %for.body333.us.preheader
                                        #   in Loop: Header=BB16_29 Depth=1
.Ltmp1136:
	.loc	21 128 28               # pintgr.c:128:28
	leaq	(%rax,%rax,4), %rcx
	leaq	(%rsi,%rcx,8), %rcx
	leaq	(%rdi,%rax,8), %rdx
	movq	8(%rsp), %rbp           # 8-byte Reload
	subl	%eax, %ebp
	.p2align	4, 0x90
.LBB16_31:                              # %for.body333.us
                                        #   Parent Loop BB16_29 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	21 129 25               # pintgr.c:129:25
	movsd	8(%rcx), %xmm4          # xmm4 = mem[0],zero
	.loc	21 130 25               # pintgr.c:130:25
	movsd	16(%rcx), %xmm5         # xmm5 = mem[0],zero
	.loc	21 129 44               # pintgr.c:129:44
	mulsd	%xmm4, %xmm4
	.loc	21 130 44               # pintgr.c:130:44
	mulsd	%xmm5, %xmm5
	.loc	21 130 23 is_stmt 0     # pintgr.c:130:23
	addsd	%xmm4, %xmm5
	.loc	21 131 25 is_stmt 1     # pintgr.c:131:25
	movsd	24(%rcx), %xmm4         # xmm4 = mem[0],zero
	.loc	21 131 44 is_stmt 0     # pintgr.c:131:44
	mulsd	%xmm4, %xmm4
	.loc	21 131 23               # pintgr.c:131:23
	addsd	%xmm5, %xmm4
	.loc	21 129 20 is_stmt 1     # pintgr.c:129:20
	mulsd	%xmm0, %xmm4
	.loc	21 132 22               # pintgr.c:132:22
	divsd	(%rcx), %xmm4
	.loc	21 129 13               # pintgr.c:129:13
	addsd	32(%rcx), %xmm4
	.loc	21 128 24               # pintgr.c:128:24
	mulsd	%xmm1, %xmm4
	.loc	21 128 20 is_stmt 0     # pintgr.c:128:20
	movsd	%xmm4, (%rdx)
.Ltmp1137:
	.loc	21 127 7 is_stmt 1 discriminator 1 # pintgr.c:127:7
	addq	$40, %rcx
	addq	$8, %rdx
	decl	%ebp
	jne	.LBB16_31
.Ltmp1138:
.LBB16_35:                              # %for.cond331.for.inc414_crit_edge.us
                                        #   in Loop: Header=BB16_29 Depth=1
	.loc	21 126 5 discriminator 1 # pintgr.c:126:5
	incq	%rbx
	addq	$169000, %r10           # imm = 0x29428
	addq	$528, %r11              # imm = 0x210
	addq	$169000, %rsi           # imm = 0x29428
	addq	$528, %rdi              # imm = 0x210
	.loc	21 126 21 is_stmt 0 discriminator 1 # pintgr.c:126:21
	cmpq	%r12, %rbx
	jl	.LBB16_29
.Ltmp1139:
.LBB16_36:                              # %if.end417
	#DEBUG_VALUE: pintgr:frc2 <- 0.000000e+00
	.loc	21 138 24 is_stmt 1 discriminator 1 # pintgr.c:138:24
	leal	-1(%r12), %eax
	xorpd	%xmm7, %xmm7
	.loc	21 138 3 is_stmt 0 discriminator 1 # pintgr.c:138:3
	cmpl	%eax, %r14d
	jge	.LBB16_42
# BB#37:                                # %if.end417
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	(%rsp), %rcx            # 8-byte Reload
	cmpl	%eax, %ecx
	jge	.LBB16_42
# BB#38:                                # %for.body424.lr.ph.us.preheader
	.loc	21 138 24 discriminator 1 # pintgr.c:138:24
	leaq	-1(%r12), %r8
.Ltmp1140:
	.loc	21 140 24 is_stmt 1     # pintgr.c:140:24
	imulq	$528, %r14, %rax        # imm = 0x210
	leaq	34960(%rsp,%rax), %rcx
	movq	(%rsp), %rsi            # 8-byte Reload
	movsd	(%rcx,%rsi,8), %xmm0    # xmm0 = mem[0],zero
	.loc	21 144 24               # pintgr.c:144:24
	leaq	112(%rsp,%rax), %rdx
	movsd	(%rdx,%rsi,8), %xmm1    # xmm1 = mem[0],zero
	.loc	21 140 24               # pintgr.c:140:24
	movq	8(%rsp), %rax           # 8-byte Reload
	leal	-1(%rax), %eax
	subl	%esi, %eax
	leaq	8(%rcx,%rsi,8), %rbx
	leaq	8(%rdx,%rsi,8), %rbp
	xorpd	%xmm7, %xmm7
	movq	%r14, %rdi
	.p2align	4, 0x90
.LBB16_39:                              # %for.body424.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_40 Depth 2
	movapd	%xmm0, %xmm3
	.loc	21 144 24               # pintgr.c:144:24
	movapd	%xmm1, %xmm2
.Ltmp1141:
	.loc	21 138 3 discriminator 1 # pintgr.c:138:3
	incq	%rdi
.Ltmp1142:
	.loc	21 142 24               # pintgr.c:142:24
	imulq	$528, %rdi, %rcx        # imm = 0x210
	leaq	34960(%rsp,%rcx), %rdx
	movq	(%rsp), %rsi            # 8-byte Reload
	movsd	(%rdx,%rsi,8), %xmm0    # xmm0 = mem[0],zero
	.loc	21 146 24               # pintgr.c:146:24
	leaq	112(%rsp,%rcx), %rcx
	movsd	(%rcx,%rsi,8), %xmm1    # xmm1 = mem[0],zero
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movapd	%xmm1, %xmm4
	.loc	21 142 24               # pintgr.c:142:24
	movapd	%xmm0, %xmm5
	.p2align	4, 0x90
.LBB16_40:                              # %for.body424.us
                                        #   Parent Loop BB16_39 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	21 141 24               # pintgr.c:141:24
	movsd	(%rdx), %xmm6           # xmm6 = mem[0],zero
	.loc	21 141 22 is_stmt 0     # pintgr.c:141:22
	addsd	%xmm6, %xmm3
	.loc	21 142 22 is_stmt 1     # pintgr.c:142:22
	addsd	%xmm5, %xmm3
	.loc	21 143 24               # pintgr.c:143:24
	movsd	528(%rdx), %xmm5        # xmm5 = mem[0],zero
	.loc	21 143 22 is_stmt 0     # pintgr.c:143:22
	addsd	%xmm5, %xmm3
	.loc	21 144 22 is_stmt 1     # pintgr.c:144:22
	addsd	%xmm2, %xmm3
	.loc	21 145 24               # pintgr.c:145:24
	movsd	(%rsi), %xmm2           # xmm2 = mem[0],zero
	.loc	21 145 22 is_stmt 0     # pintgr.c:145:22
	addsd	%xmm2, %xmm3
	.loc	21 146 22 is_stmt 1     # pintgr.c:146:22
	addsd	%xmm4, %xmm3
	.loc	21 147 24               # pintgr.c:147:24
	movsd	528(%rsi), %xmm4        # xmm4 = mem[0],zero
	.loc	21 147 22 is_stmt 0     # pintgr.c:147:22
	addsd	%xmm4, %xmm3
	.loc	21 140 19 is_stmt 1     # pintgr.c:140:19
	addsd	%xmm3, %xmm7
.Ltmp1143:
	#DEBUG_VALUE: pintgr:frc2 <- %XMM7
	.loc	21 139 5 discriminator 1 # pintgr.c:139:5
	addq	$8, %rdx
	addq	$8, %rsi
	decl	%ecx
.Ltmp1144:
	.loc	21 140 24               # pintgr.c:140:24
	movapd	%xmm6, %xmm3
.Ltmp1145:
	.loc	21 139 5 discriminator 1 # pintgr.c:139:5
	jne	.LBB16_40
.Ltmp1146:
# BB#41:                                # %for.cond422.for.inc476_crit_edge.us
                                        #   in Loop: Header=BB16_39 Depth=1
	#DEBUG_VALUE: pintgr:frc2 <- %XMM7
	.loc	21 138 3 discriminator 1 # pintgr.c:138:3
	addq	$528, %rbx              # imm = 0x210
	addq	$528, %rbp              # imm = 0x210
	.loc	21 138 19 is_stmt 0 discriminator 1 # pintgr.c:138:19
	cmpq	%r8, %rdi
	jl	.LBB16_39
.Ltmp1147:
.LBB16_42:                              # %if.then502
	movsd	%xmm7, 8(%rsp)          # 8-byte Spill
	.loc	21 198 17 is_stmt 1     # pintgr.c:198:17
	movsd	dzeta(%rip), %xmm0      # xmm0 = mem[0],zero
	#DEBUG_VALUE: pintgr:k <- 0
.Ltmp1148:
	.loc	21 157 18               # pintgr.c:157:18
	movsd	%xmm0, 40(%rsp)         # 8-byte Spill
	leaq	34960(%rsp), %rdi
	xorl	%esi, %esi
	movl	$34848, %edx            # imm = 0x8820
	callq	memset
	leaq	112(%rsp), %rdi
	.loc	21 158 18               # pintgr.c:158:18
	xorl	%esi, %esi
	movl	$34848, %edx            # imm = 0x8820
	callq	memset
.Ltmp1149:
	.loc	21 162 5 discriminator 1 # pintgr.c:162:5
	cmpl	%r12d, %r14d
	jge	.LBB16_48
# BB#43:                                # %for.cond506.preheader.lr.ph
.Ltmp1150:
	.loc	21 163 7 discriminator 1 # pintgr.c:163:7
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpl	%eax, %r13d
	jge	.LBB16_48
# BB#44:                                # %for.body508.lr.ph.us.preheader
.Ltmp1151:
	.loc	21 164 28               # pintgr.c:164:28
	imulq	$2600, %r13, %rax       # imm = 0xA28
	imulq	$169000, %r14, %rcx     # imm = 0x29428
	addq	%rax, %rcx
	movq	(%rsp), %rax            # 8-byte Reload
	leaq	(%rax,%rax,4), %rax
	leaq	u+32(%rcx,%rax,8), %rbx
	imulq	$528, %r14, %rax        # imm = 0x210
	leaq	34960(%rsp,%rax), %rax
	leaq	(%rax,%r13,8), %rbp
	movq	16(%rsp), %rax          # 8-byte Reload
	movl	%eax, %edx
	subl	%r13d, %edx
	movsd	.LCPI16_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI16_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	%r14, %rsi
	.p2align	4, 0x90
.LBB16_45:                              # %for.body508.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_46 Depth 2
	movl	%edx, %edi
	movq	%rbp, %rcx
	movq	%rbx, %rax
	.p2align	4, 0x90
.LBB16_46:                              # %for.body508.us
                                        #   Parent Loop BB16_45 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	21 165 25               # pintgr.c:165:25
	movsd	-24(%rax), %xmm2        # xmm2 = mem[0],zero
	.loc	21 166 25               # pintgr.c:166:25
	movsd	-16(%rax), %xmm3        # xmm3 = mem[0],zero
	.loc	21 165 42               # pintgr.c:165:42
	mulsd	%xmm2, %xmm2
	.loc	21 166 42               # pintgr.c:166:42
	mulsd	%xmm3, %xmm3
	.loc	21 166 23 is_stmt 0     # pintgr.c:166:23
	addsd	%xmm2, %xmm3
	.loc	21 167 25 is_stmt 1     # pintgr.c:167:25
	movsd	-8(%rax), %xmm2         # xmm2 = mem[0],zero
	.loc	21 167 42 is_stmt 0     # pintgr.c:167:42
	mulsd	%xmm2, %xmm2
	.loc	21 167 23               # pintgr.c:167:23
	addsd	%xmm3, %xmm2
	.loc	21 165 20 is_stmt 1     # pintgr.c:165:20
	mulsd	%xmm0, %xmm2
	.loc	21 168 22               # pintgr.c:168:22
	divsd	-32(%rax), %xmm2
	.loc	21 165 13               # pintgr.c:165:13
	addsd	(%rax), %xmm2
	.loc	21 164 24               # pintgr.c:164:24
	mulsd	%xmm1, %xmm2
	.loc	21 164 20 is_stmt 0     # pintgr.c:164:20
	movsd	%xmm2, (%rcx)
.Ltmp1152:
	.loc	21 163 7 is_stmt 1 discriminator 1 # pintgr.c:163:7
	addq	$2600, %rax             # imm = 0xA28
	addq	$8, %rcx
	decl	%edi
	jne	.LBB16_46
.Ltmp1153:
# BB#47:                                # %for.cond506.for.inc581_crit_edge.us
                                        #   in Loop: Header=BB16_45 Depth=1
	.loc	21 162 5 discriminator 1 # pintgr.c:162:5
	incq	%rsi
	addq	$169000, %rbx           # imm = 0x29428
	addq	$528, %rbp              # imm = 0x210
	.loc	21 162 21 is_stmt 0 discriminator 1 # pintgr.c:162:21
	cmpq	%r12, %rsi
	jl	.LBB16_45
.Ltmp1154:
.LBB16_48:                              # %if.then586
	movsd	48(%rsp), %xmm5         # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	21 102 14 is_stmt 1     # pintgr.c:102:14
	movapd	%xmm5, %xmm0
	movsd	56(%rsp), %xmm9         # 8-byte Reload
                                        # xmm9 = mem[0],zero
	mulsd	%xmm9, %xmm0
	movsd	40(%rsp), %xmm11        # 8-byte Reload
                                        # xmm11 = mem[0],zero
	.loc	21 150 14               # pintgr.c:150:14
	mulsd	%xmm11, %xmm5
.Ltmp1155:
	.loc	21 174 5 discriminator 1 # pintgr.c:174:5
	cmpl	%r12d, %r14d
	movsd	64(%rsp), %xmm8         # 8-byte Reload
                                        # xmm8 = mem[0],zero
	movsd	8(%rsp), %xmm10         # 8-byte Reload
                                        # xmm10 = mem[0],zero
	jge	.LBB16_54
# BB#49:                                # %for.cond590.preheader.lr.ph
.Ltmp1156:
	.loc	21 175 7 discriminator 1 # pintgr.c:175:7
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpl	%eax, %r13d
	jge	.LBB16_54
# BB#50:                                # %for.body592.lr.ph.us.preheader
.Ltmp1157:
	.loc	21 176 28               # pintgr.c:176:28
	imulq	$2600, %r13, %rax       # imm = 0xA28
	imulq	$169000, %r14, %rcx     # imm = 0x29428
	addq	%rax, %rcx
	movq	24(%rsp), %rax          # 8-byte Reload
	leaq	(%rax,%rax,4), %rax
	leaq	u+32(%rcx,%rax,8), %rbx
	imulq	$528, %r14, %rax        # imm = 0x210
	leaq	112(%rsp,%rax), %rax
	leaq	(%rax,%r13,8), %rbp
	movq	16(%rsp), %rax          # 8-byte Reload
	movl	%eax, %edx
	subl	%r13d, %edx
	movsd	.LCPI16_4(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI16_3(%rip), %xmm2  # xmm2 = mem[0],zero
	movq	%r14, %rsi
	.p2align	4, 0x90
.LBB16_51:                              # %for.body592.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_52 Depth 2
	movl	%edx, %edi
	movq	%rbp, %rcx
	movq	%rbx, %rax
	.p2align	4, 0x90
.LBB16_52:                              # %for.body592.us
                                        #   Parent Loop BB16_51 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	21 177 25               # pintgr.c:177:25
	movsd	-24(%rax), %xmm3        # xmm3 = mem[0],zero
	.loc	21 178 25               # pintgr.c:178:25
	movsd	-16(%rax), %xmm4        # xmm4 = mem[0],zero
	.loc	21 177 44               # pintgr.c:177:44
	mulsd	%xmm3, %xmm3
	.loc	21 178 44               # pintgr.c:178:44
	mulsd	%xmm4, %xmm4
	.loc	21 178 23 is_stmt 0     # pintgr.c:178:23
	addsd	%xmm3, %xmm4
	.loc	21 179 25 is_stmt 1     # pintgr.c:179:25
	movsd	-8(%rax), %xmm3         # xmm3 = mem[0],zero
	.loc	21 179 44 is_stmt 0     # pintgr.c:179:44
	mulsd	%xmm3, %xmm3
	.loc	21 179 23               # pintgr.c:179:23
	addsd	%xmm4, %xmm3
	.loc	21 177 20 is_stmt 1     # pintgr.c:177:20
	mulsd	%xmm1, %xmm3
	.loc	21 180 22               # pintgr.c:180:22
	divsd	-32(%rax), %xmm3
	.loc	21 177 13               # pintgr.c:177:13
	addsd	(%rax), %xmm3
	.loc	21 176 24               # pintgr.c:176:24
	mulsd	%xmm2, %xmm3
	.loc	21 176 20 is_stmt 0     # pintgr.c:176:20
	movsd	%xmm3, (%rcx)
.Ltmp1158:
	.loc	21 175 7 is_stmt 1 discriminator 1 # pintgr.c:175:7
	addq	$2600, %rax             # imm = 0xA28
	addq	$8, %rcx
	decl	%edi
	jne	.LBB16_52
.Ltmp1159:
# BB#53:                                # %for.cond590.for.inc673_crit_edge.us
                                        #   in Loop: Header=BB16_51 Depth=1
	.loc	21 174 5 discriminator 1 # pintgr.c:174:5
	incq	%rsi
	addq	$169000, %rbx           # imm = 0x29428
	addq	$528, %rbp              # imm = 0x210
	.loc	21 174 21 is_stmt 0 discriminator 1 # pintgr.c:174:21
	cmpq	%r12, %rsi
	jl	.LBB16_51
.Ltmp1160:
.LBB16_54:                              # %if.end676
	.loc	21 102 21 is_stmt 1     # pintgr.c:102:21
	mulsd	%xmm0, %xmm8
.Ltmp1161:
	#DEBUG_VALUE: pintgr:frc1 <- %XMM8
	.loc	21 150 22               # pintgr.c:150:22
	mulsd	%xmm5, %xmm10
.Ltmp1162:
	#DEBUG_VALUE: pintgr:frc3 <- 0.000000e+00
	#DEBUG_VALUE: pintgr:frc2 <- %XMM10
	.loc	21 186 24 discriminator 1 # pintgr.c:186:24
	decl	%r12d
	.loc	21 186 3 is_stmt 0 discriminator 1 # pintgr.c:186:3
	movq	32(%rsp), %rax          # 8-byte Reload
	cmpl	%eax, %r13d
	setge	%al
	cmpl	%r12d, %r14d
	xorpd	%xmm0, %xmm0
	jge	.LBB16_60
.Ltmp1163:
# BB#55:                                # %if.end676
	#DEBUG_VALUE: pintgr:frc2 <- %XMM10
	#DEBUG_VALUE: pintgr:frc1 <- %XMM8
	testb	%al, %al
	jne	.LBB16_60
.Ltmp1164:
# BB#56:                                # %for.body683.lr.ph.us.preheader
	#DEBUG_VALUE: pintgr:frc1 <- %XMM8
	#DEBUG_VALUE: pintgr:frc2 <- %XMM10
	.loc	21 188 24 is_stmt 1     # pintgr.c:188:24
	movslq	%r12d, %rax
	imulq	$528, %r14, %rcx        # imm = 0x210
	leaq	34960(%rsp,%rcx), %rdx
	movsd	(%rdx,%r13,8), %xmm1    # xmm1 = mem[0],zero
	.loc	21 192 24               # pintgr.c:192:24
	leaq	112(%rsp,%rcx), %rcx
	movsd	(%rcx,%r13,8), %xmm2    # xmm2 = mem[0],zero
	.loc	21 188 24               # pintgr.c:188:24
	movq	16(%rsp), %rsi          # 8-byte Reload
	leal	-1(%rsi), %ebx
	subl	%r13d, %ebx
	leaq	8(%rdx,%r13,8), %rbp
	leaq	8(%rcx,%r13,8), %rsi
	xorpd	%xmm0, %xmm0
.Ltmp1165:
	.p2align	4, 0x90
.LBB16_57:                              # %for.body683.lr.ph.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_58 Depth 2
	movapd	%xmm1, %xmm4
	.loc	21 192 24               # pintgr.c:192:24
	movapd	%xmm2, %xmm3
.Ltmp1166:
	.loc	21 186 3 discriminator 1 # pintgr.c:186:3
	incq	%r14
.Ltmp1167:
	.loc	21 190 24               # pintgr.c:190:24
	imulq	$528, %r14, %rcx        # imm = 0x210
	leaq	34960(%rsp,%rcx), %rdx
	movsd	(%rdx,%r13,8), %xmm1    # xmm1 = mem[0],zero
	.loc	21 194 24               # pintgr.c:194:24
	leaq	112(%rsp,%rcx), %rcx
	movsd	(%rcx,%r13,8), %xmm2    # xmm2 = mem[0],zero
	movq	%rsi, %rdi
	movq	%rbp, %rdx
	movl	%ebx, %ecx
	movapd	%xmm2, %xmm5
	.loc	21 190 24               # pintgr.c:190:24
	movapd	%xmm1, %xmm6
	.p2align	4, 0x90
.LBB16_58:                              # %for.body683.us
                                        #   Parent Loop BB16_57 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	.loc	21 189 24               # pintgr.c:189:24
	movsd	(%rdx), %xmm7           # xmm7 = mem[0],zero
	.loc	21 189 22 is_stmt 0     # pintgr.c:189:22
	addsd	%xmm7, %xmm4
	.loc	21 190 22 is_stmt 1     # pintgr.c:190:22
	addsd	%xmm6, %xmm4
	.loc	21 191 24               # pintgr.c:191:24
	movsd	528(%rdx), %xmm6        # xmm6 = mem[0],zero
	.loc	21 191 22 is_stmt 0     # pintgr.c:191:22
	addsd	%xmm6, %xmm4
	.loc	21 192 22 is_stmt 1     # pintgr.c:192:22
	addsd	%xmm3, %xmm4
	.loc	21 193 24               # pintgr.c:193:24
	movsd	(%rdi), %xmm3           # xmm3 = mem[0],zero
	.loc	21 193 22 is_stmt 0     # pintgr.c:193:22
	addsd	%xmm3, %xmm4
	.loc	21 194 22 is_stmt 1     # pintgr.c:194:22
	addsd	%xmm5, %xmm4
	.loc	21 195 24               # pintgr.c:195:24
	movsd	528(%rdi), %xmm5        # xmm5 = mem[0],zero
	.loc	21 195 22 is_stmt 0     # pintgr.c:195:22
	addsd	%xmm5, %xmm4
	.loc	21 188 19 is_stmt 1     # pintgr.c:188:19
	addsd	%xmm4, %xmm0
.Ltmp1168:
	#DEBUG_VALUE: pintgr:frc3 <- %XMM0
	.loc	21 187 5 discriminator 1 # pintgr.c:187:5
	addq	$8, %rdx
	addq	$8, %rdi
	decl	%ecx
.Ltmp1169:
	.loc	21 188 24               # pintgr.c:188:24
	movapd	%xmm7, %xmm4
.Ltmp1170:
	.loc	21 187 5 discriminator 1 # pintgr.c:187:5
	jne	.LBB16_58
.Ltmp1171:
# BB#59:                                # %for.cond681.for.inc735_crit_edge.us
                                        #   in Loop: Header=BB16_57 Depth=1
	#DEBUG_VALUE: pintgr:frc3 <- %XMM0
	.loc	21 186 3 discriminator 1 # pintgr.c:186:3
	addq	$528, %rbp              # imm = 0x210
	addq	$528, %rsi              # imm = 0x210
	.loc	21 186 19 is_stmt 0 discriminator 1 # pintgr.c:186:19
	cmpq	%rax, %r14
	jl	.LBB16_57
.Ltmp1172:
.LBB16_60:                              # %for.end737
	.loc	21 198 15 is_stmt 1     # pintgr.c:198:15
	mulsd	%xmm11, %xmm9
	.loc	21 198 23 is_stmt 0     # pintgr.c:198:23
	mulsd	%xmm0, %xmm9
.Ltmp1173:
	#DEBUG_VALUE: pintgr:frc3 <- %XMM9
	.loc	21 200 23 is_stmt 1     # pintgr.c:200:23
	addsd	%xmm10, %xmm8
	.loc	21 200 30 is_stmt 0     # pintgr.c:200:30
	addsd	%xmm9, %xmm8
	.loc	21 200 14               # pintgr.c:200:14
	mulsd	.LCPI16_5(%rip), %xmm8
	.loc	21 200 7                # pintgr.c:200:7
	movsd	%xmm8, frc(%rip)
	.loc	21 202 1 is_stmt 1      # pintgr.c:202:1
	addq	$69816, %rsp            # imm = 0x110B8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1174:
.Lfunc_end16:
	.size	pintgr, .Lfunc_end16-pintgr
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI17_0:
	.quad	4607182418800017408     # double 1
	.quad	4607182418800017408     # double 1
.LCPI17_2:
	.quad	4686454326744135000     # double 209964.16878740001
	.quad	4671585221525234996     # double 21304.031431650001
.LCPI17_3:
	.quad	4677543505964097190     # double 53192.287893710003
	.quad	4676430982785072533     # double 45097.616398329999
.LCPI17_4:
	.quad	4647152872783386474     # double 480.05725783330001
	.quad	4631138744779446066     # double 42.219934001840002
.LCPI17_5:
	.quad	4638221029743703358     # double 121.0851906824
	.quad	4637074280140530855     # double 104.78889867700001
.LCPI17_10:
	.quad	4676923916246494644     # double 48684.17937025
	.quad	4661885729278996512     # double 4696.3710500710004
.LCPI17_11:
	.quad	4667922269885672556     # double 12181.145497760001
	.quad	4666908998142826180     # double 10338.014934610001
.LCPI17_12:
	.quad	4645308895776272127     # double 375.23930044820003
	.quad	4629374268767282179     # double 30.841288936590001
.LCPI17_13:
	.quad	4636339199117491804     # double 94.342769054689995
	.quad	4635492247792140864     # double 82.306866819280003
.LCPI17_17:
	.quad	4666930264400710023     # double 10376.698032353785
	.quad	4651059199602167970     # double 892.21245880100855
.LCPI17_18:
	.quad	4657853166196145850     # double 2562.3881458266087
	.quad	4657038549670010698     # double 2191.9434385783143
.LCPI17_19:
	.quad	4641803362418008726     # double 215.98639971694928
	.quad	4624959790566519194     # double 15.57895592398636
.LCPI17_20:
	.quad	4632815203028384184     # double 54.131886307720777
	.quad	4631984060622009609     # double 48.226264315404542
.LCPI17_25:
	.quad	4660032132493013967     # double 3553.2672969982737
	.quad	4643319363922601960     # double 262.14750795310692
.LCPI17_26:
	.quad	4650981132162969605     # double 883.3372185095219
	.quad	4650055699868222391     # double 778.12774739425265
.LCPI17_27:
	.quad	4637723281577106022     # double 114.01176380212709
	.quad	4620755083835992025     # double 8.1098963655421574
.LCPI17_28:
	.quad	4628709793148833599     # double 28.480597317698308
	.quad	4627984938014790027     # double 25.905394567832939
.LCPI17_32:
	.quad	4650063557670326347     # double 779.02107606689367
	.quad	4634119963246931012     # double 63.40276525969287
.LCPI17_33:
	.quad	4641064705142821529     # double 194.99249727292479
	.quad	4640482773724894697     # double 178.45301160418538
.LCPI17_34:
	.quad	4629127358002603212     # double 29.964085685471943
	.quad	4613531272980582312     # double 2.819457636500335
.LCPI17_35:
	.quad	4619958389278683919     # double 7.3473412698774743
	.quad	4619245223222123313     # double 6.7139225687777051
.LCPI17_39:
	.quad	4623150559746009366     # double 12.36511638192
	.quad	4608611088854424294     # double 1.317228477799
.LCPI17_40:
	.quad	4612924780146639621     # double 2.5501207130950001
	.quad	4612420527942631768     # double 2.3261877502520001
.LCPI17_41:
	.quad	4602440807795016533     # double 0.48678771442160002
	.quad	4587459755060610894     # double 0.050646528809819999
.LCPI17_42:
	.quad	4591352675470414173     # double 0.092818181019600002
	.quad	4590839847655864182     # double 0.085701265427330003
.LCPI17_47:
	.quad	4580325499504405974     # double 0.016196343210976703
	.quad	4567213914946669857     # double 0.002197674516482132
.LCPI17_48:
	.quad	4564643328910933981     # double 0.0015179927653399185
	.quad	4564573995339566842     # double 0.0015029584435994323
.LCPI17_49:
	.quad	4559062779005713796     # double 6.4223319957960922E-4
	.quad	4545837180961452387     # double 8.4144342047347924E-5
.LCPI17_50:
	.quad	4543770927284783836     # double 5.8588269616485187E-5
	.quad	4543754096915065408     # double 5.847422259515735E-5
.LCPI17_54:
	.quad	9223372036854775807     # 0x7fffffffffffffff
	.quad	9223372036854775807     # 0x7fffffffffffffff
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI17_1:
	.quad	4607182418800017408     # double 1
.LCPI17_6:
	.quad	4602678819172646912     # double 0.5
.LCPI17_7:
	.quad	4636394006775697388     # double 95.121632722729998
.LCPI17_8:
	.quad	4688781368596676798     # double 293236.00065900001
.LCPI17_9:
	.quad	4650567413268916147     # double 836.30282573889997
.LCPI17_14:
	.quad	4635565019425267457     # double 83.341013925029997
.LCPI17_15:
	.quad	4679644632026950254     # double 71423.984138169995
.LCPI17_16:
	.quad	4649370786070515029     # double 700.26206362100004
.LCPI17_21:
	.quad	4611686018427387904     # double 2
.LCPI17_22:
	.quad	4634389822091785009     # double 66.64045535721813
.LCPI17_23:
	.quad	4670624186321091284     # double 17807.805726106119
.LCPI17_24:
	.quad	4646727945003282392     # double 455.90291004325036
.LCPI17_29:
	.quad	4631936336312825931     # double 47.887162703308228
.LCPI17_30:
	.quad	4664758121942847093     # double 7308.7969592545314
.LCPI17_31:
	.quad	4643291243993565903     # double 260.54907504857414
.LCPI17_36:
	.quad	4628020271860521080     # double 26.030925604886278
.LCPI17_37:
	.quad	4655800518557596311     # double 1838.4760349464248
.LCPI17_38:
	.quad	4634676564895989135     # double 70.715315688392579
.LCPI17_43:
	.quad	4564560351926583034     # double 0.0015
.LCPI17_44:
	.quad	4622727714935197817     # double 11.61399311023
.LCPI17_45:
	.quad	4628649950759316837     # double 28.26799444189
.LCPI17_46:
	.quad	4607561970547381207     # double 1.084277417792
.LCPI17_51:
	.quad	4620515204897873596     # double 7.8418928865937083
.LCPI17_52:
	.quad	4585098794382901335     # double 0.034264073155896461
.LCPI17_53:
	.quad	4563685675535951625     # double 0.0013103347914111294
.LCPI17_55:
	.quad	4487126258331716666     # double 1.0E-8
	.text
	.globl	verify
	.p2align	4, 0x90
	.type	verify,@function
verify:                                 # @verify
.Lfunc_begin17:
	.file	22 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU/verify.c"
	.loc	22 43 0                 # verify.c:43:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%r15
.Ltmp1175:
	.cfi_def_cfa_offset 16
	pushq	%r14
.Ltmp1176:
	.cfi_def_cfa_offset 24
	pushq	%r13
.Ltmp1177:
	.cfi_def_cfa_offset 32
	pushq	%r12
.Ltmp1178:
	.cfi_def_cfa_offset 40
	pushq	%rbx
.Ltmp1179:
	.cfi_def_cfa_offset 48
	subq	$240, %rsp
.Ltmp1180:
	.cfi_def_cfa_offset 288
.Ltmp1181:
	.cfi_offset %rbx, -48
.Ltmp1182:
	.cfi_offset %r12, -40
.Ltmp1183:
	.cfi_offset %r13, -32
.Ltmp1184:
	.cfi_offset %r14, -24
.Ltmp1185:
	.cfi_offset %r15, -16
	#DEBUG_VALUE: verify:xcr <- %RDI
	#DEBUG_VALUE: verify:xce <- %RSI
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:Class <- %RDX
	#DEBUG_VALUE: verify:verified <- %RCX
	movq	%rcx, %r14
.Ltmp1186:
	#DEBUG_VALUE: verify:verified <- %R14
	movq	%rdx, %r13
.Ltmp1187:
	#DEBUG_VALUE: verify:Class <- %R13
	movq	%rsi, %r15
.Ltmp1188:
	#DEBUG_VALUE: verify:xce <- %R15
	movq	%rdi, %r12
.Ltmp1189:
	#DEBUG_VALUE: verify:epsilon <- 1.000000e-08
	#DEBUG_VALUE: verify:dtref <- 0.000000e+00
	#DEBUG_VALUE: verify:xcr <- %R12
	.loc	22 54 10 prologue_end   # verify.c:54:10
	movb	$85, (%r13)
	.loc	22 55 13                # verify.c:55:13
	movl	$1, (%r14)
.Ltmp1190:
	#DEBUG_VALUE: verify:m <- 0
	.loc	22 58 15                # verify.c:58:15
	movapd	.LCPI17_0(%rip), %xmm7  # xmm7 = [1.000000e+00,1.000000e+00]
	movapd	%xmm7, 64(%rsp)
	.loc	22 59 15                # verify.c:59:15
	movapd	%xmm7, 16(%rsp)
	.loc	22 58 15                # verify.c:58:15
	movapd	%xmm7, 80(%rsp)
	.loc	22 59 15                # verify.c:59:15
	movapd	%xmm7, 32(%rsp)
	.loc	22 58 15                # verify.c:58:15
	movabsq	$4607182418800017408, %rax # imm = 0x3FF0000000000000
	movq	%rax, 96(%rsp)
	.loc	22 59 15                # verify.c:59:15
	movq	%rax, 48(%rsp)
.Ltmp1191:
	#DEBUG_VALUE: verify:xciref <- 1.000000e+00
	.loc	22 63 8                 # verify.c:63:8
	movl	nx0(%rip), %esi
	.loc	22 63 23 is_stmt 0 discriminator 1 # verify.c:63:23
	movl	ny0(%rip), %edx
	.loc	22 63 38 discriminator 2 # verify.c:63:38
	movl	nz0(%rip), %ecx
	.loc	22 63 53 discriminator 3 # verify.c:63:53
	movl	itmax(%rip), %eax
	.loc	22 63 19                # verify.c:63:19
	cmpl	$12, %esi
	jne	.LBB17_5
.Ltmp1192:
# BB#1:                                 # %entry
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$12, %edx
	jne	.LBB17_5
.Ltmp1193:
# BB#2:                                 # %entry
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$12, %ecx
	jne	.LBB17_5
.Ltmp1194:
# BB#3:                                 # %entry
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$50, %eax
	jne	.LBB17_5
.Ltmp1195:
# BB#4:                                 # %if.then
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:dtref <- 5.000000e-01
	.loc	22 65 12 is_stmt 1      # verify.c:65:12
	movb	$83, (%r13)
	.loc	22 71 15                # verify.c:71:15
	movapd	.LCPI17_47(%rip), %xmm7 # xmm7 = [1.619634e-02,2.197675e-03]
	movapd	%xmm7, 64(%rsp)
	.loc	22 73 15                # verify.c:73:15
	movapd	.LCPI17_48(%rip), %xmm1 # xmm1 = [1.517993e-03,1.502958e-03]
	movapd	%xmm1, 80(%rsp)
	movabsq	$4585098794382901335, %rax # imm = 0x3FA18B0F8343C057
	.loc	22 75 15                # verify.c:75:15
	movq	%rax, 96(%rsp)
	.loc	22 82 15                # verify.c:82:15
	movapd	.LCPI17_49(%rip), %xmm3 # xmm3 = [6.422332e-04,8.414434e-05]
	movapd	%xmm3, 16(%rsp)
	.loc	22 84 15                # verify.c:84:15
	movapd	.LCPI17_50(%rip), %xmm2 # xmm2 = [5.858827e-05,5.847422e-05]
	movapd	%xmm2, 32(%rsp)
	movabsq	$4563685675535951625, %rax # imm = 0x3F5577F144DBE709
	.loc	22 86 15                # verify.c:86:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_6(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_51(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI17_52(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI17_53(%rip), %xmm8 # xmm8 = mem[0],zero
.Ltmp1196:
	#DEBUG_VALUE: verify:xciref <- 7.841893e+00
	movb	$83, %al
	jmp	.LBB17_36
.Ltmp1197:
.LBB17_5:                               # %if.else
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	.loc	22 94 26 discriminator 1 # verify.c:94:26
	cmpl	$33, %esi
	jne	.LBB17_10
.Ltmp1198:
# BB#6:                                 # %if.else
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$33, %edx
	jne	.LBB17_10
.Ltmp1199:
# BB#7:                                 # %if.else
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$33, %ecx
	jne	.LBB17_10
.Ltmp1200:
# BB#8:                                 # %if.else
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$300, %eax              # imm = 0x12C
	jne	.LBB17_10
.Ltmp1201:
# BB#9:                                 # %if.then26
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:dtref <- 1.500000e-03
	.loc	22 96 12                # verify.c:96:12
	movb	$87, (%r13)
	.loc	22 102 15               # verify.c:102:15
	movapd	.LCPI17_39(%rip), %xmm7 # xmm7 = [1.236512e+01,1.317228e+00]
	movapd	%xmm7, 64(%rsp)
	.loc	22 104 15               # verify.c:104:15
	movapd	.LCPI17_40(%rip), %xmm1 # xmm1 = [2.550121e+00,2.326188e+00]
	movapd	%xmm1, 80(%rsp)
	movabsq	$4628649950759316837, %rax # imm = 0x403C449B48A36D65
	.loc	22 106 15               # verify.c:106:15
	movq	%rax, 96(%rsp)
	.loc	22 112 15               # verify.c:112:15
	movapd	.LCPI17_41(%rip), %xmm3 # xmm3 = [4.867877e-01,5.064653e-02]
	movapd	%xmm3, 16(%rsp)
	.loc	22 114 15               # verify.c:114:15
	movapd	.LCPI17_42(%rip), %xmm2 # xmm2 = [9.281818e-02,8.570127e-02]
	movapd	%xmm2, 32(%rsp)
	movabsq	$4607561970547381207, %rax # imm = 0x3FF15933471353D7
	.loc	22 116 15               # verify.c:116:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_43(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_44(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI17_45(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI17_46(%rip), %xmm8 # xmm8 = mem[0],zero
.Ltmp1202:
	#DEBUG_VALUE: verify:xciref <- 1.161399e+01
	movb	$87, %al
	jmp	.LBB17_36
.Ltmp1203:
.LBB17_10:                              # %if.else37
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	.loc	22 124 26 discriminator 1 # verify.c:124:26
	cmpl	$64, %esi
	jne	.LBB17_15
.Ltmp1204:
# BB#11:                                # %if.else37
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$64, %edx
	jne	.LBB17_15
.Ltmp1205:
# BB#12:                                # %if.else37
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$64, %ecx
	jne	.LBB17_15
.Ltmp1206:
# BB#13:                                # %if.else37
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$250, %eax
	jne	.LBB17_15
.Ltmp1207:
# BB#14:                                # %if.then45
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:dtref <- 2.000000e+00
	.loc	22 126 12               # verify.c:126:12
	movb	$65, (%r13)
	.loc	22 132 15               # verify.c:132:15
	movapd	.LCPI17_32(%rip), %xmm7 # xmm7 = [7.790211e+02,6.340277e+01]
	movapd	%xmm7, 64(%rsp)
	.loc	22 134 15               # verify.c:134:15
	movapd	.LCPI17_33(%rip), %xmm1 # xmm1 = [1.949925e+02,1.784530e+02]
	movapd	%xmm1, 80(%rsp)
	movabsq	$4655800518557596311, %rax # imm = 0x409CB9E775B47A97
	.loc	22 136 15               # verify.c:136:15
	movq	%rax, 96(%rsp)
	.loc	22 143 15               # verify.c:143:15
	movapd	.LCPI17_34(%rip), %xmm3 # xmm3 = [2.996409e+01,2.819458e+00]
	movapd	%xmm3, 16(%rsp)
	.loc	22 145 15               # verify.c:145:15
	movapd	.LCPI17_35(%rip), %xmm2 # xmm2 = [7.347341e+00,6.713923e+00]
	movapd	%xmm2, 32(%rsp)
	movabsq	$4634676564895989135, %rax # imm = 0x4051ADC7BB73FD8F
	.loc	22 147 15               # verify.c:147:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_21(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_36(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI17_37(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI17_38(%rip), %xmm8 # xmm8 = mem[0],zero
.Ltmp1208:
	#DEBUG_VALUE: verify:xciref <- 2.603093e+01
	movb	$65, %al
	jmp	.LBB17_36
.Ltmp1209:
.LBB17_15:                              # %if.else56
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	.loc	22 155 27 discriminator 1 # verify.c:155:27
	cmpl	$102, %esi
	jne	.LBB17_20
.Ltmp1210:
# BB#16:                                # %if.else56
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$102, %edx
	jne	.LBB17_20
.Ltmp1211:
# BB#17:                                # %if.else56
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$102, %ecx
	jne	.LBB17_20
.Ltmp1212:
# BB#18:                                # %if.else56
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$250, %eax
	jne	.LBB17_20
.Ltmp1213:
# BB#19:                                # %if.then64
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:dtref <- 2.000000e+00
	.loc	22 157 12               # verify.c:157:12
	movb	$66, (%r13)
	.loc	22 164 15               # verify.c:164:15
	movapd	.LCPI17_25(%rip), %xmm7 # xmm7 = [3.553267e+03,2.621475e+02]
	movapd	%xmm7, 64(%rsp)
	.loc	22 166 15               # verify.c:166:15
	movapd	.LCPI17_26(%rip), %xmm1 # xmm1 = [8.833372e+02,7.781277e+02]
	movapd	%xmm1, 80(%rsp)
	movabsq	$4664758121942847093, %rax # imm = 0x40BC8CCC05858E75
	.loc	22 168 15               # verify.c:168:15
	movq	%rax, 96(%rsp)
	.loc	22 174 15               # verify.c:174:15
	movapd	.LCPI17_27(%rip), %xmm3 # xmm3 = [1.140118e+02,8.109896e+00]
	movapd	%xmm3, 16(%rsp)
	.loc	22 176 15               # verify.c:176:15
	movapd	.LCPI17_28(%rip), %xmm2 # xmm2 = [2.848060e+01,2.590539e+01]
	movapd	%xmm2, 32(%rsp)
	movabsq	$4643291243993565903, %rax # imm = 0x407048C902EB0ACF
	.loc	22 178 15               # verify.c:178:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_21(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_29(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI17_30(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI17_31(%rip), %xmm8 # xmm8 = mem[0],zero
.Ltmp1214:
	#DEBUG_VALUE: verify:xciref <- 4.788716e+01
	movb	$66, %al
	jmp	.LBB17_36
.Ltmp1215:
.LBB17_20:                              # %if.else75
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	.loc	22 186 27 discriminator 1 # verify.c:186:27
	cmpl	$162, %esi
	jne	.LBB17_25
.Ltmp1216:
# BB#21:                                # %if.else75
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$162, %edx
	jne	.LBB17_25
.Ltmp1217:
# BB#22:                                # %if.else75
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$162, %ecx
	jne	.LBB17_25
.Ltmp1218:
# BB#23:                                # %if.else75
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$250, %eax
	jne	.LBB17_25
.Ltmp1219:
# BB#24:                                # %if.then83
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:dtref <- 2.000000e+00
	.loc	22 188 12               # verify.c:188:12
	movb	$67, (%r13)
	.loc	22 195 15               # verify.c:195:15
	movapd	.LCPI17_17(%rip), %xmm7 # xmm7 = [1.037670e+04,8.922125e+02]
	movapd	%xmm7, 64(%rsp)
	.loc	22 197 15               # verify.c:197:15
	movapd	.LCPI17_18(%rip), %xmm1 # xmm1 = [2.562388e+03,2.191943e+03]
	movapd	%xmm1, 80(%rsp)
	movabsq	$4670624186321091284, %rax # imm = 0x40D163F391043AD4
	.loc	22 199 15               # verify.c:199:15
	movq	%rax, 96(%rsp)
	.loc	22 205 15               # verify.c:205:15
	movapd	.LCPI17_19(%rip), %xmm3 # xmm3 = [2.159864e+02,1.557896e+01]
	movapd	%xmm3, 16(%rsp)
	.loc	22 207 15               # verify.c:207:15
	movapd	.LCPI17_20(%rip), %xmm2 # xmm2 = [5.413189e+01,4.822626e+01]
	movapd	%xmm2, 32(%rsp)
	movabsq	$4646727945003282392, %rax # imm = 0x407C7E7251CD2FD8
	.loc	22 209 15               # verify.c:209:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_21(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_22(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI17_23(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI17_24(%rip), %xmm8 # xmm8 = mem[0],zero
.Ltmp1220:
	#DEBUG_VALUE: verify:xciref <- 6.664046e+01
	movb	$67, %al
	jmp	.LBB17_36
.Ltmp1221:
.LBB17_25:                              # %if.else94
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	.loc	22 223 27 discriminator 1 # verify.c:223:27
	cmpl	$408, %esi              # imm = 0x198
	jne	.LBB17_30
.Ltmp1222:
# BB#26:                                # %if.else94
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$408, %edx              # imm = 0x198
	jne	.LBB17_30
.Ltmp1223:
# BB#27:                                # %if.else94
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$408, %ecx              # imm = 0x198
	jne	.LBB17_30
.Ltmp1224:
# BB#28:                                # %if.else94
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$300, %eax              # imm = 0x12C
	jne	.LBB17_30
.Ltmp1225:
# BB#29:                                # %if.then102
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:dtref <- 1.000000e+00
	.loc	22 225 12               # verify.c:225:12
	movb	$68, (%r13)
	.loc	22 232 15               # verify.c:232:15
	movapd	.LCPI17_10(%rip), %xmm7 # xmm7 = [4.868418e+04,4.696371e+03]
	movapd	%xmm7, 64(%rsp)
	.loc	22 234 15               # verify.c:234:15
	movapd	.LCPI17_11(%rip), %xmm1 # xmm1 = [1.218115e+04,1.033801e+04]
	movapd	%xmm1, 80(%rsp)
	movabsq	$4679644632026950254, %rax # imm = 0x40F16FFFBF07AA6E
	.loc	22 236 15               # verify.c:236:15
	movq	%rax, 96(%rsp)
	.loc	22 242 15               # verify.c:242:15
	movapd	.LCPI17_12(%rip), %xmm3 # xmm3 = [3.752393e+02,3.084129e+01]
	movapd	%xmm3, 16(%rsp)
	.loc	22 244 15               # verify.c:244:15
	movapd	.LCPI17_13(%rip), %xmm2 # xmm2 = [9.434277e+01,8.230687e+01]
	movapd	%xmm2, 32(%rsp)
	movabsq	$4649370786070515029, %rax # imm = 0x4085E218B4CFCD55
	.loc	22 246 15               # verify.c:246:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_1(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_14(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI17_15(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI17_16(%rip), %xmm8 # xmm8 = mem[0],zero
.Ltmp1226:
	#DEBUG_VALUE: verify:xciref <- 8.334101e+01
	movb	$68, %al
	jmp	.LBB17_36
.Ltmp1227:
.LBB17_30:                              # %if.else113
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	.loc	22 254 28 discriminator 1 # verify.c:254:28
	cmpl	$1020, %esi             # imm = 0x3FC
	jne	.LBB17_35
.Ltmp1228:
# BB#31:                                # %if.else113
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$1020, %edx             # imm = 0x3FC
	jne	.LBB17_35
.Ltmp1229:
# BB#32:                                # %if.else113
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	cmpl	$1020, %ecx             # imm = 0x3FC
	jne	.LBB17_35
.Ltmp1230:
# BB#33:                                # %if.else113
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	cmpl	$300, %eax              # imm = 0x12C
	jne	.LBB17_35
.Ltmp1231:
# BB#34:                                # %if.then121
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:dtref <- 5.000000e-01
	.loc	22 257 12               # verify.c:257:12
	movb	$69, (%r13)
	.loc	22 265 15               # verify.c:265:15
	movapd	.LCPI17_2(%rip), %xmm7  # xmm7 = [2.099642e+05,2.130403e+04]
	movapd	%xmm7, 64(%rsp)
	.loc	22 267 15               # verify.c:267:15
	movapd	.LCPI17_3(%rip), %xmm1  # xmm1 = [5.319229e+04,4.509762e+04]
	movapd	%xmm1, 80(%rsp)
	movabsq	$4688781368596676798, %rax # imm = 0x4111E5D000ACC0BE
	.loc	22 269 15               # verify.c:269:15
	movq	%rax, 96(%rsp)
	.loc	22 276 15               # verify.c:276:15
	movapd	.LCPI17_4(%rip), %xmm3  # xmm3 = [4.800573e+02,4.221993e+01]
	movapd	%xmm3, 16(%rsp)
	.loc	22 278 15               # verify.c:278:15
	movapd	.LCPI17_5(%rip), %xmm2  # xmm2 = [1.210852e+02,1.047889e+02]
	movapd	%xmm2, 32(%rsp)
	movabsq	$4650567413268916147, %rax # imm = 0x408A226C2FE6A7B3
	.loc	22 280 15               # verify.c:280:15
	movq	%rax, 48(%rsp)
	movsd	.LCPI17_6(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	%xmm4, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_7(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	.LCPI17_8(%rip), %xmm5  # xmm5 = mem[0],zero
	movsd	.LCPI17_9(%rip), %xmm8  # xmm8 = mem[0],zero
.Ltmp1232:
	#DEBUG_VALUE: verify:xciref <- 9.512163e+01
	movb	$69, %al
	jmp	.LBB17_36
.Ltmp1233:
.LBB17_35:                              # %if.else132
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	.loc	22 289 15               # verify.c:289:15
	movl	$0, (%r14)
.Ltmp1234:
	.loc	22 310 7                # verify.c:310:7
	movb	(%r13), %al
	xorpd	%xmm1, %xmm1
	movsd	%xmm1, 8(%rsp)          # 8-byte Spill
	movsd	.LCPI17_1(%rip), %xmm8  # xmm8 = mem[0],zero
.Ltmp1235:
	.loc	22 301 30               # verify.c:301:30
	movapd	%xmm8, %xmm5
	movapd	%xmm8, %xmm4
	movapd	%xmm7, %xmm1
	.loc	22 302 30               # verify.c:302:30
	movapd	%xmm7, %xmm3
	movapd	%xmm7, %xmm2
.Ltmp1236:
.LBB17_36:                              # %if.end138
	#DEBUG_VALUE: verify:xci <- %XMM0
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:m <- 0
	.loc	22 301 23               # verify.c:301:23
	movupd	(%r12), %xmm6
	.loc	22 301 29 is_stmt 0     # verify.c:301:29
	subpd	%xmm7, %xmm6
	.loc	22 301 40               # verify.c:301:40
	divpd	%xmm7, %xmm6
	.loc	22 301 17               # verify.c:301:17
	movapd	.LCPI17_54(%rip), %xmm7 # xmm7 = [9223372036854775807,9223372036854775807]
	andpd	%xmm7, %xmm6
	.loc	22 301 15               # verify.c:301:15
	movapd	%xmm6, 192(%rsp)
	.loc	22 302 23 is_stmt 1     # verify.c:302:23
	movupd	(%r15), %xmm6
	.loc	22 302 29 is_stmt 0     # verify.c:302:29
	subpd	%xmm3, %xmm6
	.loc	22 302 40               # verify.c:302:40
	divpd	%xmm3, %xmm6
	.loc	22 302 17               # verify.c:302:17
	andpd	%xmm7, %xmm6
	.loc	22 302 15               # verify.c:302:15
	movapd	%xmm6, 144(%rsp)
	.loc	22 301 23 is_stmt 1     # verify.c:301:23
	movupd	16(%r12), %xmm3
	.loc	22 301 29 is_stmt 0     # verify.c:301:29
	subpd	%xmm1, %xmm3
	.loc	22 301 40               # verify.c:301:40
	divpd	%xmm1, %xmm3
	.loc	22 301 17               # verify.c:301:17
	andpd	%xmm7, %xmm3
	.loc	22 301 15               # verify.c:301:15
	movapd	%xmm3, 208(%rsp)
	.loc	22 302 23 is_stmt 1     # verify.c:302:23
	movupd	16(%r15), %xmm1
	.loc	22 302 29 is_stmt 0     # verify.c:302:29
	subpd	%xmm2, %xmm1
	.loc	22 302 40               # verify.c:302:40
	divpd	%xmm2, %xmm1
	.loc	22 302 17               # verify.c:302:17
	andpd	%xmm7, %xmm1
	.loc	22 302 15               # verify.c:302:15
	movapd	%xmm1, 160(%rsp)
	.loc	22 301 23 is_stmt 1     # verify.c:301:23
	movsd	32(%r12), %xmm1         # xmm1 = mem[0],zero
	.loc	22 301 29 is_stmt 0     # verify.c:301:29
	subsd	%xmm5, %xmm1
	.loc	22 301 40               # verify.c:301:40
	divsd	%xmm5, %xmm1
	.loc	22 301 17               # verify.c:301:17
	andpd	%xmm7, %xmm1
	.loc	22 301 15               # verify.c:301:15
	movlpd	%xmm1, 224(%rsp)
	.loc	22 302 23 is_stmt 1     # verify.c:302:23
	movsd	32(%r15), %xmm1         # xmm1 = mem[0],zero
	.loc	22 302 29 is_stmt 0     # verify.c:302:29
	subsd	%xmm8, %xmm1
	.loc	22 302 40               # verify.c:302:40
	divsd	%xmm8, %xmm1
	.loc	22 302 17               # verify.c:302:17
	andpd	%xmm7, %xmm1
	.loc	22 302 15               # verify.c:302:15
	movlpd	%xmm1, 176(%rsp)
.Ltmp1237:
	.loc	22 304 22 is_stmt 1     # verify.c:304:22
	movapd	%xmm0, %xmm1
	subsd	%xmm4, %xmm1
	.loc	22 304 31 is_stmt 0     # verify.c:304:31
	divsd	%xmm4, %xmm1
	.loc	22 304 12               # verify.c:304:12
	andpd	%xmm7, %xmm1
.Ltmp1238:
	.loc	22 310 14 is_stmt 1     # verify.c:310:14
	movzbl	%al, %ecx
	cmpl	$85, %ecx
	jne	.LBB17_37
.Ltmp1239:
# BB#39:                                # %if.else180
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	movapd	%xmm1, 128(%rsp)        # 16-byte Spill
	movsd	%xmm4, 112(%rsp)        # 8-byte Spill
	movsd	%xmm0, 120(%rsp)        # 8-byte Spill
.Ltmp1240:
	.loc	22 319 5                # verify.c:319:5
	movl	$.Lstr.56, %edi
	callq	puts
	jmp	.LBB17_40
.Ltmp1241:
.LBB17_37:                              # %if.then169
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xci <- %XMM0
	movapd	%xmm1, 128(%rsp)        # 16-byte Spill
	movsd	%xmm4, 112(%rsp)        # 8-byte Spill
	movsd	%xmm0, 120(%rsp)        # 8-byte Spill
	.loc	22 310 7                # verify.c:310:7
	movsbl	%al, %esi
.Ltmp1242:
	.loc	22 311 5                # verify.c:311:5
	movl	$.L.str.53, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	22 312 5                # verify.c:312:5
	movsd	.LCPI17_55(%rip), %xmm0 # xmm0 = mem[0],zero
.Ltmp1243:
	movl	$.L.str.1.54, %edi
	movb	$1, %al
	callq	printf
	.loc	22 313 23               # verify.c:313:23
	movsd	dt(%rip), %xmm1         # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm0          # 8-byte Reload
                                        # xmm0 = mem[0],zero
	.loc	22 313 25 is_stmt 0     # verify.c:313:25
	subsd	%xmm0, %xmm1
	.loc	22 313 18               # verify.c:313:18
	andpd	.LCPI17_54(%rip), %xmm1
	.loc	22 312 5 is_stmt 1      # verify.c:312:5
	movsd	.LCPI17_55(%rip), %xmm2 # xmm2 = mem[0],zero
	.loc	22 313 33               # verify.c:313:33
	ucomisd	%xmm1, %xmm2
	setae	%al
	movzbl	%al, %eax
	.loc	22 313 15 is_stmt 0     # verify.c:313:15
	movl	%eax, (%r14)
	jae	.LBB17_40
.Ltmp1244:
# BB#38:                                # %if.then177
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	.loc	22 315 14 is_stmt 1     # verify.c:315:14
	movb	$85, (%r13)
	.loc	22 316 7                # verify.c:316:7
	movl	$.L.str.2.55, %edi
	movb	$1, %al
	callq	printf
.Ltmp1245:
.LBB17_40:                              # %if.end182
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xcidif <- [%RSP+128]
	.loc	22 322 14               # verify.c:322:14
	movzbl	(%r13), %eax
	cmpl	$85, %eax
	jne	.LBB17_41
.Ltmp1246:
# BB#42:                                # %if.else188
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xcidif <- [%RSP+128]
	.loc	22 325 5                # verify.c:325:5
	movl	$.Lstr.20, %edi
	jmp	.LBB17_43
.Ltmp1247:
.LBB17_41:                              # %if.then186
	#DEBUG_VALUE: verify:xcr <- %R12
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:xcidif <- [%RSP+128]
	.loc	22 323 5                # verify.c:323:5
	movl	$.Lstr.29, %edi
.Ltmp1248:
.LBB17_43:                              # %for.cond191.preheader
	#DEBUG_VALUE: verify:xcidif <- [%RSP+128]
	#DEBUG_VALUE: verify:verified <- %R14
	#DEBUG_VALUE: verify:Class <- %R13
	#DEBUG_VALUE: verify:xce <- %R15
	#DEBUG_VALUE: verify:xcr <- %R12
	.loc	22 325 5                # verify.c:325:5
	callq	puts
.Ltmp1249:
	.loc	22 329 16               # verify.c:329:16
	movzbl	(%r13), %eax
	cmpl	$85, %eax
	sete	%al
	xorl	%ebx, %ebx
.Ltmp1250:
	.p2align	4, 0x90
.LBB17_44:                              # %for.body194
                                        # =>This Inner Loop Header: Depth=1
	.loc	22 329 9 is_stmt 0      # verify.c:329:9
	testb	$1, %al
	je	.LBB17_46
# BB#45:                                # %if.then198
                                        #   in Loop: Header=BB17_44 Depth=1
.Ltmp1251:
	.loc	22 330 47 is_stmt 1     # verify.c:330:47
	movsd	(%r12,%rbx,8), %xmm0    # xmm0 = mem[0],zero
	.loc	22 330 43 is_stmt 0     # verify.c:330:43
	incq	%rbx
	.loc	22 330 7                # verify.c:330:7
	movl	$.L.str.6.57, %edi
	movb	$1, %al
	movl	%ebx, %esi
	callq	printf
	jmp	.LBB17_50
.Ltmp1252:
	.p2align	4, 0x90
.LBB17_46:                              # %if.else202
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	22 337 35 is_stmt 1     # verify.c:337:35
	movsd	192(%rsp,%rbx,8), %xmm2 # xmm2 = mem[0],zero
.Ltmp1253:
	.loc	22 331 26 discriminator 1 # verify.c:331:26
	movsd	.LCPI17_55(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	%xmm2, %xmm0
.Ltmp1254:
	.loc	22 337 24               # verify.c:337:24
	movsd	64(%rsp,%rbx,8), %xmm1  # xmm1 = mem[0],zero
	jae	.LBB17_47
# BB#48:                                # %if.else216
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	22 335 17               # verify.c:335:17
	movl	$0, (%r14)
	.loc	22 337 16               # verify.c:337:16
	movsd	(%r12,%rbx,8), %xmm0    # xmm0 = mem[0],zero
	.loc	22 337 12 is_stmt 0     # verify.c:337:12
	incq	%rbx
	.loc	22 336 7 is_stmt 1      # verify.c:336:7
	movl	$.L.str.8.59, %edi
	jmp	.LBB17_49
.Ltmp1255:
	.p2align	4, 0x90
.LBB17_47:                              # %if.then207
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	22 333 16               # verify.c:333:16
	movsd	(%r12,%rbx,8), %xmm0    # xmm0 = mem[0],zero
	.loc	22 333 12 is_stmt 0     # verify.c:333:12
	incq	%rbx
	.loc	22 332 7 is_stmt 1      # verify.c:332:7
	movl	$.L.str.7.58, %edi
.Ltmp1256:
.LBB17_49:                              # %for.inc227
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	22 336 7                # verify.c:336:7
	movb	$3, %al
	movl	%ebx, %esi
	callq	printf
.Ltmp1257:
.LBB17_50:                              # %for.inc227
                                        #   in Loop: Header=BB17_44 Depth=1
	.loc	22 329 16               # verify.c:329:16
	movzbl	(%r13), %ecx
	cmpl	$85, %ecx
	sete	%al
.Ltmp1258:
	.loc	22 328 3 discriminator 1 # verify.c:328:3
	cmpq	$5, %rbx
	jne	.LBB17_44
.Ltmp1259:
# BB#51:                                # %for.end229
	movzbl	%cl, %eax
	cmpl	$85, %eax
	jne	.LBB17_52
# BB#53:                                # %if.else235
.Ltmp1260:
	.loc	22 344 5                # verify.c:344:5
	movl	$.Lstr.21, %edi
	jmp	.LBB17_54
.Ltmp1261:
.LBB17_52:                              # %if.then233
	.loc	22 342 5                # verify.c:342:5
	movl	$.Lstr.28, %edi
.Ltmp1262:
.LBB17_54:                              # %for.cond238.preheader
	.loc	22 344 5                # verify.c:344:5
	callq	puts
.Ltmp1263:
	.loc	22 348 16               # verify.c:348:16
	movzbl	(%r13), %eax
	cmpl	$85, %eax
	sete	%al
	xorl	%ebx, %ebx
.Ltmp1264:
	.p2align	4, 0x90
.LBB17_55:                              # %for.body241
                                        # =>This Inner Loop Header: Depth=1
	.loc	22 348 9 is_stmt 0      # verify.c:348:9
	testb	$1, %al
	je	.LBB17_57
# BB#56:                                # %if.then245
                                        #   in Loop: Header=BB17_55 Depth=1
.Ltmp1265:
	.loc	22 349 47 is_stmt 1     # verify.c:349:47
	movsd	(%r15,%rbx,8), %xmm0    # xmm0 = mem[0],zero
	.loc	22 349 43 is_stmt 0     # verify.c:349:43
	incq	%rbx
	.loc	22 349 7                # verify.c:349:7
	movl	$.L.str.6.57, %edi
	movb	$1, %al
	movl	%ebx, %esi
	callq	printf
	jmp	.LBB17_61
.Ltmp1266:
	.p2align	4, 0x90
.LBB17_57:                              # %if.else250
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	22 356 35 is_stmt 1     # verify.c:356:35
	movsd	144(%rsp,%rbx,8), %xmm2 # xmm2 = mem[0],zero
.Ltmp1267:
	.loc	22 331 26 discriminator 1 # verify.c:331:26
	movsd	.LCPI17_55(%rip), %xmm0 # xmm0 = mem[0],zero
.Ltmp1268:
	.loc	22 350 26 discriminator 1 # verify.c:350:26
	ucomisd	%xmm2, %xmm0
.Ltmp1269:
	.loc	22 356 24               # verify.c:356:24
	movsd	16(%rsp,%rbx,8), %xmm1  # xmm1 = mem[0],zero
	jae	.LBB17_58
# BB#59:                                # %if.else264
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	22 354 17               # verify.c:354:17
	movl	$0, (%r14)
	.loc	22 356 16               # verify.c:356:16
	movsd	(%r15,%rbx,8), %xmm0    # xmm0 = mem[0],zero
	.loc	22 356 12 is_stmt 0     # verify.c:356:12
	incq	%rbx
	.loc	22 355 7 is_stmt 1      # verify.c:355:7
	movl	$.L.str.8.59, %edi
	jmp	.LBB17_60
.Ltmp1270:
	.p2align	4, 0x90
.LBB17_58:                              # %if.then255
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	22 352 16               # verify.c:352:16
	movsd	(%r15,%rbx,8), %xmm0    # xmm0 = mem[0],zero
	.loc	22 352 12 is_stmt 0     # verify.c:352:12
	incq	%rbx
	.loc	22 351 7 is_stmt 1      # verify.c:351:7
	movl	$.L.str.7.58, %edi
.Ltmp1271:
.LBB17_60:                              # %for.inc275
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	22 355 7                # verify.c:355:7
	movb	$3, %al
	movl	%ebx, %esi
	callq	printf
.Ltmp1272:
.LBB17_61:                              # %for.inc275
                                        #   in Loop: Header=BB17_55 Depth=1
	.loc	22 348 16               # verify.c:348:16
	movzbl	(%r13), %ecx
	cmpl	$85, %ecx
	sete	%al
.Ltmp1273:
	.loc	22 347 3 discriminator 1 # verify.c:347:3
	cmpq	$5, %rbx
	jne	.LBB17_55
.Ltmp1274:
# BB#62:                                # %for.end277
	movzbl	%cl, %eax
	cmpl	$85, %eax
	jne	.LBB17_63
# BB#64:                                # %if.else283
.Ltmp1275:
	.loc	22 363 5                # verify.c:363:5
	movl	$.Lstr.22, %edi
	jmp	.LBB17_65
.Ltmp1276:
.LBB17_63:                              # %if.then281
	.loc	22 361 5                # verify.c:361:5
	movl	$.Lstr.27, %edi
.Ltmp1277:
.LBB17_65:                              # %if.end285
	.loc	22 363 5                # verify.c:363:5
	callq	puts
	movsd	120(%rsp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	112(%rsp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movaps	128(%rsp), %xmm2        # 16-byte Reload
.Ltmp1278:
	.loc	22 366 7                # verify.c:366:7
	movzbl	(%r13), %eax
	cmpl	$85, %eax
	jne	.LBB17_67
# BB#66:                                # %if.then289
.Ltmp1279:
	.loc	22 367 5                # verify.c:367:5
	movl	$.L.str.13.60, %edi
	movb	$1, %al
	callq	printf
	jmp	.LBB17_71
.Ltmp1280:
.LBB17_67:                              # %if.else291
	.loc	22 331 26 discriminator 1 # verify.c:331:26
	movsd	.LCPI17_55(%rip), %xmm3 # xmm3 = mem[0],zero
.Ltmp1281:
	.loc	22 368 21 discriminator 1 # verify.c:368:21
	ucomisd	%xmm2, %xmm3
	jae	.LBB17_68
# BB#69:                                # %if.else296
.Ltmp1282:
	.loc	22 371 15               # verify.c:371:15
	movl	$0, (%r14)
	.loc	22 372 5                # verify.c:372:5
	movl	$.L.str.15.62, %edi
	jmp	.LBB17_70
.Ltmp1283:
.LBB17_68:                              # %if.then294
	.loc	22 369 5                # verify.c:369:5
	movl	$.L.str.14.61, %edi
.Ltmp1284:
.LBB17_70:                              # %if.end299
	.loc	22 372 5                # verify.c:372:5
	movb	$3, %al
	callq	printf
.Ltmp1285:
.LBB17_71:                              # %if.end299
	.loc	22 375 7                # verify.c:375:7
	movzbl	(%r13), %eax
	cmpl	$85, %eax
	jne	.LBB17_73
# BB#72:                                # %if.then303
.Ltmp1286:
	.loc	22 376 5                # verify.c:376:5
	movl	$.Lstr.25, %edi
	callq	puts
	.loc	22 377 5                # verify.c:377:5
	movl	$.Lstr.26, %edi
	jmp	.LBB17_76
.Ltmp1287:
.LBB17_73:                              # %if.else306
	.loc	22 378 14 discriminator 1 # verify.c:378:14
	cmpl	$0, (%r14)
	je	.LBB17_75
# BB#74:                                # %if.then308
.Ltmp1288:
	.loc	22 379 5                # verify.c:379:5
	movl	$.Lstr.24, %edi
	jmp	.LBB17_76
.Ltmp1289:
.LBB17_75:                              # %if.else310
	.loc	22 381 5                # verify.c:381:5
	movl	$.Lstr.23, %edi
.LBB17_76:                              # %if.end313
	callq	puts
.Ltmp1290:
	.loc	22 383 1                # verify.c:383:1
	addq	$240, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.Ltmp1291:
.Lfunc_end17:
	.size	verify, .Lfunc_end17-verify
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI18_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	print_results
	.p2align	4, 0x90
	.type	print_results,@function
print_results:                          # @print_results
.Lfunc_begin18:
	.file	23 "/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common/print_results.c"
	.loc	23 10 0                 # print_results.c:10:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1292:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp1293:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp1294:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp1295:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp1296:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp1297:
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
.Ltmp1298:
	.cfi_def_cfa_offset 96
.Ltmp1299:
	.cfi_offset %rbx, -56
.Ltmp1300:
	.cfi_offset %r12, -48
.Ltmp1301:
	.cfi_offset %r13, -40
.Ltmp1302:
	.cfi_offset %r14, -32
.Ltmp1303:
	.cfi_offset %r15, -24
.Ltmp1304:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: print_results:name <- %RDI
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:n1 <- %EDX
	#DEBUG_VALUE: print_results:n2 <- %ECX
	#DEBUG_VALUE: print_results:n3 <- %R8D
	#DEBUG_VALUE: print_results:niter <- %R9D
	#DEBUG_VALUE: print_results:t <- %XMM0
	#DEBUG_VALUE: print_results:mops <- %XMM1
	movsd	%xmm1, 8(%rsp)          # 8-byte Spill
.Ltmp1305:
	#DEBUG_VALUE: print_results:mops <- [%RSP+8]
	movsd	%xmm0, (%rsp)           # 8-byte Spill
.Ltmp1306:
	#DEBUG_VALUE: print_results:t <- [%RSP+0]
	movl	%r9d, %r14d
.Ltmp1307:
	#DEBUG_VALUE: print_results:niter <- %R14D
	movl	%r8d, %r12d
.Ltmp1308:
	#DEBUG_VALUE: print_results:n3 <- %R12D
	movl	%ecx, %r13d
.Ltmp1309:
	#DEBUG_VALUE: print_results:n2 <- %R13D
	movl	%edx, %r15d
.Ltmp1310:
	#DEBUG_VALUE: print_results:n1 <- %R15D
	movl	%esi, %ebx
.Ltmp1311:
	#DEBUG_VALUE: print_results:class <- %EBX
	movq	%rdi, %rbp
	#DEBUG_VALUE: print_results:optype <- undef
	#DEBUG_VALUE: print_results:verified <- undef
.Ltmp1312:
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	23 14 3 prologue_end    # print_results.c:14:3
	movl	$.L.str.24, %edi
	xorl	%eax, %eax
	movq	%rbp, %rsi
	callq	printf
.Ltmp1313:
	.loc	23 15 3                 # print_results.c:15:3
	movl	$.L.str.1.25, %edi
	xorl	%eax, %eax
	movl	%ebx, %esi
.Ltmp1314:
	#DEBUG_VALUE: print_results:class <- %ESI
	callq	printf
.Ltmp1315:
	.loc	23 22 20                # print_results.c:22:20
	movl	%r12d, %eax
	orl	%r13d, %eax
	je	.LBB18_1
.Ltmp1316:
# BB#7:                                 # %if.else30
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	23 36 5                 # print_results.c:36:5
	movl	$.L.str.5.29, %edi
	xorl	%eax, %eax
	movl	%r15d, %esi
.Ltmp1317:
	movl	%r13d, %edx
	movl	%r12d, %ecx
	callq	printf
	jmp	.LBB18_8
.Ltmp1318:
.LBB18_1:                               # %if.then
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	23 23 29                # print_results.c:23:29
	movzbl	(%rbp), %eax
	cmpl	$69, %eax
	jne	.LBB18_6
.Ltmp1319:
# BB#2:                                 # %land.lhs.true8
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:class <- %ESI
	.loc	23 23 10 is_stmt 0 discriminator 1 # print_results.c:23:10
	movzbl	1(%rbp), %eax
	cmpl	$80, %eax
	jne	.LBB18_6
.Ltmp1320:
# BB#3:                                 # %if.then13
	#DEBUG_VALUE: print_results:class <- %ESI
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:niter <- %R14D
	.loc	23 24 33 is_stmt 1      # print_results.c:24:33
	movsd	.LCPI18_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movl	%r15d, %edi
	callq	ldexp
	leaq	16(%rsp), %rdi
	.loc	23 24 7 is_stmt 0 discriminator 1 # print_results.c:24:7
	movl	$.L.str.2.26, %esi
.Ltmp1321:
	movb	$1, %al
	callq	sprintf
	movl	$15, %eax
.Ltmp1322:
	#DEBUG_VALUE: print_results:j <- 14
	.loc	23 26 12 is_stmt 1      # print_results.c:26:12
	movzbl	30(%rsp), %ecx
	cmpl	$46, %ecx
	jne	.LBB18_5
.Ltmp1323:
# BB#4:                                 # %if.then21
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	23 27 17                # print_results.c:27:17
	movb	$32, 30(%rsp)
	movl	$14, %eax
.Ltmp1324:
	#DEBUG_VALUE: print_results:j <- 13
.LBB18_5:                               # %if.end
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	.loc	23 30 17                # print_results.c:30:17
	movb	$0, 16(%rsp,%rax)
	leaq	16(%rsp), %rsi
	.loc	23 31 7                 # print_results.c:31:7
	movl	$.L.str.3.27, %edi
	xorl	%eax, %eax
	callq	printf
	jmp	.LBB18_8
.Ltmp1325:
.LBB18_6:                               # %if.else
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:class <- %ESI
	.loc	23 33 7                 # print_results.c:33:7
	movl	$.L.str.4.28, %edi
	xorl	%eax, %eax
	movl	%r15d, %esi
.Ltmp1326:
	callq	printf
.Ltmp1327:
.LBB18_8:                               # %if.end32
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:n3 <- %R12D
	#DEBUG_VALUE: print_results:n2 <- %R13D
	#DEBUG_VALUE: print_results:n1 <- %R15D
	#DEBUG_VALUE: print_results:name <- %RBP
	#DEBUG_VALUE: print_results:cs7 <- undef
	movq	168(%rsp), %r12
.Ltmp1328:
	#DEBUG_VALUE: print_results:cs6 <- %R12
	movq	160(%rsp), %r13
.Ltmp1329:
	#DEBUG_VALUE: print_results:cs5 <- %R13
	movq	152(%rsp), %r15
.Ltmp1330:
	#DEBUG_VALUE: print_results:cs4 <- %R15
	movq	144(%rsp), %rbp
.Ltmp1331:
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	movq	136(%rsp), %rbx
	#DEBUG_VALUE: print_results:npbversion <- undef
	#DEBUG_VALUE: print_results:compiletime <- undef
	#DEBUG_VALUE: print_results:cs1 <- undef
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	.loc	23 39 3                 # print_results.c:39:3
	movl	$.L.str.6.30, %edi
	xorl	%eax, %eax
	movl	%r14d, %esi
	callq	printf
	.loc	23 40 3                 # print_results.c:40:3
	movl	$.L.str.7.31, %edi
	movb	$1, %al
	movsd	(%rsp), %xmm0           # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	printf
	.loc	23 41 3                 # print_results.c:41:3
	movl	$.L.str.8.32, %edi
	movb	$1, %al
	movsd	8(%rsp), %xmm0          # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	printf
	.loc	23 42 3                 # print_results.c:42:3
	movl	$.L.str.9.33, %edi
	xorl	%eax, %eax
	movq	96(%rsp), %rsi
	callq	printf
.Ltmp1332:
	.loc	23 46 5                 # print_results.c:46:5
	movl	$.L.str.10.34, %edi
	.loc	23 43 8                 # print_results.c:43:8
	cmpl	$0, 104(%rsp)
.Ltmp1333:
	.loc	23 43 8 is_stmt 0       # print_results.c:43:8
	je	.LBB18_10
.Ltmp1334:
# BB#9:                                 # %if.then37
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs6 <- %R12
	.loc	23 44 5 is_stmt 1       # print_results.c:44:5
	movl	$.L.str.11.35, %esi
	jmp	.LBB18_11
.Ltmp1335:
.LBB18_10:                              # %if.else39
	#DEBUG_VALUE: print_results:niter <- %R14D
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs6 <- %R12
	.loc	23 46 5                 # print_results.c:46:5
	movl	$.L.str.12.36, %esi
.Ltmp1336:
.LBB18_11:                              # %if.end41
	#DEBUG_VALUE: print_results:cs6 <- %R12
	#DEBUG_VALUE: print_results:cs5 <- %R13
	#DEBUG_VALUE: print_results:cs4 <- %R15
	#DEBUG_VALUE: print_results:cs3 <- %RBP
	#DEBUG_VALUE: print_results:cs2 <- %RBX
	#DEBUG_VALUE: print_results:niter <- %R14D
	xorl	%eax, %eax
	callq	printf
	movq	176(%rsp), %r14
.Ltmp1337:
	movq	112(%rsp), %rsi
.Ltmp1338:
	.loc	23 47 3                 # print_results.c:47:3
	movl	$.L.str.13.37, %edi
	xorl	%eax, %eax
	callq	printf
	.loc	23 48 3                 # print_results.c:48:3
	movl	$.L.str.14.38, %edi
	xorl	%eax, %eax
	movq	120(%rsp), %rsi
	callq	printf
	.loc	23 50 3                 # print_results.c:50:3
	movl	$.L.str.15.39, %edi
	xorl	%eax, %eax
	movq	128(%rsp), %rsi
	callq	printf
	.loc	23 52 3                 # print_results.c:52:3
	movl	$.L.str.16.40, %edi
	xorl	%eax, %eax
	movq	%rbx, %rsi
	callq	printf
	.loc	23 53 3                 # print_results.c:53:3
	movl	$.L.str.17.41, %edi
	xorl	%eax, %eax
	movq	%rbp, %rsi
	callq	printf
	.loc	23 54 3                 # print_results.c:54:3
	movl	$.L.str.18.42, %edi
	xorl	%eax, %eax
	movq	%r15, %rsi
	callq	printf
	.loc	23 55 3                 # print_results.c:55:3
	movl	$.L.str.19.43, %edi
	xorl	%eax, %eax
	movq	%r13, %rsi
	callq	printf
	.loc	23 56 3                 # print_results.c:56:3
	movl	$.L.str.20.44, %edi
	xorl	%eax, %eax
	movq	%r12, %rsi
	callq	printf
	.loc	23 57 3                 # print_results.c:57:3
	movl	$.L.str.21.45, %edi
	xorl	%eax, %eax
	movq	%r14, %rsi
	callq	printf
	.loc	23 59 3                 # print_results.c:59:3
	movl	$.Lstr.46, %edi
	callq	puts
	.loc	23 65 1                 # print_results.c:65:1
	addq	$40, %rsp
	popq	%rbx
.Ltmp1339:
	popq	%r12
.Ltmp1340:
	popq	%r13
.Ltmp1341:
	popq	%r14
	popq	%r15
.Ltmp1342:
	popq	%rbp
.Ltmp1343:
	retq
.Ltmp1344:
.Lfunc_end18:
	.size	print_results, .Lfunc_end18-print_results
	.cfi_endproc

	.globl	timer_clear
	.p2align	4, 0x90
	.type	timer_clear,@function
timer_clear:                            # @timer_clear
.Lfunc_begin19:
	.loc	4 26 0                  # c_timers.c:26:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: timer_clear:n <- %EDI
	.loc	4 27 5 prologue_end     # c_timers.c:27:5
	movslq	%edi, %rax
	.loc	4 27 16 is_stmt 0       # c_timers.c:27:16
	movq	$0, elapsed(,%rax,8)
	.loc	4 28 1 is_stmt 1        # c_timers.c:28:1
	retq
.Ltmp1345:
.Lfunc_end19:
	.size	timer_clear, .Lfunc_end19-timer_clear
	.cfi_endproc

	.globl	timer_start
	.p2align	4, 0x90
	.type	timer_start,@function
timer_start:                            # @timer_start
.Lfunc_begin20:
	.loc	4 35 0                  # c_timers.c:35:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1346:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1347:
	.cfi_def_cfa_offset 32
.Ltmp1348:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: timer_start:n <- %EDI
	movl	%edi, %ebx
.Ltmp1349:
	#DEBUG_VALUE: timer_start:n <- %EBX
	leaq	8(%rsp), %rdi
.Ltmp1350:
	#DEBUG_VALUE: elapsed_time:t <- [%RDI+0]
	.loc	4 15 5 prologue_end     # c_timers.c:15:5
	callq	wtime_
	.loc	4 16 13                 # c_timers.c:16:13
	movq	8(%rsp), %rax
.Ltmp1351:
	.loc	4 36 5                  # c_timers.c:36:5
	movslq	%ebx, %rcx
	.loc	4 36 14 is_stmt 0       # c_timers.c:36:14
	movq	%rax, start(,%rcx,8)
	.loc	4 37 1 is_stmt 1        # c_timers.c:37:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1352:
	retq
.Ltmp1353:
.Lfunc_end20:
	.size	timer_start, .Lfunc_end20-timer_start
	.cfi_endproc

	.globl	timer_stop
	.p2align	4, 0x90
	.type	timer_stop,@function
timer_stop:                             # @timer_stop
.Lfunc_begin21:
	.loc	4 44 0                  # c_timers.c:44:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1354:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1355:
	.cfi_def_cfa_offset 32
.Ltmp1356:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: timer_stop:n <- %EDI
	movl	%edi, %ebx
.Ltmp1357:
	#DEBUG_VALUE: timer_stop:n <- %EBX
	leaq	8(%rsp), %rdi
.Ltmp1358:
	#DEBUG_VALUE: elapsed_time:t <- [%RDI+0]
	.loc	4 15 5 prologue_end     # c_timers.c:15:5
	callq	wtime_
	.loc	4 16 13                 # c_timers.c:16:13
	movsd	8(%rsp), %xmm0          # xmm0 = mem[0],zero
.Ltmp1359:
	#DEBUG_VALUE: elapsed_time:t <- %XMM0
	#DEBUG_VALUE: timer_stop:now <- %XMM0
	.loc	4 48 15                 # c_timers.c:48:15
	movslq	%ebx, %rax
	.loc	4 48 13 is_stmt 0       # c_timers.c:48:13
	subsd	start(,%rax,8), %xmm0
.Ltmp1360:
	#DEBUG_VALUE: timer_stop:t <- %XMM0
	.loc	4 49 16 is_stmt 1       # c_timers.c:49:16
	addsd	elapsed(,%rax,8), %xmm0
.Ltmp1361:
	movsd	%xmm0, elapsed(,%rax,8)
	.loc	4 51 1                  # c_timers.c:51:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1362:
	retq
.Ltmp1363:
.Lfunc_end21:
	.size	timer_stop, .Lfunc_end21-timer_stop
	.cfi_endproc

	.globl	timer_read
	.p2align	4, 0x90
	.type	timer_read,@function
timer_read:                             # @timer_read
.Lfunc_begin22:
	.loc	4 58 0                  # c_timers.c:58:0
	.cfi_startproc
# BB#0:                                 # %entry
	#DEBUG_VALUE: timer_read:n <- %EDI
	.loc	4 59 13 prologue_end    # c_timers.c:59:13
	movslq	%edi, %rax
	movsd	elapsed(,%rax,8), %xmm0 # xmm0 = mem[0],zero
	.loc	4 59 5 is_stmt 0        # c_timers.c:59:5
	retq
.Ltmp1364:
.Lfunc_end22:
	.size	timer_read, .Lfunc_end22-timer_read
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI23_0:
	.quad	4517329193108106637     # double 9.9999999999999995E-7
	.text
	.globl	wtime_
	.p2align	4, 0x90
	.type	wtime_,@function
wtime_:                                 # @wtime_
.Lfunc_begin23:
	.loc	5 8 0 is_stmt 1         # ../common/wtime.c:8:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbx
.Ltmp1365:
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
.Ltmp1366:
	.cfi_def_cfa_offset 32
.Ltmp1367:
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: wtime_:t <- %RDI
	movq	%rdi, %rbx
.Ltmp1368:
	#DEBUG_VALUE: wtime_:t <- %RBX
	leaq	(%rsp), %rdi
.Ltmp1369:
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	.loc	5 11 3 prologue_end     # ../common/wtime.c:11:3
	xorl	%esi, %esi
	callq	gettimeofday
.Ltmp1370:
	.loc	5 12 7                  # ../common/wtime.c:12:7
	movl	wtime_.sec(%rip), %ecx
	.loc	5 12 25 is_stmt 0 discriminator 1 # ../common/wtime.c:12:25
	movq	(%rsp), %rax
.Ltmp1371:
	.loc	5 12 7                  # ../common/wtime.c:12:7
	testl	%ecx, %ecx
	jns	.LBB23_2
.Ltmp1372:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	#DEBUG_VALUE: wtime_:t <- %RBX
	.loc	5 12 20 discriminator 1 # ../common/wtime.c:12:20
	movl	%eax, wtime_.sec(%rip)
.Ltmp1373:
	.loc	5 13 21 is_stmt 1       # ../common/wtime.c:13:21
	movl	%eax, %ecx
.Ltmp1374:
.LBB23_2:                               # %if.end
	#DEBUG_VALUE: wtime_:tv <- [%RDI+0]
	#DEBUG_VALUE: wtime_:t <- %RBX
	movslq	%ecx, %rcx
	.loc	5 13 19 is_stmt 0       # ../common/wtime.c:13:19
	subq	%rcx, %rax
	.loc	5 13 8                  # ../common/wtime.c:13:8
	cvtsi2sdq	%rax, %xmm0
	.loc	5 13 35                 # ../common/wtime.c:13:35
	cvtsi2sdq	8(%rsp), %xmm1
	.loc	5 13 34                 # ../common/wtime.c:13:34
	mulsd	.LCPI23_0(%rip), %xmm1
	.loc	5 13 26                 # ../common/wtime.c:13:26
	addsd	%xmm0, %xmm1
	.loc	5 13 6                  # ../common/wtime.c:13:6
	movsd	%xmm1, (%rbx)
	.loc	5 14 1 is_stmt 1        # ../common/wtime.c:14:1
	addq	$16, %rsp
	popq	%rbx
.Ltmp1375:
	retq
.Ltmp1376:
.Lfunc_end23:
	.size	wtime_, .Lfunc_end23-wtime_
	.cfi_endproc

	.type	timeron,@object         # @timeron
	.comm	timeron,4,4
	.type	itmax,@object           # @itmax
	.comm	itmax,4,4
	.type	rsdnm,@object           # @rsdnm
	.comm	rsdnm,40,16
	.type	errnm,@object           # @errnm
	.comm	errnm,40,16
	.type	frc,@object             # @frc
	.comm	frc,8,8
	.type	nx0,@object             # @nx0
	.comm	nx0,4,4
	.type	ny0,@object             # @ny0
	.comm	ny0,4,4
	.type	nz0,@object             # @nz0
	.comm	nz0,4,4
	.type	maxtime,@object         # @maxtime
	.comm	maxtime,8,8
	.type	dxi,@object             # @dxi
	.comm	dxi,8,8
	.type	deta,@object            # @deta
	.comm	deta,8,8
	.type	dzeta,@object           # @dzeta
	.comm	dzeta,8,8
	.type	tx1,@object             # @tx1
	.comm	tx1,8,8
	.type	tx2,@object             # @tx2
	.comm	tx2,8,8
	.type	tx3,@object             # @tx3
	.comm	tx3,8,8
	.type	ty1,@object             # @ty1
	.comm	ty1,8,8
	.type	ty2,@object             # @ty2
	.comm	ty2,8,8
	.type	ty3,@object             # @ty3
	.comm	ty3,8,8
	.type	tz1,@object             # @tz1
	.comm	tz1,8,8
	.type	tz2,@object             # @tz2
	.comm	tz2,8,8
	.type	tz3,@object             # @tz3
	.comm	tz3,8,8
	.type	nx,@object              # @nx
	.comm	nx,4,4
	.type	ny,@object              # @ny
	.comm	ny,4,4
	.type	nz,@object              # @nz
	.comm	nz,4,4
	.type	ist,@object             # @ist
	.comm	ist,4,4
	.type	iend,@object            # @iend
	.comm	iend,4,4
	.type	jst,@object             # @jst
	.comm	jst,4,4
	.type	jend,@object            # @jend
	.comm	jend,4,4
	.type	ii1,@object             # @ii1
	.comm	ii1,4,4
	.type	ii2,@object             # @ii2
	.comm	ii2,4,4
	.type	ji1,@object             # @ji1
	.comm	ji1,4,4
	.type	ji2,@object             # @ji2
	.comm	ji2,4,4
	.type	ki1,@object             # @ki1
	.comm	ki1,4,4
	.type	ki2,@object             # @ki2
	.comm	ki2,4,4
	.type	dx1,@object             # @dx1
	.comm	dx1,8,8
	.type	dx2,@object             # @dx2
	.comm	dx2,8,8
	.type	dx3,@object             # @dx3
	.comm	dx3,8,8
	.type	dx4,@object             # @dx4
	.comm	dx4,8,8
	.type	dx5,@object             # @dx5
	.comm	dx5,8,8
	.type	dy1,@object             # @dy1
	.comm	dy1,8,8
	.type	dy2,@object             # @dy2
	.comm	dy2,8,8
	.type	dy3,@object             # @dy3
	.comm	dy3,8,8
	.type	dy4,@object             # @dy4
	.comm	dy4,8,8
	.type	dy5,@object             # @dy5
	.comm	dy5,8,8
	.type	dz1,@object             # @dz1
	.comm	dz1,8,8
	.type	dz2,@object             # @dz2
	.comm	dz2,8,8
	.type	dz3,@object             # @dz3
	.comm	dz3,8,8
	.type	dz4,@object             # @dz4
	.comm	dz4,8,8
	.type	dz5,@object             # @dz5
	.comm	dz5,8,8
	.type	dssp,@object            # @dssp
	.comm	dssp,8,8
	.type	u,@object               # @u
	.comm	u,10816000,16
	.type	rsd,@object             # @rsd
	.comm	rsd,10816000,16
	.type	frct,@object            # @frct
	.comm	frct,10816000,16
	.type	flux,@object            # @flux
	.comm	flux,2560,16
	.type	qs,@object              # @qs
	.comm	qs,2163200,16
	.type	rho_i,@object           # @rho_i
	.comm	rho_i,2163200,16
	.type	ipr,@object             # @ipr
	.comm	ipr,4,4
	.type	inorm,@object           # @inorm
	.comm	inorm,4,4
	.type	dt,@object              # @dt
	.comm	dt,8,8
	.type	omega,@object           # @omega
	.comm	omega,8,8
	.type	tolrsd,@object          # @tolrsd
	.comm	tolrsd,40,16
	.type	ttotal,@object          # @ttotal
	.comm	ttotal,8,8
	.type	invert,@object          # @invert
	.comm	invert,4,4
	.type	a,@object               # @a
	.comm	a,832000,16
	.type	b,@object               # @b
	.comm	b,832000,16
	.type	c,@object               # @c
	.comm	c,832000,16
	.type	d,@object               # @d
	.comm	d,832000,16
	.type	ce,@object              # @ce
	.comm	ce,520,16
	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"timer.flag"
	.size	.L.str, 11

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"r"
	.size	.L.str.1, 2

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"total"
	.size	.L.str.2, 6

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"rhsx"
	.size	.L.str.3, 5

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"rhsy"
	.size	.L.str.4, 5

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"rhsz"
	.size	.L.str.5, 5

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"rhs"
	.size	.L.str.6, 4

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"jacld"
	.size	.L.str.7, 6

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"blts"
	.size	.L.str.8, 5

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"jacu"
	.size	.L.str.9, 5

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"buts"
	.size	.L.str.10, 5

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"add"
	.size	.L.str.11, 4

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"l2norm"
	.size	.L.str.12, 7

	.type	.Lstr.3,@object         # @str.3
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.3:
	.asciz	"\n\n NAS Parallel Benchmarks (NPB3.3-SER-C) - LU Benchmark\n"
	.size	.Lstr.3, 58

	.type	.L.str.1.4,@object      # @.str.1.4
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1.4:
	.asciz	"inputlu.data"
	.size	.L.str.1.4, 13

	.type	.L.str.2.5,@object      # @.str.2.5
.L.str.2.5:
	.asciz	"r"
	.size	.L.str.2.5, 2

	.type	.Lstr.16,@object        # @str.16
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.16:
	.asciz	"Reading from input file inputlu.data"
	.size	.Lstr.16, 37

	.type	.L.str.4.6,@object      # @.str.4.6
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.4.6:
	.asciz	"%d%d"
	.size	.L.str.4.6, 5

	.type	.L.str.5.7,@object      # @.str.5.7
.L.str.5.7:
	.asciz	"%d"
	.size	.L.str.5.7, 3

	.type	.L.str.6.8,@object      # @.str.6.8
.L.str.6.8:
	.asciz	"%lf"
	.size	.L.str.6.8, 4

	.type	.L.str.7.9,@object      # @.str.7.9
.L.str.7.9:
	.asciz	"%lf%lf%lf%lf%lf"
	.size	.L.str.7.9, 16

	.type	.L.str.8.10,@object     # @.str.8.10
.L.str.8.10:
	.asciz	"%d%d%d"
	.size	.L.str.8.10, 7

	.type	.Lstr.15,@object        # @str.15
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.15:
	.asciz	"     PROBLEM SIZE IS TOO SMALL - \n     SET EACH OF NX, NY AND NZ AT LEAST EQUAL TO 5"
	.size	.Lstr.15, 85

	.type	.Lstr.14,@object        # @str.14
	.p2align	4
.Lstr.14:
	.asciz	"     PROBLEM SIZE IS TOO LARGE - \n     NX, NY AND NZ SHOULD BE EQUAL TO \n     ISIZ1, ISIZ2 AND ISIZ3 RESPECTIVELY"
	.size	.Lstr.14, 114

	.type	.L.str.11.11,@object    # @.str.11.11
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.11.11:
	.asciz	" Size: %4dx%4dx%4d\n"
	.size	.L.str.11.11, 20

	.type	.L.str.12.12,@object    # @.str.12.12
.L.str.12.12:
	.asciz	" Iterations: %4d\n"
	.size	.L.str.12.12, 18

	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"     SUBDOMAIN SIZE IS TOO SMALL - \n     ADJUST PROBLEM SIZE OR NUMBER OF PROCESSORS\n     SO THAT NX, NY AND NZ ARE GREATER THAN OR EQUAL\n     TO 4 THEY ARE CURRENTLY%3d%3d%3d\n"
	.size	.L.str.19, 177

	.type	.L.str.1.20,@object     # @.str.1.20
.L.str.1.20:
	.asciz	"     SUBDOMAIN SIZE IS TOO LARGE - \n     ADJUST PROBLEM SIZE OR NUMBER OF PROCESSORS\n     SO THAT NX, NY AND NZ ARE LESS THAN OR EQUAL TO \n     ISIZ1, ISIZ2 AND ISIZ3 RESPECTIVELY.  THEY ARE\n     CURRENTLYi%4d%4d%4d\n"
	.size	.L.str.1.20, 217

	.type	.L.str.33,@object       # @.str.33
.L.str.33:
	.asciz	" Time step %4d\n"
	.size	.L.str.33, 16

	.type	.L.str.1.34,@object     # @.str.1.34
.L.str.1.34:
	.asciz	" \n convergence was achieved after %4d pseudo-time steps\n"
	.size	.L.str.1.34, 57

	.type	.L.str.53,@object       # @.str.53
.L.str.53:
	.asciz	"\n Verification being performed for class %c\n"
	.size	.L.str.53, 45

	.type	.L.str.1.54,@object     # @.str.1.54
.L.str.1.54:
	.asciz	" Accuracy setting for epsilon = %20.13E\n"
	.size	.L.str.1.54, 41

	.type	.L.str.2.55,@object     # @.str.2.55
.L.str.2.55:
	.asciz	" DT does not match the reference value of %15.8E\n"
	.size	.L.str.2.55, 50

	.type	.Lstr.56,@object        # @str.56
.Lstr.56:
	.asciz	" Unknown class"
	.size	.Lstr.56, 15

	.type	.Lstr.29,@object        # @str.29
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.29:
	.asciz	" Comparison of RMS-norms of residual"
	.size	.Lstr.29, 37

	.type	.Lstr.20,@object        # @str.20
	.p2align	4
.Lstr.20:
	.asciz	" RMS-norms of residual"
	.size	.Lstr.20, 23

	.type	.L.str.6.57,@object     # @.str.6.57
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.6.57:
	.asciz	"          %2d  %20.13E\n"
	.size	.L.str.6.57, 24

	.type	.L.str.7.58,@object     # @.str.7.58
.L.str.7.58:
	.asciz	"          %2d  %20.13E%20.13E%20.13E\n"
	.size	.L.str.7.58, 38

	.type	.L.str.8.59,@object     # @.str.8.59
.L.str.8.59:
	.asciz	" FAILURE: %2d  %20.13E%20.13E%20.13E\n"
	.size	.L.str.8.59, 38

	.type	.Lstr.28,@object        # @str.28
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.28:
	.asciz	" Comparison of RMS-norms of solution error"
	.size	.Lstr.28, 43

	.type	.Lstr.21,@object        # @str.21
	.p2align	4
.Lstr.21:
	.asciz	" RMS-norms of solution error"
	.size	.Lstr.21, 29

	.type	.Lstr.27,@object        # @str.27
	.p2align	4
.Lstr.27:
	.asciz	" Comparison of surface integral"
	.size	.Lstr.27, 32

	.type	.Lstr.22,@object        # @str.22
	.p2align	4
.Lstr.22:
	.asciz	" Surface integral"
	.size	.Lstr.22, 18

	.type	.L.str.13.60,@object    # @.str.13.60
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.13.60:
	.asciz	"              %20.13E\n"
	.size	.L.str.13.60, 23

	.type	.L.str.14.61,@object    # @.str.14.61
.L.str.14.61:
	.asciz	"              %20.13E%20.13E%20.13E\n"
	.size	.L.str.14.61, 37

	.type	.L.str.15.62,@object    # @.str.15.62
.L.str.15.62:
	.asciz	" FAILURE:     %20.13E%20.13E%20.13E\n"
	.size	.L.str.15.62, 37

	.type	.Lstr.25,@object        # @str.25
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.25:
	.asciz	" No reference values provided"
	.size	.Lstr.25, 30

	.type	.Lstr.26,@object        # @str.26
	.p2align	4
.Lstr.26:
	.asciz	"No verification performed"
	.size	.Lstr.26, 26

	.type	.Lstr.24,@object        # @str.24
	.p2align	4
.Lstr.24:
	.asciz	" Verification Successful"
	.size	.Lstr.24, 25

	.type	.Lstr.23,@object        # @str.23
	.p2align	4
.Lstr.23:
	.asciz	" Verification failed"
	.size	.Lstr.23, 21

	.type	.L.str.13,@object       # @.str.13
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.13:
	.asciz	"LU"
	.size	.L.str.13, 3

	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"          floating point"
	.size	.L.str.14, 25

	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"3.3.1"
	.size	.L.str.15, 6

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"03 Mar 2016"
	.size	.L.str.16, 12

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"(none)"
	.size	.L.str.17, 7

	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"-I ../common "
	.size	.L.str.18, 14

	.type	.Lstr,@object           # @str
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr:
	.asciz	"  SECTION     Time (secs)"
	.size	.Lstr, 26

	.type	.L.str.20,@object       # @.str.20
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.20:
	.asciz	"  %-8s:%9.3f  (%6.2f%%)\n"
	.size	.L.str.20, 25

	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	"     --> %8s:%9.3f  (%6.2f%%)\n"
	.size	.L.str.21, 31

	.type	.L.str.22,@object       # @.str.22
.L.str.22:
	.asciz	"sub-rhs"
	.size	.L.str.22, 8

	.type	.L.str.23,@object       # @.str.23
.L.str.23:
	.asciz	"rest-rhs"
	.size	.L.str.23, 9

	.type	.L.str.24,@object       # @.str.24
.L.str.24:
	.asciz	"\n\n %s Benchmark Completed.\n"
	.size	.L.str.24, 28

	.type	.L.str.1.25,@object     # @.str.1.25
.L.str.1.25:
	.asciz	" Class           =             %12c\n"
	.size	.L.str.1.25, 37

	.type	.L.str.2.26,@object     # @.str.2.26
.L.str.2.26:
	.asciz	"%15.0lf"
	.size	.L.str.2.26, 8

	.type	.L.str.3.27,@object     # @.str.3.27
.L.str.3.27:
	.asciz	" Size            =          %15s\n"
	.size	.L.str.3.27, 34

	.type	.L.str.4.28,@object     # @.str.4.28
.L.str.4.28:
	.asciz	" Size            =             %12d\n"
	.size	.L.str.4.28, 37

	.type	.L.str.5.29,@object     # @.str.5.29
.L.str.5.29:
	.asciz	" Size            =           %4dx%4dx%4d\n"
	.size	.L.str.5.29, 42

	.type	.L.str.6.30,@object     # @.str.6.30
.L.str.6.30:
	.asciz	" Iterations      =             %12d\n"
	.size	.L.str.6.30, 37

	.type	.L.str.7.31,@object     # @.str.7.31
.L.str.7.31:
	.asciz	" Time in seconds =             %12.2lf\n"
	.size	.L.str.7.31, 40

	.type	.L.str.8.32,@object     # @.str.8.32
.L.str.8.32:
	.asciz	" Mop/s total     =          %15.2lf\n"
	.size	.L.str.8.32, 37

	.type	.L.str.9.33,@object     # @.str.9.33
.L.str.9.33:
	.asciz	" Operation type  = %24s\n"
	.size	.L.str.9.33, 25

	.type	.L.str.10.34,@object    # @.str.10.34
.L.str.10.34:
	.asciz	" Verification    =             %12s\n"
	.size	.L.str.10.34, 37

	.type	.L.str.11.35,@object    # @.str.11.35
.L.str.11.35:
	.asciz	"SUCCESSFUL"
	.size	.L.str.11.35, 11

	.type	.L.str.12.36,@object    # @.str.12.36
.L.str.12.36:
	.asciz	"UNSUCCESSFUL"
	.size	.L.str.12.36, 13

	.type	.L.str.13.37,@object    # @.str.13.37
.L.str.13.37:
	.asciz	" Version         =             %12s\n"
	.size	.L.str.13.37, 37

	.type	.L.str.14.38,@object    # @.str.14.38
.L.str.14.38:
	.asciz	" Compile date    =             %12s\n"
	.size	.L.str.14.38, 37

	.type	.L.str.15.39,@object    # @.str.15.39
.L.str.15.39:
	.asciz	"\n Compile options:\n    CC           = %s\n"
	.size	.L.str.15.39, 42

	.type	.L.str.16.40,@object    # @.str.16.40
.L.str.16.40:
	.asciz	"    CLINK        = %s\n"
	.size	.L.str.16.40, 23

	.type	.L.str.17.41,@object    # @.str.17.41
.L.str.17.41:
	.asciz	"    C_LIB        = %s\n"
	.size	.L.str.17.41, 23

	.type	.L.str.18.42,@object    # @.str.18.42
.L.str.18.42:
	.asciz	"    C_INC        = %s\n"
	.size	.L.str.18.42, 23

	.type	.L.str.19.43,@object    # @.str.19.43
.L.str.19.43:
	.asciz	"    CFLAGS       = %s\n"
	.size	.L.str.19.43, 23

	.type	.L.str.20.44,@object    # @.str.20.44
.L.str.20.44:
	.asciz	"    CLINKFLAGS   = %s\n"
	.size	.L.str.20.44, 23

	.type	.L.str.21.45,@object    # @.str.21.45
.L.str.21.45:
	.asciz	"    RAND         = %s\n"
	.size	.L.str.21.45, 23

	.type	.Lstr.46,@object        # @str.46
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4
.Lstr.46:
	.asciz	"\n--------------------------------------\n Please send all errors/feedbacks to:\n Center for Manycore Programming\n cmp@aces.snu.ac.kr\n http://aces.snu.ac.kr\n--------------------------------------\n"
	.size	.Lstr.46, 194

	.type	elapsed,@object         # @elapsed
	.local	elapsed
	.comm	elapsed,512,16
	.type	start,@object           # @start
	.local	start
	.comm	start,512,16
	.type	wtime_.sec,@object      # @wtime_.sec
	.data
	.p2align	2
wtime_.sec:
	.long	4294967295              # 0xffffffff
	.size	wtime_.sec, 4

	.file	24 "/usr/include/libio.h"
	.file	25 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file	26 "/home/norouzi/Desktop/software/llvmTemp/build/bin/../lib/clang/3.9.0/include/stddef.h"
	.file	27 "/usr/include/stdio.h"
	.file	28 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file	29 "/usr/include/x86_64-linux-gnu/bits/time.h"
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 3.9.0 (trunk)" # string offset=0
.Linfo_string1:
	.asciz	"lu.c"                  # string offset=28
.Linfo_string2:
	.asciz	"/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/LU" # string offset=33
.Linfo_string3:
	.asciz	"dxi"                   # string offset=95
.Linfo_string4:
	.asciz	"double"                # string offset=99
.Linfo_string5:
	.asciz	"deta"                  # string offset=106
.Linfo_string6:
	.asciz	"dzeta"                 # string offset=111
.Linfo_string7:
	.asciz	"tx1"                   # string offset=117
.Linfo_string8:
	.asciz	"tx2"                   # string offset=121
.Linfo_string9:
	.asciz	"tx3"                   # string offset=125
.Linfo_string10:
	.asciz	"ty1"                   # string offset=129
.Linfo_string11:
	.asciz	"ty2"                   # string offset=133
.Linfo_string12:
	.asciz	"ty3"                   # string offset=137
.Linfo_string13:
	.asciz	"tz1"                   # string offset=141
.Linfo_string14:
	.asciz	"tz2"                   # string offset=145
.Linfo_string15:
	.asciz	"tz3"                   # string offset=149
.Linfo_string16:
	.asciz	"nx"                    # string offset=153
.Linfo_string17:
	.asciz	"int"                   # string offset=156
.Linfo_string18:
	.asciz	"ny"                    # string offset=160
.Linfo_string19:
	.asciz	"nz"                    # string offset=163
.Linfo_string20:
	.asciz	"nx0"                   # string offset=166
.Linfo_string21:
	.asciz	"ny0"                   # string offset=170
.Linfo_string22:
	.asciz	"nz0"                   # string offset=174
.Linfo_string23:
	.asciz	"ist"                   # string offset=178
.Linfo_string24:
	.asciz	"iend"                  # string offset=182
.Linfo_string25:
	.asciz	"jst"                   # string offset=187
.Linfo_string26:
	.asciz	"jend"                  # string offset=191
.Linfo_string27:
	.asciz	"ii1"                   # string offset=196
.Linfo_string28:
	.asciz	"ii2"                   # string offset=200
.Linfo_string29:
	.asciz	"ji1"                   # string offset=204
.Linfo_string30:
	.asciz	"ji2"                   # string offset=208
.Linfo_string31:
	.asciz	"ki1"                   # string offset=212
.Linfo_string32:
	.asciz	"ki2"                   # string offset=216
.Linfo_string33:
	.asciz	"dx1"                   # string offset=220
.Linfo_string34:
	.asciz	"dx2"                   # string offset=224
.Linfo_string35:
	.asciz	"dx3"                   # string offset=228
.Linfo_string36:
	.asciz	"dx4"                   # string offset=232
.Linfo_string37:
	.asciz	"dx5"                   # string offset=236
.Linfo_string38:
	.asciz	"dy1"                   # string offset=240
.Linfo_string39:
	.asciz	"dy2"                   # string offset=244
.Linfo_string40:
	.asciz	"dy3"                   # string offset=248
.Linfo_string41:
	.asciz	"dy4"                   # string offset=252
.Linfo_string42:
	.asciz	"dy5"                   # string offset=256
.Linfo_string43:
	.asciz	"dz1"                   # string offset=260
.Linfo_string44:
	.asciz	"dz2"                   # string offset=264
.Linfo_string45:
	.asciz	"dz3"                   # string offset=268
.Linfo_string46:
	.asciz	"dz4"                   # string offset=272
.Linfo_string47:
	.asciz	"dz5"                   # string offset=276
.Linfo_string48:
	.asciz	"dssp"                  # string offset=280
.Linfo_string49:
	.asciz	"u"                     # string offset=285
.Linfo_string50:
	.asciz	"sizetype"              # string offset=287
.Linfo_string51:
	.asciz	"rsd"                   # string offset=296
.Linfo_string52:
	.asciz	"frct"                  # string offset=300
.Linfo_string53:
	.asciz	"flux"                  # string offset=305
.Linfo_string54:
	.asciz	"qs"                    # string offset=310
.Linfo_string55:
	.asciz	"rho_i"                 # string offset=313
.Linfo_string56:
	.asciz	"ipr"                   # string offset=319
.Linfo_string57:
	.asciz	"inorm"                 # string offset=323
.Linfo_string58:
	.asciz	"dt"                    # string offset=329
.Linfo_string59:
	.asciz	"omega"                 # string offset=332
.Linfo_string60:
	.asciz	"tolrsd"                # string offset=338
.Linfo_string61:
	.asciz	"rsdnm"                 # string offset=345
.Linfo_string62:
	.asciz	"errnm"                 # string offset=351
.Linfo_string63:
	.asciz	"frc"                   # string offset=357
.Linfo_string64:
	.asciz	"ttotal"                # string offset=361
.Linfo_string65:
	.asciz	"itmax"                 # string offset=368
.Linfo_string66:
	.asciz	"invert"                # string offset=374
.Linfo_string67:
	.asciz	"a"                     # string offset=381
.Linfo_string68:
	.asciz	"b"                     # string offset=383
.Linfo_string69:
	.asciz	"c"                     # string offset=385
.Linfo_string70:
	.asciz	"d"                     # string offset=387
.Linfo_string71:
	.asciz	"ce"                    # string offset=389
.Linfo_string72:
	.asciz	"maxtime"               # string offset=392
.Linfo_string73:
	.asciz	"timeron"               # string offset=400
.Linfo_string74:
	.asciz	"false"                 # string offset=408
.Linfo_string75:
	.asciz	"true"                  # string offset=414
.Linfo_string76:
	.asciz	"logical"               # string offset=419
.Linfo_string77:
	.asciz	"read_input.c"          # string offset=427
.Linfo_string78:
	.asciz	"domain.c"              # string offset=440
.Linfo_string79:
	.asciz	"setcoeff.c"            # string offset=449
.Linfo_string80:
	.asciz	"setbv.c"               # string offset=460
.Linfo_string81:
	.asciz	"exact.c"               # string offset=468
.Linfo_string82:
	.asciz	"setiv.c"               # string offset=476
.Linfo_string83:
	.asciz	"erhs.c"                # string offset=484
.Linfo_string84:
	.asciz	"ssor.c"                # string offset=491
.Linfo_string85:
	.asciz	"rhs.c"                 # string offset=498
.Linfo_string86:
	.asciz	"l2norm.c"              # string offset=504
.Linfo_string87:
	.asciz	"jacld.c"               # string offset=513
.Linfo_string88:
	.asciz	"blts.c"                # string offset=521
.Linfo_string89:
	.asciz	"jacu.c"                # string offset=528
.Linfo_string90:
	.asciz	"buts.c"                # string offset=535
.Linfo_string91:
	.asciz	"error.c"               # string offset=542
.Linfo_string92:
	.asciz	"pintgr.c"              # string offset=550
.Linfo_string93:
	.asciz	"verify.c"              # string offset=559
.Linfo_string94:
	.asciz	"../common/print_results.c" # string offset=568
.Linfo_string95:
	.asciz	"/home/norouzi/Desktop/software/benchmarks/NAS/NPB3.3-SER-C/common" # string offset=594
.Linfo_string96:
	.asciz	"../common/c_timers.c"  # string offset=660
.Linfo_string97:
	.asciz	"start"                 # string offset=681
.Linfo_string98:
	.asciz	"elapsed"               # string offset=687
.Linfo_string99:
	.asciz	"../common/wtime.c"     # string offset=695
.Linfo_string100:
	.asciz	"sec"                   # string offset=713
.Linfo_string101:
	.asciz	"elapsed_time"          # string offset=717
.Linfo_string102:
	.asciz	"t"                     # string offset=730
.Linfo_string103:
	.asciz	"main"                  # string offset=732
.Linfo_string104:
	.asciz	"read_input"            # string offset=737
.Linfo_string105:
	.asciz	"domain"                # string offset=748
.Linfo_string106:
	.asciz	"setcoeff"              # string offset=755
.Linfo_string107:
	.asciz	"setbv"                 # string offset=764
.Linfo_string108:
	.asciz	"exact"                 # string offset=770
.Linfo_string109:
	.asciz	"setiv"                 # string offset=776
.Linfo_string110:
	.asciz	"erhs"                  # string offset=782
.Linfo_string111:
	.asciz	"ssor"                  # string offset=787
.Linfo_string112:
	.asciz	"rhs"                   # string offset=792
.Linfo_string113:
	.asciz	"l2norm"                # string offset=796
.Linfo_string114:
	.asciz	"jacld"                 # string offset=803
.Linfo_string115:
	.asciz	"blts"                  # string offset=809
.Linfo_string116:
	.asciz	"jacu"                  # string offset=814
.Linfo_string117:
	.asciz	"buts"                  # string offset=819
.Linfo_string118:
	.asciz	"error"                 # string offset=824
.Linfo_string119:
	.asciz	"pintgr"                # string offset=830
.Linfo_string120:
	.asciz	"verify"                # string offset=837
.Linfo_string121:
	.asciz	"print_results"         # string offset=844
.Linfo_string122:
	.asciz	"timer_clear"           # string offset=858
.Linfo_string123:
	.asciz	"timer_start"           # string offset=870
.Linfo_string124:
	.asciz	"timer_stop"            # string offset=882
.Linfo_string125:
	.asciz	"timer_read"            # string offset=893
.Linfo_string126:
	.asciz	"wtime_"                # string offset=904
.Linfo_string127:
	.asciz	"trecs"                 # string offset=911
.Linfo_string128:
	.asciz	"t_names"               # string offset=917
.Linfo_string129:
	.asciz	"char"                  # string offset=925
.Linfo_string130:
	.asciz	"argc"                  # string offset=930
.Linfo_string131:
	.asciz	"argv"                  # string offset=935
.Linfo_string132:
	.asciz	"fp"                    # string offset=940
.Linfo_string133:
	.asciz	"_flags"                # string offset=943
.Linfo_string134:
	.asciz	"_IO_read_ptr"          # string offset=950
.Linfo_string135:
	.asciz	"_IO_read_end"          # string offset=963
.Linfo_string136:
	.asciz	"_IO_read_base"         # string offset=976
.Linfo_string137:
	.asciz	"_IO_write_base"        # string offset=990
.Linfo_string138:
	.asciz	"_IO_write_ptr"         # string offset=1005
.Linfo_string139:
	.asciz	"_IO_write_end"         # string offset=1019
.Linfo_string140:
	.asciz	"_IO_buf_base"          # string offset=1033
.Linfo_string141:
	.asciz	"_IO_buf_end"           # string offset=1046
.Linfo_string142:
	.asciz	"_IO_save_base"         # string offset=1058
.Linfo_string143:
	.asciz	"_IO_backup_base"       # string offset=1072
.Linfo_string144:
	.asciz	"_IO_save_end"          # string offset=1088
.Linfo_string145:
	.asciz	"_markers"              # string offset=1101
.Linfo_string146:
	.asciz	"_next"                 # string offset=1110
.Linfo_string147:
	.asciz	"_sbuf"                 # string offset=1116
.Linfo_string148:
	.asciz	"_pos"                  # string offset=1122
.Linfo_string149:
	.asciz	"_IO_marker"            # string offset=1127
.Linfo_string150:
	.asciz	"_chain"                # string offset=1138
.Linfo_string151:
	.asciz	"_fileno"               # string offset=1145
.Linfo_string152:
	.asciz	"_flags2"               # string offset=1153
.Linfo_string153:
	.asciz	"_old_offset"           # string offset=1161
.Linfo_string154:
	.asciz	"long int"              # string offset=1173
.Linfo_string155:
	.asciz	"__off_t"               # string offset=1182
.Linfo_string156:
	.asciz	"_cur_column"           # string offset=1190
.Linfo_string157:
	.asciz	"unsigned short"        # string offset=1202
.Linfo_string158:
	.asciz	"_vtable_offset"        # string offset=1217
.Linfo_string159:
	.asciz	"signed char"           # string offset=1232
.Linfo_string160:
	.asciz	"_shortbuf"             # string offset=1244
.Linfo_string161:
	.asciz	"_lock"                 # string offset=1254
.Linfo_string162:
	.asciz	"_IO_lock_t"            # string offset=1260
.Linfo_string163:
	.asciz	"_offset"               # string offset=1271
.Linfo_string164:
	.asciz	"__off64_t"             # string offset=1279
.Linfo_string165:
	.asciz	"__pad1"                # string offset=1289
.Linfo_string166:
	.asciz	"__pad2"                # string offset=1296
.Linfo_string167:
	.asciz	"__pad3"                # string offset=1303
.Linfo_string168:
	.asciz	"__pad4"                # string offset=1310
.Linfo_string169:
	.asciz	"__pad5"                # string offset=1317
.Linfo_string170:
	.asciz	"long unsigned int"     # string offset=1324
.Linfo_string171:
	.asciz	"size_t"                # string offset=1342
.Linfo_string172:
	.asciz	"_mode"                 # string offset=1349
.Linfo_string173:
	.asciz	"_unused2"              # string offset=1355
.Linfo_string174:
	.asciz	"_IO_FILE"              # string offset=1364
.Linfo_string175:
	.asciz	"FILE"                  # string offset=1373
.Linfo_string176:
	.asciz	"Class"                 # string offset=1378
.Linfo_string177:
	.asciz	"verified"              # string offset=1384
.Linfo_string178:
	.asciz	"mflops"                # string offset=1393
.Linfo_string179:
	.asciz	"tmax"                  # string offset=1400
.Linfo_string180:
	.asciz	"i"                     # string offset=1405
.Linfo_string181:
	.asciz	"result"                # string offset=1407
.Linfo_string182:
	.asciz	"temp1"                 # string offset=1414
.Linfo_string183:
	.asciz	"temp2"                 # string offset=1420
.Linfo_string184:
	.asciz	"j"                     # string offset=1426
.Linfo_string185:
	.asciz	"m"                     # string offset=1428
.Linfo_string186:
	.asciz	"k"                     # string offset=1430
.Linfo_string187:
	.asciz	"u000ijk"               # string offset=1432
.Linfo_string188:
	.asciz	"xi"                    # string offset=1440
.Linfo_string189:
	.asciz	"eta"                   # string offset=1443
.Linfo_string190:
	.asciz	"zeta"                  # string offset=1447
.Linfo_string191:
	.asciz	"ue_1jk"                # string offset=1452
.Linfo_string192:
	.asciz	"ue_nx0jk"              # string offset=1459
.Linfo_string193:
	.asciz	"ue_i1k"                # string offset=1468
.Linfo_string194:
	.asciz	"ue_iny0k"              # string offset=1475
.Linfo_string195:
	.asciz	"ue_ij1"                # string offset=1484
.Linfo_string196:
	.asciz	"ue_ijnz"               # string offset=1491
.Linfo_string197:
	.asciz	"pxi"                   # string offset=1499
.Linfo_string198:
	.asciz	"peta"                  # string offset=1503
.Linfo_string199:
	.asciz	"pzeta"                 # string offset=1508
.Linfo_string200:
	.asciz	"u21"                   # string offset=1514
.Linfo_string201:
	.asciz	"q"                     # string offset=1518
.Linfo_string202:
	.asciz	"tmp"                   # string offset=1520
.Linfo_string203:
	.asciz	"u41i"                  # string offset=1524
.Linfo_string204:
	.asciz	"u51i"                  # string offset=1529
.Linfo_string205:
	.asciz	"u41im1"                # string offset=1534
.Linfo_string206:
	.asciz	"u51im1"                # string offset=1541
.Linfo_string207:
	.asciz	"u31"                   # string offset=1548
.Linfo_string208:
	.asciz	"u41j"                  # string offset=1552
.Linfo_string209:
	.asciz	"u51j"                  # string offset=1557
.Linfo_string210:
	.asciz	"u41jm1"                # string offset=1562
.Linfo_string211:
	.asciz	"u51jm1"                # string offset=1569
.Linfo_string212:
	.asciz	"u41"                   # string offset=1576
.Linfo_string213:
	.asciz	"u41k"                  # string offset=1580
.Linfo_string214:
	.asciz	"u41km1"                # string offset=1585
.Linfo_string215:
	.asciz	"u51km1"                # string offset=1592
.Linfo_string216:
	.asciz	"u51k"                  # string offset=1599
.Linfo_string217:
	.asciz	"u21i"                  # string offset=1604
.Linfo_string218:
	.asciz	"u31i"                  # string offset=1609
.Linfo_string219:
	.asciz	"u21j"                  # string offset=1614
.Linfo_string220:
	.asciz	"u31j"                  # string offset=1619
.Linfo_string221:
	.asciz	"u21k"                  # string offset=1624
.Linfo_string222:
	.asciz	"u31k"                  # string offset=1629
.Linfo_string223:
	.asciz	"u21im1"                # string offset=1634
.Linfo_string224:
	.asciz	"u31im1"                # string offset=1641
.Linfo_string225:
	.asciz	"u21jm1"                # string offset=1648
.Linfo_string226:
	.asciz	"u31jm1"                # string offset=1655
.Linfo_string227:
	.asciz	"u21km1"                # string offset=1662
.Linfo_string228:
	.asciz	"u31km1"                # string offset=1669
.Linfo_string229:
	.asciz	"tv"                    # string offset=1676
.Linfo_string230:
	.asciz	"delunm"                # string offset=1679
.Linfo_string231:
	.asciz	"niter"                 # string offset=1686
.Linfo_string232:
	.asciz	"istep"                 # string offset=1692
.Linfo_string233:
	.asciz	"n"                     # string offset=1698
.Linfo_string234:
	.asciz	"utmp"                  # string offset=1700
.Linfo_string235:
	.asciz	"rtmp"                  # string offset=1705
.Linfo_string236:
	.asciz	"ldx"                   # string offset=1710
.Linfo_string237:
	.asciz	"ldy"                   # string offset=1714
.Linfo_string238:
	.asciz	"ldz"                   # string offset=1718
.Linfo_string239:
	.asciz	"sum"                   # string offset=1722
.Linfo_string240:
	.asciz	"v"                     # string offset=1726
.Linfo_string241:
	.asciz	"r43"                   # string offset=1728
.Linfo_string242:
	.asciz	"c1345"                 # string offset=1732
.Linfo_string243:
	.asciz	"c34"                   # string offset=1738
.Linfo_string244:
	.asciz	"tmp1"                  # string offset=1742
.Linfo_string245:
	.asciz	"tmp2"                  # string offset=1747
.Linfo_string246:
	.asciz	"tmp3"                  # string offset=1752
.Linfo_string247:
	.asciz	"tmat"                  # string offset=1757
.Linfo_string248:
	.asciz	"ldmx"                  # string offset=1762
.Linfo_string249:
	.asciz	"ldmy"                  # string offset=1767
.Linfo_string250:
	.asciz	"ldmz"                  # string offset=1772
.Linfo_string251:
	.asciz	"vk"                    # string offset=1777
.Linfo_string252:
	.asciz	"vkm1"                  # string offset=1780
.Linfo_string253:
	.asciz	"udz"                   # string offset=1785
.Linfo_string254:
	.asciz	"udx"                   # string offset=1789
.Linfo_string255:
	.asciz	"udy"                   # string offset=1793
.Linfo_string256:
	.asciz	"phi1"                  # string offset=1797
.Linfo_string257:
	.asciz	"phi2"                  # string offset=1802
.Linfo_string258:
	.asciz	"jfin1"                 # string offset=1807
.Linfo_string259:
	.asciz	"ifin1"                 # string offset=1813
.Linfo_string260:
	.asciz	"frc1"                  # string offset=1819
.Linfo_string261:
	.asciz	"frc2"                  # string offset=1824
.Linfo_string262:
	.asciz	"frc3"                  # string offset=1829
.Linfo_string263:
	.asciz	"ibeg"                  # string offset=1834
.Linfo_string264:
	.asciz	"ifin"                  # string offset=1839
.Linfo_string265:
	.asciz	"jbeg"                  # string offset=1844
.Linfo_string266:
	.asciz	"jfin"                  # string offset=1849
.Linfo_string267:
	.asciz	"xcrref"                # string offset=1854
.Linfo_string268:
	.asciz	"xceref"                # string offset=1861
.Linfo_string269:
	.asciz	"xcrdif"                # string offset=1868
.Linfo_string270:
	.asciz	"xcedif"                # string offset=1875
.Linfo_string271:
	.asciz	"xcr"                   # string offset=1882
.Linfo_string272:
	.asciz	"xce"                   # string offset=1886
.Linfo_string273:
	.asciz	"xci"                   # string offset=1890
.Linfo_string274:
	.asciz	"epsilon"               # string offset=1894
.Linfo_string275:
	.asciz	"dtref"                 # string offset=1902
.Linfo_string276:
	.asciz	"xciref"                # string offset=1908
.Linfo_string277:
	.asciz	"xcidif"                # string offset=1915
.Linfo_string278:
	.asciz	"size"                  # string offset=1922
.Linfo_string279:
	.asciz	"name"                  # string offset=1927
.Linfo_string280:
	.asciz	"class"                 # string offset=1932
.Linfo_string281:
	.asciz	"n1"                    # string offset=1938
.Linfo_string282:
	.asciz	"n2"                    # string offset=1941
.Linfo_string283:
	.asciz	"n3"                    # string offset=1944
.Linfo_string284:
	.asciz	"mops"                  # string offset=1947
.Linfo_string285:
	.asciz	"optype"                # string offset=1952
.Linfo_string286:
	.asciz	"cs7"                   # string offset=1959
.Linfo_string287:
	.asciz	"cs6"                   # string offset=1963
.Linfo_string288:
	.asciz	"cs5"                   # string offset=1967
.Linfo_string289:
	.asciz	"cs4"                   # string offset=1971
.Linfo_string290:
	.asciz	"cs3"                   # string offset=1975
.Linfo_string291:
	.asciz	"npbversion"            # string offset=1979
.Linfo_string292:
	.asciz	"compiletime"           # string offset=1990
.Linfo_string293:
	.asciz	"cs1"                   # string offset=2002
.Linfo_string294:
	.asciz	"cs2"                   # string offset=2006
.Linfo_string295:
	.asciz	"now"                   # string offset=2010
.Linfo_string296:
	.asciz	"tv_sec"                # string offset=2014
.Linfo_string297:
	.asciz	"__time_t"              # string offset=2021
.Linfo_string298:
	.asciz	"tv_usec"               # string offset=2030
.Linfo_string299:
	.asciz	"__suseconds_t"         # string offset=2038
.Linfo_string300:
	.asciz	"timeval"               # string offset=2052
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp3-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	.Ltmp8-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp9-.Lfunc_begin0
	.quad	.Ltmp10-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp13-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp12-.Lfunc_begin0
	.quad	.Ltmp14-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp22-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp15-.Lfunc_begin0
	.quad	.Ltmp21-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp20-.Lfunc_begin0
	.quad	.Ltmp21-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp25-.Lfunc_begin0
	.quad	.Ltmp26-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp26-.Lfunc_begin0
	.quad	.Ltmp27-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	224                     # 96
	.byte	0                       # 
	.quad	.Ltmp29-.Lfunc_begin0
	.quad	.Ltmp30-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp37-.Lfunc_begin1
	.quad	.Ltmp40-.Lfunc_begin1
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp43-.Lfunc_begin1
	.quad	.Ltmp45-.Lfunc_begin1
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Lfunc_begin5-.Lfunc_begin5
	.quad	.Ltmp99-.Lfunc_begin5
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp96-.Lfunc_begin5
	.quad	.Ltmp99-.Lfunc_begin5
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp97-.Lfunc_begin5
	.quad	.Ltmp99-.Lfunc_begin5
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp98-.Lfunc_begin5
	.quad	.Ltmp99-.Lfunc_begin5
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp122-.Lfunc_begin6
	.quad	.Ltmp125-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp127-.Lfunc_begin6
	.quad	.Ltmp128-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp128-.Lfunc_begin6
	.quad	.Ltmp129-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp130-.Lfunc_begin6
	.quad	.Ltmp131-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp131-.Lfunc_begin6
	.quad	.Ltmp132-.Lfunc_begin6
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	.Ltmp135-.Lfunc_begin6
	.quad	.Ltmp136-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp136-.Lfunc_begin6
	.quad	.Ltmp137-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	110                     # DW_OP_reg30
	.quad	.Ltmp137-.Lfunc_begin6
	.quad	.Ltmp138-.Lfunc_begin6
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp157-.Lfunc_begin7
	.quad	.Ltmp169-.Lfunc_begin7
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp169-.Lfunc_begin7
	.quad	.Ltmp171-.Lfunc_begin7
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp180-.Lfunc_begin7
	.quad	.Ltmp181-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp182-.Lfunc_begin7
	.quad	.Ltmp183-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp184-.Lfunc_begin7
	.quad	.Ltmp185-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp213-.Lfunc_begin7
	.quad	.Ltmp217-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp214-.Lfunc_begin7
	.quad	.Ltmp215-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	.Ltmp284-.Lfunc_begin7
	.quad	.Ltmp285-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	.Ltmp351-.Lfunc_begin7
	.quad	.Ltmp352-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp222-.Lfunc_begin7
	.quad	.Ltmp224-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp225-.Lfunc_begin7
	.quad	.Ltmp227-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp293-.Lfunc_begin7
	.quad	.Ltmp295-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp296-.Lfunc_begin7
	.quad	.Ltmp298-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp360-.Lfunc_begin7
	.quad	.Ltmp361-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp361-.Lfunc_begin7
	.quad	.Ltmp367-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp223-.Lfunc_begin7
	.quad	.Ltmp228-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp224-.Lfunc_begin7
	.quad	.Ltmp230-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp226-.Lfunc_begin7
	.quad	.Ltmp229-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp227-.Lfunc_begin7
	.quad	.Ltmp232-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp283-.Lfunc_begin7
	.quad	.Ltmp286-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp294-.Lfunc_begin7
	.quad	.Ltmp299-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp295-.Lfunc_begin7
	.quad	.Ltmp301-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp297-.Lfunc_begin7
	.quad	.Ltmp300-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp298-.Lfunc_begin7
	.quad	.Ltmp303-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp350-.Lfunc_begin7
	.quad	.Ltmp354-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp362-.Lfunc_begin7
	.quad	.Ltmp365-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp363-.Lfunc_begin7
	.quad	.Ltmp366-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp364-.Lfunc_begin7
	.quad	.Ltmp371-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp367-.Lfunc_begin7
	.quad	.Ltmp368-.Lfunc_begin7
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Lfunc_begin8-.Lfunc_begin8
	.quad	.Ltmp411-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp411-.Lfunc_begin8
	.quad	.Ltmp412-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp415-.Lfunc_begin8
	.quad	.Ltmp417-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp417-.Lfunc_begin8
	.quad	.Ltmp418-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp418-.Lfunc_begin8
	.quad	.Lfunc_end8-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp420-.Lfunc_begin8
	.quad	.Ltmp495-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp495-.Lfunc_begin8
	.quad	.Ltmp496-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp496-.Lfunc_begin8
	.quad	.Ltmp497-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp422-.Lfunc_begin8
	.quad	.Ltmp423-.Lfunc_begin8
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp455-.Lfunc_begin8
	.quad	.Ltmp456-.Lfunc_begin8
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp522-.Lfunc_begin9
	.quad	.Ltmp525-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp559-.Lfunc_begin9
	.quad	.Ltmp561-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp562-.Lfunc_begin9
	.quad	.Ltmp564-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp633-.Lfunc_begin9
	.quad	.Ltmp635-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp636-.Lfunc_begin9
	.quad	.Ltmp638-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp706-.Lfunc_begin9
	.quad	.Ltmp714-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp714-.Lfunc_begin9
	.quad	.Ltmp717-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp549-.Lfunc_begin9
	.quad	.Ltmp552-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp550-.Lfunc_begin9
	.quad	.Ltmp551-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp623-.Lfunc_begin9
	.quad	.Ltmp624-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	.Ltmp692-.Lfunc_begin9
	.quad	.Ltmp693-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp560-.Lfunc_begin9
	.quad	.Ltmp565-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp561-.Lfunc_begin9
	.quad	.Ltmp567-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp563-.Lfunc_begin9
	.quad	.Ltmp566-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp564-.Lfunc_begin9
	.quad	.Ltmp569-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp622-.Lfunc_begin9
	.quad	.Ltmp625-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp634-.Lfunc_begin9
	.quad	.Ltmp639-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp635-.Lfunc_begin9
	.quad	.Ltmp641-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp637-.Lfunc_begin9
	.quad	.Ltmp640-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp638-.Lfunc_begin9
	.quad	.Ltmp643-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp691-.Lfunc_begin9
	.quad	.Ltmp694-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp707-.Lfunc_begin9
	.quad	.Ltmp710-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp708-.Lfunc_begin9
	.quad	.Ltmp711-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	108                     # DW_OP_reg28
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp709-.Lfunc_begin9
	.quad	.Ltmp716-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp712-.Lfunc_begin9
	.quad	.Ltmp713-.Lfunc_begin9
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp759-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp771-.Lfunc_begin10
	.quad	.Ltmp772-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp764-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp771-.Lfunc_begin10
	.quad	.Ltmp772-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp760-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp771-.Lfunc_begin10
	.quad	.Ltmp772-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp766-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp771-.Lfunc_begin10
	.quad	.Ltmp772-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp762-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp771-.Lfunc_begin10
	.quad	.Ltmp772-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp767-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp771-.Lfunc_begin10
	.quad	.Ltmp772-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp767-.Lfunc_begin10
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp771-.Lfunc_begin10
	.quad	.Ltmp772-.Lfunc_begin10
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp767-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp763-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp765-.Lfunc_begin10
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Lfunc_begin10-.Lfunc_begin10
	.quad	.Ltmp767-.Lfunc_begin10
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Lfunc_begin11-.Lfunc_begin11
	.quad	.Ltmp796-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp800-.Lfunc_begin11
	.quad	.Ltmp805-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp806-.Lfunc_begin11
	.quad	.Ltmp811-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	.Ltmp812-.Lfunc_begin11
	.quad	.Ltmp817-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	.Ltmp818-.Lfunc_begin11
	.quad	.Ltmp823-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp801-.Lfunc_begin11
	.quad	.Ltmp803-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp803-.Lfunc_begin11
	.quad	.Ltmp804-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp807-.Lfunc_begin11
	.quad	.Ltmp810-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	.Ltmp813-.Lfunc_begin11
	.quad	.Ltmp816-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	106                     # DW_OP_reg26
	.quad	.Ltmp819-.Lfunc_begin11
	.quad	.Ltmp822-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	108                     # DW_OP_reg28
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp802-.Lfunc_begin11
	.quad	.Ltmp808-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	.Ltmp808-.Lfunc_begin11
	.quad	.Ltmp809-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	.Ltmp814-.Lfunc_begin11
	.quad	.Ltmp815-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	.Ltmp820-.Lfunc_begin11
	.quad	.Ltmp821-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp851-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp850-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp841-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp847-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp855-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp854-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp858-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp849-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp842-.Lfunc_begin12
	.quad	.Ltmp852-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp852-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp857-.Lfunc_begin12
	.short	3                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp853-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Lfunc_begin12-.Lfunc_begin12
	.quad	.Ltmp856-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp872-.Lfunc_begin12
	.quad	.Ltmp881-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	.Ltmp881-.Lfunc_begin12
	.quad	.Ltmp886-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp888-.Lfunc_begin12
	.quad	.Ltmp891-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp893-.Lfunc_begin12
	.quad	.Ltmp894-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp873-.Lfunc_begin12
	.quad	.Ltmp874-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp875-.Lfunc_begin12
	.quad	.Ltmp876-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp877-.Lfunc_begin12
	.quad	.Ltmp878-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp879-.Lfunc_begin12
	.quad	.Ltmp880-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	.Ltmp882-.Lfunc_begin12
	.quad	.Ltmp883-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	106                     # DW_OP_reg26
	.quad	.Ltmp884-.Lfunc_begin12
	.quad	.Ltmp885-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp886-.Lfunc_begin12
	.quad	.Ltmp887-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp889-.Lfunc_begin12
	.quad	.Ltmp890-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp891-.Lfunc_begin12
	.quad	.Ltmp892-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp894-.Lfunc_begin12
	.quad	.Ltmp895-.Lfunc_begin12
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Lfunc_begin13-.Lfunc_begin13
	.quad	.Ltmp922-.Lfunc_begin13
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp926-.Lfunc_begin13
	.quad	.Ltmp931-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp932-.Lfunc_begin13
	.quad	.Ltmp937-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	110                     # DW_OP_reg30
	.quad	.Ltmp938-.Lfunc_begin13
	.quad	.Ltmp943-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	107                     # DW_OP_reg27
	.quad	.Ltmp944-.Lfunc_begin13
	.quad	.Ltmp949-.Lfunc_begin13
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp927-.Lfunc_begin13
	.quad	.Ltmp929-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp929-.Lfunc_begin13
	.quad	.Ltmp930-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp933-.Lfunc_begin13
	.quad	.Ltmp939-.Lfunc_begin13
	.short	2                       # Loc expr size
	.byte	144                     # DW_OP_regx
	.byte	32                      # 32
	.quad	.Ltmp939-.Lfunc_begin13
	.quad	.Ltmp942-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	.Ltmp945-.Lfunc_begin13
	.quad	.Ltmp948-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp928-.Lfunc_begin13
	.quad	.Ltmp934-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	.Ltmp935-.Lfunc_begin13
	.quad	.Ltmp936-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	.Ltmp940-.Lfunc_begin13
	.quad	.Ltmp941-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	.Ltmp946-.Lfunc_begin13
	.quad	.Ltmp947-.Lfunc_begin13
	.short	1                       # Loc expr size
	.byte	110                     # DW_OP_reg30
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp978-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp979-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp977-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp975-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp971-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp972-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp967-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp967-.Lfunc_begin14
	.quad	.Ltmp985-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp984-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp985-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp980-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp981-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp983-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp976-.Lfunc_begin14
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Lfunc_begin14-.Lfunc_begin14
	.quad	.Ltmp982-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Ltmp1004-.Lfunc_begin14
	.quad	.Ltmp1012-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	103                     # DW_OP_reg23
	.quad	.Ltmp1014-.Lfunc_begin14
	.quad	.Ltmp1019-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1021-.Lfunc_begin14
	.quad	.Ltmp1024-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp1026-.Lfunc_begin14
	.quad	.Ltmp1027-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp1005-.Lfunc_begin14
	.quad	.Ltmp1006-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp1007-.Lfunc_begin14
	.quad	.Ltmp1008-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	.Ltmp1009-.Lfunc_begin14
	.quad	.Ltmp1010-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1011-.Lfunc_begin14
	.quad	.Ltmp1013-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1015-.Lfunc_begin14
	.quad	.Ltmp1016-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	101                     # DW_OP_reg21
	.quad	.Ltmp1017-.Lfunc_begin14
	.quad	.Ltmp1018-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	109                     # DW_OP_reg29
	.quad	.Ltmp1019-.Lfunc_begin14
	.quad	.Ltmp1020-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1022-.Lfunc_begin14
	.quad	.Ltmp1023-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	102                     # DW_OP_reg22
	.quad	.Ltmp1024-.Lfunc_begin14
	.quad	.Ltmp1025-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp1027-.Lfunc_begin14
	.quad	.Ltmp1028-.Lfunc_begin14
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp1079-.Lfunc_begin16
	.quad	.Ltmp1087-.Lfunc_begin16
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1087-.Lfunc_begin16
	.quad	.Ltmp1091-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1113-.Lfunc_begin16
	.quad	.Lfunc_end16-.Lfunc_begin16
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp1083-.Lfunc_begin16
	.quad	.Ltmp1084-.Lfunc_begin16
	.short	3                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1084-.Lfunc_begin16
	.quad	.Ltmp1092-.Lfunc_begin16
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp1101-.Lfunc_begin16
	.quad	.Ltmp1105-.Lfunc_begin16
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Ltmp1108-.Lfunc_begin16
	.quad	.Ltmp1112-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp1161-.Lfunc_begin16
	.quad	.Ltmp1165-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	105                     # DW_OP_reg25
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp1143-.Lfunc_begin16
	.quad	.Ltmp1147-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	104                     # DW_OP_reg24
	.quad	.Ltmp1162-.Lfunc_begin16
	.quad	.Ltmp1165-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	107                     # DW_OP_reg27
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Ltmp1168-.Lfunc_begin16
	.quad	.Ltmp1172-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1173-.Lfunc_begin16
	.quad	.Lfunc_end16-.Lfunc_begin16
	.short	1                       # Loc expr size
	.byte	106                     # DW_OP_reg26
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1189-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1189-.Lfunc_begin17
	.quad	.Ltmp1250-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1188-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1188-.Lfunc_begin17
	.quad	.Ltmp1250-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1243-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1187-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1187-.Lfunc_begin17
	.quad	.Ltmp1250-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Lfunc_begin17-.Lfunc_begin17
	.quad	.Ltmp1186-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1186-.Lfunc_begin17
	.quad	.Ltmp1250-.Lfunc_begin17
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Ltmp1245-.Lfunc_begin17
	.quad	.Ltmp1249-.Lfunc_begin17
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1312-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1312-.Lfunc_begin18
	.quad	.Ltmp1331-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1311-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1311-.Lfunc_begin18
	.quad	.Ltmp1314-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1314-.Lfunc_begin18
	.quad	.Ltmp1317-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1318-.Lfunc_begin18
	.quad	.Ltmp1321-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1325-.Lfunc_begin18
	.quad	.Ltmp1326-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1310-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1310-.Lfunc_begin18
	.quad	.Ltmp1330-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1309-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1309-.Lfunc_begin18
	.quad	.Ltmp1329-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1308-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1308-.Lfunc_begin18
	.quad	.Ltmp1328-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1307-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1307-.Lfunc_begin18
	.quad	.Ltmp1337-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1306-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	.Ltmp1306-.Lfunc_begin18
	.quad	.Ltmp1313-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1305-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp1305-.Lfunc_begin18
	.quad	.Ltmp1313-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp1322-.Lfunc_begin18
	.quad	.Ltmp1324-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	14                      # 14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1324-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1340-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1341-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1342-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1343-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp1339-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Lfunc_begin20-.Lfunc_begin19
	.quad	.Ltmp1349-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1349-.Lfunc_begin19
	.quad	.Ltmp1352-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Lfunc_begin21-.Lfunc_begin19
	.quad	.Ltmp1357-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp1357-.Lfunc_begin19
	.quad	.Ltmp1362-.Lfunc_begin19
	.short	3                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Ltmp1358-.Lfunc_begin19
	.quad	.Ltmp1359-.Lfunc_begin19
	.short	2                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.quad	.Ltmp1359-.Lfunc_begin19
	.quad	.Ltmp1360-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Ltmp1359-.Lfunc_begin19
	.quad	.Ltmp1360-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Ltmp1360-.Lfunc_begin19
	.quad	.Ltmp1361-.Lfunc_begin19
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Lfunc_begin23-.Lfunc_begin23
	.quad	.Ltmp1368-.Lfunc_begin23
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1368-.Lfunc_begin23
	.quad	.Ltmp1375-.Lfunc_begin23
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Ltmp1369-.Lfunc_begin23
	.quad	.Lfunc_end23-.Lfunc_begin23
	.short	2                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
.Lsection_abbrev:
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	4                       # DW_TAG_enumeration_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	40                      # DW_TAG_enumerator
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	10                      # DW_FORM_block1
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	44                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	45                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	46                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
	.section	.debug_info,"",@progbits
.Lsection_info:
.Lcu_begin0:
	.long	2426                    # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x973 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
	.byte	2                       # Abbrev [2] 0x2a:0x15 DW_TAG_variable
	.long	.Linfo_string3          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dxi
	.byte	3                       # Abbrev [3] 0x3f:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0x46:0x15 DW_TAG_variable
	.long	.Linfo_string5          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	deta
	.byte	2                       # Abbrev [2] 0x5b:0x15 DW_TAG_variable
	.long	.Linfo_string6          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dzeta
	.byte	2                       # Abbrev [2] 0x70:0x15 DW_TAG_variable
	.long	.Linfo_string7          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx1
	.byte	2                       # Abbrev [2] 0x85:0x15 DW_TAG_variable
	.long	.Linfo_string8          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx2
	.byte	2                       # Abbrev [2] 0x9a:0x15 DW_TAG_variable
	.long	.Linfo_string9          # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tx3
	.byte	2                       # Abbrev [2] 0xaf:0x15 DW_TAG_variable
	.long	.Linfo_string10         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty1
	.byte	2                       # Abbrev [2] 0xc4:0x15 DW_TAG_variable
	.long	.Linfo_string11         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty2
	.byte	2                       # Abbrev [2] 0xd9:0x15 DW_TAG_variable
	.long	.Linfo_string12         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ty3
	.byte	2                       # Abbrev [2] 0xee:0x15 DW_TAG_variable
	.long	.Linfo_string13         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz1
	.byte	2                       # Abbrev [2] 0x103:0x15 DW_TAG_variable
	.long	.Linfo_string14         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz2
	.byte	2                       # Abbrev [2] 0x118:0x15 DW_TAG_variable
	.long	.Linfo_string15         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tz3
	.byte	2                       # Abbrev [2] 0x12d:0x15 DW_TAG_variable
	.long	.Linfo_string16         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	nx
	.byte	3                       # Abbrev [3] 0x142:0x7 DW_TAG_base_type
	.long	.Linfo_string17         # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0x149:0x15 DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ny
	.byte	2                       # Abbrev [2] 0x15e:0x15 DW_TAG_variable
	.long	.Linfo_string19         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	nz
	.byte	2                       # Abbrev [2] 0x173:0x15 DW_TAG_variable
	.long	.Linfo_string20         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	nx0
	.byte	2                       # Abbrev [2] 0x188:0x15 DW_TAG_variable
	.long	.Linfo_string21         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ny0
	.byte	2                       # Abbrev [2] 0x19d:0x15 DW_TAG_variable
	.long	.Linfo_string22         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	nz0
	.byte	2                       # Abbrev [2] 0x1b2:0x15 DW_TAG_variable
	.long	.Linfo_string23         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ist
	.byte	2                       # Abbrev [2] 0x1c7:0x15 DW_TAG_variable
	.long	.Linfo_string24         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	iend
	.byte	2                       # Abbrev [2] 0x1dc:0x15 DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	65                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	jst
	.byte	2                       # Abbrev [2] 0x1f1:0x15 DW_TAG_variable
	.long	.Linfo_string26         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	65                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	jend
	.byte	2                       # Abbrev [2] 0x206:0x15 DW_TAG_variable
	.long	.Linfo_string27         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ii1
	.byte	2                       # Abbrev [2] 0x21b:0x15 DW_TAG_variable
	.long	.Linfo_string28         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ii2
	.byte	2                       # Abbrev [2] 0x230:0x15 DW_TAG_variable
	.long	.Linfo_string29         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ji1
	.byte	2                       # Abbrev [2] 0x245:0x15 DW_TAG_variable
	.long	.Linfo_string30         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ji2
	.byte	2                       # Abbrev [2] 0x25a:0x15 DW_TAG_variable
	.long	.Linfo_string31         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	68                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ki1
	.byte	2                       # Abbrev [2] 0x26f:0x15 DW_TAG_variable
	.long	.Linfo_string32         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	68                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ki2
	.byte	2                       # Abbrev [2] 0x284:0x15 DW_TAG_variable
	.long	.Linfo_string33         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx1
	.byte	2                       # Abbrev [2] 0x299:0x15 DW_TAG_variable
	.long	.Linfo_string34         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx2
	.byte	2                       # Abbrev [2] 0x2ae:0x15 DW_TAG_variable
	.long	.Linfo_string35         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx3
	.byte	2                       # Abbrev [2] 0x2c3:0x15 DW_TAG_variable
	.long	.Linfo_string36         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx4
	.byte	2                       # Abbrev [2] 0x2d8:0x15 DW_TAG_variable
	.long	.Linfo_string37         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dx5
	.byte	2                       # Abbrev [2] 0x2ed:0x15 DW_TAG_variable
	.long	.Linfo_string38         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy1
	.byte	2                       # Abbrev [2] 0x302:0x15 DW_TAG_variable
	.long	.Linfo_string39         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy2
	.byte	2                       # Abbrev [2] 0x317:0x15 DW_TAG_variable
	.long	.Linfo_string40         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy3
	.byte	2                       # Abbrev [2] 0x32c:0x15 DW_TAG_variable
	.long	.Linfo_string41         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy4
	.byte	2                       # Abbrev [2] 0x341:0x15 DW_TAG_variable
	.long	.Linfo_string42         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dy5
	.byte	2                       # Abbrev [2] 0x356:0x15 DW_TAG_variable
	.long	.Linfo_string43         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz1
	.byte	2                       # Abbrev [2] 0x36b:0x15 DW_TAG_variable
	.long	.Linfo_string44         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz2
	.byte	2                       # Abbrev [2] 0x380:0x15 DW_TAG_variable
	.long	.Linfo_string45         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz3
	.byte	2                       # Abbrev [2] 0x395:0x15 DW_TAG_variable
	.long	.Linfo_string46         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz4
	.byte	2                       # Abbrev [2] 0x3aa:0x15 DW_TAG_variable
	.long	.Linfo_string47         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dz5
	.byte	2                       # Abbrev [2] 0x3bf:0x15 DW_TAG_variable
	.long	.Linfo_string48         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dssp
	.byte	2                       # Abbrev [2] 0x3d4:0x15 DW_TAG_variable
	.long	.Linfo_string49         # DW_AT_name
	.long	1001                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	u
	.byte	4                       # Abbrev [4] 0x3e9:0x1e DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x3ee:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x3f4:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x3fa:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x400:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x407:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	2                       # Abbrev [2] 0x40e:0x15 DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.long	1001                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rsd
	.byte	2                       # Abbrev [2] 0x423:0x15 DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.long	1001                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	89                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	frct
	.byte	2                       # Abbrev [2] 0x438:0x15 DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.long	1101                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	90                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	flux
	.byte	4                       # Abbrev [4] 0x44d:0x12 DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x452:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x458:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x45f:0x15 DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.long	1140                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	91                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	qs
	.byte	4                       # Abbrev [4] 0x474:0x18 DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x479:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x47f:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x485:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x48c:0x15 DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.long	1140                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rho_i
	.byte	2                       # Abbrev [2] 0x4a1:0x15 DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ipr
	.byte	2                       # Abbrev [2] 0x4b6:0x15 DW_TAG_variable
	.long	.Linfo_string57         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	inorm
	.byte	2                       # Abbrev [2] 0x4cb:0x15 DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	dt
	.byte	2                       # Abbrev [2] 0x4e0:0x15 DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	omega
	.byte	2                       # Abbrev [2] 0x4f5:0x15 DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.long	1290                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	tolrsd
	.byte	4                       # Abbrev [4] 0x50a:0xc DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x50f:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x516:0x15 DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.long	1290                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	rsdnm
	.byte	2                       # Abbrev [2] 0x52b:0x15 DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.long	1290                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	errnm
	.byte	2                       # Abbrev [2] 0x540:0x15 DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	frc
	.byte	2                       # Abbrev [2] 0x555:0x15 DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ttotal
	.byte	2                       # Abbrev [2] 0x56a:0x15 DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	105                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	itmax
	.byte	2                       # Abbrev [2] 0x57f:0x15 DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.long	322                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	105                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	invert
	.byte	2                       # Abbrev [2] 0x594:0x15 DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.long	1449                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	108                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	a
	.byte	4                       # Abbrev [4] 0x5a9:0x1e DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x5ae:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x5b4:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	65                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x5ba:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x5c0:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x5c7:0x15 DW_TAG_variable
	.long	.Linfo_string68         # DW_AT_name
	.long	1449                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	b
	.byte	2                       # Abbrev [2] 0x5dc:0x15 DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.long	1449                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	110                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	c
	.byte	2                       # Abbrev [2] 0x5f1:0x15 DW_TAG_variable
	.long	.Linfo_string70         # DW_AT_name
	.long	1449                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	111                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	d
	.byte	2                       # Abbrev [2] 0x606:0x15 DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.long	1563                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	118                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	ce
	.byte	4                       # Abbrev [4] 0x61b:0x12 DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x620:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x626:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	13                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x62d:0x15 DW_TAG_variable
	.long	.Linfo_string72         # DW_AT_name
	.long	63                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	125                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	maxtime
	.byte	2                       # Abbrev [2] 0x642:0x15 DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.long	1623                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	126                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	timeron
	.byte	7                       # Abbrev [7] 0x657:0xb DW_TAG_typedef
	.long	1634                    # DW_AT_type
	.long	.Linfo_string76         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0x662:0x11 DW_TAG_enumeration_type
	.byte	4                       # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0x666:0x6 DW_TAG_enumerator
	.long	.Linfo_string74         # DW_AT_name
	.byte	0                       # DW_AT_const_value
	.byte	9                       # Abbrev [9] 0x66c:0x6 DW_TAG_enumerator
	.long	.Linfo_string75         # DW_AT_name
	.byte	1                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x673:0x1 DW_TAG_pointer_type
	.byte	11                      # Abbrev [11] 0x674:0xbc DW_TAG_subprogram
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string103        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	129                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	322                     # DW_AT_type
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	12                      # Abbrev [12] 0x68d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc0            # DW_AT_location
	.long	.Linfo_string130        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	129                     # DW_AT_decl_line
	.long	322                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x69c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc1            # DW_AT_location
	.long	.Linfo_string131        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	129                     # DW_AT_decl_line
	.long	1876                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0x6ab:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\001"
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	135                     # DW_AT_decl_line
	.long	1840                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0x6ba:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\360\001"
	.long	.Linfo_string128        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	137                     # DW_AT_decl_line
	.long	1852                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0x6c9:0xf DW_TAG_variable
	.long	.Ldebug_loc2            # DW_AT_location
	.long	.Linfo_string132        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	142                     # DW_AT_decl_line
	.long	1881                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0x6d8:0xf DW_TAG_variable
	.long	.Ldebug_loc3            # DW_AT_location
	.long	.Linfo_string176        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	131                     # DW_AT_decl_line
	.long	1869                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0x6e7:0xf DW_TAG_variable
	.long	.Ldebug_loc4            # DW_AT_location
	.long	.Linfo_string177        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
	.long	1623                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0x6f6:0xf DW_TAG_variable
	.long	.Ldebug_loc5            # DW_AT_location
	.long	.Linfo_string178        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	133                     # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0x705:0xf DW_TAG_variable
	.long	.Ldebug_loc6            # DW_AT_location
	.long	.Linfo_string179        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	135                     # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	15                      # Abbrev [15] 0x714:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string180        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	136                     # DW_AT_decl_line
	.long	322                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x720:0xf DW_TAG_variable
	.long	.Ldebug_loc7            # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	135                     # DW_AT_decl_line
	.long	63                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0x730:0xc DW_TAG_array_type
	.long	63                      # DW_AT_type
	.byte	5                       # Abbrev [5] 0x735:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	12                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0x73c:0xc DW_TAG_array_type
	.long	1864                    # DW_AT_type
	.byte	5                       # Abbrev [5] 0x741:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	12                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x748:0x5 DW_TAG_pointer_type
	.long	1869                    # DW_AT_type
	.byte	3                       # Abbrev [3] 0x74d:0x7 DW_TAG_base_type
	.long	.Linfo_string129        # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	16                      # Abbrev [16] 0x754:0x5 DW_TAG_pointer_type
	.long	1864                    # DW_AT_type
	.byte	16                      # Abbrev [16] 0x759:0x5 DW_TAG_pointer_type
	.long	1886                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0x75e:0xb DW_TAG_typedef
	.long	1897                    # DW_AT_type
	.long	.Linfo_string175        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.byte	17                      # Abbrev [17] 0x769:0x17c DW_TAG_structure_type
	.long	.Linfo_string174        # DW_AT_name
	.byte	216                     # DW_AT_byte_size
	.byte	24                      # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0x771:0xc DW_TAG_member
	.long	.Linfo_string133        # DW_AT_name
	.long	322                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x77d:0xc DW_TAG_member
	.long	.Linfo_string134        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	251                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x789:0xc DW_TAG_member
	.long	.Linfo_string135        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	252                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x795:0xc DW_TAG_member
	.long	.Linfo_string136        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x7a1:0xc DW_TAG_member
	.long	.Linfo_string137        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	254                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x7ad:0xc DW_TAG_member
	.long	.Linfo_string138        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	255                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x7b9:0xd DW_TAG_member
	.long	.Linfo_string139        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x7c6:0xd DW_TAG_member
	.long	.Linfo_string140        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	257                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x7d3:0xd DW_TAG_member
	.long	.Linfo_string141        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	258                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x7e0:0xd DW_TAG_member
	.long	.Linfo_string142        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x7ed:0xd DW_TAG_member
	.long	.Linfo_string143        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	80                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x7fa:0xd DW_TAG_member
	.long	.Linfo_string144        # DW_AT_name
	.long	1864                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	262                     # DW_AT_decl_line
	.byte	88                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x807:0xd DW_TAG_member
	.long	.Linfo_string145        # DW_AT_name
	.long	2277                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	96                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x814:0xd DW_TAG_member
	.long	.Linfo_string150        # DW_AT_name
	.long	2327                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.byte	104                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x821:0xd DW_TAG_member
	.long	.Linfo_string151        # DW_AT_name
	.long	322                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	268                     # DW_AT_decl_line
	.byte	112                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x82e:0xd DW_TAG_member
	.long	.Linfo_string152        # DW_AT_name
	.long	322                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.byte	116                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x83b:0xd DW_TAG_member
	.long	.Linfo_string153        # DW_AT_name
	.long	2332                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	274                     # DW_AT_decl_line
	.byte	120                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x848:0xd DW_TAG_member
	.long	.Linfo_string156        # DW_AT_name
	.long	2350                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	278                     # DW_AT_decl_line
	.byte	128                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x855:0xd DW_TAG_member
	.long	.Linfo_string158        # DW_AT_name
	.long	2357                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	279                     # DW_AT_decl_line
	.byte	130                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x862:0xd DW_TAG_member
	.long	.Linfo_string160        # DW_AT_name
	.long	2364                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	280                     # DW_AT_decl_line
	.byte	131                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x86f:0xd DW_TAG_member
	.long	.Linfo_string161        # DW_AT_name
	.long	2376                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	136                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x87c:0xd DW_TAG_member
	.long	.Linfo_string163        # DW_AT_name
	.long	2388                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	293                     # DW_AT_decl_line
	.byte	144                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x889:0xd DW_TAG_member
	.long	.Linfo_string165        # DW_AT_name
	.long	1651                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	302                     # DW_AT_decl_line
	.byte	152                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x896:0xd DW_TAG_member
	.long	.Linfo_string166        # DW_AT_name
	.long	1651                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	303                     # DW_AT_decl_line
	.byte	160                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x8a3:0xd DW_TAG_member
	.long	.Linfo_string167        # DW_AT_name
	.long	1651                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	304                     # DW_AT_decl_line
	.byte	168                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x8b0:0xd DW_TAG_member
	.long	.Linfo_string168        # DW_AT_name
	.long	1651                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	305                     # DW_AT_decl_line
	.byte	176                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x8bd:0xd DW_TAG_member
	.long	.Linfo_string169        # DW_AT_name
	.long	2399                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	306                     # DW_AT_decl_line
	.byte	184                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x8ca:0xd DW_TAG_member
	.long	.Linfo_string172        # DW_AT_name
	.long	322                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	308                     # DW_AT_decl_line
	.byte	192                     # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x8d7:0xd DW_TAG_member
	.long	.Linfo_string173        # DW_AT_name
	.long	2417                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	310                     # DW_AT_decl_line
	.byte	196                     # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x8e5:0x5 DW_TAG_pointer_type
	.long	2282                    # DW_AT_type
	.byte	17                      # Abbrev [17] 0x8ea:0x2d DW_TAG_structure_type
	.long	.Linfo_string149        # DW_AT_name
	.byte	24                      # DW_AT_byte_size
	.byte	24                      # DW_AT_decl_file
	.byte	160                     # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0x8f2:0xc DW_TAG_member
	.long	.Linfo_string146        # DW_AT_name
	.long	2277                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	161                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x8fe:0xc DW_TAG_member
	.long	.Linfo_string147        # DW_AT_name
	.long	2327                    # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	162                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x90a:0xc DW_TAG_member
	.long	.Linfo_string148        # DW_AT_name
	.long	322                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x917:0x5 DW_TAG_pointer_type
	.long	1897                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0x91c:0xb DW_TAG_typedef
	.long	2343                    # DW_AT_type
	.long	.Linfo_string155        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	131                     # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x927:0x7 DW_TAG_base_type
	.long	.Linfo_string154        # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0x92e:0x7 DW_TAG_base_type
	.long	.Linfo_string157        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	2                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0x935:0x7 DW_TAG_base_type
	.long	.Linfo_string159        # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	4                       # Abbrev [4] 0x93c:0xc DW_TAG_array_type
	.long	1869                    # DW_AT_type
	.byte	5                       # Abbrev [5] 0x941:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	1                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x948:0x5 DW_TAG_pointer_type
	.long	2381                    # DW_AT_type
	.byte	20                      # Abbrev [20] 0x94d:0x7 DW_TAG_typedef
	.long	.Linfo_string162        # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	154                     # DW_AT_decl_line
	.byte	7                       # Abbrev [7] 0x954:0xb DW_TAG_typedef
	.long	2343                    # DW_AT_type
	.long	.Linfo_string164        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
	.byte	7                       # Abbrev [7] 0x95f:0xb DW_TAG_typedef
	.long	2410                    # DW_AT_type
	.long	.Linfo_string171        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x96a:0x7 DW_TAG_base_type
	.long	.Linfo_string170        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	4                       # Abbrev [4] 0x971:0xc DW_TAG_array_type
	.long	1869                    # DW_AT_type
	.byte	5                       # Abbrev [5] 0x976:0x6 DW_TAG_subrange_type
	.long	1031                    # DW_AT_type
	.byte	20                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin1:
	.long	539                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x214 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string77         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
	.byte	21                      # Abbrev [21] 0x2a:0x31 DW_TAG_subprogram
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string104        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	14                      # Abbrev [14] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc8            # DW_AT_location
	.long	.Linfo_string132        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	91                      # DW_AT_type
	.byte	22                      # Abbrev [22] 0x4e:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string181        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x5b:0x5 DW_TAG_pointer_type
	.long	96                      # DW_AT_type
	.byte	7                       # Abbrev [7] 0x60:0xb DW_TAG_typedef
	.long	107                     # DW_AT_type
	.long	.Linfo_string175        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.byte	17                      # Abbrev [17] 0x6b:0x17c DW_TAG_structure_type
	.long	.Linfo_string174        # DW_AT_name
	.byte	216                     # DW_AT_byte_size
	.byte	24                      # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.byte	23                      # Abbrev [23] 0x73:0xc DW_TAG_member
	.long	.Linfo_string133        # DW_AT_name
	.long	.Lsection_info+322      # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	23                      # Abbrev [23] 0x7f:0xc DW_TAG_member
	.long	.Linfo_string134        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	251                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	23                      # Abbrev [23] 0x8b:0xc DW_TAG_member
	.long	.Linfo_string135        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	252                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	23                      # Abbrev [23] 0x97:0xc DW_TAG_member
	.long	.Linfo_string136        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	23                      # Abbrev [23] 0xa3:0xc DW_TAG_member
	.long	.Linfo_string137        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	254                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	23                      # Abbrev [23] 0xaf:0xc DW_TAG_member
	.long	.Linfo_string138        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	255                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0xbb:0xd DW_TAG_member
	.long	.Linfo_string139        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0xc8:0xd DW_TAG_member
	.long	.Linfo_string140        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	257                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0xd5:0xd DW_TAG_member
	.long	.Linfo_string141        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	258                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0xe2:0xd DW_TAG_member
	.long	.Linfo_string142        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0xef:0xd DW_TAG_member
	.long	.Linfo_string143        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	80                      # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0xfc:0xd DW_TAG_member
	.long	.Linfo_string144        # DW_AT_name
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	262                     # DW_AT_decl_line
	.byte	88                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x109:0xd DW_TAG_member
	.long	.Linfo_string145        # DW_AT_name
	.long	487                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	96                      # DW_AT_data_member_location
	.byte	19                      # Abbrev [19] 0x116:0xd DW_TAG_member
	.long	.Linfo_string150        # DW_AT_name
	.long	537                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.byte	104                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x123:0xd DW_TAG_member
	.long	.Linfo_string151        # DW_AT_name
	.long	.Lsection_info+322      # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	268                     # DW_AT_decl_line
	.byte	112                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x130:0xd DW_TAG_member
	.long	.Linfo_string152        # DW_AT_name
	.long	.Lsection_info+322      # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.byte	116                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x13d:0xd DW_TAG_member
	.long	.Linfo_string153        # DW_AT_name
	.long	.Lsection_info+2332     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	274                     # DW_AT_decl_line
	.byte	120                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x14a:0xd DW_TAG_member
	.long	.Linfo_string156        # DW_AT_name
	.long	.Lsection_info+2350     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	278                     # DW_AT_decl_line
	.byte	128                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x157:0xd DW_TAG_member
	.long	.Linfo_string158        # DW_AT_name
	.long	.Lsection_info+2357     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	279                     # DW_AT_decl_line
	.byte	130                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x164:0xd DW_TAG_member
	.long	.Linfo_string160        # DW_AT_name
	.long	.Lsection_info+2364     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	280                     # DW_AT_decl_line
	.byte	131                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x171:0xd DW_TAG_member
	.long	.Linfo_string161        # DW_AT_name
	.long	.Lsection_info+2376     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	136                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x17e:0xd DW_TAG_member
	.long	.Linfo_string163        # DW_AT_name
	.long	.Lsection_info+2388     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	293                     # DW_AT_decl_line
	.byte	144                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x18b:0xd DW_TAG_member
	.long	.Linfo_string165        # DW_AT_name
	.long	.Lsection_info+1651     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	302                     # DW_AT_decl_line
	.byte	152                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x198:0xd DW_TAG_member
	.long	.Linfo_string166        # DW_AT_name
	.long	.Lsection_info+1651     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	303                     # DW_AT_decl_line
	.byte	160                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x1a5:0xd DW_TAG_member
	.long	.Linfo_string167        # DW_AT_name
	.long	.Lsection_info+1651     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	304                     # DW_AT_decl_line
	.byte	168                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x1b2:0xd DW_TAG_member
	.long	.Linfo_string168        # DW_AT_name
	.long	.Lsection_info+1651     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	305                     # DW_AT_decl_line
	.byte	176                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x1bf:0xd DW_TAG_member
	.long	.Linfo_string169        # DW_AT_name
	.long	.Lsection_info+2399     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	306                     # DW_AT_decl_line
	.byte	184                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x1cc:0xd DW_TAG_member
	.long	.Linfo_string172        # DW_AT_name
	.long	.Lsection_info+322      # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	308                     # DW_AT_decl_line
	.byte	192                     # DW_AT_data_member_location
	.byte	24                      # Abbrev [24] 0x1d9:0xd DW_TAG_member
	.long	.Linfo_string173        # DW_AT_name
	.long	.Lsection_info+2417     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.short	310                     # DW_AT_decl_line
	.byte	196                     # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x1e7:0x5 DW_TAG_pointer_type
	.long	492                     # DW_AT_type
	.byte	17                      # Abbrev [17] 0x1ec:0x2d DW_TAG_structure_type
	.long	.Linfo_string149        # DW_AT_name
	.byte	24                      # DW_AT_byte_size
	.byte	24                      # DW_AT_decl_file
	.byte	160                     # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0x1f4:0xc DW_TAG_member
	.long	.Linfo_string146        # DW_AT_name
	.long	487                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	161                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x200:0xc DW_TAG_member
	.long	.Linfo_string147        # DW_AT_name
	.long	537                     # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	162                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	23                      # Abbrev [23] 0x20c:0xc DW_TAG_member
	.long	.Linfo_string148        # DW_AT_name
	.long	.Lsection_info+322      # DW_AT_type
	.byte	24                      # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x219:0x5 DW_TAG_pointer_type
	.long	107                     # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin2:
	.long	60                      # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x35 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string78         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
	.byte	25                      # Abbrev [25] 0x2a:0x15 DW_TAG_subprogram
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string105        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	0                       # End Of Children Mark
.Lcu_begin3:
	.long	60                      # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x35 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string79         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
	.byte	25                      # Abbrev [25] 0x2a:0x15 DW_TAG_subprogram
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string106        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	0                       # End Of Children Mark
.Lcu_begin4:
	.long	135                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x80 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string80         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
	.byte	21                      # Abbrev [21] 0x2a:0x60 DW_TAG_subprogram
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string107        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	26                      # Abbrev [26] 0x3f:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	48
	.long	.Linfo_string182        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x4d:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	0
	.long	.Linfo_string183        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x5b:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string184        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	22                      # Abbrev [22] 0x67:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x73:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x7e:0xb DW_TAG_variable
	.long	.Linfo_string186        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin5:
	.long	183                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xb0 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string81         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0x8b DW_TAG_subprogram
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string108        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0x3f:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string180        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4e:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	84
	.byte	147
	.byte	4
	.long	.Linfo_string184        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x5d:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	81
	.byte	147
	.byte	4
	.long	.Linfo_string186        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	12                      # Abbrev [12] 0x6c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc9            # DW_AT_location
	.long	.Linfo_string187        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc10           # DW_AT_location
	.long	.Linfo_string188        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc11           # DW_AT_location
	.long	.Linfo_string189        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	22                      # Abbrev [22] 0x99:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xa5:0xf DW_TAG_variable
	.long	.Ldebug_loc12           # DW_AT_location
	.long	.Linfo_string190        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0xb5:0x5 DW_TAG_pointer_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin6:
	.long	276                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x10d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string82         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
	.byte	21                      # Abbrev [21] 0x2a:0xed DW_TAG_subprogram
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string109        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	26                      # Abbrev [26] 0x3f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\003"
	.long	.Linfo_string191        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x4e:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\001"
	.long	.Linfo_string192        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x5d:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\001"
	.long	.Linfo_string193        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x6c:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\340"
	.long	.Linfo_string194        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x7b:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	48
	.long	.Linfo_string195        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x89:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\002"
	.long	.Linfo_string196        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x98:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string186        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	22                      # Abbrev [22] 0xa4:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string184        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xb0:0xf DW_TAG_variable
	.long	.Ldebug_loc13           # DW_AT_location
	.long	.Linfo_string190        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	22                      # Abbrev [22] 0xbf:0xc DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string180        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xcb:0xf DW_TAG_variable
	.long	.Ldebug_loc14           # DW_AT_location
	.long	.Linfo_string189        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xda:0xf DW_TAG_variable
	.long	.Ldebug_loc15           # DW_AT_location
	.long	.Linfo_string188        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	22                      # Abbrev [22] 0xe9:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xf5:0xb DW_TAG_variable
	.long	.Linfo_string197        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x100:0xb DW_TAG_variable
	.long	.Linfo_string198        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x10b:0xb DW_TAG_variable
	.long	.Linfo_string199        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin7:
	.long	544                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x219 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string83         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
	.byte	21                      # Abbrev [21] 0x2a:0x1f9 DW_TAG_subprogram
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string110        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	30                      # Abbrev [30] 0x3f:0xf DW_TAG_variable
	.long	.Ldebug_loc16           # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	22                      # Abbrev [22] 0x4e:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string184        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x5a:0xf DW_TAG_variable
	.long	.Ldebug_loc17           # DW_AT_location
	.long	.Linfo_string190        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	22                      # Abbrev [22] 0x69:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string180        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x75:0xf DW_TAG_variable
	.long	.Ldebug_loc18           # DW_AT_location
	.long	.Linfo_string189        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	22                      # Abbrev [22] 0x84:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x90:0xf DW_TAG_variable
	.long	.Ldebug_loc19           # DW_AT_location
	.long	.Linfo_string188        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x9f:0xf DW_TAG_variable
	.long	.Ldebug_loc20           # DW_AT_location
	.long	.Linfo_string200        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xae:0xf DW_TAG_variable
	.long	.Ldebug_loc21           # DW_AT_location
	.long	.Linfo_string201        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xbd:0xf DW_TAG_variable
	.long	.Ldebug_loc22           # DW_AT_location
	.long	.Linfo_string202        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xcc:0xf DW_TAG_variable
	.long	.Ldebug_loc23           # DW_AT_location
	.long	.Linfo_string203        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xdb:0xf DW_TAG_variable
	.long	.Ldebug_loc24           # DW_AT_location
	.long	.Linfo_string204        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xea:0xf DW_TAG_variable
	.long	.Ldebug_loc25           # DW_AT_location
	.long	.Linfo_string205        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xf9:0xf DW_TAG_variable
	.long	.Ldebug_loc26           # DW_AT_location
	.long	.Linfo_string206        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x108:0xf DW_TAG_variable
	.long	.Ldebug_loc27           # DW_AT_location
	.long	.Linfo_string207        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x117:0xf DW_TAG_variable
	.long	.Ldebug_loc28           # DW_AT_location
	.long	.Linfo_string208        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x126:0xf DW_TAG_variable
	.long	.Ldebug_loc29           # DW_AT_location
	.long	.Linfo_string209        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x135:0xf DW_TAG_variable
	.long	.Ldebug_loc30           # DW_AT_location
	.long	.Linfo_string210        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x144:0xf DW_TAG_variable
	.long	.Ldebug_loc31           # DW_AT_location
	.long	.Linfo_string211        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x153:0xf DW_TAG_variable
	.long	.Ldebug_loc32           # DW_AT_location
	.long	.Linfo_string212        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x162:0xf DW_TAG_variable
	.long	.Ldebug_loc33           # DW_AT_location
	.long	.Linfo_string213        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x171:0xf DW_TAG_variable
	.long	.Ldebug_loc34           # DW_AT_location
	.long	.Linfo_string214        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x180:0xf DW_TAG_variable
	.long	.Ldebug_loc35           # DW_AT_location
	.long	.Linfo_string215        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x18f:0xf DW_TAG_variable
	.long	.Ldebug_loc36           # DW_AT_location
	.long	.Linfo_string216        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x19e:0xb DW_TAG_variable
	.long	.Linfo_string217        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1a9:0xb DW_TAG_variable
	.long	.Linfo_string218        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1b4:0xb DW_TAG_variable
	.long	.Linfo_string219        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1bf:0xb DW_TAG_variable
	.long	.Linfo_string220        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1ca:0xb DW_TAG_variable
	.long	.Linfo_string221        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1d5:0xb DW_TAG_variable
	.long	.Linfo_string222        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1e0:0xb DW_TAG_variable
	.long	.Linfo_string223        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1eb:0xb DW_TAG_variable
	.long	.Linfo_string224        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1f6:0xb DW_TAG_variable
	.long	.Linfo_string225        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x201:0xb DW_TAG_variable
	.long	.Linfo_string226        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x20c:0xb DW_TAG_variable
	.long	.Linfo_string227        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x217:0xb DW_TAG_variable
	.long	.Linfo_string228        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin8:
	.long	231                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xe0 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string84         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0xa1 DW_TAG_subprogram
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string111        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc37           # DW_AT_location
	.long	.Linfo_string231        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	13                      # Abbrev [13] 0x4e:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\001"
	.long	.Linfo_string229        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	203                     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x5d:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\001"
	.long	.Linfo_string230        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x6c:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string184        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x78:0xf DW_TAG_variable
	.long	.Ldebug_loc38           # DW_AT_location
	.long	.Linfo_string180        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x87:0xf DW_TAG_variable
	.long	.Ldebug_loc39           # DW_AT_location
	.long	.Linfo_string232        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x96:0xf DW_TAG_variable
	.long	.Ldebug_loc40           # DW_AT_location
	.long	.Linfo_string202        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xa5:0xf DW_TAG_variable
	.long	.Ldebug_loc41           # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xb4:0xb DW_TAG_variable
	.long	.Linfo_string185        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xbf:0xb DW_TAG_variable
	.long	.Linfo_string233        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0xcb:0x18 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0xd0:0x6 DW_TAG_subrange_type
	.long	227                     # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0xd6:0x6 DW_TAG_subrange_type
	.long	227                     # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0xdc:0x6 DW_TAG_subrange_type
	.long	227                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0xe3:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Lcu_begin9:
	.long	548                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x21d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string85         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
	.byte	21                      # Abbrev [21] 0x2a:0x1e4 DW_TAG_subprogram
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string112        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	13                      # Abbrev [13] 0x3f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\004"
	.long	.Linfo_string234        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	526                     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x4e:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\034"
	.long	.Linfo_string235        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+1101     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x5d:0xf DW_TAG_variable
	.long	.Ldebug_loc42           # DW_AT_location
	.long	.Linfo_string202        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x6c:0xf DW_TAG_variable
	.long	.Ldebug_loc43           # DW_AT_location
	.long	.Linfo_string200        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x7b:0xf DW_TAG_variable
	.long	.Ldebug_loc44           # DW_AT_location
	.long	.Linfo_string201        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc45           # DW_AT_location
	.long	.Linfo_string203        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc46           # DW_AT_location
	.long	.Linfo_string204        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xa8:0xf DW_TAG_variable
	.long	.Ldebug_loc47           # DW_AT_location
	.long	.Linfo_string205        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xb7:0xf DW_TAG_variable
	.long	.Ldebug_loc48           # DW_AT_location
	.long	.Linfo_string206        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	22                      # Abbrev [22] 0xc6:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xd2:0xf DW_TAG_variable
	.long	.Ldebug_loc49           # DW_AT_location
	.long	.Linfo_string207        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xe1:0xf DW_TAG_variable
	.long	.Ldebug_loc50           # DW_AT_location
	.long	.Linfo_string208        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xf0:0xf DW_TAG_variable
	.long	.Ldebug_loc51           # DW_AT_location
	.long	.Linfo_string209        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xff:0xf DW_TAG_variable
	.long	.Ldebug_loc52           # DW_AT_location
	.long	.Linfo_string210        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x10e:0xf DW_TAG_variable
	.long	.Ldebug_loc53           # DW_AT_location
	.long	.Linfo_string211        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x11d:0xf DW_TAG_variable
	.long	.Ldebug_loc54           # DW_AT_location
	.long	.Linfo_string212        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x12c:0xf DW_TAG_variable
	.long	.Ldebug_loc55           # DW_AT_location
	.long	.Linfo_string213        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x13b:0xf DW_TAG_variable
	.long	.Ldebug_loc56           # DW_AT_location
	.long	.Linfo_string214        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x14a:0xf DW_TAG_variable
	.long	.Ldebug_loc57           # DW_AT_location
	.long	.Linfo_string215        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x159:0xf DW_TAG_variable
	.long	.Ldebug_loc58           # DW_AT_location
	.long	.Linfo_string216        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x168:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x173:0xb DW_TAG_variable
	.long	.Linfo_string184        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x17e:0xb DW_TAG_variable
	.long	.Linfo_string186        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x189:0xb DW_TAG_variable
	.long	.Linfo_string217        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x194:0xb DW_TAG_variable
	.long	.Linfo_string218        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x19f:0xb DW_TAG_variable
	.long	.Linfo_string219        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1aa:0xb DW_TAG_variable
	.long	.Linfo_string220        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1b5:0xb DW_TAG_variable
	.long	.Linfo_string221        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1c0:0xb DW_TAG_variable
	.long	.Linfo_string222        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1cb:0xb DW_TAG_variable
	.long	.Linfo_string223        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1d6:0xb DW_TAG_variable
	.long	.Linfo_string224        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1e1:0xb DW_TAG_variable
	.long	.Linfo_string225        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1ec:0xb DW_TAG_variable
	.long	.Linfo_string226        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1f7:0xb DW_TAG_variable
	.long	.Linfo_string227        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x202:0xb DW_TAG_variable
	.long	.Linfo_string228        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x20e:0x12 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x213:0x6 DW_TAG_subrange_type
	.long	544                     # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x219:0x6 DW_TAG_subrange_type
	.long	544                     # DW_AT_type
	.byte	6                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x220:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Lcu_begin10:
	.long	316                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x135 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string86         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0xf3 DW_TAG_subprogram
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string113        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc59           # DW_AT_location
	.long	.Linfo_string236        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x4e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc60           # DW_AT_location
	.long	.Linfo_string237        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x5d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc61           # DW_AT_location
	.long	.Linfo_string238        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x6c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc62           # DW_AT_location
	.long	.Linfo_string20         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x7b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc63           # DW_AT_location
	.long	.Linfo_string21         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x8a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc64           # DW_AT_location
	.long	.Linfo_string22         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x99:0xb DW_TAG_formal_parameter
	.long	.Linfo_string23         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0xa4:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc69           # DW_AT_location
	.long	.Linfo_string24         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0xb3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc67           # DW_AT_location
	.long	.Linfo_string25         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0xc2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc66           # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	12                      # Abbrev [12] 0xd1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc68           # DW_AT_location
	.long	.Linfo_string240        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	285                     # DW_AT_type
	.byte	32                      # Abbrev [32] 0xe0:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc65           # DW_AT_location
	.long	.Linfo_string239        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+3421     # DW_AT_type
	.byte	22                      # Abbrev [22] 0xef:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xfb:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x106:0xb DW_TAG_variable
	.long	.Linfo_string184        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x111:0xb DW_TAG_variable
	.long	.Linfo_string186        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x11d:0x5 DW_TAG_pointer_type
	.long	290                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x122:0x16 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	35                      # Abbrev [35] 0x127:0x5 DW_TAG_subrange_type
	.long	312                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x12c:0x5 DW_TAG_subrange_type
	.long	312                     # DW_AT_type
	.byte	5                       # Abbrev [5] 0x131:0x6 DW_TAG_subrange_type
	.long	312                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x138:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Lcu_begin11:
	.long	203                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xc4 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string87         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0xa4 DW_TAG_subprogram
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string114        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc70           # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x4e:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	85
	.byte	85
	.byte	85
	.byte	85
	.byte	85
	.byte	85
	.byte	245
	.byte	63
	.long	.Linfo_string241        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	36                      # Abbrev [36] 0x62:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	73
	.byte	12
	.byte	2
	.byte	43
	.byte	135
	.byte	22
	.byte	201
	.byte	63
	.long	.Linfo_string242        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	36                      # Abbrev [36] 0x76:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	154
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	185
	.byte	63
	.long	.Linfo_string243        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc71           # DW_AT_location
	.long	.Linfo_string244        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc72           # DW_AT_location
	.long	.Linfo_string245        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xa8:0xf DW_TAG_variable
	.long	.Ldebug_loc73           # DW_AT_location
	.long	.Linfo_string246        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0xb7:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xc2:0xb DW_TAG_variable
	.long	.Linfo_string184        # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin12:
	.long	528                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x209 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string88         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0x19e DW_TAG_subprogram
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string115        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc74           # DW_AT_location
	.long	.Linfo_string248        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x4e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc75           # DW_AT_location
	.long	.Linfo_string249        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x5d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc76           # DW_AT_location
	.long	.Linfo_string250        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x6c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc77           # DW_AT_location
	.long	.Linfo_string16         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x7b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc78           # DW_AT_location
	.long	.Linfo_string18         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x8a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc79           # DW_AT_location
	.long	.Linfo_string19         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x99:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\002"
	.long	.Linfo_string186        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0xa8:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc80           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	32                      # Abbrev [32] 0xb7:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc85           # DW_AT_location
	.long	.Linfo_string240        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+5327     # DW_AT_type
	.byte	12                      # Abbrev [12] 0xc6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc86           # DW_AT_location
	.long	.Linfo_string238        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	481                     # DW_AT_type
	.byte	37                      # Abbrev [37] 0xd5:0xb DW_TAG_formal_parameter
	.long	.Linfo_string237        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	481                     # DW_AT_type
	.byte	37                      # Abbrev [37] 0xe0:0xb DW_TAG_formal_parameter
	.long	.Linfo_string236        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	481                     # DW_AT_type
	.byte	37                      # Abbrev [37] 0xeb:0xb DW_TAG_formal_parameter
	.long	.Linfo_string70         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	481                     # DW_AT_type
	.byte	32                      # Abbrev [32] 0xf6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc84           # DW_AT_location
	.long	.Linfo_string23         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x105:0xb DW_TAG_formal_parameter
	.long	.Linfo_string24         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x110:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc83           # DW_AT_location
	.long	.Linfo_string25         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x11f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc81           # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x12e:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\003"
	.long	.Linfo_string20         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x13d:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\270\003"
	.long	.Linfo_string21         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	13                      # Abbrev [13] 0x14c:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	.Linfo_string247        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	456                     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x15b:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\177"
	.long	.Linfo_string229        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x16a:0xf DW_TAG_variable
	.long	.Ldebug_loc82           # DW_AT_location
	.long	.Linfo_string184        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	13                      # Abbrev [13] 0x179:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\250\177"
	.long	.Linfo_string251        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	509                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x188:0xf DW_TAG_variable
	.long	.Ldebug_loc87           # DW_AT_location
	.long	.Linfo_string244        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x197:0xf DW_TAG_variable
	.long	.Ldebug_loc88           # DW_AT_location
	.long	.Linfo_string202        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1a6:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1b1:0xb DW_TAG_variable
	.long	.Linfo_string185        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	38                      # Abbrev [38] 0x1bc:0xb DW_TAG_variable
	.long	.Linfo_string252        # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	65                      # DW_AT_decl_line
	.long	509                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x1c8:0x12 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x1cd:0x6 DW_TAG_subrange_type
	.long	474                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x1d3:0x6 DW_TAG_subrange_type
	.long	474                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x1da:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	16                      # Abbrev [16] 0x1e1:0x5 DW_TAG_pointer_type
	.long	486                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x1e6:0x17 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	35                      # Abbrev [35] 0x1eb:0x5 DW_TAG_subrange_type
	.long	474                     # DW_AT_type
	.byte	5                       # Abbrev [5] 0x1f0:0x6 DW_TAG_subrange_type
	.long	474                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	5                       # Abbrev [5] 0x1f6:0x6 DW_TAG_subrange_type
	.long	474                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x1fd:0x5 DW_TAG_pointer_type
	.long	514                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x202:0x11 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	35                      # Abbrev [35] 0x207:0x5 DW_TAG_subrange_type
	.long	474                     # DW_AT_type
	.byte	5                       # Abbrev [5] 0x20c:0x6 DW_TAG_subrange_type
	.long	474                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin13:
	.long	203                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xc4 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string89         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0xa4 DW_TAG_subprogram
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string116        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc89           # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x4e:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	85
	.byte	85
	.byte	85
	.byte	85
	.byte	85
	.byte	85
	.byte	245
	.byte	63
	.long	.Linfo_string241        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	36                      # Abbrev [36] 0x62:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	73
	.byte	12
	.byte	2
	.byte	43
	.byte	135
	.byte	22
	.byte	201
	.byte	63
	.long	.Linfo_string242        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	36                      # Abbrev [36] 0x76:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	154
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	185
	.byte	63
	.long	.Linfo_string243        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x8a:0xf DW_TAG_variable
	.long	.Ldebug_loc90           # DW_AT_location
	.long	.Linfo_string244        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x99:0xf DW_TAG_variable
	.long	.Ldebug_loc91           # DW_AT_location
	.long	.Linfo_string245        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xa8:0xf DW_TAG_variable
	.long	.Ldebug_loc92           # DW_AT_location
	.long	.Linfo_string246        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0xb7:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xc2:0xb DW_TAG_variable
	.long	.Linfo_string184        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin14:
	.long	422                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x19f DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string90         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0x17f DW_TAG_subprogram
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string117        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc93           # DW_AT_location
	.long	.Linfo_string248        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x4e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc94           # DW_AT_location
	.long	.Linfo_string249        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x5d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc95           # DW_AT_location
	.long	.Linfo_string250        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x6c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc96           # DW_AT_location
	.long	.Linfo_string16         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x7b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc97           # DW_AT_location
	.long	.Linfo_string18         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x8a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc98           # DW_AT_location
	.long	.Linfo_string19         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x99:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc105          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0xa8:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc99           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	32                      # Abbrev [32] 0xb7:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc104          # DW_AT_location
	.long	.Linfo_string240        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+5327     # DW_AT_type
	.byte	34                      # Abbrev [34] 0xc6:0xb DW_TAG_formal_parameter
	.long	.Linfo_string229        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+6078     # DW_AT_type
	.byte	34                      # Abbrev [34] 0xd1:0xb DW_TAG_formal_parameter
	.long	.Linfo_string70         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+6050     # DW_AT_type
	.byte	34                      # Abbrev [34] 0xdc:0xb DW_TAG_formal_parameter
	.long	.Linfo_string254        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+6050     # DW_AT_type
	.byte	34                      # Abbrev [34] 0xe7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string255        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	.Lsection_info+6050     # DW_AT_type
	.byte	32                      # Abbrev [32] 0xf2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc106          # DW_AT_location
	.long	.Linfo_string253        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	.Lsection_info+6050     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x101:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc103          # DW_AT_location
	.long	.Linfo_string23         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x110:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc102          # DW_AT_location
	.long	.Linfo_string24         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x11f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc101          # DW_AT_location
	.long	.Linfo_string25         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x12e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc100          # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x13d:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\210\003"
	.long	.Linfo_string20         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14c:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\003"
	.long	.Linfo_string21         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x15b:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	48
	.long	.Linfo_string247        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	.Lsection_info+6025     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x169:0xf DW_TAG_variable
	.long	.Ldebug_loc107          # DW_AT_location
	.long	.Linfo_string244        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x178:0xf DW_TAG_variable
	.long	.Ldebug_loc108          # DW_AT_location
	.long	.Linfo_string202        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x187:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x192:0xb DW_TAG_variable
	.long	.Linfo_string184        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x19d:0xb DW_TAG_variable
	.long	.Linfo_string185        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin15:
	.long	131                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x7c DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string91         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
	.byte	21                      # Abbrev [21] 0x2a:0x5c DW_TAG_subprogram
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string118        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	26                      # Abbrev [26] 0x3f:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string187        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x4d:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x59:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x64:0xb DW_TAG_variable
	.long	.Linfo_string184        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x6f:0xb DW_TAG_variable
	.long	.Linfo_string186        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x7a:0xb DW_TAG_variable
	.long	.Linfo_string202        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin16:
	.long	273                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x10a DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string92         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
	.byte	21                      # Abbrev [21] 0x2a:0xd1 DW_TAG_subprogram
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string119        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	13                      # Abbrev [13] 0x3f:0x10 DW_TAG_variable
	.byte	4                       # DW_AT_location
	.byte	145
	.ascii	"\220\221\002"
	.long	.Linfo_string256        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	251                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x4f:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\360"
	.long	.Linfo_string257        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	251                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x5e:0xf DW_TAG_variable
	.long	.Ldebug_loc109          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x6d:0xf DW_TAG_variable
	.long	.Ldebug_loc110          # DW_AT_location
	.long	.Linfo_string258        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x7c:0xf DW_TAG_variable
	.long	.Ldebug_loc111          # DW_AT_location
	.long	.Linfo_string259        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x8b:0xf DW_TAG_variable
	.long	.Ldebug_loc112          # DW_AT_location
	.long	.Linfo_string260        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x9a:0xf DW_TAG_variable
	.long	.Ldebug_loc113          # DW_AT_location
	.long	.Linfo_string261        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xa9:0xf DW_TAG_variable
	.long	.Ldebug_loc114          # DW_AT_location
	.long	.Linfo_string262        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0xb8:0xb DW_TAG_variable
	.long	.Linfo_string180        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xc3:0xb DW_TAG_variable
	.long	.Linfo_string184        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xce:0xb DW_TAG_variable
	.long	.Linfo_string263        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xd9:0xb DW_TAG_variable
	.long	.Linfo_string264        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xe4:0xb DW_TAG_variable
	.long	.Linfo_string265        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xef:0xb DW_TAG_variable
	.long	.Linfo_string266        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0xfb:0x12 DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x100:0x6 DW_TAG_subrange_type
	.long	269                     # DW_AT_type
	.byte	66                      # DW_AT_count
	.byte	5                       # Abbrev [5] 0x106:0x6 DW_TAG_subrange_type
	.long	269                     # DW_AT_type
	.byte	66                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x10d:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Lcu_begin17:
	.long	269                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x106 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string93         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0xe1 DW_TAG_subprogram
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string120        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc115          # DW_AT_location
	.long	.Linfo_string271        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+3421     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x4e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc116          # DW_AT_location
	.long	.Linfo_string272        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+3421     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x5d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc117          # DW_AT_location
	.long	.Linfo_string273        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	32                      # Abbrev [32] 0x6c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc118          # DW_AT_location
	.long	.Linfo_string176        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x7b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc119          # DW_AT_location
	.long	.Linfo_string177        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	267                     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x8a:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	.Linfo_string267        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x99:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string268        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0xa7:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\001"
	.long	.Linfo_string269        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	26                      # Abbrev [26] 0xb6:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\001"
	.long	.Linfo_string270        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+1290     # DW_AT_type
	.byte	36                      # Abbrev [36] 0xc5:0x14 DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.byte	58
	.byte	140
	.byte	48
	.byte	226
	.byte	142
	.byte	121
	.byte	69
	.byte	62
	.long	.Linfo_string274        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	27                      # Abbrev [27] 0xd9:0xb DW_TAG_variable
	.long	.Linfo_string275        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	22                      # Abbrev [22] 0xe4:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string185        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xf0:0xb DW_TAG_variable
	.long	.Linfo_string276        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0xfb:0xf DW_TAG_variable
	.long	.Ldebug_loc120          # DW_AT_location
	.long	.Linfo_string277        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x10b:0x5 DW_TAG_pointer_type
	.long	.Lsection_info+1623     # DW_AT_type
	.byte	0                       # End Of Children Mark
.Lcu_begin18:
	.long	398                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x187 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string94         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string95         # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
	.byte	8                       # Abbrev [8] 0x2a:0x11 DW_TAG_enumeration_type
	.byte	4                       # DW_AT_byte_size
	.byte	3                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0x2e:0x6 DW_TAG_enumerator
	.long	.Linfo_string74         # DW_AT_name
	.byte	0                       # DW_AT_const_value
	.byte	9                       # Abbrev [9] 0x34:0x6 DW_TAG_enumerator
	.long	.Linfo_string75         # DW_AT_name
	.byte	1                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x3b:0x138 DW_TAG_subprogram
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string121        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0x50:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc121          # DW_AT_location
	.long	.Linfo_string279        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x5f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc122          # DW_AT_location
	.long	.Linfo_string280        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+1869     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x6e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc123          # DW_AT_location
	.long	.Linfo_string281        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x7d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc124          # DW_AT_location
	.long	.Linfo_string282        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x8c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc125          # DW_AT_location
	.long	.Linfo_string283        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0x9b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc126          # DW_AT_location
	.long	.Linfo_string231        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	32                      # Abbrev [32] 0xaa:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc127          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	32                      # Abbrev [32] 0xb9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc128          # DW_AT_location
	.long	.Linfo_string284        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	34                      # Abbrev [34] 0xc8:0xb DW_TAG_formal_parameter
	.long	.Linfo_string285        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	37                      # Abbrev [37] 0xd3:0xb DW_TAG_formal_parameter
	.long	.Linfo_string177        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	390                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0xde:0xb DW_TAG_formal_parameter
	.long	.Linfo_string291        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	34                      # Abbrev [34] 0xe9:0xb DW_TAG_formal_parameter
	.long	.Linfo_string292        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	34                      # Abbrev [34] 0xf4:0xb DW_TAG_formal_parameter
	.long	.Linfo_string293        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	32                      # Abbrev [32] 0xff:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc134          # DW_AT_location
	.long	.Linfo_string294        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x10e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc133          # DW_AT_location
	.long	.Linfo_string290        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x11d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc132          # DW_AT_location
	.long	.Linfo_string289        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x12c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc131          # DW_AT_location
	.long	.Linfo_string288        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	32                      # Abbrev [32] 0x13b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc130          # DW_AT_location
	.long	.Linfo_string287        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x14a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string286        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	.Lsection_info+1864     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x155:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string278        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	371                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x163:0xf DW_TAG_variable
	.long	.Ldebug_loc129          # DW_AT_location
	.long	.Linfo_string184        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x173:0xc DW_TAG_array_type
	.long	.Lsection_info+1869     # DW_AT_type
	.byte	5                       # Abbrev [5] 0x178:0x6 DW_TAG_subrange_type
	.long	383                     # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x17f:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	7                       # Abbrev [7] 0x186:0xb DW_TAG_typedef
	.long	42                      # DW_AT_type
	.long	.Linfo_string76         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	0                       # End Of Children Mark
.Lcu_begin19:
	.long	363                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x164 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string96         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string95         # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end22-.Lfunc_begin19 # DW_AT_high_pc
	.byte	39                      # Abbrev [39] 0x2a:0x15 DW_TAG_variable
	.long	.Linfo_string97         # DW_AT_name
	.long	63                      # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	start
	.byte	33                      # Abbrev [33] 0x3f:0xc DW_TAG_array_type
	.long	.Lsection_info+63       # DW_AT_type
	.byte	5                       # Abbrev [5] 0x44:0x6 DW_TAG_subrange_type
	.long	75                      # DW_AT_type
	.byte	64                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x4b:0x7 DW_TAG_base_type
	.long	.Linfo_string50         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	39                      # Abbrev [39] 0x52:0x15 DW_TAG_variable
	.long	.Linfo_string98         # DW_AT_name
	.long	63                      # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	elapsed
	.byte	28                      # Abbrev [28] 0x67:0x25 DW_TAG_subprogram
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string122        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0x7c:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string233        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x8c:0x18 DW_TAG_subprogram
	.long	.Linfo_string101        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+63       # DW_AT_type
                                        # DW_AT_APPLE_optimized
	.byte	1                       # DW_AT_inline
	.byte	27                      # Abbrev [27] 0x98:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xa4:0x41 DW_TAG_subprogram
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string123        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0xb9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc135          # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	41                      # Abbrev [41] 0xc8:0x1c DW_TAG_inlined_subroutine
	.long	140                     # DW_AT_abstract_origin
	.quad	.Ltmp1350               # DW_AT_low_pc
	.long	.Ltmp1351-.Ltmp1350     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	42                      # Abbrev [42] 0xdb:0x8 DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	117
	.byte	0
	.long	152                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xe5:0x60 DW_TAG_subprogram
	.quad	.Lfunc_begin21          # DW_AT_low_pc
	.long	.Lfunc_end21-.Lfunc_begin21 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string124        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	32                      # Abbrev [32] 0xfa:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc136          # DW_AT_location
	.long	.Linfo_string233        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x109:0xf DW_TAG_variable
	.long	.Ldebug_loc138          # DW_AT_location
	.long	.Linfo_string295        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	30                      # Abbrev [30] 0x118:0xf DW_TAG_variable
	.long	.Ldebug_loc139          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	.Lsection_info+63       # DW_AT_type
	.byte	41                      # Abbrev [41] 0x127:0x1d DW_TAG_inlined_subroutine
	.long	140                     # DW_AT_abstract_origin
	.quad	.Ltmp1358               # DW_AT_low_pc
	.long	.Ltmp1359-.Ltmp1358     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	43                      # Abbrev [43] 0x13a:0x9 DW_TAG_variable
	.long	.Ldebug_loc137          # DW_AT_location
	.long	152                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	44                      # Abbrev [44] 0x145:0x29 DW_TAG_subprogram
	.quad	.Lfunc_begin22          # DW_AT_low_pc
	.long	.Lfunc_end22-.Lfunc_begin22 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string125        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+63       # DW_AT_type
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	29                      # Abbrev [29] 0x15e:0xf DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	85
	.byte	147
	.byte	4
	.long	.Linfo_string233        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	.Lsection_info+322      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Lcu_begin20:
	.long	167                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string99         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string95         # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.quad	.Lfunc_begin23          # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin23 # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2a:0x49 DW_TAG_subprogram
	.quad	.Lfunc_begin23          # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin23 # DW_AT_high_pc
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string126        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
                                        # DW_AT_APPLE_optimized
	.byte	45                      # Abbrev [45] 0x3f:0x15 DW_TAG_variable
	.long	.Linfo_string100        # DW_AT_name
	.long	.Lsection_info+322      # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	wtime_.sec
	.byte	32                      # Abbrev [32] 0x54:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc140          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	.Lsection_info+3421     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x63:0xf DW_TAG_variable
	.long	.Ldebug_loc141          # DW_AT_location
	.long	.Linfo_string229        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.long	115                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x73:0x21 DW_TAG_structure_type
	.long	.Linfo_string300        # DW_AT_name
	.byte	16                      # DW_AT_byte_size
	.byte	29                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0x7b:0xc DW_TAG_member
	.long	.Linfo_string296        # DW_AT_name
	.long	148                     # DW_AT_type
	.byte	29                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	18                      # Abbrev [18] 0x87:0xc DW_TAG_member
	.long	.Linfo_string298        # DW_AT_name
	.long	159                     # DW_AT_type
	.byte	29                      # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x94:0xb DW_TAG_typedef
	.long	.Lsection_info+2343     # DW_AT_type
	.long	.Linfo_string297        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	139                     # DW_AT_decl_line
	.byte	46                      # Abbrev [46] 0x9f:0xb DW_TAG_typedef
	.long	.Lsection_info+2343     # DW_AT_type
	.long	.Linfo_string299        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.byte	0                       # End Of Children Mark
	.section	.debug_ranges,"",@progbits
.Ldebug_range:
	.section	.debug_macinfo,"",@progbits
.Ldebug_macinfo:
.Lcu_macro_begin0:
.Lcu_macro_begin1:
.Lcu_macro_begin2:
.Lcu_macro_begin3:
.Lcu_macro_begin4:
.Lcu_macro_begin5:
.Lcu_macro_begin6:
.Lcu_macro_begin7:
.Lcu_macro_begin8:
.Lcu_macro_begin9:
.Lcu_macro_begin10:
.Lcu_macro_begin11:
.Lcu_macro_begin12:
.Lcu_macro_begin13:
.Lcu_macro_begin14:
.Lcu_macro_begin15:
.Lcu_macro_begin16:
.Lcu_macro_begin17:
.Lcu_macro_begin18:
.Lcu_macro_begin19:
.Lcu_macro_begin20:
	.byte	0                       # End Of Macro List Mark
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0 # Length of Public Names Info
.LpubNames_begin0:
	.short	2                       # DWARF Version
	.long	.Lcu_begin0             # Offset of Compilation Unit Info
	.long	2430                    # Compilation Unit Length
	.long	455                     # DIE offset
	.asciz	"iend"                  # External Name
	.long	1386                    # DIE offset
	.asciz	"itmax"                 # External Name
	.long	1119                    # DIE offset
	.asciz	"qs"                    # External Name
	.long	1302                    # DIE offset
	.asciz	"rsdnm"                 # External Name
	.long	1248                    # DIE offset
	.asciz	"omega"                 # External Name
	.long	1185                    # DIE offset
	.asciz	"ipr"                   # External Name
	.long	644                     # DIE offset
	.asciz	"dx1"                   # External Name
	.long	665                     # DIE offset
	.asciz	"dx2"                   # External Name
	.long	686                     # DIE offset
	.asciz	"dx3"                   # External Name
	.long	707                     # DIE offset
	.asciz	"dx4"                   # External Name
	.long	728                     # DIE offset
	.asciz	"dx5"                   # External Name
	.long	371                     # DIE offset
	.asciz	"nx0"                   # External Name
	.long	91                      # DIE offset
	.asciz	"dzeta"                 # External Name
	.long	112                     # DIE offset
	.asciz	"tx1"                   # External Name
	.long	133                     # DIE offset
	.asciz	"tx2"                   # External Name
	.long	154                     # DIE offset
	.asciz	"tx3"                   # External Name
	.long	1080                    # DIE offset
	.asciz	"flux"                  # External Name
	.long	560                     # DIE offset
	.asciz	"ji1"                   # External Name
	.long	581                     # DIE offset
	.asciz	"ji2"                   # External Name
	.long	301                     # DIE offset
	.asciz	"nx"                    # External Name
	.long	329                     # DIE offset
	.asciz	"ny"                    # External Name
	.long	350                     # DIE offset
	.asciz	"nz"                    # External Name
	.long	1038                    # DIE offset
	.asciz	"rsd"                   # External Name
	.long	1323                    # DIE offset
	.asciz	"errnm"                 # External Name
	.long	1542                    # DIE offset
	.asciz	"ce"                    # External Name
	.long	749                     # DIE offset
	.asciz	"dy1"                   # External Name
	.long	770                     # DIE offset
	.asciz	"dy2"                   # External Name
	.long	791                     # DIE offset
	.asciz	"dy3"                   # External Name
	.long	476                     # DIE offset
	.asciz	"jst"                   # External Name
	.long	812                     # DIE offset
	.asciz	"dy4"                   # External Name
	.long	833                     # DIE offset
	.asciz	"dy5"                   # External Name
	.long	1164                    # DIE offset
	.asciz	"rho_i"                 # External Name
	.long	1581                    # DIE offset
	.asciz	"maxtime"               # External Name
	.long	392                     # DIE offset
	.asciz	"ny0"                   # External Name
	.long	175                     # DIE offset
	.asciz	"ty1"                   # External Name
	.long	196                     # DIE offset
	.asciz	"ty2"                   # External Name
	.long	217                     # DIE offset
	.asciz	"ty3"                   # External Name
	.long	42                      # DIE offset
	.asciz	"dxi"                   # External Name
	.long	854                     # DIE offset
	.asciz	"dz1"                   # External Name
	.long	875                     # DIE offset
	.asciz	"dz2"                   # External Name
	.long	896                     # DIE offset
	.asciz	"dz3"                   # External Name
	.long	917                     # DIE offset
	.asciz	"dz4"                   # External Name
	.long	938                     # DIE offset
	.asciz	"dz5"                   # External Name
	.long	1059                    # DIE offset
	.asciz	"frct"                  # External Name
	.long	413                     # DIE offset
	.asciz	"nz0"                   # External Name
	.long	1227                    # DIE offset
	.asciz	"dt"                    # External Name
	.long	959                     # DIE offset
	.asciz	"dssp"                  # External Name
	.long	1365                    # DIE offset
	.asciz	"ttotal"                # External Name
	.long	70                      # DIE offset
	.asciz	"deta"                  # External Name
	.long	238                     # DIE offset
	.asciz	"tz1"                   # External Name
	.long	259                     # DIE offset
	.asciz	"tz2"                   # External Name
	.long	280                     # DIE offset
	.asciz	"tz3"                   # External Name
	.long	497                     # DIE offset
	.asciz	"jend"                  # External Name
	.long	518                     # DIE offset
	.asciz	"ii1"                   # External Name
	.long	539                     # DIE offset
	.asciz	"ii2"                   # External Name
	.long	602                     # DIE offset
	.asciz	"ki1"                   # External Name
	.long	623                     # DIE offset
	.asciz	"ki2"                   # External Name
	.long	1428                    # DIE offset
	.asciz	"a"                     # External Name
	.long	1206                    # DIE offset
	.asciz	"inorm"                 # External Name
	.long	1500                    # DIE offset
	.asciz	"c"                     # External Name
	.long	1521                    # DIE offset
	.asciz	"d"                     # External Name
	.long	1652                    # DIE offset
	.asciz	"main"                  # External Name
	.long	1479                    # DIE offset
	.asciz	"b"                     # External Name
	.long	1602                    # DIE offset
	.asciz	"timeron"               # External Name
	.long	434                     # DIE offset
	.asciz	"ist"                   # External Name
	.long	980                     # DIE offset
	.asciz	"u"                     # External Name
	.long	1269                    # DIE offset
	.asciz	"tolrsd"                # External Name
	.long	1407                    # DIE offset
	.asciz	"invert"                # External Name
	.long	1344                    # DIE offset
	.asciz	"frc"                   # External Name
	.long	0                       # End Mark
.LpubNames_end0:
	.long	.LpubNames_end1-.LpubNames_begin1 # Length of Public Names Info
.LpubNames_begin1:
	.short	2                       # DWARF Version
	.long	.Lcu_begin1             # Offset of Compilation Unit Info
	.long	543                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"read_input"            # External Name
	.long	0                       # End Mark
.LpubNames_end1:
	.long	.LpubNames_end2-.LpubNames_begin2 # Length of Public Names Info
.LpubNames_begin2:
	.short	2                       # DWARF Version
	.long	.Lcu_begin2             # Offset of Compilation Unit Info
	.long	64                      # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"domain"                # External Name
	.long	0                       # End Mark
.LpubNames_end2:
	.long	.LpubNames_end3-.LpubNames_begin3 # Length of Public Names Info
.LpubNames_begin3:
	.short	2                       # DWARF Version
	.long	.Lcu_begin3             # Offset of Compilation Unit Info
	.long	64                      # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"setcoeff"              # External Name
	.long	0                       # End Mark
.LpubNames_end3:
	.long	.LpubNames_end4-.LpubNames_begin4 # Length of Public Names Info
.LpubNames_begin4:
	.short	2                       # DWARF Version
	.long	.Lcu_begin4             # Offset of Compilation Unit Info
	.long	139                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"setbv"                 # External Name
	.long	0                       # End Mark
.LpubNames_end4:
	.long	.LpubNames_end5-.LpubNames_begin5 # Length of Public Names Info
.LpubNames_begin5:
	.short	2                       # DWARF Version
	.long	.Lcu_begin5             # Offset of Compilation Unit Info
	.long	187                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"exact"                 # External Name
	.long	0                       # End Mark
.LpubNames_end5:
	.long	.LpubNames_end6-.LpubNames_begin6 # Length of Public Names Info
.LpubNames_begin6:
	.short	2                       # DWARF Version
	.long	.Lcu_begin6             # Offset of Compilation Unit Info
	.long	280                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"setiv"                 # External Name
	.long	0                       # End Mark
.LpubNames_end6:
	.long	.LpubNames_end7-.LpubNames_begin7 # Length of Public Names Info
.LpubNames_begin7:
	.short	2                       # DWARF Version
	.long	.Lcu_begin7             # Offset of Compilation Unit Info
	.long	548                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"erhs"                  # External Name
	.long	0                       # End Mark
.LpubNames_end7:
	.long	.LpubNames_end8-.LpubNames_begin8 # Length of Public Names Info
.LpubNames_begin8:
	.short	2                       # DWARF Version
	.long	.Lcu_begin8             # Offset of Compilation Unit Info
	.long	235                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"ssor"                  # External Name
	.long	0                       # End Mark
.LpubNames_end8:
	.long	.LpubNames_end9-.LpubNames_begin9 # Length of Public Names Info
.LpubNames_begin9:
	.short	2                       # DWARF Version
	.long	.Lcu_begin9             # Offset of Compilation Unit Info
	.long	552                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"rhs"                   # External Name
	.long	0                       # End Mark
.LpubNames_end9:
	.long	.LpubNames_end10-.LpubNames_begin10 # Length of Public Names Info
.LpubNames_begin10:
	.short	2                       # DWARF Version
	.long	.Lcu_begin10            # Offset of Compilation Unit Info
	.long	320                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"l2norm"                # External Name
	.long	0                       # End Mark
.LpubNames_end10:
	.long	.LpubNames_end11-.LpubNames_begin11 # Length of Public Names Info
.LpubNames_begin11:
	.short	2                       # DWARF Version
	.long	.Lcu_begin11            # Offset of Compilation Unit Info
	.long	207                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"jacld"                 # External Name
	.long	0                       # End Mark
.LpubNames_end11:
	.long	.LpubNames_end12-.LpubNames_begin12 # Length of Public Names Info
.LpubNames_begin12:
	.short	2                       # DWARF Version
	.long	.Lcu_begin12            # Offset of Compilation Unit Info
	.long	532                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"blts"                  # External Name
	.long	0                       # End Mark
.LpubNames_end12:
	.long	.LpubNames_end13-.LpubNames_begin13 # Length of Public Names Info
.LpubNames_begin13:
	.short	2                       # DWARF Version
	.long	.Lcu_begin13            # Offset of Compilation Unit Info
	.long	207                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"jacu"                  # External Name
	.long	0                       # End Mark
.LpubNames_end13:
	.long	.LpubNames_end14-.LpubNames_begin14 # Length of Public Names Info
.LpubNames_begin14:
	.short	2                       # DWARF Version
	.long	.Lcu_begin14            # Offset of Compilation Unit Info
	.long	426                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"buts"                  # External Name
	.long	0                       # End Mark
.LpubNames_end14:
	.long	.LpubNames_end15-.LpubNames_begin15 # Length of Public Names Info
.LpubNames_begin15:
	.short	2                       # DWARF Version
	.long	.Lcu_begin15            # Offset of Compilation Unit Info
	.long	135                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"error"                 # External Name
	.long	0                       # End Mark
.LpubNames_end15:
	.long	.LpubNames_end16-.LpubNames_begin16 # Length of Public Names Info
.LpubNames_begin16:
	.short	2                       # DWARF Version
	.long	.Lcu_begin16            # Offset of Compilation Unit Info
	.long	277                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"pintgr"                # External Name
	.long	0                       # End Mark
.LpubNames_end16:
	.long	.LpubNames_end17-.LpubNames_begin17 # Length of Public Names Info
.LpubNames_begin17:
	.short	2                       # DWARF Version
	.long	.Lcu_begin17            # Offset of Compilation Unit Info
	.long	273                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"verify"                # External Name
	.long	0                       # End Mark
.LpubNames_end17:
	.long	.LpubNames_end18-.LpubNames_begin18 # Length of Public Names Info
.LpubNames_begin18:
	.short	2                       # DWARF Version
	.long	.Lcu_begin18            # Offset of Compilation Unit Info
	.long	402                     # Compilation Unit Length
	.long	59                      # DIE offset
	.asciz	"print_results"         # External Name
	.long	0                       # End Mark
.LpubNames_end18:
	.long	.LpubNames_end19-.LpubNames_begin19 # Length of Public Names Info
.LpubNames_begin19:
	.short	2                       # DWARF Version
	.long	.Lcu_begin19            # Offset of Compilation Unit Info
	.long	367                     # Compilation Unit Length
	.long	164                     # DIE offset
	.asciz	"timer_start"           # External Name
	.long	229                     # DIE offset
	.asciz	"timer_stop"            # External Name
	.long	103                     # DIE offset
	.asciz	"timer_clear"           # External Name
	.long	140                     # DIE offset
	.asciz	"elapsed_time"          # External Name
	.long	325                     # DIE offset
	.asciz	"timer_read"            # External Name
	.long	42                      # DIE offset
	.asciz	"start"                 # External Name
	.long	82                      # DIE offset
	.asciz	"elapsed"               # External Name
	.long	0                       # End Mark
.LpubNames_end19:
	.long	.LpubNames_end20-.LpubNames_begin20 # Length of Public Names Info
.LpubNames_begin20:
	.short	2                       # DWARF Version
	.long	.Lcu_begin20            # Offset of Compilation Unit Info
	.long	171                     # Compilation Unit Length
	.long	42                      # DIE offset
	.asciz	"wtime_"                # External Name
	.long	63                      # DIE offset
	.asciz	"sec"                   # External Name
	.long	0                       # End Mark
.LpubNames_end20:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0 # Length of Public Types Info
.LpubTypes_begin0:
	.short	2                       # DWARF Version
	.long	.Lcu_begin0             # Offset of Compilation Unit Info
	.long	2430                    # Compilation Unit Length
	.long	1886                    # DIE offset
	.asciz	"FILE"                  # External Name
	.long	2410                    # DIE offset
	.asciz	"long unsigned int"     # External Name
	.long	322                     # DIE offset
	.asciz	"int"                   # External Name
	.long	2332                    # DIE offset
	.asciz	"__off_t"               # External Name
	.long	2350                    # DIE offset
	.asciz	"unsigned short"        # External Name
	.long	2399                    # DIE offset
	.asciz	"size_t"                # External Name
	.long	2381                    # DIE offset
	.asciz	"_IO_lock_t"            # External Name
	.long	1897                    # DIE offset
	.asciz	"_IO_FILE"              # External Name
	.long	2388                    # DIE offset
	.asciz	"__off64_t"             # External Name
	.long	2282                    # DIE offset
	.asciz	"_IO_marker"            # External Name
	.long	2357                    # DIE offset
	.asciz	"signed char"           # External Name
	.long	2343                    # DIE offset
	.asciz	"long int"              # External Name
	.long	63                      # DIE offset
	.asciz	"double"                # External Name
	.long	1623                    # DIE offset
	.asciz	"logical"               # External Name
	.long	1869                    # DIE offset
	.asciz	"char"                  # External Name
	.long	0                       # End Mark
.LpubTypes_end0:
	.long	.LpubTypes_end1-.LpubTypes_begin1 # Length of Public Types Info
.LpubTypes_begin1:
	.short	2                       # DWARF Version
	.long	.Lcu_begin1             # Offset of Compilation Unit Info
	.long	543                     # Compilation Unit Length
	.long	96                      # DIE offset
	.asciz	"FILE"                  # External Name
	.long	107                     # DIE offset
	.asciz	"_IO_FILE"              # External Name
	.long	492                     # DIE offset
	.asciz	"_IO_marker"            # External Name
	.long	0                       # End Mark
.LpubTypes_end1:
	.long	.LpubTypes_end2-.LpubTypes_begin2 # Length of Public Types Info
.LpubTypes_begin2:
	.short	2                       # DWARF Version
	.long	.Lcu_begin18            # Offset of Compilation Unit Info
	.long	402                     # Compilation Unit Length
	.long	390                     # DIE offset
	.asciz	"logical"               # External Name
	.long	0                       # End Mark
.LpubTypes_end2:
	.long	.LpubTypes_end3-.LpubTypes_begin3 # Length of Public Types Info
.LpubTypes_begin3:
	.short	2                       # DWARF Version
	.long	.Lcu_begin20            # Offset of Compilation Unit Info
	.long	171                     # Compilation Unit Length
	.long	148                     # DIE offset
	.asciz	"__time_t"              # External Name
	.long	115                     # DIE offset
	.asciz	"timeval"               # External Name
	.long	159                     # DIE offset
	.asciz	"__suseconds_t"         # External Name
	.long	0                       # End Mark
.LpubTypes_end3:

	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.ident	"clang version 3.9.0 (trunk)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
